{"version":3,"sources":["sf-a_init.js","sf-dom.js","sf-loader.js","sf-component.js","sf-model.js","sf-a_polyfill.js","sf-controller.js","sf-e-ajax.js","sf-z_end.js","sf-router.js","sf-virtual_scroll.js"],"names":["global","factory","exports","module","sf","window","this","undefined","document","internal","arguments","constructor","Function","loader","onFinish","apply","isEmptyObject","obj","key","compareObject","obj1","obj2","i","hiddenProperty","property","value","Object","defineProperty","enumerable","configurable","deepProperty","path","length","regex","getQuotes","avoidQuotes","strictVar","dom","selector","context","parseElement","String","querySelectorAll","$","self","findOne","querySelector","parent","element","closest","matches","parentElement","prevAll","isNext","result","findNodes","nextSibling","previousSibling","push","nextAll","on","event","callback","once","tempCallback","ev","target","addEventListener","capture","sf$eventListener","off","events","split","ref","removeEventListener","splice","animateCSS","animationName","duration","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","style","webkitAnimationDuration","animationDuration","list","classList","add","remove","setTimeout","emptyDOM","div","createElement","ul","tbody","tr","table","select","html","returnNode","tempDOM","indexOf","textContent","insertAdjacentHTML","item","elements","documentElement","domReady","body","haveSymbol","getSelector","childIndexes","untilElement","names","parentNode","id","test","unshift","tagName","e","join","array","substr","childNodes","loadedContent","totalContent","DOMWasLoaded","DOMReady","turnedOff","whenDOMReady","whenDOMLoaded","whenProgress","func","onProgress","f","css","s","rel","href","head","appendChild","js","type","async","src","console","warn","isQueued","domLoadEvent","model","queuePreprocess","domStateEvent","readyState","error","resourceWaitTimer","setInterval","waitResources","clearInterval","listener","controller","init","router","prototype","component","scope","registered","available","bases","for","name","extend","pending","base","outerHTML","triggerEvent","new","newElement","cloneNode","newID","setAttribute","sf$component","sf$componentFrom","newObj","root","Array","firstElementChild","destroy","DOMNodeRemoved","root_","run","bindingEnabled","processingElement","trimIndentation","text","indent","trim","replace","RegExp","bracketMatch","chackValidFunctionCall","allowedFunction","localEval","script","_model_","_modelScope","_content_","tempScript","preventExecution","check_","exec","log","_result_","_evaled_","eval","escapeEscapedQuote","unescapeEscapedQuote","elseIfHandle","else_","scopes","elseIf","elseValue","index","currentElement","previousElementSibling","getAttribute","modelName","$virtual","DOMCursor","modelKeys","modelRef","keys","templateParser_regex","REF_DIRECT","REF_IF","REF_EXEC","templateExec","parse","atIndex","parsed","data","if","templateParser","template","original","addresses","changesReference","pendingInsert","current","address","nodeType","refA","direct","full","match","cRef","dynamicFlag","parse_index","startFlag","attributes","a","refB","attribute","removeAttribute","sf$elementReferences","tDOM","insertBefore","syntheticCache","sf$cache","cache","modelRef_array","syntheticTemplate","changes","modelReference","newData","checkRelatedChanges","parseIndex","found","assign","haveChanges","temp","reverse","currentDOM","notExist","isEqualNode","replaceChild","dataParser","mask","runEval","preParsedReference","variableList","scopeMask","itemMask","preParsed","lastParsedIndex","prepared","actual","matched","slice","exist","charCodeAt","uniqueDataParser","take","passVar","currentIndex","strDeclare","firstTime","JSON","stringify","check","VarPass_","VarPass","s1","obtained","forEach","val","findElse","pop","shift","condition","bindArray","propertyName","targetNode","editProperty","refreshTimer","parentChilds","children","isKeyed","contains","eventVar","processElement","options","other","count","vEndRange","preparedLength","spacer","lastElementChild","height","reset","clearTimeout","reinitScroll","overflow","vDOM","theParent","update","index_a","other_sibling","other_parent","oldChild","referenceNode","create","vCursor","floor","insertAdjacentElement","currentRemoved","startRemove","refreshVirtualSpacer","propertyProxy","subject","lastLength","from","to","reinitCursor","o","resetViewport","matchLeft","refresh","real","limit","callback_","var","virtual_scroll","handle","elem","getElement","hardRefresh","softRefresh","virtualChilds","childElement","childElementCount","loopParser","method","items","extractPreprocess","sf$bindedKey","initBindingInformation","get","set","n","inputBoundFunction","bindInput","whichVar","alreadyInitialized","queued","parsePreprocess","ceiling","after","nextElementSibling","before","hasAttribute","removeModelBinding","sf$componentFor","modelFrom","components","everyRemovedNodes","nodes","MutationObserver","observe","everyRecords","record","removedNodes","records","childList","subtree","bindedKey","Number","Boolean","getOwnPropertyDescriptor","dcBracket","bindElement","proxyProperty","objValue","onChanges","properties","copy","addressed","addressAttributes","currentNode","attrs","indexes","innerHTML","addressStart","commentFlag","flag","createComment","textNode","createTextNode","search","extract","sort","b","checkList","full_","match_","findModelProperty","asArray","enclosedHTMLParse","excludes","writable","extracting","nodeName","enclosing","enclosed","nodeValue","modelElement","attr","varArgs","TypeError","nextSource","nextKey","hasOwnProperty","call","Element","CharacterData","DocumentType","removeChild","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","ownerDocument","NodeList","thisArg","location","origin","protocol","hostname","port","values","res","active","modelScope","bindedList","parentEl","bindedListIndex","listenSFClick","method_","preventDefault","globals","jsonpRequests","Request","requestOptions","globalsNoCallbacks","callbackName","defaults","url","toString","user","password","headers","xhrFields","statusCode","processData","dataType","contentType","timeout","fireCallback","globalCallbackValue","optionCallbackValue","_i","paramsPrefix","toUpperCase","stringData","serializeQuery","abortTimeout_1","callbackName_1","Date","now","callbackSplit","requestUrl","addVars","filter","el","script_1","onerror","xhr","XMLHttpRequest","requestParameters","open","xhrTimeout","postData","ArrayBuffer","Blob","Document","FormData","boundary","setRequestHeader","headerName","crossDomain","$2","host","onload","status","responseData","parseError","responseText","err","responseType","response","onabort","abort","send","RequestShortcut","args","_a","success","params","prefix","encodeURIComponent","concat","post","json","getJSON","postJSON","setup","ajax","loading","enabled","pauseRenderOnTransition","currentPage","initialized","currentRouterURL","popstateListener","routingError","routingBack","goto","pathname","beforeEvent","enable","load","onEvent","loaded","special","lazyViewPoint","history","pushState","RouterLoading","_scarlets","DOMReference","foundAction","last","afterEvent","title","oldURL","newURL","routerLoaded","aborted","back","styleInitialized","scrollingByScript","refreshScrollBounding","cursor","bounding","Math","prepareCount","offsetTop","initial","dCursor","scrollHeight","scrollTo","scroller","virtual","reduce","scrollTop","insertCount","removeUserScrollFocus","getAbsoluteHeight","styles","getComputedStyle","margin","parseInt","offsetHeight","force","checkCursorPosition","additionalScroll","moveTo","getElementById","sheet","insertRule","cssRules","initStyles","reinitOnly","elementLength","obtainElements","_onElementResize","offElementResize","visibleLength","clientHeight","ceilingHeight","floorHeight","fillViewport","updating","resetCeiling","previousCeiling","nextFloor","hitFloor","hitCeiling","_onElementResize_timer","scrollWidth","width","onElementResize","dynamicHeight","offsetTo","fromCeiling","scrollFocused","moveElementCursor","navigator","userAgent","staticHeight"],"mappings":"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","file":"scarletsframe.min.js","sourcesContent":["(function(global, factory){\r\n  if(typeof exports === 'object' && typeof module !== 'undefined') module.exports = factory(global);\r\n  else global.sf = factory(global);\r\n}(typeof window !== \"undefined\" ? window : this, (function(window){'use strict';\r\nif(typeof document === undefined)\r\n\tdocument = window.document;\r\n// ===== Module Init =====\r\nvar internal = {};\r\n\r\nvar sf = function(){\r\n\tif(arguments[0].constructor === Function){\r\n\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\t}\r\n};\r\n\r\nsf.internal = {};\r\nsf.regex = {\r\n\t// ToDo: Need help to skip escaped quote\r\n\tgetQuotes:/(['\"])[\\s\\S]*?[^\\\\]\\1/g,\r\n\tavoidQuotes:'(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)',\r\n\tstrictVar:'(?=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )'\r\n};\r\n\r\nfunction isEmptyObject(obj){\r\n\tfor(var key in obj){\r\n\t\treturn false;\r\n\t}\r\n\treturn true\r\n}\r\n\r\nfunction compareObject(obj1, obj2){\r\n\tif(!obj1 || !obj2)\r\n\t\treturn false;\r\n\r\n\tfor(var i in obj1){\r\n\t\tif(typeof obj1[i] !== 'object' && obj1[i] !== obj2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction hiddenProperty(obj, property, value){\r\n\tObject.defineProperty(obj, property, {\r\n\t\tenumerable: false,\r\n\t\tconfigurable: true,\r\n\t\tvalue: value\r\n\t});\r\n}\r\n\r\nfunction deepProperty(obj, path){\r\n  for(var i = 0; i < path.length; i++){\r\n    obj = obj[path[i]];\r\n    if(obj === undefined) return obj;\r\n  }\r\n  return obj;\r\n}","sf.dom = function(selector, context){\r\n\tif(selector[0] === '<') return sf.dom.parseElement(selector);\r\n\tif(selector.constructor !== String) return selector;\r\n\r\n\tif(context) return context.querySelectorAll(selector);\r\n\treturn document.querySelectorAll(selector);\r\n}\r\n\r\nvar $ = sf.dom; // Shortcut\r\n\r\n;(function(){\r\n\tvar self = sf.dom;\r\n\r\n\tself.findOne = function(selector, context){\r\n\t\tif(context !== undefined) return context.querySelector(selector);\r\n\t\treturn document.querySelector(selector);\r\n\t}\r\n\r\n\tself.parent = function(element, selector){\r\n\t\tif(element.closest) return element.closest(selector);\r\n\r\n\t\tdo {\r\n\t\t\tif(element.matches(selector) === true)\r\n\t\t\t\treturn element;\r\n\r\n\t\t\telement = element.parentElement;\r\n\t\t} while (element !== null);\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tself.prevAll = function(element, selector, isNext){\r\n\t\tvar result = [];\r\n\t\tvar findNodes = selector === null || selector.constructor !== String ? true : false;\r\n\r\n\t\t// Skip current element\r\n\t\telement = isNext ? element.nextSibling : element.previousSibling;\r\n\t\twhile (element !== null) {\r\n\t\t\tif(findNodes === false && element.matches(selector) === true)\r\n\t\t\t\tresult.push(element);\r\n\t\t\telse{\r\n\t\t\t\tif(element === selector)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tresult.push(element);\r\n\t\t\t}\r\n\r\n\t\t\tif(isNext)\r\n\t\t\t\telement = element.nextSibling;\r\n\t\t\telse\r\n\t\t\t\telement = element.previousSibling;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.nextAll = function(element, selector){\r\n\t\treturn self.prevAll(element, selector, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen to an event\r\n\t * @param  Node \t\t\telement \tparent element\r\n\t * @param  string \t\t\tevent   \tevent name\r\n\t * @param  function|string  selector    callback function or selector\r\n\t * @param  function\t\t\tcallback    callback function\r\n\t * @param  boolean\t\t\tonce    \tcall once\r\n\t * @return null\r\n\t */\r\n\tself.on = function(element, event, selector, callback, once){\r\n\t\tif(typeof element === 'string'){\r\n\t\t\telement = document;\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = event;\r\n\t\t\tevent = element;\r\n\t\t}\r\n\r\n\t\tif(typeof selector === 'function'){\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = null;\r\n\t\t}\r\n\r\n\t\tif(selector){\r\n\t\t\tvar tempCallback = callback;\r\n\t\t\tcallback = function(ev){\r\n\t\t\t\tif(self.parent(ev.target, selector) !== null)\r\n\t\t\t\t\ttempCallback(ev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcallback.selector = selector;\r\n\t\tcallback.once = once;\r\n\t\telement.addEventListener(event, callback, {capture:true, once:once === true});\r\n\r\n\t\t// Save event listener\r\n\t\tif(element.sf$eventListener === undefined)\r\n\t\t\telement.sf$eventListener = {};\r\n\r\n\t\tif(element.sf$eventListener[event] === undefined)\r\n\t\t\telement.sf$eventListener[event] = [];\r\n\r\n\t\telement.sf$eventListener[event].push(callback);\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.once = function(element, event, selector, callback){\r\n\t\tself.on(element, event, selector, callback, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event listener\r\n\t * @param  Node \telement \tparent element\r\n\t * @param  string \tevent   \tevent name\r\n\t * @param  string  \tselector    selector\r\n\t * @return null\r\n\t */\r\n\tself.off = function(element, event, selector){\r\n\t\t// Remove all event\r\n\t\tif(event === undefined){\r\n\t\t\tif(element.sf$eventListener === undefined)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar events = element.sf$eventListener[event];\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar events = event.split(' ');\r\n\t\tif(events.length !== 1){\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove listener\r\n\t\tif(element.sf$eventListener === undefined)\r\n\t\t\treturn;\r\n\r\n\t\tvar ref = element.sf$eventListener;\r\n\t\tif(ref !== undefined && ref[event] !== undefined){\r\n\t\t\tfor (var i = ref[event].length - 1; i >= 0; i--) {\r\n\t\t\t\tif(selector && ref[event][i].selector !== selector)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\telement.removeEventListener(event, ref[event].splice(i, 1), true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.animateCSS = function(element, animationName, callback, duration) {\r\n\t\tvar animationEnd = {\r\n\t\t\tanimation: 'animationend',\r\n\t\t\tOAnimation: 'oAnimationEnd',\r\n\t\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t\t};\r\n\r\n\t\tfor (var t in animationEnd){\r\n\t\t\tif(element.style[t] !== undefined){\r\n\t\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(duration){\r\n\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t}\r\n\r\n\t\tvar list = ('animated ' + animationName).split(' ');\r\n\t\telement.classList.add.apply(element.classList, list);\r\n\t\t$.once(element, animationEnd, function(){\r\n\t\t\telement.classList.remove.apply(element.classList, list);\r\n\t\t\t\r\n\t\t\tif(duration) setTimeout(function(){\r\n\t\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t\t}, 1);\r\n\r\n\t\t\tif(typeof callback === 'function') callback();\r\n\t\t});\r\n\t}\r\n\r\n\tvar emptyDOM = {\r\n\t\tdiv:document.createElement('div'),\r\n\t\tul:document.createElement('ul'),\r\n\t\ttbody:document.createElement('tbody'),\r\n\t\ttr:document.createElement('tr'),\r\n\t\ttable:document.createElement('table'),\r\n\t\tselect:document.createElement('select'),\r\n\t};\r\n\tself.parseElement = function(html, returnNode){\r\n\t\tvar result = [];\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\r\n        if(html.indexOf('<li') === 0) tempDOM = emptyDOM.ul;\r\n        if(html.indexOf('<tr') === 0) tempDOM = emptyDOM.tbody;\r\n        if(html.indexOf('<td') === 0 || html.indexOf('<th') === 0) tempDOM = emptyDOM.tr;\r\n        if(html.indexOf('<tbody') === 0) tempDOM = emptyDOM.table;\r\n        if(html.indexOf('<option') === 0) tempDOM = emptyDOM.select;\r\n\r\n\t\ttempDOM.textContent = '';\r\n\t\ttempDOM.insertAdjacentHTML('afterBegin', html);\r\n\r\n\t\tvar ref = tempDOM[returnNode ? 'childNodes' : 'children'];\r\n\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\tresult.push(ref.item(i));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tself.remove = function(elements){\r\n\t\tif(elements.remove !== undefined)\r\n\t\t\treturn elements.remove();\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\telements[i].remove();\r\n\t\t}\r\n\t}\r\n\r\n\tvar documentElement = null;\r\n\tsetTimeout(function(){\r\n\t\tsf.loader.domReady(function(){\r\n\t\t\tdocumentElement = document.body.parentElement;\r\n\t\t});\r\n\t}, 1);\r\n\r\n\tvar haveSymbol = /[~`!@#$%^&*()+={}|[\\]\\\\:\";'<>?,./ ]/;\r\n\tself.getSelector = function(element, childIndexes, untilElement){\r\n\t\tvar names = [];\r\n\t\tif(untilElement === undefined) untilElement = documentElement;\r\n\r\n\t\tvar previousSibling = childIndexes ? 'previousSibling' : 'previousElementSibling';\r\n\r\n\t\twhile(element.parentNode !== null){\r\n\t\t\tif(element.id && !haveSymbol.test(element.id)){\r\n\t\t\t\tnames.unshift('#'+element.id);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(element === untilElement){\r\n\t\t\t\t\tif(childIndexes === undefined)\r\n\t\t\t\t\t\tnames.unshift(element.tagName);\r\n\t\t\t\t\telse names.unshift(0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar e = element;\r\n\t\t\t\t\tvar i = childIndexes ? 0 : 1;\r\n\r\n\t\t\t\t\twhile(e[previousSibling]){\r\n\t\t\t\t\t\te = e[previousSibling];\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(childIndexes)\r\n\t\t\t\t\t\tnames.unshift(i);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tnames.unshift(\":nth-child(\"+i+\")\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t\tif(element === null)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndexes)\r\n\t\t\treturn names;\r\n\t\treturn names.join(\" > \");\r\n\t}\r\n\r\n\tself.childIndexes = function(array, context){\r\n\t\tvar element = context || documentElement;\r\n\t\tvar i = 1;\r\n\r\n\t\tif(array[0].constructor === String && element.id !== array[0].substr(1))\r\n\t\t\telement = element.querySelector(array[0]);\r\n\r\n\t\telse if(array.length === 1)\r\n\t\t\treturn element;\r\n\r\n\t\tfor (i = i; i < array.length; i++) {\r\n\t\t\telement = element.childNodes.item(array[i]);\r\n\r\n\t\t\tif(element === null)\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n})();","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 0;\r\n\tself.DOMWasLoaded = false;\r\n\tself.DOMReady = false;\r\n\tself.turnedOff = true;\r\n\r\n\tvar whenDOMReady = [];\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\tself.off = function(){\r\n\t\tself.turnedOff = true;\r\n\t}\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.domReady = function(func){\r\n\t\tif(self.DOMReady) return func();\r\n\t\tif(whenDOMReady.indexOf(func) !== -1) return;\r\n\t\twhenDOMReady.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('link');\r\n\t        s.rel = 'stylesheet';\r\n\t        s.href = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tself.js = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('script');\r\n\t        s.type = \"text/javascript\";\r\n\t        s.async = true;\r\n\t        s.src = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(function(){\r\n\t\tif(self.totalContent === 0 && !self.turnedOff){\r\n\t\t\tself.loadedContent = self.totalContent = 1;\r\n\t\t\tconsole.warn(\"If you don't use content loader feature, please turn it off with `sf.loader.off()`\");\r\n\t\t}\r\n\t}, 10000);\r\n\r\n\r\n\tvar isQueued = false;\r\n\tvar lastState = '';\r\n\tdocument.addEventListener(\"load\", function domLoadEvent(event){\r\n\t\t// Add processing class to queued element\r\n\t\tif(isQueued === false && document.body){\r\n\t\t\tdocument.removeEventListener('load', domLoadEvent, true);\r\n\r\n\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tfor (var i = 0; i < isQueued.length; i++) {\r\n\t\t\t\tisQueued[i].classList.add('sf-dom-queued');\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued.length === 0) isQueued = false;\r\n\r\n\t\t\tif(lastState === 'loading'){\r\n\t\t\t\tvar repeatedList = $('[sf-repeat-this]', document.body);\r\n\t\t\t\tfor (var i = 0; i < repeatedList.length; i++) {\r\n\t\t\t\t\trepeatedList[i].classList.add('sf-dom-queued');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Find images\r\n\t\t\t\tvar temp = $('img:not(onload)[src]');\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tsf.loader.totalContent++;\r\n\t\t\t\t\ttemp[i].addEventListener('load', sf.loader.f, {once:true});\r\n\t\t\t\t\ttemp[i].addEventListener('error', sf.loader.f, {once:true});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, true);\r\n\r\n\tdocument.addEventListener('readystatechange', function domStateEvent(){\r\n\t\tif(document.readyState === 'interactive' || document.readyState === 'complete'){\r\n\t\t\tif(self.DOMReady === false){\r\n\t\t\t\tself.DOMReady = true;\r\n\t\t\t\tfor (var i = 0; i < whenDOMReady.length; i++) {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\twhenDOMReady[i]();\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued === false)\r\n\t\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tresourceWaitTimer = setInterval(waitResources, 100);\r\n\t\t\tdocument.removeEventListener('readystatechange', domStateEvent, true);\r\n\t\t}\r\n\t}, true);\r\n\r\n\tvar resourceWaitTimer = -1;\r\n\tfunction waitResources(){\r\n\t\tif(self.turnedOff === false && self.loadedContent < self.totalContent)\r\n\t\t\treturn;\r\n\r\n\t\tclearInterval(resourceWaitTimer);\r\n\r\n\t\tvar listener = sf.dom('script, link, img');\r\n\t\tfor (var i = 0; i < listener.length; i++) {\r\n\t\t\tlistener[i].removeEventListener('error', sf.loader.f);\r\n\t\t\tlistener[i].removeEventListener('load', sf.loader.f);\r\n\t\t}\r\n\r\n\t\tself.DOMWasLoaded = true;\r\n\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\ttry{\r\n\t\t\t\twhenDOMLoaded[i]();\r\n\t\t\t} catch(e){\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\twhenProgress.splice(0);\r\n\t\twhenDOMReady.splice(0);\r\n\t\twhenDOMLoaded.splice(0);\r\n\t\twhenDOMReady = whenDOMLoaded = null;\r\n\r\n\t\t// Last init\r\n\t\tsf.controller.init();\r\n\t\tsf.model.init(document.body, isQueued);\r\n\t\tsf.router.init();\r\n\r\n\t\tisQueued = null;\r\n\t}\r\n}\r\nsf.prototype.constructor = sf.loader.onFinish;","sf.component = new function(){\r\n\tvar self = this;\r\n\tvar scope = internal.component = {};\r\n\tself.registered = {};\r\n\tself.available = {};\r\n\r\n\tvar bases = {};\r\n\tvar events = {};\r\n\r\n\tself.for = function(name, func, extend){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(self.registered[name] === undefined)\r\n\t\t\tself.registered[name] = [func, sf.controller.pending[name], 0, false, extend];\r\n\t\tself.registered[name][0] = func;\r\n\t\tdelete sf.controller.pending[name];\r\n\t}\r\n\r\n\tself.event = function(name, func){\r\n\t\tevents[name] = func;\r\n\t}\r\n\r\n\tself.base = function(name, func){\r\n\t\tbases[name] = func;\r\n\t}\r\n\r\n\tself.html = function(name, outerHTML){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.html(name, outerHTML);\r\n\t\t\t});\r\n\r\n\t\tif(self.registered[name] === undefined)\r\n\t\t\tself.registered[name] = [false, false, 0, false];\r\n\t\tself.registered[name][3] = $.parseElement(outerHTML)[0];\r\n\t}\r\n\r\n\tscope.triggerEvent = function(name, event, obj){\r\n\t\tif(events[name] === undefined || events[name][event] === undefined)\r\n\t\t\treturn;\r\n\r\n\t\tevents[name][event](obj, event);\r\n\t}\r\n\r\n\tvar tempDOM = document.createElement('div');\r\n\tself.new = function(name, element){\r\n\t\tvar newElement = element === undefined;\r\n\t\tif(element === undefined){\r\n\t\t\tif(self.registered[name][3] === false){\r\n\t\t\t\tconsole.error(\"HTML content for '\"+name+\"' was not defined\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement = self.registered[name][3].cloneNode(true);\r\n\t\t}\r\n\r\n\t\tvar newID = name+'@'+(self.registered[name][2]++);\r\n\t\telement.setAttribute('sf-controller', newID);\r\n\t\telement.sf$component = true;\r\n\t\telement.sf$componentFrom = name;\r\n\r\n\t\tif(self.available[name] === undefined)\r\n\t\t\tself.available[name] = [];\r\n\r\n\t\tself.available[name].push(newID);\r\n\r\n\t\tvar newObj = sf.model.root[newID] = {};\r\n\t\tself.registered[name][0](newObj, sf.model);\r\n\r\n\t\tvar extend = self.registered[name][4];\r\n\t\tif(extend !== undefined){\r\n\t\t\tif(extend.constructor === Array){\r\n\t\t\t\tfor (var i = 0; i < extend.length; i++) {\r\n\t\t\t\t\tif(bases[extend[i]] === undefined)\r\n\t\t\t\t\t\treturn console.error(\"'\"+extend[i]+\"' base is not found\");\r\n\t\t\t\t\tbases[extend[i]](newObj, sf.model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(bases[extend] === undefined)\r\n\t\t\t\t\treturn console.error(\"'\"+extend+\"' base is not found\");\r\n\t\t\t\tbases[extend](newObj, sf.model);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(self.registered[name][1])\r\n\t\t\tself.registered[name][1](newObj, sf.model);\r\n\r\n\t\tscope.triggerEvent(name, 'created', newObj);\r\n\r\n\t\tif(newElement){\r\n\t\t\t// Wrap to temporary vDOM\r\n\t\t\ttempDOM.appendChild(element);\r\n\t\t\tsf.model.init(element);\r\n\t\t\telement = tempDOM.firstElementChild;\r\n\t\t\telement.remove();\r\n\r\n\t\t\telement.model = sf.model.root[newID];\r\n\t\t\telement.destroy = function(){\r\n\t\t\t\tif(this.parentElement === null)\r\n\t\t\t\t\tinternal.model.DOMNodeRemoved(this);\r\n\t\t\t\telse this.remove();\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\telement.model = sf.model.root[newID];\r\n\t\treturn newID;\r\n\t}\r\n};","// Data save and HTML content binding\r\nsf.model = function(scope){\r\n\tif(sf.component.registered[scope] !== undefined)\r\n\t\treturn root_(scope);\r\n\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\tif(sf.controller.pending[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n};\r\n\r\n(function(){\r\n\tvar self = sf.model;\r\n\tvar scope = internal.model = {};\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\r\n\tvar processingElement = null;\r\n\r\n\t// For debugging, normalize indentation\r\n\tfunction trimIndentation(text){\r\n\t\tvar indent = text.split(\"\\n\", 3);\r\n\t\tif(indent[0][0] !== ' ' || indent[0][0] !== \"\\t\")\r\n\t\t\tindent = indent[1];\r\n\t\telse indent = indent[0];\r\n\r\n\t\tif(indent === undefined) return text;\r\n\t\tindent = indent.length - indent.trim().length;\r\n\t\tif(indent === 0) return text;\r\n\t\treturn text.replace(RegExp('^([\\\\t ]{'+indent+'})', 'gm'), '');\r\n\t}\r\n\r\n\t// Secured evaluation\r\n\tvar bracketMatch = RegExp('([\\\\w.]*?[\\\\S\\\\s])\\\\('+sf.regex.avoidQuotes, 'g');\r\n\tvar chackValidFunctionCall = /[a-zA-Z0-9 \\]\\$\\)]/;\r\n\tvar allowedFunction = [':', 'for', 'if', 'while', '_content_.take', 'console.log'];\r\n\tvar localEval = function(script, _model_, _modelScope, _content_){\r\n\t\t\"use strict\";\r\n\r\n\t\t// ==== Security check ====\r\n\t\tvar tempScript = script;\r\n\r\n\t\t// Remove quotes\r\n\t\ttempScript = tempScript.replace(sf.regex.getQuotes, '\"Quotes\"');\r\n\r\n\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\tvar preventExecution = false;\r\n\t\tvar check_ = null;\r\n\t\twhile((check_ = bracketMatch.exec(tempScript)) !== null){\r\n\t\t\tcheck_[1] = check_[1].trim();\r\n\r\n\t\t\tif(allowedFunction.indexOf(check_[1]) === -1 &&\r\n\t\t\t\tcheck_[1].split('.')[0] !== '_modelScope' &&\r\n\t\t\t\tchackValidFunctionCall.test(check_[1][check_[1].length-1])\r\n\t\t\t){\r\n\t\t\t\tpreventExecution = check_[1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(preventExecution){\r\n\t\t\tconsole.error(\"Trying to executing unrecognized function (\"+preventExecution+\")\");\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\t\t// ==== Security check ended ====\r\n\t\r\n\t\tvar _result_ = '';\r\n\t\ttry{\r\n\t\t\tif(/@return /.test(script) === true){\r\n\t\t\t\tvar _evaled_ = eval('(function(){'+script.split('@return ').join('return ')+'})()');\r\n\t\t\t\treturn _result_ + _evaled_;\r\n\t\t\t}\r\n\t\t\telse var _evaled_ = eval(script);\r\n\t\t} catch(e){\r\n\t\t\tconsole.error(e);\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\t// Find an index for the element on the list\r\n\tself.index = function(element){\r\n\t\tvar i = -1;\r\n\t\tvar tagName = element.tagName;\r\n\t\tvar currentElement = element;\r\n\r\n\t\twhile(element !== null) {\r\n\t\t\tif(element.tagName === tagName)\r\n\t\t\t\ti++;\r\n\r\n\t\t\telement = element.previousElementSibling;\r\n\t\t}\r\n\r\n\t\tvar list = currentElement.getAttribute('sf-bind-list');\r\n\t\tif(!list) return i;\r\n\r\n\t\tvar ref = self.root[sf.controller.modelName(currentElement)][list];\r\n\t\tif(!ref.$virtual) return i;\r\n\r\n\t\treturn i + ref.$virtual.DOMCursor - 1;\r\n\t}\r\n\r\n\t// Declare model for the name with a function\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\t\t\r\n\t\tfunc(self(name), self);\r\n\t}\r\n\r\n\t// Get property of the model\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys;\r\n\t}\r\n\r\n\t// Escape the escaped quote\r\n\tfunction escapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*');\r\n\t}\r\n\r\n\tfunction unescapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\");\r\n\t}\r\n\r\n\tfunction elseIfHandle(else_, scopes){\r\n\t\tvar elseIf = else_.elseIf;\r\n\r\n\t\t// Else if\r\n\t\tfor (var i = 0; i < elseIf.length; i++) {\r\n\t\t\t// Check the condition\r\n\t\t\tscopes[0] = elseIf[i][0];\r\n\t\t\tif(!localEval.apply(self.root, scopes))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Get the value\r\n\t\t\tscopes[0] = elseIf[i][1];\r\n\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t}\r\n\r\n\t\t// Else\r\n\t\tif(else_.elseValue === null)\r\n\t\t\treturn '';\r\n\r\n\t\tscopes[0] = else_.elseValue;\r\n\t\treturn localEval.apply(self.root, scopes);\r\n\t}\r\n\r\n\t// ==== Template parser ====\r\n\tvar templateParser_regex = /{{%=([0-9]+)/gm;\r\n\tvar REF_DIRECT = 0, REF_IF = 1, REF_EXEC = 2;\r\n\tvar templateExec = function(parse, item, atIndex){\r\n\t\tvar parsed = {};\r\n\r\n\t\t// Get or evaluate static or dynamic data\r\n\t\tfor (var i = 0; i < parse.length; i++) {\r\n\t\t\tif(atIndex !== undefined && atIndex.indexOf(i) === -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar ref = parse[i];\r\n\t\t\tref.data[1] = item;\r\n\r\n\t\t\t// Direct evaluation type\r\n\t\t\tif(ref.type === REF_DIRECT || ref.type === REF_EXEC)\r\n\t\t\t\tparsed[i] = {type:ref.type, data:localEval.apply(self.root, ref.data)};\r\n\r\n\t\t\t// Conditional type\r\n\t\t\telse if(ref.type === REF_IF){\r\n\t\t\t\tvar scopes = ref.data;\r\n\t\t\t\tparsed[i] = {type:ref.type, data:''};\r\n\t\t\t\tscopes[0] = ref.if[0];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tparsed[i].data = elseIfHandle(ref, scopes);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscopes[0] = ref.if[1];\r\n\t\t\t\tparsed[i].data = localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n\r\n\tvar templateParser = function(template, item, original){\r\n\t\tvar html = original === true ? template.html : template.html.cloneNode(true);\r\n\t\tvar addresses = template.addresses;\r\n\t\tvar parsed = templateExec(template.parse, item);\r\n\r\n\t\t// Save model item reference to node\r\n\t\thtml.model = item;\r\n\r\n\t\tvar changesReference = [];\r\n\t\tvar pendingInsert = [];\r\n\r\n\t\t// Find element where the data belongs to\r\n\t\tfor (var i = 0; i < addresses.length; i++) {\r\n\t\t\tvar ref = addresses[i];\r\n\t\t\tvar current = $.childIndexes(ref.address, html);\r\n\r\n\t\t\t// Modify element attributes\r\n\t\t\tif(ref.nodeType === 1){\r\n\t\t\t\tvar refA = ref.attributes;\r\n\t\t\t\tfor(var a = 0; a < refA.length; a++){\r\n\t\t\t\t\tvar refB = refA[a];\r\n\r\n\t\t\t\t\tchangesReference.push({\r\n\t\t\t\t\t\tattribute:(refB.name === 'value' && current.tagName === 'INPUT' ? current : current.attributes[refB.name]),\r\n\t\t\t\t\t\tref:refB\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(refB.name === 'value' && current.tagName === 'INPUT'){\r\n\t\t\t\t\t\tcurrent.value = parsed[refB.direct].data;\r\n\t\t\t\t\t\tcurrent.removeAttribute('value');\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(refB.direct !== undefined){\r\n\t\t\t\t\t\tcurrent.setAttribute(refB.name, parsed[refB.direct].data);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Below is used for multiple data\r\n\t\t\t\t\trefB = current.attributes[refB.name];\r\n\r\n\t\t\t\t\trefB.value = refB.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Replace text node\r\n\t\t\tif(ref.nodeType === 3){\r\n\t\t\t\tvar refA = current;\r\n\r\n\t\t\t\tchangesReference.push({\r\n\t\t\t\t\ttextContent:refA,\r\n\t\t\t\t\tref:ref\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(ref.direct !== undefined){\r\n\t\t\t\t\trefA.textContent = parsed[ref.direct].data;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Below is used for multiple/dynamic data\r\n\t\t\t\trefA.textContent = refA.textContent.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Replace dynamic node\r\n\t\t\tif(ref.nodeType === -1){\r\n\t\t\t\tvar cRef = {\r\n\t\t\t\t\tdynamicFlag:current,\r\n\t\t\t\t\tdirect:ref.parse_index,\r\n\t\t\t\t\tparentNode:current.parentNode,\r\n\t\t\t\t\tstartFlag:ref.startFlag && $.childIndexes(ref.startFlag, html)\r\n\t\t\t\t};\r\n\t\t\t\tchangesReference.push(cRef);\r\n\r\n\t\t\t\t// Pending element insert to take other element reference\r\n\t\t\t\tpendingInsert.push(cRef);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Save reference to element\r\n\t\thtml.sf$elementReferences = changesReference;\r\n\t\t// html.sf$modelParsed = parsed;\r\n\r\n\t\t// Run the pending element\r\n\t\tfor (var i = 0; i < pendingInsert.length; i++) {\r\n\t\t\tvar ref = pendingInsert[i];\r\n\t\t\tvar tDOM = $.parseElement(parsed[ref.direct].data, true);\r\n\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\tref.parentNode.insertBefore(tDOM[a], ref.dynamicFlag);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t}\r\n\r\n\tfunction syntheticCache(element, template, item){\r\n\t\tif(element.sf$cache === undefined)\r\n\t\t\telement.sf$cache = {};\r\n\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\tvar ref = modelRef_array[i];\r\n\t\t\tcache[ref[0]] = deepProperty(item, ref[1]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction syntheticTemplate(element, template, property, item){\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tif(property !== undefined){\r\n\t\t\tvar changes = template.modelReference[property];\r\n\t\t\tif(changes === undefined || changes.length === 0){\r\n\t\t\t\tconsole.error(\"Failed to run syntheticTemplate because property '\"+property+\"' is not observed\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cache)\r\n\t\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\t\tif(ref[0] !== property) continue;\r\n\r\n\t\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t\t// Check if data was different\r\n\t\t\t\t\tif(cache[ref[0]] !== newData)\r\n\t\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar changes = [];\r\n\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\tif(cache === undefined){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t// Check if data was different\r\n\t\t\t\tif(cache[ref[0]] !== newData){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(changes.length === 0) return false;\r\n\t\t}\r\n\r\n\t\tvar parsed = templateExec(template.parse, item, changes);\r\n\t\tfunction checkRelatedChanges(parseIndex){\r\n\t\t\tvar found = false;\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(changes.indexOf(parseIndex[i]) !== -1){\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(found === false)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t// Prepare all required data\r\n\t\t\tchanges = [];\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(parsed[parseIndex[i]] === undefined){\r\n\t\t\t\t\tchanges.push(parseIndex[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tObject.assign(parsed, templateExec(template.parse, item, changes));\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tvar changesReference = element.sf$elementReferences;\r\n\t\tvar haveChanges = false;\r\n\t\tfor (var i = 0; i < changesReference.length; i++) {\r\n\t\t\tvar cRef = changesReference[i];\r\n\r\n\t\t\tif(cRef.dynamicFlag !== undefined){ // Dynamic data\r\n\t\t\t\tif(parsed[cRef.direct] !== undefined){\r\n\t\t\t\t\tvar tDOM = $.parseElement(parsed[cRef.direct].data, true).reverse();\r\n\t\t\t\t\tvar currentDOM = $.prevAll(cRef.dynamicFlag, cRef.startFlag);\r\n\t\t\t\t\tvar notExist = false;\r\n\r\n\t\t\t\t\t// Replace if exist, skip if similar\r\n\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\t\t\tif(currentDOM[a] === undefined){\r\n\t\t\t\t\t\t\tnotExist = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(currentDOM[a].isEqualNode(tDOM[a]) === false)\r\n\t\t\t\t\t\t\tcRef.parentNode.replaceChild(tDOM[a], currentDOM[a]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Add if not exist\r\n\t\t\t\t\tif(notExist){\r\n\t\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++)\r\n\t\t\t\t\t\t\tcRef.parentNode.insertBefore(tDOM[a], cRef.dynamicFlag);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove if over index\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tfor (var a = tDOM.length; a < currentDOM.length; a++) {\r\n\t\t\t\t\t\t\tcurrentDOM[a].remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(cRef.textContent !== undefined){ // Text only\r\n\t\t\t\tif(cRef.ref.parse_index !== undefined){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.textContent.textContent === temp) continue;\r\n\t\t\t\t\t\tcRef.textContent.textContent = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.textContent.textContent === value) continue;\r\n\t\t\t\t\tcRef.textContent.textContent = value;\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(cRef.attribute !== undefined){ // Attributes\r\n\t\t\t\tif(cRef.ref.parse_index !== undefined){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.attribute.value === temp) continue;\r\n\t\t\t\t\t\tcRef.attribute.value = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.attribute.value === value) continue;\r\n\t\t\t\t\tcRef.attribute.value = value;\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn haveChanges;\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval, preParsedReference){\r\n\t\tvar _modelScope = self.root[scope];\r\n\t\tif(!runEval) runEval = '';\r\n\t\t\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(_modelScope).join('|');\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(_modelScope[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\tvar preParsed = [];\r\n\t\t\tvar lastParsedIndex = preParsedReference.length;\r\n\t\t}\r\n\r\n\t\tvar prepared = html.replace(/{{([^@%][\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = escapeEscapedQuote(temp); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\r\n\t\t\ttemp = unescapeEscapedQuote(temp); // ToDo: Unescape\r\n\r\n\t\t\t// Unescape HTML\r\n\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t// Evaluate\r\n\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\ttemp = temp.trim();\r\n\r\n\t\t\t\t// Simplicity similar\r\n\t\t\t\tvar exist = preParsed.indexOf(temp);\r\n\r\n\t\t\t\tif(exist === -1){\r\n\t\t\t\t\tpreParsed.push(temp);\r\n\t\t\t\t\tpreParsedReference.push({type:REF_DIRECT, data:[temp, _model_, _modelScope]});\r\n\t\t\t\t\treturn '{{%=' + (preParsed.length + lastParsedIndex - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn '{{%=' + (exist + lastParsedIndex);\r\n\t\t\t}\r\n\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(/(?!&#.*?;)[\\u00A0-\\u9999<>\\&]/gm, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\tpreParsed = variableList = _modelScope = _model_ = mask = scope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t}\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\t// Dynamic data parser\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope, runEval){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(passVar === null)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\t// Use strict mode and prepare for new variables\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\t// Declare new variable\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove var because no variable are being passed\r\n\t\t\t\tif(firstTime === true)\r\n\t\t\t\t\tstrDeclare = strDeclare.replace('var ', '');\r\n\r\n\t\t\t\t// Escape function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('&#40;').split(')').join('&#41;');\r\n\r\n\t\t\t\t// Pass to static data parser for another HTML data\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Build script preparation\r\n\t\thtml = html.replace(/{\\[([\\s\\S]*?)\\]}/g, function(full, matched){\r\n\t\t\tif(/{{.*?}}/.test(matched) === false)\r\n\t\t\t\treturn \"_result_ += '\"+matched.split(\"'\").join(\"\\\\'\")+\"'\";\r\n\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope).join('|')+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(runEval === '#noEval')\r\n\t\t\tvar preParsedReference = [];\r\n\r\n\t\tvar prepared = html.replace(/{{((@|#[\\w])[\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = escapeEscapedQuote(temp); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\t\t\ttemp = unescapeEscapedQuote(temp); // ToDo: Unescape\r\n\r\n\t\t\t// Unescape HTML\r\n\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass_ = /(var|let)([\\w,\\s]+)(?=\\s(?==|in|of))/g;\r\n\t\t\tvar VarPass = [];\r\n\t\t\tvar s1 = null;\r\n\t\t\twhile((s1 = VarPass_.exec(temp)) !== null){\r\n\t\t\t\tVarPass.push(s1[2]);\r\n\t\t\t}\r\n\r\n\t\t\tif(_model_ === null && runEval === '#noEval')\r\n\t\t\t\tVarPass.push('_model_');\r\n\r\n\t\t\tif(VarPass.length !== 0){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/([\\n\\t\\r]|  )+/g, '').split(',').forEach(function(val){\r\n\t\t\t\t\t\tobtained.push(val);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':(typeof '+VarPass[i]+'!==\"undefined\"?'+VarPass[i]+':undefined)';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(VarPass.length === 0)\r\n\t\t\t\t\tVarPass = 'null';\r\n\t\t\t\telse VarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\t\t\telse temp = temp.split('&VarPass&').join('null');\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\r\n\t\t\t\t// {if, elseIf:([if, value], ...), elseValue}\r\n\t\t\t\tvar findElse = function(text){\r\n\t\t\t\t\ttext = text.join(':');\r\n\t\t\t\t\tvar else_ = null;\r\n\r\n\t\t\t\t\t// Split elseIf\r\n\t\t\t\t\ttext = text.split('@elseif ');\r\n\r\n\t\t\t\t\t// Get else value\r\n\t\t\t\t\tvar else_ = text[text.length - 1].split('@else');\r\n\t\t\t\t\tif(else_.length === 2){\r\n\t\t\t\t\t\ttext[text.length - 1] = else_[0];\r\n\t\t\t\t\t\telse_ = else_.pop();\r\n\t\t\t\t\t\telse_ = else_.substr(else_.indexOf(':') + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse else_ = null;\r\n\r\n\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t\tif:text.shift(),\r\n\t\t\t\t\t\telseIf:[],\r\n\t\t\t\t\t\telseValue:else_\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Separate condition script and value\r\n\t\t\t\t\tfor (var i = 0; i < text.length; i++) {\r\n\t\t\t\t\t\tvar val = text[i].split(':');\r\n\t\t\t\t\t\tobj.elseIf.push([val.shift(), val.join(':')]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tvar condition = check.shift();\r\n\t\t\t\t\tvar elseIf = findElse(check);\r\n\t\t\t\t\telseIf.type = REF_IF;\r\n\t\t\t\t\telseIf.data = [null, _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t\t// Trim Data\r\n\t\t\t\t\telseIf.if = [condition.trim(), elseIf.if.trim()];\r\n\t\t\t\t\tif(elseIf.elseValue !== null)\r\n\t\t\t\t\t\telseIf.elseValue = elseIf.elseValue.trim();\r\n\r\n\t\t\t\t\tfor (var i = 0; i < elseIf.elseIf.length; i++) {\r\n\t\t\t\t\t\telseIf.elseIf[i][0] = elseIf.elseIf[i][0].trim();\r\n\t\t\t\t\t\telseIf.elseIf[i][1] = elseIf.elseIf[i][1].trim();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Push data\r\n\t\t\t\t\tpreParsedReference.push(elseIf);\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scopes = [check[0], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\treturn elseIfHandle(findElse(check), scopes);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcheck.shift();\r\n\t\t\t\tscopes[0] = check.join(':');\r\n\r\n\t\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tvar scopes = [check[1], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tpreParsedReference.push({type:REF_EXEC, data:scopes});\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, scopes);\r\n\t\t\t\treturn temp;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\t_modelScope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t\treturn [prepared, preParsedReference, _content_];\r\n\t\t}\r\n\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\tvar bindArray = function(template, list, mask, modelName, propertyName, targetNode, parentNode, tempDOM){\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'swap', 'move', 'replace', 'softRefresh', 'hardRefresh'];\r\n\t\tvar refreshTimer = -1;\r\n\t\tvar parentChilds = parentNode.children;\r\n\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\r\n\t\t// Update callback\r\n\t\tvar modelRef = self.root[modelName];\r\n\t\tvar eventVar = 'on$'+propertyName;\r\n\t\tvar callback = modelRef[eventVar];\r\n\r\n\t\tvar processElement = function(index, options, other, count){\r\n\t\t\t// Find boundary for inserting to virtual DOM\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar vStartRange = list.$virtual.DOMCursor;\r\n\t\t\t\tvar vEndRange = vStartRange + list.$virtual.preparedLength;\r\n\t\t\t}\r\n\r\n\t\t\tif(options === 'clear'){\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar spacer = [parentNode.firstElementChild, parentNode.lastElementChild];\r\n\r\n\t\t\t\tparentNode.textContent = '';\r\n\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tparentNode.appendChild(spacer[0]);\r\n\t\t\t\t\tparentNode.appendChild(spacer[1]);\r\n\t\t\t\t\tlist.$virtual.dom.textContent = '';\r\n\t\t\t\t\tspacer[1].style.height = \r\n\t\t\t\t\tspacer[0].style.height = 0;\r\n\t\t\t\t\tlist.$virtual.reset(true);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid multiple refresh by set a timer\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar exist = list.$virtual.elements();\r\n\r\n\t\t\t\tclearTimeout(refreshTimer);\r\n\t\t\t\trefreshTimer = setTimeout(function(){\r\n\t\t\t\t\tlist.$virtual.reinitScroll();\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse exist = parentChilds;\r\n\r\n\t\t\t// Hard refresh - Append element\r\n\t\t\tif(options === 'hardRefresh'){\r\n\t\t\t\t// Clear siblings after the index\r\n\t\t\t\tfor (var i = index; i < exist.length; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar vCursor = list.$virtual.vCursor;\r\n\r\n\t\t\t\tfor (var i = index; i < list.length; i++) {\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\tif(vCursor.floor === null && i < vEndRange)\r\n\t\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\t\telse list.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse parentNode.appendChild(temp);\r\n\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual && list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(callback === undefined)\r\n\t\t\t\tcallback = modelRef[eventVar];\r\n\r\n\t\t\tif(options === 'swap' || options === 'move'){\r\n\t\t\t\tif(options === 'move'){\r\n\t\t\t\t\tvar overflow = list.length - index - count;\r\n\t\t\t\t\tif(overflow < 0)\r\n\t\t\t\t\t\tcount += overflow;\r\n\r\n\t\t\t\t\t// Move to virtual DOM\r\n\t\t\t\t\tvar vDOM = document.createElement('div');\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tvDOM.appendChild(exist[index + i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar nextSibling = exist[other] || null;\r\n\t\t\t\t\tvar theParent = nextSibling && nextSibling.parentNode;\r\n\r\n\t\t\t\t\tif(theParent === false){\r\n\t\t\t\t\t\tif(list.$virtual && list.length >= vEndRange)\r\n\t\t\t\t\t\t\ttheParent = list.$virtual.dom;\r\n\t\t\t\t\t\telse theParent = parentNode;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Move to defined index\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\ttheParent.insertBefore(vDOM.firstElementChild, nextSibling);\r\n\r\n\t\t\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\t\t\tcallback.update(exist[index + i], 'move');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(index > other){\r\n\t\t\t\t\tvar index_a = exist[other];\r\n\t\t\t\t\tother = exist[index];\r\n\t\t\t\t\tindex = index_a;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tindex = exist[index];\r\n\t\t\t\t\tother = exist[other];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar other_sibling = other.nextSibling;\r\n\t\t\t\tvar other_parent = other.parentNode;\r\n\t            index.parentNode.insertBefore(other, index.nextSibling);\r\n\t            other_parent.insertBefore(index, other_sibling);\r\n\r\n\t\t\t\tif(callback !== undefined && callback.update){\r\n\t\t\t\t\tcallback.update(exist[other], 'swap');\r\n\t\t\t\t\tcallback.update(exist[index], 'swap');\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Clear unused element if current array < last array\r\n\t\t\tif(options === 'removeRange'){\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(options === 'remove'){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\texist[index].remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.remove){\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tsetTimeout(startRemove, 800);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse startRemove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update\r\n\t\t\telse if(options === 'update'){\r\n\t\t\t\tif(index === undefined){\r\n\t\t\t\t\tindex = 0;\r\n\t\t\t\t\tother = list.length;\r\n\t\t\t\t}\r\n\t\t\t\telse if(other === undefined) other = index + 1;\r\n\t\t\t\telse if(other < 0) other = list.length + other;\r\n\t\t\t\telse other += index;\r\n\r\n\t\t\t\t// Trim length\r\n\t\t\t\tvar overflow = list.length - other;\r\n\t\t\t\tif(overflow < 0) other = other + overflow;\r\n\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\tvar oldChild = exist[i];\r\n\t\t\t\t\tif(oldChild === undefined || list[i] === undefined)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\toldChild.parentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tparentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\t\tcallback.update(temp, 'replace');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar item = list[index];\r\n\t\t\tif(item === undefined) return;\r\n\r\n\t\t\tvar temp = templateParser(template, item);\r\n\t\t\tif(isKeyed === false)\r\n\t\t\t\tsyntheticCache(temp, template, item);\r\n\r\n\t\t\t// Create\r\n\t\t\tif(options === 'insertAfter'){\r\n\t\t\t\tif(exist.length === 0)\r\n\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\telse{\r\n\t\t\t\t\tvar referenceNode = exist[index - 1];\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode.nextSibling);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t\telse if(options === 'prepend'){\r\n\t\t\t\tvar referenceNode = exist[0];\r\n\t\t\t\tif(referenceNode !== undefined){\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode);\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t}\r\n\t\t\t\telse options = 'append';\r\n\t\t\t}\r\n\t\t\tif(options === 'append'){\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tif(index === 0) // Add before virtual scroller\r\n\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\telse if(index >= vEndRange){ // To virtual DOM\r\n\t\t\t\t\t\tif(list.$virtual.vCursor.floor === null)\r\n\t\t\t\t\t\t\tlist.$virtual.vCursor.floor = temp;\r\n\r\n\t\t\t\t\t\tlist.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse // To real DOM\r\n\t\t\t\t\t\texist[index-1].insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparentNode.appendChild(temp);\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar _double_zero = [0,0]; // For arguments\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = undefined;\r\n\t\t\t\t\tvar lastLength = this.length;\r\n\r\n\t\t\t\t\tif(name === 'move'){\r\n\t\t\t\t\t\tvar from = arguments[0];\r\n\t\t\t\t\t\tvar to = arguments[1];\r\n\t\t\t\t\t\tif(from === to) return;\r\n\t\t\t\t\t\tvar count = arguments[2] || 1;\r\n\t\t\t\t\t\tprocessElement(from, 'move', to, count);\r\n\r\n\t\t\t\t\t\tvar temp = Array.prototype.splice.apply(this, [from, count]);\r\n\t\t\t\t\t\ttemp.unshift(to, 0);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Reset virtual ceiling and floor\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(name === 'swap'){\r\n\t\t\t\t\t\tvar i = arguments[0];\r\n\t\t\t\t\t\tvar o = arguments[1];\r\n\t\t\t\t\t\tif(i === o) return;\r\n\t\t\t\t\t\tprocessElement(i, 'swap', o);\r\n\t\t\t\t\t\tvar temp = this[i];\r\n\t\t\t\t\t\tthis[i] = this[o];\r\n\t\t\t\t\t\tthis[o] = temp;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'replace'){\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.resetViewport();\r\n\r\n\t\t\t\t\t\t// Check if item has same reference\r\n\t\t\t\t\t\tif(arguments[0].length >= lastLength && lastLength !== 0){\r\n\t\t\t\t\t\t\tvar matchLeft = lastLength;\r\n\t\t\t\t\t\t\tvar ref = arguments[0];\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < lastLength; i++) {\r\n\t\t\t\t\t\t\t\tif(ref[i] === this[i]){\r\n\t\t\t\t\t\t\t\t\tmatchLeft--;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the end\r\n\t\t\t\t\t\t\tif(matchLeft === 0){\r\n\t\t\t\t\t\t\t\tif(ref.length === lastLength) return;\r\n\r\n\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(lastLength);\r\n\t\t\t\t\t\t\t\ttemp.unshift(lastLength, 0);\r\n\t\t\t\t\t\t\t\tthis.splice.apply(this, temp);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the middle\r\n\t\t\t\t\t\t\telse if(matchLeft !== lastLength){\r\n\t\t\t\t\t\t\t\tif(arguments[1] === true){\r\n\t\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(i);\r\n\t\t\t\t\t\t\t\t\ttemp.unshift(i, lastLength - i);\r\n\t\t\t\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t\t\t\tlist.refresh(i, lastLength);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Build from zero\r\n\t\t\t\t\t\tif(lastLength === 0){\r\n\t\t\t\t\t\t\tArray.prototype.push.apply(this, arguments[0]);\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Clear all items and merge the new one\r\n\t\t\t\t\t\tvar temp = [0, lastLength];\r\n\t\t\t\t\t\tArray.prototype.push.apply(temp, arguments[0]);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Rebuild all element\r\n\t\t\t\t\t\tif(arguments[1] !== true || isKeyed){\r\n\t\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reuse some element\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t// Clear unused element if current array < last array\r\n\t\t\t\t\t\t\tif(this.length < lastLength)\r\n\t\t\t\t\t\t\t\tprocessElement(this.length, 'removeRange', lastLength);\r\n\r\n\t\t\t\t\t\t\t// And start refreshing\r\n\t\t\t\t\t\t\tlist.refresh(0, this.length);\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual && list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reset virtual list\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reset();\r\n\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice' && arguments[0] === 0 && arguments[1] === undefined){\r\n\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\treturn Array.prototype.splice.apply(this, arguments);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(this.length, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'push'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(lastLength, 'append');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = 0; i < arguments.length; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(lastLength + i, 'append');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'shift'){\r\n\t\t\t\t\t\tprocessElement(0, 'remove');\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor > 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor--;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments[0] === 0 && arguments[1] === undefined)\r\n\t\t\t\t\t\t\treturn temp;\r\n\r\n\t\t\t\t\t\t// Removing data\r\n\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\tif(real < 0) real = lastLength + real;\r\n\r\n\t\t\t\t\t\tvar limit = arguments[1];\r\n\t\t\t\t\t\tif(!limit && limit !== 0) limit = this.length;\r\n\r\n\t\t\t\t\t\tfor (var i = limit - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tprocessElement(real + i, 'remove');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = real - limit;\r\n\r\n\t\t\t\t\t\tif(arguments.length >= 3){ // Inserting data\r\n\t\t\t\t\t\t\tlimit = arguments.length - 2;\r\n\r\n\t\t\t\t\t\t\t// Trim the index if more than length\r\n\t\t\t\t\t\t\tif(real >= this.length)\r\n\t\t\t\t\t\t\t\treal = this.length - 1;\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < limit; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(real + i, 'insertAfter');\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\t\tlist.$virtual.DOMCursor += limit;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(0, 'prepend');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = arguments.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\t\tprocessElement(i, 'prepend');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor !== 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor += arguments.length;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'softRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0], 'update', arguments[1]);\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'hardRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0] || 0, 'hardRefresh');\r\n\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = arguments[0] || 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(parentNode && parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\tdelete list.$virtual;\r\n\t\t\tlist.$virtual = {};\r\n\r\n\t\t\t// Transfer virtual DOM\r\n\t\t\tlist.$virtual.dom = tempDOM;\r\n\t\t\tif(callback !== undefined)\r\n\t\t\t\tlist.$virtual.callback = callback;\r\n\t\t\telse list.$virtual.callback_ = {ref:modelRef, var:eventVar};\r\n\r\n\t\t\tparentNode.replaceChild(template.html, parentChilds[1]);\r\n\t\t\tsf.internal.virtual_scroll.handle(list, targetNode, parentNode);\r\n\t\t\ttemplate.html.remove();\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\r\n\t\t// Todo: Enable auto item binding\r\n\t\tif(false && list.auto !== false){\r\n\t\t\t// for (var i = 0; i < list.length; i++) {\r\n\t\t\t// \tlist[i]\r\n\t\t\t// }\r\n\t\t}\r\n\r\n\t\thiddenProperty(list, 'refresh', function(index, length, property){\r\n\t\t\tif(index === undefined || index.constructor === String){\r\n\t\t\t\tproperty = index;\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tlength = list.length;\r\n\t\t\t}\r\n\t\t\telse if(length === undefined) length = index + 1;\r\n\t\t\telse if(length.constructor === String){\r\n\t\t\t\tproperty = length;\r\n\t\t\t\tlength = index + 1;\r\n\t\t\t}\r\n\t\t\telse if(length < 0) length = list.length + length;\r\n\t\t\telse length += index;\r\n\r\n\t\t\t// Trim length\r\n\t\t\tvar overflow = list.length - length;\r\n\t\t\tif(overflow < 0) length = length + overflow;\r\n\r\n\t\t\tfor (var i = index; i < length; i++) {\r\n\t\t\t\tvar elem = list.getElement(i);\r\n\r\n\t\t\t\t// Create element if not exist\r\n\t\t\t\tif(elem === undefined){\r\n\t\t\t\t\tlist.hardRefresh(i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(isKeyed === true)\r\n\t\t\t\t\t\tlist.softRefresh(i);\r\n\t\t\t\t\telse if(syntheticTemplate(elem, template, property, list[i]) === false)\r\n\t\t\t\t\t\tcontinue; // Continue if no update\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\tcallback.update(elem, 'replace');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar virtualChilds = null;\r\n\t\tif(list.$virtual)\r\n\t\t\tvirtualChilds = list.$virtual.dom.children;\r\n\t\thiddenProperty(list, 'getElement', function(index){\r\n\t\t\tif(virtualChilds !== null){\r\n\t\t\t\tvar ret = undefined;\r\n\t\t\t\tif(index < list.$virtual.DOMCursor)\r\n\t\t\t\t\treturn virtualChilds[index];\r\n\t\t\t\telse {\r\n\t\t\t\t\tindex -= list.$virtual.DOMCursor;\r\n\t\t\t\t\tvar childElement = parentNode.childElementCount - 2;\r\n\r\n\t\t\t\t\tif(index < childElement)\r\n\t\t\t\t\t\treturn parentChilds[index + 1];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn virtualChilds[index - childElement + list.$virtual.DOMCursor];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t\treturn parentChilds[index];\r\n\t\t});\r\n\t}\r\n\r\n\tvar loopParser = function(name, template, script, targetNode, parentNode){\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\r\n\t\tvar items = root_(name)[method[1]];\r\n\t\tif(items === undefined)\r\n\t\t\titems = root_(name)[method[1]] = [];\r\n\r\n\t\ttemplate.setAttribute('sf-bind-list', method[1]);\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = template;\r\n\t\ttemplate = self.extractPreprocess(template, mask, name);\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tvar tempDOM = document.createElement('div');\r\n\t\t\tvar modelRef = self.root[name];\r\n\r\n\t\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\t\tvar elem = templateParser(template, items[i]);\r\n\t\t\t\ttempDOM.appendChild(elem);\r\n\r\n\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\tsyntheticCache(elem, template, items[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// Enable element binding\r\n\t\t\tif(modelRef.sf$bindedKey === undefined)\r\n\t\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\t\tif(modelRef.sf$bindedKey[method[1]] === undefined)\r\n\t\t\t\tmodelRef.sf$bindedKey[method[1]] = null;\r\n\r\n\t\t\tObject.defineProperty(modelRef, method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tif(val.length === 0)\r\n\t\t\t\t\t\treturn items.splice(0);\r\n\t\t\t\t\treturn items.replace(val, true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tbindArray(template, items, mask, name, method[1], targetNode, parentNode, tempDOM);\r\n\r\n\t\t\t// Output to real DOM if not being used for virtual list\r\n\t\t\tif(items.$virtual === undefined){\r\n\t\t\t\tvar children = tempDOM.children;\r\n\t\t\t\tfor (var i = 0, n = children.length; i < n; i++) {\r\n\t\t\t\t\tparentNode.appendChild(children[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttempDOM.remove();\r\n\t\t\t\ttempDOM = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar inputBoundFunction = function(e){\r\n\t\tself.root[e.target['sf-model']][e.target['sf-bounded']] = e.target.value;\r\n\t};\r\n\r\n\tvar bindInput = function(targetNode){\r\n\t\tvar temp = $('input[sf-bound]', targetNode);\r\n\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar model = sf.controller.modelName(element);\r\n\t\t\tif(!model) return;\r\n\r\n\t\t\tvar whichVar = element.getAttribute('sf-bound');\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(typeof self.root[model][whichVar] === undefined){\r\n\t\t\t\tconsole.error('Cannot get reference for self.root[\"' + model + '\"][\"' + whichVar+'\"]');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement['sf-bounded'] = whichVar;\r\n\t\t\telement['sf-model'] = model;\r\n\t\t\telement.setAttribute('sf-bounded', '');\r\n\t\t\telement.removeAttribute('sf-bound');\r\n\r\n\t\t\t// Bound value change\r\n\t\t\tif(element.tagName === 'INPUT' || element.tagName === 'TEXTAREA')\r\n\t\t\t\t$.on(element, 'keyup', inputBoundFunction);\r\n\r\n\t\t\telse\r\n\t\t\t\t$.on(element, 'change', inputBoundFunction);\r\n\t\t}\r\n\t}\r\n\r\n\tvar alreadyInitialized = false;\r\n\tself.init = function(targetNode, queued){\r\n\t\tif(alreadyInitialized && !targetNode) return;\r\n\t\talreadyInitialized = true;\r\n\t\tsetTimeout(function(){\r\n\t\t\talreadyInitialized = false;\r\n\t\t}, 50);\r\n\r\n\t\tif(!targetNode) targetNode = document.body;\r\n\r\n\t\tself.parsePreprocess(queued || self.queuePreprocess(targetNode).reverse(), queued);\r\n\t\tbindInput(targetNode);\r\n\r\n\t\t// Find element for array binding\r\n\t\tvar temp = $('[sf-repeat-this]', targetNode);\r\n\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\tvar element = temp[a];\r\n\t\t\tvar parent = element.parentElement;\r\n\r\n\t\t\tif(queued !== undefined)\r\n\t\t\t\telement.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(parent.classList.contains('sf-virtual-list')){\r\n\t\t\t\tvar ceiling = document.createElement(element.tagName);\r\n\t\t\t\tceiling.classList.add('virtual-spacer');\r\n\t\t\t\tvar floor = ceiling.cloneNode(true);\r\n\r\n\t\t\t\tceiling.classList.add('ceiling');\r\n\t\t\t\tparent.insertBefore(ceiling, parent.firstElementChild); // prepend\r\n\r\n\t\t\t\tfloor.classList.add('floor');\r\n\t\t\t\tparent.appendChild(floor); // append\r\n\t\t\t}\r\n\r\n\t\t\tvar after = element.nextElementSibling;\r\n\t\t\tif(after === null || element === after)\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = element.previousElementSibling;\r\n\t\t\tif(before === null || element === before)\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = element.getAttribute('sf-repeat-this');\r\n\t\t\telement.removeAttribute('sf-repeat-this');\r\n\r\n\t\t\t// Check if the element was already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(element.outerHTML))\r\n\t\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\t\tvar controller = sf.controller.modelName(element);\r\n\t\t\tloopParser(controller, element, script, targetNode, parent);\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t}\r\n\r\n\t// Reset model properties\r\n\t// Don't call if the removed element is TEXT or #comment\r\n\tvar DOMNodeRemoved = scope.DOMNodeRemoved = function(element){\r\n\t\tif(element.hasAttribute('sf-controller') !== false){\r\n\t\t\tvar modelName = element.getAttribute('sf-controller');\r\n\r\n\t\t\tremoveModelBinding(modelName);\r\n\t\t\tif(element.sf$component !== undefined){\r\n\t\t\t\tvar modelFrom = element.sf$componentFrom;\r\n\t\t\t\tvar components = sf.component.available[modelFrom];\r\n\t\t\t\tcomponents.splice(components.indexOf(modelName), 1);\r\n\t\t\t\tinternal.component.triggerEvent(modelFrom, 'removed', self.root[modelName]);\r\n\t\t\t\tdelete self.root[modelName];\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar temp = $('[sf-controller]', element);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar modelName = temp[i].getAttribute('sf-controller');\r\n\r\n\t\t\tremoveModelBinding(modelName);\r\n\t\t\tif(element.sf$component !== undefined){\r\n\t\t\t\tmodelName = element.sf$componentFor;\r\n\t\t\t\tvar modelFrom = element.sf$componentFrom;\r\n\t\t\t\tvar components = sf.component.available[modelName];\r\n\t\t\t\tcomponents.splice(components.indexOf(modelName), 1);\r\n\t\t\t\tinternal.component.triggerEvent(modelFrom, 'removed', self.root[modelName]);\r\n\t\t\t\tdelete self.root[modelName];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsf(function(){\r\n\t\tvar everyRemovedNodes = function(nodes){\r\n\t\t\tif(nodes.nodeType !== 1 || nodes.firstElementChild === null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(nodes.sf$elementReferences !== undefined) return;\r\n\t\t\tDOMNodeRemoved(nodes);\r\n\t\t}\r\n\r\n\t\tif(typeof MutationObserver === 'function' && MutationObserver.prototype.observe){\r\n\t\t\tvar everyRecords = function(record){\r\n\t\t\t\trecord.removedNodes.forEach(everyRemovedNodes);\r\n\t\t\t}\r\n\r\n\t\t\tvar observer = new MutationObserver(function(records){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\trecords.forEach(everyRecords);\r\n\t\t\t});\r\n\r\n\t\t\tobserver.observe(document.body, { childList: true, subtree: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.body.addEventListener('DOMNodeRemoved', function(e){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\teveryRemovedNodes(e.target);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tvar removeModelBinding = self.reset = function(modelName){\r\n\t\tvar ref = self.root[modelName];\r\n\t\tif(ref === undefined)\r\n\t\t\treturn;\r\n\r\n\t\tvar bindedKey = ref.sf$bindedKey;\r\n\t\tvar temp = null;\r\n\t\tfor(var key in bindedKey){\r\n\t\t\tdelete bindedKey[key];\r\n\r\n\t\t\tif(ref[key] === undefined || ref[key] === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(ref[key].constructor === String ||\r\n\t\t\t\tref[key].constructor === Number ||\r\n\t\t\t\tref[key].constructor === Boolean\r\n\t\t\t){/* Ok */}\r\n\r\n\t\t\telse if(ref[key].constructor === Array){\r\n\t\t\t\tif(ref[key].$virtual){\r\n\t\t\t\t\tref[key].$virtual.destroy();\r\n\t\t\t\t\tdelete ref[key].$virtual;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset property without copying the array\r\n\t\t\t\ttemp = ref[key].splice('obtain');\r\n\t\t\t\tdelete ref[key];\r\n\t\t\t\tref[key] = temp;\r\n\t\t\t}\r\n\t\t\telse continue;\r\n\r\n\t\t\tif(Object.getOwnPropertyDescriptor(ref, key) === undefined)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Reconfigure / Remove property descriptor\r\n\t\t\tvar temp = ref[key];\r\n\t\t\tdelete ref[key];\r\n\t\t\tref[key] = temp;\r\n\t\t}\r\n\t}\r\n\r\n\tvar dcBracket = /{{[^#][\\s\\S]*?}}/;\r\n\tself.bindElement = function(element){\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar data = self.extractPreprocess(element, null, modelName);\r\n\t\ttemplateParser(data, model, true);\r\n\t\tdelete data.addresses;\r\n\t\telement.parentNode.replaceChild(data.html, element);\r\n\t\telement = data.html;\r\n\r\n\t\tfunction proxyProperty(propertyName){\r\n\t\t\tvar objValue = model[propertyName]; // Object value\r\n\t\t\tObject.defineProperty(model, propertyName, {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn objValue;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tobjValue = val;\r\n\r\n\t\t\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\t\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\t\t\t\tref[i]();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn objValue;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tvar onChanges = function(){\r\n\t\t\tif(syntheticTemplate(element, data, undefined, model) === false)\r\n\t\t\t\t0; //No update\r\n\t\t};\r\n\r\n\t\tvar properties = data.modelRef_array;\r\n\t\tfor (var i = 0; i < properties.length; i++) {\r\n\t\t\tvar propertyName = properties[i][0];\r\n\r\n\t\t\tif(model[propertyName] === undefined)\r\n\t\t\t\tmodel[propertyName] = '';\r\n\r\n\t\t\t// Enable multiple element binding\r\n\t\t\tif(model.sf$bindedKey === undefined)\r\n\t\t\t\tinitBindingInformation(model);\r\n\r\n\t\t\tif(model.sf$bindedKey[propertyName] !== undefined){\r\n\t\t\t\tif(model.sf$bindedKey[propertyName].indexOf(onChanges) === -1)\r\n\t\t\t\t\tmodel.sf$bindedKey[propertyName].push(onChanges);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tproxyProperty(propertyName);\r\n\t\t\tmodel.sf$bindedKey[propertyName] = [onChanges];\r\n\t\t}\r\n\t}\r\n\r\n\tself.extractPreprocess = function(targetNode, mask, name){\r\n\t\tvar copy = targetNode.outerHTML;\r\n\r\n\t\t// Mask the referenced item\r\n\t\tif(mask !== null)\r\n\t\t\tcopy = copy.split('#'+mask).join('_model_');\r\n\r\n\t\t// Extract data to be parsed\r\n\t\tcopy = uniqueDataParser(copy, null, mask, name, '#noEval');\r\n\t\tvar preParsed = copy[1];\r\n\t\tvar _content_ = copy[2];\r\n\t\tcopy = dataParser(copy[0], null, mask, name, '#noEval', preParsed);\r\n\r\n\t\tfunction findModelProperty(){\r\n\t\t\tif(mask === null){\r\n\t\t\t\t// Get model keys and sort by text length, make sure the longer one is from first index to avoid wrong match\r\n\t\t\t\tvar extract = RegExp('('+self.modelKeys(self.root[name]).sort(function(a, b){return b.length - a.length}).join('|')+')', 'g');\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tvar extract = RegExp('\\\\b(?:_model_|'+mask+')\\\\.([a-zA-Z0-9.[\\'\\\\]]+)(?:$|[^\\'\\\\]])', 'g');\r\n\t\t\tvar found = {};\r\n\r\n\t\t\tfor (var i = 0; i < preParsed.length; i++) {\r\n\t\t\t\tvar current = preParsed[i];\r\n\r\n\t\t\t\t// Text or attribute\r\n\t\t\t\tif(current.type === 0){\r\n\t\t\t\t\tcurrent.data[0].split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(found[match] === undefined) found[match] = [i];\r\n\t\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Dynamic data\r\n\t\t\t\tif(current.type === 1){\r\n\t\t\t\t\tvar checkList = current.if.join(';');\r\n\r\n\t\t\t\t\tif(current.elseValue !== null)\r\n\t\t\t\t\t\tcheckList += ';' + current.elseValue;\r\n\r\n\t\t\t\t\tfor (var a = 0; a < current.elseIf.length; a++) {\r\n\t\t\t\t\t\tcheckList += current.elseIf[a].join(';');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(current.type === 2)\r\n\t\t\t\t\tvar checkList = current.data[0];\r\n\r\n\t\t\t\tcheckList = checkList.replace(/_result_ \\+= _content_\\.take\\(.*?, ([0-9]+)\\);/g, function(full, match){\r\n\t\t\t\t\treturn _content_[match];\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcheckList.split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found[match] === undefined) found[match] = [i];\r\n\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn found;\r\n\t\t}\r\n\r\n\t\t// Build element and start addressing\r\n\t\tcopy = $.parseElement(copy)[0];\r\n\t\tvar nodes = self.queuePreprocess(copy, true).reverse();\r\n\t\tvar addressed = [];\r\n\r\n\t\tfunction addressAttributes(currentNode){\r\n\t\t\tvar attrs = currentNode.attributes;\r\n\t\t\tvar keys = [];\r\n\t\t\tvar indexes = 0;\r\n\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\tvar found = attrs[a].value.split('{{%=');\r\n\t\t\t\tif(found.length !== 1){\r\n\t\t\t\t\tvar key = {\r\n\t\t\t\t\t\tname:attrs[a].name,\r\n\t\t\t\t\t\tvalue:attrs[a].value\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tindexes = [];\r\n\t\t\t\t\tfound = attrs[a].value.replace(/{{%=([0-9]+)/g, function(full, match){\r\n\t\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found === '' && indexes.length === 1)\r\n\t\t\t\t\t\tkey.direct = indexes[0];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tkey.parse_index = indexes;\r\n\r\n\t\t\t\t\tkeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn keys;\r\n\t\t}\r\n\r\n\t\tvar currentElement = addressAttributes(copy);\r\n\t\tif(currentElement.length !== 0)\r\n\t\t\taddressed.push({\r\n\t\t\t\tnodeType:1,\r\n\t\t\t\taddress:[0],\r\n\t\t\t\tattributes:currentElement\r\n\t\t\t});\r\n\r\n\t\tfor (var i = 0; i < nodes.length; i++) {\r\n\t\t\tvar temp = {\r\n\t\t\t\tnodeType:nodes[i].nodeType\r\n\t\t\t};\r\n\r\n\t\t\tif(temp.nodeType === 1){ // Element\r\n\t\t\t\ttemp.attributes = addressAttributes(nodes[i]);\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\telse if(temp.nodeType === 3){ // Text node\r\n\t\t\t\tvar innerHTML = nodes[i].textContent;\r\n\t\t\t\tvar indexes = [];\r\n\r\n\t\t\t\tinnerHTML.replace(/{{%%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Check for dynamic mode\r\n\t\t\t\tif(indexes.length !== 0){\r\n\t\t\t\t\tinnerHTML = innerHTML.split(/{{%%=[0-9]+/gm);\r\n\t\t\t\t\tfor (var a = 0; a < innerHTML.length; a++) {\r\n\t\t\t\t\t\tinnerHTML[a] = trimIndentation(innerHTML[a]).trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodes[i].textContent = innerHTML.shift();\r\n\r\n\t\t\t\t\tvar parent = nodes[i].parentNode;\r\n\t\t\t\t\tvar nextSibling = nodes[i].nextSibling;\r\n\r\n\t\t\t\t\t// Dynamic boundary start\r\n\t\t\t\t\tvar addressStart = null;\r\n\t\t\t\t\tif(indexes.length !== 0 && nodes[i].textContent.length !== 0)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i], true);\r\n\t\t\t\t\telse if(nodes[i].previousSibling !== null)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i].previousSibling, true);\r\n\r\n\t\t\t\t\t// Find boundary ends\r\n\t\t\t\t\tvar commentFlag = [];\r\n\t\t\t\t\tfor(var a = 0; a < indexes.length; a++){\r\n\t\t\t\t\t\tvar flag = document.createComment('');\r\n\t\t\t\t\t\tparent.insertBefore(flag, nextSibling);\r\n\t\t\t\t\t\tcommentFlag.push({\r\n\t\t\t\t\t\t\tnodeType:-1,\r\n\t\t\t\t\t\t\tparse_index:indexes[a],\r\n\t\t\t\t\t\t\tstartFlag:addressStart,\r\n\t\t\t\t\t\t\taddress:$.getSelector(flag, true)\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(innerHTML[a]){\r\n\t\t\t\t\t\t\tvar textNode = document.createTextNode(innerHTML[a]);\r\n\t\t\t\t\t\t\tparent.insertBefore(textNode, nextSibling);\r\n\r\n\t\t\t\t\t\t\t// Get new start flag\r\n\t\t\t\t\t\t\tif(a + 1 < indexes.length)\r\n\t\t\t\t\t\t\t\taddressStart = $.getSelector(textNode, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Merge boundary address\r\n\t\t\t\t\tArray.prototype.push.apply(addressed, commentFlag);\r\n\t\t\t\t\tif(nodes[i].textContent === ''){\r\n\t\t\t\t\t\tnodes[i].remove();\r\n\t\t\t\t\t\tfor (var a = 0; a < commentFlag.length; a++) {\r\n\t\t\t\t\t\t\tvar ref = commentFlag[a].address;\r\n\t\t\t\t\t\t\tref[ref.length - 1]--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(nodes[i].textContent.search(/{{%=[0-9]+/) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if it's only model value\r\n\t\t\t\tindexes = [];\r\n\t\t\t\tinnerHTML = nodes[i].textContent.replace(/{{%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(innerHTML === '' && indexes.length === 1)\r\n\t\t\t\t\ttemp.direct = indexes[0];\r\n\t\t\t\telse{\r\n\t\t\t\t\ttemp.value = nodes[i].textContent;\r\n\t\t\t\t\ttemp.parse_index = indexes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\taddressed.push(temp);\r\n\t\t}\r\n\r\n\t\tvar modelReference = findModelProperty();\r\n\t\tvar keys = Object.keys(modelReference);\r\n\t\tvar asArray = [];\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tasArray.push([keys[i], keys[i].split('.')]);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\thtml:copy,\r\n\t\t\tparse:preParsed,\r\n\t\t\taddresses:addressed,\r\n\t\t\tmodelReference:modelReference,\r\n\t\t\tmodelRef_array:asArray\r\n\t\t};\r\n\t}\r\n\r\n\tvar enclosedHTMLParse = false;\r\n\tvar excludes = ['HTML','HEAD','STYLE','LINK','META','SCRIPT','OBJECT','IFRAME'];\r\n\tself.queuePreprocess = function(targetNode, extracting){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = childNodes.length - 1; i >= 0; i--) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\r\n\t\t\tif(extracting === undefined && excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tif(enclosedHTMLParse === true) continue;\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\r\n\t\t\t\t// Skip element and it's childs that already bound to prevent vulnerability\r\n\t\t\t\tif(attrs['sf-bind-key'] || attrs['sf-repeat-this'] || attrs['sf-bind-list']) continue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tif(extracting === undefined)\r\n\t\t\t\t\t\t\tcurrentNode.setAttribute('sf-preprocess', 'attronly');\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tArray.prototype.push.apply(temp, self.queuePreprocess(currentNode, extracting));\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tif(currentNode.textContent.length === 0){\r\n\t\t\t\t\tcurrentNode.remove();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// The scan is from bottom to first index\r\n\t\t\t\tvar enclosing = currentNode.textContent.indexOf('{[');\r\n\t\t\t\tif(enclosing !== -1)\r\n\t\t\t\t\tenclosedHTMLParse = false;\r\n\t\t\t\telse if(enclosedHTMLParse === true)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Start enclosed if closing pattern was found\r\n\t\t\t\tvar enclosed = currentNode.textContent.indexOf(']}');\r\n\t\t\t\tif(enclosed !== -1 && (enclosing === -1 || enclosing > enclosed)){ // avoid {[ ... ]}\r\n\t\t\t\t\tenclosedHTMLParse = true; // when ]} ... \r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tif(extracting === undefined){\r\n\t\t\t\t\t\tcurrentNode.parentNode.setAttribute('sf-preprocess', '');\r\n\r\n\t\t\t\t\t\t// Reset Siblings\r\n\t\t\t\t\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\t\t\t\t\ttemp[a].removeAttribute('sf-preprocess');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttemp.push(currentNode.parentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn temp;\r\n\t}\r\n\r\n\tself.parsePreprocess = function(nodes, queued){\r\n\t\tfor (var a = 0; a < nodes.length; a++) {\r\n\t\t\t// Get reference for debugging\r\n\t\t\tvar current = processingElement = nodes[a];\r\n\r\n\t\t\tvar modelElement = sf.controller.modelElement(current);\r\n\t\t\tif(modelElement === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar model = modelElement.getAttribute('sf-controller');\r\n\t\t\tcurrent.removeAttribute('sf-preprocess');\r\n\r\n\t\t\tif(queued !== undefined)\r\n\t\t\t\tcurrent.classList.remove('sf-dom-queued');\r\n\r\n\t\t\t// Check if it's component\r\n\t\t\tif(self.root[model] === undefined && sf.component.registered[model])\r\n\t\t\t\tmodel = sf.component.new(model, modelElement);\r\n\r\n\t\t\tvar modelRef = self.root[model] || root_(model);\r\n\r\n\t\t\t// Double check if the child element already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(current.innerHTML)){\r\n\t\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\t\tconsole.log(processingElement.cloneNode(true));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(current.hasAttribute('sf-bind-ignore') === false)\r\n\t\t\t\tself.bindElement(current);\r\n\t\t\telse{\r\n\t\t\t\tvar temp = uniqueDataParser(current.innerHTML, modelRef, false, model);\r\n\t\t\t\tcurrent.innerHTML = dataParser(temp, modelRef, false, model);\r\n\t\t\t\tvar attrs = current.attributes;\r\n\t\t\t\tfor (var i = 0; i < attrs.length; i++) {\r\n\t\t\t\t\tif(attrs[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tvar attr = attrs[i];\r\n\t\t\t\t\t\tattr.value = dataParser(attr.value, modelRef, false, model);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initBindingInformation(modelRef){\r\n\t\tif(modelRef.sf$bindedKey !== undefined)\r\n\t\t\treturn;\r\n\r\n\t\t// Element binding data\r\n\t\tObject.defineProperty(modelRef, 'sf$bindedKey', {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable:false,\r\n\t\t\twritable:true,\r\n\t\t\tvalue:{}\r\n\t\t});\r\n\t}\r\n})();","// ==== ES5 Polyfill ====\r\nif(typeof Object.assign != 'function'){\r\n  Object.defineProperty(Object, \"assign\", {\r\n    value: function assign(target, varArgs) {\r\n      'use strict';\r\n      if (target == null)\r\n        throw new TypeError('Cannot convert undefined or null to object');\r\n      var to = Object(target);\r\n      for (var index = 1; index < arguments.length; index++) {\r\n        var nextSource = arguments[index];\r\n        if (nextSource != null) {\r\n          for (var nextKey in nextSource) {\r\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey))\r\n              to[nextKey] = nextSource[nextKey];\r\n          }\r\n        }\r\n      }\r\n      return to;\r\n    },\r\n    writable: true,\r\n    configurable: true\r\n  });\r\n}\r\n\r\nif(Element.prototype.remove === undefined || CharacterData.prototype.remove === undefined || DocumentType.prototype.remove === undefined){\r\n  (function (arr) {\r\n    arr.forEach(function (item) {\r\n      if (item.hasOwnProperty('remove')) {\r\n        return;\r\n      }\r\n      Object.defineProperty(item, 'remove', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n        value: function remove() {\r\n          if (this.parentNode !== null)\r\n            this.parentNode.removeChild(this);\r\n        }\r\n      });\r\n    });\r\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\r\n}\r\n\r\nif(!Element.prototype.matches){\r\n  Element.prototype.matches = (Element.prototype).matchesSelector ||\r\n    (Element.prototype).mozMatchesSelector || (Element.prototype).msMatchesSelector ||\r\n    (Element.prototype).oMatchesSelector || (Element.prototype).webkitMatchesSelector ||\r\n    function (s) {\r\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n      i = matches.length;\r\n      while (--i >= 0 && matches.item(i) !== this){}\r\n      return i > -1;\r\n    };\r\n}\r\n\r\nif(!NodeList.prototype.forEach){\r\n    NodeList.prototype.forEach = function (callback, thisArg) {\r\n        thisArg = thisArg || window;\r\n        for (var i = 0; i < this.length; i++) {\r\n            callback.call(thisArg, this[i], i, this);\r\n        }\r\n    };\r\n}\r\n\r\nif(!window.location.origin)\r\n  window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');\r\n\r\nif(!Object.values)\r\n  Object.values = function(obj){\r\n    var res = [];\r\n    for (var i in obj) {\r\n        if (obj.hasOwnProperty(i)) {\r\n            res.push(obj[i]);\r\n        }\r\n    }\r\n    return res;\r\n  }","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tself.pending = {};\r\n\tself.active = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tif(sf.component.registered[name]){\r\n\t\t\tsf.component.registered[name][1] = func;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tself.pending[name] = func;\r\n\t}\r\n\r\n\tself.modelScope = function(element, func){\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = element.getAttribute('sf-bind-list');\r\n\t\tif(!bindedList){\r\n\t\t\tvar parentEl = $.parent(element, '[sf-bind-list]');\r\n\t\t\tif(parentEl !== null)\r\n\t\t\t\tbindedList = parentEl.getAttribute('sf-bind-list');\r\n\t\t}\r\n\t\telse var parentEl = element;\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(sf.model.root[model], -1);\r\n\t\t\telse return sf.model.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = $.prevAll(parentEl, '[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(sf.model.root[model][bindedList], bindedListIndex);\r\n\t\telse return sf.model.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.modelElement = function(element){\r\n\t\tif(element.nodeType === 1 && element.hasAttribute('sf-controller'))\r\n\t\t\treturn element;\r\n\r\n\t\treturn $.parent(element, '[sf-controller]');\r\n\t}\r\n\r\n\tself.modelName = function(element){\r\n\t\tvar name = self.modelElement(element).getAttribute('sf-controller');\r\n\r\n\t\t// Initialize it first\r\n\t\tif(name !== undefined && !self.active[name])\r\n\t\t\tself.run(name);\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = e.target;\r\n\t\tvar script = element.getAttribute('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = $.parent(element, '[sf-click]');\r\n\t\t\tscript = element.getAttribute('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = $.parent(element, '[sf-controller]').getAttribute('sf-controller');\r\n\r\n\t\tif(!sf.model.root[model])\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar _modelScope = sf.model.root[model];\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(_modelScope).join('|');\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+modelKeys+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tscript = script.replace(scopeMask, function(full, matched){\r\n\t\t\treturn '_modelScope.'+matched;\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script[0];\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(e) {\r\n\t\t\tmethod = false;\r\n\t\t}\r\n\r\n\t\tif(!method){\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot call `'+method_+'`]\\n', element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript.shift();\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0){\r\n\t\t\t// Replace `this` to `element`\r\n\t\t\tscript = eval(('['+script+']').replace(/,this|\\[this/g, function(found){\r\n\t\t\t\treturn found[0] + 'element';\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif(!script)\r\n\t\t\tscript = [];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element, script);\r\n\t\t\te.preventDefault();\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', element, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tself.run = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.run(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(sf.component.registered[name])\r\n\t\t\treturn console.error(\"'\"+name+\"' is registered as a component\");\r\n\r\n\t\tif(self.pending[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\r\n\t\t\tself.pending[name](sf.model.root[name], root_);\r\n\t\t\tself.active[name] = true;\r\n\t\t\tdelete self.pending[name];\r\n\t\t}\r\n\r\n\t\tif(sf.model.root[name] === undefined)\r\n\t\t\tsf.model.root[name] = {};\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], root_);\r\n\t}\r\n\r\n\tself.init = function(parent){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(name);\r\n\t\t\t});\r\n\r\n\t\tvar temp = $('[sf-controller]', parent || document.body);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tself.run(temp[i].getAttribute('sf-controller'));\r\n\t\t}\r\n\t}\r\n\r\n\t// Create listener for sf-click\r\n\tdocument.addEventListener('DOMContentLoaded', function(){\r\n\t\t$.on(document.body, 'click', '[sf-click]', listenSFClick);\r\n\t}, {capture:true, once:true});\r\n}\r\n\r\nvar root_ = function(scope){\r\n\tif(sf.component.registered[scope]){\r\n\t\tvar available = [];\r\n\t\tvar component = sf.component.available[scope];\r\n\t\tif(component !== undefined){\r\n\t\t\tfor (var i = 0; i < component.length; i++) {\r\n\t\t\t\tavailable.push(sf.model.root[component[i]]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn available;\r\n\t}\r\n\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\treturn sf.model.root[scope];\r\n}","/*\r\n  Special Thanks to Vladimir Kharlampidi\r\n  https://github.com/nolimits4web/\r\n*/\r\n\r\nvar globals = {};\r\nvar jsonpRequests = 0;\r\nfunction Request(requestOptions) {\r\n    var globalsNoCallbacks = Object.assign({}, globals);\r\n    ('beforeCreate beforeOpen beforeSend error complete success statusCode').split(' ').forEach(function (callbackName) {\r\n        delete globalsNoCallbacks[callbackName];\r\n    });\r\n    var defaults = Object.assign({\r\n        url: window.location.toString(),\r\n        method: 'GET',\r\n        data: false,\r\n        async: true,\r\n        cache: true,\r\n        user: '',\r\n        password: '',\r\n        headers: {},\r\n        xhrFields: {},\r\n        statusCode: {},\r\n        processData: true,\r\n        dataType: 'text',\r\n        contentType: 'application/x-www-form-urlencoded',\r\n        timeout: 0,\r\n    }, globalsNoCallbacks);\r\n    var options = Object.assign({}, defaults, requestOptions);\r\n    var proceedRequest;\r\n    // Function to run XHR callbacks and events\r\n    function fireCallback(callbackName) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        /*\r\n          Callbacks:\r\n          beforeCreate (options),\r\n          beforeOpen (xhr, options),\r\n          beforeSend (xhr, options),\r\n          error (xhr, status),\r\n          complete (xhr, stautus),\r\n          success (response, status, xhr),\r\n          statusCode ()\r\n        */\r\n        var globalCallbackValue;\r\n        var optionCallbackValue;\r\n        if (globals[callbackName]) {\r\n            globalCallbackValue = globals[callbackName].apply(globals, data);\r\n        }\r\n        if (options[callbackName]) {\r\n            optionCallbackValue = options[callbackName].apply(options, data);\r\n        }\r\n        if (typeof globalCallbackValue !== 'boolean')\r\n            globalCallbackValue = true;\r\n        if (typeof optionCallbackValue !== 'boolean')\r\n            optionCallbackValue = true;\r\n        return (globalCallbackValue && optionCallbackValue);\r\n    }\r\n    // Before create callback\r\n    proceedRequest = fireCallback('beforeCreate', options);\r\n    if (proceedRequest === false)\r\n        return undefined;\r\n    // For jQuery guys\r\n    if (options.type)\r\n        options.method = options.type;\r\n    // Parameters Prefix\r\n    var paramsPrefix = options.url.indexOf('?') >= 0 ? '&' : '?';\r\n    // UC method\r\n    var method = options.method.toUpperCase();\r\n    // Data to modify GET URL\r\n    if ((method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') && options.data) {\r\n        var stringData = void 0;\r\n        if (typeof options.data === 'string') {\r\n            // Should be key=value string\r\n            if (options.data.indexOf('?') >= 0)\r\n                stringData = options.data.split('?')[1];\r\n            else\r\n                stringData = options.data;\r\n        }\r\n        else {\r\n            // Should be key=value object\r\n            stringData = serializeQuery(options.data);\r\n        }\r\n        if (stringData.length) {\r\n            options.url += paramsPrefix + stringData;\r\n            if (paramsPrefix === '?')\r\n                paramsPrefix = '&';\r\n        }\r\n    }\r\n    // JSONP\r\n    if (options.dataType === 'json' && options.url.indexOf('callback=') >= 0) {\r\n        var callbackName_1 = \"jsonp_\" + (Date.now() + ((jsonpRequests += 1)));\r\n        var abortTimeout_1;\r\n        var callbackSplit = options.url.split('callback=');\r\n        var requestUrl = callbackSplit[0] + \"callback=\" + callbackName_1;\r\n        if (callbackSplit[1].indexOf('&') >= 0) {\r\n            var addVars = callbackSplit[1].split('&').filter(function (el) { return el.indexOf('=') > 0; }).join('&');\r\n            if (addVars.length > 0)\r\n                requestUrl += \"&\" + addVars;\r\n        }\r\n        // Create script\r\n        var script_1 = document.createElement('script');\r\n        script_1.type = 'text/javascript';\r\n        script_1.onerror = function onerror() {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('error', null, 'scripterror');\r\n            fireCallback('complete', null, 'scripterror');\r\n        };\r\n        script_1.src = requestUrl;\r\n        // Handler\r\n        window[callbackName_1] = function jsonpCallback(data) {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('success', data);\r\n            script_1.parentNode.removeChild(script_1);\r\n            script_1 = null;\r\n            delete window[callbackName_1];\r\n        };\r\n        document.querySelector('head').appendChild(script_1);\r\n        if (options.timeout > 0) {\r\n            abortTimeout_1 = setTimeout(function () {\r\n                script_1.parentNode.removeChild(script_1);\r\n                script_1 = null;\r\n                fireCallback('error', null, 'timeout');\r\n            }, options.timeout);\r\n        }\r\n        return undefined;\r\n    }\r\n    // Cache for GET/HEAD requests\r\n    if (method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') {\r\n        if (options.cache === false) {\r\n            options.url += paramsPrefix + \"_nocache\" + Date.now();\r\n        }\r\n    }\r\n    // Create XHR\r\n    var xhr = new XMLHttpRequest();\r\n    // Save Request URL\r\n    xhr.requestUrl = options.url;\r\n    xhr.requestParameters = options;\r\n    // Before open callback\r\n    proceedRequest = fireCallback('beforeOpen', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Open XHR\r\n    xhr.open(method, options.url, options.async, options.user, options.password);\r\n    // Create POST Data\r\n    var postData = null;\r\n    if ((method === 'POST' || method === 'PUT' || method === 'PATCH') && options.data) {\r\n        if (options.processData) {\r\n            var postDataInstances = [ArrayBuffer, Blob, Document, FormData];\r\n            // Post Data\r\n            if (postDataInstances.indexOf(options.data.constructor) >= 0) {\r\n                postData = options.data;\r\n            }\r\n            else {\r\n                // POST Headers\r\n                var boundary = \"---------------------------\" + Date.now().toString(16);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    xhr.setRequestHeader('Content-Type', \"multipart/form-data; boundary=\" + boundary);\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader('Content-Type', options.contentType);\r\n                }\r\n                postData = '';\r\n                var data = serializeQuery(options.data);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    data = data.split('&');\r\n                    var newData = [];\r\n                    for (var i = 0; i < data.length; i += 1) {\r\n                        newData.push(\"Content-Disposition: form-data; name=\\\"\" + data[i].split('=')[0] + \"\\\"\\r\\n\\r\\n\" + data[i].split('=')[1] + \"\\r\\n\");\r\n                    }\r\n                    postData = \"--\" + boundary + \"\\r\\n\" + newData.join(\"--\" + boundary + \"\\r\\n\") + \"--\" + boundary + \"--\\r\\n\";\r\n                }\r\n                else if (options.contentType === 'application/json') {\r\n                    postData = JSON.stringify(options.data);\r\n                }\r\n                else {\r\n                    postData = data;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            postData = options.data;\r\n            xhr.setRequestHeader('Content-Type', options.contentType);\r\n        }\r\n    }\r\n    // Additional headers\r\n    if (options.headers) {\r\n        Object.keys(options.headers).forEach(function (headerName) {\r\n            xhr.setRequestHeader(headerName, options.headers[headerName]);\r\n        });\r\n    }\r\n    // Check for crossDomain\r\n    if (typeof options.crossDomain === 'undefined') {\r\n        // eslint-disable-next-line\r\n        options.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(options.url) && RegExp.$2 !== window.location.host;\r\n    }\r\n    if (!options.crossDomain) {\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    }\r\n    if (options.xhrFields) {\r\n        Object.assign(xhr, options.xhrFields);\r\n    }\r\n    var xhrTimeout;\r\n    // Handle XHR\r\n    xhr.onload = function onload() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 0) {\r\n            var responseData = void 0;\r\n            if (options.dataType === 'json') {\r\n                var parseError = void 0;\r\n                try {\r\n                    responseData = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (err) {\r\n                    parseError = true;\r\n                }\r\n                if (!parseError) {\r\n                    fireCallback('success', responseData, xhr.status, xhr);\r\n                }\r\n                else {\r\n                    fireCallback('error', xhr, 'parseerror');\r\n                }\r\n            }\r\n            else {\r\n                responseData = xhr.responseType === 'text' || xhr.responseType === '' ? xhr.responseText : xhr.response;\r\n                fireCallback('success', responseData, xhr.status, xhr);\r\n            }\r\n        }\r\n        else {\r\n            fireCallback('error', xhr, xhr.status);\r\n        }\r\n        if (options.statusCode) {\r\n            if (globals.statusCode && globals.statusCode[xhr.status])\r\n                globals.statusCode[xhr.status](xhr);\r\n            if (options.statusCode[xhr.status])\r\n                options.statusCode[xhr.status](xhr);\r\n        }\r\n        fireCallback('complete', xhr, xhr.status);\r\n    };\r\n    xhr.onerror = function onerror() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        fireCallback('error', xhr, xhr.status);\r\n        fireCallback('complete', xhr, 'error');\r\n    };\r\n    // Timeout\r\n    if (options.timeout > 0) {\r\n        xhr.onabort = function onabort() {\r\n            if (xhrTimeout)\r\n                clearTimeout(xhrTimeout);\r\n        };\r\n        xhrTimeout = setTimeout(function () {\r\n            xhr.abort();\r\n            fireCallback('error', xhr, 'timeout');\r\n            fireCallback('complete', xhr, 'timeout');\r\n        }, options.timeout);\r\n    }\r\n    // Ajax start callback\r\n    proceedRequest = fireCallback('beforeSend', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Send XHR\r\n    xhr.send(postData);\r\n    // Return XHR object\r\n    return xhr;\r\n}\r\nfunction RequestShortcut(method) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    var _a = [], url = _a[0], data = _a[1], success = _a[2], error = _a[3], dataType = _a[4];\r\n    if (typeof args[1] === 'function') {\r\n        url = args[0], success = args[1], error = args[2], dataType = args[3];\r\n    }\r\n    else {\r\n        url = args[0], data = args[1], success = args[2], error = args[3], dataType = args[4];\r\n    }\r\n    [success, error].forEach(function (callback) {\r\n        if (typeof callback === 'string') {\r\n            dataType = callback;\r\n            if (callback === success)\r\n                success = undefined;\r\n            else\r\n                error = undefined;\r\n        }\r\n    });\r\n    dataType = dataType || (method === 'json' || method === 'postJSON' ? 'json' : undefined);\r\n    var requestOptions = {\r\n        url: url,\r\n        method: method === 'post' || method === 'postJSON' ? 'POST' : 'GET',\r\n        data: data,\r\n        success: success,\r\n        error: error,\r\n        dataType: dataType,\r\n    };\r\n    if (method === 'postJSON') {\r\n        Object.assign(requestOptions, {\r\n            contentType: 'application/json',\r\n            processData: false,\r\n            crossDomain: true,\r\n            data: typeof data === 'string' ? data : JSON.stringify(data),\r\n        });\r\n    }\r\n    return Request(requestOptions);\r\n}\r\nObject.assign(Request, {\r\n    get: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['get'].concat(args));\r\n    },\r\n    post: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['post'].concat(args));\r\n    },\r\n    json: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    getJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    postJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['postJSON'].concat(args));\r\n    },\r\n});\r\nRequest.setup = function setup(options) {\r\n    if (options.type && !options.method) {\r\n        Object.assign(options, { method: options.type });\r\n    }\r\n    Object.assign(globals, options);\r\n};\r\nfunction serializeQuery(params, prefix) {\r\n    var key = Object.keys(params);\r\n    for (var i = 0; i < key.length; i++) {\r\n      var value = params[key[i]];\r\n      if (params.constructor === Array)\r\n          key[i] += prefix + \"[]\";\r\n      else if (params.constructor === Object)\r\n          key[i] = (prefix ? prefix + \"[\" + key[i] + \"]\" : key[i]);\r\n\r\n      if (typeof value === 'object')\r\n          key[i] = serializeQuery(value, key[i]);\r\n      else\r\n          key[i] = key[i] + \"=\" + encodeURIComponent(value);\r\n    }\r\n    return key.join('&');\r\n}\r\n$.ajax = sf.ajax = Request;","return sf;\r\n\r\n// ===== Module End =====\r\n})));","sf.router = new function(){\r\n\tvar self = this;\r\n\tself.loading = false;\r\n\tself.enabled = false;\r\n\tself.pauseRenderOnTransition = false;\r\n\tself.currentPage = [];\r\n\tvar initialized = false;\r\n\tvar lazyRouting = false;\r\n\tvar currentRouterURL = '';\r\n\r\n\t// Should be called if not using lazy page load\r\n\tself.init = function(targetNode){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init();\r\n\t\t\t});\r\n\r\n\t\t// Run 'before' event for new page view\r\n\t\tvar temp = $('[sf-controller], [sf-page]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tif(temp[i].getAttribute('sf-controller'))\r\n\t\t\t\tsf.controller.run(temp[i].getAttribute('sf-controller'));\r\n\t\t\t\r\n\t\t\tif(temp[i].getAttribute('sf-page')){\r\n\t\t\t\tvar name = temp[i].getAttribute('sf-page');\r\n\t\t\t\tbeforeEvent(name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinitialized = true;\r\n\t\tcurrentRouterURL = window.location.pathname;\r\n\t}\r\n\r\n\tfunction popstateListener(event) {\r\n\t\t// Don't continue if the last routing was error\r\n\t\tif(routingError){\r\n\t\t\troutingError = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\troutingBack = true;\r\n\t\tself.goto(window.location.pathname);\r\n\t}\r\n\r\n\tself.enable = function(status){\r\n\t\tif(status === undefined) status = true;\r\n\t\tif(self.enabled === status) return;\r\n\t\tself.enabled = status;\r\n\r\n\t\tif(status === true){\r\n\t\t\t// Create listener for link click\r\n\t\t\t$.on(document.body, 'click', 'a[href]', self.load);\r\n\r\n\t\t\t// Create listener when navigate backward\r\n\t\t\twindow.addEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$.off(document.body, 'click', 'a[href]', self.load);\r\n\t\t\twindow.removeEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t}\r\n\r\n\tvar before = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.before = function(name, func, index){\r\n\t\tif(!before[name])\r\n\t\t\tbefore[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(before[name].indexOf(func) === -1)\r\n\t\t\t\tbefore[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tbefore[name][index] = func;\r\n\t}\r\n\r\n\tvar after = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.after = function(name, func, index){\r\n\t\tif(!after[name])\r\n\t\t\tafter[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(after[name].indexOf(func) === -1)\r\n\t\t\t\tafter[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tafter[name][index] = func;\r\n\t}\r\n\r\n\t// Running 'before' new page going to be displayed\r\n\tvar beforeEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.push(name);\r\n\r\n\t\tif(before[name]){\r\n\t\t\tfor (var i = 0; i < before[name].length; i++) {\r\n\t\t\t\tbefore[name][i](sf.model);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Running 'after' old page going to be removed\r\n\tvar afterEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.splice(self.currentPage.indexOf(name), 1);\r\n\r\n\t\tif(after[name]){\r\n\t\t\tfor (var i = 0; i < after[name].length; i++) {\r\n\t\t\t\tafter[name][i](sf.model);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar onEvent = {\r\n\t\t'loading':[],\r\n\t\t'loaded':[],\r\n\t\t'special':[],\r\n\t\t'error':[]\r\n\t};\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\tself.lazyViewPoint = {};\r\n\t/*\r\n\t\t{\r\n\t\t\toldURlPattern:{\r\n\t\t\t\tnewURLPattern:'.viewPoint'\r\n\t\t\t}\r\n\t\t}\r\n\t*/\r\n\r\n\tself.load = function(ev){\r\n\t\tif(self.enabled !== true) return;\r\n\r\n\t\tvar elem = ev.target;\r\n\t\tif(!elem.href) return;\r\n\r\n\t\tif(!history.pushState || elem.hasAttribute('sf-router-ignore'))\r\n\t\t\treturn;\r\n\r\n\t\t// Make sure it's from current origin\r\n\t\tvar path = elem.href.replace(window.location.origin, '');\r\n\t\tif(path.indexOf('//') !== -1)\r\n\t\t\treturn;\r\n\r\n\t\tev.preventDefault()\r\n\t\treturn !self.goto(path);\r\n\t}\r\n\r\n\tvar RouterLoading = false;\r\n\tvar routingBack = false;\r\n\tvar routingError = false;\r\n\tself.goto = function(path, data, method){\r\n\t\tif(!method) method = 'GET';\r\n        else method = method.toUpperCase();\r\n\r\n\t\tif(!data) data = {};\r\n\r\n\t\tfor (var i = 0; i < onEvent['loading'].length; i++) {\r\n\t\t\tif(onEvent['loading'][i](path)) return;\r\n\t\t}\r\n\t\tvar oldPath = window.location.pathname;\r\n\t\tinitialized = false;\r\n\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\t\tRouterLoading = $.ajax({\r\n\t\t\turl:window.location.origin + path,\r\n\t\t\tmethod:method,\r\n            data:Object.assign(data, {\r\n                _scarlets:'.dynamic.'\r\n            }),\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\tif(initialized) return;\r\n\t\t\t\tlazyRouting = true;\r\n\r\n\t\t\t\t// Run 'loaded' event\r\n\t\t\t\tRouterLoading = false;\r\n\r\n\t\t\t\t// Find special data\r\n\t\t\t\tvar regex = RegExp('<!-- SF-Special:(.*?)-->'+sf.regex.avoidQuotes, 'gm');\r\n\t\t\t\tvar special = regex.exec(data);\r\n\t\t\t\tif(special && special.length !== 1){\r\n\t\t\t\t\tspecial = special[1].split('--|&>').join('-->');\r\n\t\t\t\t\tspecial = JSON.parse(special);\r\n\r\n\t\t\t\t\tif(!isEmptyObject(special)){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['special'].length; i++) {\r\n\t\t\t\t\t\t\tif(onEvent['special'][i](special)) return;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DOMReference = false;\r\n\t\t\t\tvar foundAction = function(ref){\r\n\t\t\t\t\tDOMReference = $.findOne(ref);\r\n\r\n\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\tvar last = $.findOne('[sf-page]', DOMReference);\r\n\t\t\t\t\tafterEvent(last ? last.getAttribute('sf-page') : '/');\r\n\r\n\t\t\t\t\t// Redefine title if exist\r\n\t\t\t\t\tif(special && special.title)\r\n\t\t\t\t\t\t$('head > title').innerHTML = special.title;\r\n\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tfor(var oldURL in self.lazyViewPoint){\r\n\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\tfor(var newURL in self.lazyViewPoint[oldURL]){\r\n\t\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\t\tfoundAction(self.lazyViewPoint[oldURL][newURL]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(found) break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When the view point was not found\r\n\t\t\t\tif(!found){\r\n\t\t\t\t\t// Use fallback if exist\r\n\t\t\t\t\tif(sf.router.lazyViewPoint[\"@default\"])\r\n\t\t\t\t\t\tfoundAction(sf.router.lazyViewPoint[\"@default\"]);\r\n\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\t\t\tonEvent['error'][i]('sf.router.lazyViewPoint[\"'+oldURL+'\"][\"'+newURL+'\"] was not found');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Run 'before' event for new page view\r\n\t\t\t\tif(!DOMReference) DOMReference = document.body;\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', 'none');\r\n\r\n\t\t\t\t// Let page script running first, then update the data binding\r\n\t\t\t\tDOMReference.innerHTML = data;\r\n\r\n\t\t\t\t// Parse the DOM data binding\r\n\t\t\t\tsf.model.init(DOMReference);\r\n\r\n\t\t\t\t// Init template to model binding\r\n\t\t\t\tvar temp = $('[sf-page]', DOMReference);\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tbeforeEvent(temp[i].getAttribute('sf-page'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', '');\r\n\r\n\t\t\t\trouterLoaded(currentRouterURL, path, DOMReference);\r\n\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tlazyRouting = false;\r\n\r\n\t\t\t\tcurrentRouterURL = path;\r\n\t\t\t\troutingError = false;\r\n\t\t\t},\r\n\t\t\terror:function(xhr, data){\r\n\t\t\t\troutingError = true;\r\n\t\t\t\tif(xhr.aborted) return;\r\n\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\tonEvent['error'][i](xhr.status, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Back on error\r\n\t\t\t\twindow.history.back();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!routingBack)\r\n\t\t\twindow.history.pushState(null, \"\", path);\r\n\r\n\t\troutingBack = false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Trigger loaded event\r\n\tfunction routerLoaded(currentRouterURL, path, data){\r\n\t\tfor (var i = 0; i < onEvent['loaded'].length; i++) {\r\n\t\t\tonEvent['loaded'][i](currentRouterURL, path, data);\r\n\t\t}\r\n\t}\r\n};","sf.internal.virtual_scroll = new function(){\r\n\tvar self = this;\r\n\tvar styleInitialized = false;\r\n\tvar scrollingByScript = false;\r\n\r\n\t// before and after\r\n\tself.prepareCount = 4; // 4, 8, 12, 16, ...\r\n\r\n\tself.handle = function(list, targetNode, parentNode){\r\n\t\tif(!styleInitialized){\r\n\t\t\tinitStyles();\r\n\t\t\tstyleInitialized = true;\r\n\t\t}\r\n\r\n\t\tvar dynamicList = false;\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvirtual.reset = function(reinitOnly){\r\n\t\t\tvirtual.DOMCursor = 0; // cursor of first element in DOM tree as a cursor\r\n\r\n\t\t\tvirtual.bounding.ceiling = -1;\r\n\t\t\tvirtual.bounding.floor = 0;\r\n\r\n\t\t\tvirtual.vCursor.ceiling = null; // for forward direction\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.firstElementChild; // for backward direction\r\n\r\n\t\t\tvirtual.bounding.initial = virtual.dCursor.ceiling.offsetTop;\r\n\t\t\trefreshScrollBounding(0, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.reinitCursor = function(){\r\n\t\t\tvirtual.vCursor.ceiling = virtual.dom.children[virtual.DOMCursor - 1] || null;\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.children[virtual.DOMCursor] || null;\r\n\t\t}\r\n\r\n\t\tvirtual.reinitScroll = function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.elements = function(){\r\n\t\t\treturn obtainElements(list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.dCursor = { // DOM Cursor\r\n\t\t\tceiling:parentNode.querySelector('.virtual-spacer.ceiling'),\r\n\t\t\tfloor:parentNode.querySelector('.virtual-spacer.floor')\r\n\t\t};\r\n\r\n\t\tvirtual.bounding = {};\r\n\t\tvirtual.vCursor = {};\r\n\r\n\t\tvirtual.reset();\r\n\t\tvirtual.targetNode = parentNode;\r\n\t\tvirtual.scrollHeight = virtual.dCursor.floor.offsetTop - virtual.bounding.initial;\r\n\r\n\t\tvar scroller = parentNode;\r\n\t\tvirtual.destroy = function(){\r\n\t\t\t$.off(scroller, 'scroll');\r\n\t\t\t$.off(parentNode, 'mousedown mouseup');\r\n\t\t\tvirtual.dom.innerHTML = '';\r\n\t\t\toffElementResize(parentNode);\r\n\r\n\t\t\tdelete list.$virtual;\r\n\t\t}\r\n\r\n\t\tvirtual.resetViewport = function(){\r\n\t\t\tvirtual.visibleLength = Math.floor(scroller.clientHeight / virtual.scrollHeight);\r\n\t\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\t\tif(virtual.preparedLength < 18)\r\n\t\t\t\tvirtual.preparedLength = 18;\r\n\t\t}\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tscroller = parentNode;\r\n\r\n\t\t\tvar length = parentNode.getAttribute('scroll-parent-index') || 0;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tscroller = scroller.parentElement;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.resetViewport();\r\n\r\n\t\t\tif(parentNode.classList.contains('sf-list-dynamic')){\r\n\t\t\t\tdynamicList = true;\r\n\t\t\t\tdynamicHeight(list, targetNode, parentNode, scroller);\r\n\t\t\t}\r\n\t\t\telse staticHeight(list, targetNode, parentNode, scroller);\r\n\t\t}, 500);\r\n\t}\r\n\r\n\t// Recommended for a list that have different element height\r\n\tfunction dynamicHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\r\n\t\t\t// Reset virtual spacer height\r\n\t\t\tceilingHeight = 0;\r\n\t\t\tfloorHeight = 0;\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller);\r\n\t\t\tfillViewport();\r\n\t\t}\r\n\r\n\t\t// Insert some element until reach visible height\r\n\t\tfillViewport();\r\n\r\n\t\tvirtual.visibleLength = parentNode.childElementCount - 2;\r\n\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\tvar temp = vCursor.floor;\r\n\t\t\tif(temp === null) break;\r\n\r\n\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t}\r\n\t\tvirtual.DOMCursor = 0;\r\n\r\n\t\tvar ceilingHeight = 0;\r\n\t\tvar floorHeight = 0;\r\n\t\tfunction previousCeiling(){\r\n\t\t\tvar temp = null;\r\n\t\t\tvar resetCeiling = false;\r\n\r\n\t\t\t// Add some element on the ceiling\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\ttemp = virtual.dom.lastElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.ceiling = temp.previousElementSibling;\r\n\t\t\t\tvirtual.DOMCursor--;\r\n\r\n\t\t\t\tceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tif(ceilingHeight > 0)\r\n\t\t\t\t\tceilingHeight -= getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(virtual.DOMCursor < self.prepareCount && !resetCeiling){\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\tresetCeiling = true;\r\n\t\t\t\t\ttemp = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(ceilingHeight < 0 || temp === null)\r\n\t\t\t\tceilingHeight = 0;\r\n\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\t// Remove some element on the floor\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = floor.previousElementSibling;\r\n\t\t\t\tfloorHeight += getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tvCursor.floor = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.floor === null)\r\n\t\t\t\tvCursor.ceiling = virtual.dom.lastElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tfunction fillViewport(){\r\n\t\t\t// Insert some element depend on prepared length\r\n\t\t\tvar length = virtual.preparedLength - (parentNode.childElementCount - 2);\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\ttemp = virtual.dom.firstElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction nextFloor(){\r\n\t\t\tvar temp = null;\r\n\t\t\tfillViewport();\r\n\r\n\t\t\tif(vCursor.floor !== null){\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\t// Add extra element based on prepare count\r\n\t\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\t\ttemp = vCursor.floor;\r\n\t\t\t\t\tif(temp === null) break;\r\n\r\n\t\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\t\tif(floorHeight > 0)\r\n\t\t\t\t\t\tfloorHeight -= getAbsoluteHeight(temp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(floorHeight < 0 || temp === null)\r\n\t\t\t\tfloorHeight = 0;\r\n\r\n\t\t\t// Remove some element on the ceiling\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\t\t\t\tceilingHeight += getAbsoluteHeight(temp);\r\n\t\t\t\tvirtual.DOMCursor++;\r\n\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\telse vCursor.ceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tvCursor.ceiling = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\t\trefreshScrollBounding(0, bounding, list, parentNode);\r\n\r\n\t\tif(virtual.callback_ !== undefined){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript) return;\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tif(scroller.scrollTop < bounding.ceiling){\r\n\t\t\t\t// console.log('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tpreviousCeiling();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\telse if(scroller.scrollTop > bounding.floor){\r\n\t\t\t\t// console.log('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tnextFloor();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\tif(virtual.callback !== undefined && list.length !== 0){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null &&\r\n\t\t\t\t\tscroller.scrollTop + scroller.clientHeight === scroller.scrollHeight\r\n\t\t\t\t){\r\n\t\t\t\t\tvirtual.callback.hitFloor(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null && scroller.scrollTop === 0){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_ && callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\t\tonElementResize(parentNode, function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t});\r\n\t}\r\n\r\n\t// Recommended for a list that have similar element height\r\n\tfunction staticHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\r\n\t\t// Insert visible element to dom tree\r\n\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\tif(virtual.dom.firstElementChild === null)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', virtual.dom.firstElementChild);\r\n\t\t}\r\n\r\n\t\tvirtual.refreshVirtualSpacer = refreshVirtualSpacer;\r\n\r\n\t\tfunction refreshVirtualSpacer(cursor){\r\n\t\t\tif(cursor >= self.prepareCount){\r\n\t\t\t\tceiling.style.height = (cursor - self.prepareCount) * virtual.scrollHeight + 'px';\r\n\t\t\t\tfloor.style.height = (list.length - virtual.preparedLength - cursor) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tceiling.style.height = cursor * virtual.scrollHeight + 'px'; //'0px';\r\n\t\t\t\tvar count = (list.length - virtual.preparedLength);\r\n\t\t\t\tfloor.style.height = (count || 0) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\r\n\t\trefreshVirtualSpacer(0);\r\n\t\trefreshScrollBounding(self.prepareCount, bounding, list, parentNode);\r\n\t\tbounding.ceiling = -1;\r\n\r\n\t\tvirtual.offsetTo = function(index){\r\n\t\t\treturn index * virtual.scrollHeight + ceiling.offsetTop;\r\n\t\t}\r\n\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tif(virtual.callback_ !== undefined){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tvar fromCeiling = true;\r\n\t\tvar scrollFocused = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript || scroller.scrollTop >= bounding.ceiling && scroller.scrollTop <= bounding.floor){\r\n\t\t\t\t// Fix chrome scroll anchoring bugs when scrolling at corner\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tif(scroller.scrollTop === 0 || scroller.scrollTop === scroller.scrollHeight - scroller.clientHeight){\r\n\t\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar cursor = Math.floor(scroller.scrollTop / virtual.scrollHeight);\r\n\t\t\tif(cursor + virtual.preparedLength > list.length)\r\n\t\t\t\tcursor = list.length - virtual.preparedLength;\r\n\r\n\t\t\tif(fromCeiling){\r\n\t\t\t\tif(cursor < self.prepareCount*2)\r\n\t\t\t\t\tcursor -= self.prepareCount;\r\n\r\n\t\t\t\t// Fix chrome scroll anchoring bugs\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t}\r\n\t\t\t\tfromCeiling = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cursor < self.prepareCount){\r\n\t\t\t\tcursor = 0;\r\n\t\t\t\tfromCeiling = true;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tvar changes = cursor - virtual.DOMCursor;\r\n\t\t\tif(cursor + changes >= list.length)\r\n\t\t\t\tchanges = cursor + changes - list.length;\r\n\r\n\t\t\tif(changes === 0){ // This should be fixed to improve performance and future bugs\r\n\t\t\t\t//console.warn(\"No changes (The scroll bounding is not correct)\");\r\n\t\t\t\tupdating = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.DOMCursor = cursor;\r\n\r\n\t\t\t// console.log(cursor, changes, bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\t\t\tmoveElementCursor(changes, list);\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\t\t\trefreshScrollBounding(cursor, bounding, list, parentNode);\r\n\t\t\t// console.log('a', bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\r\n\t\t\tif(virtual.callback !== undefined && list.length !== 0){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null){\r\n\t\t\t\t\tvirtual.callback.hitFloor(cursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(cursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_ && callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\r\n\t\t// For preventing scroll jump if scrolling over than viewport\r\n\t\tif(scroller === parentNode && navigator.userAgent.indexOf('Chrom') !== -1){\r\n\t\t\t$.on(parentNode, 'mousedown', function(){\r\n\t\t\t\tscrollFocused = true;\r\n\t\t\t});\r\n\t\t\t$.on(parentNode, 'mouseup', function(){\r\n\t\t\t\tscrollFocused = false;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction refreshScrollBounding(cursor, bounding, list, parentNode){\r\n\t\tvar temp = Math.floor(self.prepareCount / 2); // half of element preparation\r\n\t\tif(cursor < self.prepareCount){\r\n\t\t\tbounding.ceiling = -1;\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount * 2 + 1];\r\n\r\n\t\t\tif(bounding.floor !== undefined)\r\n\t\t\t\tbounding.floor = bounding.floor.offsetTop;\r\n\t\t\telse bounding.floor = parentNode.lastElementChild.offsetTop + 1000;\r\n\r\n\t\t\tbounding.floor -= bounding.initial;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if(parentNode.children[temp + 1] !== undefined)\r\n\t\t\t\tbounding.ceiling = parentNode.children[temp + 1].offsetTop; // -2 element\r\n\r\n\t\tif(list.$virtual.preparedLength !== undefined && cursor >= list.length - list.$virtual.preparedLength)\r\n\t\t\tbounding.floor = list.$virtual.dCursor.floor.offsetTop + list.$virtual.scrollHeight*2;\r\n\t\telse{\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount + 3].offsetTop; // +2 element\r\n\r\n\t\t\tif(parentNode.hasAttribute('scroll-reduce-floor')){\r\n\t\t\t\tbounding.floor -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t\tbounding.ceiling -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbounding.ceiling -= bounding.initial;\r\n\t\tbounding.floor -= bounding.initial;// scrollHeight - clientHeight\r\n\t}\r\n\r\n\tfunction moveElementCursor(changes, list){\r\n\t\tvar vDOM = list.$virtual.dom;\r\n\t\tvar vCursor = list.$virtual.vCursor;\r\n\t\tvar dCursor = list.$virtual.dCursor;\r\n\r\n\t\tif(changes > 0){ // forward\r\n\t\t\tvar ref = 0;\r\n\r\n\t\t\t// Select from virtual ceiling cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tref = vDOM.firstElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.ceiling.nextElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the ceiling to vDom\r\n\t\t\tfor (var i = changes; i > 0; i--) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.ceiling === null){\r\n\t\t\t\t\tvCursor.ceiling = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('afterBegin', vCursor.ceiling);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t\t\tvCursor.ceiling = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\t\t}\r\n\t\telse if(changes < 0){ // backward\r\n\t\t\tvar ref = 0;\r\n\t\t\tchanges = -changes;\r\n\r\n\t\t\t// Select from virtual floor cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tref = vDOM.lastElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.floor.previousElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the floor to vDom\r\n\t\t\tfor (var i = 0; i < changes; i++) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvCursor.floor = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('beforeEnd', vCursor.floor);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t\t\tvCursor.floor = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scrollTo(index, list, prepareCount, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar reduce = 0;\r\n\r\n\t\tif(index >= list.length - virtual.preparedLength){\r\n\t\t\treduce -= prepareCount;\r\n\t\t\tindex = list.length - virtual.preparedLength;\r\n\t\t}\r\n\r\n\t\tif(index - virtual.DOMCursor === 0 || index >= list.length) return;\r\n\r\n\t\tscrollingByScript = true;\r\n\r\n\t\t// Already on DOM tree\r\n\t\tif((virtual.DOMCursor === 0 && index < prepareCount + prepareCount/2) ||\r\n\t\t\t(virtual.DOMCursor + prepareCount/2 > index\r\n\t\t\t&& virtual.DOMCursor + prepareCount < index))\r\n\t\t\tscroller.scrollTop = parentNode.children[index - virtual.DOMCursor + 1].offsetTop;\r\n\r\n\t\t// Move cursor\r\n\t\telse {\r\n\t\t\tvar temp = null;\r\n\t\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\t\tvar floor = virtual.dCursor.floor;\r\n\t\t\tvar vCursor = virtual.vCursor;\r\n\r\n\t\t\t// DOM tree to virtual DOM\r\n\t\t\tvar length = parentNode.childElementCount - 2;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\r\n\t\t\t\t\tif(i === length-1)\r\n\t\t\t\t\t\tvCursor.floor = temp;\r\n\t\t\t\t}\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(index >= prepareCount){\r\n\t\t\t\tif(index < list.length - virtual.preparedLength)\r\n\t\t\t\t\tindex -= prepareCount;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treduce = prepareCount - index;\r\n\t\t\t\tvirtual.DOMCursor = index = 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\r\n\t\t\t// Virtual DOM to DOM tree\r\n\t\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\t\ttemp = virtual.dom.children[index];\r\n\t\t\t\tif(temp === undefined) break;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t\tvirtual.DOMCursor = index;\r\n\r\n\t\t\tvCursor.floor = virtual.dom.children[index] || null;\r\n\t\t\tvCursor.ceiling = vCursor.floor ? vCursor.floor.previousElementSibling : null;\r\n\r\n\t\t\tif(list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\tlist.$virtual.refreshVirtualSpacer(index);\r\n\r\n\t\t\trefreshScrollBounding(index, virtual.bounding, list, parentNode);\r\n\r\n\t\t\ttemp = parentNode.children[prepareCount - reduce + 1];\r\n\t\r\n\t\t\tif(temp !== undefined)\r\n\t\t\t\tscroller.scrollTop = temp.offsetTop - scroller.offsetTop;\r\n\t\t}\r\n\r\n\t\tscrollingByScript = false;\r\n\t}\r\n\r\n\tfunction removeUserScrollFocus(parentNode){\r\n\t\tparentNode.style.overflow = 'hidden';\r\n\t\tsetTimeout(function(){\r\n\t\t\tparentNode.style.overflow = '';\r\n\t\t}, 50);\r\n\t}\r\n\r\n\tfunction getAbsoluteHeight(el){\r\n\t  var styles = window.getComputedStyle(el);\r\n\t  var margin = parseInt(styles['marginTop']) + parseInt(styles['marginBottom']);\r\n\t  return el.offsetHeight + margin || 0;\r\n\t}\r\n\r\n\tfunction obtainElements(list, parentNode){\r\n\t\tvar exist = [];\r\n\t\tvar temp = undefined;\r\n\r\n\t\tvar length = list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = parentNode.childElementCount - 2;\r\n\t\tfor (var i = 1; i <= length; i++) {\r\n\t\t\ttemp = parentNode.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\t\t\r\n\t\t// Get elements length\r\n\t\tvar elementLength = list.$virtual.dom.childElementCount + length;\r\n\r\n\t\tlength = elementLength - length - list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[list.$virtual.DOMCursor + i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\treturn exist;\r\n\t}\r\n\r\n\tfunction refresh(force, list, prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer){\r\n\t\tvar cursor = list.$virtual.DOMCursor;\r\n\t\tvar additionalScroll = 0;\r\n\r\n\t\t// Find nearest cursor for current view position\r\n\t\tif(force){\r\n\t\t\tvar i = -1;\r\n\t\t\tvar length = list.$virtual.preparedLength;\r\n\r\n\t\t\tdo{\r\n\t\t\t\ti++;\r\n\t\t\t} while(i < length && parentNode.children[i].offsetTop < scroller.scrollTop);\r\n\r\n\t\t\tcursor = cursor + i;\r\n\t\t\tif(cursor > 0) cursor -= 1;\r\n\r\n\t\t\tadditionalScroll = scroller.scrollTop - parentNode.children[i].offsetTop;\r\n\t\t}\r\n\r\n\t\t// Force move cursor if element in the DOM tree was overloaded\r\n\t\tif(force || parentNode.childElementCount - 2 > list.$virtual.preparedLength){\r\n\t\t\tlist.$virtual.DOMCursor = list.length;\r\n\t\t\tvar moveTo = cursor;\r\n\t\t\tif(!force)\r\n\t\t\t\tmoveTo = cursor <= prepareCount ? cursor : (cursor + prepareCount);\r\n\r\n\t\t\tscrollTo(moveTo,\r\n\t\t\t\tlist,\r\n\t\t\t\tprepareCount,\r\n\t\t\t\tparentNode,\r\n\t\t\t\tscroller\r\n\t\t\t);\r\n\r\n\t\t\tscroller.scrollTop += additionalScroll;\r\n\t\t}\r\n\r\n\t\tif(refreshVirtualSpacer)\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\r\n\t\tif(checkCursorPosition)\r\n\t\t\tcheckCursorPosition();\r\n\r\n\t\trefreshScrollBounding(cursor, list.$virtual.bounding, list, parentNode);\r\n\t}\r\n\r\n\tvar _onElementResize = [];\r\n\tvar _onElementResize_timer = -1;\r\n\tfunction onElementResize(parentNode, callback){\r\n\t\tif(_onElementResize_timer === -1){\r\n\t\t\t_onElementResize_timer = setInterval(function(){\r\n\t\t\t\tvar temp = null;\r\n\t\t\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\t\t\ttemp = _onElementResize[i];\r\n\r\n\t\t\t\t\t// Check resize\r\n\t\t\t\t\tif(temp.element.scrollHeight === temp.height\r\n\t\t\t\t\t\t|| temp.element.scrollWidth === temp.width)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t// Check if it's removed from DOM\r\n\t\t\t\t\tif(temp.element.parentElement === null){\r\n\t\t\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.callback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(_onElementResize.length === 0){\r\n\t\t\t\t\tclearInterval(_onElementResize_timer);\r\n\t\t\t\t\t_onElementResize_timer = -1;\r\n\t\t\t\t}\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\r\n\t\t_onElementResize.push({\r\n\t\t\telement:parentNode,\r\n\t\t\tcallback:callback,\r\n\t\t\theight:parentNode.scrollHeight,\r\n\t\t\twidth:parentNode.scrollWidth\r\n\t\t});\r\n\t}\r\n\r\n\tfunction offElementResize(parentNode){\r\n\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\tif(_onElementResize[i].element === parentNode)\r\n\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Interval will be cleared when the array is empty\r\n\t}\r\n\r\n\tfunction initStyles(){\r\n\t\tvar style = document.getElementById('sf-styles');\r\n\r\n\t\tif(!style){\r\n\t\t\tstyle = document.createElement('style');\r\n\t\t\tstyle.id = 'sf-styles';\r\n        \tdocument.head.appendChild(style);\r\n\t\t}\r\n\r\n\t\tstyle.sheet.insertRule(\r\n\t\t'.sf-virtual-list .virtual-spacer{'+\r\n            'visibility: hidden;'+\r\n            'position: relative;'+\r\n            'height: 1px;'+\r\n            'transform-origin: 0 0;'+\r\n            'width: 1px;'+\r\n            'margin: 0;'+\r\n            'padding: 0;'+\r\n            'background: none;'+\r\n            'border: none;'+\r\n            'box-shadow: none;'+\r\n         '}', style.sheet.cssRules.length);\r\n\t}\r\n};"]}