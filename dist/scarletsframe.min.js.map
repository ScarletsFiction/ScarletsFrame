{"version":3,"sources":["sf-a_init.js","sf-a_polyfill.js","sf-dom.js","sf-loader.js","sf-component.js","sf-model.js","sf-controller.js","sf-e-ajax.js","sf-z_end.js","sf-router.js","sf-virtual_scroll.js"],"names":["global","factory","exports","module","sf","window","this","document","internal","stuff","constructor","Function","loader","onFinish","apply","arguments","tagName","model","root","controller","modelName","regex","getQuotes","validFunctionCall","strictVar","escapeHTML","uniqueDataParser","dataParser","allowedFunctionEval","avoidQuotes","str","func","temp","es","replace","full","push","length","i","isEmptyObject","obj","key","compareObject","obj1","obj2","hiddenProperty","property","value","Object","defineProperty","enumerable","configurable","deepProperty","path","capitalizeLetters","name","toUpperCase","slice","join","assign","target","varArgs","TypeError","to","index","nextSource","nextKey","prototype","hasOwnProperty","call","writable","Element","remove","CharacterData","DocumentType","forEach","item","parentNode","removeChild","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","querySelectorAll","NodeList","callback","thisArg","location","origin","protocol","hostname","port","values","res","setPrototypeOf","proto","__proto__","Reflect","construct","Parent","args","Class","a","instance","bind","_setPrototypeOf","dom","selector","context","parseElement","String","$","self","findOne","querySelector","parent","element","closest","parentElement","prevAll","isNext","result","findNodes","nextSibling","previousSibling","nextAll","on","event","once","tempCallback","ev","addEventListener","capture","sf$eventListener","off","events","split","ref","removeEventListener","splice","animateCSS","animationName","duration","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","style","webkitAnimationDuration","animationDuration","list","classList","add","setTimeout","emptyDOM","div","createElement","ul","tbody","tr","table","select","html","returnNode","tempDOM","indexOf","textContent","insertAdjacentHTML","escapeText","text","innerHTML","elements","documentElement","domReady","body","haveSymbol","getSelector","childIndexes","untilElement","names","id","test","unshift","e","array","substr","childNodes","loadedContent","totalContent","DOMWasLoaded","DOMReady","turnedOff","whenDOMReady","whenDOMLoaded","whenProgress","onProgress","f","css","rel","href","head","appendChild","js","type","async","src","console","warn","isQueued","domLoadEvent","queuePreprocess","domStateEvent","readyState","error","resourceWaitTimer","setInterval","waitResources","clearInterval","listener","init","router","component","scope","registered","available","bases","for","extend","pending","defineComponent","base","outerHTML","triggerEvent","componentInit","newID","from","setAttribute","sf$component","sf$componentFrom","new","$item","isCreated","retriggered","hasAttribute","newElement","cloneNode","newObj","Array","n","firstElementChild","destroy","DOMNodeRemoved","HTMLElement","customElements","HTMLElement_wrap","Wrapper","getPrototypeOf","create","eval","connectedCallback","define","err","root_","run","bindingEnabled","processingElement","trimIndentation","indent","trim","RegExp","bracketMatch","chackValidFunctionCall","localEval","script","_model_","_modelScope","_content_","tempScript","preventExecution","check_","exec","log","_result_","_evaled_","escapeEscapedQuote","unescapeEscapedQuote","elseIfHandle","else_","scopes","elseIf","elseValue","currentElement","previousElementSibling","getAttribute","$virtual","DOMCursor","modelKeys","modelRef","keys","templateParser_regex","REF_DIRECT","REF_IF","REF_EXEC","templateExec","parse","atIndex","parsed","data","if","templateParser","template","original","addresses","changesReference","pendingInsert","current","address","nodeType","refA","direct","match","cRef","dynamicFlag","parse_index","startFlag","attributes","refB","isValueInput","attribute","removeAttribute","sf$elementReferences","tDOM","insertBefore","syntheticCache","sf$cache","cache","modelRef_array","syntheticTemplate","changes","modelReference","newData","checkRelatedChanges","parseIndex","found","haveChanges","ref_","sf$haveChilds","sf$childRoot","reverse","currentDOM","notExist","isEqualNode","replaceChild","mask","runEval","preParsedReference","scopeMask","itemMask","preParsed","lastParsedIndex","prepared","actual","temp_","matched","exist","charCodeAt","take","passVar","currentIndex","strDeclare","firstTime","JSON","stringify","check","VarPass_","VarPass","s1","obtained","val","findElse","pop","shift","condition","bindArray","propertyName","targetNode","editProperty","refreshTimer","parentChilds","children","isKeyed","contains","eventVar","processElement","options","other","count","vEndRange","preparedLength","spacer","lastElementChild","height","reset","clearTimeout","reinitScroll","overflow","vDOM","theParent","update","index_a","other_sibling","other_parent","oldChild","referenceNode","vCursor","floor","insertAdjacentElement","currentRemoved","startRemove","refreshVirtualSpacer","propertyProxy","subject","lastLength","reinitCursor","o","resetViewport","matchLeft","refresh","real","limit","callback_","var","virtual_scroll","handle","needle","elRef","getElement","process","content","parentNode_","elem","hardRefresh","softRefresh","virtualChilds","childElement","childElementCount","loopParser","method","items","extractPreprocess","sf$bindedKey","initBindingInformation","get","set","callInputListener","v2m","newValue1","newValue2","old","inputBoundRunning","inputTextBound","fromSFFramework","viewInputted","typeData","Number","newValue","sfModel","sfBounded","inputFilesBound","files","inputCheckBoxBound","checked","Boolean","inputSelectBound","multiple","selectedOptions","assignElementData","arrayValue","selected","checkbox","inputBoundRun","Event","dispatchEvent","triggerInputEvent","elementBoundChanges","oneWay","toLowerCase","modelToViewBinding","bindInput","modelScope","alreadyInitialized","queued","parsePreprocess","ceiling","after","nextElementSibling","before","removeModelBinding","modelFrom","components","everyRemovedNodes","nodes","MutationObserver","observe","everyRecords","record","removedNodes","records","childList","subtree","bindedKey","getOwnPropertyDescriptor","elementBind","input","objValue","getAssigner","m2v","out","newValue3","dcBracket","bindElement","onChanges","properties","copy","addressed","addressAttributes","currentNode","attrs","indexes","addressStart","commentFlag","flag","createComment","textNode","createTextNode","search","extract","sort","b","checkList","full_","match_","findModelProperty","asArray","enclosedHTMLParse","excludes","extracting","nodeName","enclosing","enclosed","nodeValue","modelElement","attr","active","bindedList","parentEl","bindedListIndex","listenSFClick","script_","method_","preventDefault","globals","jsonpRequests","Request","requestOptions","globalsNoCallbacks","callbackName","defaults","url","toString","user","password","headers","xhrFields","statusCode","processData","dataType","contentType","timeout","fireCallback","globalCallbackValue","optionCallbackValue","_i","paramsPrefix","stringData","serializeQuery","abortTimeout_1","callbackName_1","Date","now","callbackSplit","requestUrl","addVars","filter","el","script_1","onerror","xhr","XMLHttpRequest","requestParameters","open","xhrTimeout","postData","ArrayBuffer","Blob","Document","FormData","boundary","setRequestHeader","headerName","crossDomain","$2","host","onload","status","responseData","parseError","responseText","responseType","response","onabort","abort","send","RequestShortcut","_a","success","params","prefix","encodeURIComponent","concat","post","json","getJSON","postJSON","setup","ajax","loading","enabled","pauseRenderOnTransition","currentPage","initialized","currentRouterURL","popstateListener","routingError","routingBack","goto","pathname","beforeEvent","enable","load","onEvent","loaded","special","lazyViewPoint","history","pushState","RouterLoading","_scarlets","DOMReference","foundAction","last","afterEvent","title","oldURL","newURL","routerLoaded","aborted","back","styleInitialized","scrollingByScript","refreshScrollBounding","cursor","bounding","Math","prepareCount","offsetTop","initial","dCursor","scrollHeight","scrollTo","scroller","virtual","reduce","scrollTop","insertCount","removeUserScrollFocus","getAbsoluteHeight","styles","getComputedStyle","margin","parseInt","offsetHeight","force","checkCursorPosition","additionalScroll","moveTo","getElementById","sheet","insertRule","cssRules","initStyles","reinitOnly","elementLength","obtainElements","_onElementResize","offElementResize","visibleLength","clientHeight","ceilingHeight","floorHeight","fillViewport","updating","resetCeiling","previousCeiling","nextFloor","hitFloor","hitCeiling","_onElementResize_timer","scrollWidth","width","onElementResize","dynamicHeight","offsetTo","fromCeiling","scrollFocused","moveElementCursor","navigator","userAgent","staticHeight"],"mappings":"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","file":"scarletsframe.min.js","sourcesContent":["(function(global, factory){\r\n  if(typeof exports === 'object' && typeof module !== 'void 0') module.exports = factory(global);\r\n  else global.sf = factory(global);\r\n}(typeof window !== \"void 0\" ? window : this, (function(window){'use strict';\r\nif(typeof document === void 0)\r\n\tdocument = window.document;\r\n// ===== Module Init =====\r\nvar internal = {};\r\n\r\nvar sf = function(stuff){\r\n\tif(stuff.constructor === Function)\r\n\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\r\n\t// If it's Node type\r\n\tif(stuff.tagName !== void 0)\r\n\t\treturn sf.model.root[sf.controller.modelName(stuff)];\r\n};\r\n\r\nsf.internal = {};\r\nsf.regex = {\r\n\tgetQuotes:/(['\"])[\\s\\S]*?[^\\\\]\\1/g,\r\n\tvalidFunctionCall:/[a-zA-Z0-9 \\]\\$\\)]/,\r\n\tstrictVar:'(?=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )',\r\n\tescapeHTML:/(?!&#.*?;)[\\u00A0-\\u9999<>\\&]/gm,\r\n\r\n\tuniqueDataParser:/{{((@|#[\\w])[\\s\\S]*?)}}/g,\r\n\tdataParser:/{{([^@%][\\s\\S]*?)}}/g,\r\n};\r\n\r\nvar allowedFunctionEval = [':', 'for', 'if', 'while', '_content_.take', 'console.log'];\r\n\r\nfunction avoidQuotes(str, func){\r\n\tvar temp = [];\r\n\tvar es = '<%$@>';\r\n\tstr = str.replace(sf.regex.getQuotes, function(full){\r\n\t\ttemp.push(full);\r\n\t\treturn es+(temp.length-1)+es;\r\n\t});\r\n\tstr = func(str);\r\n\tfor (var i = 0; i < temp.length; i++) {\r\n\t\tstr = str.replace(es+i+es, temp[i]);\r\n\t}\r\n\treturn str;\r\n}\r\n\r\nfunction isEmptyObject(obj){\r\n\tfor(var key in obj){\r\n\t\treturn false;\r\n\t}\r\n\treturn true\r\n}\r\n\r\nfunction compareObject(obj1, obj2){\r\n\tif(!obj1 || !obj2)\r\n\t\treturn false;\r\n\r\n\tfor(var i in obj1){\r\n\t\tif(typeof obj1[i] !== 'object' && obj1[i] !== obj2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction hiddenProperty(obj, property, value){\r\n\tObject.defineProperty(obj, property, {\r\n\t\tenumerable: false,\r\n\t\tconfigurable: true,\r\n\t\tvalue: value\r\n\t});\r\n}\r\n\r\nfunction deepProperty(obj, path){\r\n  for(var i = 0; i < path.length; i++){\r\n    obj = obj[path[i]];\r\n    if(obj === void 0) return obj;\r\n  }\r\n  return obj;\r\n}\r\n\r\nfunction capitalizeLetters(name){\r\n\tfor (var i = 0; i < name.length; i++) {\r\n\t\tname[i] = name[i][0].toUpperCase() + name[i].slice(1);\r\n\t}\r\n\treturn name.join('');\r\n}","// ==== ES5 Polyfill ====\r\nif(typeof Object.assign != 'function'){\r\n  Object.defineProperty(Object, \"assign\", {\r\n    value: function assign(target, varArgs) {\r\n      'use strict';\r\n      if (target == null)\r\n        throw new TypeError('Cannot convert void 0 or null to object');\r\n      var to = Object(target);\r\n      for (var index = 1; index < arguments.length; index++) {\r\n        var nextSource = arguments[index];\r\n        if (nextSource != null) {\r\n          for (var nextKey in nextSource) {\r\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey))\r\n              to[nextKey] = nextSource[nextKey];\r\n          }\r\n        }\r\n      }\r\n      return to;\r\n    },\r\n    writable: true,\r\n    configurable: true\r\n  });\r\n}\r\n\r\nif(Element.prototype.remove === void 0 || CharacterData.prototype.remove === void 0 || DocumentType.prototype.remove === void 0){\r\n  (function (arr) {\r\n    arr.forEach(function (item) {\r\n      if (item.hasOwnProperty('remove')) {\r\n        return;\r\n      }\r\n      Object.defineProperty(item, 'remove', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n        value: function remove() {\r\n          if (this.parentNode !== null)\r\n            this.parentNode.removeChild(this);\r\n        }\r\n      });\r\n    });\r\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\r\n}\r\n\r\nif(!Element.prototype.matches){\r\n  Element.prototype.matches = (Element.prototype).matchesSelector ||\r\n    (Element.prototype).mozMatchesSelector || (Element.prototype).msMatchesSelector ||\r\n    (Element.prototype).oMatchesSelector || (Element.prototype).webkitMatchesSelector ||\r\n    function (s) {\r\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n      i = matches.length;\r\n      while (--i >= 0 && matches.item(i) !== this){}\r\n      return i > -1;\r\n    };\r\n}\r\n\r\nif(!NodeList.prototype.forEach){\r\n    NodeList.prototype.forEach = function (callback, thisArg) {\r\n        thisArg = thisArg || window;\r\n        for (var i = 0; i < this.length; i++) {\r\n            callback.call(thisArg, this[i], i, this);\r\n        }\r\n    };\r\n}\r\n\r\nif(!window.location.origin)\r\n  window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');\r\n\r\nif(!Object.values)\r\n  Object.values = function(obj){\r\n    var res = [];\r\n    for (var i in obj) {\r\n        if (obj.hasOwnProperty(i)) {\r\n            res.push(obj[i]);\r\n        }\r\n    }\r\n    return res;\r\n  }\r\n\r\nif(Object.setPrototypeOf === void 0)\r\n  Object.setPrototypeOf = function(obj, proto) {\r\n    obj.__proto__ = proto;\r\n    return obj; \r\n  }\r\n\r\nif(typeof Reflect === 'undefined'){\r\n  Reflect = {};\r\n  Reflect.construct = function(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; };\r\n}","sf.dom = function(selector, context){\r\n\tif(selector[0] === '<') return sf.dom.parseElement(selector);\r\n\tif(selector.constructor !== String) return selector;\r\n\r\n\tif(context) return context.querySelectorAll(selector);\r\n\treturn document.querySelectorAll(selector);\r\n}\r\n\r\nvar $ = sf.dom; // Shortcut\r\n\r\n;(function(){\r\n\tvar self = sf.dom;\r\n\r\n\tself.findOne = function(selector, context){\r\n\t\tif(context !== void 0) return context.querySelector(selector);\r\n\t\treturn document.querySelector(selector);\r\n\t}\r\n\r\n\tself.parent = function(element, selector){\r\n\t\tif(element.closest) return element.closest(selector);\r\n\r\n\t\tdo {\r\n\t\t\tif(element.matches(selector) === true)\r\n\t\t\t\treturn element;\r\n\r\n\t\t\telement = element.parentElement;\r\n\t\t} while (element !== null);\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tself.prevAll = function(element, selector, isNext){\r\n\t\tvar result = [];\r\n\t\tvar findNodes = selector === null || selector.constructor !== String ? true : false;\r\n\r\n\t\t// Skip current element\r\n\t\telement = isNext ? element.nextSibling : element.previousSibling;\r\n\t\twhile (element !== null) {\r\n\t\t\tif(findNodes === false && element.matches(selector) === true)\r\n\t\t\t\tresult.push(element);\r\n\t\t\telse{\r\n\t\t\t\tif(element === selector)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tresult.push(element);\r\n\t\t\t}\r\n\r\n\t\t\tif(isNext)\r\n\t\t\t\telement = element.nextSibling;\r\n\t\t\telse\r\n\t\t\t\telement = element.previousSibling;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.nextAll = function(element, selector){\r\n\t\treturn self.prevAll(element, selector, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen to an event\r\n\t * @param  Node \t\t\telement \tparent element\r\n\t * @param  string \t\t\tevent   \tevent name\r\n\t * @param  function|string  selector    callback function or selector\r\n\t * @param  function\t\t\tcallback    callback function\r\n\t * @param  boolean\t\t\tonce    \tcall once\r\n\t * @return null\r\n\t */\r\n\tself.on = function(element, event, selector, callback, once){\r\n\t\tif(typeof element === 'string'){\r\n\t\t\telement = document;\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = event;\r\n\t\t\tevent = element;\r\n\t\t}\r\n\r\n\t\tif(typeof selector === 'function'){\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = null;\r\n\t\t}\r\n\r\n\t\tif(selector){\r\n\t\t\tvar tempCallback = callback;\r\n\t\t\tcallback = function(ev){\r\n\t\t\t\tif(self.parent(ev.target, selector) !== null)\r\n\t\t\t\t\ttempCallback(ev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcallback.selector = selector;\r\n\t\tcallback.once = once;\r\n\t\telement.addEventListener(event, callback, {capture:true, once:once === true});\r\n\r\n\t\t// Save event listener\r\n\t\tif(element.sf$eventListener === void 0)\r\n\t\t\telement.sf$eventListener = {};\r\n\r\n\t\tif(element.sf$eventListener[event] === void 0)\r\n\t\t\telement.sf$eventListener[event] = [];\r\n\r\n\t\telement.sf$eventListener[event].push(callback);\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.once = function(element, event, selector, callback){\r\n\t\tself.on(element, event, selector, callback, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event listener\r\n\t * @param  Node \telement \tparent element\r\n\t * @param  string \tevent   \tevent name\r\n\t * @param  string  \tselector    selector\r\n\t * @return null\r\n\t */\r\n\tself.off = function(element, event, selector){\r\n\t\t// Remove all event\r\n\t\tif(event === void 0){\r\n\t\t\tif(element.sf$eventListener === void 0)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar events = element.sf$eventListener[event];\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar events = event.split(' ');\r\n\t\tif(events.length !== 1){\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove listener\r\n\t\tif(element.sf$eventListener === void 0)\r\n\t\t\treturn;\r\n\r\n\t\tvar ref = element.sf$eventListener;\r\n\t\tif(ref !== void 0 && ref[event] !== void 0){\r\n\t\t\tfor (var i = ref[event].length - 1; i >= 0; i--) {\r\n\t\t\t\tif(selector && ref[event][i].selector !== selector)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\telement.removeEventListener(event, ref[event].splice(i, 1), true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.animateCSS = function(element, animationName, callback, duration) {\r\n\t\tvar animationEnd = {\r\n\t\t\tanimation: 'animationend',\r\n\t\t\tOAnimation: 'oAnimationEnd',\r\n\t\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t\t};\r\n\r\n\t\tfor (var t in animationEnd){\r\n\t\t\tif(element.style[t] !== void 0){\r\n\t\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(duration){\r\n\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t}\r\n\r\n\t\tvar list = ('animated ' + animationName).split(' ');\r\n\t\telement.classList.add.apply(element.classList, list);\r\n\t\t$.once(element, animationEnd, function(){\r\n\t\t\telement.classList.remove.apply(element.classList, list);\r\n\t\t\t\r\n\t\t\tif(duration) setTimeout(function(){\r\n\t\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t\t}, 1);\r\n\r\n\t\t\tif(typeof callback === 'function') callback();\r\n\t\t});\r\n\t}\r\n\r\n\tvar emptyDOM = {\r\n\t\tdiv:document.createElement('div'),\r\n\t\tul:document.createElement('ul'),\r\n\t\ttbody:document.createElement('tbody'),\r\n\t\ttr:document.createElement('tr'),\r\n\t\ttable:document.createElement('table'),\r\n\t\tselect:document.createElement('select'),\r\n\t};\r\n\tself.parseElement = function(html, returnNode){\r\n\t\tvar result = [];\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\r\n        if(html.indexOf('<li') === 0) tempDOM = emptyDOM.ul;\r\n        if(html.indexOf('<tr') === 0) tempDOM = emptyDOM.tbody;\r\n        if(html.indexOf('<td') === 0 || html.indexOf('<th') === 0) tempDOM = emptyDOM.tr;\r\n        if(html.indexOf('<tbody') === 0) tempDOM = emptyDOM.table;\r\n        if(html.indexOf('<option') === 0) tempDOM = emptyDOM.select;\r\n\r\n\t\ttempDOM.textContent = '';\r\n\t\ttempDOM.insertAdjacentHTML('afterBegin', html);\r\n\r\n\t\tvar ref = tempDOM[returnNode ? 'childNodes' : 'children'];\r\n\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\tresult.push(ref.item(i));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tself.escapeText = function(text){\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\t\ttempDOM.textContent = text;\r\n\t\treturn tempDOM.innerHTML;\r\n\t}\r\n\r\n\tself.remove = function(elements){\r\n\t\tif(elements.remove !== void 0)\r\n\t\t\treturn elements.remove();\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\telements[i].remove();\r\n\t\t}\r\n\t}\r\n\r\n\tvar documentElement = null;\r\n\tsetTimeout(function(){\r\n\t\tsf.loader.domReady(function(){\r\n\t\t\tdocumentElement = document.body.parentElement;\r\n\t\t});\r\n\t}, 1);\r\n\r\n\tvar haveSymbol = /[~`!@#$%^&*()+={}|[\\]\\\\:\";'<>?,./ ]/;\r\n\tself.getSelector = function(element, childIndexes, untilElement){\r\n\t\tvar names = [];\r\n\t\tif(untilElement === void 0) untilElement = documentElement;\r\n\r\n\t\tvar previousSibling = childIndexes ? 'previousSibling' : 'previousElementSibling';\r\n\r\n\t\twhile(element.parentNode !== null){\r\n\t\t\tif(element.id && !haveSymbol.test(element.id)){\r\n\t\t\t\tnames.unshift('#'+element.id);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(element === untilElement){\r\n\t\t\t\t\tif(childIndexes === void 0)\r\n\t\t\t\t\t\tnames.unshift(element.tagName);\r\n\t\t\t\t\telse names.unshift(0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar e = element;\r\n\t\t\t\t\tvar i = childIndexes ? 0 : 1;\r\n\r\n\t\t\t\t\twhile(e[previousSibling]){\r\n\t\t\t\t\t\te = e[previousSibling];\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(childIndexes)\r\n\t\t\t\t\t\tnames.unshift(i);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tnames.unshift(\":nth-child(\"+i+\")\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t\tif(element === null)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndexes)\r\n\t\t\treturn names;\r\n\t\treturn names.join(\" > \");\r\n\t}\r\n\r\n\tself.childIndexes = function(array, context){\r\n\t\tvar element = context || documentElement;\r\n\t\tvar i = 1;\r\n\r\n\t\tif(array[0].constructor === String && element.id !== array[0].substr(1))\r\n\t\t\telement = element.querySelector(array[0]);\r\n\r\n\t\telse if(array.length === 1)\r\n\t\t\treturn element;\r\n\r\n\t\tfor (i = i; i < array.length; i++) {\r\n\t\t\telement = element.childNodes.item(array[i]);\r\n\r\n\t\t\tif(element === null)\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n})();","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 0;\r\n\tself.DOMWasLoaded = false;\r\n\tself.DOMReady = false;\r\n\tself.turnedOff = true;\r\n\r\n\tvar whenDOMReady = [];\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\tself.off = function(){\r\n\t\tself.turnedOff = true;\r\n\t}\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.domReady = function(func){\r\n\t\tif(self.DOMReady) return func();\r\n\t\tif(whenDOMReady.indexOf(func) !== -1) return;\r\n\t\twhenDOMReady.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('link');\r\n\t        s.rel = 'stylesheet';\r\n\t        s.href = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tself.js = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('script');\r\n\t        s.type = \"text/javascript\";\r\n\t        s.async = true;\r\n\t        s.src = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(function(){\r\n\t\tif(self.totalContent === 0 && !self.turnedOff){\r\n\t\t\tself.loadedContent = self.totalContent = 1;\r\n\t\t\tconsole.warn(\"If you don't use content loader feature, please turn it off with `sf.loader.off()`\");\r\n\t\t}\r\n\t}, 10000);\r\n\r\n\r\n\tvar isQueued = false;\r\n\tvar lastState = '';\r\n\tdocument.addEventListener(\"load\", function domLoadEvent(event){\r\n\t\t// Add processing class to queued element\r\n\t\tif(isQueued === false && document.body){\r\n\t\t\tdocument.removeEventListener('load', domLoadEvent, true);\r\n\r\n\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tfor (var i = 0; i < isQueued.length; i++) {\r\n\t\t\t\tisQueued[i].classList.add('sf-dom-queued');\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued.length === 0) isQueued = false;\r\n\r\n\t\t\tif(lastState === 'loading'){\r\n\t\t\t\tvar repeatedList = $('[sf-repeat-this]', document.body);\r\n\t\t\t\tfor (var i = 0; i < repeatedList.length; i++) {\r\n\t\t\t\t\trepeatedList[i].classList.add('sf-dom-queued');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Find images\r\n\t\t\t\tvar temp = $('img:not(onload)[src]');\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tsf.loader.totalContent++;\r\n\t\t\t\t\ttemp[i].addEventListener('load', sf.loader.f, {once:true});\r\n\t\t\t\t\ttemp[i].addEventListener('error', sf.loader.f, {once:true});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, true);\r\n\r\n\tdocument.addEventListener('readystatechange', function domStateEvent(){\r\n\t\tif(document.readyState === 'interactive' || document.readyState === 'complete'){\r\n\t\t\tif(self.DOMReady === false){\r\n\t\t\t\tself.DOMReady = true;\r\n\t\t\t\tfor (var i = 0; i < whenDOMReady.length; i++) {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\twhenDOMReady[i]();\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued === false)\r\n\t\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tresourceWaitTimer = setInterval(waitResources, 100);\r\n\t\t\tdocument.removeEventListener('readystatechange', domStateEvent, true);\r\n\t\t}\r\n\t}, true);\r\n\r\n\tvar resourceWaitTimer = -1;\r\n\tfunction waitResources(){\r\n\t\tif(self.turnedOff === false && self.loadedContent < self.totalContent)\r\n\t\t\treturn;\r\n\r\n\t\tclearInterval(resourceWaitTimer);\r\n\r\n\t\tvar listener = sf.dom('script, link, img');\r\n\t\tfor (var i = 0; i < listener.length; i++) {\r\n\t\t\tlistener[i].removeEventListener('error', sf.loader.f);\r\n\t\t\tlistener[i].removeEventListener('load', sf.loader.f);\r\n\t\t}\r\n\r\n\t\tself.DOMWasLoaded = true;\r\n\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\ttry{\r\n\t\t\t\twhenDOMLoaded[i]();\r\n\t\t\t} catch(e){\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\twhenProgress.splice(0);\r\n\t\twhenDOMReady.splice(0);\r\n\t\twhenDOMLoaded.splice(0);\r\n\t\twhenDOMReady = whenDOMLoaded = null;\r\n\r\n\t\t// Last init\r\n\t\tsf.controller.init();\r\n\t\tsf.model.init(document.body, isQueued);\r\n\t\tsf.router.init();\r\n\r\n\t\tisQueued = null;\r\n\t}\r\n}\r\nsf.prototype.constructor = sf.loader.onFinish;","sf.component = new function(){\r\n\tvar self = this;\r\n\tvar scope = internal.component = {};\r\n\tself.registered = {};\r\n\tself.available = {};\r\n\r\n\tvar bases = {};\r\n\tvar events = {};\r\n\r\n\tself.for = function(name, func, extend){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(self.registered[name] === void 0)\r\n\t\t\tself.registered[name] = [func, sf.controller.pending[name], 0, false, extend];\r\n\t\tself.registered[name][0] = func;\r\n\t\tdelete sf.controller.pending[name];\r\n\r\n\t\tdefineComponent(name);\r\n\t}\r\n\r\n\tself.event = function(name, func){\r\n\t\tevents[name] = func;\r\n\t}\r\n\r\n\tself.base = function(name, func){\r\n\t\tbases[name] = func;\r\n\t}\r\n\r\n\tself.html = function(name, outerHTML){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.html(name, outerHTML);\r\n\t\t\t});\r\n\r\n\t\tif(self.registered[name] === void 0)\r\n\t\t\tself.registered[name] = [false, false, 0, false];\r\n\r\n\t\tvar temp = $.parseElement(outerHTML);\r\n\t\tif(temp.length === 1){\r\n\t\t\tself.registered[name][3] = temp[0];\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tempDOM = document.createElement('div');\r\n\t\ttempDOM.tempDOM = true;\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\ttempDOM.appendChild(temp[i]);\r\n\t\t}\r\n\t\tself.registered[name][3] = tempDOM;\r\n\t}\r\n\r\n\tscope.triggerEvent = function(name, event, obj){\r\n\t\tif(events[name] === void 0 || events[name][event] === void 0)\r\n\t\t\treturn;\r\n\r\n\t\tevents[name][event](obj, event);\r\n\t}\r\n\r\n\tvar tempDOM = document.createElement('div');\r\n\tself.new = function(name, element, $item, isCreated, retriggered){\r\n\t\tif(isCreated === true){\r\n\t\t\tif(sf.loader.DOMWasLoaded === false)\r\n\t\t\t\treturn sf(function(){\r\n\t\t\t\t\tself.new(name, element, $item, isCreated, false);\r\n\t\t\t\t});\r\n\t\t\tif(self.registered[name][3] === false)\r\n\t\t\t\treturn setTimeout(function(){\r\n\t\t\t\t\tself.new(name, element, $item, isCreated, true);\r\n\t\t\t\t}, 0);\r\n\r\n\t\t\tif(element.hasAttribute('sf-component-ignore') === true)\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(element === void 0)\r\n\t\t\treturn new window['$'+capitalizeLetters(name.split('-'))];\r\n\r\n\t\tvar newElement = element === void 0;\r\n\t\tif(element === void 0){\r\n\t\t\tif(self.registered[name][3] === false){\r\n\t\t\t\tconsole.error(\"HTML content for '\"+name+\"' was not defined\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement = self.registered[name][3].cloneNode(true);\r\n\t\t}\r\n\r\n\t\tvar newID = name+'@'+(self.registered[name][2]++);\r\n\r\n\t\tif(self.available[name] === void 0)\r\n\t\t\tself.available[name] = [];\r\n\r\n\t\tself.available[name].push(newID);\r\n\r\n\t\tvar newObj = sf.model.root[newID] = {};\r\n\t\tself.registered[name][0](newObj, sf.model, $item, element);\r\n\r\n\t\tvar extend = self.registered[name][4];\r\n\t\tif(extend !== void 0){\r\n\t\t\tif(extend.constructor === Array){\r\n\t\t\t\tfor (var i = 0; i < extend.length; i++) {\r\n\t\t\t\t\tif(bases[extend[i]] === void 0)\r\n\t\t\t\t\t\treturn console.error(\"'\"+extend[i]+\"' base is not found\");\r\n\t\t\t\t\tbases[extend[i]](newObj, sf.model, $item, element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(bases[extend] === void 0)\r\n\t\t\t\t\treturn console.error(\"'\"+extend+\"' base is not found\");\r\n\t\t\t\tbases[extend](newObj, sf.model, $item, element);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(self.registered[name][1])\r\n\t\t\tself.registered[name][1](newObj, sf.model, $item, element);\r\n\r\n\t\tscope.triggerEvent(name, 'created', newObj);\r\n\r\n\t\tif(newElement !== true && isCreated !== true){\r\n\t\t\tcomponentInit(element, newID, name);\r\n\t\t\telement.model = sf.model.root[newID];\r\n\t\t\treturn newID;\r\n\t\t}\r\n\r\n\t\tvar temp = self.registered[name][3];\r\n\t\tif(temp.tempDOM === true){\r\n\t\t\ttemp = temp.cloneNode(true).childNodes;\r\n\t\t\tfor (var i = 0, n = temp.length; i < n; i++) {\r\n\t\t\t\telement.appendChild(temp[0]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse element.appendChild(temp.cloneNode(true));\r\n\r\n\t\tif(element.parentNode === null){\r\n\t\t\t// Wrap to temporary vDOM\r\n\t\t\ttempDOM.appendChild(element);\r\n\t\t\tcomponentInit(element, newID, name);\r\n\t\t\tsf.model.init(element);\r\n\t\t\telement = tempDOM.firstElementChild;\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t\telse if(isCreated === true){\r\n\t\t\tcomponentInit(element, newID, name);\r\n\t\t\tsf.model.init(element);\r\n\t\t}\r\n\r\n\t\telement.model = sf.model.root[newID];\r\n\t\telement.destroy = function(){\r\n\t\t\tif(this.parentElement === null)\r\n\t\t\t\tinternal.model.DOMNodeRemoved(this);\r\n\t\t\telse this.remove();\r\n\t\t}\r\n\t\treturn element;\r\n\t}\r\n\r\n\tfunction componentInit(element, newID, from){\r\n\t\telement.setAttribute('sf-controller', '');\r\n\t\telement.sf$component = newID;\r\n\t\telement.sf$componentFrom = from;\r\n\t}\r\n\r\n\tvar HTMLElement = window.HTMLElement;\r\n\tvar customElements = window.customElements;\r\n\r\n\tvar HTMLElement_wrap = (function(Class){\r\n\t\tfunction Wrapper(){\r\n\t\t\treturn Reflect.construct(Class, arguments, Object.getPrototypeOf(this).constructor);\r\n\t\t}\r\n\t\tWrapper.prototype = Object.create(Class.prototype, {constructor:{value: Wrapper, enumerable: false, writable: true, configurable: true}}); \r\n\t\treturn Object.setPrototypeOf(Wrapper, Class);\r\n\t})(HTMLElement);\r\n\r\n\t// name = 'tag-name'\r\n\tfunction defineComponent(name){\r\n\t\tname = name.replace(/[^\\w-]+/g, '');\r\n\t\tvar tagName = name;\r\n\t\tname = name.split('-');\r\n\t\tif(name.length === 1)\r\n\t\t\treturn console.error(\"Please use '-' when defining component tags\");\r\n\r\n\t\tname = capitalizeLetters(name);\r\n\t\tvar func = eval(\"function \"+name+\"($item){var he = HTMLElement_wrap.call(this);self.new(tagName, he, $item, true, false);return he}\"+name);\r\n\t\tfunc.prototype = Object.create(HTMLElement.prototype);\r\n\t\tfunc.prototype.constructor = func;\r\n\t\tfunc.__proto__ = HTMLElement;\r\n\r\n\t\tfunc.prototype.connectedCallback = function(){\r\n\t\t\tscope.triggerEvent(name, 'connected', this);\r\n\t\t};\r\n\r\n\t\ttry{\r\n\t\t  customElements.define(tagName, func);\r\n\t\t}catch(err){console.error(err)}\r\n\r\n\t\twindow['$'+name] = func;\r\n\t}\r\n};","// Data save and HTML content binding\r\nsf.model = function(scope){\r\n\t// If it's component tag\r\n\tif(sf.component.registered[scope] !== void 0)\r\n\t\treturn root_(scope);\r\n\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\tif(sf.controller.pending[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n};\r\n\r\n(function(){\r\n\tvar self = sf.model;\r\n\tvar scope = internal.model = {};\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\r\n\tvar processingElement = null;\r\n\r\n\t// For debugging, normalize indentation\r\n\tfunction trimIndentation(text){\r\n\t\tvar indent = text.split(\"\\n\", 3);\r\n\t\tif(indent[0][0] !== ' ' || indent[0][0] !== \"\\t\")\r\n\t\t\tindent = indent[1];\r\n\t\telse indent = indent[0];\r\n\r\n\t\tif(indent === void 0) return text;\r\n\t\tindent = indent.length - indent.trim().length;\r\n\t\tif(indent === 0) return text;\r\n\t\treturn text.replace(RegExp('^([\\\\t ]{'+indent+'})', 'gm'), '');\r\n\t}\r\n\r\n\t// Secured evaluation\r\n\tvar bracketMatch = RegExp('([\\\\w.]*?[\\\\S\\\\s])\\\\('+sf.regex.avoidQuotes, 'g');\r\n\tvar chackValidFunctionCall = sf.regex.validFunctionCall;\r\n\tvar localEval = function(script, _model_, _modelScope, _content_){\r\n\t\t\"use strict\";\r\n\r\n\t\t// ==== Security check ====\r\n\t\tvar tempScript = script;\r\n\r\n\t\t// Remove all inner quotes\r\n\t\ttempScript = tempScript.replace(sf.regex.getQuotes, '\"Quotes\"');\r\n\r\n\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\tvar preventExecution = false;\r\n\t\tvar check_ = null;\r\n\t\twhile((check_ = bracketMatch.exec(tempScript)) !== null){\r\n\t\t\tcheck_[1] = check_[1].trim();\r\n\r\n\t\t\tif(allowedFunctionEval.indexOf(check_[1]) === -1 &&\r\n\t\t\t\tcheck_[1].split('.')[0] !== '_modelScope' &&\r\n\t\t\t\tchackValidFunctionCall.test(check_[1][check_[1].length-1])\r\n\t\t\t){\r\n\t\t\t\tpreventExecution = check_[1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(preventExecution){\r\n\t\t\tconsole.error(\"Trying to executing unrecognized function (\"+preventExecution+\")\");\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\t\t// ==== Security check ended ====\r\n\t\r\n\t\tvar _result_ = '';\r\n\t\ttry{\r\n\t\t\tif(/@return /.test(script) === true){\r\n\t\t\t\tvar _evaled_ = eval('(function(){'+script.split('@return ').join('return ')+'})()');\r\n\t\t\t\treturn _result_ + _evaled_;\r\n\t\t\t}\r\n\t\t\telse var _evaled_ = eval(script);\r\n\t\t} catch(e){\r\n\t\t\tconsole.error(e);\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\t// Find an index for the element on the list\r\n\tself.index = function(element){\r\n\t\tvar i = -1;\r\n\t\tvar tagName = element.tagName;\r\n\t\tvar currentElement = element;\r\n\r\n\t\twhile(element !== null) {\r\n\t\t\tif(element.tagName === tagName)\r\n\t\t\t\ti++;\r\n\r\n\t\t\telement = element.previousElementSibling;\r\n\t\t}\r\n\r\n\t\tvar list = currentElement.getAttribute('sf-bind-list');\r\n\t\tif(!list) return i;\r\n\r\n\t\tvar ref = self.root[sf.controller.modelName(currentElement)][list];\r\n\t\tif(!ref.$virtual) return i;\r\n\r\n\t\treturn i + ref.$virtual.DOMCursor - 1;\r\n\t}\r\n\r\n\t// Declare model for the name with a function\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\t\t\r\n\t\tfunc(self(name), self);\r\n\t}\r\n\r\n\t// Get property of the model\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys;\r\n\t}\r\n\r\n\t// Escape the escaped quote\r\n\tfunction escapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*');\r\n\t}\r\n\r\n\tfunction unescapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\");\r\n\t}\r\n\r\n\tfunction elseIfHandle(else_, scopes){\r\n\t\tvar elseIf = else_.elseIf;\r\n\r\n\t\t// Else if\r\n\t\tfor (var i = 0; i < elseIf.length; i++) {\r\n\t\t\t// Check the condition\r\n\t\t\tscopes[0] = elseIf[i][0];\r\n\t\t\tif(!localEval.apply(self.root, scopes))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Get the value\r\n\t\t\tscopes[0] = elseIf[i][1];\r\n\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t}\r\n\r\n\t\t// Else\r\n\t\tif(else_.elseValue === null)\r\n\t\t\treturn '';\r\n\r\n\t\tscopes[0] = else_.elseValue;\r\n\t\treturn localEval.apply(self.root, scopes);\r\n\t}\r\n\r\n\t// ==== Template parser ====\r\n\tvar templateParser_regex = /{{%=([0-9]+)/gm;\r\n\tvar REF_DIRECT = 0, REF_IF = 1, REF_EXEC = 2;\r\n\tvar templateExec = function(parse, item, atIndex){\r\n\t\tvar parsed = {};\r\n\r\n\t\t// Get or evaluate static or dynamic data\r\n\t\tfor (var i = 0; i < parse.length; i++) {\r\n\t\t\tif(atIndex !== void 0 && atIndex.indexOf(i) === -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar ref = parse[i];\r\n\t\t\tref.data[1] = item;\r\n\r\n\t\t\t// Direct evaluation type\r\n\t\t\tif(ref.type === REF_DIRECT || ref.type === REF_EXEC)\r\n\t\t\t\tparsed[i] = {type:ref.type, data:localEval.apply(self.root, ref.data)};\r\n\r\n\t\t\t// Conditional type\r\n\t\t\telse if(ref.type === REF_IF){\r\n\t\t\t\tvar scopes = ref.data;\r\n\t\t\t\tparsed[i] = {type:ref.type, data:''};\r\n\t\t\t\tscopes[0] = ref.if[0];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tparsed[i].data = elseIfHandle(ref, scopes);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscopes[0] = ref.if[1];\r\n\t\t\t\tparsed[i].data = localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n\r\n\tvar templateParser = function(template, item, original){\r\n\t\tif(template.component !== void 0){\r\n\t\t\tvar html = new template.component(item);\r\n\t\t\thtml.setAttribute('sf-bind-list', template.list);\r\n\t\t\treturn html;\r\n\t\t}\r\n\r\n\t\tvar html = original === true ? template.html : template.html.cloneNode(true);\r\n\t\tvar addresses = template.addresses;\r\n\t\tvar parsed = templateExec(template.parse, item);\r\n\r\n\t\t// Save model item reference to node\r\n\t\thtml.model = item;\r\n\r\n\t\tvar changesReference = [];\r\n\t\tvar pendingInsert = [];\r\n\r\n\t\t// Find element where the data belongs to\r\n\t\tfor (var i = 0; i < addresses.length; i++) {\r\n\t\t\tvar ref = addresses[i];\r\n\t\t\tvar current = $.childIndexes(ref.address, html);\r\n\r\n\t\t\t// Modify element attributes\r\n\t\t\tif(ref.nodeType === 1){\r\n\t\t\t\tvar refA = ref.attributes;\r\n\t\t\t\tfor(var a = 0; a < refA.length; a++){\r\n\t\t\t\t\tvar refB = refA[a];\r\n\r\n\t\t\t\t\tvar isValueInput = (refB.name === 'value' && (current.tagName === 'TEXTAREA' ||\r\n\t\t\t\t\t\t(current.tagName === 'INPUT' && /checkbox|radio|hidden/.test(current.type) === false)\r\n\t\t\t\t\t));\r\n\r\n\t\t\t\t\tchangesReference.push({\r\n\t\t\t\t\t\tattribute:isValueInput === true ? current : current.attributes[refB.name],\r\n\t\t\t\t\t\tref:refB\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(refB.direct !== void 0){\r\n\t\t\t\t\t\tif(refB.name === 'value' && isValueInput === true){\r\n\t\t\t\t\t\t\tcurrent.value = parsed[refB.direct].data;\r\n\t\t\t\t\t\t\tcurrent.removeAttribute('value');\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcurrent.setAttribute(refB.name, parsed[refB.direct].data);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Below is used for multiple data\r\n\t\t\t\t\tif(refB.name === 'value' && isValueInput === true){\r\n\t\t\t\t\t\tvar temp = current.value;\r\n\t\t\t\t\t\tcurrent.removeAttribute('value');\r\n\t\t\t\t\t\tcurrent.value = temp;\r\n\t\t\t\t\t\trefB = current;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse refB = current.attributes[refB.name];\r\n\r\n\t\t\t\t\trefB.value = refB.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Replace text node\r\n\t\t\tif(ref.nodeType === 3){\r\n\t\t\t\tvar refA = current;\r\n\r\n\t\t\t\tchangesReference.push({\r\n\t\t\t\t\ttextContent:refA,\r\n\t\t\t\t\tref:ref\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(ref.direct !== void 0){\r\n\t\t\t\t\trefA.textContent = parsed[ref.direct].data;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Below is used for multiple/dynamic data\r\n\t\t\t\trefA.textContent = refA.textContent.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Replace dynamic node\r\n\t\t\tif(ref.nodeType === -1){\r\n\t\t\t\tvar cRef = {\r\n\t\t\t\t\tdynamicFlag:current,\r\n\t\t\t\t\tdirect:ref.parse_index,\r\n\t\t\t\t\tparentNode:current.parentNode,\r\n\t\t\t\t\tstartFlag:ref.startFlag && $.childIndexes(ref.startFlag, html)\r\n\t\t\t\t};\r\n\t\t\t\tchangesReference.push(cRef);\r\n\r\n\t\t\t\t// Pending element insert to take other element reference\r\n\t\t\t\tpendingInsert.push(cRef);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Save reference to element\r\n\t\thtml.sf$elementReferences = changesReference;\r\n\t\t// html.sf$modelParsed = parsed;\r\n\r\n\t\t// Run the pending element\r\n\t\tfor (var i = 0; i < pendingInsert.length; i++) {\r\n\t\t\tvar ref = pendingInsert[i];\r\n\t\t\tvar tDOM = $.parseElement(parsed[ref.direct].data, true);\r\n\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\tref.parentNode.insertBefore(tDOM[a], ref.dynamicFlag);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t}\r\n\r\n\tfunction syntheticCache(element, template, item){\r\n\t\tif(element.sf$cache === void 0)\r\n\t\t\telement.sf$cache = {};\r\n\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\tvar ref = modelRef_array[i];\r\n\t\t\tcache[ref[0]] = deepProperty(item, ref[1]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction syntheticTemplate(element, template, property, item){\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tif(property !== void 0){\r\n\t\t\tvar changes = template.modelReference[property];\r\n\t\t\tif(changes === void 0 || changes.length === 0){\r\n\t\t\t\tconsole.error(\"Failed to run syntheticTemplate because property '\"+property+\"' is not observed\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cache)\r\n\t\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\t\tif(ref[0] !== property) continue;\r\n\r\n\t\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t\t// Check if data was different\r\n\t\t\t\t\tif(cache[ref[0]] !== newData)\r\n\t\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar changes = [];\r\n\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\tif(cache === void 0){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t// Check if data was different\r\n\t\t\t\tif(cache[ref[0]] !== newData){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(changes.length === 0) return false;\r\n\t\t}\r\n\r\n\t\tvar parsed = templateExec(template.parse, item, changes);\r\n\t\tfunction checkRelatedChanges(parseIndex){\r\n\t\t\tvar found = false;\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(changes.indexOf(parseIndex[i]) !== -1){\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(found === false)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t// Prepare all required data\r\n\t\t\tchanges = [];\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(parsed[parseIndex[i]] === void 0){\r\n\t\t\t\t\tchanges.push(parseIndex[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tObject.assign(parsed, templateExec(template.parse, item, changes));\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tvar changesReference = element.sf$elementReferences;\r\n\t\tvar haveChanges = false;\r\n\t\tfor (var i = 0; i < changesReference.length; i++) {\r\n\t\t\tvar cRef = changesReference[i];\r\n\r\n\t\t\tif(cRef.dynamicFlag !== void 0){ // Dynamic data\r\n\t\t\t\tif(parsed[cRef.direct] !== void 0){\r\n\t\t\t\t\tvar tDOM = $.parseElement(parsed[cRef.direct].data, true).reverse();\r\n\t\t\t\t\tvar currentDOM = $.prevAll(cRef.dynamicFlag, cRef.startFlag);\r\n\t\t\t\t\tvar notExist = false;\r\n\r\n\t\t\t\t\t// Replace if exist, skip if similar\r\n\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\t\t\tif(currentDOM[a] === void 0){\r\n\t\t\t\t\t\t\tnotExist = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(currentDOM[a].isEqualNode(tDOM[a]) === false)\r\n\t\t\t\t\t\t\tcRef.parentNode.replaceChild(tDOM[a], currentDOM[a]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Add if not exist\r\n\t\t\t\t\tif(notExist){\r\n\t\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++)\r\n\t\t\t\t\t\t\tcRef.parentNode.insertBefore(tDOM[a], cRef.dynamicFlag);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove if over index\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tfor (var a = tDOM.length; a < currentDOM.length; a++) {\r\n\t\t\t\t\t\t\tcurrentDOM[a].remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(cRef.textContent !== void 0){ // Text only\r\n\t\t\t\tif(cRef.ref.parse_index !== void 0){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.textContent.textContent === temp) continue;\r\n\t\t\t\t\t\tcRef.textContent.textContent = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.textContent.textContent === value) continue;\r\n\r\n\t\t\t\t\tvar ref_ = cRef.textContent;\r\n\t\t\t\t\t// Remove old element if exist\r\n\t\t\t\t\tif(ref_.sf$haveChilds === true){\r\n\t\t\t\t\t\twhile(ref_.previousSibling && ref_.previousSibling.sf$childRoot === ref_){\r\n\t\t\t\t\t\t\tref_.previousSibling.remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tref_.textContent = value;\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(cRef.attribute !== void 0){ // Attributes\r\n\t\t\t\tif(cRef.ref.parse_index !== void 0){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.attribute.value === temp) continue;\r\n\t\t\t\t\t\tcRef.attribute.value = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.attribute.value === value) continue;\r\n\t\t\t\t\tcRef.attribute.value = value;\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn haveChanges;\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval, preParsedReference){\r\n\t\tvar _modelScope = self.root[scope];\r\n\t\tif(!runEval) runEval = '';\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope).join('|')+')\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\tvar preParsed = [];\r\n\t\t\tvar lastParsedIndex = preParsedReference.length;\r\n\t\t}\r\n\r\n\t\tvar prepared = html.replace(sf.regex.dataParser, function(actual, temp){\r\n\t\t\ttemp = avoidQuotes(temp, function(temp_){\r\n\t\t\t\t// Unescape HTML\r\n\t\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t\t// Mask item variable\r\n\t\t\t\tif(mask)\r\n\t\t\t\t\ttemp_ = temp_.replace(itemMask, function(matched){\r\n\t\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// Mask model for variable\r\n\t\t\t\treturn temp_.replace(scopeMask, function(full, matched){\r\n\t\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t\t});\r\n\t\t\t}).split('_model_._modelScope.').join('_model_.');\r\n\r\n\t\t\t// Evaluate\r\n\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\ttemp = temp.trim();\r\n\r\n\t\t\t\t// Simplicity similar\r\n\t\t\t\tvar exist = preParsed.indexOf(temp);\r\n\r\n\t\t\t\tif(exist === -1){\r\n\t\t\t\t\tpreParsed.push(temp);\r\n\t\t\t\t\tpreParsedReference.push({type:REF_DIRECT, data:[temp, _model_, _modelScope]});\r\n\t\t\t\t\treturn '{{%=' + (preParsed.length + lastParsedIndex - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn '{{%=' + (exist + lastParsedIndex);\r\n\t\t\t}\r\n\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(sf.regex.escapeHTML, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\tpreParsed = _modelScope = _model_ = mask = scope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t}\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\t// Dynamic data parser\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope, runEval){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(passVar === null)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\t// Use strict mode and prepare for new variables\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\t// Declare new variable\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove var because no variable are being passed\r\n\t\t\t\tif(firstTime === true)\r\n\t\t\t\t\tstrDeclare = strDeclare.replace('var ', '');\r\n\r\n\t\t\t\t// Escape function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('&#40;').split(')').join('&#41;');\r\n\r\n\t\t\t\t// Pass to static data parser for another HTML data\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Build script preparation\r\n\t\thtml = html.replace(/{\\[([\\s\\S]*?)\\]}/g, function(full, matched){\r\n\t\t\tif(/{{.*?}}/.test(matched) === false)\r\n\t\t\t\treturn \"_result_ += '\"+matched.split(\"'\").join(\"\\\\'\")+\"'\";\r\n\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope).join('|')+')\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.\\\\b', 'g');\r\n\r\n\t\tif(runEval === '#noEval')\r\n\t\t\tvar preParsedReference = [];\r\n\r\n\t\tvar prepared = html.replace(sf.regex.uniqueDataParser, function(actual, temp){\r\n\t\t\ttemp = avoidQuotes(temp, function(temp_){\r\n\t\t\t\t// Unescape HTML\r\n\t\t\t\ttemp_ = temp_.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t\t// Mask item variable\r\n\t\t\t\tif(mask)\r\n\t\t\t\t\ttemp_ = temp_.replace(itemMask, function(matched){\r\n\t\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// Mask model for variable\r\n\t\t\t\treturn temp_.replace(scopeMask, function(full, matched){\r\n\t\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t\t});\r\n\t\t\t}).split('_model_._modelScope.').join('_model_.');\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass_ = /(var|let)([\\w,\\s]+)(?=\\s(?==|in|of))/g;\r\n\t\t\tvar VarPass = [];\r\n\t\t\tvar s1 = null;\r\n\t\t\twhile((s1 = VarPass_.exec(temp)) !== null){\r\n\t\t\t\tVarPass.push(s1[2]);\r\n\t\t\t}\r\n\r\n\t\t\tif(_model_ === null && runEval === '#noEval')\r\n\t\t\t\tVarPass.push('_model_');\r\n\r\n\t\t\tif(VarPass.length !== 0){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/([\\n\\t\\r]|  )+/g, '').split(',').forEach(function(val){\r\n\t\t\t\t\t\tobtained.push(val);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':(typeof '+VarPass[i]+'!==\"void 0\"?'+VarPass[i]+':void 0)';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(VarPass.length === 0)\r\n\t\t\t\t\tVarPass = 'null';\r\n\t\t\t\telse VarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\t\t\telse temp = temp.split('&VarPass&').join('null');\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\r\n\t\t\t\t// {if, elseIf:([if, value], ...), elseValue}\r\n\t\t\t\tvar findElse = function(text){\r\n\t\t\t\t\ttext = text.join(':');\r\n\t\t\t\t\tvar else_ = null;\r\n\r\n\t\t\t\t\t// Split elseIf\r\n\t\t\t\t\ttext = text.split('@elseif ');\r\n\r\n\t\t\t\t\t// Get else value\r\n\t\t\t\t\tvar else_ = text[text.length - 1].split('@else');\r\n\t\t\t\t\tif(else_.length === 2){\r\n\t\t\t\t\t\ttext[text.length - 1] = else_[0];\r\n\t\t\t\t\t\telse_ = else_.pop();\r\n\t\t\t\t\t\telse_ = else_.substr(else_.indexOf(':') + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse else_ = null;\r\n\r\n\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t\tif:text.shift(),\r\n\t\t\t\t\t\telseIf:[],\r\n\t\t\t\t\t\telseValue:else_\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Separate condition script and value\r\n\t\t\t\t\tfor (var i = 0; i < text.length; i++) {\r\n\t\t\t\t\t\tvar val = text[i].split(':');\r\n\t\t\t\t\t\tobj.elseIf.push([val.shift(), val.join(':')]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tvar condition = check.shift();\r\n\t\t\t\t\tvar elseIf = findElse(check);\r\n\t\t\t\t\telseIf.type = REF_IF;\r\n\t\t\t\t\telseIf.data = [null, _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t\t// Trim Data\r\n\t\t\t\t\telseIf.if = [condition.trim(), elseIf.if.trim()];\r\n\t\t\t\t\tif(elseIf.elseValue !== null)\r\n\t\t\t\t\t\telseIf.elseValue = elseIf.elseValue.trim();\r\n\r\n\t\t\t\t\tfor (var i = 0; i < elseIf.elseIf.length; i++) {\r\n\t\t\t\t\t\telseIf.elseIf[i][0] = elseIf.elseIf[i][0].trim();\r\n\t\t\t\t\t\telseIf.elseIf[i][1] = elseIf.elseIf[i][1].trim();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Push data\r\n\t\t\t\t\tpreParsedReference.push(elseIf);\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scopes = [check[0], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\treturn elseIfHandle(findElse(check), scopes);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcheck.shift();\r\n\t\t\t\tscopes[0] = check.join(':');\r\n\r\n\t\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tvar scopes = [check[1], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tpreParsedReference.push({type:REF_EXEC, data:scopes});\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, scopes);\r\n\t\t\t\treturn temp;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\t_modelScope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t\treturn [prepared, preParsedReference, _content_];\r\n\t\t}\r\n\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\tvar bindArray = function(template, list, mask, modelName, propertyName, targetNode, parentNode, tempDOM){\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'swap', 'move', 'replace', 'softRefresh', 'hardRefresh'];\r\n\t\tvar refreshTimer = -1;\r\n\t\tvar parentChilds = parentNode.children;\r\n\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\r\n\t\t// Update callback\r\n\t\tvar modelRef = self.root[modelName];\r\n\t\tvar eventVar = 'on$'+propertyName;\r\n\t\tvar callback = modelRef[eventVar];\r\n\r\n\t\tvar processElement = function(index, options, other, count){\r\n\t\t\t// Find boundary for inserting to virtual DOM\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar vStartRange = list.$virtual.DOMCursor;\r\n\t\t\t\tvar vEndRange = vStartRange + list.$virtual.preparedLength;\r\n\t\t\t}\r\n\r\n\t\t\tif(options === 'clear'){\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar spacer = [parentNode.firstElementChild, parentNode.lastElementChild];\r\n\r\n\t\t\t\tparentNode.textContent = '';\r\n\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tparentNode.appendChild(spacer[0]);\r\n\t\t\t\t\tparentNode.appendChild(spacer[1]);\r\n\t\t\t\t\tlist.$virtual.dom.textContent = '';\r\n\t\t\t\t\tspacer[1].style.height = \r\n\t\t\t\t\tspacer[0].style.height = 0;\r\n\t\t\t\t\tlist.$virtual.reset(true);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid multiple refresh by set a timer\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar exist = list.$virtual.elements();\r\n\r\n\t\t\t\tclearTimeout(refreshTimer);\r\n\t\t\t\trefreshTimer = setTimeout(function(){\r\n\t\t\t\t\tlist.$virtual.reinitScroll();\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse exist = parentChilds;\r\n\r\n\t\t\t// Hard refresh - Append element\r\n\t\t\tif(options === 'hardRefresh'){\r\n\t\t\t\t// Clear siblings after the index\r\n\t\t\t\tfor (var i = index; i < exist.length; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar vCursor = list.$virtual.vCursor;\r\n\r\n\t\t\t\tfor (var i = index; i < list.length; i++) {\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\tif(vCursor.floor === null && i < vEndRange)\r\n\t\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\t\telse list.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse parentNode.appendChild(temp);\r\n\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual && list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(callback === void 0)\r\n\t\t\t\tcallback = modelRef[eventVar];\r\n\r\n\t\t\tif(options === 'swap' || options === 'move'){\r\n\t\t\t\tif(options === 'move'){\r\n\t\t\t\t\tvar overflow = list.length - index - count;\r\n\t\t\t\t\tif(overflow < 0)\r\n\t\t\t\t\t\tcount += overflow;\r\n\r\n\t\t\t\t\t// Move to virtual DOM\r\n\t\t\t\t\tvar vDOM = document.createElement('div');\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tvDOM.appendChild(exist[index + i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar nextSibling = exist[other] || null;\r\n\t\t\t\t\tvar theParent = nextSibling && nextSibling.parentNode;\r\n\r\n\t\t\t\t\tif(theParent === false){\r\n\t\t\t\t\t\tif(list.$virtual && list.length >= vEndRange)\r\n\t\t\t\t\t\t\ttheParent = list.$virtual.dom;\r\n\t\t\t\t\t\telse theParent = parentNode;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Move to defined index\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\ttheParent.insertBefore(vDOM.firstElementChild, nextSibling);\r\n\r\n\t\t\t\t\t\tif(callback !== void 0 && callback.update)\r\n\t\t\t\t\t\t\tcallback.update(exist[index + i], 'move');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(index > other){\r\n\t\t\t\t\tvar index_a = exist[other];\r\n\t\t\t\t\tother = exist[index];\r\n\t\t\t\t\tindex = index_a;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tindex = exist[index];\r\n\t\t\t\t\tother = exist[other];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar other_sibling = other.nextSibling;\r\n\t\t\t\tvar other_parent = other.parentNode;\r\n\t            index.parentNode.insertBefore(other, index.nextSibling);\r\n\t            other_parent.insertBefore(index, other_sibling);\r\n\r\n\t\t\t\tif(callback !== void 0 && callback.update){\r\n\t\t\t\t\tcallback.update(exist[other], 'swap');\r\n\t\t\t\t\tcallback.update(exist[index], 'swap');\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Clear unused element if current array < last array\r\n\t\t\tif(options === 'removeRange'){\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(options === 'remove'){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\texist[index].remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(callback !== void 0 && callback.remove){\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tstartRemove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse startRemove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update\r\n\t\t\telse if(options === 'update'){\r\n\t\t\t\tif(index === void 0){\r\n\t\t\t\t\tindex = 0;\r\n\t\t\t\t\tother = list.length;\r\n\t\t\t\t}\r\n\t\t\t\telse if(other === void 0) other = index + 1;\r\n\t\t\t\telse if(other < 0) other = list.length + other;\r\n\t\t\t\telse other += index;\r\n\r\n\t\t\t\t// Trim length\r\n\t\t\t\tvar overflow = list.length - other;\r\n\t\t\t\tif(overflow < 0) other = other + overflow;\r\n\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\tvar oldChild = exist[i];\r\n\t\t\t\t\tif(oldChild === void 0 || list[i] === void 0)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\toldChild.parentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tparentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\tif(callback !== void 0 && callback.update)\r\n\t\t\t\t\t\tcallback.update(temp, 'replace');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar item = list[index];\r\n\t\t\tif(item === void 0) return;\r\n\r\n\t\t\tvar temp = templateParser(template, item);\r\n\t\t\tif(isKeyed === false)\r\n\t\t\t\tsyntheticCache(temp, template, item);\r\n\r\n\t\t\t// Create\r\n\t\t\tif(options === 'insertAfter'){\r\n\t\t\t\tif(exist.length === 0)\r\n\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\telse{\r\n\t\t\t\t\tvar referenceNode = exist[index - 1];\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode.nextSibling);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t\telse if(options === 'prepend'){\r\n\t\t\t\tvar referenceNode = exist[0];\r\n\t\t\t\tif(referenceNode !== void 0){\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode);\r\n\r\n\t\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t}\r\n\t\t\t\telse options = 'append';\r\n\t\t\t}\r\n\t\t\tif(options === 'append'){\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tif(index === 0) // Add before virtual scroller\r\n\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\telse if(index >= vEndRange){ // To virtual DOM\r\n\t\t\t\t\t\tif(list.$virtual.vCursor.floor === null)\r\n\t\t\t\t\t\t\tlist.$virtual.vCursor.floor = temp;\r\n\r\n\t\t\t\t\t\tlist.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse // To real DOM\r\n\t\t\t\t\t\texist[index-1].insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparentNode.appendChild(temp);\r\n\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar _double_zero = [0,0]; // For arguments\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = void 0;\r\n\t\t\t\t\tvar lastLength = this.length;\r\n\r\n\t\t\t\t\tif(name === 'move'){\r\n\t\t\t\t\t\tvar from = arguments[0];\r\n\t\t\t\t\t\tvar to = arguments[1];\r\n\t\t\t\t\t\tif(from === to) return;\r\n\t\t\t\t\t\tvar count = arguments[2] || 1;\r\n\t\t\t\t\t\tprocessElement(from, 'move', to, count);\r\n\r\n\t\t\t\t\t\tvar temp = Array.prototype.splice.apply(this, [from, count]);\r\n\t\t\t\t\t\ttemp.unshift(to, 0);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Reset virtual ceiling and floor\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(name === 'swap'){\r\n\t\t\t\t\t\tvar i = arguments[0];\r\n\t\t\t\t\t\tvar o = arguments[1];\r\n\t\t\t\t\t\tif(i === o) return;\r\n\t\t\t\t\t\tprocessElement(i, 'swap', o);\r\n\t\t\t\t\t\tvar temp = this[i];\r\n\t\t\t\t\t\tthis[i] = this[o];\r\n\t\t\t\t\t\tthis[o] = temp;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'replace'){\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.resetViewport();\r\n\r\n\t\t\t\t\t\t// Check if item has same reference\r\n\t\t\t\t\t\tif(arguments[0].length >= lastLength && lastLength !== 0){\r\n\t\t\t\t\t\t\tvar matchLeft = lastLength;\r\n\t\t\t\t\t\t\tvar ref = arguments[0];\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < lastLength; i++) {\r\n\t\t\t\t\t\t\t\tif(ref[i] === this[i]){\r\n\t\t\t\t\t\t\t\t\tmatchLeft--;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the end\r\n\t\t\t\t\t\t\tif(matchLeft === 0){\r\n\t\t\t\t\t\t\t\tif(ref.length === lastLength) return;\r\n\r\n\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(lastLength);\r\n\t\t\t\t\t\t\t\ttemp.unshift(lastLength, 0);\r\n\t\t\t\t\t\t\t\tthis.splice.apply(this, temp);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the middle\r\n\t\t\t\t\t\t\telse if(matchLeft !== lastLength){\r\n\t\t\t\t\t\t\t\tif(arguments[1] === true){\r\n\t\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(i);\r\n\t\t\t\t\t\t\t\t\ttemp.unshift(i, lastLength - i);\r\n\t\t\t\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t\t\t\tlist.refresh(i, lastLength);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Build from zero\r\n\t\t\t\t\t\tif(lastLength === 0){\r\n\t\t\t\t\t\t\tArray.prototype.push.apply(this, arguments[0]);\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Clear all items and merge the new one\r\n\t\t\t\t\t\tvar temp = [0, lastLength];\r\n\t\t\t\t\t\tArray.prototype.push.apply(temp, arguments[0]);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Rebuild all element\r\n\t\t\t\t\t\tif(arguments[1] !== true || isKeyed){\r\n\t\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reuse some element\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t// Clear unused element if current array < last array\r\n\t\t\t\t\t\t\tif(this.length < lastLength)\r\n\t\t\t\t\t\t\t\tprocessElement(this.length, 'removeRange', lastLength);\r\n\r\n\t\t\t\t\t\t\t// And start refreshing\r\n\t\t\t\t\t\t\tlist.refresh(0, this.length);\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual && list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reset virtual list\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reset();\r\n\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice' && arguments[0] === 0 && arguments[1] === void 0){\r\n\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\treturn Array.prototype.splice.apply(this, arguments);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(this.length, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'push'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(lastLength, 'append');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = 0; i < arguments.length; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(lastLength + i, 'append');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'shift'){\r\n\t\t\t\t\t\tprocessElement(0, 'remove');\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor > 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor--;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments[0] === 0 && arguments[1] === void 0)\r\n\t\t\t\t\t\t\treturn temp;\r\n\r\n\t\t\t\t\t\t// Removing data\r\n\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\tif(real < 0) real = lastLength + real;\r\n\r\n\t\t\t\t\t\tvar limit = arguments[1];\r\n\t\t\t\t\t\tif(!limit && limit !== 0) limit = this.length;\r\n\r\n\t\t\t\t\t\tfor (var i = limit - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tprocessElement(real + i, 'remove');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = real - limit;\r\n\r\n\t\t\t\t\t\tif(arguments.length >= 3){ // Inserting data\r\n\t\t\t\t\t\t\tlimit = arguments.length - 2;\r\n\r\n\t\t\t\t\t\t\t// Trim the index if more than length\r\n\t\t\t\t\t\t\tif(real >= this.length)\r\n\t\t\t\t\t\t\t\treal = this.length - 1;\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < limit; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(real + i, 'insertAfter');\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\t\tlist.$virtual.DOMCursor += limit;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(0, 'prepend');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = arguments.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\t\tprocessElement(i, 'prepend');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor !== 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor += arguments.length;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'softRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0], 'update', arguments[1]);\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'hardRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0] || 0, 'hardRefresh');\r\n\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = arguments[0] || 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(parentNode && parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\tdelete list.$virtual;\r\n\t\t\tlist.$virtual = {};\r\n\r\n\t\t\t// Transfer virtual DOM\r\n\t\t\tlist.$virtual.dom = tempDOM;\r\n\t\t\tif(callback !== void 0)\r\n\t\t\t\tlist.$virtual.callback = callback;\r\n\t\t\telse list.$virtual.callback_ = {ref:modelRef, var:eventVar};\r\n\r\n\t\t\tparentNode.replaceChild(template.html, parentChilds[1]);\r\n\t\t\tsf.internal.virtual_scroll.handle(list, targetNode, parentNode);\r\n\t\t\ttemplate.html.remove();\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\r\n\t\t// Todo: Enable auto item binding\r\n\t\tif(false && list.auto !== false){\r\n\t\t\t// for (var i = 0; i < list.length; i++) {\r\n\t\t\t// \tlist[i]\r\n\t\t\t// }\r\n\t\t}\r\n\r\n\t\thiddenProperty(list, '$replace', function(index, key, needle, func){\r\n\t\t\tvar elRef = list.getElement(index).sf$elementReferences;\r\n\t\t\tvar process = template.modelReference[key];\r\n\t\t\tif(process === void 0){\r\n\t\t\t\tconsole.error(\"Can't found binding for '\"+key+\"'\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < elRef.length; i++) {\r\n\t\t\t\tif(elRef[i].textContent === void 0 || elRef[i].ref.direct === void 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tif(process.indexOf(elRef[i].ref.direct) !== -1){\r\n\t\t\t\t\tvar ref = elRef[i].textContent;\r\n\t\t\t\t\tvar content = $.escapeText(list[index][key]).replace(needle, func);\r\n\r\n\t\t\t\t\t// Skip if nothing was changed\r\n\t\t\t\t\tif(list[index][key] === content) continue;\r\n\t\t\t\t\tref.textContent = ''; // Let this empty for later referencing\r\n\t\t\t\t\tref.sf$haveChilds = true;\r\n\t\t\t\t\tcontent = $.parseElement(content, true);\r\n\r\n\t\t\t\t\t// Remove old element if exist\r\n\t\t\t\t\twhile(ref.previousSibling && ref.previousSibling.sf$childRoot === ref){\r\n\t\t\t\t\t\tref.previousSibling.remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar parentNode_ = ref.parentNode;\r\n\t\t\t\t\tfor (var i = 0; i < content.length; i++) {\r\n\t\t\t\t\t\tcontent[i].sf$childRoot = ref;\r\n\t\t\t\t\t\tparentNode_.insertBefore(content[i], ref);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\thiddenProperty(list, 'refresh', function(index, length, property){\r\n\t\t\tif(index === void 0 || index.constructor === String){\r\n\t\t\t\tproperty = index;\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tlength = list.length;\r\n\t\t\t}\r\n\t\t\telse if(length === void 0) length = index + 1;\r\n\t\t\telse if(length.constructor === String){\r\n\t\t\t\tproperty = length;\r\n\t\t\t\tlength = index + 1;\r\n\t\t\t}\r\n\t\t\telse if(length < 0) length = list.length + length;\r\n\t\t\telse length += index;\r\n\r\n\t\t\t// Trim length\r\n\t\t\tvar overflow = list.length - length;\r\n\t\t\tif(overflow < 0) length = length + overflow;\r\n\r\n\t\t\tfor (var i = index; i < length; i++) {\r\n\t\t\t\tvar elem = list.getElement(i);\r\n\r\n\t\t\t\t// Create element if not exist\r\n\t\t\t\tif(elem === void 0){\r\n\t\t\t\t\tlist.hardRefresh(i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(isKeyed === true)\r\n\t\t\t\t\t\tlist.softRefresh(i);\r\n\t\t\t\t\telse if(syntheticTemplate(elem, template, property, list[i]) === false)\r\n\t\t\t\t\t\tcontinue; // Continue if no update\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== void 0 && callback.update)\r\n\t\t\t\t\tcallback.update(elem, 'replace');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar virtualChilds = null;\r\n\t\tif(list.$virtual)\r\n\t\t\tvirtualChilds = list.$virtual.dom.children;\r\n\t\thiddenProperty(list, 'getElement', function(index){\r\n\t\t\tif(virtualChilds !== null){\r\n\t\t\t\tvar ret = void 0;\r\n\t\t\t\tif(index < list.$virtual.DOMCursor)\r\n\t\t\t\t\treturn virtualChilds[index];\r\n\t\t\t\telse {\r\n\t\t\t\t\tindex -= list.$virtual.DOMCursor;\r\n\t\t\t\t\tvar childElement = parentNode.childElementCount - 2;\r\n\r\n\t\t\t\t\tif(index < childElement)\r\n\t\t\t\t\t\treturn parentChilds[index + 1];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn virtualChilds[index - childElement + list.$virtual.DOMCursor];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn void 0;\r\n\t\t\t}\r\n\r\n\t\t\treturn parentChilds[index];\r\n\t\t});\r\n\t}\r\n\r\n\tvar loopParser = function(name, template, script, targetNode, parentNode){\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\r\n\t\tvar items = root_(name)[method[1]];\r\n\t\tif(items === void 0)\r\n\t\t\titems = root_(name)[method[1]] = [];\r\n\r\n\t\ttemplate.setAttribute('sf-bind-list', method[1]);\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = template;\r\n\t\ttemplate = self.extractPreprocess(template, mask, name);\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\t\t\tvar tempDOM = document.createElement('div');\r\n\t\t\tvar modelRef = self.root[name];\r\n\r\n\t\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\t\tvar elem = templateParser(template, items[i]);\r\n\t\t\t\ttempDOM.appendChild(elem);\r\n\r\n\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\tsyntheticCache(elem, template, items[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// Enable element binding\r\n\t\t\tif(modelRef.sf$bindedKey === void 0)\r\n\t\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\t\tif(modelRef.sf$bindedKey[method[1]] === void 0)\r\n\t\t\t\tmodelRef.sf$bindedKey[method[1]] = null;\r\n\r\n\t\t\tObject.defineProperty(modelRef, method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tif(val.length === 0)\r\n\t\t\t\t\t\treturn items.splice(0);\r\n\t\t\t\t\treturn items.replace(val, true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tbindArray(template, items, mask, name, method[1], targetNode, parentNode, tempDOM);\r\n\r\n\t\t\t// Output to real DOM if not being used for virtual list\r\n\t\t\tif(items.$virtual === void 0){\r\n\t\t\t\tvar children = tempDOM.children;\r\n\t\t\t\tfor (var i = 0, n = children.length; i < n; i++) {\r\n\t\t\t\t\tparentNode.appendChild(children[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttempDOM.remove();\r\n\t\t\t\ttempDOM = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar callInputListener = function(model, property, value){\r\n\t\tvar callback = model['on$'+property];\r\n\t\tvar v2m = model['v2m$'+property];\r\n\t\tvar newValue1 = void 0; var newValue2 = void 0;\r\n\t\tif(callback !== void 0 || v2m !== void 0){\r\n\t\t\tvar old = model[property];\r\n\t\t\tif(old !== null && old !== void 0 && old.constructor === Array)\r\n\t\t\t\told = old.slice(0);\r\n\r\n\t\t\ttry{\r\n\t\t\t\tif(v2m !== void 0)\r\n\t\t\t\t\tnewValue1 = v2m(old, value);\r\n\r\n\t\t\t\tif(callback !== void 0)\r\n\t\t\t\t\tnewValue2 = callback(old, value);\r\n\t\t\t}catch(e){console.error(e)}\r\n\t\t}\r\n\t\treturn newValue2 !== void 0 ? newValue2 : newValue1;\r\n\t}\r\n\r\n\tvar inputBoundRunning = false;\r\n\tvar inputTextBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\r\n\t\tinputBoundRunning = true;\r\n\t\tvar ref = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar value = ref.typeData === Number ? Number(ref.value) : ref.value;\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== void 0)\r\n\t\t\tref.sfModel[ref.sfBounded] = newValue;\r\n\t\telse ref.sfModel[ref.sfBounded] = value;\r\n\t}\r\n\tvar inputFilesBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tvar ref = e.target;\r\n\t\tcallInputListener(ref.sfModel, ref.sfBounded, ref.files);\r\n\t\tref.sfModel[ref.sfBounded] = ref.files;\r\n\t}\r\n\r\n\tvar inputCheckBoxBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tinputBoundRunning = true;\r\n\t\tvar ref = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar value = ref.typeData === Number ? Number(ref.value) : ref.value;\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== void 0)\r\n\t\t\tvalue = newValue;\r\n\r\n\t\tvar model = ref.sfModel;\r\n\t\tvar constructor = model[ref.sfBounded].constructor;\r\n\r\n\t\tif(constructor === Array){\r\n\t\t\tvar i = model[ref.sfBounded].indexOf(value);\r\n\r\n\t\t\tif(i === -1 && ref.checked === true)\r\n\t\t\t\tmodel[ref.sfBounded].push(value);\r\n\t\t\telse if(i !== -1 && ref.checked === false)\r\n\t\t\t\tmodel[ref.sfBounded].splice(i, 1);\r\n\t\t}\r\n\t\telse if(constructor === Boolean || ref.typeData === Boolean)\r\n\t\t\tmodel[ref.sfBounded] = ref.checked;\r\n\t\telse model[ref.sfBounded] = value;\r\n\t}\r\n\r\n\tvar inputSelectBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tinputBoundRunning = true;\r\n\t\tvar ref = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar typeData = ref.typeData;\r\n\t\tif(ref.multiple === true){\r\n\t\t\tvar temp = ref.selectedOptions;\r\n\t\t\tvar value = [];\r\n\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\tvalue.push(typeData === Number ? Number(temp[i].value) : temp[i].value);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse value = typeData === Number ? Number(ref.selectedOptions[0].value) : ref.selectedOptions[0].value;\r\n\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== void 0)\r\n\t\t\tref.sfModel[ref.sfBounded] = newValue;\r\n\t\telse ref.sfModel[ref.sfBounded] = value;\r\n\t}\r\n\r\n\tvar assignElementData = {\r\n\t\tselect:function(model, property, element){\r\n\t\t\tvar list = element.options;\r\n\t\t\tvar typeData = element.typeData;\r\n\t\t\tvar arrayValue = model[property].constructor === Array ? model[property] : false;\r\n\t\t\tfor (var i = 0, n = list.length; i < n; i++) {\r\n\t\t\t\tif(arrayValue === false){\r\n\t\t\t\t\tif(typeData === String)\r\n\t\t\t\t\t\tlist[i].selected = list[i].value === model[property];\r\n\t\t\t\t\telse list[i].selected = list[i].value == model[property];\r\n\t\t\t\t}\r\n\t\t\t\telse list[i].selected = arrayValue.indexOf(typeData === Number ? Number(list[i].value) : list[i].value) !== -1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckbox:function(model, property, element){\r\n\t\t\tif(model[property].constructor === Array)\r\n\t\t\t\telement.checked = model[property].indexOf(element.typeData === Number ? Number(element.value) : element.value) !== -1;\r\n\t\t\telse if(model[property].constructor === Boolean)\r\n\t\t\t\telement.checked = Boolean(model[property]);\r\n\t\t\telse{\r\n\t\t\t\tif(element.typeData === String)\r\n\t\t\t\t\telement.checked = element.value === model[property];\r\n\t\t\t\telse element.checked = element.value == model[property];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar inputBoundRun = function(model, property, elements){\r\n\t\tif(inputBoundRunning === true)\r\n\t\t\treturn; // Avoid multiple assigment\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\tvar ev = new Event('change');\r\n\t\t\tev.fromSFFramework = true;\r\n\r\n\t\t\tif(elements.type === 1) // text\r\n\t\t\t\telements[i].value = model[property];\r\n\t\t\telse if(elements.type === 2) // select options\r\n\t\t\t\tassignElementData.select(model, property, elements[i]);\r\n\t\t\telse if(elements.type === 3) // radio\r\n\t\t\t\telements[i].checked = model[property] == elements[i].value;\r\n\t\t\telse if(elements.type === 4) // checkbox\r\n\t\t\t\tassignElementData.checkbox(model, property, elements[i]);\r\n\r\n\t\t\telements[i].dispatchEvent(ev);\r\n\t\t}\r\n\t}\r\n\r\n\tvar triggerInputEvent = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\tif(e.target.viewInputted === true){\r\n\t\t\te.target.viewInputted = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\te.target.dispatchEvent(new Event('input'));\r\n\t}\r\n\r\n\tvar elementBoundChanges = function(model, property, element, oneWay){\r\n\t\t// Enable multiple element binding\r\n\t\tif(model.sf$bindedKey === void 0)\r\n\t\t\tinitBindingInformation(model);\r\n\r\n\t\tvar type = 0;\r\n\t\tvar typeData = null;\r\n\t\tif(model[property] !== null && model[property] !== void 0)\r\n\t\t\ttypeData = model[property].constructor;\r\n\r\n\t\tvar assignedType = (element.getAttribute('typedata') || '').toLowerCase();\r\n\t\tif(assignedType === 'number')\r\n\t\t\ttypeData = Number;\r\n\r\n\t\telement.typeData = typeData;\r\n\t\t$.on(element, 'change', triggerInputEvent);\r\n\r\n\t\t// Bound value change\r\n\t\tif(element.tagName === 'TEXTAREA'){\r\n\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\telement.value = model[property];\r\n\t\t\ttype = 1;\r\n\t\t}\r\n\r\n\t\telse if(element.selectedOptions !== void 0){\r\n\t\t\t$.on(element, 'input', inputSelectBound);\r\n\t\t\ttype = 2;\r\n\r\n\t\t\tassignElementData.select(model, property, element);\r\n\t\t}\r\n\r\n\t\telse{\r\n\t\t\tvar type = element.type.toLowerCase();\r\n\t\t\tif(type === 'radio'){\r\n\t\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\t\ttype = 3;\r\n\r\n\t\t\t\telement.checked = model[property] == element.value;\r\n\t\t\t}\r\n\t\t\telse if(type === 'checkbox'){\r\n\t\t\t\t$.on(element, 'input', inputCheckBoxBound);\r\n\t\t\t\ttype = 4;\r\n\r\n\t\t\t\tassignElementData.checkbox(model, property, element);\r\n\t\t\t}\r\n\r\n\t\t\telse if(type === 'file'){\r\n\t\t\t\t$.on(element, 'input', inputFilesBound);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telse{\r\n\t\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\t\telement.value = model[property];\r\n\t\t\t\ttype = 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(oneWay === true) return;\r\n\t\tmodelToViewBinding(model, property, inputBoundRun, element, type);\r\n\t}\r\n\r\n\tvar bindInput = function(targetNode){\r\n\t\tvar temp = $('input[sf-bound], textarea[sf-bound], select[sf-bound], input[sf-bind], textarea[sf-bind], select[sf-bind]', targetNode);\r\n\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar model = sf.controller.modelName(element);\r\n\t\t\tif(!model) return;\r\n\t\t\tvar modelScope = self.root[model];\r\n\r\n\t\t\tvar oneWay = false;\r\n\t\t\tvar propertyName = element.getAttribute('sf-bound');\r\n\t\t\tif(propertyName === null){\r\n\t\t\t\tpropertyName = element.getAttribute('sf-bind');\r\n\t\t\t\toneWay = true;\r\n\t\t\t}\r\n\t\t\tif(propertyName === \"\")\r\n\t\t\t\tpropertyName = element.getAttribute('name');\r\n\r\n\t\t\tif(propertyName === null){\r\n\t\t\t\tconsole.error(\"Property key to be bound wasn't be found\", element);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(modelScope[propertyName] === void 0){\r\n\t\t\t\tconsole.error('Can\\'t get property \"'+propertyName+'\" on model \"' + model + '\"');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement.sfBounded = propertyName;\r\n\t\t\telement.sfModel = modelScope;\r\n\t\t\tif(oneWay === false){\r\n\t\t\t\telement.setAttribute('sf-bounded', '');\r\n\t\t\t\telement.removeAttribute('sf-bound');\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\telement.setAttribute('sf-binded', '');\r\n\t\t\t\telement.removeAttribute('sf-bind');\r\n\t\t\t}\r\n\r\n\t\t\telementBoundChanges(modelScope, propertyName, element, oneWay);\r\n\t\t}\r\n\t}\r\n\r\n\tvar alreadyInitialized = false;\r\n\tself.init = function(targetNode, queued){\r\n\t\tif(alreadyInitialized && !targetNode) return;\r\n\t\talreadyInitialized = true;\r\n\t\tsetTimeout(function(){\r\n\t\t\talreadyInitialized = false;\r\n\t\t}, 50);\r\n\r\n\t\tif(!targetNode) targetNode = document.body;\r\n\r\n\t\tself.parsePreprocess(queued || self.queuePreprocess(targetNode), queued);\r\n\t\tbindInput(targetNode);\r\n\r\n\t\t// Find element for array binding\r\n\t\tvar temp = $('[sf-repeat-this]', targetNode);\r\n\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\tvar element = temp[a];\r\n\t\t\tvar parent = element.parentElement;\r\n\r\n\t\t\tif(queued !== void 0)\r\n\t\t\t\telement.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(parent.classList.contains('sf-virtual-list')){\r\n\t\t\t\tvar ceiling = document.createElement(element.tagName);\r\n\t\t\t\tceiling.classList.add('virtual-spacer');\r\n\t\t\t\tvar floor = ceiling.cloneNode(true);\r\n\r\n\t\t\t\tceiling.classList.add('ceiling');\r\n\t\t\t\tparent.insertBefore(ceiling, parent.firstElementChild); // prepend\r\n\r\n\t\t\t\tfloor.classList.add('floor');\r\n\t\t\t\tparent.appendChild(floor); // append\r\n\t\t\t}\r\n\r\n\t\t\tvar after = element.nextElementSibling;\r\n\t\t\tif(after === null || element === after)\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = element.previousElementSibling;\r\n\t\t\tif(before === null || element === before)\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = element.getAttribute('sf-repeat-this');\r\n\t\t\telement.removeAttribute('sf-repeat-this');\r\n\r\n\t\t\t// Check if the element was already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(element.outerHTML))\r\n\t\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\t\tvar controller = sf.controller.modelName(element);\r\n\t\t\tloopParser(controller, element, script, targetNode, parent);\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t}\r\n\r\n\t// Reset model properties\r\n\t// Don't call if the removed element is TEXT or #comment\r\n\tvar DOMNodeRemoved = scope.DOMNodeRemoved = function(element){\r\n\t\tif(element.hasAttribute('sf-controller') !== false){\r\n\t\t\tvar modelName = element.sf$component === void 0 ? element.getAttribute('sf-controller') : element.sf$component;\r\n\r\n\t\t\tremoveModelBinding(modelName);\r\n\t\t\tif(element.sf$component !== void 0){\r\n\t\t\t\tvar modelFrom = element.sf$componentFrom;\r\n\t\t\t\tvar components = sf.component.available[modelFrom];\r\n\t\t\t\tcomponents.splice(components.indexOf(modelName), 1);\r\n\t\t\t\tinternal.component.triggerEvent(modelFrom, 'removed', self.root[modelName]);\r\n\t\t\t\tdelete self.root[modelName];\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar temp = $('[sf-controller]', element);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tDOMNodeRemoved(temp[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tsf(function(){\r\n\t\tvar everyRemovedNodes = function(nodes){\r\n\t\t\tif(nodes.nodeType !== 1 || nodes.firstElementChild === null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(nodes.sf$elementReferences !== void 0) return;\r\n\t\t\tDOMNodeRemoved(nodes);\r\n\t\t}\r\n\r\n\t\tif(typeof MutationObserver === 'function' && MutationObserver.prototype.observe){\r\n\t\t\tvar everyRecords = function(record){\r\n\t\t\t\trecord.removedNodes.forEach(everyRemovedNodes);\r\n\t\t\t}\r\n\r\n\t\t\tvar observer = new MutationObserver(function(records){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\trecords.forEach(everyRecords);\r\n\t\t\t});\r\n\r\n\t\t\tobserver.observe(document.body, { childList: true, subtree: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.body.addEventListener('DOMNodeRemoved', function(e){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\teveryRemovedNodes(e.target);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tvar removeModelBinding = self.reset = function(modelName){\r\n\t\tvar ref = self.root[modelName];\r\n\t\tif(ref === void 0)\r\n\t\t\treturn;\r\n\r\n\t\tvar bindedKey = ref.sf$bindedKey;\r\n\t\tvar temp = null;\r\n\t\tfor(var key in bindedKey){\r\n\t\t\tdelete bindedKey[key];\r\n\r\n\t\t\tif(ref[key] === void 0 || ref[key] === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(ref[key].constructor === String ||\r\n\t\t\t\tref[key].constructor === Number ||\r\n\t\t\t\tref[key].constructor === Boolean\r\n\t\t\t){/* Ok */}\r\n\r\n\t\t\telse if(ref[key].constructor === Array){\r\n\t\t\t\tif(ref[key].$virtual){\r\n\t\t\t\t\tref[key].$virtual.destroy();\r\n\t\t\t\t\tdelete ref[key].$virtual;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset property without copying the array\r\n\t\t\t\ttemp = ref[key].splice('obtain');\r\n\t\t\t\tdelete ref[key];\r\n\t\t\t\tref[key] = temp;\r\n\t\t\t}\r\n\t\t\telse continue;\r\n\r\n\t\t\tif(Object.getOwnPropertyDescriptor(ref, key) === void 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Reconfigure / Remove property descriptor\r\n\t\t\tvar temp = ref[key];\r\n\t\t\tdelete ref[key];\r\n\t\t\tref[key] = temp;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction modelToViewBinding(model, propertyName, callback, elementBind, type){\r\n\t\t// Enable multiple element binding\r\n\t\tif(model.sf$bindedKey === void 0)\r\n\t\t\tinitBindingInformation(model);\r\n\r\n\t\tif(model.sf$bindedKey[propertyName] !== void 0){\r\n\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\tif(ref.indexOf(callback) === -1)\r\n\t\t\t\tref.push(callback);\r\n\r\n\t\t\tif(elementBind !== void 0){\r\n\t\t\t\tif(ref.input === void 0){\r\n\t\t\t\t\tref.input = [elementBind];\r\n\t\t\t\t\tref.input.type = type;\r\n\t\t\t\t}\r\n\t\t\t\telse ref.input.push(elementBind);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tmodel.sf$bindedKey[propertyName] = [callback];\r\n\r\n\t\tif(elementBind !== void 0){\r\n\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\tref.input = [elementBind];\r\n\t\t\tref.input.type = type;\r\n\t\t}\r\n\r\n\t\t// Proxy property\r\n\t\tif(Object.getOwnPropertyDescriptor(model, propertyName).set !== void 0)\r\n\t\t\treturn;\r\n\r\n\t\tvar objValue = model[propertyName]; // Object value\r\n\t\tObject.defineProperty(model, propertyName, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\t\t\tget:function(getAssigner){\r\n\t\t\t\treturn objValue;\r\n\t\t\t},\r\n\t\t\tset:function(val){\r\n\t\t\t\tif(objValue !== val){\r\n\t\t\t\t\tvar m2v = model['m2v$'+propertyName];\r\n\t\t\t\t\tvar out = inputBoundRunning === false ? model['out$'+propertyName] : void 0;\r\n\t\t\t\t\tvar callback = inputBoundRunning === false ? model['on$'+propertyName] : void 0;\r\n\r\n\t\t\t\t\tif(callback !== void 0 || m2v !== void 0 || out !== void 0){\r\n\t\t\t\t\t\tvar newValue1 = void 0; var newValue2 = void 0; var newValue3 = void 0;\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tif(m2v !== void 0)\r\n\t\t\t\t\t\t\t\tnewValue1 = m2v(objValue, val);\r\n\r\n\t\t\t\t\t\t\tif(out !== void 0)\r\n\t\t\t\t\t\t\t\tnewValue2 = out(objValue, val);\r\n\r\n\t\t\t\t\t\t\tif(callback !== void 0)\r\n\t\t\t\t\t\t\t\tnewValue3 = callback(objValue, val);\r\n\t\t\t\t\t\t}catch(e){console.error(e)}\r\n\r\n\t\t\t\t\t\tobjValue = (newValue3 !== void 0 ? newValue3 : \r\n\t\t\t\t\t\t\t(newValue2 !== void 0 ? newValue2 : \r\n\t\t\t\t\t\t\t(newValue1 !== void 0 ? newValue1 : val)\r\n\t\t\t\t\t\t));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse objValue = val;\r\n\r\n\t\t\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\t\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\t\t\t\tif(inputBoundRun === ref[i]){\r\n\t\t\t\t\t\t\tif(inputBoundRunning !== true) // Avoid multiple assigment\r\n\t\t\t\t\t\t\t\tref[i](model, propertyName, ref.input);\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tref[i]();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinputBoundRunning = false;\r\n\t\t\t\treturn objValue;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvar dcBracket = /{{[^#][\\s\\S]*?}}/;\r\n\tself.bindElement = function(element){\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar data = self.extractPreprocess(element, null, modelName);\r\n\t\ttemplateParser(data, model, true);\r\n\t\tdelete data.addresses;\r\n\t\telement.parentNode.replaceChild(data.html, element);\r\n\t\telement = data.html;\r\n\r\n\t\tvar onChanges = function(){\r\n\t\t\tif(syntheticTemplate(element, data, void 0, model) === false)\r\n\t\t\t\t0; //No update\r\n\t\t};\r\n\r\n\t\tvar properties = data.modelRef_array;\r\n\t\tfor (var i = 0; i < properties.length; i++) {\r\n\t\t\tvar propertyName = properties[i][0];\r\n\r\n\t\t\tif(model[propertyName] === void 0)\r\n\t\t\t\tmodel[propertyName] = '';\r\n\r\n\t\t\tmodelToViewBinding(model, propertyName, onChanges);\r\n\t\t}\r\n\t}\r\n\r\n\tself.extractPreprocess = function(targetNode, mask, name){\r\n\t\t// Check if it's component\r\n\t\tvar tagName = targetNode.tagName.toLowerCase();\r\n\t\tif(sf.component.registered[tagName] !== void 0){\r\n\t\t\ttargetNode.parentNode.classList.add('sf-keyed-list');\r\n\t\t\ttargetNode.textContent = '';\r\n\t\t\ttargetNode.remove();\r\n\t\t\ttargetNode.setAttribute('sf-component-ignore', '');\r\n\t\t\treturn {\r\n\t\t\t\tcomponent:window['$'+capitalizeLetters(tagName.split('-'))],\r\n\t\t\t\tlist:targetNode.getAttribute('sf-bind-list')\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tvar copy = targetNode.outerHTML;\r\n\r\n\t\t// Mask the referenced item\r\n\t\tif(mask !== null)\r\n\t\t\tcopy = copy.split('#'+mask).join('_model_');\r\n\r\n\t\t// Extract data to be parsed\r\n\t\tcopy = uniqueDataParser(copy, null, mask, name, '#noEval');\r\n\t\tvar preParsed = copy[1];\r\n\t\tvar _content_ = copy[2];\r\n\t\tcopy = dataParser(copy[0], null, mask, name, '#noEval', preParsed);\r\n\r\n\t\tfunction findModelProperty(){\r\n\t\t\tif(mask === null){\r\n\t\t\t\t// Get model keys and sort by text length, make sure the longer one is from first index to avoid wrong match\r\n\t\t\t\tvar extract = RegExp('('+self.modelKeys(self.root[name]).sort(function(a, b){\r\n\t\t\t\t\treturn b.length - a.length\r\n\t\t\t\t}).join('|')+')', 'g');\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tvar extract = RegExp('\\\\b(?:_model_|'+mask+')\\\\.([a-zA-Z0-9.[\\'\\\\]]+)(?:$|[^\\'\\\\]])', 'g');\r\n\t\t\tvar found = {};\r\n\r\n\t\t\tfor (var i = 0; i < preParsed.length; i++) {\r\n\t\t\t\tvar current = preParsed[i];\r\n\r\n\t\t\t\t// Text or attribute\r\n\t\t\t\tif(current.type === 0){\r\n\t\t\t\t\tcurrent.data[0].split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(found[match] === void 0) found[match] = [i];\r\n\t\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Dynamic data\r\n\t\t\t\tif(current.type === 1){\r\n\t\t\t\t\tvar checkList = current.if.join(';');\r\n\r\n\t\t\t\t\tif(current.elseValue !== null)\r\n\t\t\t\t\t\tcheckList += ';' + current.elseValue;\r\n\r\n\t\t\t\t\tfor (var a = 0; a < current.elseIf.length; a++) {\r\n\t\t\t\t\t\tcheckList += current.elseIf[a].join(';');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(current.type === 2)\r\n\t\t\t\t\tvar checkList = current.data[0];\r\n\r\n\t\t\t\tcheckList = checkList.replace(/_result_ \\+= _content_\\.take\\(.*?, ([0-9]+)\\);/g, function(full, match){\r\n\t\t\t\t\treturn _content_[match];\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcheckList.split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found[match] === void 0) found[match] = [i];\r\n\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn found;\r\n\t\t}\r\n\r\n\t\t// Build element and start addressing\r\n\t\tcopy = $.parseElement(copy)[0];\r\n\t\tvar nodes = self.queuePreprocess(copy, true).reverse();\r\n\t\tvar addressed = [];\r\n\r\n\t\tfunction addressAttributes(currentNode){\r\n\t\t\tvar attrs = currentNode.attributes;\r\n\t\t\tvar keys = [];\r\n\t\t\tvar indexes = 0;\r\n\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\tvar found = attrs[a].value.split('{{%=');\r\n\t\t\t\tif(found.length !== 1){\r\n\t\t\t\t\tif(attrs[a].name[0] === ':'){\r\n\t\t\t\t\t\tvar key = {\r\n\t\t\t\t\t\t\tname:attrs[a].name.split(':').join(''),\r\n\t\t\t\t\t\t\tvalue:attrs[a].value\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tcurrentNode.removeAttribute(attrs[a].name);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse var key = {\r\n\t\t\t\t\t\tname:attrs[a].name,\r\n\t\t\t\t\t\tvalue:attrs[a].value\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tindexes = [];\r\n\t\t\t\t\tfound = key.value.replace(/{{%=([0-9]+)/g, function(full, match){\r\n\t\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found === '' && indexes.length === 1)\r\n\t\t\t\t\t\tkey.direct = indexes[0];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tkey.parse_index = indexes;\r\n\r\n\t\t\t\t\tkeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn keys;\r\n\t\t}\r\n\r\n\t\tvar currentElement = addressAttributes(copy);\r\n\t\tif(currentElement.length !== 0)\r\n\t\t\taddressed.push({\r\n\t\t\t\tnodeType:1,\r\n\t\t\t\taddress:[0],\r\n\t\t\t\tattributes:currentElement\r\n\t\t\t});\r\n\r\n\t\tfor (var i = 0; i < nodes.length; i++) {\r\n\t\t\tvar temp = {\r\n\t\t\t\tnodeType:nodes[i].nodeType\r\n\t\t\t};\r\n\r\n\t\t\tif(temp.nodeType === 1){ // Element\r\n\t\t\t\ttemp.attributes = addressAttributes(nodes[i]);\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\telse if(temp.nodeType === 3){ // Text node\r\n\t\t\t\tvar innerHTML = nodes[i].textContent;\r\n\t\t\t\tvar indexes = [];\r\n\r\n\t\t\t\tinnerHTML.replace(/{{%%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Check for dynamic mode\r\n\t\t\t\tif(indexes.length !== 0){\r\n\t\t\t\t\tinnerHTML = innerHTML.split(/{{%%=[0-9]+/gm);\r\n\t\t\t\t\tfor (var a = 0; a < innerHTML.length; a++) {\r\n\t\t\t\t\t\tinnerHTML[a] = trimIndentation(innerHTML[a]).trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodes[i].textContent = innerHTML.shift();\r\n\r\n\t\t\t\t\tvar parent = nodes[i].parentNode;\r\n\t\t\t\t\tvar nextSibling = nodes[i].nextSibling;\r\n\r\n\t\t\t\t\t// Dynamic boundary start\r\n\t\t\t\t\tvar addressStart = null;\r\n\t\t\t\t\tif(indexes.length !== 0 && nodes[i].textContent.length !== 0)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i], true);\r\n\t\t\t\t\telse if(nodes[i].previousSibling !== null)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i].previousSibling, true);\r\n\r\n\t\t\t\t\t// Find boundary ends\r\n\t\t\t\t\tvar commentFlag = [];\r\n\t\t\t\t\tfor(var a = 0; a < indexes.length; a++){\r\n\t\t\t\t\t\tvar flag = document.createComment('');\r\n\t\t\t\t\t\tparent.insertBefore(flag, nextSibling);\r\n\t\t\t\t\t\tcommentFlag.push({\r\n\t\t\t\t\t\t\tnodeType:-1,\r\n\t\t\t\t\t\t\tparse_index:indexes[a],\r\n\t\t\t\t\t\t\tstartFlag:addressStart,\r\n\t\t\t\t\t\t\taddress:$.getSelector(flag, true)\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(innerHTML[a]){\r\n\t\t\t\t\t\t\tvar textNode = document.createTextNode(innerHTML[a]);\r\n\t\t\t\t\t\t\tparent.insertBefore(textNode, nextSibling);\r\n\r\n\t\t\t\t\t\t\t// Get new start flag\r\n\t\t\t\t\t\t\tif(a + 1 < indexes.length)\r\n\t\t\t\t\t\t\t\taddressStart = $.getSelector(textNode, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Merge boundary address\r\n\t\t\t\t\tArray.prototype.push.apply(addressed, commentFlag);\r\n\t\t\t\t\tif(nodes[i].textContent === ''){\r\n\t\t\t\t\t\tnodes[i].remove();\r\n\t\t\t\t\t\tfor (var a = 0; a < commentFlag.length; a++) {\r\n\t\t\t\t\t\t\tvar ref = commentFlag[a].address;\r\n\t\t\t\t\t\t\tref[ref.length - 1]--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(nodes[i].textContent.search(/{{%=[0-9]+/) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if it's only model value\r\n\t\t\t\tindexes = [];\r\n\t\t\t\tinnerHTML = nodes[i].textContent.replace(/{{%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(innerHTML === '' && indexes.length === 1)\r\n\t\t\t\t\ttemp.direct = indexes[0];\r\n\t\t\t\telse{\r\n\t\t\t\t\ttemp.value = nodes[i].textContent;\r\n\t\t\t\t\ttemp.parse_index = indexes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\taddressed.push(temp);\r\n\t\t}\r\n\r\n\t\tvar modelReference = findModelProperty();\r\n\t\tvar keys = Object.keys(modelReference);\r\n\t\tvar asArray = [];\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tasArray.push([keys[i], keys[i].split('.')]);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\thtml:copy,\r\n\t\t\tparse:preParsed,\r\n\t\t\taddresses:addressed,\r\n\t\t\tmodelReference:modelReference,\r\n\t\t\tmodelRef_array:asArray\r\n\t\t};\r\n\t}\r\n\r\n\tvar enclosedHTMLParse = false;\r\n\tvar excludes = ['HTML','HEAD','STYLE','LINK','META','SCRIPT','OBJECT','IFRAME'];\r\n\tself.queuePreprocess = function(targetNode, extracting){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = childNodes.length - 1; i >= 0; i--) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\r\n\t\t\tif(extracting === void 0 && excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tif(enclosedHTMLParse === true) continue;\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\r\n\t\t\t\t// Skip element and it's childs that already bound to prevent vulnerability\r\n\t\t\t\tif(attrs['sf-bind-key'] || attrs['sf-repeat-this'] || attrs['sf-bind-list']) continue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tArray.prototype.push.apply(temp, self.queuePreprocess(currentNode, extracting));\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tif(currentNode.textContent.length === 0){\r\n\t\t\t\t\tcurrentNode.remove();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// The scan is from bottom to first index\r\n\t\t\t\tvar enclosing = currentNode.textContent.indexOf('{[');\r\n\t\t\t\tif(enclosing !== -1)\r\n\t\t\t\t\tenclosedHTMLParse = false;\r\n\t\t\t\telse if(enclosedHTMLParse === true)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Start enclosed if closing pattern was found\r\n\t\t\t\tvar enclosed = currentNode.textContent.indexOf(']}');\r\n\t\t\t\tif(enclosed !== -1 && (enclosing === -1 || enclosing > enclosed)){ // avoid {[ ... ]}\r\n\t\t\t\t\tenclosedHTMLParse = true; // when ]} ... \r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tif(extracting === void 0){\r\n\t\t\t\t\t\ttemp.push(currentNode.parentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn temp;\r\n\t}\r\n\r\n\tself.parsePreprocess = function(nodes, queued){\r\n\t\tfor (var a = 0; a < nodes.length; a++) {\r\n\t\t\t// Get reference for debugging\r\n\t\t\tvar current = processingElement = nodes[a];\r\n\r\n\t\t\tvar modelElement = sf.controller.modelElement(current);\r\n\t\t\tif(modelElement === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar model = modelElement.sf$component === void 0 ? modelElement.getAttribute('sf-controller') : modelElement.sf$component;\r\n\r\n\t\t\tif(queued !== void 0)\r\n\t\t\t\tcurrent.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tvar modelRef = self.root[model] || root_(model);\r\n\r\n\t\t\t// Double check if the child element already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(current.innerHTML)){\r\n\t\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\t\tconsole.log(processingElement.cloneNode(true));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(current.hasAttribute('sf-bind-ignore') === false)\r\n\t\t\t\tself.bindElement(current);\r\n\t\t\telse{\r\n\t\t\t\tvar temp = uniqueDataParser(current.innerHTML, modelRef, false, model);\r\n\t\t\t\tcurrent.innerHTML = dataParser(temp, modelRef, false, model);\r\n\t\t\t\tvar attrs = current.attributes;\r\n\t\t\t\tfor (var i = 0; i < attrs.length; i++) {\r\n\t\t\t\t\tif(attrs[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tvar attr = attrs[i];\r\n\t\t\t\t\t\tattr.value = dataParser(attr.value, modelRef, false, model);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initBindingInformation(modelRef){\r\n\t\tif(modelRef.sf$bindedKey !== void 0)\r\n\t\t\treturn;\r\n\r\n\t\t// Element binding data\r\n\t\tObject.defineProperty(modelRef, 'sf$bindedKey', {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable:false,\r\n\t\t\twritable:true,\r\n\t\t\tvalue:{}\r\n\t\t});\r\n\t}\r\n})();","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tself.pending = {};\r\n\tself.active = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tif(sf.component.registered[name]){\r\n\t\t\tsf.component.registered[name][1] = func;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tself.pending[name] = func;\r\n\t}\r\n\r\n\tself.modelScope = function(element, func){\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = element.getAttribute('sf-bind-list');\r\n\t\tif(!bindedList){\r\n\t\t\tvar parentEl = $.parent(element, '[sf-bind-list]');\r\n\t\t\tif(parentEl !== null)\r\n\t\t\t\tbindedList = parentEl.getAttribute('sf-bind-list');\r\n\t\t}\r\n\t\telse var parentEl = element;\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(sf.model.root[model], -1);\r\n\t\t\telse return sf.model.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = $.prevAll(parentEl, '[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(sf.model.root[model][bindedList], bindedListIndex);\r\n\t\telse return sf.model.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.modelElement = function(element){\r\n\t\tif(element.nodeType === 1 && element.hasAttribute('sf-controller') === true)\r\n\t\t\treturn element;\r\n\r\n\t\treturn $.parent(element, '[sf-controller]');\r\n\t}\r\n\r\n\tself.modelName = function(element){\r\n\t\tvar name = self.modelElement(element);\r\n\t\tif(name === null){\r\n\t\t\tconsole.error(\"Can't find any controller for\", element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tname = name.sf$component === void 0? name.getAttribute('sf-controller') : name.sf$component;\r\n\r\n\t\t// Initialize it first\r\n\t\tif(name !== void 0 && !self.active[name])\r\n\t\t\tself.run(name);\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = e.target;\r\n\t\tvar script = element.getAttribute('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = $.parent(element, '[sf-click]');\r\n\t\t\tscript = element.getAttribute('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = $.parent(element, '[sf-controller]');\r\n\t\tmodel = model.sf$component === void 0 ? model.getAttribute('sf-controller') : model.sf$component;\r\n\t\tvar _modelScope = sf.model.root[model];\r\n\r\n\t\tif(_modelScope === void 0)\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(_modelScope).join('|');\r\n\t\tscript = avoidQuotes(script, function(script_){\r\n\t\t\treturn script_.replace(RegExp(sf.regex.strictVar+'('+modelKeys+')\\\\b', 'g'), function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script.shift();\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(e) {\r\n\t\t\tmethod = false;\r\n\t\t}\r\n\r\n\t\tif(!method){\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot call `'+method_+'`]\\n', element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0){\r\n\t\t\t// Replace `this` to `element`\r\n\t\t\tscript = eval(('['+script+']').replace(/,this|\\[this/g, function(found){\r\n\t\t\t\treturn found[0] + 'element';\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif(!script)\r\n\t\t\tscript = [];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element, script);\r\n\t\t\te.preventDefault();\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', element, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tself.run = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.run(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(sf.component.registered[name])\r\n\t\t\treturn console.error(\"'\"+name+\"' is registered as a component\");\r\n\r\n\t\tif(self.pending[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\r\n\t\t\tself.pending[name](sf.model.root[name], root_);\r\n\t\t\tself.active[name] = true;\r\n\t\t\tdelete self.pending[name];\r\n\t\t}\r\n\r\n\t\tif(sf.model.root[name] === void 0)\r\n\t\t\tsf.model.root[name] = {};\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], root_);\r\n\t}\r\n\r\n\tself.init = function(parent){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(name);\r\n\t\t\t});\r\n\r\n\t\tvar temp = $('[sf-controller]', parent || document.body);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tself.run(temp[i].sf$component === void 0? temp[i].getAttribute('sf-controller') : temp[i].sf$component);\r\n\t\t}\r\n\t}\r\n\r\n\t// Create listener for sf-click\r\n\tdocument.addEventListener('DOMContentLoaded', function(){\r\n\t\t$.on(document.body, 'click', '[sf-click]', listenSFClick);\r\n\t}, {capture:true, once:true});\r\n}\r\n\r\nvar root_ = function(scope){\r\n\tif(sf.component.registered[scope]){\r\n\t\tvar available = [];\r\n\t\tvar component = sf.component.available[scope];\r\n\t\tif(component !== void 0){\r\n\t\t\tfor (var i = 0; i < component.length; i++) {\r\n\t\t\t\tavailable.push(sf.model.root[component[i]]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn available;\r\n\t}\r\n\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\treturn sf.model.root[scope];\r\n}","/*\r\n  Special Thanks to Vladimir Kharlampidi\r\n  https://github.com/nolimits4web/\r\n*/\r\n\r\nvar globals = {};\r\nvar jsonpRequests = 0;\r\nfunction Request(requestOptions) {\r\n    var globalsNoCallbacks = Object.assign({}, globals);\r\n    ('beforeCreate beforeOpen beforeSend error complete success statusCode').split(' ').forEach(function (callbackName) {\r\n        delete globalsNoCallbacks[callbackName];\r\n    });\r\n    var defaults = Object.assign({\r\n        url: window.location.toString(),\r\n        method: 'GET',\r\n        data: false,\r\n        async: true,\r\n        cache: true,\r\n        user: '',\r\n        password: '',\r\n        headers: {},\r\n        xhrFields: {},\r\n        statusCode: {},\r\n        processData: true,\r\n        dataType: 'text',\r\n        contentType: 'application/x-www-form-urlencoded',\r\n        timeout: 0,\r\n    }, globalsNoCallbacks);\r\n    var options = Object.assign({}, defaults, requestOptions);\r\n    var proceedRequest;\r\n    // Function to run XHR callbacks and events\r\n    function fireCallback(callbackName) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        /*\r\n          Callbacks:\r\n          beforeCreate (options),\r\n          beforeOpen (xhr, options),\r\n          beforeSend (xhr, options),\r\n          error (xhr, status),\r\n          complete (xhr, stautus),\r\n          success (response, status, xhr),\r\n          statusCode ()\r\n        */\r\n        var globalCallbackValue;\r\n        var optionCallbackValue;\r\n        if (globals[callbackName]) {\r\n            globalCallbackValue = globals[callbackName].apply(globals, data);\r\n        }\r\n        if (options[callbackName]) {\r\n            optionCallbackValue = options[callbackName].apply(options, data);\r\n        }\r\n        if (typeof globalCallbackValue !== 'boolean')\r\n            globalCallbackValue = true;\r\n        if (typeof optionCallbackValue !== 'boolean')\r\n            optionCallbackValue = true;\r\n        return (globalCallbackValue && optionCallbackValue);\r\n    }\r\n    // Before create callback\r\n    proceedRequest = fireCallback('beforeCreate', options);\r\n    if (proceedRequest === false)\r\n        return void 0;\r\n    // For jQuery guys\r\n    if (options.type)\r\n        options.method = options.type;\r\n    // Parameters Prefix\r\n    var paramsPrefix = options.url.indexOf('?') >= 0 ? '&' : '?';\r\n    // UC method\r\n    var method = options.method.toUpperCase();\r\n    // Data to modify GET URL\r\n    if ((method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') && options.data) {\r\n        var stringData = void 0;\r\n        if (typeof options.data === 'string') {\r\n            // Should be key=value string\r\n            if (options.data.indexOf('?') >= 0)\r\n                stringData = options.data.split('?')[1];\r\n            else\r\n                stringData = options.data;\r\n        }\r\n        else {\r\n            // Should be key=value object\r\n            stringData = serializeQuery(options.data);\r\n        }\r\n        if (stringData.length) {\r\n            options.url += paramsPrefix + stringData;\r\n            if (paramsPrefix === '?')\r\n                paramsPrefix = '&';\r\n        }\r\n    }\r\n    // JSONP\r\n    if (options.dataType === 'json' && options.url.indexOf('callback=') >= 0) {\r\n        var callbackName_1 = \"jsonp_\" + (Date.now() + ((jsonpRequests += 1)));\r\n        var abortTimeout_1;\r\n        var callbackSplit = options.url.split('callback=');\r\n        var requestUrl = callbackSplit[0] + \"callback=\" + callbackName_1;\r\n        if (callbackSplit[1].indexOf('&') >= 0) {\r\n            var addVars = callbackSplit[1].split('&').filter(function (el) { return el.indexOf('=') > 0; }).join('&');\r\n            if (addVars.length > 0)\r\n                requestUrl += \"&\" + addVars;\r\n        }\r\n        // Create script\r\n        var script_1 = document.createElement('script');\r\n        script_1.type = 'text/javascript';\r\n        script_1.onerror = function onerror() {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('error', null, 'scripterror');\r\n            fireCallback('complete', null, 'scripterror');\r\n        };\r\n        script_1.src = requestUrl;\r\n        // Handler\r\n        window[callbackName_1] = function jsonpCallback(data) {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('success', data);\r\n            script_1.parentNode.removeChild(script_1);\r\n            script_1 = null;\r\n            delete window[callbackName_1];\r\n        };\r\n        document.querySelector('head').appendChild(script_1);\r\n        if (options.timeout > 0) {\r\n            abortTimeout_1 = setTimeout(function () {\r\n                script_1.parentNode.removeChild(script_1);\r\n                script_1 = null;\r\n                fireCallback('error', null, 'timeout');\r\n            }, options.timeout);\r\n        }\r\n        return void 0;\r\n    }\r\n    // Cache for GET/HEAD requests\r\n    if (method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') {\r\n        if (options.cache === false) {\r\n            options.url += paramsPrefix + \"_nocache\" + Date.now();\r\n        }\r\n    }\r\n    // Create XHR\r\n    var xhr = new XMLHttpRequest();\r\n    // Save Request URL\r\n    xhr.requestUrl = options.url;\r\n    xhr.requestParameters = options;\r\n    // Before open callback\r\n    proceedRequest = fireCallback('beforeOpen', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Open XHR\r\n    xhr.open(method, options.url, options.async, options.user, options.password);\r\n    // Create POST Data\r\n    var postData = null;\r\n    if ((method === 'POST' || method === 'PUT' || method === 'PATCH') && options.data) {\r\n        if (options.processData) {\r\n            var postDataInstances = [ArrayBuffer, Blob, Document, FormData];\r\n            // Post Data\r\n            if (postDataInstances.indexOf(options.data.constructor) >= 0) {\r\n                postData = options.data;\r\n            }\r\n            else {\r\n                // POST Headers\r\n                var boundary = \"---------------------------\" + Date.now().toString(16);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    xhr.setRequestHeader('Content-Type', \"multipart/form-data; boundary=\" + boundary);\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader('Content-Type', options.contentType);\r\n                }\r\n                postData = '';\r\n                var data = serializeQuery(options.data);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    data = data.split('&');\r\n                    var newData = [];\r\n                    for (var i = 0; i < data.length; i += 1) {\r\n                        newData.push(\"Content-Disposition: form-data; name=\\\"\" + data[i].split('=')[0] + \"\\\"\\r\\n\\r\\n\" + data[i].split('=')[1] + \"\\r\\n\");\r\n                    }\r\n                    postData = \"--\" + boundary + \"\\r\\n\" + newData.join(\"--\" + boundary + \"\\r\\n\") + \"--\" + boundary + \"--\\r\\n\";\r\n                }\r\n                else if (options.contentType === 'application/json') {\r\n                    postData = JSON.stringify(options.data);\r\n                }\r\n                else {\r\n                    postData = data;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            postData = options.data;\r\n            xhr.setRequestHeader('Content-Type', options.contentType);\r\n        }\r\n    }\r\n    // Additional headers\r\n    if (options.headers) {\r\n        Object.keys(options.headers).forEach(function (headerName) {\r\n            xhr.setRequestHeader(headerName, options.headers[headerName]);\r\n        });\r\n    }\r\n    // Check for crossDomain\r\n    if (typeof options.crossDomain === 'void 0') {\r\n        // eslint-disable-next-line\r\n        options.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(options.url) && RegExp.$2 !== window.location.host;\r\n    }\r\n    if (!options.crossDomain) {\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    }\r\n    if (options.xhrFields) {\r\n        Object.assign(xhr, options.xhrFields);\r\n    }\r\n    var xhrTimeout;\r\n    // Handle XHR\r\n    xhr.onload = function onload() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 0) {\r\n            var responseData = void 0;\r\n            if (options.dataType === 'json') {\r\n                var parseError = void 0;\r\n                try {\r\n                    responseData = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (err) {\r\n                    parseError = true;\r\n                }\r\n                if (!parseError) {\r\n                    fireCallback('success', responseData, xhr.status, xhr);\r\n                }\r\n                else {\r\n                    fireCallback('error', xhr, 'parseerror');\r\n                }\r\n            }\r\n            else {\r\n                responseData = xhr.responseType === 'text' || xhr.responseType === '' ? xhr.responseText : xhr.response;\r\n                fireCallback('success', responseData, xhr.status, xhr);\r\n            }\r\n        }\r\n        else {\r\n            fireCallback('error', xhr, xhr.status);\r\n        }\r\n        if (options.statusCode) {\r\n            if (globals.statusCode && globals.statusCode[xhr.status])\r\n                globals.statusCode[xhr.status](xhr);\r\n            if (options.statusCode[xhr.status])\r\n                options.statusCode[xhr.status](xhr);\r\n        }\r\n        fireCallback('complete', xhr, xhr.status);\r\n    };\r\n    xhr.onerror = function onerror() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        fireCallback('error', xhr, xhr.status);\r\n        fireCallback('complete', xhr, 'error');\r\n    };\r\n    // Timeout\r\n    if (options.timeout > 0) {\r\n        xhr.onabort = function onabort() {\r\n            if (xhrTimeout)\r\n                clearTimeout(xhrTimeout);\r\n        };\r\n        xhrTimeout = setTimeout(function () {\r\n            xhr.abort();\r\n            fireCallback('error', xhr, 'timeout');\r\n            fireCallback('complete', xhr, 'timeout');\r\n        }, options.timeout);\r\n    }\r\n    // Ajax start callback\r\n    proceedRequest = fireCallback('beforeSend', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Send XHR\r\n    xhr.send(postData);\r\n    // Return XHR object\r\n    return xhr;\r\n}\r\nfunction RequestShortcut(method) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    var _a = [], url = _a[0], data = _a[1], success = _a[2], error = _a[3], dataType = _a[4];\r\n    if (typeof args[1] === 'function') {\r\n        url = args[0], success = args[1], error = args[2], dataType = args[3];\r\n    }\r\n    else {\r\n        url = args[0], data = args[1], success = args[2], error = args[3], dataType = args[4];\r\n    }\r\n    [success, error].forEach(function (callback) {\r\n        if (typeof callback === 'string') {\r\n            dataType = callback;\r\n            if (callback === success)\r\n                success = void 0;\r\n            else\r\n                error = void 0;\r\n        }\r\n    });\r\n    dataType = dataType || (method === 'json' || method === 'postJSON' ? 'json' : void 0);\r\n    var requestOptions = {\r\n        url: url,\r\n        method: method === 'post' || method === 'postJSON' ? 'POST' : 'GET',\r\n        data: data,\r\n        success: success,\r\n        error: error,\r\n        dataType: dataType,\r\n    };\r\n    if (method === 'postJSON') {\r\n        Object.assign(requestOptions, {\r\n            contentType: 'application/json',\r\n            processData: false,\r\n            crossDomain: true,\r\n            data: typeof data === 'string' ? data : JSON.stringify(data),\r\n        });\r\n    }\r\n    return Request(requestOptions);\r\n}\r\nObject.assign(Request, {\r\n    get: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['get'].concat(args));\r\n    },\r\n    post: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['post'].concat(args));\r\n    },\r\n    json: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    getJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    postJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['postJSON'].concat(args));\r\n    },\r\n});\r\nRequest.setup = function setup(options) {\r\n    if (options.type && !options.method) {\r\n        Object.assign(options, { method: options.type });\r\n    }\r\n    Object.assign(globals, options);\r\n};\r\nfunction serializeQuery(params, prefix) {\r\n    var key = Object.keys(params);\r\n    for (var i = 0; i < key.length; i++) {\r\n      var value = params[key[i]];\r\n      if (params.constructor === Array)\r\n          key[i] += prefix + \"[]\";\r\n      else if (params.constructor === Object)\r\n          key[i] = (prefix ? prefix + \"[\" + key[i] + \"]\" : key[i]);\r\n\r\n      if (typeof value === 'object')\r\n          key[i] = serializeQuery(value, key[i]);\r\n      else\r\n          key[i] = key[i] + \"=\" + encodeURIComponent(value);\r\n    }\r\n    return key.join('&');\r\n}\r\n$.ajax = sf.ajax = Request;","return sf;\r\n\r\n// ===== Module End =====\r\n})));","sf.router = new function(){\r\n\tvar self = this;\r\n\tself.loading = false;\r\n\tself.enabled = false;\r\n\tself.pauseRenderOnTransition = false;\r\n\tself.currentPage = [];\r\n\tvar initialized = false;\r\n\tvar lazyRouting = false;\r\n\tvar currentRouterURL = '';\r\n\r\n\t// Should be called if not using lazy page load\r\n\tself.init = function(targetNode){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init();\r\n\t\t\t});\r\n\r\n\t\t// Run 'before' event for new page view\r\n\t\tvar temp = $('[sf-controller], [sf-page]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tif(temp[i].hasAttribute('sf-controller') === true)\r\n\t\t\t\tsf.controller.run(temp[i].getAttribute('sf-controller'));\r\n\t\t\t\r\n\t\t\tif(temp[i].getAttribute('sf-page')){\r\n\t\t\t\tvar name = temp[i].getAttribute('sf-page');\r\n\t\t\t\tbeforeEvent(name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinitialized = true;\r\n\t\tcurrentRouterURL = window.location.pathname;\r\n\t}\r\n\r\n\tfunction popstateListener(event) {\r\n\t\t// Don't continue if the last routing was error\r\n\t\tif(routingError){\r\n\t\t\troutingError = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\troutingBack = true;\r\n\t\tself.goto(window.location.pathname);\r\n\t}\r\n\r\n\tself.enable = function(status){\r\n\t\tif(status === void 0) status = true;\r\n\t\tif(self.enabled === status) return;\r\n\t\tself.enabled = status;\r\n\r\n\t\tif(status === true){\r\n\t\t\t// Create listener for link click\r\n\t\t\t$.on(document.body, 'click', 'a[href]', self.load);\r\n\r\n\t\t\t// Create listener when navigate backward\r\n\t\t\twindow.addEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$.off(document.body, 'click', 'a[href]', self.load);\r\n\t\t\twindow.removeEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t}\r\n\r\n\tvar before = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.before = function(name, func, index){\r\n\t\tif(!before[name])\r\n\t\t\tbefore[name] = [];\r\n\r\n\t\tif(index === void 0){\r\n\t\t\tif(before[name].indexOf(func) === -1)\r\n\t\t\t\tbefore[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tbefore[name][index] = func;\r\n\t}\r\n\r\n\tvar after = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.after = function(name, func, index){\r\n\t\tif(!after[name])\r\n\t\t\tafter[name] = [];\r\n\r\n\t\tif(index === void 0){\r\n\t\t\tif(after[name].indexOf(func) === -1)\r\n\t\t\t\tafter[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tafter[name][index] = func;\r\n\t}\r\n\r\n\t// Running 'before' new page going to be displayed\r\n\tvar beforeEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.push(name);\r\n\r\n\t\tif(before[name]){\r\n\t\t\tfor (var i = 0; i < before[name].length; i++) {\r\n\t\t\t\tbefore[name][i](sf.model);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Running 'after' old page going to be removed\r\n\tvar afterEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.splice(self.currentPage.indexOf(name), 1);\r\n\r\n\t\tif(after[name]){\r\n\t\t\tfor (var i = 0; i < after[name].length; i++) {\r\n\t\t\t\tafter[name][i](sf.model);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar onEvent = {\r\n\t\t'loading':[],\r\n\t\t'loaded':[],\r\n\t\t'special':[],\r\n\t\t'error':[]\r\n\t};\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\tself.lazyViewPoint = {};\r\n\t/*\r\n\t\t{\r\n\t\t\toldURlPattern:{\r\n\t\t\t\tnewURLPattern:'.viewPoint'\r\n\t\t\t}\r\n\t\t}\r\n\t*/\r\n\r\n\tself.load = function(ev){\r\n\t\tif(self.enabled !== true) return;\r\n\r\n\t\tvar elem = ev.target;\r\n\t\tif(!elem.href) return;\r\n\t\tif(elem.href[0] === '#') return;\r\n\t\tif(elem.href[0] === '@'){\r\n\t\t\telem.setAttribute('sf-router-ignore', '');\r\n\t\t\telem.href = elem.href.slice(1);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(!history.pushState || elem.hasAttribute('sf-router-ignore'))\r\n\t\t\treturn;\r\n\r\n\t\t// Make sure it's from current origin\r\n\t\tvar path = elem.href.replace(window.location.origin, '');\r\n\t\tif(path.indexOf('//') !== -1)\r\n\t\t\treturn;\r\n\r\n\t\tev.preventDefault()\r\n\t\treturn !self.goto(path);\r\n\t}\r\n\r\n\tvar RouterLoading = false;\r\n\tvar routingBack = false;\r\n\tvar routingError = false;\r\n\tself.goto = function(path, data, method){\r\n\t\tif(!method) method = 'GET';\r\n        else method = method.toUpperCase();\r\n\r\n\t\tif(!data) data = {};\r\n\r\n\t\tfor (var i = 0; i < onEvent['loading'].length; i++) {\r\n\t\t\tif(onEvent['loading'][i](path)) return;\r\n\t\t}\r\n\t\tvar oldPath = window.location.pathname;\r\n\t\tinitialized = false;\r\n\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\t\tRouterLoading = $.ajax({\r\n\t\t\turl:window.location.origin + path,\r\n\t\t\tmethod:method,\r\n            data:Object.assign(data, {\r\n                _scarlets:'.dynamic.'\r\n            }),\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\tif(initialized) return;\r\n\t\t\t\tlazyRouting = true;\r\n\r\n\t\t\t\t// Run 'loaded' event\r\n\t\t\t\tRouterLoading = false;\r\n\r\n\t\t\t\t// Find special data\r\n\t\t\t\tvar regex = RegExp('<!-- SF-Special:(.*?)-->', 'gm');\r\n\t\t\t\tvar special = regex.exec(data);\r\n\t\t\t\tif(special && special.length !== 1){\r\n\t\t\t\t\tspecial = special[1].split('--|&>').join('-->');\r\n\t\t\t\t\tspecial = JSON.parse(special);\r\n\r\n\t\t\t\t\tif(!isEmptyObject(special)){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['special'].length; i++) {\r\n\t\t\t\t\t\t\tif(onEvent['special'][i](special)) return;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DOMReference = false;\r\n\t\t\t\tvar foundAction = function(ref){\r\n\t\t\t\t\tDOMReference = $.findOne(ref);\r\n\r\n\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\tvar last = $.findOne('[sf-page]', DOMReference);\r\n\t\t\t\t\tafterEvent(last ? last.getAttribute('sf-page') : '/');\r\n\r\n\t\t\t\t\t// Redefine title if exist\r\n\t\t\t\t\tif(special && special.title)\r\n\t\t\t\t\t\t$('head > title').innerHTML = special.title;\r\n\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tfor(var oldURL in self.lazyViewPoint){\r\n\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\tfor(var newURL in self.lazyViewPoint[oldURL]){\r\n\t\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\t\tfoundAction(self.lazyViewPoint[oldURL][newURL]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(found) break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When the view point was not found\r\n\t\t\t\tif(!found){\r\n\t\t\t\t\t// Use fallback if exist\r\n\t\t\t\t\tif(sf.router.lazyViewPoint[\"@default\"])\r\n\t\t\t\t\t\tfoundAction(sf.router.lazyViewPoint[\"@default\"]);\r\n\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\t\t\tonEvent['error'][i]('sf.router.lazyViewPoint[\"'+oldURL+'\"][\"'+newURL+'\"] was not found');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Run 'before' event for new page view\r\n\t\t\t\tif(!DOMReference) DOMReference = document.body;\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', 'none');\r\n\r\n\t\t\t\t// Let page script running first, then update the data binding\r\n\t\t\t\tDOMReference.innerHTML = data;\r\n\r\n\t\t\t\t// Parse the DOM data binding\r\n\t\t\t\tsf.model.init(DOMReference);\r\n\r\n\t\t\t\t// Init template to model binding\r\n\t\t\t\tvar temp = $('[sf-page]', DOMReference);\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tbeforeEvent(temp[i].getAttribute('sf-page'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', '');\r\n\r\n\t\t\t\trouterLoaded(currentRouterURL, path, DOMReference);\r\n\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tlazyRouting = false;\r\n\r\n\t\t\t\tcurrentRouterURL = path;\r\n\t\t\t\troutingError = false;\r\n\t\t\t},\r\n\t\t\terror:function(xhr, data){\r\n\t\t\t\troutingError = true;\r\n\t\t\t\tif(xhr.aborted) return;\r\n\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\tonEvent['error'][i](xhr.status, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Back on error\r\n\t\t\t\twindow.history.back();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!routingBack)\r\n\t\t\twindow.history.pushState(null, \"\", path);\r\n\r\n\t\troutingBack = false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Trigger loaded event\r\n\tfunction routerLoaded(currentRouterURL, path, data){\r\n\t\tfor (var i = 0; i < onEvent['loaded'].length; i++) {\r\n\t\t\tonEvent['loaded'][i](currentRouterURL, path, data);\r\n\t\t}\r\n\t}\r\n};","sf.internal.virtual_scroll = new function(){\r\n\tvar self = this;\r\n\tvar styleInitialized = false;\r\n\tvar scrollingByScript = false;\r\n\r\n\t// before and after\r\n\tself.prepareCount = 4; // 4, 8, 12, 16, ...\r\n\r\n\tself.handle = function(list, targetNode, parentNode){\r\n\t\tif(!styleInitialized){\r\n\t\t\tinitStyles();\r\n\t\t\tstyleInitialized = true;\r\n\t\t}\r\n\r\n\t\tvar dynamicList = false;\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvirtual.reset = function(reinitOnly){\r\n\t\t\tvirtual.DOMCursor = 0; // cursor of first element in DOM tree as a cursor\r\n\r\n\t\t\tvirtual.bounding.ceiling = -1;\r\n\t\t\tvirtual.bounding.floor = 0;\r\n\r\n\t\t\tvirtual.vCursor.ceiling = null; // for forward direction\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.firstElementChild; // for backward direction\r\n\r\n\t\t\tvirtual.bounding.initial = virtual.dCursor.ceiling.offsetTop;\r\n\t\t\trefreshScrollBounding(0, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.reinitCursor = function(){\r\n\t\t\tvirtual.vCursor.ceiling = virtual.dom.children[virtual.DOMCursor - 1] || null;\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.children[virtual.DOMCursor] || null;\r\n\t\t}\r\n\r\n\t\tvirtual.reinitScroll = function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.elements = function(){\r\n\t\t\treturn obtainElements(list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.dCursor = { // DOM Cursor\r\n\t\t\tceiling:parentNode.querySelector('.virtual-spacer.ceiling'),\r\n\t\t\tfloor:parentNode.querySelector('.virtual-spacer.floor')\r\n\t\t};\r\n\r\n\t\tvirtual.bounding = {};\r\n\t\tvirtual.vCursor = {};\r\n\r\n\t\tvirtual.reset();\r\n\t\tvirtual.targetNode = parentNode;\r\n\t\tvirtual.scrollHeight = virtual.dCursor.floor.offsetTop - virtual.bounding.initial;\r\n\r\n\t\tvar scroller = parentNode;\r\n\t\tvirtual.destroy = function(){\r\n\t\t\t$.off(scroller, 'scroll');\r\n\t\t\t$.off(parentNode, 'mousedown mouseup');\r\n\t\t\tvirtual.dom.innerHTML = '';\r\n\t\t\toffElementResize(parentNode);\r\n\r\n\t\t\tdelete list.$virtual;\r\n\t\t}\r\n\r\n\t\tvirtual.resetViewport = function(){\r\n\t\t\tvirtual.visibleLength = Math.floor(scroller.clientHeight / virtual.scrollHeight);\r\n\t\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\t\tif(virtual.preparedLength < 18)\r\n\t\t\t\tvirtual.preparedLength = 18;\r\n\t\t}\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tscroller = parentNode;\r\n\r\n\t\t\tvar length = parentNode.getAttribute('scroll-parent-index') || 0;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tscroller = scroller.parentElement;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.resetViewport();\r\n\r\n\t\t\tif(parentNode.classList.contains('sf-list-dynamic')){\r\n\t\t\t\tdynamicList = true;\r\n\t\t\t\tdynamicHeight(list, targetNode, parentNode, scroller);\r\n\t\t\t}\r\n\t\t\telse staticHeight(list, targetNode, parentNode, scroller);\r\n\t\t}, 500);\r\n\t}\r\n\r\n\t// Recommended for a list that have different element height\r\n\tfunction dynamicHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\r\n\t\t\t// Reset virtual spacer height\r\n\t\t\tceilingHeight = 0;\r\n\t\t\tfloorHeight = 0;\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller);\r\n\t\t\tfillViewport();\r\n\t\t}\r\n\r\n\t\t// Insert some element until reach visible height\r\n\t\tfillViewport();\r\n\r\n\t\tvirtual.visibleLength = parentNode.childElementCount - 2;\r\n\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\tvar temp = vCursor.floor;\r\n\t\t\tif(temp === null) break;\r\n\r\n\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t}\r\n\t\tvirtual.DOMCursor = 0;\r\n\r\n\t\tvar ceilingHeight = 0;\r\n\t\tvar floorHeight = 0;\r\n\t\tfunction previousCeiling(){\r\n\t\t\tvar temp = null;\r\n\t\t\tvar resetCeiling = false;\r\n\r\n\t\t\t// Add some element on the ceiling\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\ttemp = virtual.dom.lastElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.ceiling = temp.previousElementSibling;\r\n\t\t\t\tvirtual.DOMCursor--;\r\n\r\n\t\t\t\tceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tif(ceilingHeight > 0)\r\n\t\t\t\t\tceilingHeight -= getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(virtual.DOMCursor < self.prepareCount && !resetCeiling){\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\tresetCeiling = true;\r\n\t\t\t\t\ttemp = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(ceilingHeight < 0 || temp === null)\r\n\t\t\t\tceilingHeight = 0;\r\n\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\t// Remove some element on the floor\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = floor.previousElementSibling;\r\n\t\t\t\tfloorHeight += getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tvCursor.floor = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.floor === null)\r\n\t\t\t\tvCursor.ceiling = virtual.dom.lastElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tfunction fillViewport(){\r\n\t\t\t// Insert some element depend on prepared length\r\n\t\t\tvar length = virtual.preparedLength - (parentNode.childElementCount - 2);\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\ttemp = virtual.dom.firstElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction nextFloor(){\r\n\t\t\tvar temp = null;\r\n\t\t\tfillViewport();\r\n\r\n\t\t\tif(vCursor.floor !== null){\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\t// Add extra element based on prepare count\r\n\t\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\t\ttemp = vCursor.floor;\r\n\t\t\t\t\tif(temp === null) break;\r\n\r\n\t\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\t\tif(floorHeight > 0)\r\n\t\t\t\t\t\tfloorHeight -= getAbsoluteHeight(temp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(floorHeight < 0 || temp === null)\r\n\t\t\t\tfloorHeight = 0;\r\n\r\n\t\t\t// Remove some element on the ceiling\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\t\t\t\tceilingHeight += getAbsoluteHeight(temp);\r\n\t\t\t\tvirtual.DOMCursor++;\r\n\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\telse vCursor.ceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tvCursor.ceiling = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\t\trefreshScrollBounding(0, bounding, list, parentNode);\r\n\r\n\t\tif(virtual.callback_ !== void 0){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript) return;\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tif(scroller.scrollTop < bounding.ceiling){\r\n\t\t\t\t// console.log('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tpreviousCeiling();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\telse if(scroller.scrollTop > bounding.floor){\r\n\t\t\t\t// console.log('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tnextFloor();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\tif(virtual.callback !== void 0 && list.length !== 0){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null &&\r\n\t\t\t\t\tscroller.scrollTop + scroller.clientHeight === scroller.scrollHeight\r\n\t\t\t\t){\r\n\t\t\t\t\tvirtual.callback.hitFloor(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null && scroller.scrollTop === 0){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_ && callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\t\tonElementResize(parentNode, function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t});\r\n\t}\r\n\r\n\t// Recommended for a list that have similar element height\r\n\tfunction staticHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\r\n\t\t// Insert visible element to dom tree\r\n\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\tif(virtual.dom.firstElementChild === null)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', virtual.dom.firstElementChild);\r\n\t\t}\r\n\r\n\t\tvirtual.refreshVirtualSpacer = refreshVirtualSpacer;\r\n\r\n\t\tfunction refreshVirtualSpacer(cursor){\r\n\t\t\tif(cursor >= self.prepareCount){\r\n\t\t\t\tceiling.style.height = (cursor - self.prepareCount) * virtual.scrollHeight + 'px';\r\n\t\t\t\tfloor.style.height = (list.length - virtual.preparedLength - cursor) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tceiling.style.height = cursor * virtual.scrollHeight + 'px'; //'0px';\r\n\t\t\t\tvar count = (list.length - virtual.preparedLength);\r\n\t\t\t\tfloor.style.height = (count || 0) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\r\n\t\trefreshVirtualSpacer(0);\r\n\t\trefreshScrollBounding(self.prepareCount, bounding, list, parentNode);\r\n\t\tbounding.ceiling = -1;\r\n\r\n\t\tvirtual.offsetTo = function(index){\r\n\t\t\treturn index * virtual.scrollHeight + ceiling.offsetTop;\r\n\t\t}\r\n\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tif(virtual.callback_ !== void 0){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tvar fromCeiling = true;\r\n\t\tvar scrollFocused = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript || scroller.scrollTop >= bounding.ceiling && scroller.scrollTop <= bounding.floor){\r\n\t\t\t\t// Fix chrome scroll anchoring bugs when scrolling at corner\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tif(scroller.scrollTop === 0 || scroller.scrollTop === scroller.scrollHeight - scroller.clientHeight){\r\n\t\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar cursor = Math.floor(scroller.scrollTop / virtual.scrollHeight);\r\n\t\t\tif(cursor + virtual.preparedLength > list.length)\r\n\t\t\t\tcursor = list.length - virtual.preparedLength;\r\n\r\n\t\t\tif(fromCeiling){\r\n\t\t\t\tif(cursor < self.prepareCount*2)\r\n\t\t\t\t\tcursor -= self.prepareCount;\r\n\r\n\t\t\t\t// Fix chrome scroll anchoring bugs\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t}\r\n\t\t\t\tfromCeiling = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cursor < self.prepareCount){\r\n\t\t\t\tcursor = 0;\r\n\t\t\t\tfromCeiling = true;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tvar changes = cursor - virtual.DOMCursor;\r\n\t\t\tif(cursor + changes >= list.length)\r\n\t\t\t\tchanges = cursor + changes - list.length;\r\n\r\n\t\t\tif(changes === 0){ // This should be fixed to improve performance and future bugs\r\n\t\t\t\t//console.warn(\"No changes (The scroll bounding is not correct)\");\r\n\t\t\t\tupdating = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.DOMCursor = cursor;\r\n\r\n\t\t\t// console.log(cursor, changes, bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\t\t\tmoveElementCursor(changes, list);\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\t\t\trefreshScrollBounding(cursor, bounding, list, parentNode);\r\n\t\t\t// console.log('a', bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\r\n\t\t\tif(virtual.callback !== void 0 && list.length !== 0){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null){\r\n\t\t\t\t\tvirtual.callback.hitFloor(cursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(cursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_ && callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\r\n\t\t// For preventing scroll jump if scrolling over than viewport\r\n\t\tif(scroller === parentNode && navigator.userAgent.indexOf('Chrom') !== -1){\r\n\t\t\t$.on(parentNode, 'mousedown', function(){\r\n\t\t\t\tscrollFocused = true;\r\n\t\t\t});\r\n\t\t\t$.on(parentNode, 'mouseup', function(){\r\n\t\t\t\tscrollFocused = false;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction refreshScrollBounding(cursor, bounding, list, parentNode){\r\n\t\tvar temp = Math.floor(self.prepareCount / 2); // half of element preparation\r\n\t\tif(cursor < self.prepareCount){\r\n\t\t\tbounding.ceiling = -1;\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount * 2 + 1];\r\n\r\n\t\t\tif(bounding.floor !== void 0)\r\n\t\t\t\tbounding.floor = bounding.floor.offsetTop;\r\n\t\t\telse bounding.floor = parentNode.lastElementChild.offsetTop + 1000;\r\n\r\n\t\t\tbounding.floor -= bounding.initial;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if(parentNode.children[temp + 1] !== void 0)\r\n\t\t\t\tbounding.ceiling = parentNode.children[temp + 1].offsetTop; // -2 element\r\n\r\n\t\tif(list.$virtual.preparedLength !== void 0 && cursor >= list.length - list.$virtual.preparedLength)\r\n\t\t\tbounding.floor = list.$virtual.dCursor.floor.offsetTop + list.$virtual.scrollHeight*2;\r\n\t\telse{\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount + 3].offsetTop; // +2 element\r\n\r\n\t\t\tif(parentNode.hasAttribute('scroll-reduce-floor')){\r\n\t\t\t\tbounding.floor -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t\tbounding.ceiling -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbounding.ceiling -= bounding.initial;\r\n\t\tbounding.floor -= bounding.initial;// scrollHeight - clientHeight\r\n\t}\r\n\r\n\tfunction moveElementCursor(changes, list){\r\n\t\tvar vDOM = list.$virtual.dom;\r\n\t\tvar vCursor = list.$virtual.vCursor;\r\n\t\tvar dCursor = list.$virtual.dCursor;\r\n\r\n\t\tif(changes > 0){ // forward\r\n\t\t\tvar ref = 0;\r\n\r\n\t\t\t// Select from virtual ceiling cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tref = vDOM.firstElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.ceiling.nextElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the ceiling to vDom\r\n\t\t\tfor (var i = changes; i > 0; i--) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.ceiling === null){\r\n\t\t\t\t\tvCursor.ceiling = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('afterBegin', vCursor.ceiling);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t\t\tvCursor.ceiling = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\t\t}\r\n\t\telse if(changes < 0){ // backward\r\n\t\t\tvar ref = 0;\r\n\t\t\tchanges = -changes;\r\n\r\n\t\t\t// Select from virtual floor cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tref = vDOM.lastElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.floor.previousElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the floor to vDom\r\n\t\t\tfor (var i = 0; i < changes; i++) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvCursor.floor = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('beforeEnd', vCursor.floor);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t\t\tvCursor.floor = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scrollTo(index, list, prepareCount, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar reduce = 0;\r\n\r\n\t\tif(index >= list.length - virtual.preparedLength){\r\n\t\t\treduce -= prepareCount;\r\n\t\t\tindex = list.length - virtual.preparedLength;\r\n\t\t}\r\n\r\n\t\tif(index - virtual.DOMCursor === 0 || index >= list.length) return;\r\n\r\n\t\tscrollingByScript = true;\r\n\r\n\t\t// Already on DOM tree\r\n\t\tif((virtual.DOMCursor === 0 && index < prepareCount + prepareCount/2) ||\r\n\t\t\t(virtual.DOMCursor + prepareCount/2 > index\r\n\t\t\t&& virtual.DOMCursor + prepareCount < index))\r\n\t\t\tscroller.scrollTop = parentNode.children[index - virtual.DOMCursor + 1].offsetTop;\r\n\r\n\t\t// Move cursor\r\n\t\telse {\r\n\t\t\tvar temp = null;\r\n\t\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\t\tvar floor = virtual.dCursor.floor;\r\n\t\t\tvar vCursor = virtual.vCursor;\r\n\r\n\t\t\t// DOM tree to virtual DOM\r\n\t\t\tvar length = parentNode.childElementCount - 2;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\r\n\t\t\t\t\tif(i === length-1)\r\n\t\t\t\t\t\tvCursor.floor = temp;\r\n\t\t\t\t}\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(index >= prepareCount){\r\n\t\t\t\tif(index < list.length - virtual.preparedLength)\r\n\t\t\t\t\tindex -= prepareCount;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treduce = prepareCount - index;\r\n\t\t\t\tvirtual.DOMCursor = index = 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\r\n\t\t\t// Virtual DOM to DOM tree\r\n\t\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\t\ttemp = virtual.dom.children[index];\r\n\t\t\t\tif(temp === void 0) break;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t\tvirtual.DOMCursor = index;\r\n\r\n\t\t\tvCursor.floor = virtual.dom.children[index] || null;\r\n\t\t\tvCursor.ceiling = vCursor.floor ? vCursor.floor.previousElementSibling : null;\r\n\r\n\t\t\tif(list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\tlist.$virtual.refreshVirtualSpacer(index);\r\n\r\n\t\t\trefreshScrollBounding(index, virtual.bounding, list, parentNode);\r\n\r\n\t\t\ttemp = parentNode.children[prepareCount - reduce + 1];\r\n\t\r\n\t\t\tif(temp !== void 0)\r\n\t\t\t\tscroller.scrollTop = temp.offsetTop - scroller.offsetTop;\r\n\t\t}\r\n\r\n\t\tscrollingByScript = false;\r\n\t}\r\n\r\n\tfunction removeUserScrollFocus(parentNode){\r\n\t\tparentNode.style.overflow = 'hidden';\r\n\t\tsetTimeout(function(){\r\n\t\t\tparentNode.style.overflow = '';\r\n\t\t}, 50);\r\n\t}\r\n\r\n\tfunction getAbsoluteHeight(el){\r\n\t  var styles = window.getComputedStyle(el);\r\n\t  var margin = parseInt(styles['marginTop']) + parseInt(styles['marginBottom']);\r\n\t  return el.offsetHeight + margin || 0;\r\n\t}\r\n\r\n\tfunction obtainElements(list, parentNode){\r\n\t\tvar exist = [];\r\n\t\tvar temp = void 0;\r\n\r\n\t\tvar length = list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[i];\r\n\t\t\tif(temp === void 0) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = parentNode.childElementCount - 2;\r\n\t\tfor (var i = 1; i <= length; i++) {\r\n\t\t\ttemp = parentNode.children[i];\r\n\t\t\tif(temp === void 0) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\t\t\r\n\t\t// Get elements length\r\n\t\tvar elementLength = list.$virtual.dom.childElementCount + length;\r\n\r\n\t\tlength = elementLength - length - list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[list.$virtual.DOMCursor + i];\r\n\t\t\tif(temp === void 0) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\treturn exist;\r\n\t}\r\n\r\n\tfunction refresh(force, list, prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer){\r\n\t\tvar cursor = list.$virtual.DOMCursor;\r\n\t\tvar additionalScroll = 0;\r\n\r\n\t\t// Find nearest cursor for current view position\r\n\t\tif(force){\r\n\t\t\tvar i = -1;\r\n\t\t\tvar length = list.$virtual.preparedLength;\r\n\r\n\t\t\tdo{\r\n\t\t\t\ti++;\r\n\t\t\t} while(i < length && parentNode.children[i].offsetTop < scroller.scrollTop);\r\n\r\n\t\t\tcursor = cursor + i;\r\n\t\t\tif(cursor > 0) cursor -= 1;\r\n\r\n\t\t\tadditionalScroll = scroller.scrollTop - parentNode.children[i].offsetTop;\r\n\t\t}\r\n\r\n\t\t// Force move cursor if element in the DOM tree was overloaded\r\n\t\tif(force || parentNode.childElementCount - 2 > list.$virtual.preparedLength){\r\n\t\t\tlist.$virtual.DOMCursor = list.length;\r\n\t\t\tvar moveTo = cursor;\r\n\t\t\tif(!force)\r\n\t\t\t\tmoveTo = cursor <= prepareCount ? cursor : (cursor + prepareCount);\r\n\r\n\t\t\tscrollTo(moveTo,\r\n\t\t\t\tlist,\r\n\t\t\t\tprepareCount,\r\n\t\t\t\tparentNode,\r\n\t\t\t\tscroller\r\n\t\t\t);\r\n\r\n\t\t\tscroller.scrollTop += additionalScroll;\r\n\t\t}\r\n\r\n\t\tif(refreshVirtualSpacer)\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\r\n\t\tif(checkCursorPosition)\r\n\t\t\tcheckCursorPosition();\r\n\r\n\t\trefreshScrollBounding(cursor, list.$virtual.bounding, list, parentNode);\r\n\t}\r\n\r\n\tvar _onElementResize = [];\r\n\tvar _onElementResize_timer = -1;\r\n\tfunction onElementResize(parentNode, callback){\r\n\t\tif(_onElementResize_timer === -1){\r\n\t\t\t_onElementResize_timer = setInterval(function(){\r\n\t\t\t\tvar temp = null;\r\n\t\t\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\t\t\ttemp = _onElementResize[i];\r\n\r\n\t\t\t\t\t// Check resize\r\n\t\t\t\t\tif(temp.element.scrollHeight === temp.height\r\n\t\t\t\t\t\t|| temp.element.scrollWidth === temp.width)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t// Check if it's removed from DOM\r\n\t\t\t\t\tif(temp.element.parentElement === null){\r\n\t\t\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.callback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(_onElementResize.length === 0){\r\n\t\t\t\t\tclearInterval(_onElementResize_timer);\r\n\t\t\t\t\t_onElementResize_timer = -1;\r\n\t\t\t\t}\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\r\n\t\t_onElementResize.push({\r\n\t\t\telement:parentNode,\r\n\t\t\tcallback:callback,\r\n\t\t\theight:parentNode.scrollHeight,\r\n\t\t\twidth:parentNode.scrollWidth\r\n\t\t});\r\n\t}\r\n\r\n\tfunction offElementResize(parentNode){\r\n\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\tif(_onElementResize[i].element === parentNode)\r\n\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Interval will be cleared when the array is empty\r\n\t}\r\n\r\n\tfunction initStyles(){\r\n\t\tvar style = document.getElementById('sf-styles');\r\n\r\n\t\tif(!style){\r\n\t\t\tstyle = document.createElement('style');\r\n\t\t\tstyle.id = 'sf-styles';\r\n        \tdocument.head.appendChild(style);\r\n\t\t}\r\n\r\n\t\tstyle.sheet.insertRule(\r\n\t\t'.sf-virtual-list .virtual-spacer{'+\r\n            'visibility: hidden;'+\r\n            'position: relative;'+\r\n            'height: 1px;'+\r\n            'transform-origin: 0 0;'+\r\n            'width: 1px;'+\r\n            'margin: 0;'+\r\n            'padding: 0;'+\r\n            'background: none;'+\r\n            'border: none;'+\r\n            'box-shadow: none;'+\r\n         '}', style.sheet.cssRules.length);\r\n\t}\r\n};"]}