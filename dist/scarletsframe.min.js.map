{"version":3,"sources":["sf-a_init.js","sf-dom.js","sf-loader.js","sf-model.js","sf-a_polyfill.js","sf-controller.js","sf-e-ajax.js","sf-z_end.js","sf-router.js","sf-virtual_scroll.js"],"names":["global","factory","exports","module","sf","window","this","undefined","document","arguments","constructor","Function","loader","onFinish","apply","isEmptyObject","obj","key","compareObject","obj1","obj2","i","hiddenProperty","property","value","Object","defineProperty","enumerable","configurable","deepProperty","path","length","internal","regex","getQuotes","avoidQuotes","strictVar","dom","selector","context","parseElement","String","querySelectorAll","$","self","findOne","querySelector","parent","element","closest","matches","parentElement","prevAll","isNext","result","findNodes","nextSibling","previousSibling","push","nextAll","on","event","callback","once","tempCallback","ev","target","addEventListener","capture","sf$eventListener","off","events","split","ref","removeEventListener","splice","animateCSS","animationName","duration","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","style","webkitAnimationDuration","animationDuration","list","classList","add","remove","setTimeout","emptyDOM","div","createElement","ul","tbody","tr","table","select","html","returnNode","tempDOM","indexOf","textContent","insertAdjacentHTML","item","elements","documentElement","domReady","body","haveSymbol","getSelector","childIndexes","untilElement","names","parentNode","id","test","unshift","tagName","e","join","array","childNodes","loadedContent","totalContent","DOMWasLoaded","DOMReady","turnedOff","whenDOMReady","whenDOMLoaded","whenProgress","func","onProgress","f","css","s","rel","href","head","appendChild","js","type","async","src","console","warn","isQueued","domLoadEvent","model","queuePreprocess","domStateEvent","readyState","error","resourceWaitTimer","setInterval","waitResources","clearInterval","listener","controller","init","router","prototype","scope","root","pending","run","bindingEnabled","processingElement","trimIndentation","text","indent","trim","replace","RegExp","bracketMatch","chackValidFunctionCall","allowedFunction","localEval","script","_model_","_modelScope","_content_","tempScript","preventExecution","check_","exec","log","outerHTML","_result_","_evaled_","eval","escapeEscapedQuote","unescapeEscapedQuote","elseIfHandle","else_","scopes","elseIf","elseValue","index","currentElement","previousElementSibling","getAttribute","modelName","$virtual","DOMCursor","for","name","modelKeys","modelRef","keys","templateParser_regex","REF_DIRECT","REF_IF","REF_EXEC","templateExec","parse","atIndex","parsed","data","if","templateParser","template","cloneNode","addresses","changesReference","pendingInsert","current","address","nodeType","refA","direct","full","match","cRef","dynamicFlag","parse_index","startFlag","attributes","a","refB","attribute","setAttribute","sf$elementReferences","tDOM","insertBefore","syntheticCache","sf$cache","cache","modelRef_array","syntheticTemplate","changes","modelReference","newData","Array","checkRelatedChanges","parseIndex","found","assign","haveChanges","temp","currentDOM","notExist","isEqualNode","replaceChild","dataParser","mask","runEval","preParsedReference","variableList","scopeMask","itemMask","preParsed","lastParsedIndex","prepared","actual","matched","slice","exist","charCodeAt","uniqueDataParser","take","passVar","currentIndex","strDeclare","firstTime","JSON","stringify","check","VarPass_","VarPass","s1","obtained","forEach","val","findElse","pop","shift","condition","bindArray","propertyName","targetNode","editProperty","refreshTimer","parentChilds","children","isKeyed","contains","eventVar","processElement","options","other","count","vEndRange","preparedLength","spacer","firstElementChild","lastElementChild","height","reset","clearTimeout","reinitScroll","overflow","vDOM","theParent","update","index_a","other_sibling","other_parent","oldChild","referenceNode","create","vCursor","floor","insertAdjacentElement","currentRemoved","startRemove","refreshVirtualSpacer","propertyProxy","subject","lastLength","from","to","reinitCursor","o","resetViewport","matchLeft","refresh","real","limit","callback_","var","virtual_scroll","handle","elem","getElement","hardRefresh","softRefresh","virtualChilds","floorBound","dCursor","ret","childElement","childElementCount","loopParser","method","items","extractPreprocess","sf$bindedKey","initBindingInformation","get","set","n","inputBoundFunction","bindInput","whichVar","removeAttribute","alreadyInitialized","DOMNodeRemoved","removeModelBinding","hasAttribute","queued","parsePreprocess","ceiling","styles","getComputedStyle","absHeight","parseFloat","Math","ceil","offsetHeight","after","nextElementSibling","before","everyRemovedNodes","nodes","nodeName","MutationObserver","observe","everyRecords","record","removedNodes","records","childList","subtree","bindedKey","Number","Boolean","destroy","getOwnPropertyDescriptor","dcBracket","bindObject","which","Node","attrs","attr","htmlClone","innerHTML","onChanges","objValue","bindElement","brackets","s2","copy","reverse","addressed","addressAttributes","currentNode","indexes","addressStart","commentFlag","flag","createComment","textNode","createTextNode","search","extract","checkList","full_","match_","findModelProperty","asArray","excludes","writable","extracting","nodeValue","root_","varArgs","TypeError","nextSource","nextKey","hasOwnProperty","call","Element","CharacterData","DocumentType","removeChild","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","ownerDocument","NodeList","thisArg","location","origin","protocol","hostname","port","active","modelScope","bindedList","parentEl","bindedListIndex","listenSFClick","method_","preventDefault","globals","jsonpRequests","Request","requestOptions","globalsNoCallbacks","callbackName","defaults","url","toString","user","password","headers","xhrFields","statusCode","processData","dataType","contentType","timeout","fireCallback","globalCallbackValue","optionCallbackValue","_i","paramsPrefix","toUpperCase","stringData","serializeQuery","abortTimeout_1","callbackName_1","Date","now","callbackSplit","requestUrl","addVars","filter","el","script_1","onerror","xhr","XMLHttpRequest","requestParameters","open","xhrTimeout","postData","ArrayBuffer","Blob","Document","FormData","boundary","setRequestHeader","headerName","crossDomain","$2","host","onload","status","responseData","parseError","responseText","err","responseType","response","onabort","abort","send","RequestShortcut","args","_a","success","params","prefix","encodeURIComponent","concat","post","json","getJSON","postJSON","setup","ajax","loading","enabled","pauseRenderOnTransition","currentPage","initialized","currentRouterURL","popstateListener","routingError","routingBack","goto","pathname","beforeEvent","enable","load","onEvent","loaded","special","lazyViewPoint","history","pushState","RouterLoading","_scarlets","DOMReference","foundAction","last","afterEvent","title","oldURL","newURL","routerLoaded","aborted","back","styleInitialized","scrollingByScript","refreshScrollBounding","cursor","bounding","prepareCount","offsetTop","initial","scrollHeight","scrollTo","scroller","virtual","reduce","scrollTop","insertCount","removeUserScrollFocus","getAbsoluteHeight","margin","parseInt","force","checkCursorPosition","additionalScroll","moveTo","getElementById","sheet","insertRule","cssRules","initStyles","reinitOnly","elementLength","obtainElements","_onElementResize","offElementResize","visibleLength","clientHeight","ceilingHeight","floorHeight","fillViewport","updating","resetCeiling","previousCeiling","nextFloor","hitFloor","hitCeiling","_onElementResize_timer","scrollWidth","width","onElementResize","dynamicHeight","offsetTo","fromCeiling","scrollFocused","moveElementCursor","navigator","userAgent","staticHeight"],"mappings":";;;;;;;;CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,oBAAAC,OAAAA,OAAAD,QAAAD,EAAAD,GACAA,EAAAI,GAAAH,EAAAD,GAFA,CAGA,oBAAAK,OAAAA,OAAAC,KAAA,SAAAD,QAAA,kBACAE,WAAAC,WACAA,SAAAH,OAAAG,UAGA,IAAAJ,GAAA,WACA,GAAAK,UAAA,GAAAC,cAAAC,SACA,OAAAP,GAAAQ,OAAAC,SAAAC,MAAA,KAAAL,YAYA,SAAAM,cAAAC,GACA,IAAA,IAAAC,KAAAD,EACA,OAAA,EAEA,OAAA,EAGA,SAAAE,cAAAC,EAAAC,GACA,IAAAD,IAAAC,EACA,OAAA,EAEA,IAAA,IAAAC,KAAAF,EACA,GAAA,iBAAAA,EAAAE,IAAAF,EAAAE,KAAAD,EAAAC,GACA,OAAA,EAEA,OAAA,EAGA,SAAAC,eAAAN,EAAAO,EAAAC,GACAC,OAAAC,eAAAV,EAAAO,EAAA,CACAI,YAAA,EACAC,cAAA,EACAJ,MAAAA,IAIA,SAAAK,aAAAb,EAAAc,GACA,IAAA,IAAAT,EAAA,EAAAA,EAAAS,EAAAC,OAAAV,IAEA,QAAAd,KADAS,EAAAA,EAAAc,EAAAT,KACA,OAAAL,EAEA,OAAAA,EAvCAZ,GAAA4B,SAAA,GACA5B,GAAA6B,MAAA,CAEAC,UAAA,yBACAC,YAAA,kDACAC,UAAA,iCCnBAhC,GAAAiC,IAAA,SAAAC,EAAAC,GACA,MAAA,MAAAD,EAAA,GAAAlC,GAAAiC,IAAAG,aAAAF,GACAA,EAAA5B,cAAA+B,OAAAH,EAEAC,EAAAA,EAAAG,iBAAAJ,GACA9B,SAAAkC,iBAAAJ,IAGA,IAAAK,EAAAvC,GAAAiC,KAEA,WACA,IAAAO,EAAAxC,GAAAiC,IAEAO,EAAAC,QAAA,SAAAP,EAAAC,GACA,YAAAhC,IAAAgC,EAAAA,EAAAO,cAAAR,GACA9B,SAAAsC,cAAAR,IAGAM,EAAAG,OAAA,SAAAC,EAAAV,GACA,GAAAU,EAAAC,QAAA,OAAAD,EAAAC,QAAAX,GAEA,EAAA,CACA,IAAA,IAAAU,EAAAE,QAAAZ,GACA,OAAAU,EAEAA,EAAAA,EAAAG,oBACA,OAAAH,GAEA,OAAA,MAGAJ,EAAAQ,QAAA,SAAAJ,EAAAV,EAAAe,GACA,IAAAC,EAAA,GACAC,EAAA,OAAAjB,GAAAA,EAAA5B,cAAA+B,OAIA,IADAO,EAAAK,EAAAL,EAAAQ,YAAAR,EAAAS,gBACA,OAAAT,GAAA,CACA,IAAA,IAAAO,IAAA,IAAAP,EAAAE,QAAAZ,GACAgB,EAAAI,KAAAV,OACA,CACA,GAAAA,IAAAV,EACA,MACAgB,EAAAI,KAAAV,GAIAA,EADAK,EACAL,EAAAQ,YAEAR,EAAAS,gBAGA,OAAAH,GAIAV,EAAAe,QAAA,SAAAX,EAAAV,GACA,OAAAM,EAAAQ,QAAAJ,EAAAV,GAAA,IAYAM,EAAAgB,GAAA,SAAAZ,EAAAa,EAAAvB,EAAAwB,EAAAC,GAaA,GAZA,iBAAAf,IACAA,EAAAxC,SACAsD,EAAAxB,EACAA,EAAAuB,EACAA,EAAAb,GAGA,mBAAAV,IACAwB,EAAAxB,EACAA,EAAA,MAGAA,EAAA,CACA,IAAA0B,EAAAF,EACAA,EAAA,SAAAG,GACA,OAAArB,EAAAG,OAAAkB,EAAAC,OAAA5B,IACA0B,EAAAC,IAIAH,EAAAxB,SAAAA,EACAwB,EAAAC,KAAAA,EACAf,EAAAmB,iBAAAN,EAAAC,EAAA,CAAAM,SAAA,EAAAL,MAAA,IAAAA,SAGAxD,IAAAyC,EAAAqB,mBACArB,EAAAqB,iBAAA,SAEA9D,IAAAyC,EAAAqB,iBAAAR,KACAb,EAAAqB,iBAAAR,GAAA,IAEAb,EAAAqB,iBAAAR,GAAAH,KAAAI,IAIAlB,EAAAmB,KAAA,SAAAf,EAAAa,EAAAvB,EAAAwB,GACAlB,EAAAgB,GAAAZ,EAAAa,EAAAvB,EAAAwB,GAAA,IAUAlB,EAAA0B,IAAA,SAAAtB,EAAAa,EAAAvB,GAEA,QAAA/B,IAAAsD,EAAA,CAYA,GAAA,KADAU,EAAAV,EAAAW,MAAA,MACAzC,QAQA,QAAAxB,IAAAyC,EAAAqB,iBAAA,CAGA,IAAAI,EAAAzB,EAAAqB,iBACA,QAAA9D,IAAAkE,QAAAlE,IAAAkE,EAAAZ,GACA,IAAAxC,EAAAoD,EAAAZ,GAAA9B,OAAA,EAAAV,GAAA,EAAAA,IACAiB,GAAAmC,EAAAZ,GAAAxC,GAAAiB,WAAAA,GAGAU,EAAA0B,oBAAAb,EAAAY,EAAAZ,GAAAc,OAAAtD,EAAA,IAAA,SAhBA,IAAA,IAAAA,EAAA,EAAAA,EAAAkD,EAAAxC,OAAAV,IACAuB,EAAA0B,IAAAtB,EAAAuB,EAAAlD,QAdA,CACA,QAAAd,IAAAyC,EAAAqB,iBACA,OAGA,IADA,IAAAE,EAAAvB,EAAAqB,iBAAAR,GACAxC,EAAA,EAAAA,EAAAkD,EAAAxC,OAAAV,IACAuB,EAAA0B,IAAAtB,EAAAuB,EAAAlD,MA4BAuB,EAAAgC,WAAA,SAAA5B,EAAA6B,EAAAf,EAAAgB,GACA,IAAAC,EAAA,CACAC,UAAA,eACAC,WAAA,gBACAC,aAAA,kBACAC,gBAAA,sBAGA,IAAA,IAAAC,KAAAL,EACA,QAAAxE,IAAAyC,EAAAqC,MAAAD,GAAA,CACAL,EAAAA,EAAAK,GACA,MAIAN,IACA9B,EAAAqC,MAAAC,wBAAAR,EAAA,IACA9B,EAAAqC,MAAAE,kBAAAT,EAAA,KAGA,IAAAU,GAAA,YAAAX,GAAAL,MAAA,KACAxB,EAAAyC,UAAAC,IAAA5E,MAAAkC,EAAAyC,UAAAD,GACA7C,EAAAoB,KAAAf,EAAA+B,EAAA,WACA/B,EAAAyC,UAAAE,OAAA7E,MAAAkC,EAAAyC,UAAAD,GAEAV,GAAAc,WAAA,WACA5C,EAAAqC,MAAAC,wBAAAR,EAAA,IACA9B,EAAAqC,MAAAE,kBAAAT,EAAA,KACA,GAEA,mBAAAhB,GAAAA,OAIA,IAAA+B,EAAA,CACAC,IAAAtF,SAAAuF,cAAA,OACAC,GAAAxF,SAAAuF,cAAA,MACAE,MAAAzF,SAAAuF,cAAA,SACAG,GAAA1F,SAAAuF,cAAA,MACAI,MAAA3F,SAAAuF,cAAA,SACAK,OAAA5F,SAAAuF,cAAA,WAEAnD,EAAAJ,aAAA,SAAA6D,EAAAC,GACA,IAAAhD,EAAA,GACAiD,EAAAV,EAAAC,IAEA,IAAAO,EAAAG,QAAA,SAAAD,EAAAV,EAAAG,IACA,IAAAK,EAAAG,QAAA,SAAAD,EAAAV,EAAAI,OACA,IAAAI,EAAAG,QAAA,QAAA,IAAAH,EAAAG,QAAA,SAAAD,EAAAV,EAAAK,IACA,IAAAG,EAAAG,QAAA,YAAAD,EAAAV,EAAAM,OACA,IAAAE,EAAAG,QAAA,aAAAD,EAAAV,EAAAO,QAEAG,EAAAE,YAAA,GACAF,EAAAG,mBAAA,aAAAL,GAGA,IADA,IAAA5B,EAAA8B,EAAAD,EAAA,aAAA,YACAjF,EAAA,EAAAA,EAAAoD,EAAA1C,OAAAV,IACAiC,EAAAI,KAAAe,EAAAkC,KAAAtF,IAGA,OAAAiC,GAGAV,EAAA+C,OAAA,SAAAiB,GACA,QAAArG,IAAAqG,EAAAjB,OACA,OAAAiB,EAAAjB,SAEA,IAAA,IAAAtE,EAAA,EAAAA,EAAAuF,EAAA7E,OAAAV,IACAuF,EAAAvF,GAAAsE,UAIA,IAAAkB,EAAA,KACAjB,WAAA,WACAxF,GAAAQ,OAAAkG,SAAA,WACAD,EAAArG,SAAAuG,KAAA5D,iBAEA,GAEA,IAAA6D,EAAA,uCACApE,EAAAqE,YAAA,SAAAjE,EAAAkE,EAAAC,GACA,IAAAC,EAAA,QACA7G,IAAA4G,IAAAA,EAAAN,GAIA,IAFA,IAAApD,EAAAyD,EAAA,kBAAA,yBAEA,OAAAlE,EAAAqE,YAAA,CACA,GAAArE,EAAAsE,KAAAN,EAAAO,KAAAvE,EAAAsE,IAAA,CACAF,EAAAI,QAAA,IAAAxE,EAAAsE,IACA,MAGA,GAAAtE,IAAAmE,OACA5G,IAAA2G,EACAE,EAAAI,QAAAxE,EAAAyE,SACAL,EAAAI,QAAA,OAEA,CAIA,IAHA,IAAAE,EAAA1E,EACA3B,EAAA6F,EAAA,EAAA,EAEAQ,EAAAjE,IACAiE,EAAAA,EAAAjE,GACApC,IAGA6F,EACAE,EAAAI,QAAAnG,GAEA+F,EAAAI,QAAA,cAAAnG,EAAA,KAIA,GAAA,QADA2B,EAAAA,EAAAqE,YAEA,MAIA,OAAAH,EACAE,EACAA,EAAAO,KAAA,QAGA/E,EAAAsE,aAAA,SAAAU,EAAArF,GACA,IAAAS,EAAAT,GAAAsE,EACAxF,EAAA,EAEA,GAAAuG,EAAA,GAAAlH,cAAA+B,OACAO,EAAAA,EAAAF,cAAA8E,EAAA,SAEA,GAAA,IAAAA,EAAA7F,OACA,OAAAiB,EAEA,IAAA3B,EAAAA,EAAAA,EAAAuG,EAAA7F,OAAAV,IAGA,GAAA,QAFA2B,EAAAA,EAAA6E,WAAAlB,KAAAiB,EAAAvG,KAGA,OAAA,KAGA,OAAA2B,GA1RA,GCVA5C,GAAAQ,OAAA,IAAA,WACA,IAAAgC,EAAAtC,KACAsC,EAAAkF,cAAA,EACAlF,EAAAmF,aAAA,EACAnF,EAAAoF,cAAA,EACApF,EAAAqF,UAAA,EACArF,EAAAsF,WAAA,EAEA,IAAAC,EAAA,GACAC,EAAA,GACAC,EAAA,GAEAzF,EAAA0B,IAAA,WACA1B,EAAAsF,WAAA,GAIAtF,EAAA/B,SAAA,SAAAyH,GACA,GAAA1F,EAAAoF,aAAA,OAAAM,KACA,IAAAF,EAAA5B,QAAA8B,IACAF,EAAA1E,KAAA4E,IAEA1F,EAAAkE,SAAA,SAAAwB,GACA,GAAA1F,EAAAqF,SAAA,OAAAK,KACA,IAAAH,EAAA3B,QAAA8B,IACAH,EAAAzE,KAAA4E,IAEA1F,EAAA2F,WAAA,SAAAD,GACA,GAAA1F,EAAAoF,aAAA,OAAAM,EAAA1F,EAAAkF,cAAAlF,EAAAmF,eACA,IAAAM,EAAA7B,QAAA8B,IACAD,EAAA3E,KAAA4E,IAGA1F,EAAA4F,EAAA,SAAAxF,GACAJ,EAAAkF,gBACA,IAAA,IAAAzG,EAAA,EAAAA,EAAAgH,EAAAtG,OAAAV,IACAgH,EAAAhH,GAAAuB,EAAAkF,cAAAlF,EAAAmF,eAIAnF,EAAA6F,IAAA,SAAAjD,GACA,GAAA5C,EAAAoF,aAAA,CAEA,IAAA,IAAA3G,EAAAmE,EAAAzD,OAAA,EAAAV,GAAA,EAAAA,IACA,IAAAsB,EAAA,eAAA6C,EAAAnE,GAAA,MAAAU,QACAyD,EAAAb,OAAAtD,EAAA,GAEA,GAAA,IAAAmE,EAAAzD,OAAA,OAEAa,EAAAsF,WAAA,EAEAtF,EAAAmF,aAAAnF,EAAAmF,aAAAvC,EAAAzD,OACA,IAAAV,EAAA,EAAAA,EAAAmE,EAAAzD,OAAAV,IAAA,CACA,IAAAqH,EAAAlI,SAAAuF,cAAA,QACA2C,EAAAC,IAAA,aACAD,EAAAE,KAAApD,EAAAnE,GACAqH,EAAAvE,iBAAA,OAAA/D,GAAAQ,OAAA4H,EAAA,CAAAzE,MAAA,IACA2E,EAAAvE,iBAAA,QAAA/D,GAAAQ,OAAA4H,EAAA,CAAAzE,MAAA,IACAvD,SAAAqI,KAAAC,YAAAJ,KAIA9F,EAAAmG,GAAA,SAAAvD,GACA,GAAA5C,EAAAoF,aAAA,CAEA,IAAA,IAAA3G,EAAAmE,EAAAzD,OAAA,EAAAV,GAAA,EAAAA,IACA,IAAAsB,EAAA,gBAAA6C,EAAAnE,GAAA,MAAAU,QACAyD,EAAAb,OAAAtD,EAAA,GAEA,GAAA,IAAAmE,EAAAzD,OAAA,OAEAa,EAAAsF,WAAA,EAEAtF,EAAAmF,aAAAnF,EAAAmF,aAAAvC,EAAAzD,OACA,IAAAV,EAAA,EAAAA,EAAAmE,EAAAzD,OAAAV,IAAA,CACA,IAAAqH,EAAAlI,SAAAuF,cAAA,UACA2C,EAAAM,KAAA,kBACAN,EAAAO,OAAA,EACAP,EAAAQ,IAAA1D,EAAAnE,GACAqH,EAAAvE,iBAAA,OAAA/D,GAAAQ,OAAA4H,EAAA,CAAAzE,MAAA,IACA2E,EAAAvE,iBAAA,QAAA/D,GAAAQ,OAAA4H,EAAA,CAAAzE,MAAA,IACAvD,SAAAqI,KAAAC,YAAAJ,KAIA9C,WAAA,WACA,IAAAhD,EAAAmF,cAAAnF,EAAAsF,YACAtF,EAAAkF,cAAAlF,EAAAmF,aAAA,EACAoB,QAAAC,KAAA,wFAEA,KAGA,IAAAC,GAAA,EAEA7I,SAAA2D,iBAAA,OAAA,SAAAmF,EAAAzF,GAEA,IAAA,IAAAwF,GAAA7I,SAAAuG,KAAA,CACAvG,SAAAkE,oBAAA,OAAA4E,GAAA,GAEAD,EAAAjJ,GAAAmJ,MAAAC,gBAAAhJ,SAAAuG,MAEA,IAAA,IAAA1F,EAAA,EAAAA,EAAAgI,EAAAtH,OAAAV,IACAgI,EAAAhI,GAAAoE,UAAAC,IAAA,iBAGA,IAAA2D,EAAAtH,SAAAsH,GAAA,MAiBA,GAEA7I,SAAA2D,iBAAA,mBAAA,SAAAsF,IACA,GAAA,gBAAAjJ,SAAAkJ,YAAA,aAAAlJ,SAAAkJ,WAAA,CACA,IAAA,IAAA9G,EAAAqF,SAAA,CACArF,EAAAqF,UAAA,EACA,IAAA,IAAA5G,EAAA,EAAAA,EAAA8G,EAAApG,OAAAV,IACA,IACA8G,EAAA9G,KACA,MAAAqG,GACAyB,QAAAQ,MAAAjC,KAKA,IAAA2B,IACAA,EAAAjJ,GAAAmJ,MAAAC,gBAAAhJ,SAAAuG,OAEA6C,EAAAC,YAAAC,EAAA,KACAtJ,SAAAkE,oBAAA,mBAAA+E,GAAA,MAEA,GAEA,IAAAG,GAAA,EACA,SAAAE,IACA,MAAA,IAAAlH,EAAAsF,WAAAtF,EAAAkF,cAAAlF,EAAAmF,cAAA,CAGAgC,cAAAH,GAGA,IADA,IAAAI,EAAA5J,GAAAiC,IAAA,qBACAhB,EAAA,EAAAA,EAAA2I,EAAAjI,OAAAV,IACA2I,EAAA3I,GAAAqD,oBAAA,QAAAtE,GAAAQ,OAAA4H,GACAwB,EAAA3I,GAAAqD,oBAAA,OAAAtE,GAAAQ,OAAA4H,GAGA5F,EAAAoF,cAAA,EACA,IAAA3G,EAAA,EAAAA,EAAA+G,EAAArG,OAAAV,IACA,IACA+G,EAAA/G,KACA,MAAAqG,GACAyB,QAAAQ,MAAAjC,GAGAW,EAAA1D,OAAA,GACAwD,EAAAxD,OAAA,GACAyD,EAAAzD,OAAA,GACAwD,EAAAC,EAAA,KAGAhI,GAAA6J,WAAAC,OACA9J,GAAAmJ,MAAAW,KAAA1J,SAAAuG,KAAAsC,GACAjJ,GAAA+J,OAAAD,OAEAb,EAAA,QAGAjJ,GAAAgK,UAAA1J,YAAAN,GAAAQ,OAAAC,SCnLAT,GAAAmJ,MAAA,SAAAc,GAOA,OANAjK,GAAAmJ,MAAAe,KAAAD,KACAjK,GAAAmJ,MAAAe,KAAAD,GAAA,IAEAjK,GAAA6J,WAAAM,QAAAF,IACAjK,GAAA6J,WAAAO,IAAAH,GAEAjK,GAAAmJ,MAAAe,KAAAD,IAGA,WACA,IAAAzH,KAAAxC,GAAAmJ,MACAkB,gBAAA,EACA7H,KAAA0H,KAAA,GAEA,IAAAI,kBAAA,KAGA,SAAAC,gBAAAC,GACA,IAAAC,EAAAD,EAAApG,MAAA,KAAA,GAKA,YAAAjE,KAHAsK,EADA,MAAAA,EAAA,GAAA,IAAA,OAAAA,EAAA,GAAA,GACAA,EAAA,GACAA,EAAA,IAEAD,EAEA,KADAC,EAAAA,EAAA9I,OAAA8I,EAAAC,OAAA/I,QACA6I,EACAA,EAAAG,QAAAC,OAAA,YAAAH,EAAA,KAAA,MAAA,IAIA,IAAAI,aAAAD,OAAA,wBAAA5K,GAAA6B,MAAAE,YAAA,KACA+I,uBAAA,qBACAC,gBAAA,CAAA,IAAA,MAAA,KAAA,QAAA,iBAAA,eACAC,UAAA,SAAAC,OAAAC,QAAAC,YAAAC,WAIA,IAAAC,WAAAJ,OAGAI,WAAAA,WAAAV,QAAA3K,GAAA6B,MAAAC,UAAA,YAKA,IAFA,IAAAwJ,kBAAA,EACAC,OAAA,KACA,QAAAA,OAAAV,aAAAW,KAAAH,cAGA,GAFAE,OAAA,GAAAA,OAAA,GAAAb,QAEA,IAAAK,gBAAA3E,QAAAmF,OAAA,KACA,gBAAAA,OAAA,GAAAnH,MAAA,KAAA,IACA0G,uBAAA3D,KAAAoE,OAAA,GAAAA,OAAA,GAAA5J,OAAA,IACA,CACA2J,iBAAAC,OAAA,GACA,MAIA,GAAAD,iBAIA,OAHAvC,QAAAQ,MAAA,8CAAA+B,iBAAA,KACAvC,QAAA0C,IAAAlB,gBAAAD,kBAAAoB,WAAAhB,QAEA,YAIA,IAAAiB,SAAA,GACA,IACA,IAAA,IAAA,WAAAxE,KAAA8D,QAAA,CACA,IAAAW,SAAAC,KAAA,eAAAZ,OAAA7G,MAAA,YAAAmD,KAAA,WAAA,QACA,OAAAoE,SAAAC,SAEA,IAAAA,SAAAC,KAAAZ,QACA,MAAA3D,GAIA,OAHAyB,QAAAQ,MAAAjC,GACAyB,QAAA0C,IAAAlB,gBAAAD,kBAAAoB,WAAAhB,QAEA,YAGA,MAAA,KAAAiB,SAAAA,SACAC,UA8CA,SAAAE,mBAAAtB,GACA,OAAAA,EAAApG,MAAA,OAAAmD,KAAA,SAAAnD,MAAA,OAAAmD,KAAA,SAGA,SAAAwE,qBAAAvB,GACA,OAAAA,EAAApG,MAAA,SAAAmD,KAAA,OAAAnD,MAAA,SAAAmD,KAAA,OAGA,SAAAyE,aAAAC,EAAAC,GAIA,IAHA,IAAAC,EAAAF,EAAAE,OAGAlL,EAAA,EAAAA,EAAAkL,EAAAxK,OAAAV,IAGA,GADAiL,EAAA,GAAAC,EAAAlL,GAAA,GACA+J,UAAAtK,MAAA8B,KAAA0H,KAAAgC,GAKA,OADAA,EAAA,GAAAC,EAAAlL,GAAA,GACA+J,UAAAtK,MAAA8B,KAAA0H,KAAAgC,GAIA,OAAA,OAAAD,EAAAG,UACA,IAEAF,EAAA,GAAAD,EAAAG,UACApB,UAAAtK,MAAA8B,KAAA0H,KAAAgC,IAtEA1J,KAAA6J,MAAA,SAAAzJ,GAKA,IAJA,IAAA3B,GAAA,EACAoG,EAAAzE,EAAAyE,QACAiF,EAAA1J,EAEA,OAAAA,GACAA,EAAAyE,UAAAA,GACApG,IAEA2B,EAAAA,EAAA2J,uBAGA,IAAAnH,EAAAkH,EAAAE,aAAA,gBACA,IAAApH,EAAA,OAAAnE,EAEA,IAAAoD,EAAArE,GAAAmJ,MAAAe,KAAAlK,GAAA6J,WAAA4C,UAAAH,IAAAlH,GACA,OAAAf,EAAAqI,SAEAzL,EAAAoD,EAAAqI,SAAAC,UAAA,EAFA1L,GAMAuB,KAAAoK,IAAA,SAAAC,EAAA3E,GACA,IAAAlI,GAAAQ,OAAAoH,aACA,OAAA5H,GAAA,WACAwC,KAAAoK,IAAAC,EAAA3E,KAGAA,EAAA1F,KAAAqK,GAAArK,OAIAA,KAAAsK,UAAA,SAAAC,GAEA,IADA,IAAAC,EAAA3L,OAAA2L,KAAAD,GACA9L,EAAA+L,EAAArL,OAAA,EAAAV,GAAA,EAAAA,KACA,IAAA+L,EAAA/L,GAAAmF,QAAA,MACA4G,EAAAzI,OAAAtD,EAAA,GAEA,OAAA+L,EAAAzF,KAAA,MAoCA,IAAA0F,qBAAA,iBACAC,WAAA,EAAAC,OAAA,EAAAC,SAAA,EACAC,aAAA,SAAAC,EAAA/G,EAAAgH,GAIA,IAHA,IAAAC,EAAA,GAGAvM,EAAA,EAAAA,EAAAqM,EAAA3L,OAAAV,IACA,QAAAd,IAAAoN,IAAA,IAAAA,EAAAnH,QAAAnF,GAAA,CAGA,IAAAoD,EAAAiJ,EAAArM,GAIA,GAHAoD,EAAAoJ,KAAA,GAAAlH,EAGAlC,EAAAuE,OAAAsE,YAAA7I,EAAAuE,OAAAwE,SACAI,EAAAvM,GAAA,CAAA2H,KAAAvE,EAAAuE,KAAA6E,KAAAzC,UAAAtK,MAAA8B,KAAA0H,KAAA7F,EAAAoJ,YAGA,GAAApJ,EAAAuE,OAAAuE,OAAA,CACA,IAAAjB,EAAA7H,EAAAoJ,KAKA,GAJAD,EAAAvM,GAAA,CAAA2H,KAAAvE,EAAAuE,KAAA6E,KAAA,IACAvB,EAAA,GAAA7H,EAAAqJ,GAAA,IAGA1C,UAAAtK,MAAA8B,KAAA0H,KAAAgC,GAAA,CACAsB,EAAAvM,GAAAwM,KAAAzB,aAAA3H,EAAA6H,GACA,SAGAA,EAAA,GAAA7H,EAAAqJ,GAAA,GACAF,EAAAvM,GAAAwM,KAAAzC,UAAAtK,MAAA8B,KAAA0H,KAAAgC,IAGA,OAAAsB,GAGAG,eAAA,SAAAC,EAAArH,GACA,IAAAN,EAAA2H,EAAA3H,KAAA4H,WAAA,GACAC,EAAAF,EAAAE,UACAN,EAAAH,aAAAO,EAAAN,MAAA/G,GAGAN,EAAAkD,MAAA5C,EAMA,IAJA,IAAAwH,EAAA,GACAC,EAAA,GAGA/M,EAAA,EAAAA,EAAA6M,EAAAnM,OAAAV,IAAA,CACA,IAAAoD,EAAAyJ,EAAA7M,GACAgN,EAAA1L,EAAAuE,aAAAzC,EAAA6J,QAAAjI,GAGA,GAAA,IAAA5B,EAAA8J,SAAA,CA0BA,GAAA,IAAA9J,EAAA8J,SAAA,CACAC,EAAAH,EAOA,GALAF,EAAAzK,KAAA,CACA+C,YAAA+H,EACA/J,IAAAA,SAGAlE,IAAAkE,EAAAgK,OAAA,CACAD,EAAA/H,YAAAmH,EAAAnJ,EAAAgK,QAAAZ,KACA,SAIAW,EAAA/H,YAAA+H,EAAA/H,YAAAsE,QAAAsC,qBAAA,SAAAqB,EAAAC,GACA,OAAAf,EAAAe,GAAAd,OAKA,IAAA,IAAApJ,EAAA8J,SAAA,CACA,IAAAK,EAAA,CACAC,YAAAR,EACAI,OAAAhK,EAAAqK,YACAzH,WAAAgH,EAAAhH,WACA0H,UAAAtK,EAAAsK,WAAApM,EAAAuE,aAAAzC,EAAAsK,UAAA1I,IAEA8H,EAAAzK,KAAAkL,GAGAR,EAAA1K,KAAAkL,SAtDA,IADA,IAAAJ,EAAA/J,EAAAuK,WACAC,EAAA,EAAAA,EAAAT,EAAAzM,OAAAkN,IAAA,CACA,IAAAC,EAAAV,EAAAS,GAEAd,EAAAzK,KAAA,CACAyL,UAAAd,EAAAW,WAAAE,EAAAjC,MACAxI,IAAAyK,SAGA3O,IAAA2O,EAAAT,QAMAS,EAAAb,EAAAW,WAAAE,EAAAjC,OAEAzL,MAAA0N,EAAA1N,MAAAuJ,QAAAsC,qBAAA,SAAAqB,EAAAC,GACA,OAAAf,EAAAe,GAAAd,OARAQ,EAAAe,aAAAF,EAAAjC,KAAAW,EAAAsB,EAAAT,QAAAZ,OAkDAxH,EAAAgJ,qBAAAlB,EAIA,IAAA9M,EAAA,EAAAA,EAAA+M,EAAArM,OAAAV,IACA,CAAAoD,EAAA2J,EAAA/M,GAAA,IACAiO,EAAA3M,EAAAH,aAAAoL,EAAAnJ,EAAAgK,QAAAZ,MAAA,GACA,IAAAoB,EAAA,EAAAA,EAAAK,EAAAvN,OAAAkN,IACAxK,EAAA4C,WAAAkI,aAAAD,EAAAL,GAAAxK,EAAAoK,aAIA,OAAAxI,GAGA,SAAAmJ,eAAAxM,EAAAgL,EAAArH,QACApG,IAAAyC,EAAAyM,WACAzM,EAAAyM,SAAA,IAKA,IAHA,IAAAC,EAAA1M,EAAAyM,SACAE,EAAA3B,EAAA2B,eAEAtO,EAAA,EAAAA,EAAAsO,EAAA5N,OAAAV,IAAA,CACA,IAAAoD,EAAAkL,EAAAtO,GACAqO,EAAAjL,EAAA,IAAA5C,aAAA8E,EAAAlC,EAAA,KAIA,SAAAmL,kBAAA5M,EAAAgL,EAAAzM,EAAAoF,GACA,IAAA+I,EAAA1M,EAAAyM,SACAE,EAAA3B,EAAA2B,eAEA,QAAApP,IAAAgB,EAAA,CAEA,QAAAhB,KADAsP,EAAA7B,EAAA8B,eAAAvO,KACA,IAAAsO,EAAA9N,OAEA,OADAoH,QAAAQ,MAAA,qDAAApI,EAAA,sBACA,EAGA,IAAA,IAAAF,EAAA,EAAAA,EAAAsO,EAAA5N,OAAAV,IAAA,CAEA,IADAoD,EAAAkL,EAAAtO,IACA,KAAAE,EAAA,CAEA,IAAAwO,EAAAlO,aAAA8E,EAAAlC,EAAA,IAGAiL,EAAAjL,EAAA,MAAAsL,IACAL,EAAAjL,EAAA,IAAAsL,SAGA,CACA,IAAAF,EAAA,GACA,IAAAxO,EAAA,EAAAA,EAAAsO,EAAA5N,OAAAV,IAAA,CACA,IAAAoD,EAAAkL,EAAAtO,GACA0O,EAAAlO,aAAA8E,EAAAlC,EAAA,IAGAiL,EAAAjL,EAAA,MAAAsL,IACAC,MAAA5F,UAAA1G,KAAA5C,MAAA+O,EAAA7B,EAAA8B,eAAArL,EAAA,KACAiL,EAAAjL,EAAA,IAAAsL,GAIA,GAAA,IAAAF,EAAA9N,OAAA,OAAA,EAGA,IAAA6L,EAAAH,aAAAO,EAAAN,MAAA/G,EAAAkJ,GACA,SAAAI,EAAAC,GAEA,IADA,IAAAC,GAAA,EACA9O,EAAA,EAAAA,EAAA6O,EAAAnO,OAAAV,IACA,IAAA,IAAAwO,EAAArJ,QAAA0J,EAAA7O,IAAA,CACA8O,GAAA,EACA,MAGA,IAAA,IAAAA,EACA,OAAA,EAGAN,EAAA,GACA,IAAAxO,EAAA,EAAAA,EAAA6O,EAAAnO,OAAAV,SACAd,IAAAqN,EAAAsC,EAAA7O,KACAwO,EAAAnM,KAAAwM,EAAA7O,IAKA,OADAI,OAAA2O,OAAAxC,EAAAH,aAAAO,EAAAN,MAAA/G,EAAAkJ,KACA,EAGA,IAAA1B,EAAAnL,EAAAqM,qBACAgB,GAAA,EACA,IAAAhP,EAAA,EAAAA,EAAA8M,EAAApM,OAAAV,IAAA,CACA,IAAAuN,EAAAT,EAAA9M,GAEA,QAAAd,IAAAqO,EAAAC,aAkCA,QAAAtO,IAAAqO,EAAAnI,YAAA,CACA,QAAAlG,IAAAqO,EAAAnK,IAAAqK,YAAA,CACA,IAAA,IAAAmB,EAAArB,EAAAnK,IAAAqK,aAAA,CACA,IAAAwB,EAAA1B,EAAAnK,IAAAjD,MAAAuJ,QAAAsC,qBAAA,SAAAqB,EAAAC,GACA,OAAAf,EAAAe,GAAAd,OAGA,GAAAe,EAAAnI,YAAAA,cAAA6J,EAAA,SACA1B,EAAAnI,YAAAA,YAAA6J,EAEAD,GAAA,EAEA,SAIA,GAAAzC,EAAAgB,EAAAnK,IAAAgK,QAAA,CACA,IAAAjN,EAAAoM,EAAAgB,EAAAnK,IAAAgK,QAAAZ,KACA,GAAAe,EAAAnI,YAAAA,cAAAjF,EAAA,SACAoN,EAAAnI,YAAAA,YAAAjF,EAEA6O,GAAA,QAGA,QAAA9P,IAAAqO,EAAAO,UAAA,CACA,QAAA5O,IAAAqO,EAAAnK,IAAAqK,YAAA,CACA,IAAA,IAAAmB,EAAArB,EAAAnK,IAAAqK,aAAA,CACAwB,EAAA1B,EAAAnK,IAAAjD,MAAAuJ,QAAAsC,qBAAA,SAAAqB,EAAAC,GACA,OAAAf,EAAAe,GAAAd,OAGA,GAAAe,EAAAO,UAAA3N,QAAA8O,EAAA,SACA1B,EAAAO,UAAA3N,MAAA8O,EAEAD,GAAA,EAEA,SAIA,GAAAzC,EAAAgB,EAAAnK,IAAAgK,QAAA,CACAjN,EAAAoM,EAAAgB,EAAAnK,IAAAgK,QAAAZ,KACA,GAAAe,EAAAO,UAAA3N,QAAAA,EAAA,SACAoN,EAAAO,UAAA3N,MAAAA,EAEA6O,GAAA,SA9EA,QAAA9P,IAAAqN,EAAAgB,EAAAH,QAAA,CAMA,IALA,IAAAa,EAAA3M,EAAAH,aAAAoL,EAAAgB,EAAAH,QAAAZ,MAAA,GACA0C,EAAA5N,EAAAS,QAAAwL,EAAAC,YAAAD,EAAAG,WACAyB,GAAA,EAGAvB,EAAA,EAAAA,EAAAK,EAAAvN,OAAAkN,IAAA,CACA,QAAA1O,IAAAgQ,EAAAtB,GAAA,CACAuB,GAAA,EACA,OAEA,IAAAD,EAAAtB,GAAAwB,YAAAnB,EAAAL,KACAL,EAAAvH,WAAAqJ,aAAApB,EAAAL,GAAAsB,EAAAtB,IAIA,GAAAuB,EACA,IAAAvB,EAAA,EAAAA,EAAAK,EAAAvN,OAAAkN,IACAL,EAAAvH,WAAAkI,aAAAD,EAAAL,GAAAL,EAAAC,kBAKA,IAAAI,EAAAK,EAAAvN,OAAAkN,EAAAsB,EAAAxO,OAAAkN,IACAsB,EAAAtB,GAAAtJ,SAIA0K,GAAA,GAuDA,OAAAA,EAKA,IAAAM,WAAA,SAAAtK,EAAAiF,EAAAsF,EAAAvG,EAAAwG,EAAAC,GACA,IAAAvF,EAAA3I,KAAA0H,KAAAD,GACAwG,IAAAA,EAAA,IAIA,IADA,IAAAE,EAAAnO,KAAAsK,UAAA3B,GACAlK,EAAA0P,EAAAhP,OAAA,EAAAV,GAAA,EAAAA,IACAkK,EAAAwF,EAAA1P,cAAAV,UACAoQ,EAAApM,OAAAtD,EAAA,GAIA,IAAA2P,EAAAhG,OAAA5K,GAAA6B,MAAAG,UAAA,IAAA2O,EAAA,IAAA3Q,GAAA6B,MAAAE,YAAA,MAAA,KAEA,GAAAyO,EACA,IAAAK,EAAAjG,OAAA5K,GAAA6B,MAAAG,UAAAwO,EAAA,MAAAxQ,GAAA6B,MAAAE,YAAA,MAAA,KAIA,GAFAsI,gBAAA,EAEA,YAAAoG,EACA,IAAAK,EAAA,GACAC,EAAAL,EAAA/O,OAGA,IAAAqP,EAAA/K,EAAA0E,QAAA,uBAAA,SAAAsG,EAAAf,GAqBA,GAnBAA,EAAApE,mBAAAoE,GAGAM,IACAN,EAAAA,EAAAvF,QAAAkG,EAAA,SAAAK,GACA,MAAA,WAAAA,EAAA,GAAAC,MAAA,MAWAjB,GAHAA,EAAAnE,qBAJAmE,EAAAA,EAAAvF,QAAAiG,EAAA,SAAAtC,EAAA4C,GACA,MAAA,eAAAA,MAMA9M,MAAA,SAAAmD,KAAA,KAAAnD,MAAA,QAAAmD,KAAA,KAAAnD,MAAA,QAAAmD,KAAA,KAGA,YAAAkJ,EAAA,CACAP,EAAAA,EAAAxF,OAGA,IAAA0G,EAAAN,EAAA1K,QAAA8J,GAEA,OAAA,IAAAkB,GACAN,EAAAxN,KAAA4M,GACAQ,EAAApN,KAAA,CAAAsF,KAAAsE,WAAAO,KAAA,CAAAyC,EAAAhF,EAAAC,KACA,QAAA2F,EAAAnP,OAAAoP,EAAA,IAEA,QAAAK,EAAAL,GAKA,OAFAb,EAAA,GAAAlF,UAAAtK,MAAA8B,KAAA0H,KAAA,CAAAuG,EAAAP,EAAAhF,EAAAC,KAEAR,QAAA,kCAAA,SAAA1J,GACA,MAAA,KAAAA,EAAAoQ,WAAA,GAAA,QASA,MALA,YAAAZ,IAEAK,EAAAH,EAAAxF,EAAAD,EAAAsF,EAAAvG,EAAAwG,EAAAG,EAAAC,EAAA5K,EAAA,KACAT,WAAA,WAAAwL,EAAA,MAAA,IAEAA,GAIAM,iBAAA,SAAArL,EAAAiF,EAAAsF,EAAAvG,EAAAwG,GAEA,IAAArF,EAAA,CACAzJ,OAAA,EACA4P,KAAA,SAAAC,EAAAC,GACA,GAAA,OAAAD,EACA,OAAAjB,WAAArQ,KAAAuR,GAAAvG,EAAAsF,EAAAvG,GAGA,IAAAyH,EAAA,oBACAC,GAAA,EAGA,IAAA,IAAA9Q,KAAA2Q,EACA,iBAAAA,EAAA3Q,GACA2Q,EAAA3Q,GAAA,IAAA2Q,EAAA3Q,GAAAuD,MAAA,KAAAmD,KAAA,OAAA,IACA,iBAAAiK,EAAA3Q,KACA2Q,EAAA3Q,GAAA+Q,KAAAC,UAAAL,EAAA3Q,KAEA8Q,IACAD,GAAA,KAEAA,GAAA7Q,EAAA,MAAA2Q,EAAA3Q,GACA8Q,GAAA,EAWA,OAPA,IAAAA,IACAD,EAAAA,EAAA/G,QAAA,OAAA,KAGA+G,EAAAA,EAAAtN,MAAA,KAAAmD,KAAA,SAAAnD,MAAA,KAAAmD,KAAA,SAGAgJ,WAAArQ,KAAAuR,GAAAvG,EAAAsF,EAAAvG,EAAAyH,EAAA,OAKAzL,EAAAA,EAAA0E,QAAA,oBAAA,SAAA2D,EAAA4C,GACA,OAAA,IAAA,UAAA/J,KAAA+J,GACA,gBAAAA,EAAA9M,MAAA,KAAAmD,KAAA,OAAA,KAEA6D,EAAAA,EAAAzJ,QAAAuP,EACA9F,EAAAzJ,SACA,0CAAAyJ,EAAAzJ,OAAA,GAAA,QAGA,IAAAwJ,EAAA3I,KAAA0H,KAAAD,GAGA2G,EAAAhG,OAAA5K,GAAA6B,MAAAG,UAAA,IAAAQ,KAAAsK,UAAA3B,GAAA,IAAAnL,GAAA6B,MAAAE,YAAA,MAAA,KAEA,GAAAyO,EACA,IAAAK,EAAAjG,OAAA5K,GAAA6B,MAAAG,UAAAwO,EAAA,MAAAxQ,GAAA6B,MAAAE,YAAA,MAAA,KAEA,GAAA,YAAA0O,EACA,IAAAC,EAAA,GAEA,IAAAM,EAAA/K,EAAA0E,QAAA,mBAAA,SAAAsG,EAAAf,GAEAA,EAAApE,mBAAAoE,GAGAM,IACAN,EAAAA,EAAAvF,QAAAkG,EAAA,SAAAK,GACA,MAAA,WAAAA,EAAA,GAAAC,MAAA,MAUAjB,GAHAA,EAAAnE,qBAHAmE,EAAAA,EAAAvF,QAAAiG,EAAA,SAAAtC,EAAA4C,GACA,MAAA,eAAAA,MAKA9M,MAAA,SAAAmD,KAAA,KAAAnD,MAAA,QAAAmD,KAAA,KAAAnD,MAAA,QAAAmD,KAAA,KASA,IAPA,IACAuK,GAAA,EAGAC,EAAA,wCACAC,EAAA,GACAC,EAAA,KACA,QAAAA,EAAAF,EAAAvG,KAAA0E,KACA8B,EAAA1O,KAAA2O,EAAA,IAMA,GAHA,OAAA/G,GAAA,YAAAuF,GACAuB,EAAA1O,KAAA,WAEA,IAAA0O,EAAArQ,OAAA,CAEA,IADA,IAAAuQ,EAAA,GACAjR,EAAA,EAAAA,EAAA+Q,EAAArQ,OAAAV,IACA+Q,EAAA/Q,GAAA0J,QAAA,kBAAA,IAAAvG,MAAA,KAAA+N,QAAA,SAAAC,GACAF,EAAA5O,KAAA8O,KAGAJ,EAAAE,EACA,IAAAjR,EAAA,EAAAA,EAAA+Q,EAAArQ,OAAAV,IACA+Q,EAAA/Q,IAAA,YAAA+Q,EAAA/Q,GAAA,kBAAA+Q,EAAA/Q,GAAA,cAIA+Q,EADA,IAAAA,EAAArQ,OACA,OACA,IAAAqQ,EAAAzK,KAAA,KAAA,IACA2I,EAAAA,EAAA9L,MAAA,aAAAmD,KAAAyK,QAEA9B,EAAAA,EAAA9L,MAAA,aAAAmD,KAAA,QAGA,GAAA,KADAuK,EAAA5B,EAAA9L,MAAA,SACAzC,OAAA,CACAmQ,EAAAA,EAAA,GAAA1N,MAAA,KAGA,IAAAiO,EAAA,SAAA7H,GAEA,IAAAyB,EAAA,KAIA,KADAzB,GAJAA,EAAAA,EAAAjD,KAAA,MAIAnD,MAAA,UAAA,IAAAoG,EAAApE,QAAA,KAAA,IAAA,QACAzE,OACAsK,EAAAzB,EAAA8H,MACA9H,EAAAA,EAAA,GAYA,IAPA,IAAA5J,EAAA,CACA8M,IAHAlD,EAAAA,EAAApG,MAAA,aAGAmO,QACApG,OAAA,GACAC,UAAAH,GAIAhL,EAAA,EAAAA,EAAAuJ,EAAA7I,OAAAV,IAAA,CACA,IAAAmR,EAAA5H,EAAAvJ,GAAAmD,MAAA,KACAxD,EAAAuL,OAAA7I,KAAA,CAAA8O,EAAAG,QAAAH,EAAA7K,KAAA,OAGA,OAAA3G,GAGA,GAAA,YAAA6P,EAAA,CACA,IAAA+B,EAAAV,EAAAS,QACApG,EAAAkG,EAAAP,GACA3F,EAAAvD,KAAAuE,OACAhB,EAAAsB,KAAA,CAAA,KAAAvC,EAAAC,EAAAC,GAGAe,EAAAuB,GAAA,CAAA8E,EAAA9H,OAAAyB,EAAAuB,GAAAhD,QACA,OAAAyB,EAAAC,YACAD,EAAAC,UAAAD,EAAAC,UAAA1B,QAEA,IAAAzJ,EAAA,EAAAA,EAAAkL,EAAAA,OAAAxK,OAAAV,IACAkL,EAAAA,OAAAlL,GAAA,GAAAkL,EAAAA,OAAAlL,GAAA,GAAAyJ,OACAyB,EAAAA,OAAAlL,GAAA,GAAAkL,EAAAA,OAAAlL,GAAA,GAAAyJ,OAKA,OADAgG,EAAApN,KAAA6I,GACA,SAAAuE,EAAA/O,OAAA,GAGA,IAAAuK,EAAA,CAAA4F,EAAA,GAAA5G,EAAAC,EAAAC,GAGA,OAAAJ,UAAAtK,MAAA8B,KAAA0H,KAAAgC,IAKA4F,EAAAS,QACArG,EAAA,GAAA4F,EAAAvK,KAAA,KAEAyD,UAAAtK,MAAA8B,KAAA0H,KAAAgC,KAPA4F,EAAAS,QACAvG,aAAAqG,EAAAP,GAAA5F,IAaA,GAAA,KADA4F,EAAA5B,EAAA9L,MAAA,UACAzC,OAAA,CACAuK,EAAA,CAAA4F,EAAA,GAAA5G,EAAAC,EAAAC,GAEA,MAAA,YAAAqF,GACAC,EAAApN,KAAA,CAAAsF,KAAAwE,SAAAK,KAAAvB,IACA,SAAAwE,EAAA/O,OAAA,IAGAuO,EAAAlF,UAAAtK,MAAA8B,KAAA0H,KAAAgC,GAGA,MAAA,KAGA,MAAA,YAAAuE,GAEAtF,EAAAsF,EAAAG,EAAAC,EAAA5K,EAAA,KACAT,WAAA,WAAAwL,EAAA,MAAA,GACA,CAAAA,EAAAN,EAAAtF,IAGA4F,GAGAyB,UAAA,SAAA7E,EAAAxI,EAAAoL,EAAA/D,EAAAiG,EAAAC,EAAA1L,EAAAd,GACA,IAAAyM,EAAA,CAAA,MAAA,OAAA,SAAA,QAAA,UAAA,OAAA,OAAA,UAAA,cAAA,eACAC,GAAA,EACAC,EAAA7L,EAAA8L,SACAC,EAAA/L,EAAA5B,UAAA4N,SAAA,iBAGAlG,EAAAvK,KAAA0H,KAAAuC,GACAyG,EAAA,MAAAR,EACAhP,EAAAqJ,EAAAmG,GAEAC,EAAA,SAAA9G,EAAA+G,EAAAC,EAAAC,GAEA,GAAAlO,EAAAsH,SACA,IACA6G,EADAnO,EAAAsH,SAAAC,UACAvH,EAAAsH,SAAA8G,eAGA,GAAA,UAAAJ,EAAA,CACA,GAAAhO,EAAAsH,SACA,IAAA+G,EAAA,CAAAxM,EAAAyM,kBAAAzM,EAAA0M,kBAYA,OAVA1M,EAAAZ,YAAA,QAEAjB,EAAAsH,WACAzF,EAAAyB,YAAA+K,EAAA,IACAxM,EAAAyB,YAAA+K,EAAA,IACArO,EAAAsH,SAAAzK,IAAAoE,YAAA,GACAoN,EAAA,GAAAxO,MAAA2O,OACAH,EAAA,GAAAxO,MAAA2O,OAAA,EACAxO,EAAAsH,SAAAmH,OAAA,KAMA,GAAAzO,EAAAsH,SAAA,CACA,IAAA0E,EAAAhM,EAAAsH,SAAAlG,WAEAsN,aAAAjB,GACAA,EAAArN,WAAA,WACAJ,EAAAsH,SAAAqH,gBACA,UAEA3C,EAAA0B,EAGA,GAAA,gBAAAM,EAAA,CA8BA,QAHAjT,IAAAuD,IACAA,EAAAqJ,EAAAmG,IAEA,SAAAE,GAAA,SAAAA,EAAA,CACA,GAAA,SAAAA,EAAA,EACAY,EAAA5O,EAAAzD,OAAA0K,EAAAiH,GACA,IACAA,GAAAU,GAGA,IAAAC,EAAA7T,SAAAuF,cAAA,OACA,IAAA1E,EAAA,EAAAA,EAAAqS,EAAArS,IACAgT,EAAAvL,YAAA0I,EAAA/E,EAAApL,IAGA,IAAAmC,EAAAgO,EAAAiC,IAAA,KACAa,EAAA9Q,GAAAA,EAAA6D,YAEA,IAAAiN,IAEAA,EADA9O,EAAAsH,UAAAtH,EAAAzD,QAAA4R,EACAnO,EAAAsH,SAAAzK,IACAgF,GAIA,IAAAhG,EAAA,EAAAA,EAAAqS,EAAArS,IACAiT,EAAA/E,aAAA8E,EAAAP,kBAAAtQ,QAEAjD,IAAAuD,GAAAA,EAAAyQ,QACAzQ,EAAAyQ,OAAA/C,EAAA/E,EAAApL,GAAA,QAEA,OAGA,GAAAoL,EAAAgH,EAAA,CACA,IAAAe,EAAAhD,EAAAiC,GACAA,EAAAjC,EAAA/E,GACAA,EAAA+H,OAEA/H,EAAA+E,EAAA/E,GACAgH,EAAAjC,EAAAiC,GAGA,IAAAgB,EAAAhB,EAAAjQ,YACAkR,EAAAjB,EAAApM,WAQA,OAPAoF,EAAApF,WAAAkI,aAAAkE,EAAAhH,EAAAjJ,aACAkR,EAAAnF,aAAA9C,EAAAgI,aAEAlU,IAAAuD,GAAAA,EAAAyQ,SACAzQ,EAAAyQ,OAAA/C,EAAAiC,GAAA,QACA3P,EAAAyQ,OAAA/C,EAAA/E,GAAA,UAMA,GAAA,gBAAA+G,EACA,IAAAnS,EAAAoL,EAAApL,EAAAoS,EAAApS,IACAmQ,EAAA/E,GAAA9G,SAKA,GAAA,WAAA6N,EAAA,CAuBA,GAAA,WAAAA,EAAA,CAUA,IAAAY,OATA7T,IAAAkM,GACAA,EAAA,EACAgH,EAAAjO,EAAAzD,aAEAxB,IAAAkT,EAAAA,EAAAhH,EAAA,EACAgH,EAAA,EAAAA,EAAAjO,EAAAzD,OAAA0R,EACAA,GAAAhH,GAGA2H,EAAA5O,EAAAzD,OAAA0R,GACA,IAAAA,GAAAW,GAEA,IAAA/S,EAAAoL,EAAApL,EAAAoS,EAAApS,IAAA,CACA,IAAAsT,EAAAnD,EAAAnQ,GACA,QAAAd,IAAAoU,QAAApU,IAAAiF,EAAAnE,GACA,MAEAiP,EAAAvC,eAAAC,EAAAxI,EAAAnE,KACA,IAAA+R,GACA5D,eAAAc,EAAAtC,EAAAxI,EAAAnE,IAEAmE,EAAAsH,SACA6H,EAAAtN,WAAAqJ,aAAAJ,EAAAqE,IAIAtN,EAAAqJ,aAAAJ,EAAAqE,QACApU,IAAAuD,GAAAA,EAAAyQ,QACAzQ,EAAAyQ,OAAAjE,EAAA,aAIA,IAAA3J,EAAAnB,EAAAiH,GACA,QAAAlM,IAAAoG,EAAA,CAEA2J,EAAAvC,eAAAC,EAAArH,GAKA,IAJA,IAAAyM,GACA5D,eAAAc,EAAAtC,EAAArH,GAGA,gBAAA6M,EAAA,CACA,GAAA,IAAAhC,EAAAzP,OACAsF,EAAAkI,aAAAe,EAAAjJ,EAAA0M,uBAEAa,EAAApD,EAAA/E,EAAA,IACApF,WAAAkI,aAAAe,EAAAsE,EAAApR,kBAGAjD,IAAAuD,GAAAA,EAAA+Q,QACA/Q,EAAA+Q,OAAAvE,QAEA,GAAA,YAAAkD,EAAA,CACA,IAAAoB,OACArU,KADAqU,EAAApD,EAAA,KAEAoD,EAAAvN,WAAAkI,aAAAe,EAAAsE,QAEArU,IAAAuD,GAAAA,EAAA+Q,QACA/Q,EAAA+Q,OAAAvE,IAEAkD,EAAA,SAEA,GAAA,WAAAA,EAAA,CACA,GAAAhO,EAAAsH,SAcA,OAbA,IAAAL,EACApF,EAAAkI,aAAAe,EAAAjJ,EAAA0M,kBACAtH,GAAAkH,GACA,OAAAnO,EAAAsH,SAAAgI,QAAAC,QACAvP,EAAAsH,SAAAgI,QAAAC,MAAAzE,GAEA9K,EAAAsH,SAAAzK,IAAAyG,YAAAwH,IAGAkB,EAAA/E,EAAA,GAAAuI,sBAAA,WAAA1E,aAEA/P,IAAAuD,GAAAA,EAAA+Q,QACA/Q,EAAA+Q,OAAAvE,IAIAjJ,EAAAyB,YAAAwH,QACA/P,IAAAuD,GAAAA,EAAA+Q,QACA/Q,EAAA+Q,OAAAvE,UAxGA,GAAAkB,EAAA/E,GAAA,CACA,IAAAwI,GAAA,EACAC,EAAA,WACAD,IACAA,GAAA,EAEAzD,EAAA/E,GAAA9G,gBAGApF,IAAAuD,GAAAA,EAAA6B,OAEA7B,EAAA6B,OAAA6L,EAAA/E,GAAAyI,IACAtP,WAAAsP,EAAA,KAIAA,SA3GA,CAEA,IAAA,IAAA7T,EAAAoL,EAAApL,EAAAmQ,EAAAzP,OAAAV,IACAmQ,EAAAnQ,GAAAsE,SAGA,GAAAH,EAAAsH,SACA,IAAAgI,EAAAtP,EAAAsH,SAAAgI,QAEA,IAAA,IAAAzT,EAAAoL,EAAApL,EAAAmE,EAAAzD,OAAAV,IAAA,CACA,IAAAiP,EAAAvC,eAAAC,EAAAxI,EAAAnE,IACAmE,EAAAsH,SACA,OAAAgI,EAAAC,OAAA1T,EAAAsS,EACAtM,EAAAkI,aAAAe,EAAAjJ,EAAA0M,kBACAvO,EAAAsH,SAAAzK,IAAAyG,YAAAwH,GAEAjJ,EAAAyB,YAAAwH,IAEA,IAAA8C,GACA5D,eAAAc,EAAAtC,EAAAxI,EAAAnE,IAGAmE,EAAAsH,UAAAtH,EAAAsH,SAAAqI,sBACA3P,EAAAsH,SAAAqI,qBAAA3P,EAAAsH,SAAAC,aAiLAqI,EAAA,SAAAC,EAAApI,GACAxL,OAAAC,eAAA2T,EAAApI,EAAA,CACAtL,YAAA,EACAC,cAAA,EACAJ,MAAA,WACA,IAAA8O,OAAA/P,EACA+U,EAAAhV,KAAAyB,OAEA,GAAA,SAAAkL,EAAA,CACA,IAAAsI,EAAA9U,UAAA,GACA+U,EAAA/U,UAAA,GACA,GAAA8U,IAAAC,EAAA,OACA,IAAA9B,EAAAjT,UAAA,IAAA,EAUA,OATA8S,EAAAgC,EAAA,OAAAC,EAAA9B,IAEApD,EAAAN,MAAA5F,UAAAzF,OAAA7D,MAAAR,KAAA,CAAAiV,EAAA7B,KACAlM,QAAAgO,EAAA,GACAxF,MAAA5F,UAAAzF,OAAA7D,MAAAR,KAAAgQ,QAGA9K,EAAAsH,UACAtH,EAAAsH,SAAA2I,gBAIA,GAAA,SAAAxI,EAAA,CACA,IAAA5L,EAAAZ,UAAA,GACAiV,EAAAjV,UAAA,GACA,GAAAY,IAAAqU,EAAA,OACAnC,EAAAlS,EAAA,OAAAqU,GACApF,EAAAhQ,KAAAe,GAGA,OAFAf,KAAAe,GAAAf,KAAAoV,QACApV,KAAAoV,GAAApF,GAIA,GAAA,YAAArD,EAAA,CAKA,GAJAzH,EAAAsH,UACAtH,EAAAsH,SAAA6I,gBAGAlV,UAAA,GAAAsB,QAAAuT,GAAA,IAAAA,EAAA,CACA,IAAAM,EAAAN,EACA7Q,EAAAhE,UAAA,GAEA,IAAAY,EAAA,EAAAA,EAAAiU,GACA7Q,EAAApD,KAAAf,KAAAe,GADAA,IAEAuU,IAOA,GAAA,IAAAA,EAAA,CACA,GAAAnR,EAAA1C,SAAAuT,EAAA,OAKA,OAHAhF,EAAA7P,UAAA,GAAA8Q,MAAA+D,IACA9N,QAAA8N,EAAA,QACAhV,KAAAqE,OAAA7D,MAAAR,KAAAgQ,GAKA,GAAAsF,IAAAN,EAAA,CACA,IAAA,IAAA7U,UAAA,IACA6P,EAAA7P,UAAA,GAAA8Q,MAAAlQ,IACAmG,QAAAnG,EAAAiU,EAAAjU,GACA2O,MAAA5F,UAAAzF,OAAA7D,MAAAR,KAAAgQ,GAEA9K,EAAAqQ,QAAAxU,EAAAiU,GAEA,QAKA,GAAA,IAAAA,EAGA,OAFAtF,MAAA5F,UAAA1G,KAAA5C,MAAAR,KAAAG,UAAA,SACA8S,EAAA,EAAA,eAKAjD,EAAA,CAAA,EAAAgF,GA2BA,OA1BAtF,MAAA5F,UAAA1G,KAAA5C,MAAAwP,EAAA7P,UAAA,IACAuP,MAAA5F,UAAAzF,OAAA7D,MAAAR,KAAAgQ,IAGA,IAAA7P,UAAA,IAAA2S,GACAG,EAAA,EAAA,SACAA,EAAA,EAAA,iBAMAjT,KAAAyB,OAAAuT,GACA/B,EAAAjT,KAAAyB,OAAA,cAAAuT,GAGA9P,EAAAqQ,QAAA,EAAAvV,KAAAyB,QAEAyD,EAAAsH,UACAtH,EAAAsH,SAAAqI,qBAAA3P,EAAAsH,SAAAC,YAIAvH,EAAAsH,UACAtH,EAAAsH,SAAAmH,QAEA3T,KAGA,GAAA,WAAA2M,GAAA,IAAAxM,UAAA,SAAAF,IAAAE,UAAA,GAEA,OADA8S,EAAA,EAAA,SACAvD,MAAA5F,UAAAzF,OAAA7D,MAAAR,KAAAG,WAMA,GAHAuP,MAAA5F,UAAA6C,KACAqD,EAAAN,MAAA5F,UAAA6C,GAAAnM,MAAAR,KAAAG,YAEA,QAAAwM,EACAsG,EAAAjT,KAAAyB,OAAA,eAEA,GAAA,SAAAkL,EACA,GAAA,IAAAxM,UAAAsB,OACAwR,EAAA+B,EAAA,eAEA,IAAAjU,EAAA,EAAAA,EAAAZ,UAAAsB,OAAAV,IACAkS,EAAA+B,EAAAjU,EAAA,eAKA,GAAA,UAAA4L,EACAsG,EAAA,EAAA,UAEA/N,EAAAsH,UAAAtH,EAAAsH,SAAAC,UAAA,IACAvH,EAAAsH,SAAAC,YACAvH,EAAAsH,SAAA2I,qBAIA,GAAA,WAAAxI,EAAA,CACA,GAAA,IAAAxM,UAAA,SAAAF,IAAAE,UAAA,GACA,OAAA6P,EAGA,IAAAwF,EAAArV,UAAA,GACAqV,EAAA,IAAAA,EAAAR,EAAAQ,GAEA,IAAAC,EAAAtV,UAAA,GACAsV,GAAA,IAAAA,IAAAA,EAAAzV,KAAAyB,QAEA,IAAAV,EAAA0U,EAAA,EAAA1U,GAAA,EAAAA,IACAkS,EAAAuC,EAAAzU,EAAA,UAMA,GAHAmE,EAAAsH,UAAAtH,EAAAsH,SAAAC,WAAA+I,IACAtQ,EAAAsH,SAAAC,UAAA+I,EAAAC,GAEAtV,UAAAsB,QAAA,EAAA,CACAgU,EAAAtV,UAAAsB,OAAA,EAGA+T,GAAAxV,KAAAyB,SACA+T,EAAAxV,KAAAyB,OAAA,GAEA,IAAAV,EAAA,EAAAA,EAAA0U,EAAA1U,IACAkS,EAAAuC,EAAAzU,EAAA,eAGAmE,EAAAsH,UAAAtH,EAAAsH,SAAAC,WAAA+I,IACAtQ,EAAAsH,SAAAC,WAAAgJ,SAIA,GAAA,YAAA9I,EAAA,CACA,GAAA,IAAAxM,UAAAsB,OACAwR,EAAA,EAAA,gBAEA,IAAAlS,EAAAZ,UAAAsB,OAAA,EAAAV,GAAA,EAAAA,IACAkS,EAAAlS,EAAA,WAIAmE,EAAAsH,UAAA,IAAAtH,EAAAsH,SAAAC,YACAvH,EAAAsH,SAAAC,WAAAtM,UAAAsB,OACAyD,EAAAsH,SAAA2I,oBAIA,gBAAAxI,GACAsG,EAAA9S,UAAA,GAAA,SAAAA,UAAA,IAEA+E,EAAAsH,UAAAtH,EAAAsH,SAAAC,WACAvH,EAAAsH,SAAA2I,gBAGA,gBAAAxI,IACAsG,EAAA9S,UAAA,IAAA,EAAA,eAEA+E,EAAAsH,WACAtH,EAAAsH,SAAAC,UAAAtM,UAAA,IAAA,IAGA,OAAA6P,MAKAjJ,GAAAA,EAAA5B,UAAA4N,SAAA,4BACA7N,EAAAsH,SACAtH,EAAAsH,SAAA,GAGAtH,EAAAsH,SAAAzK,IAAAkE,OACAhG,IAAAuD,EACA0B,EAAAsH,SAAAhJ,SAAAA,EACA0B,EAAAsH,SAAAkJ,UAAA,CAAAvR,IAAA0I,EAAA8I,IAAA3C,GAEAjM,EAAAqJ,aAAA1C,EAAA3H,KAAA6M,EAAA,IACA9S,GAAA4B,SAAAkU,eAAAC,OAAA3Q,EAAAuN,EAAA1L,GACA2G,EAAA3H,KAAAV,UAGA,IAAA,IAAAtE,EAAA,EAAAA,EAAA2R,EAAAjR,OAAAV,IACA+T,EAAA5P,EAAAwN,EAAA3R,IAUAC,eAAAkE,EAAA,UAAA,SAAAiH,EAAA1K,EAAAR,QACAhB,IAAAkM,GAAAA,EAAA/L,cAAA+B,QACAlB,EAAAkL,EACAA,EAAA,EACA1K,EAAAyD,EAAAzD,aAEAxB,IAAAwB,EAAAA,EAAA0K,EAAA,EACA1K,EAAArB,cAAA+B,QACAlB,EAAAQ,EACAA,EAAA0K,EAAA,GAEA1K,EAAA,EAAAA,EAAAyD,EAAAzD,OAAAA,EACAA,GAAA0K,EAGA,IAAA2H,EAAA5O,EAAAzD,OAAAA,EACAqS,EAAA,IAAArS,GAAAqS,GAEA,IAAA,IAAA/S,EAAAoL,EAAApL,EAAAU,EAAAV,IAAA,CACA,IAAA+U,EAAA5Q,EAAA6Q,WAAAhV,GAGA,QAAAd,IAAA6V,EAAA,CACA5Q,EAAA8Q,YAAAjV,GACA,MAGA,IAAA,IAAA+R,EACA5N,EAAA+Q,YAAAlV,QACA,IAAA,IAAAuO,kBAAAwG,EAAApI,EAAAzM,EAAAiE,EAAAnE,IACA,cAGAd,IAAAuD,GAAAA,EAAAyQ,QACAzQ,EAAAyQ,OAAA6B,EAAA,cAIA,IAAAI,EAAA,KACA,GAAAhR,EAAAsH,SAAA,CACA0J,EAAAhR,EAAAsH,SAAAzK,IAAA8Q,SACA,IAAAsD,EAAAjR,EAAAsH,SAAA4J,QAAA3B,MAEAzT,eAAAkE,EAAA,aAAA,SAAAiH,GACA,GAAA,OAAA+J,EAAA,CACA,IAAAG,OAAApW,EACA,GAAAkM,EAAAjH,EAAAsH,SAAAC,UACA4J,EAAAH,EAAA/J,OACA,CACAA,GAAAjH,EAAAsH,SAAAC,UACA,IAAA6J,EAAAvP,EAAAwP,kBAAA,EAGAF,EADAlK,GAAAmK,EACA1D,EAAAzG,EAAA,GAEA+J,EAAA/J,EAAAmK,EAAApR,EAAAsH,SAAAC,WAGA,OAAA4J,IAAAF,EACAE,OACA,EAGA,OAAAzD,EAAAzG,MAIAqK,WAAA,SAAA7J,EAAAe,EAAA3C,EAAA0H,EAAA1L,GACA,IAAA0P,EAAA1L,EAAA7G,MAAA,QACAoM,EAAAmG,EAAA,GACA3D,EAAA/L,EAAA5B,UAAA4N,SAAA,iBAEA,IAAAzQ,KAAA0H,KAAA2C,GACA,OAAA9D,QAAAQ,MAAA,0CAAAsD,EAAA,kBAAAe,GAEA,IAAAgJ,EAAApU,KAAA0H,KAAA2C,GAAA8J,EAAA,IACA,QAAAxW,IAAAyW,GAWA,GANAhJ,EAAAoB,aAAA,eAAA2H,EAAA,IAGArM,kBAAAsD,EACAA,EAAApL,KAAAqU,kBAAAjJ,EAAA4C,EAAA3D,GAEA,IAAA8J,EAAAhV,OAAA,CAIA,IAHA,IAAAwE,EAAA/F,SAAAuF,cAAA,OACAoH,EAAAvK,KAAA0H,KAAA2C,GAEA5L,EAAA,EAAAA,EAAA2V,EAAAjV,OAAAV,IAAA,CACA,IAAA+U,EAAArI,eAAAC,EAAAgJ,EAAA3V,IACAkF,EAAAuC,YAAAsN,IAEA,IAAAhD,GACA5D,eAAA4G,EAAApI,EAAAgJ,EAAA3V,IA0BA,QAtBAd,IAAA4M,EAAA+J,cACAC,uBAAAhK,QAEA5M,IAAA4M,EAAA+J,aAAAH,EAAA,MACA5J,EAAA+J,aAAAH,EAAA,IAAA,MAEAtV,OAAAC,eAAAyL,EAAA4J,EAAA,GAAA,CACApV,YAAA,EACAC,cAAA,EACAwV,IAAA,WACA,OAAAJ,GAEAK,IAAA,SAAA7E,GACA,OAAA,IAAAA,EAAAzQ,OACAiV,EAAArS,OAAA,GACAqS,EAAAjM,QAAAyH,GAAA,MAIAK,UAAA7E,EAAAgJ,EAAApG,EAAA3D,EAAA8J,EAAA,GAAAhE,EAAA1L,EAAAd,QAGAhG,IAAAyW,EAAAlK,SAAA,CAEA,IADA,IAAAqG,EAAA5M,EAAA4M,SACAmE,GAAAjW,EAAA,EAAA8R,EAAApR,QAAAV,EAAAiW,EAAAjW,IACAgG,EAAAyB,YAAAqK,EAAA,IAGA5M,EAAAZ,SACAY,EAAA,YApDA4C,QAAAQ,MAAA,wBAAAoN,EAAA,GAAA,0CAAA9J,EAAA,MAyDAsK,mBAAA,SAAA7P,GACA9E,KAAA0H,KAAA5C,EAAAxD,OAAA,aAAAwD,EAAAxD,OAAA,eAAAwD,EAAAxD,OAAA1C,OAGAgW,UAAA,SAAAzE,GAGA,IAFA,IAAAzC,EAAA3N,EAAA,kBAAAoQ,GAEA1R,EAAA,EAAAA,EAAAiP,EAAAvO,OAAAV,IAAA,CACA,IAAA2B,EAAAsN,EAAAjP,GACAkI,EAAAnJ,GAAA6J,WAAA4C,UAAA7J,GACA,IAAAuG,EAAA,OAEA,IAAAkO,EAAAzU,EAAA4J,aAAA,YAGA,QAAArM,WAAAqC,KAAA0H,KAAAf,GAAAkO,GAEA,YADAtO,QAAAQ,MAAA,uCAAAJ,EAAA,OAAAkO,EAAA,MAIAzU,EAAA,cAAAyU,EACAzU,EAAA,YAAAuG,EACAvG,EAAAoM,aAAA,aAAA,IACApM,EAAA0U,gBAAA,YAGA,UAAA1U,EAAAyE,SAAA,aAAAzE,EAAAyE,QACA9E,EAAAiB,GAAAZ,EAAA,QAAAuU,oBAGA5U,EAAAiB,GAAAZ,EAAA,SAAAuU,sBAIAI,oBAAA,EAiEA,SAAAC,eAAA5U,GAEA,IADA,IAAAsN,EAAA3N,EAAA,kBAAAK,GACA3B,EAAA,EAAAA,EAAAiP,EAAAvO,OAAAV,IACAwW,mBAAAvH,EAAAjP,GAAAuL,aAAA,mBAGA,IAAA5J,EAAA8U,aAAA,kBAGAD,mBAAA7U,EAAA4J,aAAA,kBAzEAhK,KAAAsH,KAAA,SAAA6I,EAAAgF,GACA,IAAAJ,oBAAA5E,EAAA,CACA4E,oBAAA,EACA/R,WAAA,WACA+R,oBAAA,GACA,IAEA5E,IAAAA,EAAAvS,SAAAuG,MACAnE,KAAAoV,gBAAAD,GAAAnV,KAAA4G,gBAAAuJ,GAAAgF,GACAP,UAAAzE,GAGA,IADA,IAAAzC,EAAA3N,EAAA,mBAAAoQ,GACA1R,EAAA,EAAAA,EAAAiP,EAAAvO,OAAAV,IAAA,CACA,IAAA2B,EAAAsN,EAAAjP,GACA2B,EAAAG,cAKA,QAHA5C,IAAAwX,GACA/U,EAAAyC,UAAAE,OAAA,iBAEA3C,EAAAqE,WAAA5B,UAAA4N,SAAA,mBAAA,CACA,IAAA4E,EAAAzX,SAAAuF,cAAA/C,EAAAyE,SACAwQ,EAAAxS,UAAAC,IAAA,kBACA,IAAAqP,EAAAkD,EAAAhK,WAAA,GAEAgK,EAAAxS,UAAAC,IAAA,WAEA1C,EAAAqE,WAAA2N,sBAAA,aAAAiD,GAEAlD,EAAAtP,UAAAC,IAAA,SAEA1C,EAAAqE,WAAA2N,sBAAA,YAAAD,GAGA,IAAAmD,EAAA7X,OAAA8X,iBAAAnV,GACAoV,EAAAC,WAAAH,EAAA,WAAAG,WAAAH,EAAA,cACAA,EAAA,KAGAE,EAAAE,KAAAC,KAAAvV,EAAAwV,aAAAJ,GAGA,IAAAK,EAAAzV,EAAA0V,mBACA,OAAAD,GAAAzV,IAAAyV,IACAA,GAAA,GAEA,IAAAE,EAAA3V,EAAA2J,uBACA,OAAAgM,GAAA3V,IAAA2V,IACAA,GAAA,GAEA,IAAAtN,EAAArI,EAAA4J,aAAA,kBACA5J,EAAA0U,gBAAA,kBACA,IAAAzN,EAAA7J,GAAA6J,WAAA4C,UAAA7J,GAGA,GAAA,2BAAAuE,KAAAvE,EAAA8I,WACA,KAAA,yCAEAgL,WAAA7M,EAAAjH,EAAAqI,EAAA0H,EAAA/P,EAAAqE,YACArE,EAAA2C,YAkBAvF,GAAA,WACA,IAAAwY,EAAA,SAAAC,GACA,IAAApR,EAAAoR,EAAAC,SACA,SAAArR,GAAA,UAAAA,GAAA,aAAAA,GAEAmQ,eAAAiB,IAGA,GAAA,mBAAAE,kBAAAA,iBAAA3O,UAAA4O,QAAA,CACA,IAAAC,EAAA,SAAAC,GACAA,EAAAC,aAAA5G,QAAAqG,IAGA,IAAAG,iBAAA,SAAAK,GACA3O,gBACA2O,EAAA7G,QAAA0G,KAGAD,QAAAxY,SAAAuG,KAAA,CAAAsS,WAAA,EAAAC,SAAA,SAGA9Y,SAAAuG,KAAA5C,iBAAA,iBAAA,SAAAuD,GACA+C,gBACAmO,EAAAlR,EAAAxD,YAKA,IAAA2T,mBAAA,SAAAhL,GACA,IAAApI,EAAA7B,KAAA0H,KAAAuC,GACA,QAAAtM,IAAAkE,EAAA,CAGA,IAAA8U,EAAA9U,EAAAyS,aACA5G,EAAA,KACA,IAAA,IAAArP,KAAAsY,EAGA,UAFAA,EAAAtY,QAEAV,IAAAkE,EAAAxD,IAAA,OAAAwD,EAAAxD,GAAA,CAGA,GAAAwD,EAAAxD,GAAAP,cAAA+B,QACAgC,EAAAxD,GAAAP,cAAA8Y,QACA/U,EAAAxD,GAAAP,cAAA+Y,aAGA,CAAA,GAAAhV,EAAAxD,GAAAP,cAAAsP,MAWA,SAVAvL,EAAAxD,GAAA6L,WACArI,EAAAxD,GAAA6L,SAAA4M,iBACAjV,EAAAxD,GAAA6L,UAIAwD,EAAA7L,EAAAxD,GAAA0D,OAAA,iBACAF,EAAAxD,GACAwD,EAAAxD,GAAAqP,EAIA,QAAA/P,IAAAkB,OAAAkY,yBAAAlV,EAAAxD,GAAA,CAIAqP,EAAA7L,EAAAxD,UACAwD,EAAAxD,GACAwD,EAAAxD,GAAAqP,MAIAsJ,UAAA,eACAC,WAAA,SAAA7W,EAAAmK,EAAA2F,EAAAgH,GACA9W,aAAA+W,OACA/W,EAAAA,EAAA,IAGA0H,kBAAA1H,EAGAA,EAAAoM,aAAA,cAAA0D,GACA,IAAAjG,EAAAzM,GAAA6J,WAAA4C,UAAA7J,GAGA,GAAA,SAAA8W,IAAAA,EAGA,IAFA,IAAAE,EAAA,GAEA3Y,EAAA,EAAAA,EAAA2B,EAAAgM,WAAAjN,OAAAV,IAAA,CACA,IAAA4Y,EAAAjX,EAAAgM,WAAA3N,GAAA4L,MAGA,IAAA2M,UAAArS,KAAAvE,EAAA4J,aAAAqN,MAGAD,EAAAC,GAAAjX,EAAA4J,aAAAqN,GACAjX,EAAA0U,gBAAAuC,IAKA,GAAA,SAAAH,IAAAA,EACA,IAAAI,EAAAlX,EAAAiL,WAAA,GAAAkM,UAEA,IAAAC,EAAA,WACA,GAAA,SAAAN,IAAAA,EACA,IAAA,IAAA7M,KAAA+M,EACA,IAAA,IAAAA,EAAA/M,GAAAzG,QAAAsM,GAAA,CAGA,IAAAxC,EAAAK,WAAAqJ,EAAA/M,GAAAE,GAAA,EAAAN,GACA,UAAAI,EACAjK,EAAAxB,MAAA8O,EAEAtN,EAAAoM,aAAAnC,EAAAqD,GACA,MAIA,GAAA,SAAAwJ,IAAAA,EAAA,CACAxJ,EAAAoB,iBAAAwI,EAAA/M,GAAA,EAAAN,GACAyD,EAAAK,WAAAL,EAAAnD,GAAA,EAAAN,GACA7J,EAAAyD,YAAA,GACAzD,EAAA0D,mBAAA,aAAA4J,KAIA,QAAA/P,IAAA4M,EAAA2F,GACA,KAAA,aAAAA,EAAA,uBAAAjG,EAAA,UAMA,QAHAtM,IAAA4M,EAAA+J,cACAC,uBAAAhK,QAEA5M,IAAA4M,EAAA+J,aAAApE,GAAA,CAKA,IAAAuH,EAAAlN,EAAA2F,GACArR,OAAAC,eAAAyL,EAAA2F,EAAA,CACAnR,YAAA,EACAC,cAAA,EACAwV,IAAA,WACA,OAAAiD,GAEAhD,IAAA,SAAA7E,GACA6H,EAAA7H,EAGA,IADA,IAAA/N,EAAA0I,EAAA+J,aAAApE,GACAzR,EAAA,EAAAA,EAAAoD,EAAA1C,OAAAV,IACAoD,EAAApD,KAGA,OAAAgZ,KAIAlN,EAAA+J,aAAApE,GAAA,CAAAsH,QAvBAjN,EAAA+J,aAAApE,GAAApP,KAAA0W,IA0BAxX,KAAA0X,YAAA,SAAAtX,EAAA8W,GACA,IAAAjN,EAAAzM,GAAA6J,WAAA4C,UAAA7J,GACAuG,EAAA3G,KAAA0H,KAAAuC,GACA,IAAAtD,EAAA,OAAAJ,QAAAQ,MAAA,aAAAkD,EAAA,gCAAA7J,GAEA,IAAAqD,EAAArD,EAAA8I,UAGA,GAAA,2BAAAvE,KAAAlB,GACA8C,QAAAQ,MAAA,8CADA,CAKA,SAAAmQ,IACAzT,EAAAA,EAAA0E,QAAA/H,EAAAmX,UAAA,KAMA,IAJA,IAAAI,EAAA,kBAGAxJ,EAAAnO,KAAAsK,UAAA3D,GACAlI,EAAA0P,EAAAhP,OAAA,EAAAV,GAAA,EAAAA,IACAkI,EAAAwH,EAAA1P,cAAAV,UACAoQ,EAAApM,OAAAtD,EAAA,GAKA,IAFA,IACAgR,EADArB,EAAAhG,OAAA5K,GAAA6B,MAAAG,UAAA,IAAA2O,EAAA,IAAA3Q,GAAA6B,MAAAE,YAAA,MAAA,KACAqY,EAAA,KACA,QAAAnI,EAAAkI,EAAA3O,KAAAvF,KACA,KAAA,QAAAmU,EAAAxJ,EAAApF,KAAAyG,EAAA,MACAwH,WAAA7W,EAAAuG,EAAAiR,EAAA,GAAAV,KAKAlX,KAAAqU,kBAAA,SAAAlE,EAAAnC,EAAA3D,GACA,IAAAwN,EAAA1H,EAAAjH,UAGA2O,EAAAA,EAAAjW,MAAA,IAAAoM,GAAAjJ,KAAA,WAIA,IAAAuJ,GADAuJ,EAAA/I,iBAAA+I,EAAA,KAAA7J,EAAA3D,EAAA,YACA,GACAzB,EAAAiP,EAAA,GACAA,EAAA9J,WAAA8J,EAAA,GAAA,KAAA7J,EAAA3D,EAAA,UAAAiE,GAwDAuJ,EAAA9X,EAAAH,aAAAiY,GAAA,GACA,IAAA5B,EAAAjW,KAAA4G,gBAAAiR,GAAA,GAAAC,UACAC,EAAA,GAEA,SAAAC,EAAAC,GAIA,IAHA,IAAAb,EAAAa,EAAA7L,WACA5B,EAAA,GACA0N,EAAA,EACA7L,EAAA,EAAAA,EAAA+K,EAAAjY,OAAAkN,IAAA,CACA,IAAAkB,EAAA6J,EAAA/K,GAAAzN,MAAAgD,MAAA,QACA,GAAA,IAAA2L,EAAApO,OAAA,CACA,IAAAd,EAAA,CACAgM,KAAA+M,EAAA/K,GAAAhC,KACAzL,MAAAwY,EAAA/K,GAAAzN,OAGAsZ,EAAA,GAMA,MALA3K,EAAA6J,EAAA/K,GAAAzN,MAAAuJ,QAAA,gBAAA,SAAA2D,EAAAC,GAEA,OADAmM,EAAApX,KAAA8V,OAAA7K,IACA,OAGA,IAAAmM,EAAA/Y,OACAd,EAAAwN,OAAAqM,EAAA,GAEA7Z,EAAA6N,YAAAgM,EAEA1N,EAAA1J,KAAAzC,IAGA,OAAAmM,EAGA,IAAAV,EAAAkO,EAAAH,GACA,IAAA/N,EAAA3K,QACA4Y,EAAAjX,KAAA,CACA6K,SAAA,EACAD,QAAA,CAAA,GACAU,WAAAtC,IAGA,IAAA,IAAArL,EAAA,EAAAA,EAAAwX,EAAA9W,OAAAV,IAAA,CACA,IAAAiP,EAAA,CACA/B,SAAAsK,EAAAxX,GAAAkN,UAGA,GAAA,IAAA+B,EAAA/B,SACA+B,EAAAtB,WAAA4L,EAAA/B,EAAAxX,IACAiP,EAAAhC,QAAA3L,EAAAsE,YAAA4R,EAAAxX,IAAA,QAGA,GAAA,IAAAiP,EAAA/B,SAAA,CACA,IAAA4L,EAAAtB,EAAAxX,GAAAoF,YACAqU,EAAA,GAOA,GALAX,EAAApP,QAAA,kBAAA,SAAA2D,EAAAC,GACAmM,EAAApX,KAAA8V,OAAA7K,MAIA,IAAAmM,EAAA/Y,OAAA,CACAoY,EAAAA,EAAA3V,MAAA,iBACA,IAAA,IAAAyK,EAAA,EAAAA,EAAAkL,EAAApY,OAAAkN,IACAkL,EAAAlL,GAAAtE,gBAAAwP,EAAAlL,IAAAnE,OAEA+N,EAAAxX,GAAAoF,YAAA0T,EAAAxH,QAEA,IAAA5P,EAAA8V,EAAAxX,GAAAgG,WACA7D,EAAAqV,EAAAxX,GAAAmC,YAGAuX,EAAA,KACA,IAAAD,EAAA/Y,QAAA,IAAA8W,EAAAxX,GAAAoF,YAAA1E,OACAgZ,EAAApY,EAAAsE,YAAA4R,EAAAxX,IAAA,GACA,OAAAwX,EAAAxX,GAAAoC,kBACAsX,EAAApY,EAAAsE,YAAA4R,EAAAxX,GAAAoC,iBAAA,IAGA,IAAAuX,EAAA,GACA,IAAA/L,EAAA,EAAAA,EAAA6L,EAAA/Y,OAAAkN,IAAA,CACA,IAAAgM,EAAAza,SAAA0a,cAAA,IASA,GARAnY,EAAAwM,aAAA0L,EAAAzX,GACAwX,EAAAtX,KAAA,CACA6K,UAAA,EACAO,YAAAgM,EAAA7L,GACAF,UAAAgM,EACAzM,QAAA3L,EAAAsE,YAAAgU,GAAA,KAGAd,EAAAlL,GAAA,CACA,IAAAkM,EAAA3a,SAAA4a,eAAAjB,EAAAlL,IACAlM,EAAAwM,aAAA4L,EAAA3X,GAGAyL,EAAA,EAAA6L,EAAA/Y,SACAgZ,EAAApY,EAAAsE,YAAAkU,GAAA,KAMA,GADAnL,MAAA5F,UAAA1G,KAAA5C,MAAA6Z,EAAAK,GACA,KAAAnC,EAAAxX,GAAAoF,YAAA,CACAoS,EAAAxX,GAAAsE,SACA,IAAAsJ,EAAA,EAAAA,EAAA+L,EAAAjZ,OAAAkN,IAAA,CACA,IAAAxK,EAAAuW,EAAA/L,GAAAX,QACA7J,EAAAA,EAAA1C,OAAA,KAEA,SAEA,IAAA,IAAA8W,EAAAxX,GAAAoF,YAAA4U,OAAA,cACA,SAIAP,EAAA,GAMA,MALAX,EAAAtB,EAAAxX,GAAAoF,YAAAsE,QAAA,iBAAA,SAAA2D,EAAAC,GAEA,OADAmM,EAAApX,KAAA8V,OAAA7K,IACA,OAGA,IAAAmM,EAAA/Y,OACAuO,EAAA7B,OAAAqM,EAAA,IAEAxK,EAAA9O,MAAAqX,EAAAxX,GAAAoF,YACA6J,EAAAxB,YAAAgM,GAGAxK,EAAAhC,QAAA3L,EAAAsE,YAAA4R,EAAAxX,IAAA,GAGAsZ,EAAAjX,KAAA4M,GAGA,IAAAR,EA3LA,WAIA,IAHA,IAAAwL,EAAAtQ,OAAA,iBAAA4F,EAAA,wCAAA,KACAT,EAAA,GAEA9O,EAAA,EAAAA,EAAA6P,EAAAnP,OAAAV,IAAA,CACA,IAAAgN,EAAA6C,EAAA7P,GAGA,GAAA,IAAAgN,EAAArF,KAAA,CAcA,GAAA,IAAAqF,EAAArF,KAAA,CACA,IAAAuS,EAAAlN,EAAAP,GAAAnG,KAAA,KAEA,OAAA0G,EAAA7B,YACA+O,GAAA,IAAAlN,EAAA7B,WAEA,IAAA,IAAAyC,EAAA,EAAAA,EAAAZ,EAAA9B,OAAAxK,OAAAkN,IACAsM,GAAAlN,EAAA9B,OAAA0C,GAAAtH,KAAA,UAGA,IAAA0G,EAAArF,OACAuS,EAAAlN,EAAAR,KAAA,KAEA0N,EAAAA,EAAAxQ,QAAA,kDAAA,SAAA2D,EAAAC,GACA,OAAAnD,EAAAmD,MAGAnK,MAAA,KAAAmD,KAAA,KAAAoD,QAAAuQ,EAAA,SAAA5M,EAAAC,GACAA,EAAAA,EAAA5D,QAAA,eAAA,SAAAyQ,EAAAC,GACA,MAAA,IAAAA,SAGAlb,IAAA4P,EAAAxB,GAAAwB,EAAAxB,GAAA,CAAAtN,IACA,IAAA8O,EAAAxB,GAAAnI,QAAAnF,IACA8O,EAAAxB,GAAAjL,KAAArC,UArCAgN,EAAAR,KAAA,GAAArJ,MAAA,KAAAmD,KAAA,KAAAoD,QAAAuQ,EAAA,SAAA5M,EAAAC,GACAA,EAAAA,EAAA5D,QAAA,eAAA,SAAAyQ,EAAAC,GACA,MAAA,IAAAA,SAGAlb,IAAA4P,EAAAxB,GAAAwB,EAAAxB,GAAA,CAAAtN,IACA,IAAA8O,EAAAxB,GAAAnI,QAAAnF,IACA8O,EAAAxB,GAAAjL,KAAArC,KAkCA,OAAA8O,EAyIAuL,GACAtO,EAAA3L,OAAA2L,KAAA0C,GACA6L,EAAA,GACA,IAAAta,EAAA,EAAAA,EAAA+L,EAAArL,OAAAV,IACAsa,EAAAjY,KAAA,CAAA0J,EAAA/L,GAAA+L,EAAA/L,GAAAmD,MAAA,OAGA,MAAA,CACA6B,KAAAoU,EACA/M,MAAAwD,EACAhD,UAAAyM,EACA7K,eAAAA,EACAH,eAAAgM,IAIA,IAAAC,SAAA,CAAA,OAAA,OAAA,QAAA,OAAA,OAAA,SAAA,SAAA,UAmGA,SAAAzE,uBAAAhK,QACA5M,IAAA4M,EAAA+J,cAIAzV,OAAAC,eAAAyL,EAAA,eAAA,CACAvL,cAAA,EACAD,YAAA,EACAka,UAAA,EACAra,MAAA,KA3GAoB,KAAA4G,gBAAA,SAAAuJ,EAAA+I,GAIA,IAHA,IAAAjU,GAAAkL,GAAAvS,SAAAuG,MAAAc,WAEAyI,EAAA,GACAjP,EAAAwG,EAAA9F,OAAA,EAAAV,GAAA,EAAAA,IAAA,CACA,IAAAwZ,EAAAhT,EAAAxG,GAEA,QAAAd,IAAAub,IAAA,IAAAF,SAAApV,QAAAqU,EAAA/B,UAGA,GAAA,IAAA+B,EAAAtM,SAAA,CACA,IAAAyL,EAAAa,EAAA7L,WAGA,GAAAgL,EAAA,gBAAAA,EAAA,mBAAAA,EAAA,gBAAA,SAEA,IAAA,IAAA/K,EAAA,EAAAA,EAAA+K,EAAAjY,OAAAkN,KACA,IAAA+K,EAAA/K,GAAAzN,MAAAgF,QAAA,aACAjG,IAAAub,GACAjB,EAAAzL,aAAA,gBAAA,YACAkB,EAAA5M,KAAAmX,IAIA7K,MAAA5F,UAAA1G,KAAA5C,MAAAwP,EAAA1N,KAAA4G,gBAAAqR,EAAAiB,SAGA,GAAA,IAAAjB,EAAAtM,SAAA,CAGA,GAFAsM,EAAApU,YAAAoU,EAAApU,YAEA,IAAAoU,EAAApU,YAAA1E,OAAA,CACA8Y,EAAAlV,SACA,SAGA,IAAA,IAAAkV,EAAAkB,UAAAvV,QAAA,MAAA,CACA,QAAAjG,IAAAub,EAAA,CACAjB,EAAAxT,WAAA+H,aAAA,gBAAA,IAGA,IAAAH,EAAA,EAAAA,EAAAqB,EAAAvO,OAAAkN,IACAqB,EAAArB,GAAAyI,gBAAA,iBAGApH,EAAA5M,KAAAmX,EAAAxT,YACA,MAGAiJ,EAAA5M,KAAAmX,KAKA,OAAAvK,GAGA1N,KAAAoV,gBAAA,SAAAa,EAAAd,GACA,IAAA,IAAA9I,EAAA,EAAAA,EAAA4J,EAAA9W,OAAAkN,IAAA,CAEA,IAAAZ,EAAA3D,kBAAAmO,EAAA5J,GAEA1F,EAAAnJ,GAAA6J,WAAA4C,UAAAwB,GACAA,EAAAqJ,gBAAA,sBAEAnX,IAAAwX,GACA1J,EAAA5I,UAAAE,OAAA,iBAEA,IAAAwH,EAAAvK,KAAA0H,KAAAf,GAQA,GANA4D,IACAA,EAAA6O,MAAAzS,IAKA,2BAAAhC,KAAA8G,EAAA8L,WAGA,OAFAhR,QAAAQ,MAAA,+CACAR,QAAA0C,IAAAnB,kBAAAuD,WAAA,IAIAI,EAAAyJ,aAAA,YACAlV,KAAA0X,YAAAjM,EAAAA,EAAAzB,aAAA,YAGA,IAAA0D,EAAAoB,iBAAArD,EAAA8L,UAAAhN,GAAA,EAAA5D,GACA8E,EAAA8L,UAAAxJ,WAAAL,EAAAnD,GAAA,EAAA5D,GAGA,IADA,IAAAyQ,EAAAnB,EAAA5J,GAAAD,WACA3N,EAAA,EAAAA,EAAA2Y,EAAAjY,OAAAV,IACA,IAAA,IAAA2Y,EAAA3Y,GAAAG,MAAAgF,QAAA,MAAA,CACA,IAAAyT,EAAAD,EAAA3Y,GACA4Y,EAAAzY,MAAAmP,WAAAsJ,EAAAzY,MAAA2L,GAAA,EAAA5D,MAv6DA,GCVA,mBAAA9H,OAAA2O,QACA3O,OAAAC,eAAAD,OAAA,SAAA,CACAD,MAAA,SAAA0C,EAAA+X,GAEA,GAAA,MAAA/X,EACA,MAAA,IAAAgY,UAAA,8CAEA,IADA,IAAA1G,EAAA/T,OAAAyC,GACAuI,EAAA,EAAAA,EAAAhM,UAAAsB,OAAA0K,IAAA,CACA,IAAA0P,EAAA1b,UAAAgM,GACA,GAAA,MAAA0P,EACA,IAAA,IAAAC,KAAAD,EACA1a,OAAA2I,UAAAiS,eAAAC,KAAAH,EAAAC,KACA5G,EAAA4G,GAAAD,EAAAC,IAIA,OAAA5G,GAEAqG,UAAA,EACAja,cAAA,SAIArB,IAAAgc,QAAAnS,UAAAzE,aAAApF,IAAAic,cAAApS,UAAAzE,aAAApF,IAAAkc,aAAArS,UAAAzE,QAgBA,CAAA4W,QAAAnS,UAAAoS,cAAApS,UAAAqS,aAAArS,WAdAmI,QAAA,SAAA5L,GACAA,EAAA0V,eAAA,WAGA5a,OAAAC,eAAAiF,EAAA,SAAA,CACA/E,cAAA,EACAD,YAAA,EACAka,UAAA,EACAra,MAAA,WACA,OAAAlB,KAAA+G,YACA/G,KAAA+G,WAAAqV,YAAApc,WAOAic,QAAAnS,UAAAlH,UACAqZ,QAAAnS,UAAAlH,QAAAqZ,QAAA,UAAAI,iBACAJ,QAAA,UAAAK,oBAAAL,QAAA,UAAAM,mBACAN,QAAA,UAAAO,kBAAAP,QAAA,UAAAQ,uBACA,SAAArU,GAGA,IAFA,IAAAxF,GAAA5C,KAAAE,UAAAF,KAAA0c,eAAAta,iBAAAgG,GACArH,EAAA6B,EAAAnB,SACAV,GAAA,GAAA6B,EAAAyD,KAAAtF,KAAAf,OACA,OAAAe,GAAA,IAIA4b,SAAA7S,UAAAmI,UACA0K,SAAA7S,UAAAmI,QAAA,SAAAzO,EAAAoZ,GACAA,EAAAA,GAAA7c,OACA,IAAA,IAAAgB,EAAA,EAAAA,EAAAf,KAAAyB,OAAAV,IACAyC,EAAAwY,KAAAY,EAAA5c,KAAAe,GAAAA,EAAAf,QAKAD,OAAA8c,SAAAC,SACA/c,OAAA8c,SAAAC,OAAA/c,OAAA8c,SAAAE,SAAA,KAAAhd,OAAA8c,SAAAG,UAAAjd,OAAA8c,SAAAI,KAAA,IAAAld,OAAA8c,SAAAI,KAAA,KChEAnd,GAAA6J,WAAA,IAAA,WACA,IAAArH,KAAAtC,KACAsC,KAAA2H,QAAA,GACA3H,KAAA4a,OAAA,GAEA5a,KAAAoK,IAAA,SAAAC,EAAA3E,GACA1F,KAAA2H,QAAA0C,GAAA3E,GAGA1F,KAAA6a,WAAA,SAAAza,EAAAsF,GACA,IAAAiB,EAAAnJ,GAAA6J,WAAA4C,UAAA7J,GAEA,IAAAuG,EACA,KAAA,oCAEA,IAAAmU,EAAA1a,EAAA4J,aAAA,gBACA,GAAA8Q,EAKA,IAAAC,EAAA3a,OAHA,QADA2a,EAAAhb,EAAAI,OAAAC,EAAA,qBAEA0a,EAAAC,EAAA/Q,aAAA,iBAIA,IAAA8Q,EACA,OAAApV,EAAAA,EAAAlI,GAAAmJ,MAAAe,KAAAf,IAAA,GACAnJ,GAAAmJ,MAAAe,KAAAf,GAIA,IAAAqU,EAAA,EAIA,OAHAF,IACAE,EAAAjb,EAAAS,QAAAua,EAAA,kBAAA5b,QAEAuG,EAAAA,EAAAlI,GAAAmJ,MAAAe,KAAAf,GAAAmU,GAAAE,GACAxd,GAAAmJ,MAAAe,KAAAf,GAAAmU,GAAAE,IAGAhb,KAAAiK,UAAA,SAAA7J,GACA,IAAAiK,OAAA1M,EAUA,YAHAA,KALA0M,EADAjK,EAAA8U,aAAA,iBACA9U,EAAA4J,aAAA,iBAEAjK,EAAAI,OAAAC,EAAA,mBAAA4J,aAAA,mBAGAhK,KAAA4a,OAAAvQ,IACArK,KAAA4H,IAAAyC,GAEAA,GAGA,IAAA4Q,cAAA,SAAAnW,GACA,IAAA1E,QAAA0E,EAAAxD,OACAmH,OAAArI,QAAA4J,aAAA,YAEAvB,SACArI,QAAAL,EAAAI,OAAAC,QAAA,cACAqI,OAAArI,QAAA4J,aAAA,aAGA,IAAArD,MAAA5G,EAAAI,OAAAC,QAAA,mBAAA4J,aAAA,iBAEA,IAAAxM,GAAAmJ,MAAAe,KAAAf,OACA,KAAA,2BAAAA,MAAA,iCAEA,IAAAgC,YAAAnL,GAAAmJ,MAAAe,KAAAf,OAEA2D,UAAA9M,GAAAmJ,MAAA2D,UAAA3B,aACAyF,UAAAhG,OAAA5K,GAAA6B,MAAAG,UAAA,IAAA8K,UAAA,IAAA9M,GAAA6B,MAAAE,YAAA,MAAA,KAEAkJ,OAAAA,OAAAN,QAAAiG,UAAA,SAAAtC,EAAA4C,GACA,MAAA,eAAAA,IAGAjG,OAAAA,OAAA7G,MAAA,KAEA,IAAAuS,OAAA1L,OAAA,GACAyS,QAAA/G,OAGA,IACAA,OAAA9K,KAAA8K,QACA,MAAArP,GACAqP,QAAA,EAGA,GAAAA,OAAA,CAMA1L,OAAAsH,QACAtH,OAAAA,OAAA1D,KAAA,KACA0D,OAAAA,OAAA7G,MAAA,KACA6G,OAAAqH,MACArH,OAAAA,OAAA1D,KAAA,KAGA,IAAA0D,OAAAtJ,SAEAsJ,OAAAY,MAAA,IAAAZ,OAAA,KAAAN,QAAA,gBAAA,SAAAoF,GACA,OAAAA,EAAA,GAAA,cAGA9E,SACAA,OAAA,IAEA,IACA0L,OAAAjW,MAAAkC,QAAAqI,QACA3D,EAAAqW,iBACA,MAAArW,GACAyB,QAAAQ,MAAA,gCAAAJ,MAAA,KAAAvG,QAAA,KAAA0E,SAzBAyB,QAAAQ,MAAA,gCAAAJ,MAAA,kBAAAuU,QAAA,OAAA9a,UA6BAJ,KAAA4H,IAAA,SAAAyC,EAAA3E,GACA,IAAAlI,GAAAQ,OAAAoH,aACA,OAAA5H,GAAA,WACAwC,KAAA4H,IAAAyC,EAAA3E,KAGA1F,KAAA2H,QAAA0C,KACA7M,GAAAmJ,MAAAe,KAAA2C,KACA7M,GAAAmJ,MAAAe,KAAA2C,GAAA,IAEArK,KAAA2H,QAAA0C,GAAA7M,GAAAmJ,MAAAe,KAAA2C,GAAA+O,OACApZ,KAAA4a,OAAAvQ,IAAA,SACArK,KAAA2H,QAAA0C,IAGA3E,GACAA,EAAAlI,GAAAmJ,MAAAe,KAAA2C,GAAA+O,QAGApZ,KAAAsH,KAAA,SAAAnH,GACA,IAAA3C,GAAAQ,OAAAoH,aACA,OAAA5H,GAAA,WACAwC,KAAAsH,KAAA+C,QAIA,IADA,IAAAqD,EAAA3N,EAAA,kBAAAI,GAAAvC,SAAAuG,MACA1F,EAAA,EAAAA,EAAAiP,EAAAvO,OAAAV,IACAuB,KAAA4H,IAAA8F,EAAAjP,GAAAuL,aAAA,mBAKApM,SAAA2D,iBAAA,mBAAA,WACAxB,EAAAiB,GAAApD,SAAAuG,KAAA,QAAA,aAAA8W,gBACA,CAAAzZ,SAAA,EAAAL,MAAA,KAGA,IAAAiY,MAAA,SAAA3R,GAOA,OANAjK,GAAAmJ,MAAAe,KAAAD,KACAjK,GAAAmJ,MAAAe,KAAAD,GAAA,IAEAjK,GAAAmJ,MAAAe,KAAAD,IACAjK,GAAA6J,WAAAO,IAAAH,GAEAjK,GAAAmJ,MAAAe,KAAAD,IC5JA2T,QAAA,GACAC,cAAA,EACA,SAAAC,QAAAC,GACA,IAAAC,EAAA3c,OAAA2O,OAAA,GAAA4N,SACA,uEAAAxZ,MAAA,KAAA+N,QAAA,SAAA8L,UACAD,EAAAC,KAEA,IAAAC,EAAA7c,OAAA2O,OAAA,CACAmO,IAAAle,OAAA8c,SAAAqB,WACAzH,OAAA,MACAlJ,MAAA,EACA5E,OAAA,EACAyG,OAAA,EACA+O,KAAA,GACAC,SAAA,GACAC,QAAA,GACAC,UAAA,GACAC,WAAA,GACAC,aAAA,EACAC,SAAA,OACAC,YAAA,oCACAC,QAAA,GACAb,GACA5K,EAAA/R,OAAA2O,OAAA,GAAAkO,EAAAH,GAGA,SAAAe,EAAAb,GAEA,IADA,IAcAc,EACAC,EAfAvR,EAAA,GACAwR,EAAA,EAAAA,EAAA5e,UAAAsB,OAAAsd,IACAxR,EAAAwR,EAAA,GAAA5e,UAAA4e,GAwBA,OAVArB,QAAAK,KACAc,EAAAnB,QAAAK,GAAAvd,MAAAkd,QAAAnQ,IAEA2F,EAAA6K,KACAe,EAAA5L,EAAA6K,GAAAvd,MAAA0S,EAAA3F,IAEA,kBAAAsR,IACAA,GAAA,GACA,kBAAAC,IACAA,GAAA,GACAD,GAAAC,EAIA,IAAA,IADAF,EAAA,eAAA1L,GACA,CAGAA,EAAAxK,OACAwK,EAAAuD,OAAAvD,EAAAxK,MAEA,IAAAsW,EAAA9L,EAAA+K,IAAA/X,QAAA,MAAA,EAAA,IAAA,IAEAuQ,EAAAvD,EAAAuD,OAAAwI,cAEA,IAAA,QAAAxI,GAAA,SAAAA,GAAA,YAAAA,GAAA,WAAAA,IAAAvD,EAAA3F,KAAA,CACA,IAAA2R,OAAA,GAIAA,EAHA,iBAAAhM,EAAA3F,KAEA2F,EAAA3F,KAAArH,QAAA,MAAA,EACAgN,EAAA3F,KAAArJ,MAAA,KAAA,GAEAgP,EAAA3F,KAIA4R,eAAAjM,EAAA3F,OAEA9L,SACAyR,EAAA+K,KAAAe,EAAAE,EACA,MAAAF,IACAA,EAAA,MAIA,GAAA,SAAA9L,EAAAuL,UAAAvL,EAAA+K,IAAA/X,QAAA,cAAA,EAAA,CACA,IACAkZ,EADAC,EAAA,UAAAC,KAAAC,OAAA5B,eAAA,IAEA6B,EAAAtM,EAAA+K,IAAA/Z,MAAA,aACAub,EAAAD,EAAA,GAAA,YAAAH,EACA,GAAAG,EAAA,GAAAtZ,QAAA,MAAA,EAAA,CACA,IAAAwZ,EAAAF,EAAA,GAAAtb,MAAA,KAAAyb,OAAA,SAAAC,GAAA,OAAAA,EAAA1Z,QAAA,KAAA,IAAAmB,KAAA,KACAqY,EAAAje,OAAA,IACAge,GAAA,IAAAC,GAGA,IAAAG,EAAA3f,SAAAuF,cAAA,UAwBA,OAvBAoa,EAAAnX,KAAA,kBACAmX,EAAAC,QAAA,WACAlM,aAAAwL,GACAR,EAAA,QAAA,KAAA,eACAA,EAAA,WAAA,KAAA,gBAEAiB,EAAAjX,IAAA6W,EAEA1f,OAAAsf,GAAA,SAAA9R,GACAqG,aAAAwL,GACAR,EAAA,UAAArR,GACAsS,EAAA9Y,WAAAqV,YAAAyD,GACAA,EAAA,YACA9f,OAAAsf,IAEAnf,SAAAsC,cAAA,QAAAgG,YAAAqX,QACA3M,EAAAyL,QAAA,IACAS,EAAA9Z,WAAA,WACAua,EAAA9Y,WAAAqV,YAAAyD,GACAA,EAAA,KACAjB,EAAA,QAAA,KAAA,YACA1L,EAAAyL,WAKA,QAAAlI,GAAA,SAAAA,GAAA,YAAAA,GAAA,WAAAA,IACA,IAAAvD,EAAA9D,QACA8D,EAAA+K,KAAAe,EAAA,WAAAM,KAAAC,OAIA,IAAAQ,EAAA,IAAAC,eAMA,GAJAD,EAAAN,WAAAvM,EAAA+K,IACA8B,EAAAE,kBAAA/M,GAGA,IADA0L,EAAA,aAAAmB,EAAA7M,GAEA,OAAA6M,EAEAA,EAAAG,KAAAzJ,EAAAvD,EAAA+K,IAAA/K,EAAAvK,MAAAuK,EAAAiL,KAAAjL,EAAAkL,UAEA,IAyDA+B,EAzDAC,EAAA,KACA,IAAA,SAAA3J,GAAA,QAAAA,GAAA,UAAAA,IAAAvD,EAAA3F,KACA,GAAA2F,EAAAsL,YAGA,GAFA,CAAA6B,YAAAC,KAAAC,SAAAC,UAEAta,QAAAgN,EAAA3F,KAAAnN,cAAA,EACAggB,EAAAlN,EAAA3F,SAEA,CAEA,IAAAkT,EAAA,8BAAAnB,KAAAC,MAAArB,SAAA,IACA,wBAAAhL,EAAAwL,YACAqB,EAAAW,iBAAA,eAAA,iCAAAD,GAGAV,EAAAW,iBAAA,eAAAxN,EAAAwL,aAEA0B,EAAA,GACA,IAAA7S,EAAA4R,eAAAjM,EAAA3F,MACA,GAAA,wBAAA2F,EAAAwL,YAAA,CACAnR,EAAAA,EAAArJ,MAAA,KAEA,IADA,IAAAuL,EAAA,GACA1O,EAAA,EAAAA,EAAAwM,EAAA9L,OAAAV,GAAA,EACA0O,EAAArM,KAAA,yCAAAmK,EAAAxM,GAAAmD,MAAA,KAAA,GAAA,YAAAqJ,EAAAxM,GAAAmD,MAAA,KAAA,GAAA,QAEAkc,EAAA,KAAAK,EAAA,OAAAhR,EAAApI,KAAA,KAAAoZ,EAAA,QAAA,KAAAA,EAAA,cAGAL,EADA,qBAAAlN,EAAAwL,YACAhN,KAAAC,UAAAuB,EAAA3F,MAGAA,OAKA6S,EAAAlN,EAAA3F,KACAwS,EAAAW,iBAAA,eAAAxN,EAAAwL,aA8EA,OA1EAxL,EAAAmL,SACAld,OAAA2L,KAAAoG,EAAAmL,SAAApM,QAAA,SAAA0O,GACAZ,EAAAW,iBAAAC,EAAAzN,EAAAmL,QAAAsC,WAIA,IAAAzN,EAAA0N,cAEA1N,EAAA0N,YAAA,0BAAA3Z,KAAAiM,EAAA+K,MAAAvT,OAAAmW,KAAA9gB,OAAA8c,SAAAiE,MAEA5N,EAAA0N,aACAb,EAAAW,iBAAA,mBAAA,kBAEAxN,EAAAoL,WACAnd,OAAA2O,OAAAiQ,EAAA7M,EAAAoL,WAIAyB,EAAAgB,OAAA,WAGA,GAFAZ,GACAvM,aAAAuM,GACAJ,EAAAiB,QAAA,KAAAjB,EAAAiB,OAAA,KAAA,IAAAjB,EAAAiB,OAAA,CACA,IAAAC,OAAA,EACA,GAAA,SAAA/N,EAAAuL,SAAA,CACA,IAAAyC,OAAA,EACA,IACAD,EAAAvP,KAAAtE,MAAA2S,EAAAoB,cAEA,MAAAC,GACAF,GAAA,EAEAA,EAIAtC,EAAA,QAAAmB,EAAA,cAHAnB,EAAA,UAAAqC,EAAAlB,EAAAiB,OAAAjB,QAQAnB,EAAA,UADAqC,EAAA,SAAAlB,EAAAsB,cAAA,KAAAtB,EAAAsB,aAAAtB,EAAAoB,aAAApB,EAAAuB,SACAvB,EAAAiB,OAAAjB,QAIAnB,EAAA,QAAAmB,EAAAA,EAAAiB,QAEA9N,EAAAqL,aACAb,QAAAa,YAAAb,QAAAa,WAAAwB,EAAAiB,SACAtD,QAAAa,WAAAwB,EAAAiB,QAAAjB,GACA7M,EAAAqL,WAAAwB,EAAAiB,SACA9N,EAAAqL,WAAAwB,EAAAiB,QAAAjB,IAEAnB,EAAA,WAAAmB,EAAAA,EAAAiB,SAEAjB,EAAAD,QAAA,WACAK,GACAvM,aAAAuM,GACAvB,EAAA,QAAAmB,EAAAA,EAAAiB,QACApC,EAAA,WAAAmB,EAAA,UAGA7M,EAAAyL,QAAA,IACAoB,EAAAwB,QAAA,WACApB,GACAvM,aAAAuM,IAEAA,EAAA7a,WAAA,WACAya,EAAAyB,QACA5C,EAAA,QAAAmB,EAAA,WACAnB,EAAA,WAAAmB,EAAA,YACA7M,EAAAyL,WAIA,IADAC,EAAA,aAAAmB,EAAA7M,GAEA6M,GAEAA,EAAA0B,KAAArB,GAEAL,IAEA,SAAA2B,gBAAAjL,GAEA,IADA,IAAAkL,EAAA,GACA5C,EAAA,EAAAA,EAAA5e,UAAAsB,OAAAsd,IACA4C,EAAA5C,EAAA,GAAA5e,UAAA4e,GAEA,IAAA6C,EAAA,GAAA3D,EAAA2D,EAAA,GAAArU,EAAAqU,EAAA,GAAAC,EAAAD,EAAA,GAAAvY,EAAAuY,EAAA,GAAAnD,EAAAmD,EAAA,GACA,mBAAAD,EAAA,IACA1D,EAAA0D,EAAA,GAAAE,EAAAF,EAAA,GAAAtY,EAAAsY,EAAA,GAAAlD,EAAAkD,EAAA,KAGA1D,EAAA0D,EAAA,GAAApU,EAAAoU,EAAA,GAAAE,EAAAF,EAAA,GAAAtY,EAAAsY,EAAA,GAAAlD,EAAAkD,EAAA,IAEA,CAAAE,EAAAxY,GAAA4I,QAAA,SAAAzO,GACA,iBAAAA,IACAib,EAAAjb,EACAA,IAAAqe,EACAA,OAAA5hB,EAEAoJ,OAAApJ,KAIA,IAAA4d,EAAA,CACAI,IAAAA,EACAxH,OAAA,SAAAA,GAAA,aAAAA,EAAA,OAAA,MACAlJ,KAAAA,EACAsU,QAAAA,EACAxY,MAAAA,EACAoV,SAPAA,EAAAA,IAAA,SAAAhI,GAAA,aAAAA,EAAA,YAAAxW,IAiBA,MARA,aAAAwW,GACAtV,OAAA2O,OAAA+N,EAAA,CACAa,YAAA,mBACAF,aAAA,EACAoC,aAAA,EACArT,KAAA,iBAAAA,EAAAA,EAAAmE,KAAAC,UAAApE,KAGAqQ,QAAAC,GA6CA,SAAAsB,eAAA2C,EAAAC,GAEA,IADA,IAAAphB,EAAAQ,OAAA2L,KAAAgV,GACA/gB,EAAA,EAAAA,EAAAJ,EAAAc,OAAAV,IAAA,CACA,IAAAG,EAAA4gB,EAAAnhB,EAAAI,IACA+gB,EAAA1hB,cAAAsP,MACA/O,EAAAI,IAAAghB,EAAA,KACAD,EAAA1hB,cAAAe,SACAR,EAAAI,GAAAghB,EAAAA,EAAA,IAAAphB,EAAAI,GAAA,IAAAJ,EAAAI,IAGAJ,EAAAI,GADA,iBAAAG,EACAie,eAAAje,EAAAP,EAAAI,IAEAJ,EAAAI,GAAA,IAAAihB,mBAAA9gB,GAEA,OAAAP,EAAA0G,KAAA,KC9WA,ODqTAlG,OAAA2O,OAAA8N,QAAA,CACA9G,IAAA,WAEA,IADA,IAAA6K,EAAA,GACA5C,EAAA,EAAAA,EAAA5e,UAAAsB,OAAAsd,IACA4C,EAAA5C,GAAA5e,UAAA4e,GAEA,OAAA2C,gBAAAlhB,WAAA,EAAA,CAAA,OAAAyhB,OAAAN,KAEAO,KAAA,WAEA,IADA,IAAAP,EAAA,GACA5C,EAAA,EAAAA,EAAA5e,UAAAsB,OAAAsd,IACA4C,EAAA5C,GAAA5e,UAAA4e,GAEA,OAAA2C,gBAAAlhB,WAAA,EAAA,CAAA,QAAAyhB,OAAAN,KAEAQ,KAAA,WAEA,IADA,IAAAR,EAAA,GACA5C,EAAA,EAAAA,EAAA5e,UAAAsB,OAAAsd,IACA4C,EAAA5C,GAAA5e,UAAA4e,GAEA,OAAA2C,gBAAAlhB,WAAA,EAAA,CAAA,QAAAyhB,OAAAN,KAEAS,QAAA,WAEA,IADA,IAAAT,EAAA,GACA5C,EAAA,EAAAA,EAAA5e,UAAAsB,OAAAsd,IACA4C,EAAA5C,GAAA5e,UAAA4e,GAEA,OAAA2C,gBAAAlhB,WAAA,EAAA,CAAA,QAAAyhB,OAAAN,KAEAU,SAAA,WAEA,IADA,IAAAV,EAAA,GACA5C,EAAA,EAAAA,EAAA5e,UAAAsB,OAAAsd,IACA4C,EAAA5C,GAAA5e,UAAA4e,GAEA,OAAA2C,gBAAAlhB,WAAA,EAAA,CAAA,YAAAyhB,OAAAN,OAGA/D,QAAA0E,MAAA,SAAApP,GACAA,EAAAxK,OAAAwK,EAAAuD,QACAtV,OAAA2O,OAAAoD,EAAA,CAAAuD,OAAAvD,EAAAxK,OAEAvH,OAAA2O,OAAA4N,QAAAxK,IAkBA7Q,EAAAkgB,KAAAziB,GAAAyiB,KAAA3E,QEhXA9d,GAAA+J,OAAA,IAAA,WACA,IAAAvH,EAAAtC,KACAsC,EAAAkgB,SAAA,EACAlgB,EAAAmgB,SAAA,EACAngB,EAAAogB,yBAAA,EACApgB,EAAAqgB,YAAA,GACA,IAAAC,GAAA,EAEAC,EAAA,GAyBA,SAAAC,EAAAvf,GAEAwf,EACAA,GAAA,GAIAC,GAAA,EACA1gB,EAAA2gB,KAAAljB,OAAA8c,SAAAqG,WA9BA5gB,EAAAsH,KAAA,SAAA6I,GACA,IAAA3S,GAAAQ,OAAAoH,aACA,OAAA5H,GAAA,WACAwC,EAAAsH,SAKA,IADA,IAAAoG,EAAA3N,EAAA,6BAAAoQ,GACA1R,EAAA,EAAAA,EAAAiP,EAAAvO,OAAAV,IAIA,GAHAiP,EAAAjP,GAAAuL,aAAA,kBACAxM,GAAA6J,WAAAO,IAAA8F,EAAAjP,GAAAuL,aAAA,kBAEA0D,EAAAjP,GAAAuL,aAAA,WAAA,CACA,IAAAK,EAAAqD,EAAAjP,GAAAuL,aAAA,WACA6W,EAAAxW,GAIAiW,GAAA,EACAC,EAAA9iB,OAAA8c,SAAAqG,UAcA5gB,EAAA8gB,OAAA,SAAApC,QACA/gB,IAAA+gB,IAAAA,GAAA,GACA1e,EAAAmgB,UAAAzB,IACA1e,EAAAmgB,QAAAzB,GAEA,IAAAA,GAEA3e,EAAAiB,GAAApD,SAAAuG,KAAA,QAAA,UAAAnE,EAAA+gB,MAGAtjB,OAAA8D,iBAAA,WAAAif,GAAA,KAGAzgB,EAAA2B,IAAA9D,SAAAuG,KAAA,QAAA,UAAAnE,EAAA+gB,MACAtjB,OAAAqE,oBAAA,WAAA0e,GAAA,MAIA,IAAAzK,EAAA,GAEA/V,EAAA+V,OAAA,SAAA1L,EAAA3E,EAAAmE,GACAkM,EAAA1L,KACA0L,EAAA1L,GAAA,SAEA1M,IAAAkM,GACA,IAAAkM,EAAA1L,GAAAzG,QAAA8B,IACAqQ,EAAA1L,GAAAvJ,KAAA4E,GAGAqQ,EAAA1L,GAAAR,GAAAnE,GAGA,IAAAmQ,EAAA,GAEA7V,EAAA6V,MAAA,SAAAxL,EAAA3E,EAAAmE,GACAgM,EAAAxL,KACAwL,EAAAxL,GAAA,SAEA1M,IAAAkM,GACA,IAAAgM,EAAAxL,GAAAzG,QAAA8B,IACAmQ,EAAAxL,GAAAvJ,KAAA4E,GAGAmQ,EAAAxL,GAAAR,GAAAnE,GAGA,IAAA0T,EAAA,SAAA3R,GAOA,OANAjK,GAAAmJ,MAAAe,KAAAD,KACAjK,GAAAmJ,MAAAe,KAAAD,GAAA,IAEAjK,GAAAmJ,MAAAe,KAAAD,IACAjK,GAAA6J,WAAAO,IAAAH,GAEAjK,GAAAmJ,MAAAe,KAAAD,IAIAoZ,EAAA,SAAAxW,GAIA,IAHA,IAAArK,EAAAqgB,YAAAzc,QAAAyG,IACArK,EAAAqgB,YAAAvf,KAAAuJ,GAEA0L,EAAA1L,GACA,IAAA,IAAA5L,EAAA,EAAAA,EAAAsX,EAAA1L,GAAAlL,OAAAV,IACAsX,EAAA1L,GAAA5L,GAAA2a,IAiBA4H,EAAA,CACAd,QAAA,GACAe,OAAA,GACAC,QAAA,GACAna,MAAA,IAEA/G,EAAAgB,GAAA,SAAAC,EAAAyE,IACA,IAAAsb,EAAA/f,GAAA2C,QAAA8B,IACAsb,EAAA/f,GAAAH,KAAA4E,IAGA1F,EAAAmhB,cAAA,GASAnhB,EAAA+gB,KAAA,SAAA1f,GACA,IAAA,IAAArB,EAAAmgB,QAAA,CAEA,IAAA3M,EAAAnS,EAAAC,OACA,GAAAkS,EAAAxN,MAEAob,QAAAC,YAAA7N,EAAA0B,aAAA,oBAAA,CAIA,IAAAhW,EAAAsU,EAAAxN,KAAAmC,QAAA1K,OAAA8c,SAAAC,OAAA,IACA,IAAA,IAAAtb,EAAA0E,QAAA,MAIA,OADAvC,EAAA8Z,kBACAnb,EAAA2gB,KAAAzhB,MAGA,IAAAoiB,GAAA,EACAZ,GAAA,EACAD,GAAA,EACAzgB,EAAA2gB,KAAA,SAAAzhB,EAAA+L,EAAAkJ,GAEAA,EADAA,EACAA,EAAAwI,cADA,MAGA1R,IAAAA,EAAA,IAEA,IAAA,IAAAxM,EAAA,EAAAA,EAAAuiB,EAAA,QAAA7hB,OAAAV,IACA,GAAAuiB,EAAA,QAAAviB,GAAAS,GAAA,OAEAzB,OAAA8c,SAAAqG,SAsHA,OArHAN,GAAA,EAEAgB,GAAAA,EAAApC,QACAoC,EAAAvhB,EAAAkgB,KAAA,CACAtE,IAAAle,OAAA8c,SAAAC,OAAAtb,EACAiV,OAAAA,EACAlJ,KAAApM,OAAA2O,OAAAvC,EAAA,CACAsW,UAAA,cAEAhC,QAAA,SAAAtU,GACA,IAAAqV,EAAA,EACA,EAGAgB,GAAA,EAGA,IACAJ,EADA9Y,OAAA,iCAAA5K,GAAA6B,MAAAE,YAAA,MACAyJ,KAAAiC,GACA,GAAAiW,GAAA,IAAAA,EAAA/hB,SACA+hB,EAAAA,EAAA,GAAAtf,MAAA,SAAAmD,KAAA,WAGA5G,cAFA+iB,EAAA9R,KAAAtE,MAAAoW,KAGA,IAAA,IAAAziB,EAAA,EAAAA,EAAAuiB,EAAA,QAAA7hB,OAAAV,IACA,GAAAuiB,EAAA,QAAAviB,GAAAyiB,GAAA,OAKA,IAAAM,GAAA,EACAC,EAAA,SAAA5f,GACA2f,EAAAzhB,EAAAE,QAAA4B,GAGA,IAAA6f,EAAA3hB,EAAAE,QAAA,YAAAuhB,IAjGA,SAAAnX,GAIA,IAHA,IAAArK,EAAAqgB,YAAAzc,QAAAyG,IACArK,EAAAqgB,YAAAte,OAAA/B,EAAAqgB,YAAAzc,QAAAyG,GAAA,GAEAwL,EAAAxL,GACA,IAAA,IAAA5L,EAAA,EAAAA,EAAAoX,EAAAxL,GAAAlL,OAAAV,IACAoX,EAAAxL,GAAA5L,GAAA2a,GA4FAuI,CAAAD,EAAAA,EAAA1X,aAAA,WAAA,KAGAkX,GAAAA,EAAAU,QACA7hB,EAAA,gBAAAwX,UAAA2J,EAAAU,OAEArU,GAAA,GAGAA,GAAA,EACA,IAAA,IAAAsU,KAAA7hB,EAAAmhB,cAAA,CACA,IAAA,IAAAZ,EAAA3c,QAAAie,GACA,IAAA,IAAAC,KAAA9hB,EAAAmhB,cAAAU,GACA,IAAA,IAAAtB,EAAA3c,QAAAie,GAAA,CACAJ,EAAAzhB,EAAAmhB,cAAAU,GAAAC,IACA,MAIA,GAAAvU,EAAA,MAIA,IAAAA,IAEA/P,GAAA+J,OAAA4Z,cAAA,aACAM,EAAAjkB,GAAA+J,OAAA4Z,cAAA,cAEA5T,GACA,IAAA9O,EAAA,EAAAA,EAAAuiB,EAAA,MAAA7hB,OAAAV,IACAuiB,EAAA,MAAAviB,GAAA,4BAAAojB,EAAA,OAAAC,EAAA,oBAMAN,IAAAA,EAAA5jB,SAAAuG,MACAnE,EAAAogB,yBACApgB,EAAAogB,wBAAAva,IAAA,UAAA,QAGA2b,EAAAjK,UAAAtM,EAGAzN,GAAAmJ,MAAAW,KAAAka,GAGA,IAAA9T,EAAA3N,EAAA,YAAAyhB,GACA,IAAA/iB,EAAA,EAAAA,EAAAiP,EAAAvO,OAAAV,IACAoiB,EAAAnT,EAAAjP,GAAAuL,aAAA,YAGAhK,EAAAogB,yBACApgB,EAAAogB,wBAAAva,IAAA,UAAA,IAgCA,SAAA0a,EAAArhB,EAAA+L,GACA,IAAA,IAAAxM,EAAA,EAAAA,EAAAuiB,EAAA,OAAA7hB,OAAAV,IACAuiB,EAAA,OAAAviB,GAAA8hB,EAAArhB,EAAA+L,GAhCA8W,CAAAxB,EAAArhB,EAAAsiB,GAEAlB,GAAA,GACA,EAEAC,EAAArhB,EACAuhB,GAAA,IAEA1Z,MAAA,SAAA0W,EAAAxS,GAEA,GADAwV,GAAA,GACAhD,EAAAuE,QAAA,CAEAV,GAAA,EACA,IAAA,IAAA7iB,EAAA,EAAAA,EAAAuiB,EAAA,MAAA7hB,OAAAV,IACAuiB,EAAA,MAAAviB,GAAAgf,EAAAiB,OAAAzT,GAIAxN,OAAA2jB,QAAAa,WAIAvB,GACAjjB,OAAA2jB,QAAAC,UAAA,KAAA,GAAAniB,GAEAwhB,GAAA,GACA,ICpSAljB,GAAA4B,SAAAkU,eAAA,IAAA,WACA,IAAAtT,EAAAtC,KACAwkB,GAAA,EACAC,GAAA,EAgbA,SAAAC,EAAAC,EAAAC,EAAA1f,EAAA6B,GACA,IAAAiJ,EAAAgI,KAAAvD,MAAAnS,EAAAuiB,aAAA,GACA,GAAAF,EAAAriB,EAAAuiB,aASA,OARAD,EAAAjN,SAAA,EACAiN,EAAAnQ,MAAA1N,EAAA8L,SAAA,EAAAvQ,EAAAuiB,aAAA,QAEA5kB,IAAA2kB,EAAAnQ,MACAmQ,EAAAnQ,MAAAmQ,EAAAnQ,MAAAqQ,UACAF,EAAAnQ,MAAA1N,EAAA0M,iBAAAqR,UAAA,SAEAF,EAAAnQ,OAAAmQ,EAAAG,cAGA9kB,IAAA8G,EAAA8L,SAAA7C,EAAA,KACA4U,EAAAjN,QAAA5Q,EAAA8L,SAAA7C,EAAA,GAAA8U,gBAEA7kB,IAAAiF,EAAAsH,SAAA8G,gBAAAqR,GAAAzf,EAAAzD,OAAAyD,EAAAsH,SAAA8G,eACAsR,EAAAnQ,MAAAvP,EAAAsH,SAAA4J,QAAA3B,MAAAqQ,UAAA,EAAA5f,EAAAsH,SAAAwY,cAEAJ,EAAAnQ,MAAA1N,EAAA8L,SAAAvQ,EAAAuiB,aAAA,GAAAC,UAEA/d,EAAAyQ,aAAA,yBACAoN,EAAAnQ,OAAA1N,EAAAuF,aAAA,uBACAsY,EAAAjN,SAAA5Q,EAAAuF,aAAA,yBAIAsY,EAAAjN,SAAAiN,EAAAG,QACAH,EAAAnQ,OAAAmQ,EAAAG,QAoEA,SAAAE,EAAA9Y,EAAAjH,EAAA2f,EAAA9d,EAAAme,GACA,IAAAC,EAAAjgB,EAAAsH,SACA4Y,EAAA,EAOA,GALAjZ,GAAAjH,EAAAzD,OAAA0jB,EAAA7R,iBACA8R,GAAAP,EACA1Y,EAAAjH,EAAAzD,OAAA0jB,EAAA7R,kBAGAnH,EAAAgZ,EAAA1Y,WAAA,GAAAN,GAAAjH,EAAAzD,QAAA,CAKA,GAHAgjB,GAAA,EAGA,IAAAU,EAAA1Y,WAAAN,EAAA0Y,EAAAA,EAAA,GACAM,EAAA1Y,UAAAoY,EAAA,EAAA1Y,GACAgZ,EAAA1Y,UAAAoY,EAAA1Y,EACA+Y,EAAAG,UAAAte,EAAA8L,SAAA1G,EAAAgZ,EAAA1Y,UAAA,GAAAqY,cAGA,CAQA,IAPA,IAAA9U,EAAA,KACA2H,EAAAwN,EAAA/O,QAAAuB,QACAlD,EAAA0Q,EAAA/O,QAAA3B,MACAD,EAAA2Q,EAAA3Q,QAGA/S,EAAAsF,EAAAwP,kBAAA,EACAxV,EAAA,EAAAA,EAAAU,EAAAV,IACAiP,EAAA2H,EAAAS,mBAEA,OAAA5D,EAAAC,OACA0Q,EAAApjB,IAAA2S,sBAAA,YAAA1E,GAEAjP,IAAAU,EAAA,IACA+S,EAAAC,MAAAzE,IAEAwE,EAAAC,MAAAC,sBAAA,cAAA1E,GAGA7D,GAAA0Y,EACA1Y,EAAAjH,EAAAzD,OAAA0jB,EAAA7R,iBACAnH,GAAA0Y,IAGAO,EAAAP,EAAA1Y,EACAgZ,EAAA1Y,UAAAN,EAAA,GAGA,IAAAmZ,EAAAH,EAAA7R,gBAAApO,EAAAzD,OAAA0jB,EAAA7R,eAAApO,EAAAzD,OAGA,IAAAV,EAAA,EAAAA,EAAAukB,QAEArlB,KADA+P,EAAAmV,EAAApjB,IAAA8Q,SAAA1G,IADApL,IAIA0T,EAAAC,sBAAA,cAAA1E,GAEAmV,EAAA1Y,UAAAN,EAEAqI,EAAAC,MAAA0Q,EAAApjB,IAAA8Q,SAAA1G,IAAA,KACAqI,EAAAmD,QAAAnD,EAAAC,MAAAD,EAAAC,MAAApI,uBAAA,KAEAnH,EAAAsH,SAAAqI,sBACA3P,EAAAsH,SAAAqI,qBAAA1I,GAEAuY,EAAAvY,EAAAgZ,EAAAP,SAAA1f,EAAA6B,QAIA9G,KAFA+P,EAAAjJ,EAAA8L,SAAAgS,EAAAO,EAAA,MAGAF,EAAAG,UAAArV,EAAA8U,UAAAI,EAAAJ,WAGAL,GAAA,GAGA,SAAAc,EAAAxe,GACAA,EAAAhC,MAAA+O,SAAA,SACAxO,WAAA,WACAyB,EAAAhC,MAAA+O,SAAA,IACA,IAGA,SAAA0R,EAAA5F,GACA,IAAAhI,EAAA7X,OAAA8X,iBAAA+H,GACA6F,EAAAC,SAAA9N,EAAA,WAAA8N,SAAA9N,EAAA,cACA,OAAAgI,EAAA1H,aAAAuN,GAAA,EAkCA,SAAAlQ,EAAAoQ,EAAAzgB,EAAA2f,EAAA9d,EAAAme,EAAAU,EAAA/Q,GACA,IAAA8P,EAAAzf,EAAAsH,SAAAC,UACAoZ,EAAA,EAGA,GAAAF,EAAA,CACA,IAAA5kB,GAAA,EACAU,EAAAyD,EAAAsH,SAAA8G,eAEA,GACAvS,UACAA,EAAAU,GAAAsF,EAAA8L,SAAA9R,GAAA+jB,UAAAI,EAAAG,YAEAV,GAAA5jB,GACA,IAAA4jB,GAAA,GAEAkB,EAAAX,EAAAG,UAAAte,EAAA8L,SAAA9R,GAAA+jB,UAIA,GAAAa,GAAA5e,EAAAwP,kBAAA,EAAArR,EAAAsH,SAAA8G,eAAA,CACApO,EAAAsH,SAAAC,UAAAvH,EAAAzD,OACA,IAAAqkB,EAAAnB,EACAgB,IACAG,EAAAnB,GAAAE,EAAAF,EAAAA,EAAAE,GAEAI,EAAAa,EACA5gB,EACA2f,EACA9d,EACAme,GAGAA,EAAAG,WAAAQ,EAGAhR,GACAA,EAAA8P,GAEAiB,GACAA,IAEAlB,EAAAC,EAAAzf,EAAAsH,SAAAoY,SAAA1f,EAAA6B,GAhrBAzE,EAAAuiB,aAAA,EAEAviB,EAAAuT,OAAA,SAAA3Q,EAAAuN,EAAA1L,GACAyd,KA+tBA,WACA,IAAAzf,EAAA7E,SAAA6lB,eAAA,aAEAhhB,KACAA,EAAA7E,SAAAuF,cAAA,UACAuB,GAAA,YACA9G,SAAAqI,KAAAC,YAAAzD,IAGAA,EAAAihB,MAAAC,WACA,4LAWAlhB,EAAAihB,MAAAE,SAAAzkB,QAnvBA0kB,GACA3B,GAAA,GAGA,IACAW,EAAAjgB,EAAAsH,SACA2Y,EAAAxR,MAAA,SAAAyS,GACAjB,EAAA1Y,UAAA,EAEA0Y,EAAAP,SAAAjN,SAAA,EACAwN,EAAAP,SAAAnQ,MAAA,EAEA0Q,EAAA3Q,QAAAmD,QAAA,KACAwN,EAAA3Q,QAAAC,MAAA0Q,EAAApjB,IAAAyR,kBAEA2R,EAAAP,SAAAG,QAAAI,EAAA/O,QAAAuB,QAAAmN,UACAJ,EAAA,EAAAS,EAAAP,SAAA1f,EAAA6B,IAGAoe,EAAAhQ,aAAA,WACAgQ,EAAA3Q,QAAAmD,QAAAwN,EAAApjB,IAAA8Q,SAAAsS,EAAA1Y,UAAA,IAAA,KACA0Y,EAAA3Q,QAAAC,MAAA0Q,EAAApjB,IAAA8Q,SAAAsS,EAAA1Y,YAAA,MAGA0Y,EAAAtR,aAAA,WACA6Q,EAAAS,EAAA1Y,UAAA0Y,EAAAP,SAAA1f,EAAA6B,IAGAoe,EAAA7e,SAAA,WACA,OAskBA,SAAApB,EAAA6B,GAKA,IAJA,IAAAmK,EAAA,GACAlB,OAAA/P,EAEAwB,EAAAyD,EAAAsH,SAAAC,UACA1L,EAAA,EAAAA,EAAAU,QAEAxB,KADA+P,EAAA9K,EAAAsH,SAAAzK,IAAA8Q,SAAA9R,IADAA,IAGAmQ,EAAA9N,KAAA4M,GAGAvO,EAAAsF,EAAAwP,kBAAA,EACA,IAAA,IAAAxV,EAAA,EAAAA,GAAAU,QAEAxB,KADA+P,EAAAjJ,EAAA8L,SAAA9R,IADAA,IAGAmQ,EAAA9N,KAAA4M,GAIA,IAAAqW,EAAAnhB,EAAAsH,SAAAzK,IAAAwU,kBAAA9U,EAEAA,EAAA4kB,EAAA5kB,EAAAyD,EAAAsH,SAAAC,UACA,IAAA,IAAA1L,EAAA,EAAAA,EAAAU,QAEAxB,KADA+P,EAAA9K,EAAAsH,SAAAzK,IAAA8Q,SAAA3N,EAAAsH,SAAAC,UAAA1L,IADAA,IAGAmQ,EAAA9N,KAAA4M,GAGA,OAAAkB,EAlmBAoV,CAAAphB,EAAA6B,IAGAoe,EAAA/O,QAAA,CACAuB,QAAA5Q,EAAAvE,cAAA,2BACAiS,MAAA1N,EAAAvE,cAAA,0BAGA2iB,EAAAP,SAAA,GACAO,EAAA3Q,QAAA,GAEA2Q,EAAAxR,QACAwR,EAAA1S,WAAA1L,EACAoe,EAAAH,aAAAG,EAAA/O,QAAA3B,MAAAqQ,UAAAK,EAAAP,SAAAG,QAEA,IAAAG,EAAAne,EACAoe,EAAA/L,QAAA,WACA/W,EAAA2B,IAAAkhB,EAAA,UACA7iB,EAAA2B,IAAA+C,EAAA,qBACAoe,EAAApjB,IAAA8X,UAAA,GAqqBA,SAAA9S,GACA,IAAA,IAAAhG,EAAAwlB,EAAA9kB,OAAA,EAAAV,GAAA,EAAAA,IACAwlB,EAAAxlB,GAAA2B,UAAAqE,GACAwf,EAAAliB,OAAAtD,EAAA,GAvqBAylB,CAAAzf,UAEA7B,EAAAsH,UAGA2Y,EAAA9P,cAAA,WACA8P,EAAAsB,cAAAzO,KAAAvD,MAAAyQ,EAAAwB,aAAAvB,EAAAH,cACAG,EAAA7R,eAAA6R,EAAAsB,cAAA,EAAAnkB,EAAAuiB,aAEAM,EAAA7R,eAAA,KACA6R,EAAA7R,eAAA,KAGAhO,WAAA,WACA4f,EAAAne,EAGA,IADA,IAAAtF,EAAAsF,EAAAuF,aAAA,wBAAA,EACAvL,EAAA,EAAAA,EAAAU,EAAAV,IACAmkB,EAAAA,EAAAriB,cAGAsiB,EAAA9P,gBAEAtO,EAAA5B,UAAA4N,SAAA,qBACA,EAQA,SAAA7N,EAAAuN,EAAA1L,EAAAme,GACA,IAAAC,EAAAjgB,EAAAsH,SACAmL,EAAAwN,EAAA/O,QAAAuB,QACAlD,EAAA0Q,EAAA/O,QAAA3B,MACAD,EAAA2Q,EAAA3Q,QACAA,EAAAC,MAAA0Q,EAAApjB,IAAAyR,kBAEA2R,EAAAF,SAAA,SAAA9Y,GACA8Y,EAAA9Y,EAAAjH,EAAA5C,EAAAuiB,aAAA9d,EAAAme,GAGAyB,EAAA,EACAC,EAAA,EACAjP,EAAA5S,MAAA2O,OAAAiT,EAAA,KACAlS,EAAA1P,MAAA2O,OAAAkT,EAAA,MAGAzB,EAAA5P,QAAA,SAAAoQ,GACApQ,EAAAoQ,EAAAzgB,EAAA5C,EAAAuiB,aAAA9d,EAAAme,GACA2B,KAIAA,IAEA1B,EAAAsB,cAAA1f,EAAAwP,kBAAA,EACA4O,EAAA7R,eAAA6R,EAAAsB,cAAA,EAAAnkB,EAAAuiB,aAEA,IAAA,IAAA9jB,EAAA,EAAAA,EAAAuB,EAAAuiB,aAAA9jB,IAAA,CACA,IAAAiP,EAAAwE,EAAAC,MACA,GAAA,OAAAzE,EAAA,MAEAwE,EAAAC,MAAAzE,EAAAoI,mBACA3D,EAAAC,sBAAA,cAAA1E,GAEAmV,EAAA1Y,UAAA,EAEA,IAAAka,EAAA,EACAC,EAAA,EAqDA,SAAAC,IAGA,IADA,IAAAplB,EAAA0jB,EAAA7R,gBAAAvM,EAAAwP,kBAAA,GACAxV,EAAA,EAAAA,EAAAU,GAMA,QAJAuO,EADA,OAAAwE,EAAAmD,QACAwN,EAAApjB,IAAAyR,kBAEAgB,EAAAmD,QAAAS,oBAJArX,IAOAyT,EAAAC,MAAAzE,EAAAoI,mBAEA3D,EAAAC,sBAAA,cAAA1E,GAmDA,IAAA4U,EAAAO,EAAAP,SAGA,GAFAF,EAAA,EAAAE,EAAA1f,EAAA6B,QAEA9G,IAAAklB,EAAAzP,UAAA,CACA,IAAAA,EAAAyP,EAAAzP,iBACAyP,EAAAzP,UAGA,IAAAoR,GAAA,EAqCAzkB,EAAAiB,GAAA4hB,EAAA,SApCA,WACA,GAAA4B,GAAArC,EAAA,OACAqC,GAAA,EAEA5B,EAAAG,UAAAT,EAAAjN,UAhIA,WAKA,IAJA,IAAA3H,EAAA,KACA+W,GAAA,EAGAhmB,EAAA,EAAAA,EAAAuB,EAAAuiB,cAMA,QAJA7U,EADA,OAAAwE,EAAAC,MACA0Q,EAAApjB,IAAA0R,iBAEAe,EAAAC,MAAApI,wBAJAtL,IAOAyT,EAAAmD,QAAA3H,EAAA3D,uBACA8Y,EAAA1Y,YAEAkL,EAAAjD,sBAAA,WAAA1E,GAEA2W,EAAA,IACAA,GAAAnB,EAAAxV,IAEAmV,EAAA1Y,UAAAnK,EAAAuiB,eAAAkC,IACAhmB,EAAA,EACAgmB,GAAA,EACA/W,EAAA,OAIA2W,EAAA,GAAA,OAAA3W,KACA2W,EAAA,GAIA,IAFA,IAAAllB,EAAAsF,EAAAwP,kBAAA,EAAArR,EAAAsH,SAAA8G,eAEAvS,EAAA,EAAAA,EAAAU,EAAAV,IACAiP,EAAAyE,EAAApI,uBACAua,GAAApB,EAAAxV,GAEA,OAAAwE,EAAAC,MACA0Q,EAAApjB,IAAA2S,sBAAA,YAAA1E,GACAwE,EAAAC,MAAAC,sBAAA,cAAA1E,GAEAwE,EAAAC,MAAAzE,EAGA,OAAAwE,EAAAC,MACAD,EAAAmD,QAAAwN,EAAApjB,IAAA0R,iBAEAe,EAAAmD,QAAAnD,EAAAC,MAAApI,uBAEAsL,EAAA5S,MAAA2O,OAAAiT,EAAA,KACAlS,EAAA1P,MAAA2O,OAAAkT,EAAA,KAiFAI,GACAtC,EAAAS,EAAA1Y,UAAAmY,EAAA1f,EAAA6B,IAIAme,EAAAG,UAAAT,EAAAnQ,SAnEA,WACA,IAAAzE,EAAA,KAGA,GAFA6W,IAEA,OAAArS,EAAAC,MAAA,CACA,OAAAD,EAAAmD,UACAnD,EAAAmD,QAAAnD,EAAAC,MAAApI,wBAGA,IAAA,IAAAtL,EAAA,EAAAA,EAAAuB,EAAAuiB,cAEA,QADA7U,EAAAwE,EAAAC,OADA1T,IAIAyT,EAAAC,MAAAzE,EAAAoI,mBACA3D,EAAAC,sBAAA,cAAA1E,GAEA4W,EAAA,IACAA,GAAApB,EAAAxV,KAIA4W,EAAA,GAAA,OAAA5W,KACA4W,EAAA,GAIA,IADA,IAAAnlB,EAAAsF,EAAAwP,kBAAA,EAAArR,EAAAsH,SAAA8G,eACAvS,EAAA,EAAAA,EAAAU,EAAAV,IACAiP,EAAA2H,EAAAS,mBACAuO,GAAAnB,EAAAxV,GACAmV,EAAA1Y,YAEA,OAAA+H,EAAAmD,QACAwN,EAAApjB,IAAA2S,sBAAA,aAAA1E,GACAwE,EAAAmD,QAAAjD,sBAAA,WAAA1E,GAEAwE,EAAAmD,QAAA3H,EAGA,OAAAwE,EAAAmD,QACAnD,EAAAC,MAAA0Q,EAAApjB,IAAAyR,kBAEAgB,EAAAC,MAAAD,EAAAmD,QAAAS,mBAEAT,EAAA5S,MAAA2O,OAAAiT,EAAA,KACAlS,EAAA1P,MAAA2O,OAAAkT,EAAA,KAyBAK,GACAvC,EAAAS,EAAA1Y,UAAAmY,EAAA1f,EAAA6B,SAIA9G,IAAAklB,EAAA3hB,SACA2hB,EAAA3hB,SAAA0jB,UAAA,OAAA/B,EAAA3Q,QAAAC,OACAyQ,EAAAG,UAAAH,EAAAwB,eAAAxB,EAAAF,aAEAG,EAAA3hB,SAAA0jB,SAAA/B,EAAA1Y,WAEA0Y,EAAA3hB,SAAA2jB,YAAA,OAAAhC,EAAA3Q,QAAAmD,SAAA,IAAAuN,EAAAG,WACAF,EAAA3hB,SAAA2jB,WAAAhC,EAAA1Y,WAGAiJ,EAAAvR,IAAAuR,EAAAC,OACAwP,EAAA3hB,SAAAkS,EAAAvR,IAAAuR,EAAAC,KACAD,EAAA,MAGAoR,GAAA,IA4ZA,SAAA/f,EAAAvD,IACA,IAAA4jB,IACAA,EAAA7d,YAAA,WAEA,IADA,IAAAyG,EAAA,KACAjP,EAAAwlB,EAAA9kB,OAAA,EAAAV,GAAA,EAAAA,KACAiP,EAAAuW,EAAAxlB,IAGA2B,QAAAsiB,eAAAhV,EAAA0D,QACA1D,EAAAtN,QAAA2kB,cAAArX,EAAAsX,QAIA,OAAAtX,EAAAtN,QAAAG,cAKAmN,EAAAxM,WAJA+iB,EAAAliB,OAAAtD,EAAA,IAOA,IAAAwlB,EAAA9kB,SACAgI,cAAA2d,GACAA,GAAA,IAEA,MAGAb,EAAAnjB,KAAA,CACAV,QAAAqE,EACAvD,SAAAA,EACAkQ,OAAA3M,EAAAie,aACAsC,MAAAvgB,EAAAsgB,cAxbAE,CAAAxgB,EAAA,WACA2d,EAAAS,EAAA1Y,UAAAmY,EAAA1f,EAAA6B,KAhNAygB,CAAAtiB,EAAAuN,EAAA1L,EAAAme,IAqNA,SAAAhgB,EAAAuN,EAAA1L,EAAAme,GAOA,IANA,IAAAC,EAAAjgB,EAAAsH,SACAmL,EAAAwN,EAAA/O,QAAAuB,QACAlD,EAAA0Q,EAAA/O,QAAA3B,MAGA6Q,EAAAH,EAAA7R,gBAAApO,EAAAzD,OAAA0jB,EAAA7R,eAAApO,EAAAzD,OACAV,EAAA,EAAAA,EAAAukB,GACA,OAAAH,EAAApjB,IAAAyR,kBADAzS,IAIA0T,EAAAC,sBAAA,cAAAyQ,EAAApjB,IAAAyR,mBAKA,SAAAqB,EAAA8P,GACA,GAAAA,GAAAriB,EAAAuiB,aACAlN,EAAA5S,MAAA2O,QAAAiR,EAAAriB,EAAAuiB,cAAAM,EAAAH,aAAA,KACAvQ,EAAA1P,MAAA2O,QAAAxO,EAAAzD,OAAA0jB,EAAA7R,eAAAqR,GAAAQ,EAAAH,aAAA,SAEA,CACArN,EAAA5S,MAAA2O,OAAAiR,EAAAQ,EAAAH,aAAA,KACA,IAAA5R,EAAAlO,EAAAzD,OAAA0jB,EAAA7R,eACAmB,EAAA1P,MAAA2O,QAAAN,GAAA,GAAA+R,EAAAH,aAAA,MAVAG,EAAAtQ,qBAAAA,EAcA,IAAA+P,EAAAO,EAAAP,SAoBA,GAlBA/P,EAAA,GACA6P,EAAApiB,EAAAuiB,aAAAD,EAAA1f,EAAA6B,GACA6d,EAAAjN,SAAA,EAEAwN,EAAAsC,SAAA,SAAAtb,GACA,OAAAA,EAAAgZ,EAAAH,aAAArN,EAAAmN,WAGAK,EAAA3Q,QACAC,MAAA0Q,EAAApjB,IAAAyR,kBACA2R,EAAAF,SAAA,SAAA9Y,GACA8Y,EAAA9Y,EAAAjH,EAAA5C,EAAAuiB,aAAA9d,EAAAme,IAGAC,EAAA5P,QAAA,SAAAoQ,GACApQ,EAAAoQ,EAAAzgB,EAAA5C,EAAAuiB,aAAA9d,EAAAme,EAAAU,EAAA/Q,SAGA5U,IAAAklB,EAAAzP,UAAA,CACA,IAAAA,EAAAyP,EAAAzP,iBACAyP,EAAAzP,UAGA,IAAAoR,GAAA,EACAY,GAAA,EACAC,GAAA,EACA,SAAA/B,IACA,GAAAkB,GAAArC,GAAAS,EAAAG,WAAAT,EAAAjN,SAAAuN,EAAAG,WAAAT,EAAAnQ,MAEAkT,IACA,IAAAzC,EAAAG,WAAAH,EAAAG,YAAAH,EAAAF,aAAAE,EAAAwB,eACAnB,EAAAL,GACAyC,GAAA,QALA,CAWA,IAAAhD,EAAA3M,KAAAvD,MAAAyQ,EAAAG,UAAAF,EAAAH,cACAL,EAAAQ,EAAA7R,eAAApO,EAAAzD,SACAkjB,EAAAzf,EAAAzD,OAAA0jB,EAAA7R,gBAEAoU,IACA/C,EAAA,EAAAriB,EAAAuiB,eACAF,GAAAriB,EAAAuiB,cAGA8C,IACApC,EAAAL,GACAyC,GAAA,GAEAD,GAAA,GAGA/C,EAAAriB,EAAAuiB,eACAF,EAAA,EACA+C,GAAA,GAGAZ,GAAA,EAEA,IAAAvX,EAAAoV,EAAAQ,EAAA1Y,UACAkY,EAAApV,GAAArK,EAAAzD,SACA8N,EAAAoV,EAAApV,EAAArK,EAAAzD,QAEA,IAAA8N,GAMA4V,EAAA1Y,UAAAkY,EAoEA,SAAApV,EAAArK,GACA,IAAA6O,EAAA7O,EAAAsH,SAAAzK,IACAyS,EAAAtP,EAAAsH,SAAAgI,QACA4B,EAAAlR,EAAAsH,SAAA4J,QAEA,GAAA7G,EAAA,EAAA,CAIA,IAHA,IAAApL,EAAA,EAGApD,EAAA,EAAAA,EAAAwO,GAKA,QAHApL,EADA,OAAAqQ,EAAAmD,QACA5D,EAAAP,kBAEAgB,EAAAmD,QAAAS,oBAJArX,IAMAqV,EAAA3B,MAAAC,sBAAA,cAAAvQ,GAIA,IAAA,IAAApD,EAAAwO,EAAAxO,EAAA,EAAAA,IACA,OAAAyT,EAAAmD,SACAnD,EAAAmD,QAAAvB,EAAAuB,QAAAS,mBACArE,EAAAW,sBAAA,aAAAF,EAAAmD,WAGAxT,EAAAiS,EAAAuB,QAAAS,mBACA5D,EAAAmD,QAAAjD,sBAAA,WAAAvQ,GACAqQ,EAAAmD,QAAAxT,GAIAqQ,EAAAC,MAAAD,EAAAmD,QAAAS,wBAEA,GAAA7I,EAAA,EAAA,CACA,IAAApL,EAAA,EACAoL,GAAAA,EAGA,IAAA,IAAAxO,EAAA,EAAAA,EAAAwO,GAKA,QAHApL,EADA,OAAAqQ,EAAAC,MACAV,EAAAN,iBAEAe,EAAAC,MAAApI,wBAJAtL,IAMAqV,EAAAuB,QAAAjD,sBAAA,WAAAvQ,GAIA,IAAA,IAAApD,EAAA,EAAAA,EAAAwO,EAAAxO,IACA,OAAAyT,EAAAC,OACAD,EAAAC,MAAA2B,EAAA3B,MAAApI,uBACA0H,EAAAW,sBAAA,YAAAF,EAAAC,SAIAtQ,EAAAiS,EAAA3B,MAAApI,uBACAmI,EAAAC,MAAAC,sBAAA,cAAAvQ,GACAqQ,EAAAC,MAAAtQ,GAIAqQ,EAAAmD,QAAAnD,EAAAC,MAAApI,wBA9HAub,CAAArY,EAAArK,GACA2P,EAAA8P,GACAD,EAAAC,EAAAC,EAAA1f,EAAA6B,QAGA9G,IAAAklB,EAAA3hB,SACA2hB,EAAA3hB,SAAA0jB,UAAA,OAAA/B,EAAA3Q,QAAAC,MACA0Q,EAAA3hB,SAAA0jB,SAAAvC,GAEAQ,EAAA3hB,SAAA2jB,YAAA,OAAAhC,EAAA3Q,QAAAmD,SACAwN,EAAA3hB,SAAA2jB,WAAAxC,GAGAjP,EAAAvR,IAAAuR,EAAAC,OACAwP,EAAA3hB,SAAAkS,EAAAvR,IAAAuR,EAAAC,KACAD,EAAA,MAGAoR,GAAA,GAzBAA,GAAA,GA4BAzkB,EAAAiB,GAAA4hB,EAAA,SAAAU,GAGAV,IAAAne,IAAA,IAAA8gB,UAAAC,UAAA5hB,QAAA,WACA7D,EAAAiB,GAAAyD,EAAA,YAAA,WACA4gB,GAAA,IAEAtlB,EAAAiB,GAAAyD,EAAA,UAAA,WACA4gB,GAAA,KAxVAI,CAAA7iB,EAAAuN,EAAA1L,EAAAme,IACA,MAkmBA,IAAAqB,EAAA,GACAa,GAAA,GF1rBAtnB","file":"scarletsframe.min.js","sourcesContent":["(function(global, factory){\r\n  if(typeof exports === 'object' && typeof module !== 'undefined') module.exports = factory(global);\r\n  else global.sf = factory(global);\r\n}(typeof window !== \"undefined\" ? window : this, (function(window){'use strict';\r\nif(typeof document === undefined)\r\n\tdocument = window.document;\r\n// ===== Module Init =====\r\n\r\nvar sf = function(){\r\n\tif(arguments[0].constructor === Function){\r\n\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\t}\r\n};\r\n\r\nsf.internal = {};\r\nsf.regex = {\r\n\t// ToDo: Need help to skip escaped quote\r\n\tgetQuotes:/(['\"])[\\s\\S]*?[^\\\\]\\1/g,\r\n\tavoidQuotes:'(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)',\r\n\tstrictVar:'(?=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )'\r\n};\r\n\r\nfunction isEmptyObject(obj){\r\n\tfor(var key in obj){\r\n\t\treturn false;\r\n\t}\r\n\treturn true\r\n}\r\n\r\nfunction compareObject(obj1, obj2){\r\n\tif(!obj1 || !obj2)\r\n\t\treturn false;\r\n\r\n\tfor(var i in obj1){\r\n\t\tif(typeof obj1[i] !== 'object' && obj1[i] !== obj2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction hiddenProperty(obj, property, value){\r\n\tObject.defineProperty(obj, property, {\r\n\t\tenumerable: false,\r\n\t\tconfigurable: true,\r\n\t\tvalue: value\r\n\t});\r\n}\r\n\r\nfunction deepProperty(obj, path){\r\n  for(var i = 0; i < path.length; i++){\r\n    obj = obj[path[i]];\r\n    if(obj === undefined) return obj;\r\n  }\r\n  return obj;\r\n}","sf.dom = function(selector, context){\r\n\tif(selector[0] === '<') return sf.dom.parseElement(selector);\r\n\tif(selector.constructor !== String) return selector;\r\n\r\n\tif(context) return context.querySelectorAll(selector);\r\n\treturn document.querySelectorAll(selector);\r\n}\r\n\r\nvar $ = sf.dom; // Shortcut\r\n\r\n;(function(){\r\n\tvar self = sf.dom;\r\n\r\n\tself.findOne = function(selector, context){\r\n\t\tif(context !== undefined) return context.querySelector(selector);\r\n\t\treturn document.querySelector(selector);\r\n\t}\r\n\r\n\tself.parent = function(element, selector){\r\n\t\tif(element.closest) return element.closest(selector);\r\n\r\n\t\tdo {\r\n\t\t\tif(element.matches(selector) === true)\r\n\t\t\t\treturn element;\r\n\r\n\t\t\telement = element.parentElement;\r\n\t\t} while (element !== null);\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tself.prevAll = function(element, selector, isNext){\r\n\t\tvar result = [];\r\n\t\tvar findNodes = selector === null || selector.constructor !== String ? true : false;\r\n\r\n\t\t// Skip current element\r\n\t\telement = isNext ? element.nextSibling : element.previousSibling;\r\n\t\twhile (element !== null) {\r\n\t\t\tif(findNodes === false && element.matches(selector) === true)\r\n\t\t\t\tresult.push(element);\r\n\t\t\telse{\r\n\t\t\t\tif(element === selector)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tresult.push(element);\r\n\t\t\t}\r\n\r\n\t\t\tif(isNext)\r\n\t\t\t\telement = element.nextSibling;\r\n\t\t\telse\r\n\t\t\t\telement = element.previousSibling;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.nextAll = function(element, selector){\r\n\t\treturn self.prevAll(element, selector, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen to an event\r\n\t * @param  Node \t\t\telement \tparent element\r\n\t * @param  string \t\t\tevent   \tevent name\r\n\t * @param  function|string  selector    callback function or selector\r\n\t * @param  function\t\t\tcallback    callback function\r\n\t * @param  boolean\t\t\tonce    \tcall once\r\n\t * @return null\r\n\t */\r\n\tself.on = function(element, event, selector, callback, once){\r\n\t\tif(typeof element === 'string'){\r\n\t\t\telement = document;\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = event;\r\n\t\t\tevent = element;\r\n\t\t}\r\n\r\n\t\tif(typeof selector === 'function'){\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = null;\r\n\t\t}\r\n\r\n\t\tif(selector){\r\n\t\t\tvar tempCallback = callback;\r\n\t\t\tcallback = function(ev){\r\n\t\t\t\tif(self.parent(ev.target, selector) !== null)\r\n\t\t\t\t\ttempCallback(ev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcallback.selector = selector;\r\n\t\tcallback.once = once;\r\n\t\telement.addEventListener(event, callback, {capture:true, once:once === true});\r\n\r\n\t\t// Save event listener\r\n\t\tif(element.sf$eventListener === undefined)\r\n\t\t\telement.sf$eventListener = {};\r\n\r\n\t\tif(element.sf$eventListener[event] === undefined)\r\n\t\t\telement.sf$eventListener[event] = [];\r\n\r\n\t\telement.sf$eventListener[event].push(callback);\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.once = function(element, event, selector, callback){\r\n\t\tself.on(element, event, selector, callback, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event listener\r\n\t * @param  Node \telement \tparent element\r\n\t * @param  string \tevent   \tevent name\r\n\t * @param  string  \tselector    selector\r\n\t * @return null\r\n\t */\r\n\tself.off = function(element, event, selector){\r\n\t\t// Remove all event\r\n\t\tif(event === undefined){\r\n\t\t\tif(element.sf$eventListener === undefined)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar events = element.sf$eventListener[event];\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar events = event.split(' ');\r\n\t\tif(events.length !== 1){\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove listener\r\n\t\tif(element.sf$eventListener === undefined)\r\n\t\t\treturn;\r\n\r\n\t\tvar ref = element.sf$eventListener;\r\n\t\tif(ref !== undefined && ref[event] !== undefined){\r\n\t\t\tfor (var i = ref[event].length - 1; i >= 0; i--) {\r\n\t\t\t\tif(selector && ref[event][i].selector !== selector)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\telement.removeEventListener(event, ref[event].splice(i, 1), true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.animateCSS = function(element, animationName, callback, duration) {\r\n\t\tvar animationEnd = {\r\n\t\t\tanimation: 'animationend',\r\n\t\t\tOAnimation: 'oAnimationEnd',\r\n\t\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t\t};\r\n\r\n\t\tfor (var t in animationEnd){\r\n\t\t\tif(element.style[t] !== undefined){\r\n\t\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(duration){\r\n\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t}\r\n\r\n\t\tvar list = ('animated ' + animationName).split(' ');\r\n\t\telement.classList.add.apply(element.classList, list);\r\n\t\t$.once(element, animationEnd, function(){\r\n\t\t\telement.classList.remove.apply(element.classList, list);\r\n\t\t\t\r\n\t\t\tif(duration) setTimeout(function(){\r\n\t\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t\t}, 1);\r\n\r\n\t\t\tif(typeof callback === 'function') callback();\r\n\t\t});\r\n\t}\r\n\r\n\tvar emptyDOM = {\r\n\t\tdiv:document.createElement('div'),\r\n\t\tul:document.createElement('ul'),\r\n\t\ttbody:document.createElement('tbody'),\r\n\t\ttr:document.createElement('tr'),\r\n\t\ttable:document.createElement('table'),\r\n\t\tselect:document.createElement('select'),\r\n\t};\r\n\tself.parseElement = function(html, returnNode){\r\n\t\tvar result = [];\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\r\n        if(html.indexOf('<li') === 0) tempDOM = emptyDOM.ul;\r\n        if(html.indexOf('<tr') === 0) tempDOM = emptyDOM.tbody;\r\n        if(html.indexOf('<td') === 0 || html.indexOf('<th') === 0) tempDOM = emptyDOM.tr;\r\n        if(html.indexOf('<tbody') === 0) tempDOM = emptyDOM.table;\r\n        if(html.indexOf('<option') === 0) tempDOM = emptyDOM.select;\r\n\r\n\t\ttempDOM.textContent = '';\r\n\t\ttempDOM.insertAdjacentHTML('afterBegin', html);\r\n\r\n\t\tvar ref = tempDOM[returnNode ? 'childNodes' : 'children'];\r\n\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\tresult.push(ref.item(i));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tself.remove = function(elements){\r\n\t\tif(elements.remove !== undefined)\r\n\t\t\treturn elements.remove();\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\telements[i].remove();\r\n\t\t}\r\n\t}\r\n\r\n\tvar documentElement = null;\r\n\tsetTimeout(function(){\r\n\t\tsf.loader.domReady(function(){\r\n\t\t\tdocumentElement = document.body.parentElement;\r\n\t\t});\r\n\t}, 1);\r\n\r\n\tvar haveSymbol = /[~`!@#$%^&*()+={}|[\\]\\\\:\";'<>?,./ ]/;\r\n\tself.getSelector = function(element, childIndexes, untilElement){\r\n\t\tvar names = [];\r\n\t\tif(untilElement === undefined) untilElement = documentElement;\r\n\r\n\t\tvar previousSibling = childIndexes ? 'previousSibling' : 'previousElementSibling';\r\n\r\n\t\twhile(element.parentNode !== null){\r\n\t\t\tif(element.id && !haveSymbol.test(element.id)){\r\n\t\t\t\tnames.unshift('#'+element.id);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(element === untilElement){\r\n\t\t\t\t\tif(childIndexes === undefined)\r\n\t\t\t\t\t\tnames.unshift(element.tagName);\r\n\t\t\t\t\telse names.unshift(0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar e = element;\r\n\t\t\t\t\tvar i = childIndexes ? 0 : 1;\r\n\r\n\t\t\t\t\twhile(e[previousSibling]){\r\n\t\t\t\t\t\te = e[previousSibling];\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(childIndexes)\r\n\t\t\t\t\t\tnames.unshift(i);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tnames.unshift(\":nth-child(\"+i+\")\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t\tif(element === null)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndexes)\r\n\t\t\treturn names;\r\n\t\treturn names.join(\" > \");\r\n\t}\r\n\r\n\tself.childIndexes = function(array, context){\r\n\t\tvar element = context || documentElement;\r\n\t\tvar i = 1;\r\n\r\n\t\tif(array[0].constructor === String)\r\n\t\t\telement = element.querySelector(array[0]);\r\n\r\n\t\telse if(array.length === 1)\r\n\t\t\treturn element;\r\n\r\n\t\tfor (i = i; i < array.length; i++) {\r\n\t\t\telement = element.childNodes.item(array[i]);\r\n\r\n\t\t\tif(element === null)\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n})();","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 0;\r\n\tself.DOMWasLoaded = false;\r\n\tself.DOMReady = false;\r\n\tself.turnedOff = true;\r\n\r\n\tvar whenDOMReady = [];\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\tself.off = function(){\r\n\t\tself.turnedOff = true;\r\n\t}\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.domReady = function(func){\r\n\t\tif(self.DOMReady) return func();\r\n\t\tif(whenDOMReady.indexOf(func) !== -1) return;\r\n\t\twhenDOMReady.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('link');\r\n\t        s.rel = 'stylesheet';\r\n\t        s.href = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tself.js = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('script');\r\n\t        s.type = \"text/javascript\";\r\n\t        s.async = true;\r\n\t        s.src = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(function(){\r\n\t\tif(self.totalContent === 0 && !self.turnedOff){\r\n\t\t\tself.loadedContent = self.totalContent = 1;\r\n\t\t\tconsole.warn(\"If you don't use content loader feature, please turn it off with `sf.loader.off()`\");\r\n\t\t}\r\n\t}, 10000);\r\n\r\n\r\n\tvar isQueued = false;\r\n\tvar lastState = '';\r\n\tdocument.addEventListener(\"load\", function domLoadEvent(event){\r\n\t\t// Add processing class to queued element\r\n\t\tif(isQueued === false && document.body){\r\n\t\t\tdocument.removeEventListener('load', domLoadEvent, true);\r\n\r\n\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tfor (var i = 0; i < isQueued.length; i++) {\r\n\t\t\t\tisQueued[i].classList.add('sf-dom-queued');\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued.length === 0) isQueued = false;\r\n\r\n\t\t\tif(lastState === 'loading'){\r\n\t\t\t\tvar repeatedList = $('[sf-repeat-this]', document.body);\r\n\t\t\t\tfor (var i = 0; i < repeatedList.length; i++) {\r\n\t\t\t\t\trepeatedList[i].classList.add('sf-dom-queued');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Find images\r\n\t\t\t\tvar temp = $('img:not(onload)[src]');\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tsf.loader.totalContent++;\r\n\t\t\t\t\ttemp[i].addEventListener('load', sf.loader.f, {once:true});\r\n\t\t\t\t\ttemp[i].addEventListener('error', sf.loader.f, {once:true});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, true);\r\n\r\n\tdocument.addEventListener('readystatechange', function domStateEvent(){\r\n\t\tif(document.readyState === 'interactive' || document.readyState === 'complete'){\r\n\t\t\tif(self.DOMReady === false){\r\n\t\t\t\tself.DOMReady = true;\r\n\t\t\t\tfor (var i = 0; i < whenDOMReady.length; i++) {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\twhenDOMReady[i]();\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued === false)\r\n\t\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tresourceWaitTimer = setInterval(waitResources, 100);\r\n\t\t\tdocument.removeEventListener('readystatechange', domStateEvent, true);\r\n\t\t}\r\n\t}, true);\r\n\r\n\tvar resourceWaitTimer = -1;\r\n\tfunction waitResources(){\r\n\t\tif(self.turnedOff === false && self.loadedContent < self.totalContent)\r\n\t\t\treturn;\r\n\r\n\t\tclearInterval(resourceWaitTimer);\r\n\r\n\t\tvar listener = sf.dom('script, link, img');\r\n\t\tfor (var i = 0; i < listener.length; i++) {\r\n\t\t\tlistener[i].removeEventListener('error', sf.loader.f);\r\n\t\t\tlistener[i].removeEventListener('load', sf.loader.f);\r\n\t\t}\r\n\r\n\t\tself.DOMWasLoaded = true;\r\n\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\ttry{\r\n\t\t\t\twhenDOMLoaded[i]();\r\n\t\t\t} catch(e){\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\twhenProgress.splice(0);\r\n\t\twhenDOMReady.splice(0);\r\n\t\twhenDOMLoaded.splice(0);\r\n\t\twhenDOMReady = whenDOMLoaded = null;\r\n\r\n\t\t// Last init\r\n\t\tsf.controller.init();\r\n\t\tsf.model.init(document.body, isQueued);\r\n\t\tsf.router.init();\r\n\r\n\t\tisQueued = null;\r\n\t}\r\n}\r\nsf.prototype.constructor = sf.loader.onFinish;","// Data save and HTML content binding\r\nsf.model = function(scope){\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\tif(sf.controller.pending[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n};\r\n\r\n(function(){\r\n\tvar self = sf.model;\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\r\n\tvar processingElement = null;\r\n\r\n\t// For debugging, normalize indentation\r\n\tfunction trimIndentation(text){\r\n\t\tvar indent = text.split(\"\\n\", 3);\r\n\t\tif(indent[0][0] !== ' ' || indent[0][0] !== \"\\t\")\r\n\t\t\tindent = indent[1];\r\n\t\telse indent = indent[0];\r\n\r\n\t\tif(indent === undefined) return text;\r\n\t\tindent = indent.length - indent.trim().length;\r\n\t\tif(indent === 0) return text;\r\n\t\treturn text.replace(RegExp('^([\\\\t ]{'+indent+'})', 'gm'), '');\r\n\t}\r\n\r\n\t// Secured evaluation\r\n\tvar bracketMatch = RegExp('([\\\\w.]*?[\\\\S\\\\s])\\\\('+sf.regex.avoidQuotes, 'g');\r\n\tvar chackValidFunctionCall = /[a-zA-Z0-9 \\]\\$\\)]/;\r\n\tvar allowedFunction = [':', 'for', 'if', 'while', '_content_.take', 'console.log'];\r\n\tvar localEval = function(script, _model_, _modelScope, _content_){\r\n\t\t\"use strict\";\r\n\r\n\t\t// ==== Security check ====\r\n\t\tvar tempScript = script;\r\n\r\n\t\t// Remove quotes\r\n\t\ttempScript = tempScript.replace(sf.regex.getQuotes, '\"Quotes\"');\r\n\r\n\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\tvar preventExecution = false;\r\n\t\tvar check_ = null;\r\n\t\twhile((check_ = bracketMatch.exec(tempScript)) !== null){\r\n\t\t\tcheck_[1] = check_[1].trim();\r\n\r\n\t\t\tif(allowedFunction.indexOf(check_[1]) === -1 &&\r\n\t\t\t\tcheck_[1].split('.')[0] !== '_modelScope' &&\r\n\t\t\t\tchackValidFunctionCall.test(check_[1][check_[1].length-1])\r\n\t\t\t){\r\n\t\t\t\tpreventExecution = check_[1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(preventExecution){\r\n\t\t\tconsole.error(\"Trying to executing unrecognized function (\"+preventExecution+\")\");\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\t\t// ==== Security check ended ====\r\n\t\r\n\t\tvar _result_ = '';\r\n\t\ttry{\r\n\t\t\tif(/@return /.test(script) === true){\r\n\t\t\t\tvar _evaled_ = eval('(function(){'+script.split('@return ').join('return ')+'})()');\r\n\t\t\t\treturn _result_ + _evaled_;\r\n\t\t\t}\r\n\t\t\telse var _evaled_ = eval(script);\r\n\t\t} catch(e){\r\n\t\t\tconsole.error(e);\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\t// Find an index for the element on the list\r\n\tself.index = function(element){\r\n\t\tvar i = -1;\r\n\t\tvar tagName = element.tagName;\r\n\t\tvar currentElement = element;\r\n\r\n\t\twhile(element !== null) {\r\n\t\t\tif(element.tagName === tagName)\r\n\t\t\t\ti++;\r\n\r\n\t\t\telement = element.previousElementSibling;\r\n\t\t}\r\n\r\n\t\tvar list = currentElement.getAttribute('sf-bind-list');\r\n\t\tif(!list) return i;\r\n\r\n\t\tvar ref = sf.model.root[sf.controller.modelName(currentElement)][list];\r\n\t\tif(!ref.$virtual) return i;\r\n\r\n\t\treturn i + ref.$virtual.DOMCursor - 1;\r\n\t}\r\n\r\n\t// Declare model for the name with a function\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\t\t\r\n\t\tfunc(self(name), self);\r\n\t}\r\n\r\n\t// Get property of the model\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys.join('|');\r\n\t}\r\n\r\n\t// Escape the escaped quote\r\n\tfunction escapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*');\r\n\t}\r\n\r\n\tfunction unescapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\");\r\n\t}\r\n\r\n\tfunction elseIfHandle(else_, scopes){\r\n\t\tvar elseIf = else_.elseIf;\r\n\r\n\t\t// Else if\r\n\t\tfor (var i = 0; i < elseIf.length; i++) {\r\n\t\t\t// Check the condition\r\n\t\t\tscopes[0] = elseIf[i][0];\r\n\t\t\tif(!localEval.apply(self.root, scopes))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Get the value\r\n\t\t\tscopes[0] = elseIf[i][1];\r\n\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t}\r\n\r\n\t\t// Else\r\n\t\tif(else_.elseValue === null)\r\n\t\t\treturn '';\r\n\r\n\t\tscopes[0] = else_.elseValue;\r\n\t\treturn localEval.apply(self.root, scopes);\r\n\t}\r\n\r\n\t// ==== Template parser ====\r\n\tvar templateParser_regex = /{{%=([0-9]+)/gm;\r\n\tvar REF_DIRECT = 0, REF_IF = 1, REF_EXEC = 2;\r\n\tvar templateExec = function(parse, item, atIndex){\r\n\t\tvar parsed = {};\r\n\r\n\t\t// Get or evaluate static or dynamic data\r\n\t\tfor (var i = 0; i < parse.length; i++) {\r\n\t\t\tif(atIndex !== undefined && atIndex.indexOf(i) === -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar ref = parse[i];\r\n\t\t\tref.data[1] = item;\r\n\r\n\t\t\t// Direct evaluation type\r\n\t\t\tif(ref.type === REF_DIRECT || ref.type === REF_EXEC)\r\n\t\t\t\tparsed[i] = {type:ref.type, data:localEval.apply(self.root, ref.data)};\r\n\r\n\t\t\t// Conditional type\r\n\t\t\telse if(ref.type === REF_IF){\r\n\t\t\t\tvar scopes = ref.data;\r\n\t\t\t\tparsed[i] = {type:ref.type, data:''};\r\n\t\t\t\tscopes[0] = ref.if[0];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tparsed[i].data = elseIfHandle(ref, scopes);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscopes[0] = ref.if[1];\r\n\t\t\t\tparsed[i].data = localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n\r\n\tvar templateParser = function(template, item){\r\n\t\tvar html = template.html.cloneNode(true);\r\n\t\tvar addresses = template.addresses;\r\n\t\tvar parsed = templateExec(template.parse, item);\r\n\r\n\t\t// Save model item reference to node\r\n\t\thtml.model = item;\r\n\r\n\t\tvar changesReference = [];\r\n\t\tvar pendingInsert = [];\r\n\r\n\t\t// Find element where the data belongs to\r\n\t\tfor (var i = 0; i < addresses.length; i++) {\r\n\t\t\tvar ref = addresses[i];\r\n\t\t\tvar current = $.childIndexes(ref.address, html);\r\n\r\n\t\t\t// Modify element attributes\r\n\t\t\tif(ref.nodeType === 1){\r\n\t\t\t\tvar refA = ref.attributes;\r\n\t\t\t\tfor(var a = 0; a < refA.length; a++){\r\n\t\t\t\t\tvar refB = refA[a];\r\n\r\n\t\t\t\t\tchangesReference.push({\r\n\t\t\t\t\t\tattribute:current.attributes[refB.name],\r\n\t\t\t\t\t\tref:refB\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(refB.direct !== undefined){\r\n\t\t\t\t\t\tcurrent.setAttribute(refB.name, parsed[refB.direct].data);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Below is used for multiple data\r\n\t\t\t\t\trefB = current.attributes[refB.name];\r\n\r\n\t\t\t\t\trefB.value = refB.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Replace text node\r\n\t\t\tif(ref.nodeType === 3){\r\n\t\t\t\tvar refA = current;\r\n\r\n\t\t\t\tchangesReference.push({\r\n\t\t\t\t\ttextContent:refA,\r\n\t\t\t\t\tref:ref\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(ref.direct !== undefined){\r\n\t\t\t\t\trefA.textContent = parsed[ref.direct].data;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Below is used for multiple/dynamic data\r\n\t\t\t\trefA.textContent = refA.textContent.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Replace dynamic node\r\n\t\t\tif(ref.nodeType === -1){\r\n\t\t\t\tvar cRef = {\r\n\t\t\t\t\tdynamicFlag:current,\r\n\t\t\t\t\tdirect:ref.parse_index,\r\n\t\t\t\t\tparentNode:current.parentNode,\r\n\t\t\t\t\tstartFlag:ref.startFlag && $.childIndexes(ref.startFlag, html)\r\n\t\t\t\t};\r\n\t\t\t\tchangesReference.push(cRef);\r\n\r\n\t\t\t\t// Pending element insert to take other element reference\r\n\t\t\t\tpendingInsert.push(cRef);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Save reference to element\r\n\t\thtml.sf$elementReferences = changesReference;\r\n\t\t// html.sf$modelParsed = parsed;\r\n\r\n\t\t// Run the pending element\r\n\t\tfor (var i = 0; i < pendingInsert.length; i++) {\r\n\t\t\tvar ref = pendingInsert[i];\r\n\t\t\tvar tDOM = $.parseElement(parsed[ref.direct].data, true);\r\n\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\tref.parentNode.insertBefore(tDOM[a], ref.dynamicFlag);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t}\r\n\r\n\tfunction syntheticCache(element, template, item){\r\n\t\tif(element.sf$cache === undefined)\r\n\t\t\telement.sf$cache = {};\r\n\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\tvar ref = modelRef_array[i];\r\n\t\t\tcache[ref[0]] = deepProperty(item, ref[1]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction syntheticTemplate(element, template, property, item){\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tif(property !== undefined){\r\n\t\t\tvar changes = template.modelReference[property];\r\n\t\t\tif(changes === undefined || changes.length === 0){\r\n\t\t\t\tconsole.error(\"Failed to run syntheticTemplate because property '\"+property+\"' is not observed\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\tif(ref[0] !== property) continue;\r\n\r\n\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t// Check if data was different\r\n\t\t\t\tif(cache[ref[0]] !== newData)\r\n\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar changes = [];\r\n\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t// Check if data was different\r\n\t\t\t\tif(cache[ref[0]] !== newData){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(changes.length === 0) return false;\r\n\t\t}\r\n\r\n\t\tvar parsed = templateExec(template.parse, item, changes);\r\n\t\tfunction checkRelatedChanges(parseIndex){\r\n\t\t\tvar found = false;\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(changes.indexOf(parseIndex[i]) !== -1){\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(found === false)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t// Prepare all required data\r\n\t\t\tchanges = [];\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(parsed[parseIndex[i]] === undefined){\r\n\t\t\t\t\tchanges.push(parseIndex[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tObject.assign(parsed, templateExec(template.parse, item, changes));\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tvar changesReference = element.sf$elementReferences;\r\n\t\tvar haveChanges = false;\r\n\t\tfor (var i = 0; i < changesReference.length; i++) {\r\n\t\t\tvar cRef = changesReference[i];\r\n\r\n\t\t\tif(cRef.dynamicFlag !== undefined){ // Dynamic data\r\n\t\t\t\tif(parsed[cRef.direct] !== undefined){\r\n\t\t\t\t\tvar tDOM = $.parseElement(parsed[cRef.direct].data, true);\r\n\t\t\t\t\tvar currentDOM = $.prevAll(cRef.dynamicFlag, cRef.startFlag);\r\n\t\t\t\t\tvar notExist = false;\r\n\r\n\t\t\t\t\t// Replace if exist, skip if similar\r\n\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\t\t\tif(currentDOM[a] === undefined){\r\n\t\t\t\t\t\t\tnotExist = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(currentDOM[a].isEqualNode(tDOM[a]) === false)\r\n\t\t\t\t\t\t\tcRef.parentNode.replaceChild(tDOM[a], currentDOM[a]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Add if not exist\r\n\t\t\t\t\tif(notExist){\r\n\t\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++)\r\n\t\t\t\t\t\t\tcRef.parentNode.insertBefore(tDOM[a], cRef.dynamicFlag);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove if over index\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tfor (var a = tDOM.length; a < currentDOM.length; a++) {\r\n\t\t\t\t\t\t\tcurrentDOM[a].remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(cRef.textContent !== undefined){ // Text only\r\n\t\t\t\tif(cRef.ref.parse_index !== undefined){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.textContent.textContent === temp) continue;\r\n\t\t\t\t\t\tcRef.textContent.textContent = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.textContent.textContent === value) continue;\r\n\t\t\t\t\tcRef.textContent.textContent = value;\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(cRef.attribute !== undefined){ // Attributes\r\n\t\t\t\tif(cRef.ref.parse_index !== undefined){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.attribute.value === temp) continue;\r\n\t\t\t\t\t\tcRef.attribute.value = temp;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.attribute.value === value) continue;\r\n\t\t\t\t\tcRef.attribute.value = value;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn haveChanges;\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval, preParsedReference){\r\n\t\tvar _modelScope = self.root[scope];\r\n\t\tif(!runEval) runEval = '';\r\n\t\t\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(_modelScope);\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(_modelScope[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\tvar preParsed = [];\r\n\t\t\tvar lastParsedIndex = preParsedReference.length;\r\n\t\t}\r\n\r\n\t\tvar prepared = html.replace(/{{([^@%][\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = escapeEscapedQuote(temp); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\r\n\t\t\ttemp = unescapeEscapedQuote(temp); // ToDo: Unescape\r\n\r\n\t\t\t// Unescape HTML\r\n\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t// Evaluate\r\n\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\ttemp = temp.trim();\r\n\r\n\t\t\t\t// Simplicity similar\r\n\t\t\t\tvar exist = preParsed.indexOf(temp);\r\n\r\n\t\t\t\tif(exist === -1){\r\n\t\t\t\t\tpreParsed.push(temp);\r\n\t\t\t\t\tpreParsedReference.push({type:REF_DIRECT, data:[temp, _model_, _modelScope]});\r\n\t\t\t\t\treturn '{{%=' + (preParsed.length + lastParsedIndex - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn '{{%=' + (exist + lastParsedIndex);\r\n\t\t\t}\r\n\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(/(?!&#.*?;)[\\u00A0-\\u9999<>\\&]/gm, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\tpreParsed = variableList = _modelScope = _model_ = mask = scope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t}\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\t// Dynamic data parser\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope, runEval){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(passVar === null)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\t// Use strict mode and prepare for new variables\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\t// Declare new variable\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove var because no variable are being passed\r\n\t\t\t\tif(firstTime === true)\r\n\t\t\t\t\tstrDeclare = strDeclare.replace('var ', '');\r\n\r\n\t\t\t\t// Escape function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('&#40;').split(')').join('&#41;');\r\n\r\n\t\t\t\t// Pass to static data parser for another HTML data\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Build script preparation\r\n\t\thtml = html.replace(/{\\[([\\s\\S]*?)\\]}/g, function(full, matched){\r\n\t\t\tif(/{{.*?}}/.test(matched) === false)\r\n\t\t\t\treturn \"_result_ += '\"+matched.split(\"'\").join(\"\\\\'\")+\"'\";\r\n\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope)+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(runEval === '#noEval')\r\n\t\t\tvar preParsedReference = [];\r\n\r\n\t\tvar prepared = html.replace(/{{(@[\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = escapeEscapedQuote(temp); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\t\t\ttemp = unescapeEscapedQuote(temp); // ToDo: Unescape\r\n\r\n\t\t\t// Unescape HTML\r\n\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass_ = /(var|let)([\\w,\\s]+)(?=\\s(?==|in|of))/g;\r\n\t\t\tvar VarPass = [];\r\n\t\t\tvar s1 = null;\r\n\t\t\twhile((s1 = VarPass_.exec(temp)) !== null){\r\n\t\t\t\tVarPass.push(s1[2]);\r\n\t\t\t}\r\n\r\n\t\t\tif(_model_ === null && runEval === '#noEval')\r\n\t\t\t\tVarPass.push('_model_');\r\n\r\n\t\t\tif(VarPass.length !== 0){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/([\\n\\t\\r]|  )+/g, '').split(',').forEach(function(val){\r\n\t\t\t\t\t\tobtained.push(val);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':(typeof '+VarPass[i]+'!==\"undefined\"?'+VarPass[i]+':undefined)';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(VarPass.length === 0)\r\n\t\t\t\t\tVarPass = 'null';\r\n\t\t\t\telse VarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\t\t\telse temp = temp.split('&VarPass&').join('null');\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\r\n\t\t\t\t// {if, elseIf:([if, value], ...), elseValue}\r\n\t\t\t\tvar findElse = function(text){\r\n\t\t\t\t\ttext = text.join(':');\r\n\t\t\t\t\tvar else_ = null;\r\n\r\n\t\t\t\t\t// Get else value\r\n\t\t\t\t\tvar text = text.split('@else' + (text.indexOf(':') !== -1 ? ':' : ' :'));\r\n\t\t\t\t\tif(text.length === 2)\r\n\t\t\t\t\t\telse_ = text.pop();\r\n\t\t\t\t\telse text = text[0];\r\n\r\n\t\t\t\t\t// Split elseIf\r\n\t\t\t\t\ttext = text.split('@elseif ');\r\n\r\n\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t\tif:text.shift(),\r\n\t\t\t\t\t\telseIf:[],\r\n\t\t\t\t\t\telseValue:else_\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Separate condition script and value\r\n\t\t\t\t\tfor (var i = 0; i < text.length; i++) {\r\n\t\t\t\t\t\tvar val = text[i].split(':');\r\n\t\t\t\t\t\tobj.elseIf.push([val.shift(), val.join(':')]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tvar condition = check.shift();\r\n\t\t\t\t\tvar elseIf = findElse(check);\r\n\t\t\t\t\telseIf.type = REF_IF;\r\n\t\t\t\t\telseIf.data = [null, _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t\t// Trim Data\r\n\t\t\t\t\telseIf.if = [condition.trim(), elseIf.if.trim()];\r\n\t\t\t\t\tif(elseIf.elseValue !== null)\r\n\t\t\t\t\t\telseIf.elseValue = elseIf.elseValue.trim();\r\n\r\n\t\t\t\t\tfor (var i = 0; i < elseIf.elseIf.length; i++) {\r\n\t\t\t\t\t\telseIf.elseIf[i][0] = elseIf.elseIf[i][0].trim();\r\n\t\t\t\t\t\telseIf.elseIf[i][1] = elseIf.elseIf[i][1].trim();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Push data\r\n\t\t\t\t\tpreParsedReference.push(elseIf);\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scopes = [check[0], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\treturn elseIfHandle(findElse(check), scopes);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcheck.shift();\r\n\t\t\t\tscopes[0] = check.join(':');\r\n\r\n\t\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tvar scopes = [check[1], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tpreParsedReference.push({type:REF_EXEC, data:scopes});\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, scopes);\r\n\t\t\t\treturn temp;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\t_modelScope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t\treturn [prepared, preParsedReference, _content_];\r\n\t\t}\r\n\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\tvar bindArray = function(template, list, mask, modelName, propertyName, targetNode, parentNode, tempDOM){\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'swap', 'move', 'replace', 'softRefresh', 'hardRefresh'];\r\n\t\tvar refreshTimer = -1;\r\n\t\tvar parentChilds = parentNode.children;\r\n\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\r\n\t\t// Update callback\r\n\t\tvar modelRef = self.root[modelName];\r\n\t\tvar eventVar = 'on$'+propertyName;\r\n\t\tvar callback = modelRef[eventVar];\r\n\r\n\t\tvar processElement = function(index, options, other, count){\r\n\t\t\t// Find boundary for inserting to virtual DOM\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar vStartRange = list.$virtual.DOMCursor;\r\n\t\t\t\tvar vEndRange = vStartRange + list.$virtual.preparedLength;\r\n\t\t\t}\r\n\r\n\t\t\tif(options === 'clear'){\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar spacer = [parentNode.firstElementChild, parentNode.lastElementChild];\r\n\r\n\t\t\t\tparentNode.textContent = '';\r\n\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tparentNode.appendChild(spacer[0]);\r\n\t\t\t\t\tparentNode.appendChild(spacer[1]);\r\n\t\t\t\t\tlist.$virtual.dom.textContent = '';\r\n\t\t\t\t\tspacer[1].style.height = \r\n\t\t\t\t\tspacer[0].style.height = 0;\r\n\t\t\t\t\tlist.$virtual.reset(true);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid multiple refresh by set a timer\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar exist = list.$virtual.elements();\r\n\r\n\t\t\t\tclearTimeout(refreshTimer);\r\n\t\t\t\trefreshTimer = setTimeout(function(){\r\n\t\t\t\t\tlist.$virtual.reinitScroll();\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse exist = parentChilds;\r\n\r\n\t\t\t// Hard refresh - Append element\r\n\t\t\tif(options === 'hardRefresh'){\r\n\t\t\t\t// Clear siblings after the index\r\n\t\t\t\tfor (var i = index; i < exist.length; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar vCursor = list.$virtual.vCursor;\r\n\r\n\t\t\t\tfor (var i = index; i < list.length; i++) {\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\tif(vCursor.floor === null && i < vEndRange)\r\n\t\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\t\telse list.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse parentNode.appendChild(temp);\r\n\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual && list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(callback === undefined)\r\n\t\t\t\tcallback = modelRef[eventVar];\r\n\r\n\t\t\tif(options === 'swap' || options === 'move'){\r\n\t\t\t\tif(options === 'move'){\r\n\t\t\t\t\tvar overflow = list.length - index - count;\r\n\t\t\t\t\tif(overflow < 0)\r\n\t\t\t\t\t\tcount += overflow;\r\n\r\n\t\t\t\t\t// Move to virtual DOM\r\n\t\t\t\t\tvar vDOM = document.createElement('div');\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tvDOM.appendChild(exist[index + i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar nextSibling = exist[other] || null;\r\n\t\t\t\t\tvar theParent = nextSibling && nextSibling.parentNode;\r\n\r\n\t\t\t\t\tif(theParent === false){\r\n\t\t\t\t\t\tif(list.$virtual && list.length >= vEndRange)\r\n\t\t\t\t\t\t\ttheParent = list.$virtual.dom;\r\n\t\t\t\t\t\telse theParent = parentNode;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Move to defined index\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\ttheParent.insertBefore(vDOM.firstElementChild, nextSibling);\r\n\r\n\t\t\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\t\t\tcallback.update(exist[index + i], 'move');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(index > other){\r\n\t\t\t\t\tvar index_a = exist[other];\r\n\t\t\t\t\tother = exist[index];\r\n\t\t\t\t\tindex = index_a;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tindex = exist[index];\r\n\t\t\t\t\tother = exist[other];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar other_sibling = other.nextSibling;\r\n\t\t\t\tvar other_parent = other.parentNode;\r\n\t            index.parentNode.insertBefore(other, index.nextSibling);\r\n\t            other_parent.insertBefore(index, other_sibling);\r\n\r\n\t\t\t\tif(callback !== undefined && callback.update){\r\n\t\t\t\t\tcallback.update(exist[other], 'swap');\r\n\t\t\t\t\tcallback.update(exist[index], 'swap');\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Clear unused element if current array < last array\r\n\t\t\tif(options === 'removeRange'){\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\texist[index].remove();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(options === 'remove'){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\texist[index].remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.remove){\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tsetTimeout(startRemove, 800);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse startRemove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update\r\n\t\t\telse if(options === 'update'){\r\n\t\t\t\tif(index === undefined){\r\n\t\t\t\t\tindex = 0;\r\n\t\t\t\t\tother = list.length;\r\n\t\t\t\t}\r\n\t\t\t\telse if(other === undefined) other = index + 1;\r\n\t\t\t\telse if(other < 0) other = list.length + other;\r\n\t\t\t\telse other += index;\r\n\r\n\t\t\t\t// Trim length\r\n\t\t\t\tvar overflow = list.length - other;\r\n\t\t\t\tif(overflow < 0) other = other + overflow;\r\n\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\tvar oldChild = exist[i];\r\n\t\t\t\t\tif(oldChild === undefined || list[i] === undefined)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\toldChild.parentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tparentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\t\tcallback.update(temp, 'replace');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar item = list[index];\r\n\t\t\tif(item === undefined) return;\r\n\r\n\t\t\tvar temp = templateParser(template, item);\r\n\t\t\tif(isKeyed === false)\r\n\t\t\t\tsyntheticCache(temp, template, item);\r\n\r\n\t\t\t// Create\r\n\t\t\tif(options === 'insertAfter'){\r\n\t\t\t\tif(exist.length === 0)\r\n\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\telse{\r\n\t\t\t\t\tvar referenceNode = exist[index - 1];\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode.nextSibling);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t\telse if(options === 'prepend'){\r\n\t\t\t\tvar referenceNode = exist[0];\r\n\t\t\t\tif(referenceNode !== undefined){\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode);\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t}\r\n\t\t\t\telse options = 'append';\r\n\t\t\t}\r\n\t\t\tif(options === 'append'){\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tif(index === 0) // Add before virtual scroller\r\n\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\telse if(index >= vEndRange){ // To virtual DOM\r\n\t\t\t\t\t\tif(list.$virtual.vCursor.floor === null)\r\n\t\t\t\t\t\t\tlist.$virtual.vCursor.floor = temp;\r\n\r\n\t\t\t\t\t\tlist.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse // To real DOM\r\n\t\t\t\t\t\texist[index-1].insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparentNode.appendChild(temp);\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar _double_zero = [0,0]; // For arguments\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = undefined;\r\n\t\t\t\t\tvar lastLength = this.length;\r\n\r\n\t\t\t\t\tif(name === 'move'){\r\n\t\t\t\t\t\tvar from = arguments[0];\r\n\t\t\t\t\t\tvar to = arguments[1];\r\n\t\t\t\t\t\tif(from === to) return;\r\n\t\t\t\t\t\tvar count = arguments[2] || 1;\r\n\t\t\t\t\t\tprocessElement(from, 'move', to, count);\r\n\r\n\t\t\t\t\t\tvar temp = Array.prototype.splice.apply(this, [from, count]);\r\n\t\t\t\t\t\ttemp.unshift(to, 0);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Reset virtual ceiling and floor\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(name === 'swap'){\r\n\t\t\t\t\t\tvar i = arguments[0];\r\n\t\t\t\t\t\tvar o = arguments[1];\r\n\t\t\t\t\t\tif(i === o) return;\r\n\t\t\t\t\t\tprocessElement(i, 'swap', o);\r\n\t\t\t\t\t\tvar temp = this[i];\r\n\t\t\t\t\t\tthis[i] = this[o];\r\n\t\t\t\t\t\tthis[o] = temp;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'replace'){\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.resetViewport();\r\n\r\n\t\t\t\t\t\t// Check if item has same reference\r\n\t\t\t\t\t\tif(arguments[0].length >= lastLength && lastLength !== 0){\r\n\t\t\t\t\t\t\tvar matchLeft = lastLength;\r\n\t\t\t\t\t\t\tvar ref = arguments[0];\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < lastLength; i++) {\r\n\t\t\t\t\t\t\t\tif(ref[i] === this[i]){\r\n\t\t\t\t\t\t\t\t\tmatchLeft--;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the end\r\n\t\t\t\t\t\t\tif(matchLeft === 0){\r\n\t\t\t\t\t\t\t\tif(ref.length === lastLength) return;\r\n\r\n\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(lastLength);\r\n\t\t\t\t\t\t\t\ttemp.unshift(lastLength, 0);\r\n\t\t\t\t\t\t\t\tthis.splice.apply(this, temp);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the middle\r\n\t\t\t\t\t\t\telse if(matchLeft !== lastLength){\r\n\t\t\t\t\t\t\t\tif(arguments[1] === true){\r\n\t\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(i);\r\n\t\t\t\t\t\t\t\t\ttemp.unshift(i, lastLength - i);\r\n\t\t\t\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t\t\t\tlist.refresh(i, lastLength);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Build from zero\r\n\t\t\t\t\t\tif(lastLength === 0){\r\n\t\t\t\t\t\t\tArray.prototype.push.apply(this, arguments[0]);\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Clear all items and merge the new one\r\n\t\t\t\t\t\tvar temp = [0, lastLength];\r\n\t\t\t\t\t\tArray.prototype.push.apply(temp, arguments[0]);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Rebuild all element\r\n\t\t\t\t\t\tif(arguments[1] !== true || isKeyed){\r\n\t\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reuse some element\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t// Clear unused element if current array < last array\r\n\t\t\t\t\t\t\tif(this.length < lastLength)\r\n\t\t\t\t\t\t\t\tprocessElement(this.length, 'removeRange', lastLength);\r\n\r\n\t\t\t\t\t\t\t// And start refreshing\r\n\t\t\t\t\t\t\tlist.refresh(0, this.length);\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reset virtual list\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reset();\r\n\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice' && arguments[0] === 0 && arguments[1] === undefined){\r\n\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\treturn Array.prototype.splice.apply(this, arguments);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(this.length, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'push'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(lastLength, 'append');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = 0; i < arguments.length; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(lastLength + i, 'append');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'shift'){\r\n\t\t\t\t\t\tprocessElement(0, 'remove');\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor > 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor--;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments[0] === 0 && arguments[1] === undefined)\r\n\t\t\t\t\t\t\treturn temp;\r\n\r\n\t\t\t\t\t\t// Removing data\r\n\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\tif(real < 0) real = lastLength + real;\r\n\r\n\t\t\t\t\t\tvar limit = arguments[1];\r\n\t\t\t\t\t\tif(!limit && limit !== 0) limit = this.length;\r\n\r\n\t\t\t\t\t\tfor (var i = limit - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tprocessElement(real + i, 'remove');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = real - limit;\r\n\r\n\t\t\t\t\t\tif(arguments.length >= 3){ // Inserting data\r\n\t\t\t\t\t\t\tlimit = arguments.length - 2;\r\n\r\n\t\t\t\t\t\t\t// Trim the index if more than length\r\n\t\t\t\t\t\t\tif(real >= this.length)\r\n\t\t\t\t\t\t\t\treal = this.length - 1;\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < limit; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(real + i, 'insertAfter');\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\t\tlist.$virtual.DOMCursor += limit;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(0, 'prepend');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = arguments.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\t\tprocessElement(i, 'prepend');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor !== 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor += arguments.length;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'softRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0], 'update', arguments[1]);\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'hardRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0] || 0, 'hardRefresh');\r\n\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = arguments[0] || 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(parentNode && parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\tdelete list.$virtual;\r\n\t\t\tlist.$virtual = {};\r\n\r\n\t\t\t// Transfer virtual DOM\r\n\t\t\tlist.$virtual.dom = tempDOM;\r\n\t\t\tif(callback !== undefined)\r\n\t\t\t\tlist.$virtual.callback = callback;\r\n\t\t\telse list.$virtual.callback_ = {ref:modelRef, var:eventVar};\r\n\r\n\t\t\tparentNode.replaceChild(template.html, parentChilds[1]);\r\n\t\t\tsf.internal.virtual_scroll.handle(list, targetNode, parentNode);\r\n\t\t\ttemplate.html.remove();\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\r\n\t\t// Todo: Enable auto item binding\r\n\t\tif(false && list.auto !== false){\r\n\t\t\t// for (var i = 0; i < list.length; i++) {\r\n\t\t\t// \tlist[i]\r\n\t\t\t// }\r\n\t\t}\r\n\r\n\t\thiddenProperty(list, 'refresh', function(index, length, property){\r\n\t\t\tif(index === undefined || index.constructor === String){\r\n\t\t\t\tproperty = index;\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tlength = list.length;\r\n\t\t\t}\r\n\t\t\telse if(length === undefined) length = index + 1;\r\n\t\t\telse if(length.constructor === String){\r\n\t\t\t\tproperty = length;\r\n\t\t\t\tlength = index + 1;\r\n\t\t\t}\r\n\t\t\telse if(length < 0) length = list.length + length;\r\n\t\t\telse length += index;\r\n\r\n\t\t\t// Trim length\r\n\t\t\tvar overflow = list.length - length;\r\n\t\t\tif(overflow < 0) length = length + overflow;\r\n\r\n\t\t\tfor (var i = index; i < length; i++) {\r\n\t\t\t\tvar elem = list.getElement(i);\r\n\r\n\t\t\t\t// Create element if not exist\r\n\t\t\t\tif(elem === undefined){\r\n\t\t\t\t\tlist.hardRefresh(i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(isKeyed === true)\r\n\t\t\t\t\t\tlist.softRefresh(i);\r\n\t\t\t\t\telse if(syntheticTemplate(elem, template, property, list[i]) === false)\r\n\t\t\t\t\t\tcontinue; // Continue if no update\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\tcallback.update(elem, 'replace');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar virtualChilds = null;\r\n\t\tif(list.$virtual){\r\n\t\t\tvirtualChilds = list.$virtual.dom.children;\r\n\t\t\tvar floorBound = list.$virtual.dCursor.floor;\r\n\t\t}\r\n\t\thiddenProperty(list, 'getElement', function(index){\r\n\t\t\tif(virtualChilds !== null){\r\n\t\t\t\tvar ret = undefined;\r\n\t\t\t\tif(index < list.$virtual.DOMCursor)\r\n\t\t\t\t\tret = virtualChilds[index];\r\n\t\t\t\telse {\r\n\t\t\t\t\tindex -= list.$virtual.DOMCursor;\r\n\t\t\t\t\tvar childElement = parentNode.childElementCount - 2;\r\n\r\n\t\t\t\t\tif(index <= childElement)\r\n\t\t\t\t\t\tret = parentChilds[index + 1];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tret = virtualChilds[index - childElement + list.$virtual.DOMCursor];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(ret !== floorBound)\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t\treturn parentChilds[index];\r\n\t\t});\r\n\t}\r\n\r\n\tvar loopParser = function(name, template, script, targetNode, parentNode){\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\r\n\t\tif(!self.root[name])\r\n\t\t\treturn console.error(\"Can't parse element because model for '\"+name+\"' was not found\", template);\r\n\r\n\t\tvar items = self.root[name][method[1]];\r\n\t\tif(items === undefined){\r\n\t\t\tconsole.error(\"Can't bind array to `\"+method[1]+\"` because undefined property in model `\"+name+\"`\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttemplate.setAttribute('sf-bind-list', method[1]);\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = template;\r\n\t\ttemplate = self.extractPreprocess(template, mask, name);\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tvar tempDOM = document.createElement('div');\r\n\t\t\tvar modelRef = self.root[name];\r\n\r\n\t\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\t\tvar elem = templateParser(template, items[i]);\r\n\t\t\t\ttempDOM.appendChild(elem);\r\n\r\n\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\tsyntheticCache(elem, template, items[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// Enable element binding\r\n\t\t\tif(modelRef.sf$bindedKey === undefined)\r\n\t\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\t\tif(modelRef.sf$bindedKey[method[1]] === undefined)\r\n\t\t\t\tmodelRef.sf$bindedKey[method[1]] = null;\r\n\r\n\t\t\tObject.defineProperty(modelRef, method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tif(val.length === 0)\r\n\t\t\t\t\t\treturn items.splice(0);\r\n\t\t\t\t\treturn items.replace(val, true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tbindArray(template, items, mask, name, method[1], targetNode, parentNode, tempDOM);\r\n\r\n\t\t\t// Output to real DOM if not being used for virtual list\r\n\t\t\tif(items.$virtual === undefined){\r\n\t\t\t\tvar children = tempDOM.children;\r\n\t\t\t\tfor (var i = 0, n = children.length; i < n; i++) {\r\n\t\t\t\t\tparentNode.appendChild(children[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttempDOM.remove();\r\n\t\t\t\ttempDOM = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar inputBoundFunction = function(e){\r\n\t\tself.root[e.target['sf-model']][e.target['sf-bounded']] = e.target.value;\r\n\t};\r\n\r\n\tvar bindInput = function(targetNode){\r\n\t\tvar temp = $('input[sf-bound]', targetNode);\r\n\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar model = sf.controller.modelName(element);\r\n\t\t\tif(!model) return;\r\n\r\n\t\t\tvar whichVar = element.getAttribute('sf-bound');\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(typeof self.root[model][whichVar] === undefined){\r\n\t\t\t\tconsole.error('Cannot get reference for self.root[\"' + model + '\"][\"' + whichVar+'\"]');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement['sf-bounded'] = whichVar;\r\n\t\t\telement['sf-model'] = model;\r\n\t\t\telement.setAttribute('sf-bounded', '');\r\n\t\t\telement.removeAttribute('sf-bound');\r\n\r\n\t\t\t// Bound value change\r\n\t\t\tif(element.tagName === 'INPUT' || element.tagName === 'TEXTAREA')\r\n\t\t\t\t$.on(element, 'keyup', inputBoundFunction);\r\n\r\n\t\t\telse\r\n\t\t\t\t$.on(element, 'change', inputBoundFunction);\r\n\t\t}\r\n\t}\r\n\r\n\tvar alreadyInitialized = false;\r\n\tself.init = function(targetNode, queued){\r\n\t\tif(alreadyInitialized && !targetNode) return;\r\n\t\talreadyInitialized = true;\r\n\t\tsetTimeout(function(){\r\n\t\t\talreadyInitialized = false;\r\n\t\t}, 50);\r\n\r\n\t\tif(!targetNode) targetNode = document.body;\r\n\t\tself.parsePreprocess(queued || self.queuePreprocess(targetNode), queued);\r\n\t\tbindInput(targetNode);\r\n\r\n\t\tvar temp = $('[sf-repeat-this]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar parent = element.parentElement;\r\n\r\n\t\t\tif(queued !== undefined)\r\n\t\t\t\telement.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(element.parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\t\tvar ceiling = document.createElement(element.tagName);\r\n\t\t\t\tceiling.classList.add('virtual-spacer');\r\n\t\t\t\tvar floor = ceiling.cloneNode(true);\r\n\r\n\t\t\t\tceiling.classList.add('ceiling');\r\n\t\t\t\t//ceiling.style.transform = 'scaleY(0)';\r\n\t\t\t\telement.parentNode.insertAdjacentElement('afterBegin', ceiling); // prepend\r\n\r\n\t\t\t\tfloor.classList.add('floor');\r\n\t\t\t\t//floor.style.transform = 'scaleY(0)';\r\n\t\t\t\telement.parentNode.insertAdjacentElement('beforeEnd', floor); // append\r\n\r\n\t\t\t\t// His total scrollHeight\r\n\t\t\t\tvar styles = window.getComputedStyle(element);\r\n\t\t\t\tvar absHeight = parseFloat(styles['marginTop']) + parseFloat(styles['marginBottom']);\r\n\t\t\t\tstyles = null;\r\n\r\n\t\t\t\t// Element height + margin\r\n\t\t\t\tabsHeight = Math.ceil(element.offsetHeight + absHeight);\r\n\t\t\t}\r\n\r\n\t\t\tvar after = element.nextElementSibling;\r\n\t\t\tif(after === null || element === after)\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = element.previousElementSibling;\r\n\t\t\tif(before === null || element === before)\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = element.getAttribute('sf-repeat-this');\r\n\t\t\telement.removeAttribute('sf-repeat-this');\r\n\t\t\tvar controller = sf.controller.modelName(element);\r\n\r\n\t\t\t// Check if the element was already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(element.outerHTML))\r\n\t\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\t\tloopParser(controller, element, script, targetNode, element.parentNode);\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t}\r\n\r\n\t// Reset model properties\r\n\t// Don't call if the removed element is TEXT or #comment\r\n\tfunction DOMNodeRemoved(element){\r\n\t\tvar temp = $('[sf-controller]', element);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tremoveModelBinding(temp[i].getAttribute('sf-controller'));\r\n\t\t}\r\n\r\n\t\tif(element.hasAttribute('sf-controller') === false)\r\n\t\t\treturn;\r\n\r\n\t\tremoveModelBinding(element.getAttribute('sf-controller'));\r\n\t}\r\n\r\n\tsf(function(){\r\n\t\tvar everyRemovedNodes = function(nodes){\r\n\t\t\tvar tagName = nodes.nodeName;\r\n\t\t\tif(tagName === 'TEXT' || tagName === '#text' || tagName === '#comment') return;\r\n\r\n\t\t\tDOMNodeRemoved(nodes);\r\n\t\t}\r\n\r\n\t\tif(typeof MutationObserver === 'function' && MutationObserver.prototype.observe){\r\n\t\t\tvar everyRecords = function(record){\r\n\t\t\t\trecord.removedNodes.forEach(everyRemovedNodes);\r\n\t\t\t}\r\n\r\n\t\t\tvar observer = new MutationObserver(function(records){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\trecords.forEach(everyRecords);\r\n\t\t\t});\r\n\r\n\t\t\tobserver.observe(document.body, { childList: true, subtree: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.body.addEventListener('DOMNodeRemoved', function(e){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\teveryRemovedNodes(e.target);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tvar removeModelBinding = function(modelName){\r\n\t\tvar ref = self.root[modelName];\r\n\t\tif(ref === undefined)\r\n\t\t\treturn;\r\n\r\n\t\tvar bindedKey = ref.sf$bindedKey;\r\n\t\tvar temp = null;\r\n\t\tfor(var key in bindedKey){\r\n\t\t\tdelete bindedKey[key];\r\n\r\n\t\t\tif(ref[key] === undefined || ref[key] === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(ref[key].constructor === String ||\r\n\t\t\t\tref[key].constructor === Number ||\r\n\t\t\t\tref[key].constructor === Boolean\r\n\t\t\t){/* Ok */}\r\n\r\n\t\t\telse if(ref[key].constructor === Array){\r\n\t\t\t\tif(ref[key].$virtual){\r\n\t\t\t\t\tref[key].$virtual.destroy();\r\n\t\t\t\t\tdelete ref[key].$virtual;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset property without copying the array\r\n\t\t\t\ttemp = ref[key].splice('obtain');\r\n\t\t\t\tdelete ref[key];\r\n\t\t\t\tref[key] = temp;\r\n\t\t\t}\r\n\t\t\telse continue;\r\n\r\n\t\t\tif(Object.getOwnPropertyDescriptor(ref, key) === undefined)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Reconfigure / Remove property descriptor\r\n\t\t\tvar temp = ref[key];\r\n\t\t\tdelete ref[key];\r\n\t\t\tref[key] = temp;\r\n\t\t}\r\n\t}\r\n\r\n\tvar dcBracket = /{{[\\s\\S]*?}}/;\r\n\tvar bindObject = function(element, modelRef, propertyName, which){\r\n\t\tif(!(element instanceof Node))\r\n\t\t\telement = element[0];\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = element;\r\n\r\n\t\t// First initialization\r\n\t\telement.setAttribute('sf-bind-key', propertyName);\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\r\n\t\t// Cache attribute content\r\n\t\tif(which === 'attr' || !which){\r\n\t\t\tvar attrs = {};\r\n\r\n\t\t\tfor (var i = 0; i < element.attributes.length; i++) {\r\n\t\t\t\tvar attr = element.attributes[i].name;\r\n\r\n\t\t\t\t// Check if it has a bracket\r\n\t\t\t\tif(dcBracket.test(element.getAttribute(attr)) === false)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tattrs[attr] = element.getAttribute(attr);\r\n\t\t\t\telement.removeAttribute(attr);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Cache html content\r\n\t\tif(which === 'html' || !which)\r\n\t\t\tvar htmlClone = element.cloneNode(true).innerHTML;\r\n\r\n\t\tvar onChanges = function(){\r\n\t\t\tif(which === 'attr' || !which){\r\n\t\t\t\tfor(var name in attrs){\r\n\t\t\t\t\tif(attrs[name].indexOf(propertyName) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tvar temp = dataParser(attrs[name], modelRef, false, modelName);\r\n\t\t\t\t\tif(name === 'value')\r\n\t\t\t\t\t\telement.value = temp;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\telement.setAttribute(name, temp);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(which === 'html' || !which){\r\n\t\t\t\tvar temp = uniqueDataParser(htmlClone, modelRef, false, modelName);\r\n\t\t\t\ttemp = dataParser(temp, modelRef, false, modelName);\r\n\t\t\t\telement.textContent = '';\r\n\t\t\t\telement.insertAdjacentHTML('afterBegin', temp);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif(modelRef[propertyName] === undefined)\r\n\t\t\tthrow \"Property '\"+propertyName+\"' was not found on '\"+modelName+\"' model\";\r\n\r\n\t\t// Enable multiple element binding\r\n\t\tif(modelRef.sf$bindedKey === undefined)\r\n\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\tif(modelRef.sf$bindedKey[propertyName] !== undefined){\r\n\t\t\tmodelRef.sf$bindedKey[propertyName].push(onChanges);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar objValue = modelRef[propertyName]; // Object value\r\n\t\tObject.defineProperty(modelRef, propertyName, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\t\t\tget:function(){\r\n\t\t\t\treturn objValue;\r\n\t\t\t},\r\n\t\t\tset:function(val){\r\n\t\t\t\tobjValue = val;\r\n\r\n\t\t\t\tvar ref = modelRef.sf$bindedKey[propertyName];\r\n\t\t\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\t\t\tref[i]();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn objValue;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tmodelRef.sf$bindedKey[propertyName] = [onChanges];\r\n\t}\r\n\r\n\tself.bindElement = function(element, which){\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar html = element.outerHTML;\r\n\r\n\t\t// Check if the child element was already bound to prevent vulnerability\r\n\t\tif(/sf-bind-key|sf-bind-list/.test(html)){\r\n\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(which === 'attr')\r\n\t\t\thtml = html.replace(element.innerHTML, '');\r\n\r\n\t\tvar brackets = /{{([\\s\\S]*?)}}/g;\r\n\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(model);\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(model[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\t\tvar s1, s2 = null;\r\n\t\twhile((s1 = brackets.exec(html)) !== null){\r\n\t\t\twhile ((s2 = scopeMask.exec(s1[1])) !== null) {\r\n\t\t\t\tbindObject(element, model, s2[1], which);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.extractPreprocess = function(targetNode, mask, name){\r\n\t\tvar copy = targetNode.outerHTML;\r\n\r\n\t\t// Mask the referenced item\r\n\t\tcopy = copy.split('#'+mask).join('_model_');\r\n\r\n\t\t// Extract data to be parsed\r\n\t\tcopy = uniqueDataParser(copy, null, mask, name, '#noEval');\r\n\t\tvar preParsed = copy[1];\r\n\t\tvar _content_ = copy[2];\r\n\t\tcopy = dataParser(copy[0], null, mask, name, '#noEval', preParsed);\r\n\r\n\t\tfunction findModelProperty(){\r\n\t\t\tvar extract = RegExp('\\\\b(?:_model_|'+mask+')\\\\.([a-zA-Z0-9.[\\'\\\\]]+)(?:$|[^\\'\\\\]])', 'g');\r\n\t\t\tvar found = {};\r\n\r\n\t\t\tfor (var i = 0; i < preParsed.length; i++) {\r\n\t\t\t\tvar current = preParsed[i];\r\n\r\n\t\t\t\t// Text or attribute\r\n\t\t\t\tif(current.type === 0){\r\n\t\t\t\t\tcurrent.data[0].split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(found[match] === undefined) found[match] = [i];\r\n\t\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Dynamic data\r\n\t\t\t\tif(current.type === 1){\r\n\t\t\t\t\tvar checkList = current.if.join(';');\r\n\r\n\t\t\t\t\tif(current.elseValue !== null)\r\n\t\t\t\t\t\tcheckList += ';' + current.elseValue;\r\n\r\n\t\t\t\t\tfor (var a = 0; a < current.elseIf.length; a++) {\r\n\t\t\t\t\t\tcheckList += current.elseIf[a].join(';');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(current.type === 2)\r\n\t\t\t\t\tvar checkList = current.data[0];\r\n\r\n\t\t\t\tcheckList = checkList.replace(/_result_ \\+= _content_\\.take\\(.*?, ([0-9]+)\\);/g, function(full, match){\r\n\t\t\t\t\treturn _content_[match];\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcheckList.split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found[match] === undefined) found[match] = [i];\r\n\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn found;\r\n\t\t}\r\n\r\n\t\t// Build element and start addressing\r\n\t\tcopy = $.parseElement(copy)[0];\r\n\t\tvar nodes = self.queuePreprocess(copy, true).reverse();\r\n\t\tvar addressed = [];\r\n\r\n\t\tfunction addressAttributes(currentNode){\r\n\t\t\tvar attrs = currentNode.attributes;\r\n\t\t\tvar keys = [];\r\n\t\t\tvar indexes = 0;\r\n\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\tvar found = attrs[a].value.split('{{%=');\r\n\t\t\t\tif(found.length !== 1){\r\n\t\t\t\t\tvar key = {\r\n\t\t\t\t\t\tname:attrs[a].name,\r\n\t\t\t\t\t\tvalue:attrs[a].value\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tindexes = [];\r\n\t\t\t\t\tfound = attrs[a].value.replace(/{{%=([0-9]+)/g, function(full, match){\r\n\t\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found === '' && indexes.length === 1)\r\n\t\t\t\t\t\tkey.direct = indexes[0];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tkey.parse_index = indexes;\r\n\r\n\t\t\t\t\tkeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn keys;\r\n\t\t}\r\n\r\n\t\tvar currentElement = addressAttributes(copy);\r\n\t\tif(currentElement.length !== 0)\r\n\t\t\taddressed.push({\r\n\t\t\t\tnodeType:1,\r\n\t\t\t\taddress:[0],\r\n\t\t\t\tattributes:currentElement\r\n\t\t\t});\r\n\r\n\t\tfor (var i = 0; i < nodes.length; i++) {\r\n\t\t\tvar temp = {\r\n\t\t\t\tnodeType:nodes[i].nodeType\r\n\t\t\t};\r\n\r\n\t\t\tif(temp.nodeType === 1){ // Element\r\n\t\t\t\ttemp.attributes = addressAttributes(nodes[i]);\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\telse if(temp.nodeType === 3){ // Text node\r\n\t\t\t\tvar innerHTML = nodes[i].textContent;\r\n\t\t\t\tvar indexes = [];\r\n\r\n\t\t\t\tinnerHTML.replace(/{{%%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Check for dynamic mode\r\n\t\t\t\tif(indexes.length !== 0){\r\n\t\t\t\t\tinnerHTML = innerHTML.split(/{{%%=[0-9]+/gm);\r\n\t\t\t\t\tfor (var a = 0; a < innerHTML.length; a++) {\r\n\t\t\t\t\t\tinnerHTML[a] = trimIndentation(innerHTML[a]).trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodes[i].textContent = innerHTML.shift();\r\n\r\n\t\t\t\t\tvar parent = nodes[i].parentNode;\r\n\t\t\t\t\tvar nextSibling = nodes[i].nextSibling;\r\n\r\n\t\t\t\t\t// Dynamic boundary start\r\n\t\t\t\t\tvar addressStart = null;\r\n\t\t\t\t\tif(indexes.length !== 0 && nodes[i].textContent.length !== 0)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i], true);\r\n\t\t\t\t\telse if(nodes[i].previousSibling !== null)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i].previousSibling, true);\r\n\r\n\t\t\t\t\t// Find boundary ends\r\n\t\t\t\t\tvar commentFlag = [];\r\n\t\t\t\t\tfor(var a = 0; a < indexes.length; a++){\r\n\t\t\t\t\t\tvar flag = document.createComment('');\r\n\t\t\t\t\t\tparent.insertBefore(flag, nextSibling);\r\n\t\t\t\t\t\tcommentFlag.push({\r\n\t\t\t\t\t\t\tnodeType:-1,\r\n\t\t\t\t\t\t\tparse_index:indexes[a],\r\n\t\t\t\t\t\t\tstartFlag:addressStart,\r\n\t\t\t\t\t\t\taddress:$.getSelector(flag, true)\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(innerHTML[a]){\r\n\t\t\t\t\t\t\tvar textNode = document.createTextNode(innerHTML[a]);\r\n\t\t\t\t\t\t\tparent.insertBefore(textNode, nextSibling);\r\n\r\n\t\t\t\t\t\t\t// Get new start flag\r\n\t\t\t\t\t\t\tif(a + 1 < indexes.length)\r\n\t\t\t\t\t\t\t\taddressStart = $.getSelector(textNode, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Merge boundary address\r\n\t\t\t\t\tArray.prototype.push.apply(addressed, commentFlag);\r\n\t\t\t\t\tif(nodes[i].textContent === ''){\r\n\t\t\t\t\t\tnodes[i].remove();\r\n\t\t\t\t\t\tfor (var a = 0; a < commentFlag.length; a++) {\r\n\t\t\t\t\t\t\tvar ref = commentFlag[a].address;\r\n\t\t\t\t\t\t\tref[ref.length - 1]--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(nodes[i].textContent.search(/{{%=[0-9]+/) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if it's only model value\r\n\t\t\t\tindexes = [];\r\n\t\t\t\tinnerHTML = nodes[i].textContent.replace(/{{%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(innerHTML === '' && indexes.length === 1)\r\n\t\t\t\t\ttemp.direct = indexes[0];\r\n\t\t\t\telse{\r\n\t\t\t\t\ttemp.value = nodes[i].textContent;\r\n\t\t\t\t\ttemp.parse_index = indexes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\taddressed.push(temp);\r\n\t\t}\r\n\r\n\t\tvar modelReference = findModelProperty();\r\n\t\tvar keys = Object.keys(modelReference);\r\n\t\tvar asArray = [];\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tasArray.push([keys[i], keys[i].split('.')]);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\thtml:copy,\r\n\t\t\tparse:preParsed,\r\n\t\t\taddresses:addressed,\r\n\t\t\tmodelReference:modelReference,\r\n\t\t\tmodelRef_array:asArray\r\n\t\t}\r\n\t}\r\n\r\n\tvar excludes = ['HTML','HEAD','STYLE','LINK','META','SCRIPT','OBJECT','IFRAME'];\r\n\tself.queuePreprocess = function(targetNode, extracting){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = childNodes.length - 1; i >= 0; i--) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\r\n\t\t\tif(extracting === undefined && excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\r\n\t\t\t\t// Skip element and it's childs that already bound to prevent vulnerability\r\n\t\t\t\tif(attrs['sf-bind-key'] || attrs['sf-repeat-this'] || attrs['sf-bind-list']) continue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tif(extracting === undefined)\r\n\t\t\t\t\t\t\tcurrentNode.setAttribute('sf-preprocess', 'attronly');\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tArray.prototype.push.apply(temp, self.queuePreprocess(currentNode, extracting));\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tcurrentNode.textContent = currentNode.textContent;\r\n\r\n\t\t\t\tif(currentNode.textContent.length === 0){\r\n\t\t\t\t\tcurrentNode.remove();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tif(extracting === undefined){\r\n\t\t\t\t\t\tcurrentNode.parentNode.setAttribute('sf-preprocess', '');\r\n\r\n\t\t\t\t\t\t// Reset Siblings\r\n\t\t\t\t\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\t\t\t\t\ttemp[a].removeAttribute('sf-preprocess');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttemp.push(currentNode.parentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn temp;\r\n\t}\r\n\r\n\tself.parsePreprocess = function(nodes, queued){\r\n\t\tfor (var a = 0; a < nodes.length; a++) {\r\n\t\t\t// Get reference for debugging\r\n\t\t\tvar current = processingElement = nodes[a];\r\n\r\n\t\t\tvar model = sf.controller.modelName(current);\r\n\t\t\tcurrent.removeAttribute('sf-preprocess');\r\n\r\n\t\t\tif(queued !== undefined)\r\n\t\t\t\tcurrent.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tvar modelRef = self.root[model];\r\n\r\n\t\t\tif(!modelRef){\r\n\t\t\t\tmodelRef = root_(model);\r\n\t\t\t\t//return console.error(\"Can't parse element because model for '\"+model+\"' was not found\", current);\r\n\t\t\t}\r\n\r\n\t\t\t// Double check if the child element already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(current.innerHTML)){\r\n\t\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\t\tconsole.log(processingElement.cloneNode(true));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(current.hasAttribute('sf-bind'))\r\n\t\t\t\tself.bindElement(current, current.getAttribute('sf-bind'));\r\n\r\n\t\t\t// Avoid editing the outerHTML because it will remove the bind\r\n\t\t\tvar temp = uniqueDataParser(current.innerHTML, modelRef, false, model);\r\n\t\t\tcurrent.innerHTML = dataParser(temp, modelRef, false, model);\r\n\r\n\t\t\tvar attrs = nodes[a].attributes;\r\n\t\t\tfor (var i = 0; i < attrs.length; i++) {\r\n\t\t\t\tif(attrs[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\tvar attr = attrs[i];\r\n\t\t\t\t\tattr.value = dataParser(attr.value, modelRef, false, model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initBindingInformation(modelRef){\r\n\t\tif(modelRef.sf$bindedKey !== undefined)\r\n\t\t\treturn;\r\n\r\n\t\t// Element binding data\r\n\t\tObject.defineProperty(modelRef, 'sf$bindedKey', {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable:false,\r\n\t\t\twritable:true,\r\n\t\t\tvalue:{}\r\n\t\t});\r\n\t}\r\n})();","// ==== ES5 Polyfill ====\r\nif(typeof Object.assign != 'function'){\r\n  Object.defineProperty(Object, \"assign\", {\r\n    value: function assign(target, varArgs) {\r\n      'use strict';\r\n      if (target == null)\r\n        throw new TypeError('Cannot convert undefined or null to object');\r\n      var to = Object(target);\r\n      for (var index = 1; index < arguments.length; index++) {\r\n        var nextSource = arguments[index];\r\n        if (nextSource != null) {\r\n          for (var nextKey in nextSource) {\r\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey))\r\n              to[nextKey] = nextSource[nextKey];\r\n          }\r\n        }\r\n      }\r\n      return to;\r\n    },\r\n    writable: true,\r\n    configurable: true\r\n  });\r\n}\r\n\r\nif(Element.prototype.remove === undefined || CharacterData.prototype.remove === undefined || DocumentType.prototype.remove === undefined){\r\n  (function (arr) {\r\n    arr.forEach(function (item) {\r\n      if (item.hasOwnProperty('remove')) {\r\n        return;\r\n      }\r\n      Object.defineProperty(item, 'remove', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n        value: function remove() {\r\n          if (this.parentNode !== null)\r\n            this.parentNode.removeChild(this);\r\n        }\r\n      });\r\n    });\r\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\r\n}\r\n\r\nif(!Element.prototype.matches){\r\n  Element.prototype.matches = (Element.prototype).matchesSelector ||\r\n    (Element.prototype).mozMatchesSelector || (Element.prototype).msMatchesSelector ||\r\n    (Element.prototype).oMatchesSelector || (Element.prototype).webkitMatchesSelector ||\r\n    function (s) {\r\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n      i = matches.length;\r\n      while (--i >= 0 && matches.item(i) !== this){}\r\n      return i > -1;\r\n    };\r\n}\r\n\r\nif(!NodeList.prototype.forEach){\r\n    NodeList.prototype.forEach = function (callback, thisArg) {\r\n        thisArg = thisArg || window;\r\n        for (var i = 0; i < this.length; i++) {\r\n            callback.call(thisArg, this[i], i, this);\r\n        }\r\n    };\r\n}\r\n\r\nif(!window.location.origin)\r\n  window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tself.pending = {};\r\n\tself.active = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tself.pending[name] = func;\r\n\t}\r\n\r\n\tself.modelScope = function(element, func){\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = element.getAttribute('sf-bind-list');\r\n\t\tif(!bindedList){\r\n\t\t\tvar parentEl = $.parent(element, '[sf-bind-list]');\r\n\t\t\tif(parentEl !== null)\r\n\t\t\t\tbindedList = parentEl.getAttribute('sf-bind-list');\r\n\t\t}\r\n\t\telse var parentEl = element;\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(sf.model.root[model], -1);\r\n\t\t\telse return sf.model.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = $.prevAll(parentEl, '[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(sf.model.root[model][bindedList], bindedListIndex);\r\n\t\telse return sf.model.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.modelName = function(element){\r\n\t\tvar name = undefined;\r\n\t\tif(element.hasAttribute('sf-controller'))\r\n\t\t\tname = element.getAttribute('sf-controller');\r\n\t\telse\r\n\t\t\tname = $.parent(element, '[sf-controller]').getAttribute('sf-controller');\r\n\r\n\t\t// Initialize it first\r\n\t\tif(name !== undefined && !self.active[name])\r\n\t\t\tself.run(name);\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = e.target;\r\n\t\tvar script = element.getAttribute('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = $.parent(element, '[sf-click]');\r\n\t\t\tscript = element.getAttribute('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = $.parent(element, '[sf-controller]').getAttribute('sf-controller');\r\n\r\n\t\tif(!sf.model.root[model])\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar _modelScope = sf.model.root[model];\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(_modelScope);\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+modelKeys+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tscript = script.replace(scopeMask, function(full, matched){\r\n\t\t\treturn '_modelScope.'+matched;\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script[0];\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(e) {\r\n\t\t\tmethod = false;\r\n\t\t}\r\n\r\n\t\tif(!method){\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot call `'+method_+'`]\\n', element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript.shift();\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0){\r\n\t\t\t// Replace `this` to `element`\r\n\t\t\tscript = eval(('['+script+']').replace(/,this|\\[this/g, function(found){\r\n\t\t\t\treturn found[0] + 'element';\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif(!script)\r\n\t\t\tscript = [];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element, script);\r\n\t\t\te.preventDefault();\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', element, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tself.run = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.run(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(self.pending[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\r\n\t\t\tself.pending[name](sf.model.root[name], root_);\r\n\t\t\tself.active[name] = true;\r\n\t\t\tdelete self.pending[name];\r\n\t\t}\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], root_);\r\n\t}\r\n\r\n\tself.init = function(parent){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(name);\r\n\t\t\t});\r\n\r\n\t\tvar temp = $('[sf-controller]', parent || document.body);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tself.run(temp[i].getAttribute('sf-controller'));\r\n\t\t}\r\n\t}\r\n\r\n\t// Create listener for sf-click\r\n\tdocument.addEventListener('DOMContentLoaded', function(){\r\n\t\t$.on(document.body, 'click', '[sf-click]', listenSFClick);\r\n\t}, {capture:true, once:true});\r\n}\r\n\r\nvar root_ = function(scope){\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n}","/*\r\n  Special Thanks to Vladimir Kharlampidi\r\n  https://github.com/nolimits4web/\r\n*/\r\n\r\nvar globals = {};\r\nvar jsonpRequests = 0;\r\nfunction Request(requestOptions) {\r\n    var globalsNoCallbacks = Object.assign({}, globals);\r\n    ('beforeCreate beforeOpen beforeSend error complete success statusCode').split(' ').forEach(function (callbackName) {\r\n        delete globalsNoCallbacks[callbackName];\r\n    });\r\n    var defaults = Object.assign({\r\n        url: window.location.toString(),\r\n        method: 'GET',\r\n        data: false,\r\n        async: true,\r\n        cache: true,\r\n        user: '',\r\n        password: '',\r\n        headers: {},\r\n        xhrFields: {},\r\n        statusCode: {},\r\n        processData: true,\r\n        dataType: 'text',\r\n        contentType: 'application/x-www-form-urlencoded',\r\n        timeout: 0,\r\n    }, globalsNoCallbacks);\r\n    var options = Object.assign({}, defaults, requestOptions);\r\n    var proceedRequest;\r\n    // Function to run XHR callbacks and events\r\n    function fireCallback(callbackName) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        /*\r\n          Callbacks:\r\n          beforeCreate (options),\r\n          beforeOpen (xhr, options),\r\n          beforeSend (xhr, options),\r\n          error (xhr, status),\r\n          complete (xhr, stautus),\r\n          success (response, status, xhr),\r\n          statusCode ()\r\n        */\r\n        var globalCallbackValue;\r\n        var optionCallbackValue;\r\n        if (globals[callbackName]) {\r\n            globalCallbackValue = globals[callbackName].apply(globals, data);\r\n        }\r\n        if (options[callbackName]) {\r\n            optionCallbackValue = options[callbackName].apply(options, data);\r\n        }\r\n        if (typeof globalCallbackValue !== 'boolean')\r\n            globalCallbackValue = true;\r\n        if (typeof optionCallbackValue !== 'boolean')\r\n            optionCallbackValue = true;\r\n        return (globalCallbackValue && optionCallbackValue);\r\n    }\r\n    // Before create callback\r\n    proceedRequest = fireCallback('beforeCreate', options);\r\n    if (proceedRequest === false)\r\n        return undefined;\r\n    // For jQuery guys\r\n    if (options.type)\r\n        options.method = options.type;\r\n    // Parameters Prefix\r\n    var paramsPrefix = options.url.indexOf('?') >= 0 ? '&' : '?';\r\n    // UC method\r\n    var method = options.method.toUpperCase();\r\n    // Data to modify GET URL\r\n    if ((method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') && options.data) {\r\n        var stringData = void 0;\r\n        if (typeof options.data === 'string') {\r\n            // Should be key=value string\r\n            if (options.data.indexOf('?') >= 0)\r\n                stringData = options.data.split('?')[1];\r\n            else\r\n                stringData = options.data;\r\n        }\r\n        else {\r\n            // Should be key=value object\r\n            stringData = serializeQuery(options.data);\r\n        }\r\n        if (stringData.length) {\r\n            options.url += paramsPrefix + stringData;\r\n            if (paramsPrefix === '?')\r\n                paramsPrefix = '&';\r\n        }\r\n    }\r\n    // JSONP\r\n    if (options.dataType === 'json' && options.url.indexOf('callback=') >= 0) {\r\n        var callbackName_1 = \"jsonp_\" + (Date.now() + ((jsonpRequests += 1)));\r\n        var abortTimeout_1;\r\n        var callbackSplit = options.url.split('callback=');\r\n        var requestUrl = callbackSplit[0] + \"callback=\" + callbackName_1;\r\n        if (callbackSplit[1].indexOf('&') >= 0) {\r\n            var addVars = callbackSplit[1].split('&').filter(function (el) { return el.indexOf('=') > 0; }).join('&');\r\n            if (addVars.length > 0)\r\n                requestUrl += \"&\" + addVars;\r\n        }\r\n        // Create script\r\n        var script_1 = document.createElement('script');\r\n        script_1.type = 'text/javascript';\r\n        script_1.onerror = function onerror() {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('error', null, 'scripterror');\r\n            fireCallback('complete', null, 'scripterror');\r\n        };\r\n        script_1.src = requestUrl;\r\n        // Handler\r\n        window[callbackName_1] = function jsonpCallback(data) {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('success', data);\r\n            script_1.parentNode.removeChild(script_1);\r\n            script_1 = null;\r\n            delete window[callbackName_1];\r\n        };\r\n        document.querySelector('head').appendChild(script_1);\r\n        if (options.timeout > 0) {\r\n            abortTimeout_1 = setTimeout(function () {\r\n                script_1.parentNode.removeChild(script_1);\r\n                script_1 = null;\r\n                fireCallback('error', null, 'timeout');\r\n            }, options.timeout);\r\n        }\r\n        return undefined;\r\n    }\r\n    // Cache for GET/HEAD requests\r\n    if (method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') {\r\n        if (options.cache === false) {\r\n            options.url += paramsPrefix + \"_nocache\" + Date.now();\r\n        }\r\n    }\r\n    // Create XHR\r\n    var xhr = new XMLHttpRequest();\r\n    // Save Request URL\r\n    xhr.requestUrl = options.url;\r\n    xhr.requestParameters = options;\r\n    // Before open callback\r\n    proceedRequest = fireCallback('beforeOpen', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Open XHR\r\n    xhr.open(method, options.url, options.async, options.user, options.password);\r\n    // Create POST Data\r\n    var postData = null;\r\n    if ((method === 'POST' || method === 'PUT' || method === 'PATCH') && options.data) {\r\n        if (options.processData) {\r\n            var postDataInstances = [ArrayBuffer, Blob, Document, FormData];\r\n            // Post Data\r\n            if (postDataInstances.indexOf(options.data.constructor) >= 0) {\r\n                postData = options.data;\r\n            }\r\n            else {\r\n                // POST Headers\r\n                var boundary = \"---------------------------\" + Date.now().toString(16);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    xhr.setRequestHeader('Content-Type', \"multipart/form-data; boundary=\" + boundary);\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader('Content-Type', options.contentType);\r\n                }\r\n                postData = '';\r\n                var data = serializeQuery(options.data);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    data = data.split('&');\r\n                    var newData = [];\r\n                    for (var i = 0; i < data.length; i += 1) {\r\n                        newData.push(\"Content-Disposition: form-data; name=\\\"\" + data[i].split('=')[0] + \"\\\"\\r\\n\\r\\n\" + data[i].split('=')[1] + \"\\r\\n\");\r\n                    }\r\n                    postData = \"--\" + boundary + \"\\r\\n\" + newData.join(\"--\" + boundary + \"\\r\\n\") + \"--\" + boundary + \"--\\r\\n\";\r\n                }\r\n                else if (options.contentType === 'application/json') {\r\n                    postData = JSON.stringify(options.data);\r\n                }\r\n                else {\r\n                    postData = data;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            postData = options.data;\r\n            xhr.setRequestHeader('Content-Type', options.contentType);\r\n        }\r\n    }\r\n    // Additional headers\r\n    if (options.headers) {\r\n        Object.keys(options.headers).forEach(function (headerName) {\r\n            xhr.setRequestHeader(headerName, options.headers[headerName]);\r\n        });\r\n    }\r\n    // Check for crossDomain\r\n    if (typeof options.crossDomain === 'undefined') {\r\n        // eslint-disable-next-line\r\n        options.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(options.url) && RegExp.$2 !== window.location.host;\r\n    }\r\n    if (!options.crossDomain) {\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    }\r\n    if (options.xhrFields) {\r\n        Object.assign(xhr, options.xhrFields);\r\n    }\r\n    var xhrTimeout;\r\n    // Handle XHR\r\n    xhr.onload = function onload() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 0) {\r\n            var responseData = void 0;\r\n            if (options.dataType === 'json') {\r\n                var parseError = void 0;\r\n                try {\r\n                    responseData = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (err) {\r\n                    parseError = true;\r\n                }\r\n                if (!parseError) {\r\n                    fireCallback('success', responseData, xhr.status, xhr);\r\n                }\r\n                else {\r\n                    fireCallback('error', xhr, 'parseerror');\r\n                }\r\n            }\r\n            else {\r\n                responseData = xhr.responseType === 'text' || xhr.responseType === '' ? xhr.responseText : xhr.response;\r\n                fireCallback('success', responseData, xhr.status, xhr);\r\n            }\r\n        }\r\n        else {\r\n            fireCallback('error', xhr, xhr.status);\r\n        }\r\n        if (options.statusCode) {\r\n            if (globals.statusCode && globals.statusCode[xhr.status])\r\n                globals.statusCode[xhr.status](xhr);\r\n            if (options.statusCode[xhr.status])\r\n                options.statusCode[xhr.status](xhr);\r\n        }\r\n        fireCallback('complete', xhr, xhr.status);\r\n    };\r\n    xhr.onerror = function onerror() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        fireCallback('error', xhr, xhr.status);\r\n        fireCallback('complete', xhr, 'error');\r\n    };\r\n    // Timeout\r\n    if (options.timeout > 0) {\r\n        xhr.onabort = function onabort() {\r\n            if (xhrTimeout)\r\n                clearTimeout(xhrTimeout);\r\n        };\r\n        xhrTimeout = setTimeout(function () {\r\n            xhr.abort();\r\n            fireCallback('error', xhr, 'timeout');\r\n            fireCallback('complete', xhr, 'timeout');\r\n        }, options.timeout);\r\n    }\r\n    // Ajax start callback\r\n    proceedRequest = fireCallback('beforeSend', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Send XHR\r\n    xhr.send(postData);\r\n    // Return XHR object\r\n    return xhr;\r\n}\r\nfunction RequestShortcut(method) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    var _a = [], url = _a[0], data = _a[1], success = _a[2], error = _a[3], dataType = _a[4];\r\n    if (typeof args[1] === 'function') {\r\n        url = args[0], success = args[1], error = args[2], dataType = args[3];\r\n    }\r\n    else {\r\n        url = args[0], data = args[1], success = args[2], error = args[3], dataType = args[4];\r\n    }\r\n    [success, error].forEach(function (callback) {\r\n        if (typeof callback === 'string') {\r\n            dataType = callback;\r\n            if (callback === success)\r\n                success = undefined;\r\n            else\r\n                error = undefined;\r\n        }\r\n    });\r\n    dataType = dataType || (method === 'json' || method === 'postJSON' ? 'json' : undefined);\r\n    var requestOptions = {\r\n        url: url,\r\n        method: method === 'post' || method === 'postJSON' ? 'POST' : 'GET',\r\n        data: data,\r\n        success: success,\r\n        error: error,\r\n        dataType: dataType,\r\n    };\r\n    if (method === 'postJSON') {\r\n        Object.assign(requestOptions, {\r\n            contentType: 'application/json',\r\n            processData: false,\r\n            crossDomain: true,\r\n            data: typeof data === 'string' ? data : JSON.stringify(data),\r\n        });\r\n    }\r\n    return Request(requestOptions);\r\n}\r\nObject.assign(Request, {\r\n    get: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['get'].concat(args));\r\n    },\r\n    post: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['post'].concat(args));\r\n    },\r\n    json: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    getJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    postJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['postJSON'].concat(args));\r\n    },\r\n});\r\nRequest.setup = function setup(options) {\r\n    if (options.type && !options.method) {\r\n        Object.assign(options, { method: options.type });\r\n    }\r\n    Object.assign(globals, options);\r\n};\r\nfunction serializeQuery(params, prefix) {\r\n    var key = Object.keys(params);\r\n    for (var i = 0; i < key.length; i++) {\r\n      var value = params[key[i]];\r\n      if (params.constructor === Array)\r\n          key[i] += prefix + \"[]\";\r\n      else if (params.constructor === Object)\r\n          key[i] = (prefix ? prefix + \"[\" + key[i] + \"]\" : key[i]);\r\n\r\n      if (typeof value === 'object')\r\n          key[i] = serializeQuery(value, key[i]);\r\n      else\r\n          key[i] = key[i] + \"=\" + encodeURIComponent(value);\r\n    }\r\n    return key.join('&');\r\n}\r\n$.ajax = sf.ajax = Request;","return sf;\r\n\r\n// ===== Module End =====\r\n})));","sf.router = new function(){\r\n\tvar self = this;\r\n\tself.loading = false;\r\n\tself.enabled = false;\r\n\tself.pauseRenderOnTransition = false;\r\n\tself.currentPage = [];\r\n\tvar initialized = false;\r\n\tvar lazyRouting = false;\r\n\tvar currentRouterURL = '';\r\n\r\n\t// Should be called if not using lazy page load\r\n\tself.init = function(targetNode){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init();\r\n\t\t\t});\r\n\r\n\t\t// Run 'before' event for new page view\r\n\t\tvar temp = $('[sf-controller], [sf-page]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tif(temp[i].getAttribute('sf-controller'))\r\n\t\t\t\tsf.controller.run(temp[i].getAttribute('sf-controller'));\r\n\t\t\t\r\n\t\t\tif(temp[i].getAttribute('sf-page')){\r\n\t\t\t\tvar name = temp[i].getAttribute('sf-page');\r\n\t\t\t\tbeforeEvent(name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinitialized = true;\r\n\t\tcurrentRouterURL = window.location.pathname;\r\n\t}\r\n\r\n\tfunction popstateListener(event) {\r\n\t\t// Don't continue if the last routing was error\r\n\t\tif(routingError){\r\n\t\t\troutingError = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\troutingBack = true;\r\n\t\tself.goto(window.location.pathname);\r\n\t}\r\n\r\n\tself.enable = function(status){\r\n\t\tif(status === undefined) status = true;\r\n\t\tif(self.enabled === status) return;\r\n\t\tself.enabled = status;\r\n\r\n\t\tif(status === true){\r\n\t\t\t// Create listener for link click\r\n\t\t\t$.on(document.body, 'click', 'a[href]', self.load);\r\n\r\n\t\t\t// Create listener when navigate backward\r\n\t\t\twindow.addEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$.off(document.body, 'click', 'a[href]', self.load);\r\n\t\t\twindow.removeEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t}\r\n\r\n\tvar before = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.before = function(name, func, index){\r\n\t\tif(!before[name])\r\n\t\t\tbefore[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(before[name].indexOf(func) === -1)\r\n\t\t\t\tbefore[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tbefore[name][index] = func;\r\n\t}\r\n\r\n\tvar after = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.after = function(name, func, index){\r\n\t\tif(!after[name])\r\n\t\t\tafter[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(after[name].indexOf(func) === -1)\r\n\t\t\t\tafter[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tafter[name][index] = func;\r\n\t}\r\n\r\n\tvar root_ = function(scope){\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.model.root[scope] = {};\r\n\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.controller.run(scope);\r\n\t\t\r\n\t\treturn sf.model.root[scope];\r\n\t}\r\n\r\n\t// Running 'before' new page going to be displayed\r\n\tvar beforeEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.push(name);\r\n\r\n\t\tif(before[name]){\r\n\t\t\tfor (var i = 0; i < before[name].length; i++) {\r\n\t\t\t\tbefore[name][i](root_);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Running 'after' old page going to be removed\r\n\tvar afterEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.splice(self.currentPage.indexOf(name), 1);\r\n\r\n\t\tif(after[name]){\r\n\t\t\tfor (var i = 0; i < after[name].length; i++) {\r\n\t\t\t\tafter[name][i](root_);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar onEvent = {\r\n\t\t'loading':[],\r\n\t\t'loaded':[],\r\n\t\t'special':[],\r\n\t\t'error':[]\r\n\t};\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\tself.lazyViewPoint = {};\r\n\t/*\r\n\t\t{\r\n\t\t\toldURlPattern:{\r\n\t\t\t\tnewURLPattern:'.viewPoint'\r\n\t\t\t}\r\n\t\t}\r\n\t*/\r\n\r\n\tself.load = function(ev){\r\n\t\tif(self.enabled !== true) return;\r\n\r\n\t\tvar elem = ev.target;\r\n\t\tif(!elem.href) return;\r\n\r\n\t\tif(!history.pushState || elem.hasAttribute('sf-router-ignore'))\r\n\t\t\treturn;\r\n\r\n\t\t// Make sure it's from current origin\r\n\t\tvar path = elem.href.replace(window.location.origin, '');\r\n\t\tif(path.indexOf('//') !== -1)\r\n\t\t\treturn;\r\n\r\n\t\tev.preventDefault()\r\n\t\treturn !self.goto(path);\r\n\t}\r\n\r\n\tvar RouterLoading = false;\r\n\tvar routingBack = false;\r\n\tvar routingError = false;\r\n\tself.goto = function(path, data, method){\r\n\t\tif(!method) method = 'GET';\r\n        else method = method.toUpperCase();\r\n\r\n\t\tif(!data) data = {};\r\n\r\n\t\tfor (var i = 0; i < onEvent['loading'].length; i++) {\r\n\t\t\tif(onEvent['loading'][i](path)) return;\r\n\t\t}\r\n\t\tvar oldPath = window.location.pathname;\r\n\t\tinitialized = false;\r\n\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\t\tRouterLoading = $.ajax({\r\n\t\t\turl:window.location.origin + path,\r\n\t\t\tmethod:method,\r\n            data:Object.assign(data, {\r\n                _scarlets:'.dynamic.'\r\n            }),\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\tif(initialized) return;\r\n\t\t\t\tlazyRouting = true;\r\n\r\n\t\t\t\t// Run 'loaded' event\r\n\t\t\t\tRouterLoading = false;\r\n\r\n\t\t\t\t// Find special data\r\n\t\t\t\tvar regex = RegExp('<!-- SF-Special:(.*?)-->'+sf.regex.avoidQuotes, 'gm');\r\n\t\t\t\tvar special = regex.exec(data);\r\n\t\t\t\tif(special && special.length !== 1){\r\n\t\t\t\t\tspecial = special[1].split('--|&>').join('-->');\r\n\t\t\t\t\tspecial = JSON.parse(special);\r\n\r\n\t\t\t\t\tif(!isEmptyObject(special)){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['special'].length; i++) {\r\n\t\t\t\t\t\t\tif(onEvent['special'][i](special)) return;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DOMReference = false;\r\n\t\t\t\tvar foundAction = function(ref){\r\n\t\t\t\t\tDOMReference = $.findOne(ref);\r\n\r\n\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\tvar last = $.findOne('[sf-page]', DOMReference);\r\n\t\t\t\t\tafterEvent(last ? last.getAttribute('sf-page') : '/');\r\n\r\n\t\t\t\t\t// Redefine title if exist\r\n\t\t\t\t\tif(special && special.title)\r\n\t\t\t\t\t\t$('head > title').innerHTML = special.title;\r\n\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tfor(var oldURL in self.lazyViewPoint){\r\n\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\tfor(var newURL in self.lazyViewPoint[oldURL]){\r\n\t\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\t\tfoundAction(self.lazyViewPoint[oldURL][newURL]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(found) break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When the view point was not found\r\n\t\t\t\tif(!found){\r\n\t\t\t\t\t// Use fallback if exist\r\n\t\t\t\t\tif(sf.router.lazyViewPoint[\"@default\"])\r\n\t\t\t\t\t\tfoundAction(sf.router.lazyViewPoint[\"@default\"]);\r\n\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\t\t\tonEvent['error'][i]('sf.router.lazyViewPoint[\"'+oldURL+'\"][\"'+newURL+'\"] was not found');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Run 'before' event for new page view\r\n\t\t\t\tif(!DOMReference) DOMReference = document.body;\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', 'none');\r\n\r\n\t\t\t\t// Let page script running first, then update the data binding\r\n\t\t\t\tDOMReference.innerHTML = data;\r\n\r\n\t\t\t\t// Parse the DOM data binding\r\n\t\t\t\tsf.model.init(DOMReference);\r\n\r\n\t\t\t\t// Init template to model binding\r\n\t\t\t\tvar temp = $('[sf-page]', DOMReference);\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tbeforeEvent(temp[i].getAttribute('sf-page'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', '');\r\n\r\n\t\t\t\trouterLoaded(currentRouterURL, path, DOMReference);\r\n\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tlazyRouting = false;\r\n\r\n\t\t\t\tcurrentRouterURL = path;\r\n\t\t\t\troutingError = false;\r\n\t\t\t},\r\n\t\t\terror:function(xhr, data){\r\n\t\t\t\troutingError = true;\r\n\t\t\t\tif(xhr.aborted) return;\r\n\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\tonEvent['error'][i](xhr.status, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Back on error\r\n\t\t\t\twindow.history.back();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!routingBack)\r\n\t\t\twindow.history.pushState(null, \"\", path);\r\n\r\n\t\troutingBack = false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Trigger loaded event\r\n\tfunction routerLoaded(currentRouterURL, path, data){\r\n\t\tfor (var i = 0; i < onEvent['loaded'].length; i++) {\r\n\t\t\tonEvent['loaded'][i](currentRouterURL, path, data);\r\n\t\t}\r\n\t}\r\n};","sf.internal.virtual_scroll = new function(){\r\n\tvar self = this;\r\n\tvar styleInitialized = false;\r\n\tvar scrollingByScript = false;\r\n\r\n\t// before and after\r\n\tself.prepareCount = 4; // 4, 8, 12, 16, ...\r\n\r\n\tself.handle = function(list, targetNode, parentNode){\r\n\t\tif(!styleInitialized){\r\n\t\t\tinitStyles();\r\n\t\t\tstyleInitialized = true;\r\n\t\t}\r\n\r\n\t\tvar dynamicList = false;\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvirtual.reset = function(reinitOnly){\r\n\t\t\tvirtual.DOMCursor = 0; // cursor of first element in DOM tree as a cursor\r\n\r\n\t\t\tvirtual.bounding.ceiling = -1;\r\n\t\t\tvirtual.bounding.floor = 0;\r\n\r\n\t\t\tvirtual.vCursor.ceiling = null; // for forward direction\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.firstElementChild; // for backward direction\r\n\r\n\t\t\tvirtual.bounding.initial = virtual.dCursor.ceiling.offsetTop;\r\n\t\t\trefreshScrollBounding(0, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.reinitCursor = function(){\r\n\t\t\tvirtual.vCursor.ceiling = virtual.dom.children[virtual.DOMCursor - 1] || null;\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.children[virtual.DOMCursor] || null;\r\n\t\t}\r\n\r\n\t\tvirtual.reinitScroll = function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.elements = function(){\r\n\t\t\treturn obtainElements(list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.dCursor = { // DOM Cursor\r\n\t\t\tceiling:parentNode.querySelector('.virtual-spacer.ceiling'),\r\n\t\t\tfloor:parentNode.querySelector('.virtual-spacer.floor')\r\n\t\t};\r\n\r\n\t\tvirtual.bounding = {};\r\n\t\tvirtual.vCursor = {};\r\n\r\n\t\tvirtual.reset();\r\n\t\tvirtual.targetNode = parentNode;\r\n\t\tvirtual.scrollHeight = virtual.dCursor.floor.offsetTop - virtual.bounding.initial;\r\n\r\n\t\tvar scroller = parentNode;\r\n\t\tvirtual.destroy = function(){\r\n\t\t\t$.off(scroller, 'scroll');\r\n\t\t\t$.off(parentNode, 'mousedown mouseup');\r\n\t\t\tvirtual.dom.innerHTML = '';\r\n\t\t\toffElementResize(parentNode);\r\n\r\n\t\t\tdelete list.$virtual;\r\n\t\t}\r\n\r\n\t\tvirtual.resetViewport = function(){\r\n\t\t\tvirtual.visibleLength = Math.floor(scroller.clientHeight / virtual.scrollHeight);\r\n\t\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\t\tif(virtual.preparedLength < 18)\r\n\t\t\t\tvirtual.preparedLength = 18;\r\n\t\t}\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tscroller = parentNode;\r\n\r\n\t\t\tvar length = parentNode.getAttribute('scroll-parent-index') || 0;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tscroller = scroller.parentElement;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.resetViewport();\r\n\r\n\t\t\tif(parentNode.classList.contains('sf-list-dynamic')){\r\n\t\t\t\tdynamicList = true;\r\n\t\t\t\tdynamicHeight(list, targetNode, parentNode, scroller);\r\n\t\t\t}\r\n\t\t\telse staticHeight(list, targetNode, parentNode, scroller);\r\n\t\t}, 500);\r\n\t}\r\n\r\n\t// Recommended for a list that have different element height\r\n\tfunction dynamicHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\r\n\t\t\t// Reset virtual spacer height\r\n\t\t\tceilingHeight = 0;\r\n\t\t\tfloorHeight = 0;\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller);\r\n\t\t\tfillViewport();\r\n\t\t}\r\n\r\n\t\t// Insert some element until reach visible height\r\n\t\tfillViewport();\r\n\r\n\t\tvirtual.visibleLength = parentNode.childElementCount - 2;\r\n\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\tvar temp = vCursor.floor;\r\n\t\t\tif(temp === null) break;\r\n\r\n\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t}\r\n\t\tvirtual.DOMCursor = 0;\r\n\r\n\t\tvar ceilingHeight = 0;\r\n\t\tvar floorHeight = 0;\r\n\t\tfunction previousCeiling(){\r\n\t\t\tvar temp = null;\r\n\t\t\tvar resetCeiling = false;\r\n\r\n\t\t\t// Add some element on the ceiling\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\ttemp = virtual.dom.lastElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.ceiling = temp.previousElementSibling;\r\n\t\t\t\tvirtual.DOMCursor--;\r\n\r\n\t\t\t\tceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tif(ceilingHeight > 0)\r\n\t\t\t\t\tceilingHeight -= getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(virtual.DOMCursor < self.prepareCount && !resetCeiling){\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\tresetCeiling = true;\r\n\t\t\t\t\ttemp = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(ceilingHeight < 0 || temp === null)\r\n\t\t\t\tceilingHeight = 0;\r\n\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\t// Remove some element on the floor\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = floor.previousElementSibling;\r\n\t\t\t\tfloorHeight += getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tvCursor.floor = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.floor === null)\r\n\t\t\t\tvCursor.ceiling = virtual.dom.lastElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tfunction fillViewport(){\r\n\t\t\t// Insert some element depend on prepared length\r\n\t\t\tvar length = virtual.preparedLength - (parentNode.childElementCount - 2);\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\ttemp = virtual.dom.firstElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction nextFloor(){\r\n\t\t\tvar temp = null;\r\n\t\t\tfillViewport();\r\n\r\n\t\t\tif(vCursor.floor !== null){\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\t// Add extra element based on prepare count\r\n\t\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\t\ttemp = vCursor.floor;\r\n\t\t\t\t\tif(temp === null) break;\r\n\r\n\t\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\t\tif(floorHeight > 0)\r\n\t\t\t\t\t\tfloorHeight -= getAbsoluteHeight(temp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(floorHeight < 0 || temp === null)\r\n\t\t\t\tfloorHeight = 0;\r\n\r\n\t\t\t// Remove some element on the ceiling\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\t\t\t\tceilingHeight += getAbsoluteHeight(temp);\r\n\t\t\t\tvirtual.DOMCursor++;\r\n\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\telse vCursor.ceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tvCursor.ceiling = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\t\trefreshScrollBounding(0, bounding, list, parentNode);\r\n\r\n\t\tif(virtual.callback_ !== undefined){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript) return;\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tif(scroller.scrollTop < bounding.ceiling){\r\n\t\t\t\t// console.log('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tpreviousCeiling();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\telse if(scroller.scrollTop > bounding.floor){\r\n\t\t\t\t// console.log('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tnextFloor();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\tif(virtual.callback !== undefined){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null &&\r\n\t\t\t\t\tscroller.scrollTop + scroller.clientHeight === scroller.scrollHeight\r\n\t\t\t\t){\r\n\t\t\t\t\tvirtual.callback.hitFloor(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null && scroller.scrollTop === 0){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\t\tonElementResize(parentNode, function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t});\r\n\t}\r\n\r\n\t// Recommended for a list that have similar element height\r\n\tfunction staticHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\r\n\t\t// Insert visible element to dom tree\r\n\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\tif(virtual.dom.firstElementChild === null)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', virtual.dom.firstElementChild);\r\n\t\t}\r\n\r\n\t\tvirtual.refreshVirtualSpacer = refreshVirtualSpacer;\r\n\r\n\t\tfunction refreshVirtualSpacer(cursor){\r\n\t\t\tif(cursor >= self.prepareCount){\r\n\t\t\t\tceiling.style.height = (cursor - self.prepareCount) * virtual.scrollHeight + 'px';\r\n\t\t\t\tfloor.style.height = (list.length - virtual.preparedLength - cursor) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tceiling.style.height = cursor * virtual.scrollHeight + 'px'; //'0px';\r\n\t\t\t\tvar count = (list.length - virtual.preparedLength);\r\n\t\t\t\tfloor.style.height = (count || 0) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\r\n\t\trefreshVirtualSpacer(0);\r\n\t\trefreshScrollBounding(self.prepareCount, bounding, list, parentNode);\r\n\t\tbounding.ceiling = -1;\r\n\r\n\t\tvirtual.offsetTo = function(index){\r\n\t\t\treturn index * virtual.scrollHeight + ceiling.offsetTop;\r\n\t\t}\r\n\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tif(virtual.callback_ !== undefined){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tvar fromCeiling = true;\r\n\t\tvar scrollFocused = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript || scroller.scrollTop >= bounding.ceiling && scroller.scrollTop <= bounding.floor){\r\n\t\t\t\t// Fix chrome scroll anchoring bugs when scrolling at corner\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tif(scroller.scrollTop === 0 || scroller.scrollTop === scroller.scrollHeight - scroller.clientHeight){\r\n\t\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar cursor = Math.floor(scroller.scrollTop / virtual.scrollHeight);\r\n\t\t\tif(cursor + virtual.preparedLength > list.length)\r\n\t\t\t\tcursor = list.length - virtual.preparedLength;\r\n\r\n\t\t\tif(fromCeiling){\r\n\t\t\t\tif(cursor < self.prepareCount*2)\r\n\t\t\t\t\tcursor -= self.prepareCount;\r\n\r\n\t\t\t\t// Fix chrome scroll anchoring bugs\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t}\r\n\t\t\t\tfromCeiling = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cursor < self.prepareCount){\r\n\t\t\t\tcursor = 0;\r\n\t\t\t\tfromCeiling = true;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tvar changes = cursor - virtual.DOMCursor;\r\n\t\t\tif(cursor + changes >= list.length)\r\n\t\t\t\tchanges = cursor + changes - list.length;\r\n\r\n\t\t\tif(changes === 0){ // This should be fixed to improve performance and future bugs\r\n\t\t\t\t//console.warn(\"No changes (The scroll bounding is not correct)\");\r\n\t\t\t\tupdating = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.DOMCursor = cursor;\r\n\r\n\t\t\t// console.log(cursor, changes, bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\t\t\tmoveElementCursor(changes, list);\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\t\t\trefreshScrollBounding(cursor, bounding, list, parentNode);\r\n\t\t\t// console.log('a', bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\r\n\t\t\tif(virtual.callback !== undefined){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null){\r\n\t\t\t\t\tvirtual.callback.hitFloor(cursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(cursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\r\n\t\t// For preventing scroll jump if scrolling over than viewport\r\n\t\tif(scroller === parentNode && navigator.userAgent.indexOf('Chrom') !== -1){\r\n\t\t\t$.on(parentNode, 'mousedown', function(){\r\n\t\t\t\tscrollFocused = true;\r\n\t\t\t});\r\n\t\t\t$.on(parentNode, 'mouseup', function(){\r\n\t\t\t\tscrollFocused = false;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction refreshScrollBounding(cursor, bounding, list, parentNode){\r\n\t\tvar temp = Math.floor(self.prepareCount / 2); // half of element preparation\r\n\t\tif(cursor < self.prepareCount){\r\n\t\t\tbounding.ceiling = -1;\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount * 2 + 1];\r\n\r\n\t\t\tif(bounding.floor !== undefined)\r\n\t\t\t\tbounding.floor = bounding.floor.offsetTop;\r\n\t\t\telse bounding.floor = parentNode.lastElementChild.offsetTop + 1000;\r\n\r\n\t\t\tbounding.floor -= bounding.initial;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if(parentNode.children[temp + 1] !== undefined)\r\n\t\t\t\tbounding.ceiling = parentNode.children[temp + 1].offsetTop; // -2 element\r\n\r\n\t\tif(list.$virtual.preparedLength !== undefined && cursor >= list.length - list.$virtual.preparedLength)\r\n\t\t\tbounding.floor = list.$virtual.dCursor.floor.offsetTop + list.$virtual.scrollHeight*2;\r\n\t\telse{\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount + 3].offsetTop; // +2 element\r\n\r\n\t\t\tif(parentNode.hasAttribute('scroll-reduce-floor')){\r\n\t\t\t\tbounding.floor -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t\tbounding.ceiling -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbounding.ceiling -= bounding.initial;\r\n\t\tbounding.floor -= bounding.initial;// scrollHeight - clientHeight\r\n\t}\r\n\r\n\tfunction moveElementCursor(changes, list){\r\n\t\tvar vDOM = list.$virtual.dom;\r\n\t\tvar vCursor = list.$virtual.vCursor;\r\n\t\tvar dCursor = list.$virtual.dCursor;\r\n\r\n\t\tif(changes > 0){ // forward\r\n\t\t\tvar ref = 0;\r\n\r\n\t\t\t// Select from virtual ceiling cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tref = vDOM.firstElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.ceiling.nextElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the ceiling to vDom\r\n\t\t\tfor (var i = changes; i > 0; i--) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.ceiling === null){\r\n\t\t\t\t\tvCursor.ceiling = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('afterBegin', vCursor.ceiling);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t\t\tvCursor.ceiling = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\t\t}\r\n\t\telse if(changes < 0){ // backward\r\n\t\t\tvar ref = 0;\r\n\t\t\tchanges = -changes;\r\n\r\n\t\t\t// Select from virtual floor cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tref = vDOM.lastElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.floor.previousElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the floor to vDom\r\n\t\t\tfor (var i = 0; i < changes; i++) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvCursor.floor = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('beforeEnd', vCursor.floor);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t\t\tvCursor.floor = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scrollTo(index, list, prepareCount, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar reduce = 0;\r\n\r\n\t\tif(index >= list.length - virtual.preparedLength){\r\n\t\t\treduce -= prepareCount;\r\n\t\t\tindex = list.length - virtual.preparedLength;\r\n\t\t}\r\n\r\n\t\tif(index - virtual.DOMCursor === 0 || index >= list.length) return;\r\n\r\n\t\tscrollingByScript = true;\r\n\r\n\t\t// Already on DOM tree\r\n\t\tif((virtual.DOMCursor === 0 && index < prepareCount + prepareCount/2) ||\r\n\t\t\t(virtual.DOMCursor + prepareCount/2 > index\r\n\t\t\t&& virtual.DOMCursor + prepareCount < index))\r\n\t\t\tscroller.scrollTop = parentNode.children[index - virtual.DOMCursor + 1].offsetTop;\r\n\r\n\t\t// Move cursor\r\n\t\telse {\r\n\t\t\tvar temp = null;\r\n\t\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\t\tvar floor = virtual.dCursor.floor;\r\n\t\t\tvar vCursor = virtual.vCursor;\r\n\r\n\t\t\t// DOM tree to virtual DOM\r\n\t\t\tvar length = parentNode.childElementCount - 2;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\r\n\t\t\t\t\tif(i === length-1)\r\n\t\t\t\t\t\tvCursor.floor = temp;\r\n\t\t\t\t}\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(index >= prepareCount){\r\n\t\t\t\tif(index < list.length - virtual.preparedLength)\r\n\t\t\t\t\tindex -= prepareCount;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treduce = prepareCount - index;\r\n\t\t\t\tvirtual.DOMCursor = index = 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\r\n\t\t\t// Virtual DOM to DOM tree\r\n\t\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\t\ttemp = virtual.dom.children[index];\r\n\t\t\t\tif(temp === undefined) break;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t\tvirtual.DOMCursor = index;\r\n\r\n\t\t\tvCursor.floor = virtual.dom.children[index] || null;\r\n\t\t\tvCursor.ceiling = vCursor.floor ? vCursor.floor.previousElementSibling : null;\r\n\r\n\t\t\tif(list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\tlist.$virtual.refreshVirtualSpacer(index);\r\n\r\n\t\t\trefreshScrollBounding(index, virtual.bounding, list, parentNode);\r\n\r\n\t\t\ttemp = parentNode.children[prepareCount - reduce + 1];\r\n\t\r\n\t\t\tif(temp !== undefined)\r\n\t\t\t\tscroller.scrollTop = temp.offsetTop - scroller.offsetTop;\r\n\t\t}\r\n\r\n\t\tscrollingByScript = false;\r\n\t}\r\n\r\n\tfunction removeUserScrollFocus(parentNode){\r\n\t\tparentNode.style.overflow = 'hidden';\r\n\t\tsetTimeout(function(){\r\n\t\t\tparentNode.style.overflow = '';\r\n\t\t}, 50);\r\n\t}\r\n\r\n\tfunction getAbsoluteHeight(el){\r\n\t  var styles = window.getComputedStyle(el);\r\n\t  var margin = parseInt(styles['marginTop']) + parseInt(styles['marginBottom']);\r\n\t  return el.offsetHeight + margin || 0;\r\n\t}\r\n\r\n\tfunction obtainElements(list, parentNode){\r\n\t\tvar exist = [];\r\n\t\tvar temp = undefined;\r\n\r\n\t\tvar length = list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = parentNode.childElementCount - 2;\r\n\t\tfor (var i = 1; i <= length; i++) {\r\n\t\t\ttemp = parentNode.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\t\t\r\n\t\t// Get elements length\r\n\t\tvar elementLength = list.$virtual.dom.childElementCount + length;\r\n\r\n\t\tlength = elementLength - length - list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[list.$virtual.DOMCursor + i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\treturn exist;\r\n\t}\r\n\r\n\tfunction refresh(force, list, prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer){\r\n\t\tvar cursor = list.$virtual.DOMCursor;\r\n\t\tvar additionalScroll = 0;\r\n\r\n\t\t// Find nearest cursor for current view position\r\n\t\tif(force){\r\n\t\t\tvar i = -1;\r\n\t\t\tvar length = list.$virtual.preparedLength;\r\n\r\n\t\t\tdo{\r\n\t\t\t\ti++;\r\n\t\t\t} while(i < length && parentNode.children[i].offsetTop < scroller.scrollTop);\r\n\r\n\t\t\tcursor = cursor + i;\r\n\t\t\tif(cursor > 0) cursor -= 1;\r\n\r\n\t\t\tadditionalScroll = scroller.scrollTop - parentNode.children[i].offsetTop;\r\n\t\t}\r\n\r\n\t\t// Force move cursor if element in the DOM tree was overloaded\r\n\t\tif(force || parentNode.childElementCount - 2 > list.$virtual.preparedLength){\r\n\t\t\tlist.$virtual.DOMCursor = list.length;\r\n\t\t\tvar moveTo = cursor;\r\n\t\t\tif(!force)\r\n\t\t\t\tmoveTo = cursor <= prepareCount ? cursor : (cursor + prepareCount);\r\n\r\n\t\t\tscrollTo(moveTo,\r\n\t\t\t\tlist,\r\n\t\t\t\tprepareCount,\r\n\t\t\t\tparentNode,\r\n\t\t\t\tscroller\r\n\t\t\t);\r\n\r\n\t\t\tscroller.scrollTop += additionalScroll;\r\n\t\t}\r\n\r\n\t\tif(refreshVirtualSpacer)\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\r\n\t\tif(checkCursorPosition)\r\n\t\t\tcheckCursorPosition();\r\n\r\n\t\trefreshScrollBounding(cursor, list.$virtual.bounding, list, parentNode);\r\n\t}\r\n\r\n\tvar _onElementResize = [];\r\n\tvar _onElementResize_timer = -1;\r\n\tfunction onElementResize(parentNode, callback){\r\n\t\tif(_onElementResize_timer === -1){\r\n\t\t\t_onElementResize_timer = setInterval(function(){\r\n\t\t\t\tvar temp = null;\r\n\t\t\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\t\t\ttemp = _onElementResize[i];\r\n\r\n\t\t\t\t\t// Check resize\r\n\t\t\t\t\tif(temp.element.scrollHeight === temp.height\r\n\t\t\t\t\t\t|| temp.element.scrollWidth === temp.width)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t// Check if it's removed from DOM\r\n\t\t\t\t\tif(temp.element.parentElement === null){\r\n\t\t\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.callback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(_onElementResize.length === 0){\r\n\t\t\t\t\tclearInterval(_onElementResize_timer);\r\n\t\t\t\t\t_onElementResize_timer = -1;\r\n\t\t\t\t}\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\r\n\t\t_onElementResize.push({\r\n\t\t\telement:parentNode,\r\n\t\t\tcallback:callback,\r\n\t\t\theight:parentNode.scrollHeight,\r\n\t\t\twidth:parentNode.scrollWidth\r\n\t\t});\r\n\t}\r\n\r\n\tfunction offElementResize(parentNode){\r\n\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\tif(_onElementResize[i].element === parentNode)\r\n\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Interval will be cleared when the array is empty\r\n\t}\r\n\r\n\tfunction initStyles(){\r\n\t\tvar style = document.getElementById('sf-styles');\r\n\r\n\t\tif(!style){\r\n\t\t\tstyle = document.createElement('style');\r\n\t\t\tstyle.id = 'sf-styles';\r\n        \tdocument.head.appendChild(style);\r\n\t\t}\r\n\r\n\t\tstyle.sheet.insertRule(\r\n\t\t'.sf-virtual-list .virtual-spacer{'+\r\n            'visibility: hidden;'+\r\n            'position: relative;'+\r\n            'height: 1px;'+\r\n            'transform-origin: 0 0;'+\r\n            'width: 1px;'+\r\n            'margin: 0;'+\r\n            'padding: 0;'+\r\n            'background: none;'+\r\n            'border: none;'+\r\n            'box-shadow: none;'+\r\n         '}', style.sheet.cssRules.length);\r\n\t}\r\n};"]}