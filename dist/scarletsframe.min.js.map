{"version":3,"sources":["sf-a_init.js","sf-dom.js","sf-loader.js","sf-model.js","sf-a_polyfill.js","sf-controller.js","sf-e-ajax.js","sf-z_end.js","sf-router.js","sf-virtual_scroll.js"],"names":["global","factory","exports","module","sf","window","this","undefined","document","arguments","constructor","Function","loader","onFinish","apply","isEmptyObject","obj","key","compareObject","obj1","obj2","i","hiddenProperty","property","value","Object","defineProperty","enumerable","configurable","deepProperty","path","length","internal","regex","getQuotes","avoidQuotes","strictVar","dom","selector","context","parseElement","String","querySelectorAll","$","self","findOne","querySelector","parent","element","closest","matches","parentElement","prevAll","isNext","result","findNodes","nextSibling","previousSibling","push","nextAll","on","event","callback","once","tempCallback","ev","target","addEventListener","capture","sf$eventListener","off","events","split","ref","removeEventListener","splice","animateCSS","animationName","duration","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","style","webkitAnimationDuration","animationDuration","list","classList","add","remove","setTimeout","emptyDOM","div","createElement","ul","tbody","tr","table","select","html","returnNode","tempDOM","indexOf","textContent","insertAdjacentHTML","item","elements","documentElement","domReady","body","haveSymbol","getSelector","childIndexes","untilElement","names","parentNode","id","test","unshift","tagName","e","join","array","substr","childNodes","loadedContent","totalContent","DOMWasLoaded","DOMReady","turnedOff","whenDOMReady","whenDOMLoaded","whenProgress","func","onProgress","f","css","s","rel","href","head","appendChild","js","type","async","src","console","warn","isQueued","domLoadEvent","model","queuePreprocess","domStateEvent","readyState","error","resourceWaitTimer","setInterval","waitResources","clearInterval","listener","controller","init","router","prototype","scope","root","pending","run","bindingEnabled","processingElement","trimIndentation","text","indent","trim","replace","RegExp","bracketMatch","chackValidFunctionCall","allowedFunction","localEval","script","_model_","_modelScope","_content_","tempScript","preventExecution","check_","exec","log","outerHTML","_result_","_evaled_","eval","escapeEscapedQuote","unescapeEscapedQuote","elseIfHandle","else_","scopes","elseIf","elseValue","index","currentElement","previousElementSibling","getAttribute","modelName","$virtual","DOMCursor","for","name","modelKeys","modelRef","keys","templateParser_regex","REF_DIRECT","REF_IF","REF_EXEC","templateExec","parse","atIndex","parsed","data","if","templateParser","template","original","cloneNode","addresses","changesReference","pendingInsert","current","address","nodeType","refA","direct","full","match","cRef","dynamicFlag","parse_index","startFlag","attributes","a","refB","attribute","setAttribute","removeAttribute","sf$elementReferences","tDOM","insertBefore","syntheticCache","sf$cache","cache","modelRef_array","syntheticTemplate","changes","modelReference","newData","Array","checkRelatedChanges","parseIndex","found","assign","haveChanges","temp","reverse","currentDOM","notExist","isEqualNode","replaceChild","dataParser","mask","runEval","preParsedReference","variableList","scopeMask","itemMask","preParsed","lastParsedIndex","prepared","actual","matched","slice","exist","charCodeAt","uniqueDataParser","take","passVar","currentIndex","strDeclare","firstTime","JSON","stringify","check","VarPass_","VarPass","s1","obtained","forEach","val","findElse","pop","shift","condition","bindArray","propertyName","targetNode","editProperty","refreshTimer","parentChilds","children","isKeyed","contains","eventVar","processElement","options","other","count","vEndRange","preparedLength","spacer","firstElementChild","lastElementChild","height","reset","clearTimeout","reinitScroll","overflow","vDOM","theParent","update","index_a","other_sibling","other_parent","oldChild","referenceNode","create","vCursor","floor","insertAdjacentElement","currentRemoved","startRemove","refreshVirtualSpacer","propertyProxy","subject","lastLength","from","to","reinitCursor","o","resetViewport","matchLeft","refresh","real","limit","callback_","var","virtual_scroll","handle","elem","getElement","hardRefresh","softRefresh","virtualChilds","floorBound","dCursor","ret","childElement","childElementCount","loopParser","method","items","root_","extractPreprocess","sf$bindedKey","initBindingInformation","get","set","n","inputBoundFunction","bindInput","whichVar","alreadyInitialized","DOMNodeRemoved","hasAttribute","removeModelBinding","queued","parsePreprocess","ceiling","after","nextElementSibling","before","everyRemovedNodes","nodes","MutationObserver","observe","everyRecords","record","removedNodes","records","childList","subtree","bindedKey","Number","Boolean","destroy","getOwnPropertyDescriptor","dcBracket","bindElement","proxyProperty","objValue","onChanges","properties","copy","addressed","addressAttributes","currentNode","attrs","indexes","innerHTML","addressStart","commentFlag","flag","createComment","textNode","createTextNode","search","extract","sort","b","checkList","full_","match_","findModelProperty","asArray","enclosedHTMLParse","excludes","writable","extracting","nodeName","enclosing","enclosed","nodeValue","attr","varArgs","TypeError","nextSource","nextKey","hasOwnProperty","call","Element","CharacterData","DocumentType","removeChild","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","ownerDocument","NodeList","thisArg","location","origin","protocol","hostname","port","values","res","active","modelScope","bindedList","parentEl","bindedListIndex","listenSFClick","method_","preventDefault","globals","jsonpRequests","Request","requestOptions","globalsNoCallbacks","callbackName","defaults","url","toString","user","password","headers","xhrFields","statusCode","processData","dataType","contentType","timeout","fireCallback","globalCallbackValue","optionCallbackValue","_i","paramsPrefix","toUpperCase","stringData","serializeQuery","abortTimeout_1","callbackName_1","Date","now","callbackSplit","requestUrl","addVars","filter","el","script_1","onerror","xhr","XMLHttpRequest","requestParameters","open","xhrTimeout","postData","ArrayBuffer","Blob","Document","FormData","boundary","setRequestHeader","headerName","crossDomain","$2","host","onload","status","responseData","parseError","responseText","err","responseType","response","onabort","abort","send","RequestShortcut","args","_a","success","params","prefix","encodeURIComponent","concat","post","json","getJSON","postJSON","setup","ajax","loading","enabled","pauseRenderOnTransition","currentPage","initialized","currentRouterURL","popstateListener","routingError","routingBack","goto","pathname","beforeEvent","enable","load","onEvent","loaded","special","lazyViewPoint","history","pushState","RouterLoading","_scarlets","DOMReference","foundAction","last","afterEvent","title","oldURL","newURL","routerLoaded","aborted","back","styleInitialized","scrollingByScript","refreshScrollBounding","cursor","bounding","Math","prepareCount","offsetTop","initial","scrollHeight","scrollTo","scroller","virtual","reduce","scrollTop","insertCount","removeUserScrollFocus","getAbsoluteHeight","styles","getComputedStyle","margin","parseInt","offsetHeight","force","checkCursorPosition","additionalScroll","moveTo","getElementById","sheet","insertRule","cssRules","initStyles","reinitOnly","elementLength","obtainElements","_onElementResize","offElementResize","visibleLength","clientHeight","ceilingHeight","floorHeight","fillViewport","updating","resetCeiling","previousCeiling","nextFloor","hitFloor","hitCeiling","_onElementResize_timer","scrollWidth","width","onElementResize","dynamicHeight","offsetTo","fromCeiling","scrollFocused","moveElementCursor","navigator","userAgent","staticHeight"],"mappings":"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","file":"scarletsframe.min.js","sourcesContent":["(function(global, factory){\r\n  if(typeof exports === 'object' && typeof module !== 'undefined') module.exports = factory(global);\r\n  else global.sf = factory(global);\r\n}(typeof window !== \"undefined\" ? window : this, (function(window){'use strict';\r\nif(typeof document === undefined)\r\n\tdocument = window.document;\r\n// ===== Module Init =====\r\n\r\nvar sf = function(){\r\n\tif(arguments[0].constructor === Function){\r\n\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\t}\r\n};\r\n\r\nsf.internal = {};\r\nsf.regex = {\r\n\t// ToDo: Need help to skip escaped quote\r\n\tgetQuotes:/(['\"])[\\s\\S]*?[^\\\\]\\1/g,\r\n\tavoidQuotes:'(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)',\r\n\tstrictVar:'(?=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )'\r\n};\r\n\r\nfunction isEmptyObject(obj){\r\n\tfor(var key in obj){\r\n\t\treturn false;\r\n\t}\r\n\treturn true\r\n}\r\n\r\nfunction compareObject(obj1, obj2){\r\n\tif(!obj1 || !obj2)\r\n\t\treturn false;\r\n\r\n\tfor(var i in obj1){\r\n\t\tif(typeof obj1[i] !== 'object' && obj1[i] !== obj2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction hiddenProperty(obj, property, value){\r\n\tObject.defineProperty(obj, property, {\r\n\t\tenumerable: false,\r\n\t\tconfigurable: true,\r\n\t\tvalue: value\r\n\t});\r\n}\r\n\r\nfunction deepProperty(obj, path){\r\n  for(var i = 0; i < path.length; i++){\r\n    obj = obj[path[i]];\r\n    if(obj === undefined) return obj;\r\n  }\r\n  return obj;\r\n}","sf.dom = function(selector, context){\r\n\tif(selector[0] === '<') return sf.dom.parseElement(selector);\r\n\tif(selector.constructor !== String) return selector;\r\n\r\n\tif(context) return context.querySelectorAll(selector);\r\n\treturn document.querySelectorAll(selector);\r\n}\r\n\r\nvar $ = sf.dom; // Shortcut\r\n\r\n;(function(){\r\n\tvar self = sf.dom;\r\n\r\n\tself.findOne = function(selector, context){\r\n\t\tif(context !== undefined) return context.querySelector(selector);\r\n\t\treturn document.querySelector(selector);\r\n\t}\r\n\r\n\tself.parent = function(element, selector){\r\n\t\tif(element.closest) return element.closest(selector);\r\n\r\n\t\tdo {\r\n\t\t\tif(element.matches(selector) === true)\r\n\t\t\t\treturn element;\r\n\r\n\t\t\telement = element.parentElement;\r\n\t\t} while (element !== null);\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tself.prevAll = function(element, selector, isNext){\r\n\t\tvar result = [];\r\n\t\tvar findNodes = selector === null || selector.constructor !== String ? true : false;\r\n\r\n\t\t// Skip current element\r\n\t\telement = isNext ? element.nextSibling : element.previousSibling;\r\n\t\twhile (element !== null) {\r\n\t\t\tif(findNodes === false && element.matches(selector) === true)\r\n\t\t\t\tresult.push(element);\r\n\t\t\telse{\r\n\t\t\t\tif(element === selector)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tresult.push(element);\r\n\t\t\t}\r\n\r\n\t\t\tif(isNext)\r\n\t\t\t\telement = element.nextSibling;\r\n\t\t\telse\r\n\t\t\t\telement = element.previousSibling;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.nextAll = function(element, selector){\r\n\t\treturn self.prevAll(element, selector, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen to an event\r\n\t * @param  Node \t\t\telement \tparent element\r\n\t * @param  string \t\t\tevent   \tevent name\r\n\t * @param  function|string  selector    callback function or selector\r\n\t * @param  function\t\t\tcallback    callback function\r\n\t * @param  boolean\t\t\tonce    \tcall once\r\n\t * @return null\r\n\t */\r\n\tself.on = function(element, event, selector, callback, once){\r\n\t\tif(typeof element === 'string'){\r\n\t\t\telement = document;\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = event;\r\n\t\t\tevent = element;\r\n\t\t}\r\n\r\n\t\tif(typeof selector === 'function'){\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = null;\r\n\t\t}\r\n\r\n\t\tif(selector){\r\n\t\t\tvar tempCallback = callback;\r\n\t\t\tcallback = function(ev){\r\n\t\t\t\tif(self.parent(ev.target, selector) !== null)\r\n\t\t\t\t\ttempCallback(ev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcallback.selector = selector;\r\n\t\tcallback.once = once;\r\n\t\telement.addEventListener(event, callback, {capture:true, once:once === true});\r\n\r\n\t\t// Save event listener\r\n\t\tif(element.sf$eventListener === undefined)\r\n\t\t\telement.sf$eventListener = {};\r\n\r\n\t\tif(element.sf$eventListener[event] === undefined)\r\n\t\t\telement.sf$eventListener[event] = [];\r\n\r\n\t\telement.sf$eventListener[event].push(callback);\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.once = function(element, event, selector, callback){\r\n\t\tself.on(element, event, selector, callback, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event listener\r\n\t * @param  Node \telement \tparent element\r\n\t * @param  string \tevent   \tevent name\r\n\t * @param  string  \tselector    selector\r\n\t * @return null\r\n\t */\r\n\tself.off = function(element, event, selector){\r\n\t\t// Remove all event\r\n\t\tif(event === undefined){\r\n\t\t\tif(element.sf$eventListener === undefined)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar events = element.sf$eventListener[event];\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar events = event.split(' ');\r\n\t\tif(events.length !== 1){\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove listener\r\n\t\tif(element.sf$eventListener === undefined)\r\n\t\t\treturn;\r\n\r\n\t\tvar ref = element.sf$eventListener;\r\n\t\tif(ref !== undefined && ref[event] !== undefined){\r\n\t\t\tfor (var i = ref[event].length - 1; i >= 0; i--) {\r\n\t\t\t\tif(selector && ref[event][i].selector !== selector)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\telement.removeEventListener(event, ref[event].splice(i, 1), true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.animateCSS = function(element, animationName, callback, duration) {\r\n\t\tvar animationEnd = {\r\n\t\t\tanimation: 'animationend',\r\n\t\t\tOAnimation: 'oAnimationEnd',\r\n\t\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t\t};\r\n\r\n\t\tfor (var t in animationEnd){\r\n\t\t\tif(element.style[t] !== undefined){\r\n\t\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(duration){\r\n\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t}\r\n\r\n\t\tvar list = ('animated ' + animationName).split(' ');\r\n\t\telement.classList.add.apply(element.classList, list);\r\n\t\t$.once(element, animationEnd, function(){\r\n\t\t\telement.classList.remove.apply(element.classList, list);\r\n\t\t\t\r\n\t\t\tif(duration) setTimeout(function(){\r\n\t\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t\t}, 1);\r\n\r\n\t\t\tif(typeof callback === 'function') callback();\r\n\t\t});\r\n\t}\r\n\r\n\tvar emptyDOM = {\r\n\t\tdiv:document.createElement('div'),\r\n\t\tul:document.createElement('ul'),\r\n\t\ttbody:document.createElement('tbody'),\r\n\t\ttr:document.createElement('tr'),\r\n\t\ttable:document.createElement('table'),\r\n\t\tselect:document.createElement('select'),\r\n\t};\r\n\tself.parseElement = function(html, returnNode){\r\n\t\tvar result = [];\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\r\n        if(html.indexOf('<li') === 0) tempDOM = emptyDOM.ul;\r\n        if(html.indexOf('<tr') === 0) tempDOM = emptyDOM.tbody;\r\n        if(html.indexOf('<td') === 0 || html.indexOf('<th') === 0) tempDOM = emptyDOM.tr;\r\n        if(html.indexOf('<tbody') === 0) tempDOM = emptyDOM.table;\r\n        if(html.indexOf('<option') === 0) tempDOM = emptyDOM.select;\r\n\r\n\t\ttempDOM.textContent = '';\r\n\t\ttempDOM.insertAdjacentHTML('afterBegin', html);\r\n\r\n\t\tvar ref = tempDOM[returnNode ? 'childNodes' : 'children'];\r\n\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\tresult.push(ref.item(i));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tself.remove = function(elements){\r\n\t\tif(elements.remove !== undefined)\r\n\t\t\treturn elements.remove();\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\telements[i].remove();\r\n\t\t}\r\n\t}\r\n\r\n\tvar documentElement = null;\r\n\tsetTimeout(function(){\r\n\t\tsf.loader.domReady(function(){\r\n\t\t\tdocumentElement = document.body.parentElement;\r\n\t\t});\r\n\t}, 1);\r\n\r\n\tvar haveSymbol = /[~`!@#$%^&*()+={}|[\\]\\\\:\";'<>?,./ ]/;\r\n\tself.getSelector = function(element, childIndexes, untilElement){\r\n\t\tvar names = [];\r\n\t\tif(untilElement === undefined) untilElement = documentElement;\r\n\r\n\t\tvar previousSibling = childIndexes ? 'previousSibling' : 'previousElementSibling';\r\n\r\n\t\twhile(element.parentNode !== null){\r\n\t\t\tif(element.id && !haveSymbol.test(element.id)){\r\n\t\t\t\tnames.unshift('#'+element.id);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(element === untilElement){\r\n\t\t\t\t\tif(childIndexes === undefined)\r\n\t\t\t\t\t\tnames.unshift(element.tagName);\r\n\t\t\t\t\telse names.unshift(0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar e = element;\r\n\t\t\t\t\tvar i = childIndexes ? 0 : 1;\r\n\r\n\t\t\t\t\twhile(e[previousSibling]){\r\n\t\t\t\t\t\te = e[previousSibling];\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(childIndexes)\r\n\t\t\t\t\t\tnames.unshift(i);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tnames.unshift(\":nth-child(\"+i+\")\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t\tif(element === null)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndexes)\r\n\t\t\treturn names;\r\n\t\treturn names.join(\" > \");\r\n\t}\r\n\r\n\tself.childIndexes = function(array, context){\r\n\t\tvar element = context || documentElement;\r\n\t\tvar i = 1;\r\n\r\n\t\tif(array[0].constructor === String && element.id !== array[0].substr(1))\r\n\t\t\telement = element.querySelector(array[0]);\r\n\r\n\t\telse if(array.length === 1)\r\n\t\t\treturn element;\r\n\r\n\t\tfor (i = i; i < array.length; i++) {\r\n\t\t\telement = element.childNodes.item(array[i]);\r\n\r\n\t\t\tif(element === null)\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n})();","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 0;\r\n\tself.DOMWasLoaded = false;\r\n\tself.DOMReady = false;\r\n\tself.turnedOff = true;\r\n\r\n\tvar whenDOMReady = [];\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\tself.off = function(){\r\n\t\tself.turnedOff = true;\r\n\t}\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.domReady = function(func){\r\n\t\tif(self.DOMReady) return func();\r\n\t\tif(whenDOMReady.indexOf(func) !== -1) return;\r\n\t\twhenDOMReady.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('link');\r\n\t        s.rel = 'stylesheet';\r\n\t        s.href = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tself.js = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('script');\r\n\t        s.type = \"text/javascript\";\r\n\t        s.async = true;\r\n\t        s.src = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(function(){\r\n\t\tif(self.totalContent === 0 && !self.turnedOff){\r\n\t\t\tself.loadedContent = self.totalContent = 1;\r\n\t\t\tconsole.warn(\"If you don't use content loader feature, please turn it off with `sf.loader.off()`\");\r\n\t\t}\r\n\t}, 10000);\r\n\r\n\r\n\tvar isQueued = false;\r\n\tvar lastState = '';\r\n\tdocument.addEventListener(\"load\", function domLoadEvent(event){\r\n\t\t// Add processing class to queued element\r\n\t\tif(isQueued === false && document.body){\r\n\t\t\tdocument.removeEventListener('load', domLoadEvent, true);\r\n\r\n\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tfor (var i = 0; i < isQueued.length; i++) {\r\n\t\t\t\tisQueued[i].classList.add('sf-dom-queued');\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued.length === 0) isQueued = false;\r\n\r\n\t\t\tif(lastState === 'loading'){\r\n\t\t\t\tvar repeatedList = $('[sf-repeat-this]', document.body);\r\n\t\t\t\tfor (var i = 0; i < repeatedList.length; i++) {\r\n\t\t\t\t\trepeatedList[i].classList.add('sf-dom-queued');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Find images\r\n\t\t\t\tvar temp = $('img:not(onload)[src]');\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tsf.loader.totalContent++;\r\n\t\t\t\t\ttemp[i].addEventListener('load', sf.loader.f, {once:true});\r\n\t\t\t\t\ttemp[i].addEventListener('error', sf.loader.f, {once:true});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, true);\r\n\r\n\tdocument.addEventListener('readystatechange', function domStateEvent(){\r\n\t\tif(document.readyState === 'interactive' || document.readyState === 'complete'){\r\n\t\t\tif(self.DOMReady === false){\r\n\t\t\t\tself.DOMReady = true;\r\n\t\t\t\tfor (var i = 0; i < whenDOMReady.length; i++) {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\twhenDOMReady[i]();\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued === false)\r\n\t\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tresourceWaitTimer = setInterval(waitResources, 100);\r\n\t\t\tdocument.removeEventListener('readystatechange', domStateEvent, true);\r\n\t\t}\r\n\t}, true);\r\n\r\n\tvar resourceWaitTimer = -1;\r\n\tfunction waitResources(){\r\n\t\tif(self.turnedOff === false && self.loadedContent < self.totalContent)\r\n\t\t\treturn;\r\n\r\n\t\tclearInterval(resourceWaitTimer);\r\n\r\n\t\tvar listener = sf.dom('script, link, img');\r\n\t\tfor (var i = 0; i < listener.length; i++) {\r\n\t\t\tlistener[i].removeEventListener('error', sf.loader.f);\r\n\t\t\tlistener[i].removeEventListener('load', sf.loader.f);\r\n\t\t}\r\n\r\n\t\tself.DOMWasLoaded = true;\r\n\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\ttry{\r\n\t\t\t\twhenDOMLoaded[i]();\r\n\t\t\t} catch(e){\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\twhenProgress.splice(0);\r\n\t\twhenDOMReady.splice(0);\r\n\t\twhenDOMLoaded.splice(0);\r\n\t\twhenDOMReady = whenDOMLoaded = null;\r\n\r\n\t\t// Last init\r\n\t\tsf.controller.init();\r\n\t\tsf.model.init(document.body, isQueued);\r\n\t\tsf.router.init();\r\n\r\n\t\tisQueued = null;\r\n\t}\r\n}\r\nsf.prototype.constructor = sf.loader.onFinish;","// Data save and HTML content binding\r\nsf.model = function(scope){\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\tif(sf.controller.pending[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n};\r\n\r\n(function(){\r\n\tvar self = sf.model;\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\r\n\tvar processingElement = null;\r\n\r\n\t// For debugging, normalize indentation\r\n\tfunction trimIndentation(text){\r\n\t\tvar indent = text.split(\"\\n\", 3);\r\n\t\tif(indent[0][0] !== ' ' || indent[0][0] !== \"\\t\")\r\n\t\t\tindent = indent[1];\r\n\t\telse indent = indent[0];\r\n\r\n\t\tif(indent === undefined) return text;\r\n\t\tindent = indent.length - indent.trim().length;\r\n\t\tif(indent === 0) return text;\r\n\t\treturn text.replace(RegExp('^([\\\\t ]{'+indent+'})', 'gm'), '');\r\n\t}\r\n\r\n\t// Secured evaluation\r\n\tvar bracketMatch = RegExp('([\\\\w.]*?[\\\\S\\\\s])\\\\('+sf.regex.avoidQuotes, 'g');\r\n\tvar chackValidFunctionCall = /[a-zA-Z0-9 \\]\\$\\)]/;\r\n\tvar allowedFunction = [':', 'for', 'if', 'while', '_content_.take', 'console.log'];\r\n\tvar localEval = function(script, _model_, _modelScope, _content_){\r\n\t\t\"use strict\";\r\n\r\n\t\t// ==== Security check ====\r\n\t\tvar tempScript = script;\r\n\r\n\t\t// Remove quotes\r\n\t\ttempScript = tempScript.replace(sf.regex.getQuotes, '\"Quotes\"');\r\n\r\n\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\tvar preventExecution = false;\r\n\t\tvar check_ = null;\r\n\t\twhile((check_ = bracketMatch.exec(tempScript)) !== null){\r\n\t\t\tcheck_[1] = check_[1].trim();\r\n\r\n\t\t\tif(allowedFunction.indexOf(check_[1]) === -1 &&\r\n\t\t\t\tcheck_[1].split('.')[0] !== '_modelScope' &&\r\n\t\t\t\tchackValidFunctionCall.test(check_[1][check_[1].length-1])\r\n\t\t\t){\r\n\t\t\t\tpreventExecution = check_[1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(preventExecution){\r\n\t\t\tconsole.error(\"Trying to executing unrecognized function (\"+preventExecution+\")\");\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\t\t// ==== Security check ended ====\r\n\t\r\n\t\tvar _result_ = '';\r\n\t\ttry{\r\n\t\t\tif(/@return /.test(script) === true){\r\n\t\t\t\tvar _evaled_ = eval('(function(){'+script.split('@return ').join('return ')+'})()');\r\n\t\t\t\treturn _result_ + _evaled_;\r\n\t\t\t}\r\n\t\t\telse var _evaled_ = eval(script);\r\n\t\t} catch(e){\r\n\t\t\tconsole.error(e);\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\t// Find an index for the element on the list\r\n\tself.index = function(element){\r\n\t\tvar i = -1;\r\n\t\tvar tagName = element.tagName;\r\n\t\tvar currentElement = element;\r\n\r\n\t\twhile(element !== null) {\r\n\t\t\tif(element.tagName === tagName)\r\n\t\t\t\ti++;\r\n\r\n\t\t\telement = element.previousElementSibling;\r\n\t\t}\r\n\r\n\t\tvar list = currentElement.getAttribute('sf-bind-list');\r\n\t\tif(!list) return i;\r\n\r\n\t\tvar ref = sf.model.root[sf.controller.modelName(currentElement)][list];\r\n\t\tif(!ref.$virtual) return i;\r\n\r\n\t\treturn i + ref.$virtual.DOMCursor - 1;\r\n\t}\r\n\r\n\t// Declare model for the name with a function\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\t\t\r\n\t\tfunc(self(name), self);\r\n\t}\r\n\r\n\t// Get property of the model\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys;\r\n\t}\r\n\r\n\t// Escape the escaped quote\r\n\tfunction escapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*');\r\n\t}\r\n\r\n\tfunction unescapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\");\r\n\t}\r\n\r\n\tfunction elseIfHandle(else_, scopes){\r\n\t\tvar elseIf = else_.elseIf;\r\n\r\n\t\t// Else if\r\n\t\tfor (var i = 0; i < elseIf.length; i++) {\r\n\t\t\t// Check the condition\r\n\t\t\tscopes[0] = elseIf[i][0];\r\n\t\t\tif(!localEval.apply(self.root, scopes))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Get the value\r\n\t\t\tscopes[0] = elseIf[i][1];\r\n\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t}\r\n\r\n\t\t// Else\r\n\t\tif(else_.elseValue === null)\r\n\t\t\treturn '';\r\n\r\n\t\tscopes[0] = else_.elseValue;\r\n\t\treturn localEval.apply(self.root, scopes);\r\n\t}\r\n\r\n\t// ==== Template parser ====\r\n\tvar templateParser_regex = /{{%=([0-9]+)/gm;\r\n\tvar REF_DIRECT = 0, REF_IF = 1, REF_EXEC = 2;\r\n\tvar templateExec = function(parse, item, atIndex){\r\n\t\tvar parsed = {};\r\n\r\n\t\t// Get or evaluate static or dynamic data\r\n\t\tfor (var i = 0; i < parse.length; i++) {\r\n\t\t\tif(atIndex !== undefined && atIndex.indexOf(i) === -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar ref = parse[i];\r\n\t\t\tref.data[1] = item;\r\n\r\n\t\t\t// Direct evaluation type\r\n\t\t\tif(ref.type === REF_DIRECT || ref.type === REF_EXEC)\r\n\t\t\t\tparsed[i] = {type:ref.type, data:localEval.apply(self.root, ref.data)};\r\n\r\n\t\t\t// Conditional type\r\n\t\t\telse if(ref.type === REF_IF){\r\n\t\t\t\tvar scopes = ref.data;\r\n\t\t\t\tparsed[i] = {type:ref.type, data:''};\r\n\t\t\t\tscopes[0] = ref.if[0];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tparsed[i].data = elseIfHandle(ref, scopes);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscopes[0] = ref.if[1];\r\n\t\t\t\tparsed[i].data = localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n\r\n\tvar templateParser = function(template, item, original){\r\n\t\tvar html = original === true ? template.html : template.html.cloneNode(true);\r\n\t\tvar addresses = template.addresses;\r\n\t\tvar parsed = templateExec(template.parse, item);\r\n\r\n\t\t// Save model item reference to node\r\n\t\thtml.model = item;\r\n\r\n\t\tvar changesReference = [];\r\n\t\tvar pendingInsert = [];\r\n\r\n\t\t// Find element where the data belongs to\r\n\t\tfor (var i = 0; i < addresses.length; i++) {\r\n\t\t\tvar ref = addresses[i];\r\n\t\t\tvar current = $.childIndexes(ref.address, html);\r\n\r\n\t\t\t// Modify element attributes\r\n\t\t\tif(ref.nodeType === 1){\r\n\t\t\t\tvar refA = ref.attributes;\r\n\t\t\t\tfor(var a = 0; a < refA.length; a++){\r\n\t\t\t\t\tvar refB = refA[a];\r\n\r\n\t\t\t\t\tchangesReference.push({\r\n\t\t\t\t\t\tattribute:(refB.name === 'value' && current.tagName === 'INPUT' ? current : current.attributes[refB.name]),\r\n\t\t\t\t\t\tref:refB\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(refB.name === 'value' && current.tagName === 'INPUT'){\r\n\t\t\t\t\t\tcurrent.value = parsed[refB.direct].data;\r\n\t\t\t\t\t\tcurrent.removeAttribute('value');\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(refB.direct !== undefined){\r\n\t\t\t\t\t\tcurrent.setAttribute(refB.name, parsed[refB.direct].data);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Below is used for multiple data\r\n\t\t\t\t\trefB = current.attributes[refB.name];\r\n\r\n\t\t\t\t\trefB.value = refB.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Replace text node\r\n\t\t\tif(ref.nodeType === 3){\r\n\t\t\t\tvar refA = current;\r\n\r\n\t\t\t\tchangesReference.push({\r\n\t\t\t\t\ttextContent:refA,\r\n\t\t\t\t\tref:ref\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(ref.direct !== undefined){\r\n\t\t\t\t\trefA.textContent = parsed[ref.direct].data;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Below is used for multiple/dynamic data\r\n\t\t\t\trefA.textContent = refA.textContent.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Replace dynamic node\r\n\t\t\tif(ref.nodeType === -1){\r\n\t\t\t\tvar cRef = {\r\n\t\t\t\t\tdynamicFlag:current,\r\n\t\t\t\t\tdirect:ref.parse_index,\r\n\t\t\t\t\tparentNode:current.parentNode,\r\n\t\t\t\t\tstartFlag:ref.startFlag && $.childIndexes(ref.startFlag, html)\r\n\t\t\t\t};\r\n\t\t\t\tchangesReference.push(cRef);\r\n\r\n\t\t\t\t// Pending element insert to take other element reference\r\n\t\t\t\tpendingInsert.push(cRef);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Save reference to element\r\n\t\thtml.sf$elementReferences = changesReference;\r\n\t\t// html.sf$modelParsed = parsed;\r\n\r\n\t\t// Run the pending element\r\n\t\tfor (var i = 0; i < pendingInsert.length; i++) {\r\n\t\t\tvar ref = pendingInsert[i];\r\n\t\t\tvar tDOM = $.parseElement(parsed[ref.direct].data, true);\r\n\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\tref.parentNode.insertBefore(tDOM[a], ref.dynamicFlag);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t}\r\n\r\n\tfunction syntheticCache(element, template, item){\r\n\t\tif(element.sf$cache === undefined)\r\n\t\t\telement.sf$cache = {};\r\n\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\tvar ref = modelRef_array[i];\r\n\t\t\tcache[ref[0]] = deepProperty(item, ref[1]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction syntheticTemplate(element, template, property, item){\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tif(property !== undefined){\r\n\t\t\tvar changes = template.modelReference[property];\r\n\t\t\tif(changes === undefined || changes.length === 0){\r\n\t\t\t\tconsole.error(\"Failed to run syntheticTemplate because property '\"+property+\"' is not observed\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cache)\r\n\t\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\t\tif(ref[0] !== property) continue;\r\n\r\n\t\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t\t// Check if data was different\r\n\t\t\t\t\tif(cache[ref[0]] !== newData)\r\n\t\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar changes = [];\r\n\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\tif(cache === undefined){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t// Check if data was different\r\n\t\t\t\tif(cache[ref[0]] !== newData){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(changes.length === 0) return false;\r\n\t\t}\r\n\r\n\t\tvar parsed = templateExec(template.parse, item, changes);\r\n\t\tfunction checkRelatedChanges(parseIndex){\r\n\t\t\tvar found = false;\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(changes.indexOf(parseIndex[i]) !== -1){\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(found === false)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t// Prepare all required data\r\n\t\t\tchanges = [];\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(parsed[parseIndex[i]] === undefined){\r\n\t\t\t\t\tchanges.push(parseIndex[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tObject.assign(parsed, templateExec(template.parse, item, changes));\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tvar changesReference = element.sf$elementReferences;\r\n\t\tvar haveChanges = false;\r\n\t\tfor (var i = 0; i < changesReference.length; i++) {\r\n\t\t\tvar cRef = changesReference[i];\r\n\r\n\t\t\tif(cRef.dynamicFlag !== undefined){ // Dynamic data\r\n\t\t\t\tif(parsed[cRef.direct] !== undefined){\r\n\t\t\t\t\tvar tDOM = $.parseElement(parsed[cRef.direct].data, true).reverse();\r\n\t\t\t\t\tvar currentDOM = $.prevAll(cRef.dynamicFlag, cRef.startFlag);\r\n\t\t\t\t\tvar notExist = false;\r\n\r\n\t\t\t\t\t// Replace if exist, skip if similar\r\n\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\t\t\tif(currentDOM[a] === undefined){\r\n\t\t\t\t\t\t\tnotExist = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(currentDOM[a].isEqualNode(tDOM[a]) === false)\r\n\t\t\t\t\t\t\tcRef.parentNode.replaceChild(tDOM[a], currentDOM[a]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Add if not exist\r\n\t\t\t\t\tif(notExist){\r\n\t\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++)\r\n\t\t\t\t\t\t\tcRef.parentNode.insertBefore(tDOM[a], cRef.dynamicFlag);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove if over index\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tfor (var a = tDOM.length; a < currentDOM.length; a++) {\r\n\t\t\t\t\t\t\tcurrentDOM[a].remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(cRef.textContent !== undefined){ // Text only\r\n\t\t\t\tif(cRef.ref.parse_index !== undefined){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.textContent.textContent === temp) continue;\r\n\t\t\t\t\t\tcRef.textContent.textContent = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.textContent.textContent === value) continue;\r\n\t\t\t\t\tcRef.textContent.textContent = value;\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(cRef.attribute !== undefined){ // Attributes\r\n\t\t\t\tif(cRef.ref.parse_index !== undefined){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.attribute.value === temp) continue;\r\n\t\t\t\t\t\tcRef.attribute.value = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.attribute.value === value) continue;\r\n\t\t\t\t\tcRef.attribute.value = value;\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn haveChanges;\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval, preParsedReference){\r\n\t\tvar _modelScope = self.root[scope];\r\n\t\tif(!runEval) runEval = '';\r\n\t\t\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(_modelScope).join('|');\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(_modelScope[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\tvar preParsed = [];\r\n\t\t\tvar lastParsedIndex = preParsedReference.length;\r\n\t\t}\r\n\r\n\t\tvar prepared = html.replace(/{{([^@%][\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = escapeEscapedQuote(temp); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\r\n\t\t\ttemp = unescapeEscapedQuote(temp); // ToDo: Unescape\r\n\r\n\t\t\t// Unescape HTML\r\n\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t// Evaluate\r\n\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\ttemp = temp.trim();\r\n\r\n\t\t\t\t// Simplicity similar\r\n\t\t\t\tvar exist = preParsed.indexOf(temp);\r\n\r\n\t\t\t\tif(exist === -1){\r\n\t\t\t\t\tpreParsed.push(temp);\r\n\t\t\t\t\tpreParsedReference.push({type:REF_DIRECT, data:[temp, _model_, _modelScope]});\r\n\t\t\t\t\treturn '{{%=' + (preParsed.length + lastParsedIndex - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn '{{%=' + (exist + lastParsedIndex);\r\n\t\t\t}\r\n\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(/(?!&#.*?;)[\\u00A0-\\u9999<>\\&]/gm, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\tpreParsed = variableList = _modelScope = _model_ = mask = scope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t}\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\t// Dynamic data parser\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope, runEval){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(passVar === null)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\t// Use strict mode and prepare for new variables\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\t// Declare new variable\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove var because no variable are being passed\r\n\t\t\t\tif(firstTime === true)\r\n\t\t\t\t\tstrDeclare = strDeclare.replace('var ', '');\r\n\r\n\t\t\t\t// Escape function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('&#40;').split(')').join('&#41;');\r\n\r\n\t\t\t\t// Pass to static data parser for another HTML data\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Build script preparation\r\n\t\thtml = html.replace(/{\\[([\\s\\S]*?)\\]}/g, function(full, matched){\r\n\t\t\tif(/{{.*?}}/.test(matched) === false)\r\n\t\t\t\treturn \"_result_ += '\"+matched.split(\"'\").join(\"\\\\'\")+\"'\";\r\n\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope).join('|')+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(runEval === '#noEval')\r\n\t\t\tvar preParsedReference = [];\r\n\r\n\t\tvar prepared = html.replace(/{{((@|#[\\w])[\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = escapeEscapedQuote(temp); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\t\t\ttemp = unescapeEscapedQuote(temp); // ToDo: Unescape\r\n\r\n\t\t\t// Unescape HTML\r\n\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass_ = /(var|let)([\\w,\\s]+)(?=\\s(?==|in|of))/g;\r\n\t\t\tvar VarPass = [];\r\n\t\t\tvar s1 = null;\r\n\t\t\twhile((s1 = VarPass_.exec(temp)) !== null){\r\n\t\t\t\tVarPass.push(s1[2]);\r\n\t\t\t}\r\n\r\n\t\t\tif(_model_ === null && runEval === '#noEval')\r\n\t\t\t\tVarPass.push('_model_');\r\n\r\n\t\t\tif(VarPass.length !== 0){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/([\\n\\t\\r]|  )+/g, '').split(',').forEach(function(val){\r\n\t\t\t\t\t\tobtained.push(val);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':(typeof '+VarPass[i]+'!==\"undefined\"?'+VarPass[i]+':undefined)';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(VarPass.length === 0)\r\n\t\t\t\t\tVarPass = 'null';\r\n\t\t\t\telse VarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\t\t\telse temp = temp.split('&VarPass&').join('null');\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\r\n\t\t\t\t// {if, elseIf:([if, value], ...), elseValue}\r\n\t\t\t\tvar findElse = function(text){\r\n\t\t\t\t\ttext = text.join(':');\r\n\t\t\t\t\tvar else_ = null;\r\n\r\n\t\t\t\t\t// Get else value\r\n\t\t\t\t\tvar text = text.split('@else' + (text.indexOf(':') !== -1 ? ':' : ' :'));\r\n\t\t\t\t\tif(text.length === 2)\r\n\t\t\t\t\t\telse_ = text.pop();\r\n\t\t\t\t\telse text = text[0];\r\n\r\n\t\t\t\t\t// Split elseIf\r\n\t\t\t\t\ttext = text.split('@elseif ');\r\n\r\n\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t\tif:text.shift(),\r\n\t\t\t\t\t\telseIf:[],\r\n\t\t\t\t\t\telseValue:else_\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Separate condition script and value\r\n\t\t\t\t\tfor (var i = 0; i < text.length; i++) {\r\n\t\t\t\t\t\tvar val = text[i].split(':');\r\n\t\t\t\t\t\tobj.elseIf.push([val.shift(), val.join(':')]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tvar condition = check.shift();\r\n\t\t\t\t\tvar elseIf = findElse(check);\r\n\t\t\t\t\telseIf.type = REF_IF;\r\n\t\t\t\t\telseIf.data = [null, _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t\t// Trim Data\r\n\t\t\t\t\telseIf.if = [condition.trim(), elseIf.if.trim()];\r\n\t\t\t\t\tif(elseIf.elseValue !== null)\r\n\t\t\t\t\t\telseIf.elseValue = elseIf.elseValue.trim();\r\n\r\n\t\t\t\t\tfor (var i = 0; i < elseIf.elseIf.length; i++) {\r\n\t\t\t\t\t\telseIf.elseIf[i][0] = elseIf.elseIf[i][0].trim();\r\n\t\t\t\t\t\telseIf.elseIf[i][1] = elseIf.elseIf[i][1].trim();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Push data\r\n\t\t\t\t\tpreParsedReference.push(elseIf);\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scopes = [check[0], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\treturn elseIfHandle(findElse(check), scopes);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcheck.shift();\r\n\t\t\t\tscopes[0] = check.join(':');\r\n\r\n\t\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tvar scopes = [check[1], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tpreParsedReference.push({type:REF_EXEC, data:scopes});\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, scopes);\r\n\t\t\t\treturn temp;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\t_modelScope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t\treturn [prepared, preParsedReference, _content_];\r\n\t\t}\r\n\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\tvar bindArray = function(template, list, mask, modelName, propertyName, targetNode, parentNode, tempDOM){\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'swap', 'move', 'replace', 'softRefresh', 'hardRefresh'];\r\n\t\tvar refreshTimer = -1;\r\n\t\tvar parentChilds = parentNode.children;\r\n\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\r\n\t\t// Update callback\r\n\t\tvar modelRef = self.root[modelName];\r\n\t\tvar eventVar = 'on$'+propertyName;\r\n\t\tvar callback = modelRef[eventVar];\r\n\r\n\t\tvar processElement = function(index, options, other, count){\r\n\t\t\t// Find boundary for inserting to virtual DOM\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar vStartRange = list.$virtual.DOMCursor;\r\n\t\t\t\tvar vEndRange = vStartRange + list.$virtual.preparedLength;\r\n\t\t\t}\r\n\r\n\t\t\tif(options === 'clear'){\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar spacer = [parentNode.firstElementChild, parentNode.lastElementChild];\r\n\r\n\t\t\t\tparentNode.textContent = '';\r\n\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tparentNode.appendChild(spacer[0]);\r\n\t\t\t\t\tparentNode.appendChild(spacer[1]);\r\n\t\t\t\t\tlist.$virtual.dom.textContent = '';\r\n\t\t\t\t\tspacer[1].style.height = \r\n\t\t\t\t\tspacer[0].style.height = 0;\r\n\t\t\t\t\tlist.$virtual.reset(true);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid multiple refresh by set a timer\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar exist = list.$virtual.elements();\r\n\r\n\t\t\t\tclearTimeout(refreshTimer);\r\n\t\t\t\trefreshTimer = setTimeout(function(){\r\n\t\t\t\t\tlist.$virtual.reinitScroll();\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse exist = parentChilds;\r\n\r\n\t\t\t// Hard refresh - Append element\r\n\t\t\tif(options === 'hardRefresh'){\r\n\t\t\t\t// Clear siblings after the index\r\n\t\t\t\tfor (var i = index; i < exist.length; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar vCursor = list.$virtual.vCursor;\r\n\r\n\t\t\t\tfor (var i = index; i < list.length; i++) {\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\tif(vCursor.floor === null && i < vEndRange)\r\n\t\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\t\telse list.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse parentNode.appendChild(temp);\r\n\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual && list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(callback === undefined)\r\n\t\t\t\tcallback = modelRef[eventVar];\r\n\r\n\t\t\tif(options === 'swap' || options === 'move'){\r\n\t\t\t\tif(options === 'move'){\r\n\t\t\t\t\tvar overflow = list.length - index - count;\r\n\t\t\t\t\tif(overflow < 0)\r\n\t\t\t\t\t\tcount += overflow;\r\n\r\n\t\t\t\t\t// Move to virtual DOM\r\n\t\t\t\t\tvar vDOM = document.createElement('div');\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tvDOM.appendChild(exist[index + i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar nextSibling = exist[other] || null;\r\n\t\t\t\t\tvar theParent = nextSibling && nextSibling.parentNode;\r\n\r\n\t\t\t\t\tif(theParent === false){\r\n\t\t\t\t\t\tif(list.$virtual && list.length >= vEndRange)\r\n\t\t\t\t\t\t\ttheParent = list.$virtual.dom;\r\n\t\t\t\t\t\telse theParent = parentNode;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Move to defined index\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\ttheParent.insertBefore(vDOM.firstElementChild, nextSibling);\r\n\r\n\t\t\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\t\t\tcallback.update(exist[index + i], 'move');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(index > other){\r\n\t\t\t\t\tvar index_a = exist[other];\r\n\t\t\t\t\tother = exist[index];\r\n\t\t\t\t\tindex = index_a;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tindex = exist[index];\r\n\t\t\t\t\tother = exist[other];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar other_sibling = other.nextSibling;\r\n\t\t\t\tvar other_parent = other.parentNode;\r\n\t            index.parentNode.insertBefore(other, index.nextSibling);\r\n\t            other_parent.insertBefore(index, other_sibling);\r\n\r\n\t\t\t\tif(callback !== undefined && callback.update){\r\n\t\t\t\t\tcallback.update(exist[other], 'swap');\r\n\t\t\t\t\tcallback.update(exist[index], 'swap');\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Clear unused element if current array < last array\r\n\t\t\tif(options === 'removeRange'){\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\texist[index].remove();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(options === 'remove'){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\texist[index].remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.remove){\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tsetTimeout(startRemove, 800);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse startRemove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update\r\n\t\t\telse if(options === 'update'){\r\n\t\t\t\tif(index === undefined){\r\n\t\t\t\t\tindex = 0;\r\n\t\t\t\t\tother = list.length;\r\n\t\t\t\t}\r\n\t\t\t\telse if(other === undefined) other = index + 1;\r\n\t\t\t\telse if(other < 0) other = list.length + other;\r\n\t\t\t\telse other += index;\r\n\r\n\t\t\t\t// Trim length\r\n\t\t\t\tvar overflow = list.length - other;\r\n\t\t\t\tif(overflow < 0) other = other + overflow;\r\n\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\tvar oldChild = exist[i];\r\n\t\t\t\t\tif(oldChild === undefined || list[i] === undefined)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\toldChild.parentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tparentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\t\tcallback.update(temp, 'replace');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar item = list[index];\r\n\t\t\tif(item === undefined) return;\r\n\r\n\t\t\tvar temp = templateParser(template, item);\r\n\t\t\tif(isKeyed === false)\r\n\t\t\t\tsyntheticCache(temp, template, item);\r\n\r\n\t\t\t// Create\r\n\t\t\tif(options === 'insertAfter'){\r\n\t\t\t\tif(exist.length === 0)\r\n\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\telse{\r\n\t\t\t\t\tvar referenceNode = exist[index - 1];\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode.nextSibling);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t\telse if(options === 'prepend'){\r\n\t\t\t\tvar referenceNode = exist[0];\r\n\t\t\t\tif(referenceNode !== undefined){\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode);\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t}\r\n\t\t\t\telse options = 'append';\r\n\t\t\t}\r\n\t\t\tif(options === 'append'){\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tif(index === 0) // Add before virtual scroller\r\n\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\telse if(index >= vEndRange){ // To virtual DOM\r\n\t\t\t\t\t\tif(list.$virtual.vCursor.floor === null)\r\n\t\t\t\t\t\t\tlist.$virtual.vCursor.floor = temp;\r\n\r\n\t\t\t\t\t\tlist.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse // To real DOM\r\n\t\t\t\t\t\texist[index-1].insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparentNode.appendChild(temp);\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar _double_zero = [0,0]; // For arguments\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = undefined;\r\n\t\t\t\t\tvar lastLength = this.length;\r\n\r\n\t\t\t\t\tif(name === 'move'){\r\n\t\t\t\t\t\tvar from = arguments[0];\r\n\t\t\t\t\t\tvar to = arguments[1];\r\n\t\t\t\t\t\tif(from === to) return;\r\n\t\t\t\t\t\tvar count = arguments[2] || 1;\r\n\t\t\t\t\t\tprocessElement(from, 'move', to, count);\r\n\r\n\t\t\t\t\t\tvar temp = Array.prototype.splice.apply(this, [from, count]);\r\n\t\t\t\t\t\ttemp.unshift(to, 0);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Reset virtual ceiling and floor\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(name === 'swap'){\r\n\t\t\t\t\t\tvar i = arguments[0];\r\n\t\t\t\t\t\tvar o = arguments[1];\r\n\t\t\t\t\t\tif(i === o) return;\r\n\t\t\t\t\t\tprocessElement(i, 'swap', o);\r\n\t\t\t\t\t\tvar temp = this[i];\r\n\t\t\t\t\t\tthis[i] = this[o];\r\n\t\t\t\t\t\tthis[o] = temp;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'replace'){\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.resetViewport();\r\n\r\n\t\t\t\t\t\t// Check if item has same reference\r\n\t\t\t\t\t\tif(arguments[0].length >= lastLength && lastLength !== 0){\r\n\t\t\t\t\t\t\tvar matchLeft = lastLength;\r\n\t\t\t\t\t\t\tvar ref = arguments[0];\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < lastLength; i++) {\r\n\t\t\t\t\t\t\t\tif(ref[i] === this[i]){\r\n\t\t\t\t\t\t\t\t\tmatchLeft--;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the end\r\n\t\t\t\t\t\t\tif(matchLeft === 0){\r\n\t\t\t\t\t\t\t\tif(ref.length === lastLength) return;\r\n\r\n\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(lastLength);\r\n\t\t\t\t\t\t\t\ttemp.unshift(lastLength, 0);\r\n\t\t\t\t\t\t\t\tthis.splice.apply(this, temp);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the middle\r\n\t\t\t\t\t\t\telse if(matchLeft !== lastLength){\r\n\t\t\t\t\t\t\t\tif(arguments[1] === true){\r\n\t\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(i);\r\n\t\t\t\t\t\t\t\t\ttemp.unshift(i, lastLength - i);\r\n\t\t\t\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t\t\t\tlist.refresh(i, lastLength);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Build from zero\r\n\t\t\t\t\t\tif(lastLength === 0){\r\n\t\t\t\t\t\t\tArray.prototype.push.apply(this, arguments[0]);\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Clear all items and merge the new one\r\n\t\t\t\t\t\tvar temp = [0, lastLength];\r\n\t\t\t\t\t\tArray.prototype.push.apply(temp, arguments[0]);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Rebuild all element\r\n\t\t\t\t\t\tif(arguments[1] !== true || isKeyed){\r\n\t\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reuse some element\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t// Clear unused element if current array < last array\r\n\t\t\t\t\t\t\tif(this.length < lastLength)\r\n\t\t\t\t\t\t\t\tprocessElement(this.length, 'removeRange', lastLength);\r\n\r\n\t\t\t\t\t\t\t// And start refreshing\r\n\t\t\t\t\t\t\tlist.refresh(0, this.length);\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reset virtual list\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reset();\r\n\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice' && arguments[0] === 0 && arguments[1] === undefined){\r\n\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\treturn Array.prototype.splice.apply(this, arguments);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(this.length, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'push'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(lastLength, 'append');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = 0; i < arguments.length; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(lastLength + i, 'append');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'shift'){\r\n\t\t\t\t\t\tprocessElement(0, 'remove');\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor > 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor--;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments[0] === 0 && arguments[1] === undefined)\r\n\t\t\t\t\t\t\treturn temp;\r\n\r\n\t\t\t\t\t\t// Removing data\r\n\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\tif(real < 0) real = lastLength + real;\r\n\r\n\t\t\t\t\t\tvar limit = arguments[1];\r\n\t\t\t\t\t\tif(!limit && limit !== 0) limit = this.length;\r\n\r\n\t\t\t\t\t\tfor (var i = limit - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tprocessElement(real + i, 'remove');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = real - limit;\r\n\r\n\t\t\t\t\t\tif(arguments.length >= 3){ // Inserting data\r\n\t\t\t\t\t\t\tlimit = arguments.length - 2;\r\n\r\n\t\t\t\t\t\t\t// Trim the index if more than length\r\n\t\t\t\t\t\t\tif(real >= this.length)\r\n\t\t\t\t\t\t\t\treal = this.length - 1;\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < limit; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(real + i, 'insertAfter');\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\t\tlist.$virtual.DOMCursor += limit;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(0, 'prepend');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = arguments.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\t\tprocessElement(i, 'prepend');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor !== 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor += arguments.length;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'softRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0], 'update', arguments[1]);\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'hardRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0] || 0, 'hardRefresh');\r\n\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = arguments[0] || 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(parentNode && parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\tdelete list.$virtual;\r\n\t\t\tlist.$virtual = {};\r\n\r\n\t\t\t// Transfer virtual DOM\r\n\t\t\tlist.$virtual.dom = tempDOM;\r\n\t\t\tif(callback !== undefined)\r\n\t\t\t\tlist.$virtual.callback = callback;\r\n\t\t\telse list.$virtual.callback_ = {ref:modelRef, var:eventVar};\r\n\r\n\t\t\tparentNode.replaceChild(template.html, parentChilds[1]);\r\n\t\t\tsf.internal.virtual_scroll.handle(list, targetNode, parentNode);\r\n\t\t\ttemplate.html.remove();\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\r\n\t\t// Todo: Enable auto item binding\r\n\t\tif(false && list.auto !== false){\r\n\t\t\t// for (var i = 0; i < list.length; i++) {\r\n\t\t\t// \tlist[i]\r\n\t\t\t// }\r\n\t\t}\r\n\r\n\t\thiddenProperty(list, 'refresh', function(index, length, property){\r\n\t\t\tif(index === undefined || index.constructor === String){\r\n\t\t\t\tproperty = index;\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tlength = list.length;\r\n\t\t\t}\r\n\t\t\telse if(length === undefined) length = index + 1;\r\n\t\t\telse if(length.constructor === String){\r\n\t\t\t\tproperty = length;\r\n\t\t\t\tlength = index + 1;\r\n\t\t\t}\r\n\t\t\telse if(length < 0) length = list.length + length;\r\n\t\t\telse length += index;\r\n\r\n\t\t\t// Trim length\r\n\t\t\tvar overflow = list.length - length;\r\n\t\t\tif(overflow < 0) length = length + overflow;\r\n\r\n\t\t\tfor (var i = index; i < length; i++) {\r\n\t\t\t\tvar elem = list.getElement(i);\r\n\r\n\t\t\t\t// Create element if not exist\r\n\t\t\t\tif(elem === undefined){\r\n\t\t\t\t\tlist.hardRefresh(i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(isKeyed === true)\r\n\t\t\t\t\t\tlist.softRefresh(i);\r\n\t\t\t\t\telse if(syntheticTemplate(elem, template, property, list[i]) === false)\r\n\t\t\t\t\t\tcontinue; // Continue if no update\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\tcallback.update(elem, 'replace');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar virtualChilds = null;\r\n\t\tif(list.$virtual){\r\n\t\t\tvirtualChilds = list.$virtual.dom.children;\r\n\t\t\tvar floorBound = list.$virtual.dCursor.floor;\r\n\t\t}\r\n\t\thiddenProperty(list, 'getElement', function(index){\r\n\t\t\tif(virtualChilds !== null){\r\n\t\t\t\tvar ret = undefined;\r\n\t\t\t\tif(index < list.$virtual.DOMCursor)\r\n\t\t\t\t\tret = virtualChilds[index];\r\n\t\t\t\telse {\r\n\t\t\t\t\tindex -= list.$virtual.DOMCursor;\r\n\t\t\t\t\tvar childElement = parentNode.childElementCount - 2;\r\n\r\n\t\t\t\t\tif(index <= childElement)\r\n\t\t\t\t\t\tret = parentChilds[index + 1];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tret = virtualChilds[index - childElement + list.$virtual.DOMCursor];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(ret !== floorBound)\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t\treturn parentChilds[index];\r\n\t\t});\r\n\t}\r\n\r\n\tvar loopParser = function(name, template, script, targetNode, parentNode){\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\r\n\t\tvar items = root_(name)[method[1]];\r\n\t\tif(items === undefined)\r\n\t\t\titems = root_(name)[method[1]] = [];\r\n\r\n\t\ttemplate.setAttribute('sf-bind-list', method[1]);\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = template;\r\n\t\ttemplate = self.extractPreprocess(template, mask, name);\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tvar tempDOM = document.createElement('div');\r\n\t\t\tvar modelRef = self.root[name];\r\n\r\n\t\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\t\tvar elem = templateParser(template, items[i]);\r\n\t\t\t\ttempDOM.appendChild(elem);\r\n\r\n\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\tsyntheticCache(elem, template, items[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// Enable element binding\r\n\t\t\tif(modelRef.sf$bindedKey === undefined)\r\n\t\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\t\tif(modelRef.sf$bindedKey[method[1]] === undefined)\r\n\t\t\t\tmodelRef.sf$bindedKey[method[1]] = null;\r\n\r\n\t\t\tObject.defineProperty(modelRef, method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tif(val.length === 0)\r\n\t\t\t\t\t\treturn items.splice(0);\r\n\t\t\t\t\treturn items.replace(val, true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tbindArray(template, items, mask, name, method[1], targetNode, parentNode, tempDOM);\r\n\r\n\t\t\t// Output to real DOM if not being used for virtual list\r\n\t\t\tif(items.$virtual === undefined){\r\n\t\t\t\tvar children = tempDOM.children;\r\n\t\t\t\tfor (var i = 0, n = children.length; i < n; i++) {\r\n\t\t\t\t\tparentNode.appendChild(children[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttempDOM.remove();\r\n\t\t\t\ttempDOM = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar inputBoundFunction = function(e){\r\n\t\tself.root[e.target['sf-model']][e.target['sf-bounded']] = e.target.value;\r\n\t};\r\n\r\n\tvar bindInput = function(targetNode){\r\n\t\tvar temp = $('input[sf-bound]', targetNode);\r\n\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar model = sf.controller.modelName(element);\r\n\t\t\tif(!model) return;\r\n\r\n\t\t\tvar whichVar = element.getAttribute('sf-bound');\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(typeof self.root[model][whichVar] === undefined){\r\n\t\t\t\tconsole.error('Cannot get reference for self.root[\"' + model + '\"][\"' + whichVar+'\"]');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement['sf-bounded'] = whichVar;\r\n\t\t\telement['sf-model'] = model;\r\n\t\t\telement.setAttribute('sf-bounded', '');\r\n\t\t\telement.removeAttribute('sf-bound');\r\n\r\n\t\t\t// Bound value change\r\n\t\t\tif(element.tagName === 'INPUT' || element.tagName === 'TEXTAREA')\r\n\t\t\t\t$.on(element, 'keyup', inputBoundFunction);\r\n\r\n\t\t\telse\r\n\t\t\t\t$.on(element, 'change', inputBoundFunction);\r\n\t\t}\r\n\t}\r\n\r\n\tvar alreadyInitialized = false;\r\n\tself.init = function(targetNode, queued){\r\n\t\tif(alreadyInitialized && !targetNode) return;\r\n\t\talreadyInitialized = true;\r\n\t\tsetTimeout(function(){\r\n\t\t\talreadyInitialized = false;\r\n\t\t}, 50);\r\n\r\n\t\tif(!targetNode) targetNode = document.body;\r\n\t\tself.parsePreprocess(queued || self.queuePreprocess(targetNode), queued);\r\n\t\tbindInput(targetNode);\r\n\r\n\t\t// Find element for array binding\r\n\t\tvar temp = $('[sf-repeat-this]', targetNode);\r\n\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\tvar element = temp[a];\r\n\t\t\tvar parent = element.parentElement;\r\n\r\n\t\t\tif(queued !== undefined)\r\n\t\t\t\telement.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(parent.classList.contains('sf-virtual-list')){\r\n\t\t\t\tvar ceiling = document.createElement(element.tagName);\r\n\t\t\t\tceiling.classList.add('virtual-spacer');\r\n\t\t\t\tvar floor = ceiling.cloneNode(true);\r\n\r\n\t\t\t\tceiling.classList.add('ceiling');\r\n\t\t\t\tparent.insertBefore(ceiling, parent.firstElementChild); // prepend\r\n\r\n\t\t\t\tfloor.classList.add('floor');\r\n\t\t\t\tparent.appendChild(floor); // append\r\n\t\t\t}\r\n\r\n\t\t\tvar after = element.nextElementSibling;\r\n\t\t\tif(after === null || element === after)\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = element.previousElementSibling;\r\n\t\t\tif(before === null || element === before)\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = element.getAttribute('sf-repeat-this');\r\n\t\t\telement.removeAttribute('sf-repeat-this');\r\n\r\n\t\t\t// Check if the element was already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(element.outerHTML))\r\n\t\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\t\tvar controller = sf.controller.modelName(element);\r\n\t\t\tloopParser(controller, element, script, targetNode, parent);\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t}\r\n\r\n\t// Reset model properties\r\n\t// Don't call if the removed element is TEXT or #comment\r\n\tfunction DOMNodeRemoved(element){\r\n\t\tif(element.hasAttribute('sf-controller') !== false){\r\n\t\t\tremoveModelBinding(element.getAttribute('sf-controller'));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar temp = $('[sf-controller]', element);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tremoveModelBinding(temp[i].getAttribute('sf-controller'));\r\n\t\t}\r\n\t}\r\n\r\n\tsf(function(){\r\n\t\tvar everyRemovedNodes = function(nodes){\r\n\t\t\tif(nodes.nodeType !== 1 || nodes.firstElementChild === null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(nodes.sf$elementReferences !== undefined) return;\r\n\t\t\tDOMNodeRemoved(nodes);\r\n\t\t}\r\n\r\n\t\tif(typeof MutationObserver === 'function' && MutationObserver.prototype.observe){\r\n\t\t\tvar everyRecords = function(record){\r\n\t\t\t\trecord.removedNodes.forEach(everyRemovedNodes);\r\n\t\t\t}\r\n\r\n\t\t\tvar observer = new MutationObserver(function(records){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\trecords.forEach(everyRecords);\r\n\t\t\t});\r\n\r\n\t\t\tobserver.observe(document.body, { childList: true, subtree: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.body.addEventListener('DOMNodeRemoved', function(e){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\teveryRemovedNodes(e.target);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tvar removeModelBinding = self.reset = function(modelName){\r\n\t\tvar ref = self.root[modelName];\r\n\t\tif(ref === undefined)\r\n\t\t\treturn;\r\n\r\n\t\tvar bindedKey = ref.sf$bindedKey;\r\n\t\tvar temp = null;\r\n\t\tfor(var key in bindedKey){\r\n\t\t\tdelete bindedKey[key];\r\n\r\n\t\t\tif(ref[key] === undefined || ref[key] === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(ref[key].constructor === String ||\r\n\t\t\t\tref[key].constructor === Number ||\r\n\t\t\t\tref[key].constructor === Boolean\r\n\t\t\t){/* Ok */}\r\n\r\n\t\t\telse if(ref[key].constructor === Array){\r\n\t\t\t\tif(ref[key].$virtual){\r\n\t\t\t\t\tref[key].$virtual.destroy();\r\n\t\t\t\t\tdelete ref[key].$virtual;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset property without copying the array\r\n\t\t\t\ttemp = ref[key].splice('obtain');\r\n\t\t\t\tdelete ref[key];\r\n\t\t\t\tref[key] = temp;\r\n\t\t\t}\r\n\t\t\telse continue;\r\n\r\n\t\t\tif(Object.getOwnPropertyDescriptor(ref, key) === undefined)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Reconfigure / Remove property descriptor\r\n\t\t\tvar temp = ref[key];\r\n\t\t\tdelete ref[key];\r\n\t\t\tref[key] = temp;\r\n\t\t}\r\n\t}\r\n\r\n\tvar dcBracket = /{{[^#][\\s\\S]*?}}/;\r\n\tself.bindElement = function(element){\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar data = self.extractPreprocess(element, null, modelName);\r\n\t\ttemplateParser(data, model, true);\r\n\t\tdelete data.addresses;\r\n\t\telement.parentNode.replaceChild(data.html, element);\r\n\t\telement = data.html;\r\n\r\n\t\tfunction proxyProperty(propertyName){\r\n\t\t\tvar objValue = model[propertyName]; // Object value\r\n\t\t\tObject.defineProperty(model, propertyName, {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn objValue;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tobjValue = val;\r\n\r\n\t\t\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\t\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\t\t\t\tref[i]();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn objValue;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tvar onChanges = function(){\r\n\t\t\tif(syntheticTemplate(element, data, undefined, model) === false)\r\n\t\t\t\t0; //No update\r\n\t\t};\r\n\r\n\t\tvar properties = data.modelRef_array;\r\n\t\tfor (var i = 0; i < properties.length; i++) {\r\n\t\t\tvar propertyName = properties[i][0];\r\n\r\n\t\t\tif(model[propertyName] === undefined)\r\n\t\t\t\tmodel[propertyName] = '';\r\n\r\n\t\t\t// Enable multiple element binding\r\n\t\t\tif(model.sf$bindedKey === undefined)\r\n\t\t\t\tinitBindingInformation(model);\r\n\r\n\t\t\tif(model.sf$bindedKey[propertyName] !== undefined){\r\n\t\t\t\tif(model.sf$bindedKey[propertyName].indexOf(onChanges) === -1)\r\n\t\t\t\t\tmodel.sf$bindedKey[propertyName].push(onChanges);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tproxyProperty(propertyName);\r\n\t\t\tmodel.sf$bindedKey[propertyName] = [onChanges];\r\n\t\t}\r\n\t}\r\n\r\n\tself.extractPreprocess = function(targetNode, mask, name){\r\n\t\tvar copy = targetNode.outerHTML;\r\n\r\n\t\t// Mask the referenced item\r\n\t\tif(mask !== null)\r\n\t\t\tcopy = copy.split('#'+mask).join('_model_');\r\n\r\n\t\t// Extract data to be parsed\r\n\t\tcopy = uniqueDataParser(copy, null, mask, name, '#noEval');\r\n\t\tvar preParsed = copy[1];\r\n\t\tvar _content_ = copy[2];\r\n\t\tcopy = dataParser(copy[0], null, mask, name, '#noEval', preParsed);\r\n\r\n\t\tfunction findModelProperty(){\r\n\t\t\tif(mask === null){\r\n\t\t\t\t// Get model keys and sort by text length, make sure the longer one is from first index to avoid wrong match\r\n\t\t\t\tvar extract = RegExp('('+self.modelKeys(self.root[name]).sort(function(a, b){return b.length - a.length}).join('|')+')', 'g');\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tvar extract = RegExp('\\\\b(?:_model_|'+mask+')\\\\.([a-zA-Z0-9.[\\'\\\\]]+)(?:$|[^\\'\\\\]])', 'g');\r\n\t\t\tvar found = {};\r\n\r\n\t\t\tfor (var i = 0; i < preParsed.length; i++) {\r\n\t\t\t\tvar current = preParsed[i];\r\n\r\n\t\t\t\t// Text or attribute\r\n\t\t\t\tif(current.type === 0){\r\n\t\t\t\t\tcurrent.data[0].split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(found[match] === undefined) found[match] = [i];\r\n\t\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Dynamic data\r\n\t\t\t\tif(current.type === 1){\r\n\t\t\t\t\tvar checkList = current.if.join(';');\r\n\r\n\t\t\t\t\tif(current.elseValue !== null)\r\n\t\t\t\t\t\tcheckList += ';' + current.elseValue;\r\n\r\n\t\t\t\t\tfor (var a = 0; a < current.elseIf.length; a++) {\r\n\t\t\t\t\t\tcheckList += current.elseIf[a].join(';');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(current.type === 2)\r\n\t\t\t\t\tvar checkList = current.data[0];\r\n\r\n\t\t\t\tcheckList = checkList.replace(/_result_ \\+= _content_\\.take\\(.*?, ([0-9]+)\\);/g, function(full, match){\r\n\t\t\t\t\treturn _content_[match];\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcheckList.split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found[match] === undefined) found[match] = [i];\r\n\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn found;\r\n\t\t}\r\n\r\n\t\t// Build element and start addressing\r\n\t\tcopy = $.parseElement(copy)[0];\r\n\t\tvar nodes = self.queuePreprocess(copy, true).reverse();\r\n\t\tvar addressed = [];\r\n\r\n\t\tfunction addressAttributes(currentNode){\r\n\t\t\tvar attrs = currentNode.attributes;\r\n\t\t\tvar keys = [];\r\n\t\t\tvar indexes = 0;\r\n\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\tvar found = attrs[a].value.split('{{%=');\r\n\t\t\t\tif(found.length !== 1){\r\n\t\t\t\t\tvar key = {\r\n\t\t\t\t\t\tname:attrs[a].name,\r\n\t\t\t\t\t\tvalue:attrs[a].value\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tindexes = [];\r\n\t\t\t\t\tfound = attrs[a].value.replace(/{{%=([0-9]+)/g, function(full, match){\r\n\t\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found === '' && indexes.length === 1)\r\n\t\t\t\t\t\tkey.direct = indexes[0];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tkey.parse_index = indexes;\r\n\r\n\t\t\t\t\tkeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn keys;\r\n\t\t}\r\n\r\n\t\tvar currentElement = addressAttributes(copy);\r\n\t\tif(currentElement.length !== 0)\r\n\t\t\taddressed.push({\r\n\t\t\t\tnodeType:1,\r\n\t\t\t\taddress:[0],\r\n\t\t\t\tattributes:currentElement\r\n\t\t\t});\r\n\r\n\t\tfor (var i = 0; i < nodes.length; i++) {\r\n\t\t\tvar temp = {\r\n\t\t\t\tnodeType:nodes[i].nodeType\r\n\t\t\t};\r\n\r\n\t\t\tif(temp.nodeType === 1){ // Element\r\n\t\t\t\ttemp.attributes = addressAttributes(nodes[i]);\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\telse if(temp.nodeType === 3){ // Text node\r\n\t\t\t\tvar innerHTML = nodes[i].textContent;\r\n\t\t\t\tvar indexes = [];\r\n\r\n\t\t\t\tinnerHTML.replace(/{{%%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Check for dynamic mode\r\n\t\t\t\tif(indexes.length !== 0){\r\n\t\t\t\t\tinnerHTML = innerHTML.split(/{{%%=[0-9]+/gm);\r\n\t\t\t\t\tfor (var a = 0; a < innerHTML.length; a++) {\r\n\t\t\t\t\t\tinnerHTML[a] = trimIndentation(innerHTML[a]).trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodes[i].textContent = innerHTML.shift();\r\n\r\n\t\t\t\t\tvar parent = nodes[i].parentNode;\r\n\t\t\t\t\tvar nextSibling = nodes[i].nextSibling;\r\n\r\n\t\t\t\t\t// Dynamic boundary start\r\n\t\t\t\t\tvar addressStart = null;\r\n\t\t\t\t\tif(indexes.length !== 0 && nodes[i].textContent.length !== 0)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i], true);\r\n\t\t\t\t\telse if(nodes[i].previousSibling !== null)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i].previousSibling, true);\r\n\r\n\t\t\t\t\t// Find boundary ends\r\n\t\t\t\t\tvar commentFlag = [];\r\n\t\t\t\t\tfor(var a = 0; a < indexes.length; a++){\r\n\t\t\t\t\t\tvar flag = document.createComment('');\r\n\t\t\t\t\t\tparent.insertBefore(flag, nextSibling);\r\n\t\t\t\t\t\tcommentFlag.push({\r\n\t\t\t\t\t\t\tnodeType:-1,\r\n\t\t\t\t\t\t\tparse_index:indexes[a],\r\n\t\t\t\t\t\t\tstartFlag:addressStart,\r\n\t\t\t\t\t\t\taddress:$.getSelector(flag, true)\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(innerHTML[a]){\r\n\t\t\t\t\t\t\tvar textNode = document.createTextNode(innerHTML[a]);\r\n\t\t\t\t\t\t\tparent.insertBefore(textNode, nextSibling);\r\n\r\n\t\t\t\t\t\t\t// Get new start flag\r\n\t\t\t\t\t\t\tif(a + 1 < indexes.length)\r\n\t\t\t\t\t\t\t\taddressStart = $.getSelector(textNode, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Merge boundary address\r\n\t\t\t\t\tArray.prototype.push.apply(addressed, commentFlag);\r\n\t\t\t\t\tif(nodes[i].textContent === ''){\r\n\t\t\t\t\t\tnodes[i].remove();\r\n\t\t\t\t\t\tfor (var a = 0; a < commentFlag.length; a++) {\r\n\t\t\t\t\t\t\tvar ref = commentFlag[a].address;\r\n\t\t\t\t\t\t\tref[ref.length - 1]--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(nodes[i].textContent.search(/{{%=[0-9]+/) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if it's only model value\r\n\t\t\t\tindexes = [];\r\n\t\t\t\tinnerHTML = nodes[i].textContent.replace(/{{%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(innerHTML === '' && indexes.length === 1)\r\n\t\t\t\t\ttemp.direct = indexes[0];\r\n\t\t\t\telse{\r\n\t\t\t\t\ttemp.value = nodes[i].textContent;\r\n\t\t\t\t\ttemp.parse_index = indexes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\taddressed.push(temp);\r\n\t\t}\r\n\r\n\t\tvar modelReference = findModelProperty();\r\n\t\tvar keys = Object.keys(modelReference);\r\n\t\tvar asArray = [];\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tasArray.push([keys[i], keys[i].split('.')]);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\thtml:copy,\r\n\t\t\tparse:preParsed,\r\n\t\t\taddresses:addressed,\r\n\t\t\tmodelReference:modelReference,\r\n\t\t\tmodelRef_array:asArray\r\n\t\t};\r\n\t}\r\n\r\n\tvar enclosedHTMLParse = false;\r\n\tvar excludes = ['HTML','HEAD','STYLE','LINK','META','SCRIPT','OBJECT','IFRAME'];\r\n\tself.queuePreprocess = function(targetNode, extracting){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = childNodes.length - 1; i >= 0; i--) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\r\n\t\t\tif(extracting === undefined && excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tif(enclosedHTMLParse === true) continue;\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\r\n\t\t\t\t// Skip element and it's childs that already bound to prevent vulnerability\r\n\t\t\t\tif(attrs['sf-bind-key'] || attrs['sf-repeat-this'] || attrs['sf-bind-list']) continue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tif(extracting === undefined)\r\n\t\t\t\t\t\t\tcurrentNode.setAttribute('sf-preprocess', 'attronly');\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tArray.prototype.push.apply(temp, self.queuePreprocess(currentNode, extracting));\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tif(currentNode.textContent.length === 0){\r\n\t\t\t\t\tcurrentNode.remove();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// The scan is from bottom to first index\r\n\t\t\t\tvar enclosing = currentNode.textContent.indexOf('{[');\r\n\t\t\t\tif(enclosing !== -1)\r\n\t\t\t\t\tenclosedHTMLParse = false;\r\n\t\t\t\telse if(enclosedHTMLParse === true)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Start enclosed if closing pattern was found\r\n\t\t\t\tvar enclosed = currentNode.textContent.indexOf(']}');\r\n\t\t\t\tif(enclosed !== -1 && (enclosing === -1 || enclosing > enclosed)){ // avoid {[ ... ]}\r\n\t\t\t\t\tenclosedHTMLParse = true; // when ]} ... \r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tif(extracting === undefined){\r\n\t\t\t\t\t\tcurrentNode.parentNode.setAttribute('sf-preprocess', '');\r\n\r\n\t\t\t\t\t\t// Reset Siblings\r\n\t\t\t\t\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\t\t\t\t\ttemp[a].removeAttribute('sf-preprocess');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttemp.push(currentNode.parentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn temp;\r\n\t}\r\n\r\n\tself.parsePreprocess = function(nodes, queued){\r\n\t\tfor (var a = 0; a < nodes.length; a++) {\r\n\t\t\t// Get reference for debugging\r\n\t\t\tvar current = processingElement = nodes[a];\r\n\r\n\t\t\tvar model = sf.controller.modelName(current);\r\n\t\t\tcurrent.removeAttribute('sf-preprocess');\r\n\r\n\t\t\tif(queued !== undefined)\r\n\t\t\t\tcurrent.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tvar modelRef = self.root[model] || root_(model);\r\n\r\n\t\t\t// Double check if the child element already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(current.innerHTML)){\r\n\t\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\t\tconsole.log(processingElement.cloneNode(true));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(current.hasAttribute('sf-bind-ignore') === false)\r\n\t\t\t\tself.bindElement(current);\r\n\t\t\telse{\r\n\t\t\t\tvar temp = uniqueDataParser(current.innerHTML, modelRef, false, model);\r\n\t\t\t\tcurrent.innerHTML = dataParser(temp, modelRef, false, model);\r\n\t\t\t\tvar attrs = current.attributes;\r\n\t\t\t\tfor (var i = 0; i < attrs.length; i++) {\r\n\t\t\t\t\tif(attrs[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tvar attr = attrs[i];\r\n\t\t\t\t\t\tattr.value = dataParser(attr.value, modelRef, false, model);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initBindingInformation(modelRef){\r\n\t\tif(modelRef.sf$bindedKey !== undefined)\r\n\t\t\treturn;\r\n\r\n\t\t// Element binding data\r\n\t\tObject.defineProperty(modelRef, 'sf$bindedKey', {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable:false,\r\n\t\t\twritable:true,\r\n\t\t\tvalue:{}\r\n\t\t});\r\n\t}\r\n})();","// ==== ES5 Polyfill ====\r\nif(typeof Object.assign != 'function'){\r\n  Object.defineProperty(Object, \"assign\", {\r\n    value: function assign(target, varArgs) {\r\n      'use strict';\r\n      if (target == null)\r\n        throw new TypeError('Cannot convert undefined or null to object');\r\n      var to = Object(target);\r\n      for (var index = 1; index < arguments.length; index++) {\r\n        var nextSource = arguments[index];\r\n        if (nextSource != null) {\r\n          for (var nextKey in nextSource) {\r\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey))\r\n              to[nextKey] = nextSource[nextKey];\r\n          }\r\n        }\r\n      }\r\n      return to;\r\n    },\r\n    writable: true,\r\n    configurable: true\r\n  });\r\n}\r\n\r\nif(Element.prototype.remove === undefined || CharacterData.prototype.remove === undefined || DocumentType.prototype.remove === undefined){\r\n  (function (arr) {\r\n    arr.forEach(function (item) {\r\n      if (item.hasOwnProperty('remove')) {\r\n        return;\r\n      }\r\n      Object.defineProperty(item, 'remove', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n        value: function remove() {\r\n          if (this.parentNode !== null)\r\n            this.parentNode.removeChild(this);\r\n        }\r\n      });\r\n    });\r\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\r\n}\r\n\r\nif(!Element.prototype.matches){\r\n  Element.prototype.matches = (Element.prototype).matchesSelector ||\r\n    (Element.prototype).mozMatchesSelector || (Element.prototype).msMatchesSelector ||\r\n    (Element.prototype).oMatchesSelector || (Element.prototype).webkitMatchesSelector ||\r\n    function (s) {\r\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n      i = matches.length;\r\n      while (--i >= 0 && matches.item(i) !== this){}\r\n      return i > -1;\r\n    };\r\n}\r\n\r\nif(!NodeList.prototype.forEach){\r\n    NodeList.prototype.forEach = function (callback, thisArg) {\r\n        thisArg = thisArg || window;\r\n        for (var i = 0; i < this.length; i++) {\r\n            callback.call(thisArg, this[i], i, this);\r\n        }\r\n    };\r\n}\r\n\r\nif(!window.location.origin)\r\n  window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');\r\n\r\nif(!Object.values)\r\n  Object.values = function(obj){\r\n    var res = [];\r\n    for (var i in obj) {\r\n        if (obj.hasOwnProperty(i)) {\r\n            res.push(obj[i]);\r\n        }\r\n    }\r\n    return res;\r\n  }","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tself.pending = {};\r\n\tself.active = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tself.pending[name] = func;\r\n\t}\r\n\r\n\tself.modelScope = function(element, func){\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = element.getAttribute('sf-bind-list');\r\n\t\tif(!bindedList){\r\n\t\t\tvar parentEl = $.parent(element, '[sf-bind-list]');\r\n\t\t\tif(parentEl !== null)\r\n\t\t\t\tbindedList = parentEl.getAttribute('sf-bind-list');\r\n\t\t}\r\n\t\telse var parentEl = element;\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(sf.model.root[model], -1);\r\n\t\t\telse return sf.model.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = $.prevAll(parentEl, '[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(sf.model.root[model][bindedList], bindedListIndex);\r\n\t\telse return sf.model.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.modelName = function(element){\r\n\t\tvar name = undefined;\r\n\t\tif(element.hasAttribute('sf-controller'))\r\n\t\t\tname = element.getAttribute('sf-controller');\r\n\t\telse\r\n\t\t\tname = $.parent(element, '[sf-controller]').getAttribute('sf-controller');\r\n\r\n\t\t// Initialize it first\r\n\t\tif(name !== undefined && !self.active[name])\r\n\t\t\tself.run(name);\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = e.target;\r\n\t\tvar script = element.getAttribute('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = $.parent(element, '[sf-click]');\r\n\t\t\tscript = element.getAttribute('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = $.parent(element, '[sf-controller]').getAttribute('sf-controller');\r\n\r\n\t\tif(!sf.model.root[model])\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar _modelScope = sf.model.root[model];\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(_modelScope).join('|');\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+modelKeys+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tscript = script.replace(scopeMask, function(full, matched){\r\n\t\t\treturn '_modelScope.'+matched;\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script[0];\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(e) {\r\n\t\t\tmethod = false;\r\n\t\t}\r\n\r\n\t\tif(!method){\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot call `'+method_+'`]\\n', element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript.shift();\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0){\r\n\t\t\t// Replace `this` to `element`\r\n\t\t\tscript = eval(('['+script+']').replace(/,this|\\[this/g, function(found){\r\n\t\t\t\treturn found[0] + 'element';\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif(!script)\r\n\t\t\tscript = [];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element, script);\r\n\t\t\te.preventDefault();\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', element, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tself.run = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.run(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(self.pending[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\r\n\t\t\tself.pending[name](sf.model.root[name], root_);\r\n\t\t\tself.active[name] = true;\r\n\t\t\tdelete self.pending[name];\r\n\t\t}\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], root_);\r\n\t}\r\n\r\n\tself.init = function(parent){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(name);\r\n\t\t\t});\r\n\r\n\t\tvar temp = $('[sf-controller]', parent || document.body);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tself.run(temp[i].getAttribute('sf-controller'));\r\n\t\t}\r\n\t}\r\n\r\n\t// Create listener for sf-click\r\n\tdocument.addEventListener('DOMContentLoaded', function(){\r\n\t\t$.on(document.body, 'click', '[sf-click]', listenSFClick);\r\n\t}, {capture:true, once:true});\r\n}\r\n\r\nvar root_ = function(scope){\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n}","/*\r\n  Special Thanks to Vladimir Kharlampidi\r\n  https://github.com/nolimits4web/\r\n*/\r\n\r\nvar globals = {};\r\nvar jsonpRequests = 0;\r\nfunction Request(requestOptions) {\r\n    var globalsNoCallbacks = Object.assign({}, globals);\r\n    ('beforeCreate beforeOpen beforeSend error complete success statusCode').split(' ').forEach(function (callbackName) {\r\n        delete globalsNoCallbacks[callbackName];\r\n    });\r\n    var defaults = Object.assign({\r\n        url: window.location.toString(),\r\n        method: 'GET',\r\n        data: false,\r\n        async: true,\r\n        cache: true,\r\n        user: '',\r\n        password: '',\r\n        headers: {},\r\n        xhrFields: {},\r\n        statusCode: {},\r\n        processData: true,\r\n        dataType: 'text',\r\n        contentType: 'application/x-www-form-urlencoded',\r\n        timeout: 0,\r\n    }, globalsNoCallbacks);\r\n    var options = Object.assign({}, defaults, requestOptions);\r\n    var proceedRequest;\r\n    // Function to run XHR callbacks and events\r\n    function fireCallback(callbackName) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        /*\r\n          Callbacks:\r\n          beforeCreate (options),\r\n          beforeOpen (xhr, options),\r\n          beforeSend (xhr, options),\r\n          error (xhr, status),\r\n          complete (xhr, stautus),\r\n          success (response, status, xhr),\r\n          statusCode ()\r\n        */\r\n        var globalCallbackValue;\r\n        var optionCallbackValue;\r\n        if (globals[callbackName]) {\r\n            globalCallbackValue = globals[callbackName].apply(globals, data);\r\n        }\r\n        if (options[callbackName]) {\r\n            optionCallbackValue = options[callbackName].apply(options, data);\r\n        }\r\n        if (typeof globalCallbackValue !== 'boolean')\r\n            globalCallbackValue = true;\r\n        if (typeof optionCallbackValue !== 'boolean')\r\n            optionCallbackValue = true;\r\n        return (globalCallbackValue && optionCallbackValue);\r\n    }\r\n    // Before create callback\r\n    proceedRequest = fireCallback('beforeCreate', options);\r\n    if (proceedRequest === false)\r\n        return undefined;\r\n    // For jQuery guys\r\n    if (options.type)\r\n        options.method = options.type;\r\n    // Parameters Prefix\r\n    var paramsPrefix = options.url.indexOf('?') >= 0 ? '&' : '?';\r\n    // UC method\r\n    var method = options.method.toUpperCase();\r\n    // Data to modify GET URL\r\n    if ((method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') && options.data) {\r\n        var stringData = void 0;\r\n        if (typeof options.data === 'string') {\r\n            // Should be key=value string\r\n            if (options.data.indexOf('?') >= 0)\r\n                stringData = options.data.split('?')[1];\r\n            else\r\n                stringData = options.data;\r\n        }\r\n        else {\r\n            // Should be key=value object\r\n            stringData = serializeQuery(options.data);\r\n        }\r\n        if (stringData.length) {\r\n            options.url += paramsPrefix + stringData;\r\n            if (paramsPrefix === '?')\r\n                paramsPrefix = '&';\r\n        }\r\n    }\r\n    // JSONP\r\n    if (options.dataType === 'json' && options.url.indexOf('callback=') >= 0) {\r\n        var callbackName_1 = \"jsonp_\" + (Date.now() + ((jsonpRequests += 1)));\r\n        var abortTimeout_1;\r\n        var callbackSplit = options.url.split('callback=');\r\n        var requestUrl = callbackSplit[0] + \"callback=\" + callbackName_1;\r\n        if (callbackSplit[1].indexOf('&') >= 0) {\r\n            var addVars = callbackSplit[1].split('&').filter(function (el) { return el.indexOf('=') > 0; }).join('&');\r\n            if (addVars.length > 0)\r\n                requestUrl += \"&\" + addVars;\r\n        }\r\n        // Create script\r\n        var script_1 = document.createElement('script');\r\n        script_1.type = 'text/javascript';\r\n        script_1.onerror = function onerror() {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('error', null, 'scripterror');\r\n            fireCallback('complete', null, 'scripterror');\r\n        };\r\n        script_1.src = requestUrl;\r\n        // Handler\r\n        window[callbackName_1] = function jsonpCallback(data) {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('success', data);\r\n            script_1.parentNode.removeChild(script_1);\r\n            script_1 = null;\r\n            delete window[callbackName_1];\r\n        };\r\n        document.querySelector('head').appendChild(script_1);\r\n        if (options.timeout > 0) {\r\n            abortTimeout_1 = setTimeout(function () {\r\n                script_1.parentNode.removeChild(script_1);\r\n                script_1 = null;\r\n                fireCallback('error', null, 'timeout');\r\n            }, options.timeout);\r\n        }\r\n        return undefined;\r\n    }\r\n    // Cache for GET/HEAD requests\r\n    if (method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') {\r\n        if (options.cache === false) {\r\n            options.url += paramsPrefix + \"_nocache\" + Date.now();\r\n        }\r\n    }\r\n    // Create XHR\r\n    var xhr = new XMLHttpRequest();\r\n    // Save Request URL\r\n    xhr.requestUrl = options.url;\r\n    xhr.requestParameters = options;\r\n    // Before open callback\r\n    proceedRequest = fireCallback('beforeOpen', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Open XHR\r\n    xhr.open(method, options.url, options.async, options.user, options.password);\r\n    // Create POST Data\r\n    var postData = null;\r\n    if ((method === 'POST' || method === 'PUT' || method === 'PATCH') && options.data) {\r\n        if (options.processData) {\r\n            var postDataInstances = [ArrayBuffer, Blob, Document, FormData];\r\n            // Post Data\r\n            if (postDataInstances.indexOf(options.data.constructor) >= 0) {\r\n                postData = options.data;\r\n            }\r\n            else {\r\n                // POST Headers\r\n                var boundary = \"---------------------------\" + Date.now().toString(16);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    xhr.setRequestHeader('Content-Type', \"multipart/form-data; boundary=\" + boundary);\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader('Content-Type', options.contentType);\r\n                }\r\n                postData = '';\r\n                var data = serializeQuery(options.data);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    data = data.split('&');\r\n                    var newData = [];\r\n                    for (var i = 0; i < data.length; i += 1) {\r\n                        newData.push(\"Content-Disposition: form-data; name=\\\"\" + data[i].split('=')[0] + \"\\\"\\r\\n\\r\\n\" + data[i].split('=')[1] + \"\\r\\n\");\r\n                    }\r\n                    postData = \"--\" + boundary + \"\\r\\n\" + newData.join(\"--\" + boundary + \"\\r\\n\") + \"--\" + boundary + \"--\\r\\n\";\r\n                }\r\n                else if (options.contentType === 'application/json') {\r\n                    postData = JSON.stringify(options.data);\r\n                }\r\n                else {\r\n                    postData = data;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            postData = options.data;\r\n            xhr.setRequestHeader('Content-Type', options.contentType);\r\n        }\r\n    }\r\n    // Additional headers\r\n    if (options.headers) {\r\n        Object.keys(options.headers).forEach(function (headerName) {\r\n            xhr.setRequestHeader(headerName, options.headers[headerName]);\r\n        });\r\n    }\r\n    // Check for crossDomain\r\n    if (typeof options.crossDomain === 'undefined') {\r\n        // eslint-disable-next-line\r\n        options.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(options.url) && RegExp.$2 !== window.location.host;\r\n    }\r\n    if (!options.crossDomain) {\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    }\r\n    if (options.xhrFields) {\r\n        Object.assign(xhr, options.xhrFields);\r\n    }\r\n    var xhrTimeout;\r\n    // Handle XHR\r\n    xhr.onload = function onload() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 0) {\r\n            var responseData = void 0;\r\n            if (options.dataType === 'json') {\r\n                var parseError = void 0;\r\n                try {\r\n                    responseData = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (err) {\r\n                    parseError = true;\r\n                }\r\n                if (!parseError) {\r\n                    fireCallback('success', responseData, xhr.status, xhr);\r\n                }\r\n                else {\r\n                    fireCallback('error', xhr, 'parseerror');\r\n                }\r\n            }\r\n            else {\r\n                responseData = xhr.responseType === 'text' || xhr.responseType === '' ? xhr.responseText : xhr.response;\r\n                fireCallback('success', responseData, xhr.status, xhr);\r\n            }\r\n        }\r\n        else {\r\n            fireCallback('error', xhr, xhr.status);\r\n        }\r\n        if (options.statusCode) {\r\n            if (globals.statusCode && globals.statusCode[xhr.status])\r\n                globals.statusCode[xhr.status](xhr);\r\n            if (options.statusCode[xhr.status])\r\n                options.statusCode[xhr.status](xhr);\r\n        }\r\n        fireCallback('complete', xhr, xhr.status);\r\n    };\r\n    xhr.onerror = function onerror() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        fireCallback('error', xhr, xhr.status);\r\n        fireCallback('complete', xhr, 'error');\r\n    };\r\n    // Timeout\r\n    if (options.timeout > 0) {\r\n        xhr.onabort = function onabort() {\r\n            if (xhrTimeout)\r\n                clearTimeout(xhrTimeout);\r\n        };\r\n        xhrTimeout = setTimeout(function () {\r\n            xhr.abort();\r\n            fireCallback('error', xhr, 'timeout');\r\n            fireCallback('complete', xhr, 'timeout');\r\n        }, options.timeout);\r\n    }\r\n    // Ajax start callback\r\n    proceedRequest = fireCallback('beforeSend', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Send XHR\r\n    xhr.send(postData);\r\n    // Return XHR object\r\n    return xhr;\r\n}\r\nfunction RequestShortcut(method) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    var _a = [], url = _a[0], data = _a[1], success = _a[2], error = _a[3], dataType = _a[4];\r\n    if (typeof args[1] === 'function') {\r\n        url = args[0], success = args[1], error = args[2], dataType = args[3];\r\n    }\r\n    else {\r\n        url = args[0], data = args[1], success = args[2], error = args[3], dataType = args[4];\r\n    }\r\n    [success, error].forEach(function (callback) {\r\n        if (typeof callback === 'string') {\r\n            dataType = callback;\r\n            if (callback === success)\r\n                success = undefined;\r\n            else\r\n                error = undefined;\r\n        }\r\n    });\r\n    dataType = dataType || (method === 'json' || method === 'postJSON' ? 'json' : undefined);\r\n    var requestOptions = {\r\n        url: url,\r\n        method: method === 'post' || method === 'postJSON' ? 'POST' : 'GET',\r\n        data: data,\r\n        success: success,\r\n        error: error,\r\n        dataType: dataType,\r\n    };\r\n    if (method === 'postJSON') {\r\n        Object.assign(requestOptions, {\r\n            contentType: 'application/json',\r\n            processData: false,\r\n            crossDomain: true,\r\n            data: typeof data === 'string' ? data : JSON.stringify(data),\r\n        });\r\n    }\r\n    return Request(requestOptions);\r\n}\r\nObject.assign(Request, {\r\n    get: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['get'].concat(args));\r\n    },\r\n    post: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['post'].concat(args));\r\n    },\r\n    json: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    getJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    postJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['postJSON'].concat(args));\r\n    },\r\n});\r\nRequest.setup = function setup(options) {\r\n    if (options.type && !options.method) {\r\n        Object.assign(options, { method: options.type });\r\n    }\r\n    Object.assign(globals, options);\r\n};\r\nfunction serializeQuery(params, prefix) {\r\n    var key = Object.keys(params);\r\n    for (var i = 0; i < key.length; i++) {\r\n      var value = params[key[i]];\r\n      if (params.constructor === Array)\r\n          key[i] += prefix + \"[]\";\r\n      else if (params.constructor === Object)\r\n          key[i] = (prefix ? prefix + \"[\" + key[i] + \"]\" : key[i]);\r\n\r\n      if (typeof value === 'object')\r\n          key[i] = serializeQuery(value, key[i]);\r\n      else\r\n          key[i] = key[i] + \"=\" + encodeURIComponent(value);\r\n    }\r\n    return key.join('&');\r\n}\r\n$.ajax = sf.ajax = Request;","return sf;\r\n\r\n// ===== Module End =====\r\n})));","sf.router = new function(){\r\n\tvar self = this;\r\n\tself.loading = false;\r\n\tself.enabled = false;\r\n\tself.pauseRenderOnTransition = false;\r\n\tself.currentPage = [];\r\n\tvar initialized = false;\r\n\tvar lazyRouting = false;\r\n\tvar currentRouterURL = '';\r\n\r\n\t// Should be called if not using lazy page load\r\n\tself.init = function(targetNode){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init();\r\n\t\t\t});\r\n\r\n\t\t// Run 'before' event for new page view\r\n\t\tvar temp = $('[sf-controller], [sf-page]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tif(temp[i].getAttribute('sf-controller'))\r\n\t\t\t\tsf.controller.run(temp[i].getAttribute('sf-controller'));\r\n\t\t\t\r\n\t\t\tif(temp[i].getAttribute('sf-page')){\r\n\t\t\t\tvar name = temp[i].getAttribute('sf-page');\r\n\t\t\t\tbeforeEvent(name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinitialized = true;\r\n\t\tcurrentRouterURL = window.location.pathname;\r\n\t}\r\n\r\n\tfunction popstateListener(event) {\r\n\t\t// Don't continue if the last routing was error\r\n\t\tif(routingError){\r\n\t\t\troutingError = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\troutingBack = true;\r\n\t\tself.goto(window.location.pathname);\r\n\t}\r\n\r\n\tself.enable = function(status){\r\n\t\tif(status === undefined) status = true;\r\n\t\tif(self.enabled === status) return;\r\n\t\tself.enabled = status;\r\n\r\n\t\tif(status === true){\r\n\t\t\t// Create listener for link click\r\n\t\t\t$.on(document.body, 'click', 'a[href]', self.load);\r\n\r\n\t\t\t// Create listener when navigate backward\r\n\t\t\twindow.addEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$.off(document.body, 'click', 'a[href]', self.load);\r\n\t\t\twindow.removeEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t}\r\n\r\n\tvar before = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.before = function(name, func, index){\r\n\t\tif(!before[name])\r\n\t\t\tbefore[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(before[name].indexOf(func) === -1)\r\n\t\t\t\tbefore[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tbefore[name][index] = func;\r\n\t}\r\n\r\n\tvar after = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.after = function(name, func, index){\r\n\t\tif(!after[name])\r\n\t\t\tafter[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(after[name].indexOf(func) === -1)\r\n\t\t\t\tafter[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tafter[name][index] = func;\r\n\t}\r\n\r\n\tvar root_ = function(scope){\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.model.root[scope] = {};\r\n\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.controller.run(scope);\r\n\t\t\r\n\t\treturn sf.model.root[scope];\r\n\t}\r\n\r\n\t// Running 'before' new page going to be displayed\r\n\tvar beforeEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.push(name);\r\n\r\n\t\tif(before[name]){\r\n\t\t\tfor (var i = 0; i < before[name].length; i++) {\r\n\t\t\t\tbefore[name][i](root_);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Running 'after' old page going to be removed\r\n\tvar afterEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.splice(self.currentPage.indexOf(name), 1);\r\n\r\n\t\tif(after[name]){\r\n\t\t\tfor (var i = 0; i < after[name].length; i++) {\r\n\t\t\t\tafter[name][i](root_);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar onEvent = {\r\n\t\t'loading':[],\r\n\t\t'loaded':[],\r\n\t\t'special':[],\r\n\t\t'error':[]\r\n\t};\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\tself.lazyViewPoint = {};\r\n\t/*\r\n\t\t{\r\n\t\t\toldURlPattern:{\r\n\t\t\t\tnewURLPattern:'.viewPoint'\r\n\t\t\t}\r\n\t\t}\r\n\t*/\r\n\r\n\tself.load = function(ev){\r\n\t\tif(self.enabled !== true) return;\r\n\r\n\t\tvar elem = ev.target;\r\n\t\tif(!elem.href) return;\r\n\r\n\t\tif(!history.pushState || elem.hasAttribute('sf-router-ignore'))\r\n\t\t\treturn;\r\n\r\n\t\t// Make sure it's from current origin\r\n\t\tvar path = elem.href.replace(window.location.origin, '');\r\n\t\tif(path.indexOf('//') !== -1)\r\n\t\t\treturn;\r\n\r\n\t\tev.preventDefault()\r\n\t\treturn !self.goto(path);\r\n\t}\r\n\r\n\tvar RouterLoading = false;\r\n\tvar routingBack = false;\r\n\tvar routingError = false;\r\n\tself.goto = function(path, data, method){\r\n\t\tif(!method) method = 'GET';\r\n        else method = method.toUpperCase();\r\n\r\n\t\tif(!data) data = {};\r\n\r\n\t\tfor (var i = 0; i < onEvent['loading'].length; i++) {\r\n\t\t\tif(onEvent['loading'][i](path)) return;\r\n\t\t}\r\n\t\tvar oldPath = window.location.pathname;\r\n\t\tinitialized = false;\r\n\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\t\tRouterLoading = $.ajax({\r\n\t\t\turl:window.location.origin + path,\r\n\t\t\tmethod:method,\r\n            data:Object.assign(data, {\r\n                _scarlets:'.dynamic.'\r\n            }),\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\tif(initialized) return;\r\n\t\t\t\tlazyRouting = true;\r\n\r\n\t\t\t\t// Run 'loaded' event\r\n\t\t\t\tRouterLoading = false;\r\n\r\n\t\t\t\t// Find special data\r\n\t\t\t\tvar regex = RegExp('<!-- SF-Special:(.*?)-->'+sf.regex.avoidQuotes, 'gm');\r\n\t\t\t\tvar special = regex.exec(data);\r\n\t\t\t\tif(special && special.length !== 1){\r\n\t\t\t\t\tspecial = special[1].split('--|&>').join('-->');\r\n\t\t\t\t\tspecial = JSON.parse(special);\r\n\r\n\t\t\t\t\tif(!isEmptyObject(special)){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['special'].length; i++) {\r\n\t\t\t\t\t\t\tif(onEvent['special'][i](special)) return;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DOMReference = false;\r\n\t\t\t\tvar foundAction = function(ref){\r\n\t\t\t\t\tDOMReference = $.findOne(ref);\r\n\r\n\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\tvar last = $.findOne('[sf-page]', DOMReference);\r\n\t\t\t\t\tafterEvent(last ? last.getAttribute('sf-page') : '/');\r\n\r\n\t\t\t\t\t// Redefine title if exist\r\n\t\t\t\t\tif(special && special.title)\r\n\t\t\t\t\t\t$('head > title').innerHTML = special.title;\r\n\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tfor(var oldURL in self.lazyViewPoint){\r\n\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\tfor(var newURL in self.lazyViewPoint[oldURL]){\r\n\t\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\t\tfoundAction(self.lazyViewPoint[oldURL][newURL]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(found) break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When the view point was not found\r\n\t\t\t\tif(!found){\r\n\t\t\t\t\t// Use fallback if exist\r\n\t\t\t\t\tif(sf.router.lazyViewPoint[\"@default\"])\r\n\t\t\t\t\t\tfoundAction(sf.router.lazyViewPoint[\"@default\"]);\r\n\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\t\t\tonEvent['error'][i]('sf.router.lazyViewPoint[\"'+oldURL+'\"][\"'+newURL+'\"] was not found');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Run 'before' event for new page view\r\n\t\t\t\tif(!DOMReference) DOMReference = document.body;\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', 'none');\r\n\r\n\t\t\t\t// Let page script running first, then update the data binding\r\n\t\t\t\tDOMReference.innerHTML = data;\r\n\r\n\t\t\t\t// Parse the DOM data binding\r\n\t\t\t\tsf.model.init(DOMReference);\r\n\r\n\t\t\t\t// Init template to model binding\r\n\t\t\t\tvar temp = $('[sf-page]', DOMReference);\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tbeforeEvent(temp[i].getAttribute('sf-page'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', '');\r\n\r\n\t\t\t\trouterLoaded(currentRouterURL, path, DOMReference);\r\n\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tlazyRouting = false;\r\n\r\n\t\t\t\tcurrentRouterURL = path;\r\n\t\t\t\troutingError = false;\r\n\t\t\t},\r\n\t\t\terror:function(xhr, data){\r\n\t\t\t\troutingError = true;\r\n\t\t\t\tif(xhr.aborted) return;\r\n\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\tonEvent['error'][i](xhr.status, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Back on error\r\n\t\t\t\twindow.history.back();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!routingBack)\r\n\t\t\twindow.history.pushState(null, \"\", path);\r\n\r\n\t\troutingBack = false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Trigger loaded event\r\n\tfunction routerLoaded(currentRouterURL, path, data){\r\n\t\tfor (var i = 0; i < onEvent['loaded'].length; i++) {\r\n\t\t\tonEvent['loaded'][i](currentRouterURL, path, data);\r\n\t\t}\r\n\t}\r\n};","sf.internal.virtual_scroll = new function(){\r\n\tvar self = this;\r\n\tvar styleInitialized = false;\r\n\tvar scrollingByScript = false;\r\n\r\n\t// before and after\r\n\tself.prepareCount = 4; // 4, 8, 12, 16, ...\r\n\r\n\tself.handle = function(list, targetNode, parentNode){\r\n\t\tif(!styleInitialized){\r\n\t\t\tinitStyles();\r\n\t\t\tstyleInitialized = true;\r\n\t\t}\r\n\r\n\t\tvar dynamicList = false;\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvirtual.reset = function(reinitOnly){\r\n\t\t\tvirtual.DOMCursor = 0; // cursor of first element in DOM tree as a cursor\r\n\r\n\t\t\tvirtual.bounding.ceiling = -1;\r\n\t\t\tvirtual.bounding.floor = 0;\r\n\r\n\t\t\tvirtual.vCursor.ceiling = null; // for forward direction\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.firstElementChild; // for backward direction\r\n\r\n\t\t\tvirtual.bounding.initial = virtual.dCursor.ceiling.offsetTop;\r\n\t\t\trefreshScrollBounding(0, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.reinitCursor = function(){\r\n\t\t\tvirtual.vCursor.ceiling = virtual.dom.children[virtual.DOMCursor - 1] || null;\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.children[virtual.DOMCursor] || null;\r\n\t\t}\r\n\r\n\t\tvirtual.reinitScroll = function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.elements = function(){\r\n\t\t\treturn obtainElements(list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.dCursor = { // DOM Cursor\r\n\t\t\tceiling:parentNode.querySelector('.virtual-spacer.ceiling'),\r\n\t\t\tfloor:parentNode.querySelector('.virtual-spacer.floor')\r\n\t\t};\r\n\r\n\t\tvirtual.bounding = {};\r\n\t\tvirtual.vCursor = {};\r\n\r\n\t\tvirtual.reset();\r\n\t\tvirtual.targetNode = parentNode;\r\n\t\tvirtual.scrollHeight = virtual.dCursor.floor.offsetTop - virtual.bounding.initial;\r\n\r\n\t\tvar scroller = parentNode;\r\n\t\tvirtual.destroy = function(){\r\n\t\t\t$.off(scroller, 'scroll');\r\n\t\t\t$.off(parentNode, 'mousedown mouseup');\r\n\t\t\tvirtual.dom.innerHTML = '';\r\n\t\t\toffElementResize(parentNode);\r\n\r\n\t\t\tdelete list.$virtual;\r\n\t\t}\r\n\r\n\t\tvirtual.resetViewport = function(){\r\n\t\t\tvirtual.visibleLength = Math.floor(scroller.clientHeight / virtual.scrollHeight);\r\n\t\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\t\tif(virtual.preparedLength < 18)\r\n\t\t\t\tvirtual.preparedLength = 18;\r\n\t\t}\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tscroller = parentNode;\r\n\r\n\t\t\tvar length = parentNode.getAttribute('scroll-parent-index') || 0;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tscroller = scroller.parentElement;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.resetViewport();\r\n\r\n\t\t\tif(parentNode.classList.contains('sf-list-dynamic')){\r\n\t\t\t\tdynamicList = true;\r\n\t\t\t\tdynamicHeight(list, targetNode, parentNode, scroller);\r\n\t\t\t}\r\n\t\t\telse staticHeight(list, targetNode, parentNode, scroller);\r\n\t\t}, 500);\r\n\t}\r\n\r\n\t// Recommended for a list that have different element height\r\n\tfunction dynamicHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\r\n\t\t\t// Reset virtual spacer height\r\n\t\t\tceilingHeight = 0;\r\n\t\t\tfloorHeight = 0;\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller);\r\n\t\t\tfillViewport();\r\n\t\t}\r\n\r\n\t\t// Insert some element until reach visible height\r\n\t\tfillViewport();\r\n\r\n\t\tvirtual.visibleLength = parentNode.childElementCount - 2;\r\n\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\tvar temp = vCursor.floor;\r\n\t\t\tif(temp === null) break;\r\n\r\n\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t}\r\n\t\tvirtual.DOMCursor = 0;\r\n\r\n\t\tvar ceilingHeight = 0;\r\n\t\tvar floorHeight = 0;\r\n\t\tfunction previousCeiling(){\r\n\t\t\tvar temp = null;\r\n\t\t\tvar resetCeiling = false;\r\n\r\n\t\t\t// Add some element on the ceiling\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\ttemp = virtual.dom.lastElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.ceiling = temp.previousElementSibling;\r\n\t\t\t\tvirtual.DOMCursor--;\r\n\r\n\t\t\t\tceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tif(ceilingHeight > 0)\r\n\t\t\t\t\tceilingHeight -= getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(virtual.DOMCursor < self.prepareCount && !resetCeiling){\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\tresetCeiling = true;\r\n\t\t\t\t\ttemp = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(ceilingHeight < 0 || temp === null)\r\n\t\t\t\tceilingHeight = 0;\r\n\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\t// Remove some element on the floor\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = floor.previousElementSibling;\r\n\t\t\t\tfloorHeight += getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tvCursor.floor = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.floor === null)\r\n\t\t\t\tvCursor.ceiling = virtual.dom.lastElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tfunction fillViewport(){\r\n\t\t\t// Insert some element depend on prepared length\r\n\t\t\tvar length = virtual.preparedLength - (parentNode.childElementCount - 2);\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\ttemp = virtual.dom.firstElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction nextFloor(){\r\n\t\t\tvar temp = null;\r\n\t\t\tfillViewport();\r\n\r\n\t\t\tif(vCursor.floor !== null){\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\t// Add extra element based on prepare count\r\n\t\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\t\ttemp = vCursor.floor;\r\n\t\t\t\t\tif(temp === null) break;\r\n\r\n\t\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\t\tif(floorHeight > 0)\r\n\t\t\t\t\t\tfloorHeight -= getAbsoluteHeight(temp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(floorHeight < 0 || temp === null)\r\n\t\t\t\tfloorHeight = 0;\r\n\r\n\t\t\t// Remove some element on the ceiling\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\t\t\t\tceilingHeight += getAbsoluteHeight(temp);\r\n\t\t\t\tvirtual.DOMCursor++;\r\n\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\telse vCursor.ceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tvCursor.ceiling = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\t\trefreshScrollBounding(0, bounding, list, parentNode);\r\n\r\n\t\tif(virtual.callback_ !== undefined){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript) return;\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tif(scroller.scrollTop < bounding.ceiling){\r\n\t\t\t\t// console.log('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tpreviousCeiling();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\telse if(scroller.scrollTop > bounding.floor){\r\n\t\t\t\t// console.log('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tnextFloor();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\tif(virtual.callback !== undefined){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null &&\r\n\t\t\t\t\tscroller.scrollTop + scroller.clientHeight === scroller.scrollHeight\r\n\t\t\t\t){\r\n\t\t\t\t\tvirtual.callback.hitFloor(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null && scroller.scrollTop === 0){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\t\tonElementResize(parentNode, function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t});\r\n\t}\r\n\r\n\t// Recommended for a list that have similar element height\r\n\tfunction staticHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\r\n\t\t// Insert visible element to dom tree\r\n\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\tif(virtual.dom.firstElementChild === null)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', virtual.dom.firstElementChild);\r\n\t\t}\r\n\r\n\t\tvirtual.refreshVirtualSpacer = refreshVirtualSpacer;\r\n\r\n\t\tfunction refreshVirtualSpacer(cursor){\r\n\t\t\tif(cursor >= self.prepareCount){\r\n\t\t\t\tceiling.style.height = (cursor - self.prepareCount) * virtual.scrollHeight + 'px';\r\n\t\t\t\tfloor.style.height = (list.length - virtual.preparedLength - cursor) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tceiling.style.height = cursor * virtual.scrollHeight + 'px'; //'0px';\r\n\t\t\t\tvar count = (list.length - virtual.preparedLength);\r\n\t\t\t\tfloor.style.height = (count || 0) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\r\n\t\trefreshVirtualSpacer(0);\r\n\t\trefreshScrollBounding(self.prepareCount, bounding, list, parentNode);\r\n\t\tbounding.ceiling = -1;\r\n\r\n\t\tvirtual.offsetTo = function(index){\r\n\t\t\treturn index * virtual.scrollHeight + ceiling.offsetTop;\r\n\t\t}\r\n\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tif(virtual.callback_ !== undefined){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tvar fromCeiling = true;\r\n\t\tvar scrollFocused = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript || scroller.scrollTop >= bounding.ceiling && scroller.scrollTop <= bounding.floor){\r\n\t\t\t\t// Fix chrome scroll anchoring bugs when scrolling at corner\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tif(scroller.scrollTop === 0 || scroller.scrollTop === scroller.scrollHeight - scroller.clientHeight){\r\n\t\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar cursor = Math.floor(scroller.scrollTop / virtual.scrollHeight);\r\n\t\t\tif(cursor + virtual.preparedLength > list.length)\r\n\t\t\t\tcursor = list.length - virtual.preparedLength;\r\n\r\n\t\t\tif(fromCeiling){\r\n\t\t\t\tif(cursor < self.prepareCount*2)\r\n\t\t\t\t\tcursor -= self.prepareCount;\r\n\r\n\t\t\t\t// Fix chrome scroll anchoring bugs\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t}\r\n\t\t\t\tfromCeiling = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cursor < self.prepareCount){\r\n\t\t\t\tcursor = 0;\r\n\t\t\t\tfromCeiling = true;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tvar changes = cursor - virtual.DOMCursor;\r\n\t\t\tif(cursor + changes >= list.length)\r\n\t\t\t\tchanges = cursor + changes - list.length;\r\n\r\n\t\t\tif(changes === 0){ // This should be fixed to improve performance and future bugs\r\n\t\t\t\t//console.warn(\"No changes (The scroll bounding is not correct)\");\r\n\t\t\t\tupdating = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.DOMCursor = cursor;\r\n\r\n\t\t\t// console.log(cursor, changes, bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\t\t\tmoveElementCursor(changes, list);\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\t\t\trefreshScrollBounding(cursor, bounding, list, parentNode);\r\n\t\t\t// console.log('a', bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\r\n\t\t\tif(virtual.callback !== undefined){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null){\r\n\t\t\t\t\tvirtual.callback.hitFloor(cursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(cursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\r\n\t\t// For preventing scroll jump if scrolling over than viewport\r\n\t\tif(scroller === parentNode && navigator.userAgent.indexOf('Chrom') !== -1){\r\n\t\t\t$.on(parentNode, 'mousedown', function(){\r\n\t\t\t\tscrollFocused = true;\r\n\t\t\t});\r\n\t\t\t$.on(parentNode, 'mouseup', function(){\r\n\t\t\t\tscrollFocused = false;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction refreshScrollBounding(cursor, bounding, list, parentNode){\r\n\t\tvar temp = Math.floor(self.prepareCount / 2); // half of element preparation\r\n\t\tif(cursor < self.prepareCount){\r\n\t\t\tbounding.ceiling = -1;\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount * 2 + 1];\r\n\r\n\t\t\tif(bounding.floor !== undefined)\r\n\t\t\t\tbounding.floor = bounding.floor.offsetTop;\r\n\t\t\telse bounding.floor = parentNode.lastElementChild.offsetTop + 1000;\r\n\r\n\t\t\tbounding.floor -= bounding.initial;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if(parentNode.children[temp + 1] !== undefined)\r\n\t\t\t\tbounding.ceiling = parentNode.children[temp + 1].offsetTop; // -2 element\r\n\r\n\t\tif(list.$virtual.preparedLength !== undefined && cursor >= list.length - list.$virtual.preparedLength)\r\n\t\t\tbounding.floor = list.$virtual.dCursor.floor.offsetTop + list.$virtual.scrollHeight*2;\r\n\t\telse{\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount + 3].offsetTop; // +2 element\r\n\r\n\t\t\tif(parentNode.hasAttribute('scroll-reduce-floor')){\r\n\t\t\t\tbounding.floor -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t\tbounding.ceiling -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbounding.ceiling -= bounding.initial;\r\n\t\tbounding.floor -= bounding.initial;// scrollHeight - clientHeight\r\n\t}\r\n\r\n\tfunction moveElementCursor(changes, list){\r\n\t\tvar vDOM = list.$virtual.dom;\r\n\t\tvar vCursor = list.$virtual.vCursor;\r\n\t\tvar dCursor = list.$virtual.dCursor;\r\n\r\n\t\tif(changes > 0){ // forward\r\n\t\t\tvar ref = 0;\r\n\r\n\t\t\t// Select from virtual ceiling cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tref = vDOM.firstElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.ceiling.nextElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the ceiling to vDom\r\n\t\t\tfor (var i = changes; i > 0; i--) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.ceiling === null){\r\n\t\t\t\t\tvCursor.ceiling = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('afterBegin', vCursor.ceiling);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t\t\tvCursor.ceiling = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\t\t}\r\n\t\telse if(changes < 0){ // backward\r\n\t\t\tvar ref = 0;\r\n\t\t\tchanges = -changes;\r\n\r\n\t\t\t// Select from virtual floor cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tref = vDOM.lastElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.floor.previousElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the floor to vDom\r\n\t\t\tfor (var i = 0; i < changes; i++) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvCursor.floor = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('beforeEnd', vCursor.floor);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t\t\tvCursor.floor = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scrollTo(index, list, prepareCount, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar reduce = 0;\r\n\r\n\t\tif(index >= list.length - virtual.preparedLength){\r\n\t\t\treduce -= prepareCount;\r\n\t\t\tindex = list.length - virtual.preparedLength;\r\n\t\t}\r\n\r\n\t\tif(index - virtual.DOMCursor === 0 || index >= list.length) return;\r\n\r\n\t\tscrollingByScript = true;\r\n\r\n\t\t// Already on DOM tree\r\n\t\tif((virtual.DOMCursor === 0 && index < prepareCount + prepareCount/2) ||\r\n\t\t\t(virtual.DOMCursor + prepareCount/2 > index\r\n\t\t\t&& virtual.DOMCursor + prepareCount < index))\r\n\t\t\tscroller.scrollTop = parentNode.children[index - virtual.DOMCursor + 1].offsetTop;\r\n\r\n\t\t// Move cursor\r\n\t\telse {\r\n\t\t\tvar temp = null;\r\n\t\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\t\tvar floor = virtual.dCursor.floor;\r\n\t\t\tvar vCursor = virtual.vCursor;\r\n\r\n\t\t\t// DOM tree to virtual DOM\r\n\t\t\tvar length = parentNode.childElementCount - 2;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\r\n\t\t\t\t\tif(i === length-1)\r\n\t\t\t\t\t\tvCursor.floor = temp;\r\n\t\t\t\t}\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(index >= prepareCount){\r\n\t\t\t\tif(index < list.length - virtual.preparedLength)\r\n\t\t\t\t\tindex -= prepareCount;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treduce = prepareCount - index;\r\n\t\t\t\tvirtual.DOMCursor = index = 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\r\n\t\t\t// Virtual DOM to DOM tree\r\n\t\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\t\ttemp = virtual.dom.children[index];\r\n\t\t\t\tif(temp === undefined) break;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t\tvirtual.DOMCursor = index;\r\n\r\n\t\t\tvCursor.floor = virtual.dom.children[index] || null;\r\n\t\t\tvCursor.ceiling = vCursor.floor ? vCursor.floor.previousElementSibling : null;\r\n\r\n\t\t\tif(list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\tlist.$virtual.refreshVirtualSpacer(index);\r\n\r\n\t\t\trefreshScrollBounding(index, virtual.bounding, list, parentNode);\r\n\r\n\t\t\ttemp = parentNode.children[prepareCount - reduce + 1];\r\n\t\r\n\t\t\tif(temp !== undefined)\r\n\t\t\t\tscroller.scrollTop = temp.offsetTop - scroller.offsetTop;\r\n\t\t}\r\n\r\n\t\tscrollingByScript = false;\r\n\t}\r\n\r\n\tfunction removeUserScrollFocus(parentNode){\r\n\t\tparentNode.style.overflow = 'hidden';\r\n\t\tsetTimeout(function(){\r\n\t\t\tparentNode.style.overflow = '';\r\n\t\t}, 50);\r\n\t}\r\n\r\n\tfunction getAbsoluteHeight(el){\r\n\t  var styles = window.getComputedStyle(el);\r\n\t  var margin = parseInt(styles['marginTop']) + parseInt(styles['marginBottom']);\r\n\t  return el.offsetHeight + margin || 0;\r\n\t}\r\n\r\n\tfunction obtainElements(list, parentNode){\r\n\t\tvar exist = [];\r\n\t\tvar temp = undefined;\r\n\r\n\t\tvar length = list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = parentNode.childElementCount - 2;\r\n\t\tfor (var i = 1; i <= length; i++) {\r\n\t\t\ttemp = parentNode.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\t\t\r\n\t\t// Get elements length\r\n\t\tvar elementLength = list.$virtual.dom.childElementCount + length;\r\n\r\n\t\tlength = elementLength - length - list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[list.$virtual.DOMCursor + i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\treturn exist;\r\n\t}\r\n\r\n\tfunction refresh(force, list, prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer){\r\n\t\tvar cursor = list.$virtual.DOMCursor;\r\n\t\tvar additionalScroll = 0;\r\n\r\n\t\t// Find nearest cursor for current view position\r\n\t\tif(force){\r\n\t\t\tvar i = -1;\r\n\t\t\tvar length = list.$virtual.preparedLength;\r\n\r\n\t\t\tdo{\r\n\t\t\t\ti++;\r\n\t\t\t} while(i < length && parentNode.children[i].offsetTop < scroller.scrollTop);\r\n\r\n\t\t\tcursor = cursor + i;\r\n\t\t\tif(cursor > 0) cursor -= 1;\r\n\r\n\t\t\tadditionalScroll = scroller.scrollTop - parentNode.children[i].offsetTop;\r\n\t\t}\r\n\r\n\t\t// Force move cursor if element in the DOM tree was overloaded\r\n\t\tif(force || parentNode.childElementCount - 2 > list.$virtual.preparedLength){\r\n\t\t\tlist.$virtual.DOMCursor = list.length;\r\n\t\t\tvar moveTo = cursor;\r\n\t\t\tif(!force)\r\n\t\t\t\tmoveTo = cursor <= prepareCount ? cursor : (cursor + prepareCount);\r\n\r\n\t\t\tscrollTo(moveTo,\r\n\t\t\t\tlist,\r\n\t\t\t\tprepareCount,\r\n\t\t\t\tparentNode,\r\n\t\t\t\tscroller\r\n\t\t\t);\r\n\r\n\t\t\tscroller.scrollTop += additionalScroll;\r\n\t\t}\r\n\r\n\t\tif(refreshVirtualSpacer)\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\r\n\t\tif(checkCursorPosition)\r\n\t\t\tcheckCursorPosition();\r\n\r\n\t\trefreshScrollBounding(cursor, list.$virtual.bounding, list, parentNode);\r\n\t}\r\n\r\n\tvar _onElementResize = [];\r\n\tvar _onElementResize_timer = -1;\r\n\tfunction onElementResize(parentNode, callback){\r\n\t\tif(_onElementResize_timer === -1){\r\n\t\t\t_onElementResize_timer = setInterval(function(){\r\n\t\t\t\tvar temp = null;\r\n\t\t\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\t\t\ttemp = _onElementResize[i];\r\n\r\n\t\t\t\t\t// Check resize\r\n\t\t\t\t\tif(temp.element.scrollHeight === temp.height\r\n\t\t\t\t\t\t|| temp.element.scrollWidth === temp.width)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t// Check if it's removed from DOM\r\n\t\t\t\t\tif(temp.element.parentElement === null){\r\n\t\t\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.callback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(_onElementResize.length === 0){\r\n\t\t\t\t\tclearInterval(_onElementResize_timer);\r\n\t\t\t\t\t_onElementResize_timer = -1;\r\n\t\t\t\t}\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\r\n\t\t_onElementResize.push({\r\n\t\t\telement:parentNode,\r\n\t\t\tcallback:callback,\r\n\t\t\theight:parentNode.scrollHeight,\r\n\t\t\twidth:parentNode.scrollWidth\r\n\t\t});\r\n\t}\r\n\r\n\tfunction offElementResize(parentNode){\r\n\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\tif(_onElementResize[i].element === parentNode)\r\n\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Interval will be cleared when the array is empty\r\n\t}\r\n\r\n\tfunction initStyles(){\r\n\t\tvar style = document.getElementById('sf-styles');\r\n\r\n\t\tif(!style){\r\n\t\t\tstyle = document.createElement('style');\r\n\t\t\tstyle.id = 'sf-styles';\r\n        \tdocument.head.appendChild(style);\r\n\t\t}\r\n\r\n\t\tstyle.sheet.insertRule(\r\n\t\t'.sf-virtual-list .virtual-spacer{'+\r\n            'visibility: hidden;'+\r\n            'position: relative;'+\r\n            'height: 1px;'+\r\n            'transform-origin: 0 0;'+\r\n            'width: 1px;'+\r\n            'margin: 0;'+\r\n            'padding: 0;'+\r\n            'background: none;'+\r\n            'border: none;'+\r\n            'box-shadow: none;'+\r\n         '}', style.sheet.cssRules.length);\r\n\t}\r\n};"]}