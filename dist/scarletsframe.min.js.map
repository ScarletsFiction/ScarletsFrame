{"version":3,"sources":["sf-a_init.js","sf-a_polyfill.js","sf-dom.js","sf-loader.js","sf-component.js","sf-model.js","sf-api.js","sf-controller.js","sf-e-ajax.js","sf-z_end.js","sf-router.js","sf-virtual_scroll.js"],"names":["global","factory","routerEval","code","eval","exports","module","sf","window","this","document","internal","stuff","constructor","Function","loader","onFinish","apply","arguments","tagName","model","root","controller","modelName","addEventListener","e","error","stack","console","log","message","filename","lineno","colno","regex","getQuotes","validFunctionCall","strictVar","escapeHTML","uniqueDataParser","dataParser","allowedFunctionEval","avoidQuotes","str","func","temp","es","replace","full","push","length","i","isEmptyObject","obj","key","compareObject","obj1","obj2","hiddenProperty","property","value","Object","defineProperty","enumerable","configurable","deepProperty","path","capitalizeLetters","name","toUpperCase","slice","join","assign","target","varArgs","TypeError","to","index","nextSource","nextKey","prototype","hasOwnProperty","call","writable","Element","remove","CharacterData","DocumentType","forEach","item","parentNode","removeChild","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","querySelectorAll","NodeList","callback","thisArg","location","origin","protocol","hostname","port","values","res","setPrototypeOf","proto","__proto__","Reflect","construct","Parent","args","Class","a","instance","bind","_setPrototypeOf","dom","selector","context","parseElement","String","$","self","findOne","querySelector","parent","element","closest","parentElement","prevAll","isNext","result","findNodes","nextSibling","previousSibling","nextAll","on","event","once","tempCallback","ev","capture","sf$eventListener","off","events","split","ref","removeEventListener","splice","animateCSS","animationName","duration","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","style","webkitAnimationDuration","animationDuration","list","classList","add","setTimeout","emptyDOM","div","createElement","ul","tbody","tr","table","select","html","returnNode","tempDOM","indexOf","textContent","insertAdjacentHTML","escapeText","text","innerHTML","elements","documentElement","domReady","body","haveSymbol","getSelector","childIndexes","untilElement","names","id","test","unshift","array","substr","childNodes","loadedContent","totalContent","DOMWasLoaded","DOMReady","turnedOff","whenDOMReady","whenDOMLoaded","whenProgress","onProgress","f","css","rel","href","head","appendChild","js","type","async","src","warn","isQueued","domLoadEvent","queuePreprocess","domStateEvent","readyState","resourceWaitTimer","setInterval","waitResources","clearInterval","listener","init","router","component","scope","registered","available","bases","for","extend","pending","defineComponent","base","outerHTML","triggerEvent","componentInit","newID","from","setAttribute","sf$component","sf$componentFrom","new","$item","isCreated","retriggered","hasAttribute","newElement","cloneNode","newObj","Array","n","firstElementChild","destroy","DOMNodeRemoved","HTMLElement","customElements","HTMLElement_wrap","Wrapper","getPrototypeOf","create","connectedCallback","define","err","root_","run","bindingEnabled","processingElement","trimIndentation","indent","trim","RegExp","bracketMatch","chackValidFunctionCall","localEval","script","_model_","_modelScope","_content_","tempScript","preventExecution","check_","exec","_result_","_evaled_","escapeEscapedQuote","unescapeEscapedQuote","elseIfHandle","else_","scopes","elseIf","elseValue","currentElement","previousElementSibling","getAttribute","$virtual","DOMCursor","modelKeys","modelRef","keys","templateParser_regex","REF_DIRECT","REF_IF","REF_EXEC","templateExec","parse","atIndex","parsed","data","if","templateParser","template","original","addresses","changesReference","pendingInsert","current","address","nodeType","refA","direct","match","cRef","dynamicFlag","parse_index","startFlag","attributes","refB","isValueInput","attribute","removeAttribute","sf$elementReferences","tDOM","insertBefore","syntheticCache","sf$cache","cache","modelRef_array","syntheticTemplate","changes","modelReference","newData","checkRelatedChanges","parseIndex","found","haveChanges","ref_","sf$haveChilds","sf$childRoot","reverse","currentDOM","notExist","isEqualNode","replaceChild","mask","runEval","preParsedReference","scopeMask","itemMask","preParsed","lastParsedIndex","prepared","actual","temp_","matched","exist","charCodeAt","take","passVar","currentIndex","strDeclare","firstTime","JSON","stringify","check","VarPass_","VarPass","s1","obtained","val","findElse","pop","shift","condition","bindArray","propertyName","targetNode","editProperty","refreshTimer","parentChilds","children","isKeyed","contains","eventVar","processElement","options","other","count","vEndRange","preparedLength","spacer","lastElementChild","height","reset","clearTimeout","reinitScroll","overflow","vDOM","theParent","update","index_a","other_sibling","other_parent","oldChild","referenceNode","vCursor","floor","insertAdjacentElement","currentRemoved","startRemove","refreshVirtualSpacer","propertyProxy","subject","lastLength","reinitCursor","o","resetViewport","matchLeft","refresh","real","limit","callback_","var","virtual_scroll","handle","needle","elRef","getElement","process","content","parentNode_","elem","hardRefresh","softRefresh","virtualChilds","childElement","childElementCount","loopParser","method","items","extractPreprocess","sf$bindedKey","initBindingInformation","get","set","callInputListener","v2m","newValue1","newValue2","old","inputBoundRunning","inputTextBound","fromSFFramework","viewInputted","typeData","Number","newValue","sfModel","sfBounded","inputFilesBound","files","inputCheckBoxBound","checked","Boolean","inputSelectBound","multiple","selectedOptions","assignElementData","arrayValue","selected","checkbox","inputBoundRun","Event","dispatchEvent","triggerInputEvent","elementBoundChanges","oneWay","toLowerCase","modelToViewBinding","bindInput","modelScope","alreadyInitialized","queued","parsePreprocess","ceiling","after","nextElementSibling","before","undefined","afterModelBinding","removeModelBinding","modelFrom","components","everyRemovedNodes","nodes","MutationObserver","observe","everyRecords","record","removedNodes","records","childList","subtree","bindedKey","getOwnPropertyDescriptor","elementBind","input","objValue","getAssigner","m2v","out","newValue3","dcBracket","bindElement","onChanges","properties","copy","addressed","addressAttributes","currentNode","attrs","indexes","addressStart","commentFlag","flag","createComment","textNode","createTextNode","search","extract","sort","b","checkList","full_","match_","findModelProperty","asArray","enclosedHTMLParse","excludes","extracting","nodeName","enclosing","enclosed","nodeValue","modelElement","attr","API","url","success","complete","accessToken","req","dataType","contentType","onSuccess","xhr","status","onError","_method","access_token","ajax","post","delete","put","active","bindedList","parentEl","bindedListIndex","listenSFClick","script_","method_","preventDefault","globals","jsonpRequests","Request","requestOptions","globalsNoCallbacks","callbackName","defaults","toString","user","password","headers","xhrFields","statusCode","processData","timeout","fireCallback","globalCallbackValue","optionCallbackValue","_i","paramsPrefix","stringData","serializeQuery","abortTimeout_1","callbackName_1","Date","now","callbackSplit","requestUrl","addVars","filter","el","script_1","onerror","XMLHttpRequest","requestParameters","open","xhrTimeout","postData","ArrayBuffer","Blob","Document","FormData","boundary","setRequestHeader","headerName","crossDomain","$2","host","onload","responseData","parseError","responseText","responseType","response","onabort","abort","send","RequestShortcut","_a","params","prefix","encodeURIComponent","concat","json","getJSON","postJSON","setup","loading","enabled","pauseRenderOnTransition","currentPage","initialized","currentRouterURL","popstateListener","routingError","routingBack","goto","pathname","runLocalEvent","enable","load","localEvent","when","registerLocalEvent","which","onEvent","loaded","special","dynamicScript","lazyViewPoint","history","pushState","RouterLoading","_scarlets","DOMReference","foundAction","last","title","oldURL","newURL","scripts","getElementsByTagName","sfPage","sfp","routerLoaded","aborted","back","styleInitialized","scrollingByScript","refreshScrollBounding","cursor","bounding","Math","prepareCount","offsetTop","initial","dCursor","scrollHeight","scrollTo","scroller","virtual","reduce","scrollTop","insertCount","removeUserScrollFocus","getAbsoluteHeight","styles","getComputedStyle","margin","parseInt","offsetHeight","force","checkCursorPosition","additionalScroll","moveTo","getElementById","sheet","insertRule","cssRules","initStyles","reinitOnly","elementLength","obtainElements","_onElementResize","offElementResize","visibleLength","clientHeight","pendingFunction","ceilingHeight","floorHeight","fillViewport","updating","resetCeiling","previousCeiling","nextFloor","hitFloor","hitCeiling","_onElementResize_timer","scrollWidth","width","onElementResize","dynamicHeight","offsetTo","fromCeiling","scrollFocused","moveElementCursor","navigator","userAgent","staticHeight"],"mappings":"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","file":"scarletsframe.min.js","sourcesContent":["(function(global, factory){\r\n  // Dynamic script when using router to load template\r\n  // Feature is disabled by default\r\n  function routerEval(code){eval(code)}\r\n\r\n  if(typeof exports === 'object' && typeof module !== 'void 0') module.exports = factory(global, routerEval);\r\n  else global.sf = factory(global, routerEval);\r\n}(typeof window !== \"void 0\" ? window : this, (function(window, routerEval){'use strict';\r\nif(typeof document === void 0)\r\n\tdocument = window.document;\r\n// ===== Module Init =====\r\nvar internal = {};\r\n\r\nvar sf = function(stuff){\r\n\tif(stuff.constructor === Function)\r\n\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\r\n\t// If it's Node type\r\n\tif(stuff.tagName !== void 0)\r\n\t\treturn sf.model.root[sf.controller.modelName(stuff)];\r\n};\r\n\r\n// Error handler\r\nwindow.addEventListener('error', function(e) {\r\n\tvar errorStack = '';\r\n\tif(e.error && e.error.stack){\r\n\t\terrorStack += '\\n'+e.error.stack;\r\n\t}\r\n    console.log(e.message, '\\n', e.filename, ':', e.lineno, (e.colno ? ':' + e.colno : '')\r\n        , \r\n    );\r\n}, false);\r\n\r\nsf.internal = {};\r\nsf.regex = {\r\n\tgetQuotes:/(['\"])[\\s\\S]*?[^\\\\]\\1/g,\r\n\tvalidFunctionCall:/[a-zA-Z0-9 \\]\\$\\)]/,\r\n\tstrictVar:'(?=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )',\r\n\tescapeHTML:/(?!&#.*?;)[\\u00A0-\\u9999<>\\&]/gm,\r\n\r\n\tuniqueDataParser:/{{((@|#[\\w])[\\s\\S]*?)}}/g,\r\n\tdataParser:/{{([^@%][\\s\\S]*?)}}/g,\r\n};\r\n\r\nvar allowedFunctionEval = [':', 'for', 'if', 'while', '_content_.take', 'console.log'];\r\n\r\nfunction avoidQuotes(str, func){\r\n\tvar temp = [];\r\n\tvar es = '<%$@>';\r\n\tstr = str.replace(sf.regex.getQuotes, function(full){\r\n\t\ttemp.push(full);\r\n\t\treturn es+(temp.length-1)+es;\r\n\t});\r\n\tstr = func(str);\r\n\tfor (var i = 0; i < temp.length; i++) {\r\n\t\tstr = str.replace(es+i+es, temp[i]);\r\n\t}\r\n\treturn str;\r\n}\r\n\r\nfunction isEmptyObject(obj){\r\n\tfor(var key in obj){\r\n\t\treturn false;\r\n\t}\r\n\treturn true\r\n}\r\n\r\nfunction compareObject(obj1, obj2){\r\n\tif(!obj1 || !obj2)\r\n\t\treturn false;\r\n\r\n\tfor(var i in obj1){\r\n\t\tif(typeof obj1[i] !== 'object' && obj1[i] !== obj2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction hiddenProperty(obj, property, value){\r\n\tObject.defineProperty(obj, property, {\r\n\t\tenumerable: false,\r\n\t\tconfigurable: true,\r\n\t\tvalue: value\r\n\t});\r\n}\r\n\r\nfunction deepProperty(obj, path){\r\n  for(var i = 0; i < path.length; i++){\r\n    obj = obj[path[i]];\r\n    if(obj === void 0) return obj;\r\n  }\r\n  return obj;\r\n}\r\n\r\nfunction capitalizeLetters(name){\r\n\tfor (var i = 0; i < name.length; i++) {\r\n\t\tname[i] = name[i][0].toUpperCase() + name[i].slice(1);\r\n\t}\r\n\treturn name.join('');\r\n}","// ==== ES5 Polyfill ====\r\nif(typeof Object.assign != 'function'){\r\n  Object.defineProperty(Object, \"assign\", {\r\n    value: function assign(target, varArgs) {\r\n      'use strict';\r\n      if (target == null)\r\n        throw new TypeError('Cannot convert void 0 or null to object');\r\n      var to = Object(target);\r\n      for (var index = 1; index < arguments.length; index++) {\r\n        var nextSource = arguments[index];\r\n        if (nextSource != null) {\r\n          for (var nextKey in nextSource) {\r\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey))\r\n              to[nextKey] = nextSource[nextKey];\r\n          }\r\n        }\r\n      }\r\n      return to;\r\n    },\r\n    writable: true,\r\n    configurable: true\r\n  });\r\n}\r\n\r\nif(Element.prototype.remove === void 0 || CharacterData.prototype.remove === void 0 || DocumentType.prototype.remove === void 0){\r\n  (function (arr) {\r\n    arr.forEach(function (item) {\r\n      if (item.hasOwnProperty('remove')) {\r\n        return;\r\n      }\r\n      Object.defineProperty(item, 'remove', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n        value: function remove() {\r\n          if (this.parentNode !== null)\r\n            this.parentNode.removeChild(this);\r\n        }\r\n      });\r\n    });\r\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\r\n}\r\n\r\nif(!Element.prototype.matches){\r\n  Element.prototype.matches = (Element.prototype).matchesSelector ||\r\n    (Element.prototype).mozMatchesSelector || (Element.prototype).msMatchesSelector ||\r\n    (Element.prototype).oMatchesSelector || (Element.prototype).webkitMatchesSelector ||\r\n    function (s) {\r\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n      i = matches.length;\r\n      while (--i >= 0 && matches.item(i) !== this){}\r\n      return i > -1;\r\n    };\r\n}\r\n\r\nif(!NodeList.prototype.forEach){\r\n    NodeList.prototype.forEach = function (callback, thisArg) {\r\n        thisArg = thisArg || window;\r\n        for (var i = 0; i < this.length; i++) {\r\n            callback.call(thisArg, this[i], i, this);\r\n        }\r\n    };\r\n}\r\n\r\nif(!window.location.origin)\r\n  window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');\r\n\r\nif(!Object.values)\r\n  Object.values = function(obj){\r\n    var res = [];\r\n    for (var i in obj) {\r\n        if (obj.hasOwnProperty(i)) {\r\n            res.push(obj[i]);\r\n        }\r\n    }\r\n    return res;\r\n  }\r\n\r\nif(Object.setPrototypeOf === void 0)\r\n  Object.setPrototypeOf = function(obj, proto) {\r\n    obj.__proto__ = proto;\r\n    return obj; \r\n  }\r\n\r\nif(typeof Reflect === 'undefined'){\r\n  var Reflect = window.Reflect = {};\r\n  Reflect.construct = function(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; };\r\n}","sf.dom = function(selector, context){\r\n\tif(selector[0] === '<') return sf.dom.parseElement(selector);\r\n\tif(selector.constructor !== String) return selector;\r\n\r\n\tif(context) return context.querySelectorAll(selector);\r\n\treturn document.querySelectorAll(selector);\r\n}\r\n\r\nvar $ = sf.dom; // Shortcut\r\n\r\n;(function(){\r\n\tvar self = sf.dom;\r\n\r\n\tself.findOne = function(selector, context){\r\n\t\tif(context !== void 0) return context.querySelector(selector);\r\n\t\treturn document.querySelector(selector);\r\n\t}\r\n\r\n\tself.parent = function(element, selector){\r\n\t\tif(element.closest) return element.closest(selector);\r\n\r\n\t\tdo {\r\n\t\t\tif(element.matches(selector) === true)\r\n\t\t\t\treturn element;\r\n\r\n\t\t\telement = element.parentElement;\r\n\t\t} while (element !== null);\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tself.prevAll = function(element, selector, isNext){\r\n\t\tvar result = [];\r\n\t\tvar findNodes = selector === null || selector.constructor !== String ? true : false;\r\n\r\n\t\t// Skip current element\r\n\t\telement = isNext ? element.nextSibling : element.previousSibling;\r\n\t\twhile (element !== null) {\r\n\t\t\tif(findNodes === false && element.matches(selector) === true)\r\n\t\t\t\tresult.push(element);\r\n\t\t\telse{\r\n\t\t\t\tif(element === selector)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tresult.push(element);\r\n\t\t\t}\r\n\r\n\t\t\tif(isNext)\r\n\t\t\t\telement = element.nextSibling;\r\n\t\t\telse\r\n\t\t\t\telement = element.previousSibling;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.nextAll = function(element, selector){\r\n\t\treturn self.prevAll(element, selector, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen to an event\r\n\t * @param  Node \t\t\telement \tparent element\r\n\t * @param  string \t\t\tevent   \tevent name\r\n\t * @param  function|string  selector    callback function or selector\r\n\t * @param  function\t\t\tcallback    callback function\r\n\t * @param  boolean\t\t\tonce    \tcall once\r\n\t * @return null\r\n\t */\r\n\tself.on = function(element, event, selector, callback, once){\r\n\t\tif(typeof element === 'string'){\r\n\t\t\telement = document;\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = event;\r\n\t\t\tevent = element;\r\n\t\t}\r\n\r\n\t\tif(typeof selector === 'function'){\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = null;\r\n\t\t}\r\n\r\n\t\tif(selector){\r\n\t\t\tvar tempCallback = callback;\r\n\t\t\tcallback = function(ev){\r\n\t\t\t\tif(self.parent(ev.target, selector) !== null)\r\n\t\t\t\t\ttempCallback(ev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcallback.selector = selector;\r\n\t\tcallback.once = once;\r\n\t\telement.addEventListener(event, callback, {capture:true, once:once === true});\r\n\r\n\t\t// Save event listener\r\n\t\tif(element.sf$eventListener === void 0)\r\n\t\t\telement.sf$eventListener = {};\r\n\r\n\t\tif(element.sf$eventListener[event] === void 0)\r\n\t\t\telement.sf$eventListener[event] = [];\r\n\r\n\t\telement.sf$eventListener[event].push(callback);\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.once = function(element, event, selector, callback){\r\n\t\tself.on(element, event, selector, callback, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event listener\r\n\t * @param  Node \telement \tparent element\r\n\t * @param  string \tevent   \tevent name\r\n\t * @param  string  \tselector    selector\r\n\t * @return null\r\n\t */\r\n\tself.off = function(element, event, selector){\r\n\t\t// Remove all event\r\n\t\tif(event === void 0){\r\n\t\t\tif(element.sf$eventListener === void 0)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar events = element.sf$eventListener[event];\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar events = event.split(' ');\r\n\t\tif(events.length !== 1){\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove listener\r\n\t\tif(element.sf$eventListener === void 0)\r\n\t\t\treturn;\r\n\r\n\t\tvar ref = element.sf$eventListener;\r\n\t\tif(ref !== void 0 && ref[event] !== void 0){\r\n\t\t\tfor (var i = ref[event].length - 1; i >= 0; i--) {\r\n\t\t\t\tif(selector && ref[event][i].selector !== selector)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\telement.removeEventListener(event, ref[event].splice(i, 1), true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.animateCSS = function(element, animationName, callback, duration) {\r\n\t\tvar animationEnd = {\r\n\t\t\tanimation: 'animationend',\r\n\t\t\tOAnimation: 'oAnimationEnd',\r\n\t\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t\t};\r\n\r\n\t\tfor (var t in animationEnd){\r\n\t\t\tif(element.style[t] !== void 0){\r\n\t\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(duration){\r\n\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t}\r\n\r\n\t\tvar list = ('animated ' + animationName).split(' ');\r\n\t\telement.classList.add.apply(element.classList, list);\r\n\t\t$.once(element, animationEnd, function(){\r\n\t\t\telement.classList.remove.apply(element.classList, list);\r\n\t\t\t\r\n\t\t\tif(duration) setTimeout(function(){\r\n\t\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t\t}, 1);\r\n\r\n\t\t\tif(typeof callback === 'function') callback();\r\n\t\t});\r\n\t}\r\n\r\n\tvar emptyDOM = {\r\n\t\tdiv:document.createElement('div'),\r\n\t\tul:document.createElement('ul'),\r\n\t\ttbody:document.createElement('tbody'),\r\n\t\ttr:document.createElement('tr'),\r\n\t\ttable:document.createElement('table'),\r\n\t\tselect:document.createElement('select'),\r\n\t};\r\n\tself.parseElement = function(html, returnNode){\r\n\t\tvar result = [];\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\r\n        if(html.indexOf('<li') === 0) tempDOM = emptyDOM.ul;\r\n        if(html.indexOf('<tr') === 0) tempDOM = emptyDOM.tbody;\r\n        if(html.indexOf('<td') === 0 || html.indexOf('<th') === 0) tempDOM = emptyDOM.tr;\r\n        if(html.indexOf('<tbody') === 0) tempDOM = emptyDOM.table;\r\n        if(html.indexOf('<option') === 0) tempDOM = emptyDOM.select;\r\n\r\n\t\ttempDOM.textContent = '';\r\n\t\ttempDOM.insertAdjacentHTML('afterBegin', html);\r\n\r\n\t\tvar ref = tempDOM[returnNode ? 'childNodes' : 'children'];\r\n\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\tresult.push(ref.item(i));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tself.escapeText = function(text){\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\t\ttempDOM.textContent = text;\r\n\t\treturn tempDOM.innerHTML;\r\n\t}\r\n\r\n\tself.remove = function(elements){\r\n\t\tif(elements.remove !== void 0)\r\n\t\t\treturn elements.remove();\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\telements[i].remove();\r\n\t\t}\r\n\t}\r\n\r\n\tvar documentElement = null;\r\n\tsetTimeout(function(){\r\n\t\tsf.loader.domReady(function(){\r\n\t\t\tdocumentElement = document.body.parentElement;\r\n\t\t});\r\n\t}, 1);\r\n\r\n\tvar haveSymbol = /[~`!@#$%^&*()+={}|[\\]\\\\:\";'<>?,./ ]/;\r\n\tself.getSelector = function(element, childIndexes, untilElement){\r\n\t\tvar names = [];\r\n\t\tif(untilElement === void 0) untilElement = documentElement;\r\n\r\n\t\tvar previousSibling = childIndexes ? 'previousSibling' : 'previousElementSibling';\r\n\r\n\t\twhile(element.parentNode !== null){\r\n\t\t\tif(element.id && !haveSymbol.test(element.id)){\r\n\t\t\t\tnames.unshift('#'+element.id);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(element === untilElement){\r\n\t\t\t\t\tif(childIndexes === void 0)\r\n\t\t\t\t\t\tnames.unshift(element.tagName);\r\n\t\t\t\t\telse names.unshift(0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar e = element;\r\n\t\t\t\t\tvar i = childIndexes ? 0 : 1;\r\n\r\n\t\t\t\t\twhile(e[previousSibling]){\r\n\t\t\t\t\t\te = e[previousSibling];\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(childIndexes)\r\n\t\t\t\t\t\tnames.unshift(i);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tnames.unshift(\":nth-child(\"+i+\")\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t\tif(element === null)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndexes)\r\n\t\t\treturn names;\r\n\t\treturn names.join(\" > \");\r\n\t}\r\n\r\n\tself.childIndexes = function(array, context){\r\n\t\tvar element = context || documentElement;\r\n\t\tvar i = 1;\r\n\r\n\t\tif(array[0].constructor === String && element.id !== array[0].substr(1))\r\n\t\t\telement = element.querySelector(array[0]);\r\n\r\n\t\telse if(array.length === 1)\r\n\t\t\treturn element;\r\n\r\n\t\tfor (i = i; i < array.length; i++) {\r\n\t\t\telement = element.childNodes.item(array[i]);\r\n\r\n\t\t\tif(element === null)\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n})();","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 0;\r\n\tself.DOMWasLoaded = false;\r\n\tself.DOMReady = false;\r\n\tself.turnedOff = true;\r\n\r\n\tvar whenDOMReady = [];\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\tself.off = function(){\r\n\t\tself.turnedOff = true;\r\n\t}\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.domReady = function(func){\r\n\t\tif(self.DOMReady) return func();\r\n\t\tif(whenDOMReady.indexOf(func) !== -1) return;\r\n\t\twhenDOMReady.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('link');\r\n\t        s.rel = 'stylesheet';\r\n\t        s.href = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tself.js = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('script');\r\n\t        s.type = \"text/javascript\";\r\n\t        s.async = true;\r\n\t        s.src = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(function(){\r\n\t\tif(self.totalContent === 0 && !self.turnedOff){\r\n\t\t\tself.loadedContent = self.totalContent = 1;\r\n\t\t\tconsole.warn(\"If you don't use content loader feature, please turn it off with `sf.loader.off()`\");\r\n\t\t}\r\n\t}, 10000);\r\n\r\n\r\n\tvar isQueued = false;\r\n\tvar lastState = '';\r\n\tdocument.addEventListener(\"load\", function domLoadEvent(event){\r\n\t\t// Add processing class to queued element\r\n\t\tif(isQueued === false && document.body){\r\n\t\t\tdocument.removeEventListener('load', domLoadEvent, true);\r\n\r\n\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tfor (var i = 0; i < isQueued.length; i++) {\r\n\t\t\t\tisQueued[i].classList.add('sf-dom-queued');\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued.length === 0) isQueued = false;\r\n\r\n\t\t\tif(lastState === 'loading'){\r\n\t\t\t\tvar repeatedList = $('[sf-repeat-this]', document.body);\r\n\t\t\t\tfor (var i = 0; i < repeatedList.length; i++) {\r\n\t\t\t\t\trepeatedList[i].classList.add('sf-dom-queued');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Find images\r\n\t\t\t\tvar temp = $('img:not(onload)[src]');\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tsf.loader.totalContent++;\r\n\t\t\t\t\ttemp[i].addEventListener('load', sf.loader.f, {once:true});\r\n\t\t\t\t\ttemp[i].addEventListener('error', sf.loader.f, {once:true});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, true);\r\n\r\n\tdocument.addEventListener('readystatechange', function domStateEvent(){\r\n\t\tif(document.readyState === 'interactive' || document.readyState === 'complete'){\r\n\t\t\tif(self.DOMReady === false){\r\n\t\t\t\tself.DOMReady = true;\r\n\t\t\t\tfor (var i = 0; i < whenDOMReady.length; i++) {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\twhenDOMReady[i]();\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued === false)\r\n\t\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tresourceWaitTimer = setInterval(waitResources, 100);\r\n\t\t\tdocument.removeEventListener('readystatechange', domStateEvent, true);\r\n\t\t}\r\n\t}, true);\r\n\r\n\tvar resourceWaitTimer = -1;\r\n\tfunction waitResources(){\r\n\t\tif(self.turnedOff === false && self.loadedContent < self.totalContent)\r\n\t\t\treturn;\r\n\r\n\t\tclearInterval(resourceWaitTimer);\r\n\r\n\t\tvar listener = sf.dom('script, link, img');\r\n\t\tfor (var i = 0; i < listener.length; i++) {\r\n\t\t\tlistener[i].removeEventListener('error', sf.loader.f);\r\n\t\t\tlistener[i].removeEventListener('load', sf.loader.f);\r\n\t\t}\r\n\r\n\t\tself.DOMWasLoaded = true;\r\n\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\ttry{\r\n\t\t\t\twhenDOMLoaded[i]();\r\n\t\t\t} catch(e){\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\twhenProgress.splice(0);\r\n\t\twhenDOMReady.splice(0);\r\n\t\twhenDOMLoaded.splice(0);\r\n\t\twhenDOMReady = whenDOMLoaded = null;\r\n\r\n\t\t// Last init\r\n\t\tsf.controller.init();\r\n\t\tsf.model.init(document.body, isQueued);\r\n\t\tsf.router.init();\r\n\r\n\t\tisQueued = null;\r\n\t}\r\n}\r\nsf.prototype.constructor = sf.loader.onFinish;","sf.component = new function(){\r\n\tvar self = this;\r\n\tvar scope = internal.component = {};\r\n\tself.registered = {};\r\n\tself.available = {};\r\n\r\n\tvar bases = {};\r\n\tvar events = {};\r\n\r\n\tself.for = function(name, func, extend){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(self.registered[name] === void 0)\r\n\t\t\tself.registered[name] = [func, sf.controller.pending[name], 0, false, extend];\r\n\t\tself.registered[name][0] = func;\r\n\t\tdelete sf.controller.pending[name];\r\n\r\n\t\tdefineComponent(name);\r\n\t}\r\n\r\n\tself.event = function(name, func){\r\n\t\tevents[name] = func;\r\n\t}\r\n\r\n\tself.base = function(name, func){\r\n\t\tbases[name] = func;\r\n\t}\r\n\r\n\tself.html = function(name, outerHTML){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.html(name, outerHTML);\r\n\t\t\t});\r\n\r\n\t\tif(self.registered[name] === void 0)\r\n\t\t\tself.registered[name] = [false, false, 0, false];\r\n\r\n\t\tvar temp = $.parseElement(outerHTML);\r\n\t\tif(temp.length === 1){\r\n\t\t\tself.registered[name][3] = temp[0];\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tempDOM = document.createElement('div');\r\n\t\ttempDOM.tempDOM = true;\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\ttempDOM.appendChild(temp[i]);\r\n\t\t}\r\n\t\tself.registered[name][3] = tempDOM;\r\n\t}\r\n\r\n\tscope.triggerEvent = function(name, event, obj){\r\n\t\tif(events[name] === void 0 || events[name][event] === void 0)\r\n\t\t\treturn;\r\n\r\n\t\tevents[name][event](obj, event);\r\n\t}\r\n\r\n\tvar tempDOM = document.createElement('div');\r\n\tself.new = function(name, element, $item, isCreated, retriggered){\r\n\t\tif(isCreated === true){\r\n\t\t\tif(sf.loader.DOMWasLoaded === false)\r\n\t\t\t\treturn sf(function(){\r\n\t\t\t\t\tself.new(name, element, $item, isCreated, false);\r\n\t\t\t\t});\r\n\t\t\tif(self.registered[name][3] === false)\r\n\t\t\t\treturn setTimeout(function(){\r\n\t\t\t\t\tself.new(name, element, $item, isCreated, true);\r\n\t\t\t\t}, 0);\r\n\r\n\t\t\tif(element.hasAttribute('sf-component-ignore') === true)\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(element === void 0)\r\n\t\t\treturn new window['$'+capitalizeLetters(name.split('-'))];\r\n\r\n\t\tvar newElement = element === void 0;\r\n\t\tif(element === void 0){\r\n\t\t\tif(self.registered[name][3] === false){\r\n\t\t\t\tconsole.error(\"HTML content for '\"+name+\"' was not defined\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement = self.registered[name][3].cloneNode(true);\r\n\t\t}\r\n\r\n\t\tvar newID = name+'@'+(self.registered[name][2]++);\r\n\r\n\t\tif(self.available[name] === void 0)\r\n\t\t\tself.available[name] = [];\r\n\r\n\t\tself.available[name].push(newID);\r\n\r\n\t\tvar newObj = sf.model.root[newID] = {};\r\n\t\tself.registered[name][0](newObj, sf.model, $item, element);\r\n\r\n\t\tvar extend = self.registered[name][4];\r\n\t\tif(extend !== void 0){\r\n\t\t\tif(extend.constructor === Array){\r\n\t\t\t\tfor (var i = 0; i < extend.length; i++) {\r\n\t\t\t\t\tif(bases[extend[i]] === void 0)\r\n\t\t\t\t\t\treturn console.error(\"'\"+extend[i]+\"' base is not found\");\r\n\t\t\t\t\tbases[extend[i]](newObj, sf.model, $item, element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(bases[extend] === void 0)\r\n\t\t\t\t\treturn console.error(\"'\"+extend+\"' base is not found\");\r\n\t\t\t\tbases[extend](newObj, sf.model, $item, element);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(self.registered[name][1])\r\n\t\t\tself.registered[name][1](newObj, sf.model, $item, element);\r\n\r\n\t\tscope.triggerEvent(name, 'created', newObj);\r\n\r\n\t\tif(newElement !== true && isCreated !== true){\r\n\t\t\tcomponentInit(element, newID, name);\r\n\t\t\telement.model = sf.model.root[newID];\r\n\t\t\treturn newID;\r\n\t\t}\r\n\r\n\t\tvar temp = self.registered[name][3];\r\n\t\tif(temp.tempDOM === true){\r\n\t\t\ttemp = temp.cloneNode(true).childNodes;\r\n\t\t\tfor (var i = 0, n = temp.length; i < n; i++) {\r\n\t\t\t\telement.appendChild(temp[0]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse element.appendChild(temp.cloneNode(true));\r\n\r\n\t\tif(element.parentNode === null){\r\n\t\t\t// Wrap to temporary vDOM\r\n\t\t\ttempDOM.appendChild(element);\r\n\t\t\tcomponentInit(element, newID, name);\r\n\t\t\tsf.model.init(element);\r\n\t\t\telement = tempDOM.firstElementChild;\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t\telse if(isCreated === true){\r\n\t\t\tcomponentInit(element, newID, name);\r\n\t\t\tsf.model.init(element);\r\n\t\t}\r\n\r\n\t\telement.model = sf.model.root[newID];\r\n\t\telement.destroy = function(){\r\n\t\t\tif(this.parentElement === null)\r\n\t\t\t\tinternal.model.DOMNodeRemoved(this);\r\n\t\t\telse this.remove();\r\n\t\t}\r\n\t\treturn element;\r\n\t}\r\n\r\n\tfunction componentInit(element, newID, from){\r\n\t\telement.setAttribute('sf-controller', '');\r\n\t\telement.sf$component = newID;\r\n\t\telement.sf$componentFrom = from;\r\n\t}\r\n\r\n\tvar HTMLElement = window.HTMLElement;\r\n\tvar customElements = window.customElements;\r\n\r\n\tvar HTMLElement_wrap = (function(Class){\r\n\t\tfunction Wrapper(){\r\n\t\t\treturn Reflect.construct(Class, arguments, Object.getPrototypeOf(this).constructor);\r\n\t\t}\r\n\t\tWrapper.prototype = Object.create(Class.prototype, {constructor:{value: Wrapper, enumerable: false, writable: true, configurable: true}}); \r\n\t\treturn Object.setPrototypeOf(Wrapper, Class);\r\n\t})(HTMLElement);\r\n\r\n\t// name = 'tag-name'\r\n\tfunction defineComponent(name){\r\n\t\tname = name.replace(/[^\\w-]+/g, '');\r\n\t\tvar tagName = name;\r\n\t\tname = name.split('-');\r\n\t\tif(name.length === 1)\r\n\t\t\treturn console.error(\"Please use '-' when defining component tags\");\r\n\r\n\t\tname = capitalizeLetters(name);\r\n\t\tvar func = eval(\"function \"+name+\"($item){var he = HTMLElement_wrap.call(this);self.new(tagName, he, $item, true, false);return he}\"+name);\r\n\t\tfunc.prototype = Object.create(HTMLElement.prototype);\r\n\t\tfunc.prototype.constructor = func;\r\n\t\tfunc.__proto__ = HTMLElement;\r\n\r\n\t\tfunc.prototype.connectedCallback = function(){\r\n\t\t\tscope.triggerEvent(name, 'connected', this);\r\n\t\t};\r\n\r\n\t\ttry{\r\n\t\t  customElements.define(tagName, func);\r\n\t\t}catch(err){console.error(err)}\r\n\r\n\t\twindow['$'+name] = func;\r\n\t}\r\n};","// Data save and HTML content binding\r\nsf.model = function(scope){\r\n\t// If it's component tag\r\n\tif(sf.component.registered[scope] !== void 0)\r\n\t\treturn root_(scope);\r\n\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\tif(sf.controller.pending[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n};\r\n\r\n(function(){\r\n\tvar self = sf.model;\r\n\tvar scope = internal.model = {};\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\r\n\tvar processingElement = null;\r\n\r\n\t// For debugging, normalize indentation\r\n\tfunction trimIndentation(text){\r\n\t\tvar indent = text.split(\"\\n\", 3);\r\n\t\tif(indent[0][0] !== ' ' || indent[0][0] !== \"\\t\")\r\n\t\t\tindent = indent[1];\r\n\t\telse indent = indent[0];\r\n\r\n\t\tif(indent === void 0) return text;\r\n\t\tindent = indent.length - indent.trim().length;\r\n\t\tif(indent === 0) return text;\r\n\t\treturn text.replace(RegExp('^([\\\\t ]{'+indent+'})', 'gm'), '');\r\n\t}\r\n\r\n\t// Secured evaluation\r\n\tvar bracketMatch = RegExp('([\\\\w.]*?[\\\\S\\\\s])\\\\('+sf.regex.avoidQuotes, 'g');\r\n\tvar chackValidFunctionCall = sf.regex.validFunctionCall;\r\n\tvar localEval = function(script, _model_, _modelScope, _content_){\r\n\t\t\"use strict\";\r\n\r\n\t\t// ==== Security check ====\r\n\t\tvar tempScript = script;\r\n\r\n\t\t// Remove all inner quotes\r\n\t\ttempScript = tempScript.replace(sf.regex.getQuotes, '\"Quotes\"');\r\n\r\n\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\tvar preventExecution = false;\r\n\t\tvar check_ = null;\r\n\t\twhile((check_ = bracketMatch.exec(tempScript)) !== null){\r\n\t\t\tcheck_[1] = check_[1].trim();\r\n\r\n\t\t\tif(allowedFunctionEval.indexOf(check_[1]) === -1 &&\r\n\t\t\t\tcheck_[1].split('.')[0] !== '_modelScope' &&\r\n\t\t\t\tchackValidFunctionCall.test(check_[1][check_[1].length-1])\r\n\t\t\t){\r\n\t\t\t\tpreventExecution = check_[1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(preventExecution){\r\n\t\t\tconsole.error(\"Trying to executing unrecognized function (\"+preventExecution+\")\");\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#TemplateError';\r\n\t\t}\r\n\t\t// ==== Security check ended ====\r\n\t\r\n\t\tvar _result_ = '';\r\n\t\ttry{\r\n\t\t\tif(/@return /.test(script) === true){\r\n\t\t\t\tvar _evaled_ = eval('(function(){'+script.split('@return ').join('return ')+'})()');\r\n\t\t\t\treturn _result_ + _evaled_;\r\n\t\t\t}\r\n\t\t\telse var _evaled_ = eval(script);\r\n\t\t} catch(e){\r\n\t\t\tconsole.error(e);\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#TemplateError';\r\n\t\t}\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\t// Find an index for the element on the list\r\n\tself.index = function(element){\r\n\t\tvar i = -1;\r\n\t\tvar tagName = element.tagName;\r\n\t\tvar currentElement = element;\r\n\r\n\t\twhile(element !== null) {\r\n\t\t\tif(element.tagName === tagName)\r\n\t\t\t\ti++;\r\n\r\n\t\t\telement = element.previousElementSibling;\r\n\t\t}\r\n\r\n\t\tvar list = currentElement.getAttribute('sf-bind-list');\r\n\t\tif(!list) return i;\r\n\r\n\t\tvar ref = self.root[sf.controller.modelName(currentElement)][list];\r\n\t\tif(!ref.$virtual) return i;\r\n\r\n\t\treturn i + ref.$virtual.DOMCursor - 1;\r\n\t}\r\n\r\n\t// Declare model for the name with a function\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\t\t\r\n\t\tfunc(self(name), self);\r\n\t}\r\n\r\n\t// Get property of the model\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys;\r\n\t}\r\n\r\n\t// Escape the escaped quote\r\n\tfunction escapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*');\r\n\t}\r\n\r\n\tfunction unescapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\");\r\n\t}\r\n\r\n\tfunction elseIfHandle(else_, scopes){\r\n\t\tvar elseIf = else_.elseIf;\r\n\r\n\t\t// Else if\r\n\t\tfor (var i = 0; i < elseIf.length; i++) {\r\n\t\t\t// Check the condition\r\n\t\t\tscopes[0] = elseIf[i][0];\r\n\t\t\tif(!localEval.apply(self.root, scopes))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Get the value\r\n\t\t\tscopes[0] = elseIf[i][1];\r\n\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t}\r\n\r\n\t\t// Else\r\n\t\tif(else_.elseValue === null)\r\n\t\t\treturn '';\r\n\r\n\t\tscopes[0] = else_.elseValue;\r\n\t\treturn localEval.apply(self.root, scopes);\r\n\t}\r\n\r\n\t// ==== Template parser ====\r\n\tvar templateParser_regex = /{{%=([0-9]+)/gm;\r\n\tvar REF_DIRECT = 0, REF_IF = 1, REF_EXEC = 2;\r\n\tvar templateExec = function(parse, item, atIndex){\r\n\t\tvar parsed = {};\r\n\r\n\t\t// Get or evaluate static or dynamic data\r\n\t\tfor (var i = 0; i < parse.length; i++) {\r\n\t\t\tif(atIndex !== void 0 && atIndex.indexOf(i) === -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar ref = parse[i];\r\n\t\t\tref.data[1] = item;\r\n\r\n\t\t\t// Direct evaluation type\r\n\t\t\tif(ref.type === REF_DIRECT || ref.type === REF_EXEC)\r\n\t\t\t\tparsed[i] = {type:ref.type, data:localEval.apply(self.root, ref.data)};\r\n\r\n\t\t\t// Conditional type\r\n\t\t\telse if(ref.type === REF_IF){\r\n\t\t\t\tvar scopes = ref.data;\r\n\t\t\t\tparsed[i] = {type:ref.type, data:''};\r\n\t\t\t\tscopes[0] = ref.if[0];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tparsed[i].data = elseIfHandle(ref, scopes);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscopes[0] = ref.if[1];\r\n\t\t\t\tparsed[i].data = localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n\r\n\tvar templateParser = function(template, item, original){\r\n\t\tif(template.component !== void 0){\r\n\t\t\tvar html = new template.component(item);\r\n\t\t\thtml.setAttribute('sf-bind-list', template.list);\r\n\t\t\treturn html;\r\n\t\t}\r\n\r\n\t\tvar html = original === true ? template.html : template.html.cloneNode(true);\r\n\t\tvar addresses = template.addresses;\r\n\t\tvar parsed = templateExec(template.parse, item);\r\n\r\n\t\t// Save model item reference to node\r\n\t\thtml.model = item;\r\n\r\n\t\tvar changesReference = [];\r\n\t\tvar pendingInsert = [];\r\n\r\n\t\t// Find element where the data belongs to\r\n\t\tfor (var i = 0; i < addresses.length; i++) {\r\n\t\t\tvar ref = addresses[i];\r\n\t\t\tvar current = $.childIndexes(ref.address, html);\r\n\r\n\t\t\t// Modify element attributes\r\n\t\t\tif(ref.nodeType === 1){\r\n\t\t\t\tvar refA = ref.attributes;\r\n\t\t\t\tfor(var a = 0; a < refA.length; a++){\r\n\t\t\t\t\tvar refB = refA[a];\r\n\r\n\t\t\t\t\tvar isValueInput = (refB.name === 'value' && (current.tagName === 'TEXTAREA' ||\r\n\t\t\t\t\t\t(current.tagName === 'INPUT' && /checkbox|radio|hidden/.test(current.type) === false)\r\n\t\t\t\t\t));\r\n\r\n\t\t\t\t\tchangesReference.push({\r\n\t\t\t\t\t\tattribute:isValueInput === true ? current : current.attributes[refB.name],\r\n\t\t\t\t\t\tref:refB\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(refB.direct !== void 0){\r\n\t\t\t\t\t\tif(refB.name === 'value' && isValueInput === true){\r\n\t\t\t\t\t\t\tcurrent.value = parsed[refB.direct].data;\r\n\t\t\t\t\t\t\tcurrent.removeAttribute('value');\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcurrent.setAttribute(refB.name, parsed[refB.direct].data);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Below is used for multiple data\r\n\t\t\t\t\tif(refB.name === 'value' && isValueInput === true){\r\n\t\t\t\t\t\tvar temp = current.value;\r\n\t\t\t\t\t\tcurrent.removeAttribute('value');\r\n\t\t\t\t\t\tcurrent.value = temp;\r\n\t\t\t\t\t\trefB = current;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse refB = current.attributes[refB.name];\r\n\r\n\t\t\t\t\trefB.value = refB.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Replace text node\r\n\t\t\tif(ref.nodeType === 3){\r\n\t\t\t\tvar refA = current;\r\n\r\n\t\t\t\tchangesReference.push({\r\n\t\t\t\t\ttextContent:refA,\r\n\t\t\t\t\tref:ref\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(ref.direct !== void 0){\r\n\t\t\t\t\trefA.textContent = parsed[ref.direct].data;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Below is used for multiple/dynamic data\r\n\t\t\t\trefA.textContent = refA.textContent.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Replace dynamic node\r\n\t\t\tif(ref.nodeType === -1){\r\n\t\t\t\tvar cRef = {\r\n\t\t\t\t\tdynamicFlag:current,\r\n\t\t\t\t\tdirect:ref.parse_index,\r\n\t\t\t\t\tparentNode:current.parentNode,\r\n\t\t\t\t\tstartFlag:ref.startFlag && $.childIndexes(ref.startFlag, html)\r\n\t\t\t\t};\r\n\t\t\t\tchangesReference.push(cRef);\r\n\r\n\t\t\t\t// Pending element insert to take other element reference\r\n\t\t\t\tpendingInsert.push(cRef);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Save reference to element\r\n\t\thtml.sf$elementReferences = changesReference;\r\n\t\t// html.sf$modelParsed = parsed;\r\n\r\n\t\t// Run the pending element\r\n\t\tfor (var i = 0; i < pendingInsert.length; i++) {\r\n\t\t\tvar ref = pendingInsert[i];\r\n\t\t\tvar tDOM = $.parseElement(parsed[ref.direct].data, true);\r\n\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\tref.parentNode.insertBefore(tDOM[a], ref.dynamicFlag);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t}\r\n\r\n\tfunction syntheticCache(element, template, item){\r\n\t\tif(element.sf$cache === void 0)\r\n\t\t\telement.sf$cache = {};\r\n\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\tvar ref = modelRef_array[i];\r\n\t\t\tcache[ref[0]] = deepProperty(item, ref[1]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction syntheticTemplate(element, template, property, item){\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tif(property !== void 0){\r\n\t\t\tvar changes = template.modelReference[property];\r\n\t\t\tif(changes === void 0 || changes.length === 0){\r\n\t\t\t\tconsole.error(\"Failed to run syntheticTemplate because property '\"+property+\"' is not observed\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cache)\r\n\t\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\t\tif(ref[0] !== property) continue;\r\n\r\n\t\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t\t// Check if data was different\r\n\t\t\t\t\tif(cache[ref[0]] !== newData)\r\n\t\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar changes = [];\r\n\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\tif(cache === void 0){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t// Check if data was different\r\n\t\t\t\tif(cache[ref[0]] !== newData){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(changes.length === 0) return false;\r\n\t\t}\r\n\r\n\t\tvar parsed = templateExec(template.parse, item, changes);\r\n\t\tfunction checkRelatedChanges(parseIndex){\r\n\t\t\tvar found = false;\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(changes.indexOf(parseIndex[i]) !== -1){\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(found === false)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t// Prepare all required data\r\n\t\t\tchanges = [];\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(parsed[parseIndex[i]] === void 0){\r\n\t\t\t\t\tchanges.push(parseIndex[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tObject.assign(parsed, templateExec(template.parse, item, changes));\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tvar changesReference = element.sf$elementReferences;\r\n\t\tvar haveChanges = false;\r\n\t\tfor (var i = 0; i < changesReference.length; i++) {\r\n\t\t\tvar cRef = changesReference[i];\r\n\r\n\t\t\tif(cRef.dynamicFlag !== void 0){ // Dynamic data\r\n\t\t\t\tif(parsed[cRef.direct] !== void 0){\r\n\t\t\t\t\tvar tDOM = $.parseElement(parsed[cRef.direct].data, true).reverse();\r\n\t\t\t\t\tvar currentDOM = $.prevAll(cRef.dynamicFlag, cRef.startFlag);\r\n\t\t\t\t\tvar notExist = false;\r\n\r\n\t\t\t\t\t// Replace if exist, skip if similar\r\n\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\t\t\tif(currentDOM[a] === void 0){\r\n\t\t\t\t\t\t\tnotExist = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(currentDOM[a].isEqualNode(tDOM[a]) === false)\r\n\t\t\t\t\t\t\tcRef.parentNode.replaceChild(tDOM[a], currentDOM[a]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Add if not exist\r\n\t\t\t\t\tif(notExist){\r\n\t\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++)\r\n\t\t\t\t\t\t\tcRef.parentNode.insertBefore(tDOM[a], cRef.dynamicFlag);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove if over index\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tfor (var a = tDOM.length; a < currentDOM.length; a++) {\r\n\t\t\t\t\t\t\tcurrentDOM[a].remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(cRef.textContent !== void 0){ // Text only\r\n\t\t\t\tif(cRef.ref.parse_index !== void 0){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.textContent.textContent === temp) continue;\r\n\t\t\t\t\t\tcRef.textContent.textContent = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.textContent.textContent === value) continue;\r\n\r\n\t\t\t\t\tvar ref_ = cRef.textContent;\r\n\t\t\t\t\t// Remove old element if exist\r\n\t\t\t\t\tif(ref_.sf$haveChilds === true){\r\n\t\t\t\t\t\twhile(ref_.previousSibling && ref_.previousSibling.sf$childRoot === ref_){\r\n\t\t\t\t\t\t\tref_.previousSibling.remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tref_.textContent = value;\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(cRef.attribute !== void 0){ // Attributes\r\n\t\t\t\tif(cRef.ref.parse_index !== void 0){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.attribute.value === temp) continue;\r\n\t\t\t\t\t\tcRef.attribute.value = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.attribute.value === value) continue;\r\n\t\t\t\t\tcRef.attribute.value = value;\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn haveChanges;\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval, preParsedReference){\r\n\t\tvar _modelScope = self.root[scope];\r\n\t\tif(!runEval) runEval = '';\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope).join('|')+')\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\tvar preParsed = [];\r\n\t\t\tvar lastParsedIndex = preParsedReference.length;\r\n\t\t}\r\n\r\n\t\tvar prepared = html.replace(sf.regex.dataParser, function(actual, temp){\r\n\t\t\ttemp = avoidQuotes(temp, function(temp_){\r\n\t\t\t\t// Unescape HTML\r\n\t\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t\t// Mask item variable\r\n\t\t\t\tif(mask)\r\n\t\t\t\t\ttemp_ = temp_.replace(itemMask, function(matched){\r\n\t\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// Mask model for variable\r\n\t\t\t\treturn temp_.replace(scopeMask, function(full, matched){\r\n\t\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t\t});\r\n\t\t\t}).split('_model_._modelScope.').join('_model_.');\r\n\r\n\t\t\t// Evaluate\r\n\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\ttemp = temp.trim();\r\n\r\n\t\t\t\t// Simplicity similar\r\n\t\t\t\tvar exist = preParsed.indexOf(temp);\r\n\r\n\t\t\t\tif(exist === -1){\r\n\t\t\t\t\tpreParsed.push(temp);\r\n\t\t\t\t\tpreParsedReference.push({type:REF_DIRECT, data:[temp, _model_, _modelScope]});\r\n\t\t\t\t\treturn '{{%=' + (preParsed.length + lastParsedIndex - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn '{{%=' + (exist + lastParsedIndex);\r\n\t\t\t}\r\n\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(sf.regex.escapeHTML, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\tpreParsed = _modelScope = _model_ = mask = scope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t}\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\t// Dynamic data parser\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope, runEval){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(passVar === null)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\t// Use strict mode and prepare for new variables\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\t// Declare new variable\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove var because no variable are being passed\r\n\t\t\t\tif(firstTime === true)\r\n\t\t\t\t\tstrDeclare = strDeclare.replace('var ', '');\r\n\r\n\t\t\t\t// Escape function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('&#40;').split(')').join('&#41;');\r\n\r\n\t\t\t\t// Pass to static data parser for another HTML data\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Build script preparation\r\n\t\thtml = html.replace(/{\\[([\\s\\S]*?)\\]}/g, function(full, matched){\r\n\t\t\tif(/{{.*?}}/.test(matched) === false)\r\n\t\t\t\treturn \"_result_ += '\"+matched.split(\"'\").join(\"\\\\'\")+\"'\";\r\n\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope).join('|')+')\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.\\\\b', 'g');\r\n\r\n\t\tif(runEval === '#noEval')\r\n\t\t\tvar preParsedReference = [];\r\n\r\n\t\tvar prepared = html.replace(sf.regex.uniqueDataParser, function(actual, temp){\r\n\t\t\ttemp = avoidQuotes(temp, function(temp_){\r\n\t\t\t\t// Unescape HTML\r\n\t\t\t\ttemp_ = temp_.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t\t// Mask item variable\r\n\t\t\t\tif(mask)\r\n\t\t\t\t\ttemp_ = temp_.replace(itemMask, function(matched){\r\n\t\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// Mask model for variable\r\n\t\t\t\treturn temp_.replace(scopeMask, function(full, matched){\r\n\t\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t\t});\r\n\t\t\t}).split('_model_._modelScope.').join('_model_.');\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass_ = /(var|let)([\\w,\\s]+)(?=\\s(?==|in|of))/g;\r\n\t\t\tvar VarPass = [];\r\n\t\t\tvar s1 = null;\r\n\t\t\twhile((s1 = VarPass_.exec(temp)) !== null){\r\n\t\t\t\tVarPass.push(s1[2]);\r\n\t\t\t}\r\n\r\n\t\t\tif(_model_ === null && runEval === '#noEval')\r\n\t\t\t\tVarPass.push('_model_');\r\n\r\n\t\t\tif(VarPass.length !== 0){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/([\\n\\t\\r]|  )+/g, '').split(',').forEach(function(val){\r\n\t\t\t\t\t\tobtained.push(val);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':(typeof '+VarPass[i]+'!==\"void 0\"?'+VarPass[i]+':void 0)';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(VarPass.length === 0)\r\n\t\t\t\t\tVarPass = 'null';\r\n\t\t\t\telse VarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\t\t\telse temp = temp.split('&VarPass&').join('null');\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\r\n\t\t\t\t// {if, elseIf:([if, value], ...), elseValue}\r\n\t\t\t\tvar findElse = function(text){\r\n\t\t\t\t\ttext = text.join(':');\r\n\t\t\t\t\tvar else_ = null;\r\n\r\n\t\t\t\t\t// Split elseIf\r\n\t\t\t\t\ttext = text.split('@elseif ');\r\n\r\n\t\t\t\t\t// Get else value\r\n\t\t\t\t\tvar else_ = text[text.length - 1].split('@else');\r\n\t\t\t\t\tif(else_.length === 2){\r\n\t\t\t\t\t\ttext[text.length - 1] = else_[0];\r\n\t\t\t\t\t\telse_ = else_.pop();\r\n\t\t\t\t\t\telse_ = else_.substr(else_.indexOf(':') + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse else_ = null;\r\n\r\n\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t\tif:text.shift(),\r\n\t\t\t\t\t\telseIf:[],\r\n\t\t\t\t\t\telseValue:else_\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Separate condition script and value\r\n\t\t\t\t\tfor (var i = 0; i < text.length; i++) {\r\n\t\t\t\t\t\tvar val = text[i].split(':');\r\n\t\t\t\t\t\tobj.elseIf.push([val.shift(), val.join(':')]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tvar condition = check.shift();\r\n\t\t\t\t\tvar elseIf = findElse(check);\r\n\t\t\t\t\telseIf.type = REF_IF;\r\n\t\t\t\t\telseIf.data = [null, _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t\t// Trim Data\r\n\t\t\t\t\telseIf.if = [condition.trim(), elseIf.if.trim()];\r\n\t\t\t\t\tif(elseIf.elseValue !== null)\r\n\t\t\t\t\t\telseIf.elseValue = elseIf.elseValue.trim();\r\n\r\n\t\t\t\t\tfor (var i = 0; i < elseIf.elseIf.length; i++) {\r\n\t\t\t\t\t\telseIf.elseIf[i][0] = elseIf.elseIf[i][0].trim();\r\n\t\t\t\t\t\telseIf.elseIf[i][1] = elseIf.elseIf[i][1].trim();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Push data\r\n\t\t\t\t\tpreParsedReference.push(elseIf);\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scopes = [check[0], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\treturn elseIfHandle(findElse(check), scopes);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcheck.shift();\r\n\t\t\t\tscopes[0] = check.join(':');\r\n\r\n\t\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tvar scopes = [check[1], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tpreParsedReference.push({type:REF_EXEC, data:scopes});\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, scopes);\r\n\t\t\t\treturn temp;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\t_modelScope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t\treturn [prepared, preParsedReference, _content_];\r\n\t\t}\r\n\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\tvar bindArray = function(template, list, mask, modelName, propertyName, targetNode, parentNode, tempDOM){\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'swap', 'move', 'replace', 'softRefresh', 'hardRefresh'];\r\n\t\tvar refreshTimer = -1;\r\n\t\tvar parentChilds = parentNode.children;\r\n\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\r\n\t\t// Update callback\r\n\t\tvar modelRef = self.root[modelName];\r\n\t\tvar eventVar = 'on$'+propertyName;\r\n\t\tvar callback = modelRef[eventVar];\r\n\r\n\t\tvar processElement = function(index, options, other, count){\r\n\t\t\t// Find boundary for inserting to virtual DOM\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar vStartRange = list.$virtual.DOMCursor;\r\n\t\t\t\tvar vEndRange = vStartRange + list.$virtual.preparedLength;\r\n\t\t\t}\r\n\r\n\t\t\tif(options === 'clear'){\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar spacer = [parentNode.firstElementChild, parentNode.lastElementChild];\r\n\r\n\t\t\t\tparentNode.textContent = '';\r\n\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tparentNode.appendChild(spacer[0]);\r\n\t\t\t\t\tparentNode.appendChild(spacer[1]);\r\n\t\t\t\t\tlist.$virtual.dom.textContent = '';\r\n\t\t\t\t\tspacer[1].style.height = \r\n\t\t\t\t\tspacer[0].style.height = 0;\r\n\t\t\t\t\tlist.$virtual.reset(true);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid multiple refresh by set a timer\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar exist = list.$virtual.elements();\r\n\r\n\t\t\t\tclearTimeout(refreshTimer);\r\n\t\t\t\trefreshTimer = setTimeout(function(){\r\n\t\t\t\t\tif(list.$virtual) // Somewhat it's uninitialized\r\n\t\t\t\t\t\tlist.$virtual.reinitScroll();\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse exist = parentChilds;\r\n\r\n\t\t\t// Hard refresh - Append element\r\n\t\t\tif(options === 'hardRefresh'){\r\n\t\t\t\t// Clear siblings after the index\r\n\t\t\t\tfor (var i = index; i < exist.length; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar vCursor = list.$virtual.vCursor;\r\n\r\n\t\t\t\tfor (var i = index; i < list.length; i++) {\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\tif(vCursor.floor === null && i < vEndRange)\r\n\t\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\t\telse list.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse parentNode.appendChild(temp);\r\n\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual && list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(callback === void 0)\r\n\t\t\t\tcallback = modelRef[eventVar];\r\n\r\n\t\t\tif(options === 'swap' || options === 'move'){\r\n\t\t\t\tif(options === 'move'){\r\n\t\t\t\t\tvar overflow = list.length - index - count;\r\n\t\t\t\t\tif(overflow < 0)\r\n\t\t\t\t\t\tcount += overflow;\r\n\r\n\t\t\t\t\t// Move to virtual DOM\r\n\t\t\t\t\tvar vDOM = document.createElement('div');\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tvDOM.appendChild(exist[index + i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar nextSibling = exist[other] || null;\r\n\t\t\t\t\tvar theParent = nextSibling && nextSibling.parentNode;\r\n\r\n\t\t\t\t\tif(theParent === false){\r\n\t\t\t\t\t\tif(list.$virtual && list.length >= vEndRange)\r\n\t\t\t\t\t\t\ttheParent = list.$virtual.dom;\r\n\t\t\t\t\t\telse theParent = parentNode;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Move to defined index\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\ttheParent.insertBefore(vDOM.firstElementChild, nextSibling);\r\n\r\n\t\t\t\t\t\tif(callback !== void 0 && callback.update)\r\n\t\t\t\t\t\t\tcallback.update(exist[index + i], 'move');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(index > other){\r\n\t\t\t\t\tvar index_a = exist[other];\r\n\t\t\t\t\tother = exist[index];\r\n\t\t\t\t\tindex = index_a;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tindex = exist[index];\r\n\t\t\t\t\tother = exist[other];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar other_sibling = other.nextSibling;\r\n\t\t\t\tvar other_parent = other.parentNode;\r\n\t            index.parentNode.insertBefore(other, index.nextSibling);\r\n\t            other_parent.insertBefore(index, other_sibling);\r\n\r\n\t\t\t\tif(callback !== void 0 && callback.update){\r\n\t\t\t\t\tcallback.update(exist[other], 'swap');\r\n\t\t\t\t\tcallback.update(exist[index], 'swap');\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Clear unused element if current array < last array\r\n\t\t\tif(options === 'removeRange'){\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(options === 'remove'){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\texist[index].remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(callback !== void 0 && callback.remove){\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tstartRemove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse startRemove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update\r\n\t\t\telse if(options === 'update'){\r\n\t\t\t\tif(index === void 0){\r\n\t\t\t\t\tindex = 0;\r\n\t\t\t\t\tother = list.length;\r\n\t\t\t\t}\r\n\t\t\t\telse if(other === void 0) other = index + 1;\r\n\t\t\t\telse if(other < 0) other = list.length + other;\r\n\t\t\t\telse other += index;\r\n\r\n\t\t\t\t// Trim length\r\n\t\t\t\tvar overflow = list.length - other;\r\n\t\t\t\tif(overflow < 0) other = other + overflow;\r\n\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\tvar oldChild = exist[i];\r\n\t\t\t\t\tif(oldChild === void 0 || list[i] === void 0)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\toldChild.parentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tparentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\tif(callback !== void 0 && callback.update)\r\n\t\t\t\t\t\tcallback.update(temp, 'replace');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar item = list[index];\r\n\t\t\tif(item === void 0) return;\r\n\r\n\t\t\tvar temp = templateParser(template, item);\r\n\t\t\tif(isKeyed === false)\r\n\t\t\t\tsyntheticCache(temp, template, item);\r\n\r\n\t\t\t// Create\r\n\t\t\tif(options === 'insertAfter'){\r\n\t\t\t\tif(exist.length === 0)\r\n\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\telse{\r\n\t\t\t\t\tvar referenceNode = exist[index - 1];\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode.nextSibling);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t\telse if(options === 'prepend'){\r\n\t\t\t\tvar referenceNode = exist[0];\r\n\t\t\t\tif(referenceNode !== void 0){\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode);\r\n\r\n\t\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t}\r\n\t\t\t\telse options = 'append';\r\n\t\t\t}\r\n\t\t\tif(options === 'append'){\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tif(index === 0) // Add before virtual scroller\r\n\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\telse if(index >= vEndRange){ // To virtual DOM\r\n\t\t\t\t\t\tif(list.$virtual.vCursor.floor === null)\r\n\t\t\t\t\t\t\tlist.$virtual.vCursor.floor = temp;\r\n\r\n\t\t\t\t\t\tlist.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse // To real DOM\r\n\t\t\t\t\t\texist[index-1].insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparentNode.appendChild(temp);\r\n\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar _double_zero = [0,0]; // For arguments\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = void 0;\r\n\t\t\t\t\tvar lastLength = this.length;\r\n\r\n\t\t\t\t\tif(name === 'move'){\r\n\t\t\t\t\t\tvar from = arguments[0];\r\n\t\t\t\t\t\tvar to = arguments[1];\r\n\t\t\t\t\t\tif(from === to) return;\r\n\t\t\t\t\t\tvar count = arguments[2] || 1;\r\n\t\t\t\t\t\tprocessElement(from, 'move', to, count);\r\n\r\n\t\t\t\t\t\tvar temp = Array.prototype.splice.apply(this, [from, count]);\r\n\t\t\t\t\t\ttemp.unshift(to, 0);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Reset virtual ceiling and floor\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(name === 'swap'){\r\n\t\t\t\t\t\tvar i = arguments[0];\r\n\t\t\t\t\t\tvar o = arguments[1];\r\n\t\t\t\t\t\tif(i === o) return;\r\n\t\t\t\t\t\tprocessElement(i, 'swap', o);\r\n\t\t\t\t\t\tvar temp = this[i];\r\n\t\t\t\t\t\tthis[i] = this[o];\r\n\t\t\t\t\t\tthis[o] = temp;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'replace'){\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.resetViewport();\r\n\r\n\t\t\t\t\t\t// Check if item has same reference\r\n\t\t\t\t\t\tif(arguments[0].length >= lastLength && lastLength !== 0){\r\n\t\t\t\t\t\t\tvar matchLeft = lastLength;\r\n\t\t\t\t\t\t\tvar ref = arguments[0];\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < lastLength; i++) {\r\n\t\t\t\t\t\t\t\tif(ref[i] === this[i]){\r\n\t\t\t\t\t\t\t\t\tmatchLeft--;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the end\r\n\t\t\t\t\t\t\tif(matchLeft === 0){\r\n\t\t\t\t\t\t\t\tif(ref.length === lastLength) return;\r\n\r\n\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(lastLength);\r\n\t\t\t\t\t\t\t\ttemp.unshift(lastLength, 0);\r\n\t\t\t\t\t\t\t\tthis.splice.apply(this, temp);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the middle\r\n\t\t\t\t\t\t\telse if(matchLeft !== lastLength){\r\n\t\t\t\t\t\t\t\tif(arguments[1] === true){\r\n\t\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(i);\r\n\t\t\t\t\t\t\t\t\ttemp.unshift(i, lastLength - i);\r\n\t\t\t\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t\t\t\tlist.refresh(i, lastLength);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Build from zero\r\n\t\t\t\t\t\tif(lastLength === 0){\r\n\t\t\t\t\t\t\tArray.prototype.push.apply(this, arguments[0]);\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Clear all items and merge the new one\r\n\t\t\t\t\t\tvar temp = [0, lastLength];\r\n\t\t\t\t\t\tArray.prototype.push.apply(temp, arguments[0]);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Rebuild all element\r\n\t\t\t\t\t\tif(arguments[1] !== true || isKeyed){\r\n\t\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reuse some element\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t// Clear unused element if current array < last array\r\n\t\t\t\t\t\t\tif(this.length < lastLength)\r\n\t\t\t\t\t\t\t\tprocessElement(this.length, 'removeRange', lastLength);\r\n\r\n\t\t\t\t\t\t\t// And start refreshing\r\n\t\t\t\t\t\t\tlist.refresh(0, this.length);\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual && list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reset virtual list\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reset();\r\n\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice' && arguments[0] === 0 && arguments[1] === void 0){\r\n\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\treturn Array.prototype.splice.apply(this, arguments);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(this.length, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'push'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(lastLength, 'append');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = 0; i < arguments.length; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(lastLength + i, 'append');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'shift'){\r\n\t\t\t\t\t\tprocessElement(0, 'remove');\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor > 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor--;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments[0] === 0 && arguments[1] === void 0)\r\n\t\t\t\t\t\t\treturn temp;\r\n\r\n\t\t\t\t\t\t// Removing data\r\n\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\tif(real < 0) real = lastLength + real;\r\n\r\n\t\t\t\t\t\tvar limit = arguments[1];\r\n\t\t\t\t\t\tif(!limit && limit !== 0) limit = this.length;\r\n\r\n\t\t\t\t\t\tfor (var i = limit - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tprocessElement(real + i, 'remove');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = real - limit;\r\n\r\n\t\t\t\t\t\tif(arguments.length >= 3){ // Inserting data\r\n\t\t\t\t\t\t\tlimit = arguments.length - 2;\r\n\r\n\t\t\t\t\t\t\t// Trim the index if more than length\r\n\t\t\t\t\t\t\tif(real >= this.length)\r\n\t\t\t\t\t\t\t\treal = this.length - 1;\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < limit; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(real + i, 'insertAfter');\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\t\tlist.$virtual.DOMCursor += limit;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(0, 'prepend');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = arguments.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\t\tprocessElement(i, 'prepend');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor !== 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor += arguments.length;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'softRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0], 'update', arguments[1]);\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'hardRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0] || 0, 'hardRefresh');\r\n\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = arguments[0] || 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(parentNode && parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\tdelete list.$virtual;\r\n\t\t\tlist.$virtual = {};\r\n\r\n\t\t\t// Transfer virtual DOM\r\n\t\t\tlist.$virtual.dom = tempDOM;\r\n\t\t\tif(callback !== void 0)\r\n\t\t\t\tlist.$virtual.callback = callback;\r\n\t\t\telse list.$virtual.callback_ = {ref:modelRef, var:eventVar};\r\n\r\n\t\t\tparentNode.replaceChild(template.html, parentChilds[1]);\r\n\t\t\tsf.internal.virtual_scroll.handle(list, targetNode, parentNode);\r\n\t\t\ttemplate.html.remove();\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\r\n\t\t// Todo: Enable auto item binding\r\n\t\tif(false && list.auto !== false){\r\n\t\t\t// for (var i = 0; i < list.length; i++) {\r\n\t\t\t// \tlist[i]\r\n\t\t\t// }\r\n\t\t}\r\n\r\n\t\thiddenProperty(list, '$replace', function(index, key, needle, func){\r\n\t\t\tvar elRef = list.getElement(index).sf$elementReferences;\r\n\t\t\tvar process = template.modelReference[key];\r\n\t\t\tif(process === void 0){\r\n\t\t\t\tconsole.error(\"Can't found binding for '\"+key+\"'\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < elRef.length; i++) {\r\n\t\t\t\tif(elRef[i].textContent === void 0 || elRef[i].ref.direct === void 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tif(process.indexOf(elRef[i].ref.direct) !== -1){\r\n\t\t\t\t\tvar ref = elRef[i].textContent;\r\n\t\t\t\t\tvar content = $.escapeText(list[index][key]).replace(needle, func);\r\n\r\n\t\t\t\t\t// Skip if nothing was changed\r\n\t\t\t\t\tif(list[index][key] === content) continue;\r\n\t\t\t\t\tref.textContent = ''; // Let this empty for later referencing\r\n\t\t\t\t\tref.sf$haveChilds = true;\r\n\t\t\t\t\tcontent = $.parseElement(content, true);\r\n\r\n\t\t\t\t\t// Remove old element if exist\r\n\t\t\t\t\twhile(ref.previousSibling && ref.previousSibling.sf$childRoot === ref){\r\n\t\t\t\t\t\tref.previousSibling.remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar parentNode_ = ref.parentNode;\r\n\t\t\t\t\tfor (var i = 0; i < content.length; i++) {\r\n\t\t\t\t\t\tcontent[i].sf$childRoot = ref;\r\n\t\t\t\t\t\tparentNode_.insertBefore(content[i], ref);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\thiddenProperty(list, 'refresh', function(index, length, property){\r\n\t\t\tif(index === void 0 || index.constructor === String){\r\n\t\t\t\tproperty = index;\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tlength = list.length;\r\n\t\t\t}\r\n\t\t\telse if(length === void 0) length = index + 1;\r\n\t\t\telse if(length.constructor === String){\r\n\t\t\t\tproperty = length;\r\n\t\t\t\tlength = index + 1;\r\n\t\t\t}\r\n\t\t\telse if(length < 0) length = list.length + length;\r\n\t\t\telse length += index;\r\n\r\n\t\t\t// Trim length\r\n\t\t\tvar overflow = list.length - length;\r\n\t\t\tif(overflow < 0) length = length + overflow;\r\n\r\n\t\t\tfor (var i = index; i < length; i++) {\r\n\t\t\t\tvar elem = list.getElement(i);\r\n\r\n\t\t\t\t// Create element if not exist\r\n\t\t\t\tif(elem === void 0){\r\n\t\t\t\t\tlist.hardRefresh(i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(isKeyed === true)\r\n\t\t\t\t\t\tlist.softRefresh(i);\r\n\t\t\t\t\telse if(syntheticTemplate(elem, template, property, list[i]) === false)\r\n\t\t\t\t\t\tcontinue; // Continue if no update\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== void 0 && callback.update)\r\n\t\t\t\t\tcallback.update(elem, 'replace');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar virtualChilds = null;\r\n\t\tif(list.$virtual)\r\n\t\t\tvirtualChilds = list.$virtual.dom.children;\r\n\t\thiddenProperty(list, 'getElement', function(index){\r\n\t\t\tif(virtualChilds !== null){\r\n\t\t\t\tvar ret = void 0;\r\n\t\t\t\tif(index < list.$virtual.DOMCursor)\r\n\t\t\t\t\treturn virtualChilds[index];\r\n\t\t\t\telse {\r\n\t\t\t\t\tindex -= list.$virtual.DOMCursor;\r\n\t\t\t\t\tvar childElement = parentNode.childElementCount - 2;\r\n\r\n\t\t\t\t\tif(index < childElement)\r\n\t\t\t\t\t\treturn parentChilds[index + 1];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn virtualChilds[index - childElement + list.$virtual.DOMCursor];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn void 0;\r\n\t\t\t}\r\n\r\n\t\t\treturn parentChilds[index];\r\n\t\t});\r\n\t}\r\n\r\n\tvar loopParser = function(name, template, script, targetNode, parentNode){\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\r\n\t\tvar items = root_(name)[method[1]];\r\n\t\tif(items === void 0)\r\n\t\t\titems = root_(name)[method[1]] = [];\r\n\r\n\t\ttemplate.setAttribute('sf-bind-list', method[1]);\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = template;\r\n\t\ttemplate = self.extractPreprocess(template, mask, name);\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\t\t\tvar tempDOM = document.createElement('div');\r\n\t\t\tvar modelRef = self.root[name];\r\n\r\n\t\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\t\tvar elem = templateParser(template, items[i]);\r\n\t\t\t\ttempDOM.appendChild(elem);\r\n\r\n\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\tsyntheticCache(elem, template, items[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// Enable element binding\r\n\t\t\tif(modelRef.sf$bindedKey === void 0)\r\n\t\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\t\tif(modelRef.sf$bindedKey[method[1]] === void 0)\r\n\t\t\t\tmodelRef.sf$bindedKey[method[1]] = null;\r\n\r\n\t\t\tObject.defineProperty(modelRef, method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tif(val.length === 0)\r\n\t\t\t\t\t\treturn items.splice(0);\r\n\t\t\t\t\treturn items.replace(val, true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tbindArray(template, items, mask, name, method[1], targetNode, parentNode, tempDOM);\r\n\r\n\t\t\t// Output to real DOM if not being used for virtual list\r\n\t\t\tif(items.$virtual === void 0){\r\n\t\t\t\tvar children = tempDOM.children;\r\n\t\t\t\tfor (var i = 0, n = children.length; i < n; i++) {\r\n\t\t\t\t\tparentNode.appendChild(children[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttempDOM.remove();\r\n\t\t\t\ttempDOM = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar callInputListener = function(model, property, value){\r\n\t\tvar callback = model['on$'+property];\r\n\t\tvar v2m = model['v2m$'+property];\r\n\t\tvar newValue1 = void 0; var newValue2 = void 0;\r\n\t\tif(callback !== void 0 || v2m !== void 0){\r\n\t\t\tvar old = model[property];\r\n\t\t\tif(old !== null && old !== void 0 && old.constructor === Array)\r\n\t\t\t\told = old.slice(0);\r\n\r\n\t\t\ttry{\r\n\t\t\t\tif(v2m !== void 0)\r\n\t\t\t\t\tnewValue1 = v2m(old, value);\r\n\r\n\t\t\t\tif(callback !== void 0)\r\n\t\t\t\t\tnewValue2 = callback(old, value);\r\n\t\t\t}catch(e){console.error(e)}\r\n\t\t}\r\n\t\treturn newValue2 !== void 0 ? newValue2 : newValue1;\r\n\t}\r\n\r\n\tvar inputBoundRunning = false;\r\n\tvar inputTextBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\r\n\t\tinputBoundRunning = true;\r\n\t\tvar ref = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar value = ref.typeData === Number ? Number(ref.value) : ref.value;\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== void 0)\r\n\t\t\tref.sfModel[ref.sfBounded] = newValue;\r\n\t\telse ref.sfModel[ref.sfBounded] = value;\r\n\t}\r\n\tvar inputFilesBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tvar ref = e.target;\r\n\t\tcallInputListener(ref.sfModel, ref.sfBounded, ref.files);\r\n\t\tref.sfModel[ref.sfBounded] = ref.files;\r\n\t}\r\n\r\n\tvar inputCheckBoxBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tinputBoundRunning = true;\r\n\t\tvar ref = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar value = ref.typeData === Number ? Number(ref.value) : ref.value;\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== void 0)\r\n\t\t\tvalue = newValue;\r\n\r\n\t\tvar model = ref.sfModel;\r\n\t\tvar constructor = model[ref.sfBounded].constructor;\r\n\r\n\t\tif(constructor === Array){\r\n\t\t\tvar i = model[ref.sfBounded].indexOf(value);\r\n\r\n\t\t\tif(i === -1 && ref.checked === true)\r\n\t\t\t\tmodel[ref.sfBounded].push(value);\r\n\t\t\telse if(i !== -1 && ref.checked === false)\r\n\t\t\t\tmodel[ref.sfBounded].splice(i, 1);\r\n\t\t}\r\n\t\telse if(constructor === Boolean || ref.typeData === Boolean)\r\n\t\t\tmodel[ref.sfBounded] = ref.checked;\r\n\t\telse model[ref.sfBounded] = value;\r\n\t}\r\n\r\n\tvar inputSelectBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tinputBoundRunning = true;\r\n\t\tvar ref = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar typeData = ref.typeData;\r\n\t\tif(ref.multiple === true){\r\n\t\t\tvar temp = ref.selectedOptions;\r\n\t\t\tvar value = [];\r\n\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\tvalue.push(typeData === Number ? Number(temp[i].value) : temp[i].value);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse value = typeData === Number ? Number(ref.selectedOptions[0].value) : ref.selectedOptions[0].value;\r\n\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== void 0)\r\n\t\t\tref.sfModel[ref.sfBounded] = newValue;\r\n\t\telse ref.sfModel[ref.sfBounded] = value;\r\n\t}\r\n\r\n\tvar assignElementData = {\r\n\t\tselect:function(model, property, element){\r\n\t\t\tvar list = element.options;\r\n\t\t\tvar typeData = element.typeData;\r\n\t\t\tvar arrayValue = model[property].constructor === Array ? model[property] : false;\r\n\t\t\tfor (var i = 0, n = list.length; i < n; i++) {\r\n\t\t\t\tif(arrayValue === false){\r\n\t\t\t\t\tif(typeData === String)\r\n\t\t\t\t\t\tlist[i].selected = list[i].value === model[property];\r\n\t\t\t\t\telse list[i].selected = list[i].value == model[property];\r\n\t\t\t\t}\r\n\t\t\t\telse list[i].selected = arrayValue.indexOf(typeData === Number ? Number(list[i].value) : list[i].value) !== -1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckbox:function(model, property, element){\r\n\t\t\tif(model[property].constructor === Array)\r\n\t\t\t\telement.checked = model[property].indexOf(element.typeData === Number ? Number(element.value) : element.value) !== -1;\r\n\t\t\telse if(model[property].constructor === Boolean)\r\n\t\t\t\telement.checked = Boolean(model[property]);\r\n\t\t\telse{\r\n\t\t\t\tif(element.typeData === String)\r\n\t\t\t\t\telement.checked = element.value === model[property];\r\n\t\t\t\telse element.checked = element.value == model[property];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar inputBoundRun = function(model, property, elements){\r\n\t\tif(inputBoundRunning === true)\r\n\t\t\treturn; // Avoid multiple assigment\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\tvar ev = new Event('change');\r\n\t\t\tev.fromSFFramework = true;\r\n\r\n\t\t\tif(elements.type === 1) // text\r\n\t\t\t\telements[i].value = model[property];\r\n\t\t\telse if(elements.type === 2) // select options\r\n\t\t\t\tassignElementData.select(model, property, elements[i]);\r\n\t\t\telse if(elements.type === 3) // radio\r\n\t\t\t\telements[i].checked = model[property] == elements[i].value;\r\n\t\t\telse if(elements.type === 4) // checkbox\r\n\t\t\t\tassignElementData.checkbox(model, property, elements[i]);\r\n\r\n\t\t\telements[i].dispatchEvent(ev);\r\n\t\t}\r\n\t}\r\n\r\n\tvar triggerInputEvent = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\tif(e.target.viewInputted === true){\r\n\t\t\te.target.viewInputted = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\te.target.dispatchEvent(new Event('input'));\r\n\t}\r\n\r\n\tvar elementBoundChanges = function(model, property, element, oneWay){\r\n\t\t// Enable multiple element binding\r\n\t\tif(model.sf$bindedKey === void 0)\r\n\t\t\tinitBindingInformation(model);\r\n\r\n\t\tvar type = 0;\r\n\t\tvar typeData = null;\r\n\t\tif(model[property] !== null && model[property] !== void 0)\r\n\t\t\ttypeData = model[property].constructor;\r\n\r\n\t\tvar assignedType = (element.getAttribute('typedata') || '').toLowerCase();\r\n\t\tif(assignedType === 'number')\r\n\t\t\ttypeData = Number;\r\n\r\n\t\telement.typeData = typeData;\r\n\t\t$.on(element, 'change', triggerInputEvent);\r\n\r\n\t\t// Bound value change\r\n\t\tif(element.tagName === 'TEXTAREA'){\r\n\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\telement.value = model[property];\r\n\t\t\ttype = 1;\r\n\t\t}\r\n\r\n\t\telse if(element.selectedOptions !== void 0){\r\n\t\t\t$.on(element, 'input', inputSelectBound);\r\n\t\t\ttype = 2;\r\n\r\n\t\t\tassignElementData.select(model, property, element);\r\n\t\t}\r\n\r\n\t\telse{\r\n\t\t\tvar type = element.type.toLowerCase();\r\n\t\t\tif(type === 'radio'){\r\n\t\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\t\ttype = 3;\r\n\r\n\t\t\t\telement.checked = model[property] == element.value;\r\n\t\t\t}\r\n\t\t\telse if(type === 'checkbox'){\r\n\t\t\t\t$.on(element, 'input', inputCheckBoxBound);\r\n\t\t\t\ttype = 4;\r\n\r\n\t\t\t\tassignElementData.checkbox(model, property, element);\r\n\t\t\t}\r\n\r\n\t\t\telse if(type === 'file'){\r\n\t\t\t\t$.on(element, 'input', inputFilesBound);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telse{\r\n\t\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\t\telement.value = model[property];\r\n\t\t\t\ttype = 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(oneWay === true) return;\r\n\t\tmodelToViewBinding(model, property, inputBoundRun, element, type);\r\n\t}\r\n\r\n\tvar bindInput = function(targetNode){\r\n\t\tvar temp = $('input[sf-bound], textarea[sf-bound], select[sf-bound], input[sf-bind], textarea[sf-bind], select[sf-bind]', targetNode);\r\n\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar model = sf.controller.modelName(element);\r\n\t\t\tif(!model) return;\r\n\t\t\tvar modelScope = self.root[model];\r\n\r\n\t\t\tvar oneWay = false;\r\n\t\t\tvar propertyName = element.getAttribute('sf-bound');\r\n\t\t\tif(propertyName === null){\r\n\t\t\t\tpropertyName = element.getAttribute('sf-bind');\r\n\t\t\t\toneWay = true;\r\n\t\t\t}\r\n\t\t\tif(propertyName === \"\")\r\n\t\t\t\tpropertyName = element.getAttribute('name');\r\n\r\n\t\t\tif(propertyName === null){\r\n\t\t\t\tconsole.error(\"Property key to be bound wasn't be found\", element);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(modelScope[propertyName] === void 0){\r\n\t\t\t\tconsole.error('Can\\'t get property \"'+propertyName+'\" on model \"' + model + '\"');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement.sfBounded = propertyName;\r\n\t\t\telement.sfModel = modelScope;\r\n\t\t\tif(oneWay === false){\r\n\t\t\t\telement.setAttribute('sf-bounded', '');\r\n\t\t\t\telement.removeAttribute('sf-bound');\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\telement.setAttribute('sf-binded', '');\r\n\t\t\t\telement.removeAttribute('sf-bind');\r\n\t\t\t}\r\n\r\n\t\t\telementBoundChanges(modelScope, propertyName, element, oneWay);\r\n\t\t}\r\n\t}\r\n\r\n\tvar alreadyInitialized = false;\r\n\tself.init = function(targetNode, queued){\r\n\t\tif(alreadyInitialized && !targetNode) return;\r\n\t\talreadyInitialized = true;\r\n\t\tsetTimeout(function(){\r\n\t\t\talreadyInitialized = false;\r\n\t\t}, 50);\r\n\r\n\t\tif(!targetNode) targetNode = document.body;\r\n\r\n\t\tself.parsePreprocess(queued || self.queuePreprocess(targetNode), queued);\r\n\t\tbindInput(targetNode);\r\n\r\n\t\t// Find element for array binding\r\n\t\tvar temp = $('[sf-repeat-this]', targetNode);\r\n\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\tvar element = temp[a];\r\n\t\t\tvar parent = element.parentElement;\r\n\r\n\t\t\tif(queued !== void 0)\r\n\t\t\t\telement.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(parent.classList.contains('sf-virtual-list')){\r\n\t\t\t\tvar ceiling = document.createElement(element.tagName);\r\n\t\t\t\tceiling.classList.add('virtual-spacer');\r\n\t\t\t\tvar floor = ceiling.cloneNode(true);\r\n\r\n\t\t\t\tceiling.classList.add('ceiling');\r\n\t\t\t\tparent.insertBefore(ceiling, parent.firstElementChild); // prepend\r\n\r\n\t\t\t\tfloor.classList.add('floor');\r\n\t\t\t\tparent.appendChild(floor); // append\r\n\t\t\t}\r\n\r\n\t\t\tvar after = element.nextElementSibling;\r\n\t\t\tif(after === null || element === after)\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = element.previousElementSibling;\r\n\t\t\tif(before === null || element === before)\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = element.getAttribute('sf-repeat-this');\r\n\t\t\telement.removeAttribute('sf-repeat-this');\r\n\r\n\t\t\t// Check if the element was already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(element.outerHTML))\r\n\t\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\t\tvar controller = sf.controller.modelName(element);\r\n\t\t\tloopParser(controller, element, script, targetNode, parent);\r\n\t\t\telement.remove();\r\n\t\t}\r\n\r\n\t\t// Used by router\r\n\t\tif(sf.internal.afterModelBinding !== undefined)\r\n\t\t\tsf.internal.afterModelBinding();\r\n\t}\r\n\r\n\t// Reset model properties\r\n\t// Don't call if the removed element is TEXT or #comment\r\n\tvar DOMNodeRemoved = scope.DOMNodeRemoved = function(element){\r\n\t\tif(element.hasAttribute('sf-controller') !== false){\r\n\t\t\tvar modelName = element.sf$component === void 0 ? element.getAttribute('sf-controller') : element.sf$component;\r\n\r\n\t\t\tremoveModelBinding(modelName);\r\n\t\t\tif(element.sf$component !== void 0){\r\n\t\t\t\tvar modelFrom = element.sf$componentFrom;\r\n\t\t\t\tvar components = sf.component.available[modelFrom];\r\n\t\t\t\tcomponents.splice(components.indexOf(modelName), 1);\r\n\t\t\t\tinternal.component.triggerEvent(modelFrom, 'removed', self.root[modelName]);\r\n\t\t\t\tdelete self.root[modelName];\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar temp = $('[sf-controller]', element);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tDOMNodeRemoved(temp[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tsf(function(){\r\n\t\tvar everyRemovedNodes = function(nodes){\r\n\t\t\tif(nodes.nodeType !== 1 || nodes.firstElementChild === null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(nodes.sf$elementReferences !== void 0) return;\r\n\t\t\tDOMNodeRemoved(nodes);\r\n\t\t}\r\n\r\n\t\tif(typeof MutationObserver === 'function' && MutationObserver.prototype.observe){\r\n\t\t\tvar everyRecords = function(record){\r\n\t\t\t\trecord.removedNodes.forEach(everyRemovedNodes);\r\n\t\t\t}\r\n\r\n\t\t\tvar observer = new MutationObserver(function(records){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\trecords.forEach(everyRecords);\r\n\t\t\t});\r\n\r\n\t\t\tobserver.observe(document.body, { childList: true, subtree: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.body.addEventListener('DOMNodeRemoved', function(e){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\teveryRemovedNodes(e.target);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tvar removeModelBinding = self.reset = function(modelName){\r\n\t\tvar ref = self.root[modelName];\r\n\t\tif(ref === void 0)\r\n\t\t\treturn;\r\n\r\n\t\tvar bindedKey = ref.sf$bindedKey;\r\n\t\tvar temp = null;\r\n\t\tfor(var key in bindedKey){\r\n\t\t\tdelete bindedKey[key];\r\n\r\n\t\t\tif(ref[key] === void 0 || ref[key] === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(ref[key].constructor === String ||\r\n\t\t\t\tref[key].constructor === Number ||\r\n\t\t\t\tref[key].constructor === Boolean\r\n\t\t\t){/* Ok */}\r\n\r\n\t\t\telse if(ref[key].constructor === Array){\r\n\t\t\t\tif(ref[key].$virtual){\r\n\t\t\t\t\tref[key].$virtual.destroy();\r\n\t\t\t\t\tdelete ref[key].$virtual;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset property without copying the array\r\n\t\t\t\ttemp = ref[key].splice('obtain');\r\n\t\t\t\tdelete ref[key];\r\n\t\t\t\tref[key] = temp;\r\n\t\t\t}\r\n\t\t\telse continue;\r\n\r\n\t\t\tif(Object.getOwnPropertyDescriptor(ref, key) === void 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Reconfigure / Remove property descriptor\r\n\t\t\tvar temp = ref[key];\r\n\t\t\tdelete ref[key];\r\n\t\t\tref[key] = temp;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction modelToViewBinding(model, propertyName, callback, elementBind, type){\r\n\t\t// Enable multiple element binding\r\n\t\tif(model.sf$bindedKey === void 0)\r\n\t\t\tinitBindingInformation(model);\r\n\r\n\t\tif(model.sf$bindedKey[propertyName] !== void 0){\r\n\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\tif(ref.indexOf(callback) === -1)\r\n\t\t\t\tref.push(callback);\r\n\r\n\t\t\tif(elementBind !== void 0){\r\n\t\t\t\tif(ref.input === void 0){\r\n\t\t\t\t\tref.input = [elementBind];\r\n\t\t\t\t\tref.input.type = type;\r\n\t\t\t\t}\r\n\t\t\t\telse ref.input.push(elementBind);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tmodel.sf$bindedKey[propertyName] = [callback];\r\n\r\n\t\tif(elementBind !== void 0){\r\n\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\tref.input = [elementBind];\r\n\t\t\tref.input.type = type;\r\n\t\t}\r\n\r\n\t\t// Proxy property\r\n\t\tif(Object.getOwnPropertyDescriptor(model, propertyName).set !== void 0)\r\n\t\t\treturn;\r\n\r\n\t\tvar objValue = model[propertyName]; // Object value\r\n\t\tObject.defineProperty(model, propertyName, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\t\t\tget:function(getAssigner){\r\n\t\t\t\treturn objValue;\r\n\t\t\t},\r\n\t\t\tset:function(val){\r\n\t\t\t\tif(objValue !== val){\r\n\t\t\t\t\tvar m2v = model['m2v$'+propertyName];\r\n\t\t\t\t\tvar out = inputBoundRunning === false ? model['out$'+propertyName] : void 0;\r\n\t\t\t\t\tvar callback = inputBoundRunning === false ? model['on$'+propertyName] : void 0;\r\n\r\n\t\t\t\t\tif(callback !== void 0 || m2v !== void 0 || out !== void 0){\r\n\t\t\t\t\t\tvar newValue1 = void 0; var newValue2 = void 0; var newValue3 = void 0;\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tif(m2v !== void 0)\r\n\t\t\t\t\t\t\t\tnewValue1 = m2v(objValue, val);\r\n\r\n\t\t\t\t\t\t\tif(out !== void 0)\r\n\t\t\t\t\t\t\t\tnewValue2 = out(objValue, val);\r\n\r\n\t\t\t\t\t\t\tif(callback !== void 0)\r\n\t\t\t\t\t\t\t\tnewValue3 = callback(objValue, val);\r\n\t\t\t\t\t\t}catch(e){console.error(e)}\r\n\r\n\t\t\t\t\t\tobjValue = (newValue3 !== void 0 ? newValue3 : \r\n\t\t\t\t\t\t\t(newValue2 !== void 0 ? newValue2 : \r\n\t\t\t\t\t\t\t(newValue1 !== void 0 ? newValue1 : val)\r\n\t\t\t\t\t\t));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse objValue = val;\r\n\r\n\t\t\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\t\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\t\t\t\tif(inputBoundRun === ref[i]){\r\n\t\t\t\t\t\t\tif(inputBoundRunning !== true) // Avoid multiple assigment\r\n\t\t\t\t\t\t\t\tref[i](model, propertyName, ref.input);\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tref[i]();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinputBoundRunning = false;\r\n\t\t\t\treturn objValue;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvar dcBracket = /{{[^#][\\s\\S]*?}}/;\r\n\tself.bindElement = function(element){\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar data = self.extractPreprocess(element, null, modelName);\r\n\t\ttemplateParser(data, model, true);\r\n\t\tdelete data.addresses;\r\n\t\telement.parentNode.replaceChild(data.html, element);\r\n\t\telement = data.html;\r\n\r\n\t\tvar onChanges = function(){\r\n\t\t\tif(syntheticTemplate(element, data, void 0, model) === false)\r\n\t\t\t\t0; //No update\r\n\t\t};\r\n\r\n\t\tvar properties = data.modelRef_array;\r\n\t\tfor (var i = 0; i < properties.length; i++) {\r\n\t\t\tvar propertyName = properties[i][0];\r\n\r\n\t\t\tif(model[propertyName] === void 0)\r\n\t\t\t\tmodel[propertyName] = '';\r\n\r\n\t\t\tmodelToViewBinding(model, propertyName, onChanges);\r\n\t\t}\r\n\t}\r\n\r\n\tself.extractPreprocess = function(targetNode, mask, name){\r\n\t\t// Check if it's component\r\n\t\tvar tagName = targetNode.tagName.toLowerCase();\r\n\t\tif(sf.component.registered[tagName] !== void 0){\r\n\t\t\ttargetNode.parentNode.classList.add('sf-keyed-list');\r\n\t\t\ttargetNode.textContent = '';\r\n\t\t\ttargetNode.remove();\r\n\t\t\ttargetNode.setAttribute('sf-component-ignore', '');\r\n\t\t\treturn {\r\n\t\t\t\tcomponent:window['$'+capitalizeLetters(tagName.split('-'))],\r\n\t\t\t\tlist:targetNode.getAttribute('sf-bind-list')\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tvar copy = targetNode.outerHTML;\r\n\r\n\t\t// Mask the referenced item\r\n\t\tif(mask !== null)\r\n\t\t\tcopy = copy.split('#'+mask).join('_model_');\r\n\r\n\t\t// Extract data to be parsed\r\n\t\tcopy = uniqueDataParser(copy, null, mask, name, '#noEval');\r\n\t\tvar preParsed = copy[1];\r\n\t\tvar _content_ = copy[2];\r\n\t\tcopy = dataParser(copy[0], null, mask, name, '#noEval', preParsed);\r\n\r\n\t\tfunction findModelProperty(){\r\n\t\t\tif(mask === null){\r\n\t\t\t\t// Get model keys and sort by text length, make sure the longer one is from first index to avoid wrong match\r\n\t\t\t\tvar extract = RegExp('('+self.modelKeys(self.root[name]).sort(function(a, b){\r\n\t\t\t\t\treturn b.length - a.length\r\n\t\t\t\t}).join('|')+')', 'g');\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tvar extract = RegExp('\\\\b(?:_model_|'+mask+')\\\\.([a-zA-Z0-9.[\\'\\\\]]+)(?:$|[^\\'\\\\]])', 'g');\r\n\t\t\tvar found = {};\r\n\r\n\t\t\tfor (var i = 0; i < preParsed.length; i++) {\r\n\t\t\t\tvar current = preParsed[i];\r\n\r\n\t\t\t\t// Text or attribute\r\n\t\t\t\tif(current.type === 0){\r\n\t\t\t\t\tcurrent.data[0].split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(found[match] === void 0) found[match] = [i];\r\n\t\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Dynamic data\r\n\t\t\t\tif(current.type === 1){\r\n\t\t\t\t\tvar checkList = current.if.join(';');\r\n\r\n\t\t\t\t\tif(current.elseValue !== null)\r\n\t\t\t\t\t\tcheckList += ';' + current.elseValue;\r\n\r\n\t\t\t\t\tfor (var a = 0; a < current.elseIf.length; a++) {\r\n\t\t\t\t\t\tcheckList += current.elseIf[a].join(';');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(current.type === 2)\r\n\t\t\t\t\tvar checkList = current.data[0];\r\n\r\n\t\t\t\tcheckList = checkList.replace(/_result_ \\+= _content_\\.take\\(.*?, ([0-9]+)\\);/g, function(full, match){\r\n\t\t\t\t\treturn _content_[match];\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcheckList.split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found[match] === void 0) found[match] = [i];\r\n\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn found;\r\n\t\t}\r\n\r\n\t\t// Build element and start addressing\r\n\t\tcopy = $.parseElement(copy)[0];\r\n\t\tvar nodes = self.queuePreprocess(copy, true).reverse();\r\n\t\tvar addressed = [];\r\n\r\n\t\tfunction addressAttributes(currentNode){\r\n\t\t\tvar attrs = currentNode.attributes;\r\n\t\t\tvar keys = [];\r\n\t\t\tvar indexes = 0;\r\n\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\tvar found = attrs[a].value.split('{{%=');\r\n\t\t\t\tif(found.length !== 1){\r\n\t\t\t\t\tif(attrs[a].name[0] === ':'){\r\n\t\t\t\t\t\tvar key = {\r\n\t\t\t\t\t\t\tname:attrs[a].name.split(':').join(''),\r\n\t\t\t\t\t\t\tvalue:attrs[a].value\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tcurrentNode.removeAttribute(attrs[a].name);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse var key = {\r\n\t\t\t\t\t\tname:attrs[a].name,\r\n\t\t\t\t\t\tvalue:attrs[a].value\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tindexes = [];\r\n\t\t\t\t\tfound = key.value.replace(/{{%=([0-9]+)/g, function(full, match){\r\n\t\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found === '' && indexes.length === 1)\r\n\t\t\t\t\t\tkey.direct = indexes[0];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tkey.parse_index = indexes;\r\n\r\n\t\t\t\t\tkeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn keys;\r\n\t\t}\r\n\r\n\t\tvar currentElement = addressAttributes(copy);\r\n\t\tif(currentElement.length !== 0)\r\n\t\t\taddressed.push({\r\n\t\t\t\tnodeType:1,\r\n\t\t\t\taddress:[0],\r\n\t\t\t\tattributes:currentElement\r\n\t\t\t});\r\n\r\n\t\tfor (var i = 0; i < nodes.length; i++) {\r\n\t\t\tvar temp = {\r\n\t\t\t\tnodeType:nodes[i].nodeType\r\n\t\t\t};\r\n\r\n\t\t\tif(temp.nodeType === 1){ // Element\r\n\t\t\t\ttemp.attributes = addressAttributes(nodes[i]);\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\telse if(temp.nodeType === 3){ // Text node\r\n\t\t\t\tvar innerHTML = nodes[i].textContent;\r\n\t\t\t\tvar indexes = [];\r\n\r\n\t\t\t\tinnerHTML.replace(/{{%%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Check for dynamic mode\r\n\t\t\t\tif(indexes.length !== 0){\r\n\t\t\t\t\tinnerHTML = innerHTML.split(/{{%%=[0-9]+/gm);\r\n\t\t\t\t\tfor (var a = 0; a < innerHTML.length; a++) {\r\n\t\t\t\t\t\tinnerHTML[a] = trimIndentation(innerHTML[a]).trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodes[i].textContent = innerHTML.shift();\r\n\r\n\t\t\t\t\tvar parent = nodes[i].parentNode;\r\n\t\t\t\t\tvar nextSibling = nodes[i].nextSibling;\r\n\r\n\t\t\t\t\t// Dynamic boundary start\r\n\t\t\t\t\tvar addressStart = null;\r\n\t\t\t\t\tif(indexes.length !== 0 && nodes[i].textContent.length !== 0)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i], true);\r\n\t\t\t\t\telse if(nodes[i].previousSibling !== null)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i].previousSibling, true);\r\n\r\n\t\t\t\t\t// Find boundary ends\r\n\t\t\t\t\tvar commentFlag = [];\r\n\t\t\t\t\tfor(var a = 0; a < indexes.length; a++){\r\n\t\t\t\t\t\tvar flag = document.createComment('');\r\n\t\t\t\t\t\tparent.insertBefore(flag, nextSibling);\r\n\t\t\t\t\t\tcommentFlag.push({\r\n\t\t\t\t\t\t\tnodeType:-1,\r\n\t\t\t\t\t\t\tparse_index:indexes[a],\r\n\t\t\t\t\t\t\tstartFlag:addressStart,\r\n\t\t\t\t\t\t\taddress:$.getSelector(flag, true)\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(innerHTML[a]){\r\n\t\t\t\t\t\t\tvar textNode = document.createTextNode(innerHTML[a]);\r\n\t\t\t\t\t\t\tparent.insertBefore(textNode, nextSibling);\r\n\r\n\t\t\t\t\t\t\t// Get new start flag\r\n\t\t\t\t\t\t\tif(a + 1 < indexes.length)\r\n\t\t\t\t\t\t\t\taddressStart = $.getSelector(textNode, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Merge boundary address\r\n\t\t\t\t\tArray.prototype.push.apply(addressed, commentFlag);\r\n\t\t\t\t\tif(nodes[i].textContent === ''){\r\n\t\t\t\t\t\tnodes[i].remove();\r\n\t\t\t\t\t\tfor (var a = 0; a < commentFlag.length; a++) {\r\n\t\t\t\t\t\t\tvar ref = commentFlag[a].address;\r\n\t\t\t\t\t\t\tref[ref.length - 1]--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(nodes[i].textContent.search(/{{%=[0-9]+/) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if it's only model value\r\n\t\t\t\tindexes = [];\r\n\t\t\t\tinnerHTML = nodes[i].textContent.replace(/{{%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(innerHTML === '' && indexes.length === 1)\r\n\t\t\t\t\ttemp.direct = indexes[0];\r\n\t\t\t\telse{\r\n\t\t\t\t\ttemp.value = nodes[i].textContent;\r\n\t\t\t\t\ttemp.parse_index = indexes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\taddressed.push(temp);\r\n\t\t}\r\n\r\n\t\tvar modelReference = findModelProperty();\r\n\t\tvar keys = Object.keys(modelReference);\r\n\t\tvar asArray = [];\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tasArray.push([keys[i], keys[i].split('.')]);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\thtml:copy,\r\n\t\t\tparse:preParsed,\r\n\t\t\taddresses:addressed,\r\n\t\t\tmodelReference:modelReference,\r\n\t\t\tmodelRef_array:asArray\r\n\t\t};\r\n\t}\r\n\r\n\tvar enclosedHTMLParse = false;\r\n\tvar excludes = ['HTML','HEAD','STYLE','LINK','META','SCRIPT','OBJECT','IFRAME'];\r\n\tself.queuePreprocess = function(targetNode, extracting){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = childNodes.length - 1; i >= 0; i--) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\r\n\t\t\tif(extracting === void 0 && excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tif(enclosedHTMLParse === true) continue;\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\r\n\t\t\t\t// Skip element and it's childs that already bound to prevent vulnerability\r\n\t\t\t\tif(attrs['sf-bind-key'] || attrs['sf-repeat-this'] || attrs['sf-bind-list']) continue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tArray.prototype.push.apply(temp, self.queuePreprocess(currentNode, extracting));\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tif(currentNode.textContent.length === 0){\r\n\t\t\t\t\tcurrentNode.remove();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// The scan is from bottom to first index\r\n\t\t\t\tvar enclosing = currentNode.textContent.indexOf('{[');\r\n\t\t\t\tif(enclosing !== -1)\r\n\t\t\t\t\tenclosedHTMLParse = false;\r\n\t\t\t\telse if(enclosedHTMLParse === true)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Start enclosed if closing pattern was found\r\n\t\t\t\tvar enclosed = currentNode.textContent.indexOf(']}');\r\n\t\t\t\tif(enclosed !== -1 && (enclosing === -1 || enclosing > enclosed)){ // avoid {[ ... ]}\r\n\t\t\t\t\tenclosedHTMLParse = true; // when ]} ... \r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tif(extracting === void 0){\r\n\t\t\t\t\t\ttemp.push(currentNode.parentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn temp;\r\n\t}\r\n\r\n\tself.parsePreprocess = function(nodes, queued){\r\n\t\tfor (var a = 0; a < nodes.length; a++) {\r\n\t\t\t// Get reference for debugging\r\n\t\t\tvar current = processingElement = nodes[a];\r\n\r\n\t\t\tvar modelElement = sf.controller.modelElement(current);\r\n\t\t\tif(modelElement === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar model = modelElement.sf$component === void 0 ? modelElement.getAttribute('sf-controller') : modelElement.sf$component;\r\n\r\n\t\t\tif(queued !== void 0)\r\n\t\t\t\tcurrent.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tvar modelRef = self.root[model] || root_(model);\r\n\r\n\t\t\t// Double check if the child element already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(current.innerHTML)){\r\n\t\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\t\tconsole.log(processingElement.cloneNode(true));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(current.hasAttribute('sf-bind-ignore') === false)\r\n\t\t\t\tself.bindElement(current);\r\n\t\t\telse{\r\n\t\t\t\tvar temp = uniqueDataParser(current.innerHTML, modelRef, false, model);\r\n\t\t\t\tcurrent.innerHTML = dataParser(temp, modelRef, false, model);\r\n\t\t\t\tvar attrs = current.attributes;\r\n\t\t\t\tfor (var i = 0; i < attrs.length; i++) {\r\n\t\t\t\t\tif(attrs[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tvar attr = attrs[i];\r\n\t\t\t\t\t\tattr.value = dataParser(attr.value, modelRef, false, model);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initBindingInformation(modelRef){\r\n\t\tif(modelRef.sf$bindedKey !== void 0)\r\n\t\t\treturn;\r\n\r\n\t\t// Element binding data\r\n\t\tObject.defineProperty(modelRef, 'sf$bindedKey', {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable:false,\r\n\t\t\twritable:true,\r\n\t\t\tvalue:{}\r\n\t\t});\r\n\t}\r\n})();","sf.API = function(method, url, data, success, complete, accessToken){\r\n\tvar req = {\r\n\t\turl:url,\r\n\t\tdataType:'json',\r\n\t\tcontentType:\"application/json; charset=utf-8\",\r\n\t\tmethod:'POST',\r\n\t\tsuccess:function(obj){\r\n\t\t\tif(!sf.API.onSuccess(obj) && success)\r\n\t\t\t\tsuccess(obj, url);\r\n\r\n\t\t\tif(complete) complete(true);\r\n\t\t},\r\n\t\terror:function(xhr, status){\r\n\t\t\tsf.API.onError(xhr, status)\r\n\t\t\tif(complete) complete(false, status);\r\n\t\t}\r\n\t};\r\n\r\n\tif(typeof data !== 'object')\r\n\t\tdata = {};\r\n\r\n\tdata._method = method.toUpperCase();\r\n\r\n\tif(accessToken)\r\n\t\tdata.access_token = accessToken;\r\n\t\r\n\treq.data = JSON.stringify(data);\r\n\tsf.ajax(req);\r\n}\r\n\r\nsf.API.onError = function(xhr, status){};\r\nsf.API.onSuccess = function(obj){};\r\n\r\nsf.API.url = 'http://anisics.sandbox/api';\r\nsf.API.accessToken = false;\r\nsf.API.get = function(url, data, success, complete){\r\n\treturn sf.API('get', this.url+url, data, success, complete, this.accessToken);\r\n}\r\nsf.API.post = function(url, data, success, complete){\r\n\treturn sf.API('post', this.url+url, data, success, complete, this.accessToken);\r\n}\r\nsf.API.delete = function(url, data, success, complete){\r\n\treturn sf.API('delete', this.url+url, data, success, complete, this.accessToken);\r\n}\r\nsf.API.put = function(url, data, success, complete){\r\n\treturn sf.API('put', this.url+url, data, success, complete, this.accessToken);\r\n}","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tself.pending = {};\r\n\tself.active = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tif(sf.component.registered[name]){\r\n\t\t\tsf.component.registered[name][1] = func;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tself.pending[name] = func;\r\n\t}\r\n\r\n\tself.modelScope = function(element, func){\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = element.getAttribute('sf-bind-list');\r\n\t\tif(!bindedList){\r\n\t\t\tvar parentEl = $.parent(element, '[sf-bind-list]');\r\n\t\t\tif(parentEl !== null)\r\n\t\t\t\tbindedList = parentEl.getAttribute('sf-bind-list');\r\n\t\t}\r\n\t\telse var parentEl = element;\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(sf.model.root[model], -1);\r\n\t\t\telse return sf.model.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = $.prevAll(parentEl, '[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(sf.model.root[model][bindedList], bindedListIndex);\r\n\t\telse return sf.model.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.modelElement = function(element){\r\n\t\tif(element.nodeType === 1 && element.hasAttribute('sf-controller') === true)\r\n\t\t\treturn element;\r\n\r\n\t\treturn $.parent(element, '[sf-controller]');\r\n\t}\r\n\r\n\tself.modelName = function(element){\r\n\t\tvar name = self.modelElement(element);\r\n\t\tif(name === null){\r\n\t\t\tconsole.error(\"Can't find any controller for\", element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tname = name.sf$component === void 0? name.getAttribute('sf-controller') : name.sf$component;\r\n\r\n\t\t// Initialize it first\r\n\t\tif(name !== void 0 && !self.active[name])\r\n\t\t\tself.run(name);\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = e.target;\r\n\t\tvar script = element.getAttribute('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = $.parent(element, '[sf-click]');\r\n\t\t\tscript = element.getAttribute('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = $.parent(element, '[sf-controller]');\r\n\t\tmodel = model.sf$component === void 0 ? model.getAttribute('sf-controller') : model.sf$component;\r\n\t\tvar _modelScope = sf.model.root[model];\r\n\r\n\t\tif(_modelScope === void 0)\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(_modelScope).join('|');\r\n\t\tscript = avoidQuotes(script, function(script_){\r\n\t\t\treturn script_.replace(RegExp(sf.regex.strictVar+'('+modelKeys+')\\\\b', 'g'), function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script.shift();\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(e) {\r\n\t\t\tmethod = false;\r\n\t\t}\r\n\r\n\t\tif(!method){\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot call `'+method_+'`]\\n', element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0){\r\n\t\t\t// Replace `this` to `element`\r\n\t\t\tscript = eval(('['+script+']').replace(/,this|\\[this/g, function(found){\r\n\t\t\t\treturn found[0] + 'element';\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif(!script)\r\n\t\t\tscript = [];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element, script);\r\n\t\t\te.preventDefault();\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', element, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tself.run = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.run(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(sf.component.registered[name])\r\n\t\t\treturn console.error(\"'\"+name+\"' is registered as a component\");\r\n\r\n\t\tif(self.pending[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\r\n\t\t\tself.pending[name](sf.model.root[name], root_);\r\n\t\t\tself.active[name] = true;\r\n\t\t\tdelete self.pending[name];\r\n\t\t}\r\n\r\n\t\tif(sf.model.root[name] === void 0)\r\n\t\t\tsf.model.root[name] = {};\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], root_);\r\n\t}\r\n\r\n\tself.init = function(parent){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(name);\r\n\t\t\t});\r\n\r\n\t\tvar temp = $('[sf-controller]', parent || document.body);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tself.run(temp[i].sf$component === void 0? temp[i].getAttribute('sf-controller') : temp[i].sf$component);\r\n\t\t}\r\n\t}\r\n\r\n\t// Create listener for sf-click\r\n\tdocument.addEventListener('DOMContentLoaded', function(){\r\n\t\t$.on(document.body, 'click', '[sf-click]', listenSFClick);\r\n\t}, {capture:true, once:true});\r\n}\r\n\r\nvar root_ = function(scope){\r\n\tif(sf.component.registered[scope]){\r\n\t\tvar available = [];\r\n\t\tvar component = sf.component.available[scope];\r\n\t\tif(component !== void 0){\r\n\t\t\tfor (var i = 0; i < component.length; i++) {\r\n\t\t\t\tavailable.push(sf.model.root[component[i]]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn available;\r\n\t}\r\n\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\treturn sf.model.root[scope];\r\n}","/*\r\n  Special Thanks to Vladimir Kharlampidi\r\n  https://github.com/nolimits4web/\r\n*/\r\n\r\nvar globals = {};\r\nvar jsonpRequests = 0;\r\nfunction Request(requestOptions) {\r\n    var globalsNoCallbacks = Object.assign({}, globals);\r\n    ('beforeCreate beforeOpen beforeSend error complete success statusCode').split(' ').forEach(function (callbackName) {\r\n        delete globalsNoCallbacks[callbackName];\r\n    });\r\n    var defaults = Object.assign({\r\n        url: window.location.toString(),\r\n        method: 'GET',\r\n        data: false,\r\n        async: true,\r\n        cache: true,\r\n        user: '',\r\n        password: '',\r\n        headers: {},\r\n        xhrFields: {},\r\n        statusCode: {},\r\n        processData: true,\r\n        dataType: 'text',\r\n        contentType: 'application/x-www-form-urlencoded',\r\n        timeout: 0,\r\n    }, globalsNoCallbacks);\r\n    var options = Object.assign({}, defaults, requestOptions);\r\n    var proceedRequest;\r\n    // Function to run XHR callbacks and events\r\n    function fireCallback(callbackName) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        /*\r\n          Callbacks:\r\n          beforeCreate (options),\r\n          beforeOpen (xhr, options),\r\n          beforeSend (xhr, options),\r\n          error (xhr, status),\r\n          complete (xhr, stautus),\r\n          success (response, status, xhr),\r\n          statusCode ()\r\n        */\r\n        var globalCallbackValue;\r\n        var optionCallbackValue;\r\n        if (globals[callbackName]) {\r\n            globalCallbackValue = globals[callbackName].apply(globals, data);\r\n        }\r\n        if (options[callbackName]) {\r\n            optionCallbackValue = options[callbackName].apply(options, data);\r\n        }\r\n        if (typeof globalCallbackValue !== 'boolean')\r\n            globalCallbackValue = true;\r\n        if (typeof optionCallbackValue !== 'boolean')\r\n            optionCallbackValue = true;\r\n        return (globalCallbackValue && optionCallbackValue);\r\n    }\r\n    // Before create callback\r\n    proceedRequest = fireCallback('beforeCreate', options);\r\n    if (proceedRequest === false)\r\n        return void 0;\r\n    // For jQuery guys\r\n    if (options.type)\r\n        options.method = options.type;\r\n    // Parameters Prefix\r\n    var paramsPrefix = options.url.indexOf('?') >= 0 ? '&' : '?';\r\n    // UC method\r\n    var method = options.method.toUpperCase();\r\n    // Data to modify GET URL\r\n    if ((method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') && options.data) {\r\n        var stringData = void 0;\r\n        if (typeof options.data === 'string') {\r\n            // Should be key=value string\r\n            if (options.data.indexOf('?') >= 0)\r\n                stringData = options.data.split('?')[1];\r\n            else\r\n                stringData = options.data;\r\n        }\r\n        else {\r\n            // Should be key=value object\r\n            stringData = serializeQuery(options.data);\r\n        }\r\n        if (stringData.length) {\r\n            options.url += paramsPrefix + stringData;\r\n            if (paramsPrefix === '?')\r\n                paramsPrefix = '&';\r\n        }\r\n    }\r\n    // JSONP\r\n    if (options.dataType === 'json' && options.url.indexOf('callback=') >= 0) {\r\n        var callbackName_1 = \"jsonp_\" + (Date.now() + ((jsonpRequests += 1)));\r\n        var abortTimeout_1;\r\n        var callbackSplit = options.url.split('callback=');\r\n        var requestUrl = callbackSplit[0] + \"callback=\" + callbackName_1;\r\n        if (callbackSplit[1].indexOf('&') >= 0) {\r\n            var addVars = callbackSplit[1].split('&').filter(function (el) { return el.indexOf('=') > 0; }).join('&');\r\n            if (addVars.length > 0)\r\n                requestUrl += \"&\" + addVars;\r\n        }\r\n        // Create script\r\n        var script_1 = document.createElement('script');\r\n        script_1.type = 'text/javascript';\r\n        script_1.onerror = function onerror() {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('error', null, 'scripterror');\r\n            fireCallback('complete', null, 'scripterror');\r\n        };\r\n        script_1.src = requestUrl;\r\n        // Handler\r\n        window[callbackName_1] = function jsonpCallback(data) {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('success', data);\r\n            script_1.parentNode.removeChild(script_1);\r\n            script_1 = null;\r\n            delete window[callbackName_1];\r\n        };\r\n        document.querySelector('head').appendChild(script_1);\r\n        if (options.timeout > 0) {\r\n            abortTimeout_1 = setTimeout(function () {\r\n                script_1.parentNode.removeChild(script_1);\r\n                script_1 = null;\r\n                fireCallback('error', null, 'timeout');\r\n            }, options.timeout);\r\n        }\r\n        return void 0;\r\n    }\r\n    // Cache for GET/HEAD requests\r\n    if (method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') {\r\n        if (options.cache === false) {\r\n            options.url += paramsPrefix + \"_nocache\" + Date.now();\r\n        }\r\n    }\r\n    // Create XHR\r\n    var xhr = new XMLHttpRequest();\r\n    // Save Request URL\r\n    xhr.requestUrl = options.url;\r\n    xhr.requestParameters = options;\r\n    // Before open callback\r\n    proceedRequest = fireCallback('beforeOpen', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Open XHR\r\n    xhr.open(method, options.url, options.async, options.user, options.password);\r\n    // Create POST Data\r\n    var postData = null;\r\n    if ((method === 'POST' || method === 'PUT' || method === 'PATCH') && options.data) {\r\n        if (options.processData) {\r\n            var postDataInstances = [ArrayBuffer, Blob, Document, FormData];\r\n            // Post Data\r\n            if (postDataInstances.indexOf(options.data.constructor) >= 0) {\r\n                postData = options.data;\r\n            }\r\n            else {\r\n                // POST Headers\r\n                var boundary = \"---------------------------\" + Date.now().toString(16);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    xhr.setRequestHeader('Content-Type', \"multipart/form-data; boundary=\" + boundary);\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader('Content-Type', options.contentType);\r\n                }\r\n                postData = '';\r\n                var data = serializeQuery(options.data);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    data = data.split('&');\r\n                    var newData = [];\r\n                    for (var i = 0; i < data.length; i += 1) {\r\n                        newData.push(\"Content-Disposition: form-data; name=\\\"\" + data[i].split('=')[0] + \"\\\"\\r\\n\\r\\n\" + data[i].split('=')[1] + \"\\r\\n\");\r\n                    }\r\n                    postData = \"--\" + boundary + \"\\r\\n\" + newData.join(\"--\" + boundary + \"\\r\\n\") + \"--\" + boundary + \"--\\r\\n\";\r\n                }\r\n                else if (options.contentType === 'application/json') {\r\n                    postData = JSON.stringify(options.data);\r\n                }\r\n                else {\r\n                    postData = data;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            postData = options.data;\r\n            xhr.setRequestHeader('Content-Type', options.contentType);\r\n        }\r\n    }\r\n    // Additional headers\r\n    if (options.headers) {\r\n        Object.keys(options.headers).forEach(function (headerName) {\r\n            xhr.setRequestHeader(headerName, options.headers[headerName]);\r\n        });\r\n    }\r\n    // Check for crossDomain\r\n    if (typeof options.crossDomain === 'void 0') {\r\n        // eslint-disable-next-line\r\n        options.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(options.url) && RegExp.$2 !== window.location.host;\r\n    }\r\n    if (!options.crossDomain) {\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    }\r\n    if (options.xhrFields) {\r\n        Object.assign(xhr, options.xhrFields);\r\n    }\r\n    var xhrTimeout;\r\n    // Handle XHR\r\n    xhr.onload = function onload() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 0) {\r\n            var responseData = void 0;\r\n            if (options.dataType === 'json') {\r\n                var parseError = void 0;\r\n                try {\r\n                    responseData = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (err) {\r\n                    parseError = true;\r\n                }\r\n                if (!parseError) {\r\n                    fireCallback('success', responseData, xhr.status, xhr);\r\n                }\r\n                else {\r\n                    fireCallback('error', xhr, 'parseerror');\r\n                }\r\n            }\r\n            else {\r\n                responseData = xhr.responseType === 'text' || xhr.responseType === '' ? xhr.responseText : xhr.response;\r\n                fireCallback('success', responseData, xhr.status, xhr);\r\n            }\r\n        }\r\n        else {\r\n            fireCallback('error', xhr, xhr.status);\r\n        }\r\n        if (options.statusCode) {\r\n            if (globals.statusCode && globals.statusCode[xhr.status])\r\n                globals.statusCode[xhr.status](xhr);\r\n            if (options.statusCode[xhr.status])\r\n                options.statusCode[xhr.status](xhr);\r\n        }\r\n        fireCallback('complete', xhr, xhr.status);\r\n    };\r\n    xhr.onerror = function onerror() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        fireCallback('error', xhr, xhr.status);\r\n        fireCallback('complete', xhr, 'error');\r\n    };\r\n    // Timeout\r\n    if (options.timeout > 0) {\r\n        xhr.onabort = function onabort() {\r\n            if (xhrTimeout)\r\n                clearTimeout(xhrTimeout);\r\n        };\r\n        xhrTimeout = setTimeout(function () {\r\n            xhr.abort();\r\n            fireCallback('error', xhr, 'timeout');\r\n            fireCallback('complete', xhr, 'timeout');\r\n        }, options.timeout);\r\n    }\r\n    // Ajax start callback\r\n    proceedRequest = fireCallback('beforeSend', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Send XHR\r\n    xhr.send(postData);\r\n    // Return XHR object\r\n    return xhr;\r\n}\r\nfunction RequestShortcut(method) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    var _a = [], url = _a[0], data = _a[1], success = _a[2], error = _a[3], dataType = _a[4];\r\n    if (typeof args[1] === 'function') {\r\n        url = args[0], success = args[1], error = args[2], dataType = args[3];\r\n    }\r\n    else {\r\n        url = args[0], data = args[1], success = args[2], error = args[3], dataType = args[4];\r\n    }\r\n    [success, error].forEach(function (callback) {\r\n        if (typeof callback === 'string') {\r\n            dataType = callback;\r\n            if (callback === success)\r\n                success = void 0;\r\n            else\r\n                error = void 0;\r\n        }\r\n    });\r\n    dataType = dataType || (method === 'json' || method === 'postJSON' ? 'json' : void 0);\r\n    var requestOptions = {\r\n        url: url,\r\n        method: method === 'post' || method === 'postJSON' ? 'POST' : 'GET',\r\n        data: data,\r\n        success: success,\r\n        error: error,\r\n        dataType: dataType,\r\n    };\r\n    if (method === 'postJSON') {\r\n        Object.assign(requestOptions, {\r\n            contentType: 'application/json',\r\n            processData: false,\r\n            crossDomain: true,\r\n            data: typeof data === 'string' ? data : JSON.stringify(data),\r\n        });\r\n    }\r\n    return Request(requestOptions);\r\n}\r\nObject.assign(Request, {\r\n    get: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['get'].concat(args));\r\n    },\r\n    post: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['post'].concat(args));\r\n    },\r\n    json: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    getJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    postJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['postJSON'].concat(args));\r\n    },\r\n});\r\nRequest.setup = function setup(options) {\r\n    if (options.type && !options.method) {\r\n        Object.assign(options, { method: options.type });\r\n    }\r\n    Object.assign(globals, options);\r\n};\r\nfunction serializeQuery(params, prefix) {\r\n    var key = Object.keys(params);\r\n    for (var i = 0; i < key.length; i++) {\r\n      var value = params[key[i]];\r\n      if (params.constructor === Array)\r\n          key[i] += prefix + \"[]\";\r\n      else if (params.constructor === Object)\r\n          key[i] = (prefix ? prefix + \"[\" + key[i] + \"]\" : key[i]);\r\n\r\n      if (typeof value === 'object')\r\n          key[i] = serializeQuery(value, key[i]);\r\n      else\r\n          key[i] = key[i] + \"=\" + encodeURIComponent(value);\r\n    }\r\n    return key.join('&');\r\n}\r\n$.ajax = sf.ajax = Request;","return sf;\r\n\r\n// ===== Module End =====\r\n})));","sf.router = new function(){\r\n\tvar self = this;\r\n\tself.loading = false;\r\n\tself.enabled = false;\r\n\tself.pauseRenderOnTransition = false;\r\n\tself.currentPage = [];\r\n\tvar initialized = false;\r\n\tvar lazyRouting = false;\r\n\tvar currentRouterURL = '';\r\n\r\n\t// Should be called if not using lazy page load\r\n\tself.init = function(targetNode){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init();\r\n\t\t\t});\r\n\r\n\t\t// Run 'before' event for new page view\r\n\t\tvar temp = $('[sf-controller], [sf-page]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar name = temp[i].getAttribute('sf-page') || '';\r\n\t\t\tif(name !== '')\r\n\t\t\t\trunLocalEvent('before', name);\r\n\r\n\t\t\tif(temp[i].hasAttribute('sf-controller') === true)\r\n\t\t\t\tsf.controller.run(temp[i].getAttribute('sf-controller'));\r\n\r\n\t\t\tif(name !== '')\r\n\t\t\t\trunLocalEvent('when', name);\r\n\t\t}\r\n\r\n\t\tinitialized = true;\r\n\t\tcurrentRouterURL = window.location.pathname;\r\n\t}\r\n\r\n\tfunction popstateListener(event) {\r\n\t\t// Don't continue if the last routing was error\r\n\t\tif(routingError){\r\n\t\t\troutingError = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\troutingBack = true;\r\n\t\tself.goto(window.location.pathname);\r\n\t}\r\n\r\n\tself.enable = function(status){\r\n\t\tif(status === void 0) status = true;\r\n\t\tif(self.enabled === status) return;\r\n\t\tself.enabled = status;\r\n\r\n\t\tif(status === true){\r\n\t\t\t// Create listener for link click\r\n\t\t\t$.on(document.body, 'click', 'a[href]', self.load);\r\n\r\n\t\t\t// Create listener when navigate backward\r\n\t\t\twindow.addEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$.off(document.body, 'click', 'a[href]', self.load);\r\n\t\t\twindow.removeEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t}\r\n\r\n\tvar localEvent = {before:{}, when:{}, after:{}};\r\n\tfunction registerLocalEvent(which, name, func){\r\n\t\tif(!localEvent[which][name])\r\n\t\t\tlocalEvent[which][name] = [];\r\n\r\n\t\tlocalEvent[which][name].push(func);\r\n\t}\r\n\r\n\t// Set index with number if you want to replace old function\r\n\t// Running 'before' new page going to be displayed\r\n\tself.before = function(name, func){\r\n\t\tregisterLocalEvent('before', name, func);\r\n\t}\r\n\r\n\t// Running 'when' new page was been initialized\r\n\tself.when = function(name, func){\r\n\t\tregisterLocalEvent('when', name, func);\r\n\t}\r\n\r\n\t// Running 'after' old page is going to be removed\r\n\tself.after = function(name, func){\r\n\t\tregisterLocalEvent('after', name, func);\r\n\t}\r\n\r\n\tfunction runLocalEvent(which, name){\r\n\t\tif(which === 'before' && self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.push(name);\r\n\r\n\t\tif(which === 'after' && self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.splice(self.currentPage.indexOf(name), 1);\r\n\r\n\t\tif(localEvent[which][name]){\r\n\t\t\tfor (var i = 0; i < localEvent[which][name].length; i++) {\r\n\t\t\t\tlocalEvent[which][name][i](sf.model);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar onEvent = {\r\n\t\t'loading':[],\r\n\t\t'loaded':[],\r\n\t\t'special':[],\r\n\t\t'error':[]\r\n\t};\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\t// This will enable script evaluation before the model/controller/route\r\n\t// being reinitialized after receiving template from the server.\r\n\t// To be safe, make sure you're not directly outputing any user content\r\n\t// like user's name, posts, modifiable data from user.\r\n\tself.dynamicScript = false;\r\n\r\n\tself.lazyViewPoint = {};\r\n\t/*\r\n\t\t{\r\n\t\t\toldURlPattern:{\r\n\t\t\t\tnewURLPattern:'.viewPoint'\r\n\t\t\t}\r\n\t\t}\r\n\t*/\r\n\r\n\tself.load = function(ev){\r\n\t\tif(self.enabled !== true) return;\r\n\r\n\t\tvar elem = ev.target;\r\n\t\tif(!elem.href) return;\r\n\r\n\t\tvar attr = elem.getAttribute('href');\r\n\t\tif(attr[0] === '#') return;\r\n\t\tif(attr[0] === '@'){\r\n\t\t\telem.setAttribute('sf-router-ignore', '');\r\n\t\t\telem.setAttribute('href', attr.slice(1));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(!history.pushState || elem.hasAttribute('sf-router-ignore'))\r\n\t\t\treturn;\r\n\r\n\t\t// Make sure it's from current origin\r\n\t\tvar path = elem.href.replace(window.location.origin, '');\r\n\t\tif(path.indexOf('//') !== -1)\r\n\t\t\treturn;\r\n\r\n\t\tev.preventDefault()\r\n\t\treturn !self.goto(path);\r\n\t}\r\n\r\n\tvar RouterLoading = false;\r\n\tvar routingBack = false;\r\n\tvar routingError = false;\r\n\tself.goto = function(path, data, method){\r\n\t\tif(!method) method = 'GET';\r\n        else method = method.toUpperCase();\r\n\r\n\t\tif(!data) data = {};\r\n\r\n\t\tfor (var i = 0; i < onEvent['loading'].length; i++) {\r\n\t\t\tif(onEvent['loading'][i](path)) return;\r\n\t\t}\r\n\t\tvar oldPath = window.location.pathname;\r\n\t\tinitialized = false;\r\n\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\t\tRouterLoading = $.ajax({\r\n\t\t\turl:window.location.origin + path,\r\n\t\t\tmethod:method,\r\n            data:Object.assign(data, {\r\n                _scarlets:'.dynamic.'\r\n            }),\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\tif(initialized) return;\r\n\t\t\t\tlazyRouting = true;\r\n\r\n\t\t\t\t// Run 'loaded' event\r\n\t\t\t\tRouterLoading = false;\r\n\r\n\t\t\t\t// Find special data\r\n\t\t\t\tvar regex = RegExp('<!-- SF-Special:(.*?)-->', 'gm');\r\n\t\t\t\tvar special = regex.exec(data);\r\n\t\t\t\tif(special && special.length !== 1){\r\n\t\t\t\t\tspecial = special[1].split('--|&>').join('-->');\r\n\t\t\t\t\tspecial = JSON.parse(special);\r\n\r\n\t\t\t\t\tif(!isEmptyObject(special)){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['special'].length; i++) {\r\n\t\t\t\t\t\t\tif(onEvent['special'][i](special)) return;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DOMReference = false;\r\n\t\t\t\tvar foundAction = function(ref){\r\n\t\t\t\t\tDOMReference = $.findOne(ref);\r\n\r\n\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\tvar last = $.findOne('[sf-page]', DOMReference);\r\n\t\t\t\t\trunLocalEvent('after', last ? last.getAttribute('sf-page') : '/');\r\n\r\n\t\t\t\t\t// Redefine title if exist\r\n\t\t\t\t\tif(special && special.title)\r\n\t\t\t\t\t\t$('head > title').innerHTML = special.title;\r\n\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tfor(var oldURL in self.lazyViewPoint){\r\n\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\tfor(var newURL in self.lazyViewPoint[oldURL]){\r\n\t\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\t\tfoundAction(self.lazyViewPoint[oldURL][newURL]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(found) break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When the view point was not found\r\n\t\t\t\tif(!found){\r\n\t\t\t\t\t// Use fallback if exist\r\n\t\t\t\t\tif(sf.router.lazyViewPoint[\"@default\"])\r\n\t\t\t\t\t\tfoundAction(sf.router.lazyViewPoint[\"@default\"]);\r\n\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\t\t\tonEvent['error'][i]('sf.router.lazyViewPoint[\"'+oldURL+'\"][\"'+newURL+'\"] was not found');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Run 'before' event for new page view\r\n\t\t\t\tif(!DOMReference) DOMReference = document.body;\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', 'none');\r\n\r\n\t\t\t\t// Let page script running first\r\n\t\t\t\tDOMReference.innerHTML = data;\r\n\t\t\t\tif(self.dynamicScript !== false){\r\n\t\t\t\t\tvar scripts = DOMReference.getElementsByTagName('script');\r\n\t\t\t\t\t\tfor (var i = 0; i < scripts.length; i++) {\r\n\t\t\t\t\t\t    routerEval(scripts[i].text);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Before model binding\r\n\t\t\t\tvar temp = $('[sf-page]', DOMReference);\r\n\t\t\t\tvar sfPage = [];\r\n\t\t\t\ttry{\r\n\t\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\t\tvar sfp = temp[i].getAttribute('sf-page');\r\n\t\t\t\t\t\tsfPage.push(sfp);\r\n\t\t\t\t\t\trunLocalEvent('before', sfp);\r\n\t\t\t\t\t}\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\tconsole.error(e, \"Try to use 'sf.router.when' if you want to execute script after model and the view was initialized.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When the model was binded with the view\r\n\t\t\t\tsf.internal.afterModelBinding = function(){\r\n\t\t\t\t\tfor (var i = 0; i < sfPage.length; i++) {\r\n\t\t\t\t\t\trunLocalEvent('when', temp[i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsf.internal.afterModelBinding = undefined;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Parse the DOM data binding\r\n\t\t\t\tsf.model.init(DOMReference);\r\n\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', '');\r\n\r\n\t\t\t\trouterLoaded(currentRouterURL, path, DOMReference);\r\n\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tlazyRouting = false;\r\n\r\n\t\t\t\tcurrentRouterURL = path;\r\n\t\t\t\troutingError = false;\r\n\t\t\t},\r\n\t\t\terror:function(xhr, data){\r\n\t\t\t\troutingError = true;\r\n\t\t\t\tif(xhr.aborted) return;\r\n\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\tonEvent['error'][i](xhr.status, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Back on error\r\n\t\t\t\twindow.history.back();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!routingBack)\r\n\t\t\twindow.history.pushState(null, \"\", path);\r\n\r\n\t\troutingBack = false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Trigger loaded event\r\n\tfunction routerLoaded(currentRouterURL, path, data){\r\n\t\tfor (var i = 0; i < onEvent['loaded'].length; i++) {\r\n\t\t\tonEvent['loaded'][i](currentRouterURL, path, data);\r\n\t\t}\r\n\t}\r\n};","sf.internal.virtual_scroll = new function(){\r\n\tvar self = this;\r\n\tvar styleInitialized = false;\r\n\tvar scrollingByScript = false;\r\n\r\n\t// before and after\r\n\tself.prepareCount = 4; // 4, 8, 12, 16, ...\r\n\r\n\tself.handle = function(list, targetNode, parentNode){\r\n\t\tif(!styleInitialized){\r\n\t\t\tinitStyles();\r\n\t\t\tstyleInitialized = true;\r\n\t\t}\r\n\r\n\t\tvar dynamicList = false;\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvirtual.reset = function(reinitOnly){\r\n\t\t\tvirtual.DOMCursor = 0; // cursor of first element in DOM tree as a cursor\r\n\r\n\t\t\tvirtual.bounding.ceiling = -1;\r\n\t\t\tvirtual.bounding.floor = 0;\r\n\r\n\t\t\tvirtual.vCursor.ceiling = null; // for forward direction\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.firstElementChild; // for backward direction\r\n\r\n\t\t\tvirtual.bounding.initial = virtual.dCursor.ceiling.offsetTop;\r\n\t\t\trefreshScrollBounding(0, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.reinitCursor = function(){\r\n\t\t\tvirtual.vCursor.ceiling = virtual.dom.children[virtual.DOMCursor - 1] || null;\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.children[virtual.DOMCursor] || null;\r\n\t\t}\r\n\r\n\t\tvirtual.reinitScroll = function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.elements = function(){\r\n\t\t\treturn obtainElements(list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.dCursor = { // DOM Cursor\r\n\t\t\tceiling:parentNode.querySelector('.virtual-spacer.ceiling'),\r\n\t\t\tfloor:parentNode.querySelector('.virtual-spacer.floor')\r\n\t\t};\r\n\r\n\t\tvirtual.bounding = {};\r\n\t\tvirtual.vCursor = {};\r\n\r\n\t\tvirtual.reset();\r\n\t\tvirtual.targetNode = parentNode;\r\n\t\tvirtual.scrollHeight = virtual.dCursor.floor.offsetTop - virtual.bounding.initial;\r\n\r\n\t\tvar scroller = parentNode;\r\n\t\tvirtual.destroy = function(){\r\n\t\t\t$.off(scroller, 'scroll');\r\n\t\t\t$.off(parentNode, 'mousedown mouseup');\r\n\t\t\tvirtual.dom.innerHTML = '';\r\n\t\t\toffElementResize(parentNode);\r\n\r\n\t\t\tdelete list.$virtual;\r\n\t\t}\r\n\r\n\t\tvirtual.resetViewport = function(){\r\n\t\t\tvirtual.visibleLength = Math.floor(scroller.clientHeight / virtual.scrollHeight);\r\n\t\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\t\tif(virtual.preparedLength < 18)\r\n\t\t\t\tvirtual.preparedLength = 18;\r\n\t\t}\r\n\r\n\t\tvar pendingFunction = sf.internal.afterModelBinding;\r\n\t\tsf.internal.afterModelBinding = undefined;\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tif(list.$virtual === undefined) return; // Somewhat it's uninitialized\r\n\r\n\t\t\tscroller = parentNode;\r\n\r\n\t\t\tvar length = parentNode.getAttribute('scroll-parent-index') || 0;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tscroller = scroller.parentElement;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.resetViewport();\r\n\r\n\t\t\tif(parentNode.classList.contains('sf-list-dynamic')){\r\n\t\t\t\tdynamicList = true;\r\n\t\t\t\tdynamicHeight(list, targetNode, parentNode, scroller);\r\n\t\t\t}\r\n\t\t\telse staticHeight(list, targetNode, parentNode, scroller);\r\n\r\n\t\t\tpendingFunction();\r\n\t\t\tpendingFunction = null;\r\n\t\t}, 500);\r\n\t}\r\n\r\n\t// Recommended for a list that have different element height\r\n\tfunction dynamicHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\r\n\t\t\t// Reset virtual spacer height\r\n\t\t\tceilingHeight = 0;\r\n\t\t\tfloorHeight = 0;\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller);\r\n\t\t\tfillViewport();\r\n\t\t}\r\n\r\n\t\t// Insert some element until reach visible height\r\n\t\tfillViewport();\r\n\r\n\t\tvirtual.visibleLength = parentNode.childElementCount - 2;\r\n\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\tif(virtual.preparedLength < 18)\r\n\t\t\tvirtual.preparedLength = 18;\r\n\r\n\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\tvar temp = vCursor.floor;\r\n\t\t\tif(temp === null) break;\r\n\r\n\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t}\r\n\t\tvirtual.DOMCursor = 0;\r\n\r\n\t\tvar ceilingHeight = 0;\r\n\t\tvar floorHeight = 0;\r\n\t\tfunction previousCeiling(){\r\n\t\t\tvar temp = null;\r\n\t\t\tvar resetCeiling = false;\r\n\r\n\t\t\t// Add some element on the ceiling\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\ttemp = virtual.dom.lastElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.ceiling = temp.previousElementSibling;\r\n\t\t\t\tvirtual.DOMCursor--;\r\n\r\n\t\t\t\tceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tif(ceilingHeight > 0)\r\n\t\t\t\t\tceilingHeight -= getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(virtual.DOMCursor < self.prepareCount && !resetCeiling){\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\tresetCeiling = true;\r\n\t\t\t\t\ttemp = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(ceilingHeight < 0 || temp === null)\r\n\t\t\t\tceilingHeight = 0;\r\n\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\t// Remove some element on the floor\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = floor.previousElementSibling;\r\n\t\t\t\tfloorHeight += getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tvCursor.floor = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.floor === null)\r\n\t\t\t\tvCursor.ceiling = virtual.dom.lastElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tfunction fillViewport(){\r\n\t\t\t// Insert some element depend on prepared length\r\n\t\t\tvar length = virtual.preparedLength - (parentNode.childElementCount - 2);\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\ttemp = virtual.dom.firstElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction nextFloor(){\r\n\t\t\tvar temp = null;\r\n\t\t\tfillViewport();\r\n\r\n\t\t\tif(vCursor.floor !== null){\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\t// Add extra element based on prepare count\r\n\t\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\t\ttemp = vCursor.floor;\r\n\t\t\t\t\tif(temp === null) break;\r\n\r\n\t\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\t\tif(floorHeight > 0)\r\n\t\t\t\t\t\tfloorHeight -= getAbsoluteHeight(temp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(floorHeight < 0 || temp === null)\r\n\t\t\t\tfloorHeight = 0;\r\n\r\n\t\t\t// Remove some element on the ceiling\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\t\t\t\tceilingHeight += getAbsoluteHeight(temp);\r\n\t\t\t\tvirtual.DOMCursor++;\r\n\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\telse vCursor.ceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tvCursor.ceiling = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\t\trefreshScrollBounding(0, bounding, list, parentNode);\r\n\r\n\t\tif(virtual.callback_ !== void 0){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript) return;\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tif(scroller.scrollTop < bounding.ceiling){\r\n\t\t\t\t// console.log('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tpreviousCeiling();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\telse if(scroller.scrollTop > bounding.floor){\r\n\t\t\t\t// console.log('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tnextFloor();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\tif(virtual.callback !== void 0 && list.length !== 0){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null &&\r\n\t\t\t\t\tscroller.scrollTop + scroller.clientHeight === scroller.scrollHeight\r\n\t\t\t\t){\r\n\t\t\t\t\tvirtual.callback.hitFloor(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null && scroller.scrollTop === 0){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_ && callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t\tif(scroller.scrollTop === 0 && ceiling.offsetHeight > 10)\r\n\t\t\t\tvirtual.scrollTo(0);\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\t\tonElementResize(parentNode, function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t});\r\n\t}\r\n\r\n\t// Recommended for a list that have similar element height\r\n\tfunction staticHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\r\n\t\t// Insert visible element to dom tree\r\n\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\tif(virtual.dom.firstElementChild === null)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', virtual.dom.firstElementChild);\r\n\t\t}\r\n\r\n\t\tvirtual.refreshVirtualSpacer = refreshVirtualSpacer;\r\n\r\n\t\tfunction refreshVirtualSpacer(cursor){\r\n\t\t\tif(cursor >= self.prepareCount){\r\n\t\t\t\tceiling.style.height = (cursor - self.prepareCount) * virtual.scrollHeight + 'px';\r\n\t\t\t\tfloor.style.height = (list.length - virtual.preparedLength - cursor) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tceiling.style.height = cursor * virtual.scrollHeight + 'px'; //'0px';\r\n\t\t\t\tvar count = (list.length - virtual.preparedLength);\r\n\t\t\t\tfloor.style.height = (count || 0) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\r\n\t\trefreshVirtualSpacer(0);\r\n\t\trefreshScrollBounding(self.prepareCount, bounding, list, parentNode);\r\n\t\tbounding.ceiling = -1;\r\n\r\n\t\tvirtual.offsetTo = function(index){\r\n\t\t\treturn index * virtual.scrollHeight + ceiling.offsetTop;\r\n\t\t}\r\n\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tif(virtual.callback_ !== void 0){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tvar fromCeiling = true;\r\n\t\tvar scrollFocused = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript || scroller.scrollTop >= bounding.ceiling && scroller.scrollTop <= bounding.floor){\r\n\t\t\t\t// Fix chrome scroll anchoring bugs when scrolling at corner\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tif(scroller.scrollTop === 0 || scroller.scrollTop === scroller.scrollHeight - scroller.clientHeight){\r\n\t\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar cursor = Math.floor(scroller.scrollTop / virtual.scrollHeight);\r\n\t\t\tif(cursor + virtual.preparedLength > list.length)\r\n\t\t\t\tcursor = list.length - virtual.preparedLength;\r\n\r\n\t\t\tif(fromCeiling){\r\n\t\t\t\tif(cursor < self.prepareCount*2)\r\n\t\t\t\t\tcursor -= self.prepareCount;\r\n\r\n\t\t\t\t// Fix chrome scroll anchoring bugs\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t}\r\n\t\t\t\tfromCeiling = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cursor < self.prepareCount){\r\n\t\t\t\tcursor = 0;\r\n\t\t\t\tfromCeiling = true;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tvar changes = cursor - virtual.DOMCursor;\r\n\t\t\tif(cursor + changes >= list.length)\r\n\t\t\t\tchanges = cursor + changes - list.length;\r\n\r\n\t\t\tif(changes === 0){ // This should be fixed to improve performance and future bugs\r\n\t\t\t\t//console.warn(\"No changes (The scroll bounding is not correct)\");\r\n\t\t\t\tupdating = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.DOMCursor = cursor;\r\n\r\n\t\t\t// console.log(cursor, changes, bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\t\t\tmoveElementCursor(changes, list);\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\t\t\trefreshScrollBounding(cursor, bounding, list, parentNode);\r\n\t\t\t// console.log('a', bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\r\n\t\t\tif(virtual.callback !== void 0 && list.length !== 0){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null){\r\n\t\t\t\t\tvirtual.callback.hitFloor(cursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(cursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_ && callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\r\n\t\t// For preventing scroll jump if scrolling over than viewport\r\n\t\tif(scroller === parentNode && navigator.userAgent.indexOf('Chrom') !== -1){\r\n\t\t\t$.on(parentNode, 'mousedown', function(){\r\n\t\t\t\tscrollFocused = true;\r\n\t\t\t});\r\n\t\t\t$.on(parentNode, 'mouseup', function(){\r\n\t\t\t\tscrollFocused = false;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction refreshScrollBounding(cursor, bounding, list, parentNode){\r\n\t\tvar temp = Math.floor(self.prepareCount / 2); // half of element preparation\r\n\t\tif(cursor < self.prepareCount){\r\n\t\t\tbounding.ceiling = -1;\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount * 2 + 1];\r\n\r\n\t\t\tif(bounding.floor !== void 0)\r\n\t\t\t\tbounding.floor = bounding.floor.offsetTop;\r\n\t\t\telse bounding.floor = parentNode.lastElementChild.offsetTop + 1000;\r\n\r\n\t\t\tbounding.floor -= bounding.initial;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if(parentNode.children[temp + 1] !== void 0)\r\n\t\t\t\tbounding.ceiling = parentNode.children[temp + 1].offsetTop; // -2 element\r\n\r\n\t\tif(list.$virtual.preparedLength !== void 0 && cursor >= list.length - list.$virtual.preparedLength)\r\n\t\t\tbounding.floor = list.$virtual.dCursor.floor.offsetTop + list.$virtual.scrollHeight*2;\r\n\t\telse{\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount + 3].offsetTop; // +2 element\r\n\r\n\t\t\tif(parentNode.hasAttribute('scroll-reduce-floor')){\r\n\t\t\t\tbounding.floor -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t\tbounding.ceiling -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbounding.ceiling -= bounding.initial;\r\n\t\tbounding.floor -= bounding.initial;// scrollHeight - clientHeight\r\n\t}\r\n\r\n\tfunction moveElementCursor(changes, list){\r\n\t\tvar vDOM = list.$virtual.dom;\r\n\t\tvar vCursor = list.$virtual.vCursor;\r\n\t\tvar dCursor = list.$virtual.dCursor;\r\n\r\n\t\tif(changes > 0){ // forward\r\n\t\t\tvar ref = 0;\r\n\r\n\t\t\t// Select from virtual ceiling cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tref = vDOM.firstElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.ceiling.nextElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the ceiling to vDom\r\n\t\t\tfor (var i = changes; i > 0; i--) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.ceiling === null){\r\n\t\t\t\t\tvCursor.ceiling = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('afterBegin', vCursor.ceiling);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t\t\tvCursor.ceiling = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\t\t}\r\n\t\telse if(changes < 0){ // backward\r\n\t\t\tvar ref = 0;\r\n\t\t\tchanges = -changes;\r\n\r\n\t\t\t// Select from virtual floor cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tref = vDOM.lastElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.floor.previousElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the floor to vDom\r\n\t\t\tfor (var i = 0; i < changes; i++) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvCursor.floor = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('beforeEnd', vCursor.floor);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t\t\tvCursor.floor = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scrollTo(index, list, prepareCount, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar reduce = 0;\r\n\r\n\t\tif(index >= list.length - virtual.preparedLength){\r\n\t\t\treduce -= prepareCount;\r\n\t\t\tindex = list.length - virtual.preparedLength;\r\n\t\t}\r\n\r\n\t\tif(index - virtual.DOMCursor === 0 || index >= list.length) return;\r\n\r\n\t\tscrollingByScript = true;\r\n\r\n\t\t// Already on DOM tree\r\n\t\tif((virtual.DOMCursor === 0 && index < prepareCount + prepareCount/2) ||\r\n\t\t\t(virtual.DOMCursor + prepareCount/2 > index\r\n\t\t\t&& virtual.DOMCursor + prepareCount < index))\r\n\t\t\tscroller.scrollTop = parentNode.children[index - virtual.DOMCursor + 1].offsetTop;\r\n\r\n\t\t// Move cursor\r\n\t\telse {\r\n\t\t\tvar temp = null;\r\n\t\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\t\tvar floor = virtual.dCursor.floor;\r\n\t\t\tvar vCursor = virtual.vCursor;\r\n\r\n\t\t\t// DOM tree to virtual DOM\r\n\t\t\tvar length = parentNode.childElementCount - 2;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\r\n\t\t\t\t\tif(i === length-1)\r\n\t\t\t\t\t\tvCursor.floor = temp;\r\n\t\t\t\t}\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(index >= prepareCount){\r\n\t\t\t\tif(index < list.length - virtual.preparedLength)\r\n\t\t\t\t\tindex -= prepareCount;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treduce = prepareCount - index;\r\n\t\t\t\tvirtual.DOMCursor = index = 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\r\n\t\t\t// Virtual DOM to DOM tree\r\n\t\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\t\ttemp = virtual.dom.children[index];\r\n\t\t\t\tif(temp === void 0) break;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t\tvirtual.DOMCursor = index;\r\n\r\n\t\t\tvCursor.floor = virtual.dom.children[index] || null;\r\n\t\t\tvCursor.ceiling = vCursor.floor ? vCursor.floor.previousElementSibling : null;\r\n\r\n\t\t\tif(list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\tlist.$virtual.refreshVirtualSpacer(index);\r\n\r\n\t\t\trefreshScrollBounding(index, virtual.bounding, list, parentNode);\r\n\r\n\t\t\ttemp = parentNode.children[prepareCount - reduce + 1];\r\n\t\r\n\t\t\tif(temp !== void 0)\r\n\t\t\t\tscroller.scrollTop = temp.offsetTop - scroller.offsetTop;\r\n\t\t}\r\n\r\n\t\tscrollingByScript = false;\r\n\t}\r\n\r\n\tfunction removeUserScrollFocus(parentNode){\r\n\t\tparentNode.style.overflow = 'hidden';\r\n\t\tsetTimeout(function(){\r\n\t\t\tparentNode.style.overflow = '';\r\n\t\t}, 50);\r\n\t}\r\n\r\n\tfunction getAbsoluteHeight(el){\r\n\t  var styles = window.getComputedStyle(el);\r\n\t  var margin = parseInt(styles['marginTop']) + parseInt(styles['marginBottom']);\r\n\t  return el.offsetHeight + margin || 0;\r\n\t}\r\n\r\n\tfunction obtainElements(list, parentNode){\r\n\t\tvar exist = [];\r\n\t\tvar temp = void 0;\r\n\r\n\t\tvar length = list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[i];\r\n\t\t\tif(temp === void 0) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = parentNode.childElementCount - 2;\r\n\t\tfor (var i = 1; i <= length; i++) {\r\n\t\t\ttemp = parentNode.children[i];\r\n\t\t\tif(temp === void 0) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\t\t\r\n\t\t// Get elements length\r\n\t\tvar elementLength = list.$virtual.dom.childElementCount + length;\r\n\r\n\t\tlength = elementLength - length - list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[list.$virtual.DOMCursor + i];\r\n\t\t\tif(temp === void 0) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\treturn exist;\r\n\t}\r\n\r\n\tfunction refresh(force, list, prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer){\r\n\t\tvar cursor = list.$virtual.DOMCursor;\r\n\t\tvar additionalScroll = 0;\r\n\r\n\t\t// Find nearest cursor for current view position\r\n\t\tif(force){\r\n\t\t\tvar i = -1;\r\n\t\t\tvar length = list.$virtual.preparedLength;\r\n\r\n\t\t\tdo{\r\n\t\t\t\ti++;\r\n\t\t\t} while(i < length && parentNode.children[i].offsetTop < scroller.scrollTop);\r\n\r\n\t\t\tcursor = cursor + i;\r\n\t\t\tif(cursor > 0) cursor -= 1;\r\n\r\n\t\t\tadditionalScroll = scroller.scrollTop - parentNode.children[i].offsetTop;\r\n\t\t}\r\n\r\n\t\t// Force move cursor if element in the DOM tree was overloaded\r\n\t\tif(force || parentNode.childElementCount - 2 > list.$virtual.preparedLength){\r\n\t\t\tlist.$virtual.DOMCursor = list.length;\r\n\t\t\tvar moveTo = cursor;\r\n\t\t\tif(!force)\r\n\t\t\t\tmoveTo = cursor <= prepareCount ? cursor : (cursor + prepareCount);\r\n\r\n\t\t\tscrollTo(moveTo,\r\n\t\t\t\tlist,\r\n\t\t\t\tprepareCount,\r\n\t\t\t\tparentNode,\r\n\t\t\t\tscroller\r\n\t\t\t);\r\n\r\n\t\t\tscroller.scrollTop += additionalScroll;\r\n\t\t}\r\n\r\n\t\tif(refreshVirtualSpacer)\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\r\n\t\tif(checkCursorPosition)\r\n\t\t\tcheckCursorPosition();\r\n\r\n\t\trefreshScrollBounding(cursor, list.$virtual.bounding, list, parentNode);\r\n\t}\r\n\r\n\tvar _onElementResize = [];\r\n\tvar _onElementResize_timer = -1;\r\n\tfunction onElementResize(parentNode, callback){\r\n\t\tif(_onElementResize_timer === -1){\r\n\t\t\t_onElementResize_timer = setInterval(function(){\r\n\t\t\t\tvar temp = null;\r\n\t\t\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\t\t\ttemp = _onElementResize[i];\r\n\r\n\t\t\t\t\t// Check resize\r\n\t\t\t\t\tif(temp.element.scrollHeight === temp.height\r\n\t\t\t\t\t\t|| temp.element.scrollWidth === temp.width)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t// Check if it's removed from DOM\r\n\t\t\t\t\tif(temp.element.parentElement === null){\r\n\t\t\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.callback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(_onElementResize.length === 0){\r\n\t\t\t\t\tclearInterval(_onElementResize_timer);\r\n\t\t\t\t\t_onElementResize_timer = -1;\r\n\t\t\t\t}\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\r\n\t\t_onElementResize.push({\r\n\t\t\telement:parentNode,\r\n\t\t\tcallback:callback,\r\n\t\t\theight:parentNode.scrollHeight,\r\n\t\t\twidth:parentNode.scrollWidth\r\n\t\t});\r\n\t}\r\n\r\n\tfunction offElementResize(parentNode){\r\n\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\tif(_onElementResize[i].element === parentNode)\r\n\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Interval will be cleared when the array is empty\r\n\t}\r\n\r\n\tfunction initStyles(){\r\n\t\tvar style = document.getElementById('sf-styles');\r\n\r\n\t\tif(!style){\r\n\t\t\tstyle = document.createElement('style');\r\n\t\t\tstyle.id = 'sf-styles';\r\n        \tdocument.head.appendChild(style);\r\n\t\t}\r\n\r\n\t\tstyle.sheet.insertRule(\r\n\t\t'.sf-virtual-list .virtual-spacer{'+\r\n            'visibility: hidden;'+\r\n            'position: relative;'+\r\n            'height: 1px;'+\r\n            'transform-origin: 0 0;'+\r\n            'width: 1px;'+\r\n            'margin: 0;'+\r\n            'padding: 0;'+\r\n            'background: none;'+\r\n            'border: none;'+\r\n            'box-shadow: none;'+\r\n         '}', style.sheet.cssRules.length);\r\n\t}\r\n};"]}