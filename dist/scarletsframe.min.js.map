{"version":3,"sources":["sf-a_init.js","sf-a_polyfill.js","sf-dom.js","sf-loader.js","sf-component.js","sf-model.js","sf-api.js","sf-controller.js","sf-e-ajax.js","sf-z_end.js","sf-router.js","sf-virtual_scroll.js"],"names":["global","factory","routerEval","code","eval","exports","module","sf","window","this","document","internal","stuff","constructor","Function","loader","onFinish","apply","arguments","tagName","model","root","controller","modelName","regex","getQuotes","validFunctionCall","strictVar","escapeHTML","uniqueDataParser","dataParser","arrayItemsObserve","allowedFunctionEval","for","if","while","_content_.take","console.log","avoidQuotes","str","func","noReturn","temp","es","replace","full","push","length","i","isEmptyObject","obj","key","compareObject","obj1","obj2","hiddenProperty","property","value","Object","defineProperty","enumerable","configurable","deepProperty","path","capitalizeLetters","name","toUpperCase","slice","join","assign","target","varArgs","TypeError","to","index","nextSource","nextKey","prototype","hasOwnProperty","call","writable","console","group","groupCollapsed","groupEnd","Element","remove","CharacterData","DocumentType","forEach","item","parentNode","removeChild","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","querySelectorAll","NodeList","callback","thisArg","location","origin","protocol","hostname","port","values","res","setPrototypeOf","proto","__proto__","Reflect_Construct","Reflect","construct","Parent","args","Class","a","instance","bind","_setPrototypeOf","dom","selector","context","parseElement","String","$","self","findOne","querySelector","parent","element","closest","parentElement","prevAll","isNext","result","findNodes","nextSibling","previousSibling","nextAll","on","event","once","tempCallback","ev","addEventListener","capture","sf$eventListener","off","events","split","ref","removeEventListener","splice","animateCSS","animationName","duration","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","style","webkitAnimationDuration","animationDuration","list","classList","add","setTimeout","emptyDOM","div","createElement","ul","tbody","tr","table","select","html","returnNode","tempDOM","indexOf","textContent","insertAdjacentHTML","escapeText","text","innerHTML","elements","documentElement","domReady","body","haveSymbol","getSelector","childIndexes","untilElement","names","id","test","unshift","e","array","substr","childNodes","loadedContent","totalContent","DOMWasLoaded","DOMReady","turnedOff","whenDOMReady","whenDOMLoaded","whenProgress","onProgress","f","css","rel","href","head","appendChild","js","type","async","src","warn","isQueued","domLoadEvent","queuePreprocess","domStateEvent","readyState","error","resourceWaitTimer","setInterval","waitResources","clearInterval","listener","keys","modelPending","undefined","scope","root_","init","router","component","registered","available","bases","extend","pending","defineComponent","base","outerHTML","triggerEvent","componentInit","newID","from","setAttribute","sf$component","sf$componentFrom","new","$item","isCreated","retriggered","hasAttribute","newElement","cloneNode","newObj","Array","n","firstElementChild","destroy","DOMNodeRemoved","HTMLElement","customElements","HTMLElement_wrap","Wrapper","getPrototypeOf","create","connectedCallback","define","err","run","bindingEnabled","processingElement","trimIndentation","indent","trim","RegExp","bracketMatch","chackValidFunctionCall","localEval","script","_model_","_modelScope","_content_","preventExecution","tempScript","check_","exec","lastIndex","log","_result_","_evaled_","onclick","escapeEscapedQuote","unescapeEscapedQuote","elseIfHandle","else_","scopes","elseIf","elseValue","currentElement","previousElementSibling","getAttribute","$virtual","DOMCursor","modelKeys","modelRef","templateParser_regex","REF_DIRECT","REF_IF","REF_EXEC","templateExec","parse","atIndex","parsed","data","JSON","stringify","templateParser","template","original","addresses","changesReference","pendingInsert","current","address","nodeType","refA","direct","match","cRef","dynamicFlag","parse_index","startFlag","attributes","refB","isValueInput","attribute","removeAttribute","sf$elementReferences","tDOM","insertBefore","syntheticCache","sf$cache","cache","modelRef_array","syntheticTemplate","changes","modelReference","newData","checkRelatedChanges","parseIndex","found","changes_","haveChanges","ref_","sf$haveChilds","sf$childRoot","reverse","currentDOM","notExist","isEqualNode","replaceChild","mask","runEval","preParsedReference","scopeMask","itemMask","preParsed","lastParsedIndex","prepared","actual","temp_","matched","exist","charCodeAt","take","passVar","currentIndex","strDeclare","firstTime","check","VarPass_","VarPass","s1","obtained","val","findElse","pop","shift","condition","bindArray","propertyName","targetNode","editProperty","refreshTimer","parentChilds","children","isKeyed","contains","eventVar","processElement","options","other","count","vEndRange","preparedLength","spacer","lastElementChild","height","reset","clearTimeout","reinitScroll","overflow","vDOM","theParent","update","index_a","other_sibling","other_parent","oldChild","referenceNode","vCursor","floor","insertAdjacentElement","currentEl","currentRemoved","startRemove","refreshVirtualSpacer","propertyProxy","subject","lastLength","reinitCursor","o","resetViewport","matchLeft","refresh","real","limit","callback_","var","virtual_scroll","handle","scroller","findScrollerElement","addScrollerStyle","needle","elRef","getElement","process","content","parentNode_","elem","hardRefresh","softRefresh","virtualChilds","childElement","childElementCount","loopParser","method","items","extractPreprocess","sf$bindedKey","initBindingInformation","get","set","callInputListener","v2m","newValue1","newValue2","old","inputBoundRunning","inputTextBound","fromSFFramework","viewInputted","typeData","Number","newValue","sfModel","sfBounded","inputFilesBound","files","inputCheckBoxBound","checked","Boolean","inputSelectBound","multiple","selectedOptions","assignElementData","arrayValue","selected","checkbox","inputBoundRun","Event","dispatchEvent","triggerInputEvent","elementBoundChanges","oneWay","toLowerCase","modelToViewBinding","bindInput","modelScope","alreadyInitialized","repeatedListBinding","queued","controller_","ceiling","after","nextElementSibling","before","enabled","sfPage","sfp","routerLocalEvent","afterModelBinding","parsePreprocess","isScan","removeModelBinding","modelFrom","components","everyRemovedNodes","nodes","MutationObserver","observe","everyRecords","record","removedNodes","records","childList","subtree","bindedKey","getOwnPropertyDescriptor","elementBind","input","objValue","getAssigner","m2v","out","newValue3","dcBracket","bindElement","onChanges","properties","backup","copy","restore","addressed","addressAttributes","currentNode","attrs","indexes","addressStart","commentFlag","flag","createComment","textNode","createTextNode","search","extract","sort","b","checkList","full_","match_","findModelProperty","asArray","enclosedHTMLParse","excludes","extracting","nodeName","enclosing","enclosed","nodeValue","modelElement","attr","API","url","success","complete","accessToken","req","dataType","contentType","onSuccess","xhr","status","onError","_method","access_token","ajax","post","delete","put","active","bindedList","parentEl","bindedListIndex","listenSFClick","script_","method_","preventDefault","scope_","globals","jsonpRequests","Request","requestOptions","globalsNoCallbacks","callbackName","defaults","toString","user","password","headers","xhrFields","statusCode","processData","timeout","fireCallback","globalCallbackValue","optionCallbackValue","_i","paramsPrefix","stringData","serializeQuery","abortTimeout_1","callbackName_1","Date","now","callbackSplit","requestUrl","addVars","filter","el","script_1","onerror","XMLHttpRequest","requestParameters","open","xhrTimeout","postData","ArrayBuffer","Blob","Document","FormData","boundary","setRequestHeader","headerName","crossDomain","$2","host","onload","responseData","parseError","responseText","responseType","response","onabort","abort","send","RequestShortcut","_a","params","prefix","encodeURIComponent","concat","json","getJSON","postJSON","setup","loading","pauseRenderOnTransition","currentPage","mode","initialized","currentRouterURL","gEval","popstateListener","routingError","routingBack","goto","pathname","runLocalEvent","enable","load","localEvent","when","registerLocalEvent","which","onEvent","loaded","special","dynamicScript","lazyViewPoint","history","pushState","RouterLoading","_scarlets","DOMReference","foundAction","last","title","oldURL","newURL","scripts","getElementsByTagName","routerLoaded","aborted","back","scrollingByScript","refreshScrollBounding","cursor","bounding","Math","prepareCount","offsetTop","initial","dCursor","scrollHeight","scrollTo","virtual","reduce","index_","scrollTop","insertCount","removeUserScrollFocus","getAbsoluteHeight","styles","getComputedStyle","margin","parseInt","offsetHeight","force","checkCursorPosition","additionalScroll","moveTo","reinitOnly","elementLength","obtainElements","_onElementResize","offElementResize","visibleLength","clientHeight","pendingFunction","ceilingHeight","floorHeight","fillViewport","updating","resetCeiling","previousCeiling","nextFloor","hitFloor","hitCeiling","_onElementResize_timer","scrollWidth","width","onElementResize","dynamicHeight","offsetTo","fromCeiling","scrollFocused","moveElementCursor","navigator","userAgent","staticHeight","styleInitialized","getElementById","sheet","insertRule","cssRules","isScroller"],"mappings":"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","file":"scarletsframe.min.js","sourcesContent":["(function(global, factory){\r\n  // Dynamic script when using router to load template\r\n  // Feature is disabled by default\r\n  function routerEval(code){eval(code)}\r\n\r\n  if(typeof exports === 'object' && typeof module !== 'void 0') module.exports = factory(global, routerEval);\r\n  else global.sf = factory(global, routerEval);\r\n}(typeof window !== \"void 0\" ? window : this, (function(window, routerEval){'use strict';\r\nif(typeof document === void 0)\r\n\tdocument = window.document;\r\n// ===== Module Init =====\r\nvar internal = {};\r\n\r\nvar sf = function(stuff){\r\n\tif(stuff.constructor === Function)\r\n\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\r\n\t// If it's Node type\r\n\tif(stuff.tagName !== void 0)\r\n\t\treturn sf.model.root[sf.controller.modelName(stuff)];\r\n};\r\n\r\nsf.internal = {};\r\nsf.regex = {\r\n\tgetQuotes:/(['\"])(?:\\1|[\\s\\S]*?[^\\\\]\\1)/g,\r\n\tvalidFunctionCall:/[a-zA-Z0-9 \\]\\$\\)]/,\r\n\tstrictVar:'(?=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )',\r\n\tescapeHTML:/(?!&#.*?;)[\\u00A0-\\u9999<>\\&]/gm,\r\n\r\n\tuniqueDataParser:/{{((@|#[\\w])[\\s\\S]*?)}}/g,\r\n\tdataParser:/{{([^@%][\\s\\S]*?)}}/g,\r\n\r\n\tarrayItemsObserve:/\\b_model_\\.([a-zA-Z0-9.['\\]]+)(?:$|[^'\\]])/g,\r\n};\r\n\r\nvar allowedFunctionEval = {'for':true, 'if':true, 'while':true, '_content_.take':true, 'console.log':true};\r\n\r\nfunction avoidQuotes(str, func, noReturn){\r\n\tvar temp = [];\r\n\tvar es = '<%$@>';\r\n\r\n\tif(noReturn !== void 0){\r\n\t\tfunc(str.replace(sf.regex.getQuotes, '<%$@>'));\r\n\t\treturn;\r\n\t}\r\n\r\n\tstr = str.replace(sf.regex.getQuotes, function(full){\r\n\t\ttemp.push(full);\r\n\t\treturn es+(temp.length-1)+es;\r\n\t});\r\n\r\n\tstr = func(str);\r\n\r\n\tfor (var i = 0; i < temp.length; i++) {\r\n\t\tstr = str.replace(es+i+es, temp[i]);\r\n\t}\r\n\treturn str;\r\n}\r\n\r\nfunction isEmptyObject(obj){\r\n\tfor(var key in obj){\r\n\t\treturn false;\r\n\t}\r\n\treturn true\r\n}\r\n\r\nfunction compareObject(obj1, obj2){\r\n\tif(!obj1 || !obj2)\r\n\t\treturn false;\r\n\r\n\tfor(var i in obj1){\r\n\t\tif(typeof obj1[i] !== 'object' && obj1[i] !== obj2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction hiddenProperty(obj, property, value){\r\n\tObject.defineProperty(obj, property, {\r\n\t\tenumerable: false,\r\n\t\tconfigurable: true,\r\n\t\tvalue: value\r\n\t});\r\n}\r\n\r\nfunction deepProperty(obj, path){\r\n  for(var i = 0; i < path.length; i++){\r\n    obj = obj[path[i]];\r\n    if(obj === void 0) return obj;\r\n  }\r\n  return obj;\r\n}\r\n\r\nfunction capitalizeLetters(name){\r\n\tfor (var i = 0; i < name.length; i++) {\r\n\t\tname[i] = name[i][0].toUpperCase() + name[i].slice(1);\r\n\t}\r\n\treturn name.join('');\r\n}","// ==== ES5 Polyfill ====\r\nif(typeof Object.assign != 'function'){\r\n  Object.defineProperty(Object, \"assign\", {\r\n    value: function assign(target, varArgs) {\r\n      'use strict';\r\n      if (target == null)\r\n        throw new TypeError('Cannot convert void 0 or null to object');\r\n      var to = Object(target);\r\n      for (var index = 1; index < arguments.length; index++) {\r\n        var nextSource = arguments[index];\r\n        if (nextSource != null) {\r\n          for (var nextKey in nextSource) {\r\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey))\r\n              to[nextKey] = nextSource[nextKey];\r\n          }\r\n        }\r\n      }\r\n      return to;\r\n    },\r\n    writable: true,\r\n    configurable: true\r\n  });\r\n}\r\n\r\nif(console.group === void 0)\r\n  console.group = console.groupCollapsed = console.groupEnd = function(){};\r\n\r\n\r\nif(Element.prototype.remove === void 0 || CharacterData.prototype.remove === void 0 || DocumentType.prototype.remove === void 0){\r\n  (function (arr) {\r\n    arr.forEach(function (item) {\r\n      if (item.hasOwnProperty('remove')) {\r\n        return;\r\n      }\r\n      Object.defineProperty(item, 'remove', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n        value: function remove() {\r\n          if (this.parentNode !== null)\r\n            this.parentNode.removeChild(this);\r\n        }\r\n      });\r\n    });\r\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\r\n}\r\n\r\nif(!Element.prototype.matches){\r\n  Element.prototype.matches = (Element.prototype).matchesSelector ||\r\n    (Element.prototype).mozMatchesSelector || (Element.prototype).msMatchesSelector ||\r\n    (Element.prototype).oMatchesSelector || (Element.prototype).webkitMatchesSelector ||\r\n    function (s) {\r\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n      i = matches.length;\r\n      while (--i >= 0 && matches.item(i) !== this){}\r\n      return i > -1;\r\n    };\r\n}\r\n\r\nif(!NodeList.prototype.forEach){\r\n    NodeList.prototype.forEach = function (callback, thisArg) {\r\n        thisArg = thisArg || window;\r\n        for (var i = 0; i < this.length; i++) {\r\n            callback.call(thisArg, this[i], i, this);\r\n        }\r\n    };\r\n}\r\n\r\nif(!window.location.origin)\r\n  window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');\r\n\r\nif(!Object.values)\r\n  Object.values = function(obj){\r\n    var res = [];\r\n    for (var i in obj) {\r\n        if (obj.hasOwnProperty(i)) {\r\n            res.push(obj[i]);\r\n        }\r\n    }\r\n    return res;\r\n  }\r\n\r\nif(Object.setPrototypeOf === void 0)\r\n  Object.setPrototypeOf = function(obj, proto) {\r\n    obj.__proto__ = proto;\r\n    return obj; \r\n  }\r\n\r\nvar Reflect_Construct = null;\r\nif(typeof Reflect !== 'undefined')\r\n  Reflect_Construct = Reflect.construct;\r\nelse \r\n  Reflect_Construct = function(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; };","sf.dom = function(selector, context){\r\n\tif(selector[0] === '<') return sf.dom.parseElement(selector);\r\n\tif(selector.constructor !== String) return selector;\r\n\r\n\tif(context) return context.querySelectorAll(selector);\r\n\treturn document.querySelectorAll(selector);\r\n}\r\n\r\nvar $ = sf.dom; // Shortcut\r\n\r\n;(function(){\r\n\tvar self = sf.dom;\r\n\r\n\tself.findOne = function(selector, context){\r\n\t\tif(context !== void 0) return context.querySelector(selector);\r\n\t\treturn document.querySelector(selector);\r\n\t}\r\n\r\n\tself.parent = function(element, selector){\r\n\t\tif(element.closest) return element.closest(selector);\r\n\r\n\t\tdo {\r\n\t\t\tif(element.matches(selector) === true)\r\n\t\t\t\treturn element;\r\n\r\n\t\t\telement = element.parentElement;\r\n\t\t} while (element !== null);\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tself.prevAll = function(element, selector, isNext){\r\n\t\tvar result = [];\r\n\t\tvar findNodes = selector === null || selector.constructor !== String ? true : false;\r\n\r\n\t\t// Skip current element\r\n\t\telement = isNext ? element.nextSibling : element.previousSibling;\r\n\t\twhile (element !== null) {\r\n\t\t\tif(findNodes === false && element.matches(selector) === true)\r\n\t\t\t\tresult.push(element);\r\n\t\t\telse{\r\n\t\t\t\tif(element === selector)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tresult.push(element);\r\n\t\t\t}\r\n\r\n\t\t\tif(isNext)\r\n\t\t\t\telement = element.nextSibling;\r\n\t\t\telse\r\n\t\t\t\telement = element.previousSibling;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.nextAll = function(element, selector){\r\n\t\treturn self.prevAll(element, selector, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen to an event\r\n\t * @param  Node \t\t\telement \tparent element\r\n\t * @param  string \t\t\tevent   \tevent name\r\n\t * @param  function|string  selector    callback function or selector\r\n\t * @param  function\t\t\tcallback    callback function\r\n\t * @param  boolean\t\t\tonce    \tcall once\r\n\t * @return null\r\n\t */\r\n\tself.on = function(element, event, selector, callback, once){\r\n\t\tif(typeof element === 'string'){\r\n\t\t\telement = document;\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = event;\r\n\t\t\tevent = element;\r\n\t\t}\r\n\r\n\t\tif(typeof selector === 'function'){\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = null;\r\n\t\t}\r\n\r\n\t\tif(selector){\r\n\t\t\tvar tempCallback = callback;\r\n\t\t\tcallback = function(ev){\r\n\t\t\t\tif(self.parent(ev.target, selector) !== null)\r\n\t\t\t\t\ttempCallback(ev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcallback.selector = selector;\r\n\t\tcallback.once = once;\r\n\t\telement.addEventListener(event, callback, {capture:true, once:once === true});\r\n\r\n\t\t// Save event listener\r\n\t\tif(element.sf$eventListener === void 0)\r\n\t\t\telement.sf$eventListener = {};\r\n\r\n\t\tif(element.sf$eventListener[event] === void 0)\r\n\t\t\telement.sf$eventListener[event] = [];\r\n\r\n\t\telement.sf$eventListener[event].push(callback);\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.once = function(element, event, selector, callback){\r\n\t\tself.on(element, event, selector, callback, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event listener\r\n\t * @param  Node \telement \tparent element\r\n\t * @param  string \tevent   \tevent name\r\n\t * @param  string  \tselector    selector\r\n\t * @return null\r\n\t */\r\n\tself.off = function(element, event, selector){\r\n\t\t// Remove all event\r\n\t\tif(event === void 0){\r\n\t\t\tif(element.sf$eventListener === void 0)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar events = element.sf$eventListener[event];\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar events = event.split(' ');\r\n\t\tif(events.length !== 1){\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove listener\r\n\t\tif(element.sf$eventListener === void 0)\r\n\t\t\treturn;\r\n\r\n\t\tvar ref = element.sf$eventListener;\r\n\t\tif(ref !== void 0 && ref[event] !== void 0){\r\n\t\t\tfor (var i = ref[event].length - 1; i >= 0; i--) {\r\n\t\t\t\tif(selector && ref[event][i].selector !== selector)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\telement.removeEventListener(event, ref[event].splice(i, 1), true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.animateCSS = function(element, animationName, callback, duration) {\r\n\t\tvar animationEnd = {\r\n\t\t\tanimation: 'animationend',\r\n\t\t\tOAnimation: 'oAnimationEnd',\r\n\t\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t\t};\r\n\r\n\t\tfor (var t in animationEnd){\r\n\t\t\tif(element.style[t] !== void 0){\r\n\t\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(duration){\r\n\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t}\r\n\r\n\t\tvar list = ('animated ' + animationName).split(' ');\r\n\t\telement.classList.add.apply(element.classList, list);\r\n\t\t$.once(element, animationEnd, function(){\r\n\t\t\telement.classList.remove.apply(element.classList, list);\r\n\t\t\t\r\n\t\t\tif(duration) setTimeout(function(){\r\n\t\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t\t}, 1);\r\n\r\n\t\t\tif(typeof callback === 'function') callback();\r\n\t\t});\r\n\t}\r\n\r\n\tvar emptyDOM = {\r\n\t\tdiv:document.createElement('div'),\r\n\t\tul:document.createElement('ul'),\r\n\t\ttbody:document.createElement('tbody'),\r\n\t\ttr:document.createElement('tr'),\r\n\t\ttable:document.createElement('table'),\r\n\t\tselect:document.createElement('select'),\r\n\t};\r\n\tself.parseElement = function(html, returnNode){\r\n\t\tvar result = [];\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\r\n        if(html.indexOf('<li') === 0) tempDOM = emptyDOM.ul;\r\n        if(html.indexOf('<tr') === 0) tempDOM = emptyDOM.tbody;\r\n        if(html.indexOf('<td') === 0 || html.indexOf('<th') === 0) tempDOM = emptyDOM.tr;\r\n        if(html.indexOf('<tbody') === 0) tempDOM = emptyDOM.table;\r\n        if(html.indexOf('<option') === 0) tempDOM = emptyDOM.select;\r\n\r\n\t\ttempDOM.textContent = '';\r\n\t\ttempDOM.insertAdjacentHTML('afterBegin', html);\r\n\r\n\t\tvar ref = tempDOM[returnNode ? 'childNodes' : 'children'];\r\n\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\tresult.push(ref.item(i));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tself.escapeText = function(text){\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\t\ttempDOM.textContent = text;\r\n\t\treturn tempDOM.innerHTML;\r\n\t}\r\n\r\n\tself.remove = function(elements){\r\n\t\tif(elements.remove !== void 0)\r\n\t\t\treturn elements.remove();\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\telements[i].remove();\r\n\t\t}\r\n\t}\r\n\r\n\tvar documentElement = null;\r\n\tsetTimeout(function(){\r\n\t\tsf.loader.domReady(function(){\r\n\t\t\tdocumentElement = document.body.parentElement;\r\n\t\t});\r\n\t}, 1);\r\n\r\n\tvar haveSymbol = /[~`!@#$%^&*()+={}|[\\]\\\\:\";'<>?,./ ]/;\r\n\tself.getSelector = function(element, childIndexes, untilElement){\r\n\t\tvar names = [];\r\n\t\tif(untilElement === void 0) untilElement = documentElement;\r\n\r\n\t\tvar previousSibling = childIndexes ? 'previousSibling' : 'previousElementSibling';\r\n\r\n\t\twhile(element.parentNode !== null){\r\n\t\t\tif(element.id && !haveSymbol.test(element.id)){\r\n\t\t\t\tnames.unshift('#'+element.id);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(element === untilElement){\r\n\t\t\t\t\tif(childIndexes === void 0)\r\n\t\t\t\t\t\tnames.unshift(element.tagName);\r\n\t\t\t\t\telse names.unshift(0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar e = element;\r\n\t\t\t\t\tvar i = childIndexes ? 0 : 1;\r\n\r\n\t\t\t\t\twhile(e[previousSibling]){\r\n\t\t\t\t\t\te = e[previousSibling];\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(childIndexes)\r\n\t\t\t\t\t\tnames.unshift(i);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tnames.unshift(\":nth-child(\"+i+\")\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t\tif(element === null)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndexes)\r\n\t\t\treturn names;\r\n\t\treturn names.join(\" > \");\r\n\t}\r\n\r\n\tself.childIndexes = function(array, context){\r\n\t\tvar element = context || documentElement;\r\n\t\tvar i = 1;\r\n\r\n\t\tif(array[0].constructor === String && element.id !== array[0].substr(1))\r\n\t\t\telement = element.querySelector(array[0]);\r\n\r\n\t\telse if(array.length === 1)\r\n\t\t\treturn element;\r\n\r\n\t\tfor (i = i; i < array.length; i++) {\r\n\t\t\telement = element.childNodes.item(array[i]);\r\n\r\n\t\t\tif(element === null)\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n})();","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 0;\r\n\tself.DOMWasLoaded = false;\r\n\tself.DOMReady = false;\r\n\tself.turnedOff = true;\r\n\r\n\tvar whenDOMReady = [];\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\tself.off = function(){\r\n\t\tself.turnedOff = true;\r\n\t}\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.domReady = function(func){\r\n\t\tif(self.DOMReady) return func();\r\n\t\tif(whenDOMReady.indexOf(func) !== -1) return;\r\n\t\twhenDOMReady.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('link');\r\n\t        s.rel = 'stylesheet';\r\n\t        s.href = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tself.js = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('script');\r\n\t        s.type = \"text/javascript\";\r\n\t        s.async = true;\r\n\t        s.src = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(function(){\r\n\t\tif(self.totalContent === 0 && !self.turnedOff){\r\n\t\t\tself.loadedContent = self.totalContent = 1;\r\n\t\t\tconsole.warn(\"If you don't use content loader feature, please turn it off with `sf.loader.off()`\");\r\n\t\t}\r\n\t}, 10000);\r\n\r\n\r\n\tvar isQueued = false;\r\n\tvar lastState = '';\r\n\tdocument.addEventListener(\"load\", function domLoadEvent(event){\r\n\t\t// Add processing class to queued element\r\n\t\tif(isQueued === false && document.body){\r\n\t\t\tdocument.removeEventListener('load', domLoadEvent, true);\r\n\r\n\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tfor (var i = 0; i < isQueued.length; i++) {\r\n\t\t\t\tisQueued[i].classList.add('sf-dom-queued');\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued.length === 0) isQueued = false;\r\n\r\n\t\t\tif(lastState === 'loading'){\r\n\t\t\t\tvar repeatedList = $('[sf-repeat-this]', document.body);\r\n\t\t\t\tfor (var i = 0; i < repeatedList.length; i++) {\r\n\t\t\t\t\trepeatedList[i].classList.add('sf-dom-queued');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Find images\r\n\t\t\t\tvar temp = $('img:not(onload)[src]');\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tsf.loader.totalContent++;\r\n\t\t\t\t\ttemp[i].addEventListener('load', sf.loader.f, {once:true});\r\n\t\t\t\t\ttemp[i].addEventListener('error', sf.loader.f, {once:true});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, true);\r\n\r\n\tdocument.addEventListener('readystatechange', function domStateEvent(){\r\n\t\tif(document.readyState === 'interactive' || document.readyState === 'complete'){\r\n\t\t\tif(self.DOMReady === false){\r\n\t\t\t\tself.DOMReady = true;\r\n\t\t\t\tfor (var i = 0; i < whenDOMReady.length; i++) {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\twhenDOMReady[i]();\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued === false)\r\n\t\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tresourceWaitTimer = setInterval(waitResources, 100);\r\n\t\t\tdocument.removeEventListener('readystatechange', domStateEvent, true);\r\n\t\t}\r\n\t}, true);\r\n\r\n\tvar resourceWaitTimer = -1;\r\n\tfunction waitResources(){\r\n\t\tif(self.turnedOff === false && self.loadedContent < self.totalContent)\r\n\t\t\treturn;\r\n\r\n\t\tclearInterval(resourceWaitTimer);\r\n\r\n\t\tvar listener = sf.dom('script, link, img');\r\n\t\tfor (var i = 0; i < listener.length; i++) {\r\n\t\t\tlistener[i].removeEventListener('error', sf.loader.f);\r\n\t\t\tlistener[i].removeEventListener('load', sf.loader.f);\r\n\t\t}\r\n\r\n\t\tself.DOMWasLoaded = true;\r\n\r\n\t\t// Initialize all pending model\r\n\t\tvar keys = Object.keys(internal.modelPending);\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tvar ref = internal.modelPending[keys[i]];\r\n\r\n\t\t\tif(sf.model.root[keys[i]] === undefined)\r\n\t\t\t\tvar scope = sf.model.root[keys[i]] = {};\r\n\t\t\telse var scope = sf.model.root[keys[i]];\r\n\r\n\t\t\tfor (var a = 0; a < ref.length; a++) {\r\n\t\t\t\tref[a](scope, root_);\r\n\t\t\t}\r\n\r\n\t\t\tdelete internal.modelPending[keys[i]];\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\ttry{\r\n\t\t\t\twhenDOMLoaded[i]();\r\n\t\t\t} catch(e){\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twhenProgress.splice(0);\r\n\t\twhenDOMReady.splice(0);\r\n\t\twhenDOMLoaded.splice(0);\r\n\t\twhenDOMReady = whenDOMLoaded = null;\r\n\r\n\t\t// Last init\r\n\t\tsf.controller.init();\r\n\t\tsf.model.init(document.body, isQueued);\r\n\t\tsf.router.init();\r\n\r\n\t\tisQueued = null;\r\n\t}\r\n}\r\nsf.prototype.constructor = sf.loader.onFinish;","sf.component = new function(){\r\n\tvar self = this;\r\n\tvar scope = internal.component = {};\r\n\tself.registered = {};\r\n\tself.available = {};\r\n\r\n\tvar bases = {};\r\n\tvar events = {};\r\n\r\n\tself.for = function(name, func, extend){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(self.registered[name] === void 0)\r\n\t\t\tself.registered[name] = [func, sf.controller.pending[name], 0, false, extend];\r\n\t\tself.registered[name][0] = func;\r\n\t\tdelete sf.controller.pending[name];\r\n\r\n\t\tdefineComponent(name);\r\n\t}\r\n\r\n\tself.event = function(name, func){\r\n\t\tevents[name] = func;\r\n\t}\r\n\r\n\tself.base = function(name, func){\r\n\t\tbases[name] = func;\r\n\t}\r\n\r\n\tself.html = function(name, outerHTML){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.html(name, outerHTML);\r\n\t\t\t});\r\n\r\n\t\tif(self.registered[name] === void 0)\r\n\t\t\tself.registered[name] = [false, false, 0, false];\r\n\r\n\t\tvar temp = $.parseElement(outerHTML);\r\n\t\tif(temp.length === 1){\r\n\t\t\tself.registered[name][3] = temp[0];\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tempDOM = document.createElement('div');\r\n\t\ttempDOM.tempDOM = true;\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\ttempDOM.appendChild(temp[i]);\r\n\t\t}\r\n\t\tself.registered[name][3] = tempDOM;\r\n\t}\r\n\r\n\tscope.triggerEvent = function(name, event, obj){\r\n\t\tif(events[name] === void 0 || events[name][event] === void 0)\r\n\t\t\treturn;\r\n\r\n\t\tevents[name][event](obj, event);\r\n\t}\r\n\r\n\tvar tempDOM = document.createElement('div');\r\n\tself.new = function(name, element, $item, isCreated, retriggered){\r\n\t\tif(isCreated === true){\r\n\t\t\tif(sf.loader.DOMWasLoaded === false)\r\n\t\t\t\treturn sf(function(){\r\n\t\t\t\t\tself.new(name, element, $item, isCreated, false);\r\n\t\t\t\t});\r\n\t\t\tif(self.registered[name][3] === false)\r\n\t\t\t\treturn setTimeout(function(){\r\n\t\t\t\t\tself.new(name, element, $item, isCreated, true);\r\n\t\t\t\t}, 0);\r\n\r\n\t\t\tif(element.hasAttribute('sf-component-ignore') === true)\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(element === void 0)\r\n\t\t\treturn new window['$'+capitalizeLetters(name.split('-'))];\r\n\r\n\t\tvar newElement = element === void 0;\r\n\t\tif(element === void 0){\r\n\t\t\tif(self.registered[name][3] === false){\r\n\t\t\t\tconsole.error(\"HTML content for '\"+name+\"' was not defined\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement = self.registered[name][3].cloneNode(true);\r\n\t\t}\r\n\r\n\t\tvar newID = name+'@'+(self.registered[name][2]++);\r\n\r\n\t\tif(self.available[name] === void 0)\r\n\t\t\tself.available[name] = [];\r\n\r\n\t\tself.available[name].push(newID);\r\n\r\n\t\tvar newObj = sf.model.root[newID] = {};\r\n\t\tself.registered[name][0](newObj, sf.model, $item, element);\r\n\r\n\t\tvar extend = self.registered[name][4];\r\n\t\tif(extend !== void 0){\r\n\t\t\tif(extend.constructor === Array){\r\n\t\t\t\tfor (var i = 0; i < extend.length; i++) {\r\n\t\t\t\t\tif(bases[extend[i]] === void 0)\r\n\t\t\t\t\t\treturn console.error(\"'\"+extend[i]+\"' base is not found\");\r\n\t\t\t\t\tbases[extend[i]](newObj, sf.model, $item, element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(bases[extend] === void 0)\r\n\t\t\t\t\treturn console.error(\"'\"+extend+\"' base is not found\");\r\n\t\t\t\tbases[extend](newObj, sf.model, $item, element);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(self.registered[name][1])\r\n\t\t\tself.registered[name][1](newObj, sf.model, $item, element);\r\n\r\n\t\tscope.triggerEvent(name, 'created', newObj);\r\n\r\n\t\tif(newElement !== true && isCreated !== true){\r\n\t\t\tcomponentInit(element, newID, name);\r\n\t\t\telement.model = sf.model.root[newID];\r\n\t\t\treturn newID;\r\n\t\t}\r\n\r\n\t\tvar temp = self.registered[name][3];\r\n\t\tif(temp.tempDOM === true){\r\n\t\t\ttemp = temp.cloneNode(true).childNodes;\r\n\t\t\tfor (var i = 0, n = temp.length; i < n; i++) {\r\n\t\t\t\telement.appendChild(temp[0]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse element.appendChild(temp.cloneNode(true));\r\n\r\n\t\tif(element.parentNode === null){\r\n\t\t\t// Wrap to temporary vDOM\r\n\t\t\ttempDOM.appendChild(element);\r\n\t\t\tcomponentInit(element, newID, name);\r\n\t\t\tsf.model.init(element);\r\n\t\t\telement = tempDOM.firstElementChild;\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t\telse if(isCreated === true){\r\n\t\t\tcomponentInit(element, newID, name);\r\n\t\t\tsf.model.init(element);\r\n\t\t}\r\n\r\n\t\telement.model = sf.model.root[newID];\r\n\t\telement.destroy = function(){\r\n\t\t\tif(this.parentElement === null)\r\n\t\t\t\tinternal.model.DOMNodeRemoved(this);\r\n\t\t\telse this.remove();\r\n\t\t}\r\n\t\treturn element;\r\n\t}\r\n\r\n\tfunction componentInit(element, newID, from){\r\n\t\telement.setAttribute('sf-controller', '');\r\n\t\telement.sf$component = newID;\r\n\t\telement.sf$componentFrom = from;\r\n\t}\r\n\r\n\tvar HTMLElement = window.HTMLElement;\r\n\tvar customElements = window.customElements;\r\n\r\n\tvar HTMLElement_wrap = (function(Class){\r\n\t\tfunction Wrapper(){\r\n\t\t\treturn Reflect_Construct(Class, arguments, Object.getPrototypeOf(this).constructor);\r\n\t\t}\r\n\t\tWrapper.prototype = Object.create(Class.prototype, {constructor:{value: Wrapper, enumerable: false, writable: true, configurable: true}}); \r\n\t\treturn Object.setPrototypeOf(Wrapper, Class);\r\n\t})(HTMLElement);\r\n\r\n\t// name = 'tag-name'\r\n\tfunction defineComponent(name){\r\n\t\tname = name.replace(/[^\\w-]+/g, '');\r\n\t\tvar tagName = name;\r\n\t\tname = name.split('-');\r\n\t\tif(name.length === 1)\r\n\t\t\treturn console.error(\"Please use '-' when defining component tags\");\r\n\r\n\t\tname = capitalizeLetters(name);\r\n\t\tvar func = eval(\"function \"+name+\"($item){var he = HTMLElement_wrap.call(this);self.new(tagName, he, $item, true, false);return he}\"+name);\r\n\t\tfunc.prototype = Object.create(HTMLElement.prototype);\r\n\t\tfunc.prototype.constructor = func;\r\n\t\tfunc.__proto__ = HTMLElement;\r\n\r\n\t\tfunc.prototype.connectedCallback = function(){\r\n\t\t\tscope.triggerEvent(name, 'connected', this);\r\n\t\t};\r\n\r\n\t\ttry{\r\n\t\t  customElements.define(tagName, func);\r\n\t\t}catch(err){console.error(err)}\r\n\r\n\t\twindow['$'+name] = func;\r\n\t}\r\n};","// Data save and HTML content binding\r\nsf.model = function(scope){\r\n\t// If it's component tag\r\n\tif(sf.component.registered[scope] !== void 0)\r\n\t\treturn root_(scope);\r\n\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\t// This usually being initialized after DOM Loaded\r\n\tvar pending = internal.modelPending[scope];\r\n\tif(pending){\r\n\t\tvar temp = sf.model.root[scope];\r\n\t\tfor (var i = 0; i < pending.length; i++) {\r\n\t\t\tpending[i](temp, sf.model);\r\n\t\t}\r\n\t\tpending = internal.modelPending[scope] = false;\r\n\t}\r\n\r\n\tif(sf.controller.pending[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n};\r\n\r\n(function(){\r\n\tvar self = sf.model;\r\n\tvar scope = internal.model = {};\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\tinternal.modelPending = {};\r\n\r\n\tvar processingElement = null;\r\n\r\n\t// For debugging, normalize indentation\r\n\tfunction trimIndentation(text){\r\n\t\tvar indent = text.split(\"\\n\", 3);\r\n\t\tif(indent[0][0] !== ' ' || indent[0][0] !== \"\\t\")\r\n\t\t\tindent = indent[1];\r\n\t\telse indent = indent[0];\r\n\r\n\t\tif(indent === void 0) return text;\r\n\t\tindent = indent.length - indent.trim().length;\r\n\t\tif(indent === 0) return text;\r\n\t\treturn text.replace(RegExp('^([\\\\t ]{'+indent+'})', 'gm'), '');\r\n\t}\r\n\r\n\t// Secured evaluation\r\n\tvar bracketMatch = /([\\w.]*?[\\S\\s])\\(/g;\r\n\tvar chackValidFunctionCall = sf.regex.validFunctionCall;\r\n\tvar localEval = function(script, _model_, _modelScope, _content_){\r\n\t\t\"use strict\";\r\n\r\n\t\t// ==== Security check ====\r\n\t\tvar preventExecution = false;\r\n\r\n\t\t// Remove all inner quotes\r\n\t\tavoidQuotes(script, function(tempScript){\r\n\t\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\t\tvar check_ = null;\r\n\t\t\twhile((check_ = bracketMatch.exec(tempScript)) !== null){\r\n\t\t\t\tcheck_[1] = check_[1].trim();\r\n\r\n\t\t\t\tif(allowedFunctionEval[check_[1]] || check_[1].split('.')[0] === '_modelScope')\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tif(tempScript.indexOf('var '+check_[1]) !== -1 || tempScript.indexOf('let '+check_[1]) !== -1)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tbracketMatch.lastIndex = 0;\r\n\t\t\t\tpreventExecution = check_[1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}, true);\r\n\r\n\t\tif(preventExecution){\r\n\t\t\tconsole.groupCollapsed(\"Template error:\");\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\tconsole.log(trimIndentation(script).trim());\r\n\t\t\tconsole.groupEnd();\r\n\r\n\t\t\tconsole.error(\"Trying to executing unrecognized function (\"+preventExecution+\")\");\r\n\t\t\treturn '#TemplateError';\r\n\t\t}\r\n\t\t// ==== Security check ended ====\r\n\t\r\n\t\tvar _result_ = '';\r\n\t\ttry{\r\n\t\t\tif(/@return /.test(script) === true){\r\n\t\t\t\tvar _evaled_ = eval('(function(){'+script.split('@return ').join('return ')+'})()');\r\n\r\n\t\t\t\tif(_evaled_ === void 0)\r\n\t\t\t\t\treturn _result_ + 'undefined';\r\n\r\n\t\t\t\tif(_evaled_ === null)\r\n\t\t\t\t\treturn _result_ + 'null';\r\n\r\n\t\t\t\t// Check if it's an HTMLElement\r\n\t\t\t\tif(_evaled_.onclick !== void 0)\r\n\t\t\t\t\treturn _evaled_;\r\n\r\n\t\t\t\treturn _result_ + _evaled_;\r\n\t\t\t}\r\n\t\t\telse var _evaled_ = eval(script);\r\n\t\t} catch(e){\r\n\t\t\tconsole.groupCollapsed(\"Template error:\");\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\tconsole.log(trimIndentation(script).trim());\r\n\t\t\tconsole.groupEnd();\r\n\r\n\t\t\tconsole.error(e);\r\n\t\t\treturn '#TemplateError';\r\n\t\t}\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\t// Find an index for the element on the list\r\n\tself.index = function(element){\r\n\t\tif(element.hasAttribute('sf-bind-list') === false)\r\n\t\t\telement = sf.dom.parent(element, '[sf-bind-list]');\r\n\r\n\t\tvar i = -1;\r\n\t\tvar tagName = element.tagName;\r\n\t\tvar currentElement = element;\r\n\r\n\t\twhile(element !== null) {\r\n\t\t\tif(element.tagName === tagName)\r\n\t\t\t\ti++;\r\n\r\n\t\t\telement = element.previousElementSibling;\r\n\t\t}\r\n\r\n\t\tvar list = currentElement.getAttribute('sf-bind-list');\r\n\t\tif(!list) return i;\r\n\r\n\t\tvar ref = self.root[sf.controller.modelName(currentElement)][list];\r\n\t\tif(!ref.$virtual) return i;\r\n\r\n\t\treturn i + ref.$virtual.DOMCursor - 1;\r\n\t}\r\n\r\n\t// Declare model for the name with a function\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded){\r\n\t\t\tif(internal.modelPending[name] === undefined)\r\n\t\t\t\tinternal.modelPending[name] = [];\r\n\r\n\t\t\tif(internal.modelPending[name] === false)\r\n\t\t\t\treturn func(self(name), self);\r\n\r\n\t\t\t// Initialize when DOMLoaded\r\n\t\t\treturn internal.modelPending[name].push(func);\r\n\t\t}\r\n\t\t\r\n\t\tfunc(self(name), self);\r\n\t}\r\n\r\n\t// Get property of the model\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys;\r\n\t}\r\n\r\n\t// Escape the escaped quote\r\n\tfunction escapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*');\r\n\t}\r\n\r\n\tfunction unescapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\");\r\n\t}\r\n\r\n\tfunction elseIfHandle(else_, scopes){\r\n\t\tvar elseIf = else_.elseIf;\r\n\r\n\t\t// Else if\r\n\t\tfor (var i = 0; i < elseIf.length; i++) {\r\n\t\t\t// Check the condition\r\n\t\t\tscopes[0] = elseIf[i][0];\r\n\t\t\tif(!localEval.apply(self.root, scopes))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Get the value\r\n\t\t\tscopes[0] = elseIf[i][1];\r\n\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t}\r\n\r\n\t\t// Else\r\n\t\tif(else_.elseValue === null)\r\n\t\t\treturn '';\r\n\r\n\t\tscopes[0] = else_.elseValue;\r\n\t\treturn localEval.apply(self.root, scopes);\r\n\t}\r\n\r\n\t// ==== Template parser ====\r\n\tvar templateParser_regex = /{{%=([0-9]+)/gm;\r\n\tvar REF_DIRECT = 0, REF_IF = 1, REF_EXEC = 2;\r\n\tvar templateExec = function(parse, item, atIndex){\r\n\t\tvar parsed = {};\r\n\t\tvar temp = null;\r\n\r\n\t\t// Get or evaluate static or dynamic data\r\n\t\tfor (var i = 0; i < parse.length; i++) {\r\n\t\t\tif(atIndex !== void 0 && atIndex.indexOf(i) === -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar ref = parse[i];\r\n\t\t\tref.data[1] = item;\r\n\r\n\t\t\t// Direct evaluation type\r\n\t\t\tif(ref.type === REF_DIRECT){\r\n\t\t\t\ttemp = localEval.apply(self.root, ref.data);\r\n\t\t\t\tif(temp === void 0)\r\n\t\t\t\t\tconsole.error('`'+ref.data[0]+'` was not defined');\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(temp.constructor === Object)\r\n\t\t\t\t\t\ttemp = JSON.stringify(temp);\r\n\t\t\t\t\tif(temp.constructor !== String)\r\n\t\t\t\t\t\ttemp = String(temp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparsed[i] = {type:ref.type, data:temp};\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(ref.type === REF_EXEC){\r\n\t\t\t\tparsed[i] = {type:ref.type, data:localEval.apply(self.root, ref.data)};\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Conditional type\r\n\t\t\tif(ref.type === REF_IF){\r\n\t\t\t\tvar scopes = ref.data;\r\n\t\t\t\tparsed[i] = {type:ref.type, data:''};\r\n\t\t\t\tscopes[0] = ref.if[0];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tparsed[i].data = elseIfHandle(ref, scopes);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscopes[0] = ref.if[1];\r\n\t\t\t\tparsed[i].data = localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n\r\n\tvar templateParser = function(template, item, original){\r\n\t\tif(template.component !== void 0){\r\n\t\t\tvar html = new template.component(item);\r\n\t\t\thtml.setAttribute('sf-bind-list', template.list);\r\n\t\t\treturn html;\r\n\t\t}\r\n\r\n\t\tprocessingElement = template.html;\r\n\r\n\t\tvar html = original === true ? template.html : template.html.cloneNode(true);\r\n\t\tvar addresses = template.addresses;\r\n\t\tvar parsed = templateExec(template.parse, item);\r\n\r\n\t\t// Save model item reference to node\r\n\t\thtml.model = item;\r\n\r\n\t\tvar changesReference = [];\r\n\t\tvar pendingInsert = [];\r\n\r\n\t\t// Find element where the data belongs to\r\n\t\tfor (var i = 0; i < addresses.length; i++) {\r\n\t\t\tvar ref = addresses[i];\r\n\t\t\tvar current = $.childIndexes(ref.address, html);\r\n\r\n\t\t\t// Modify element attributes\r\n\t\t\tif(ref.nodeType === 1){\r\n\t\t\t\tvar refA = ref.attributes;\r\n\t\t\t\tfor(var a = 0; a < refA.length; a++){\r\n\t\t\t\t\tvar refB = refA[a];\r\n\r\n\t\t\t\t\tvar isValueInput = (refB.name === 'value' && (current.tagName === 'TEXTAREA' ||\r\n\t\t\t\t\t\t(current.tagName === 'INPUT' && /checkbox|radio|hidden/.test(current.type) === false)\r\n\t\t\t\t\t));\r\n\r\n\t\t\t\t\tchangesReference.push({\r\n\t\t\t\t\t\tattribute:isValueInput === true ? current : current.attributes[refB.name],\r\n\t\t\t\t\t\tref:refB\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(refB.direct !== void 0){\r\n\t\t\t\t\t\tif(refB.name === 'value' && isValueInput === true){\r\n\t\t\t\t\t\t\tcurrent.value = parsed[refB.direct].data;\r\n\t\t\t\t\t\t\tcurrent.removeAttribute('value');\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcurrent.setAttribute(refB.name, parsed[refB.direct].data);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Below is used for multiple data\r\n\t\t\t\t\tif(refB.name === 'value' && isValueInput === true){\r\n\t\t\t\t\t\tvar temp = current.value;\r\n\t\t\t\t\t\tcurrent.removeAttribute('value');\r\n\t\t\t\t\t\tcurrent.value = temp;\r\n\t\t\t\t\t\tcurrent.value = current.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tcurrent.setAttribute(refB.name, (refB.value || current.value).replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Replace text node\r\n\t\t\tif(ref.nodeType === 3){\r\n\t\t\t\tvar refA = current;\r\n\r\n\t\t\t\tchangesReference.push({\r\n\t\t\t\t\ttextContent:refA,\r\n\t\t\t\t\tref:ref\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(ref.direct !== void 0){\r\n\t\t\t\t\trefA.textContent = parsed[ref.direct].data;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Below is used for multiple/dynamic data\r\n\t\t\t\trefA.textContent = refA.textContent.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Replace dynamic node\r\n\t\t\tif(ref.nodeType === -1){\r\n\t\t\t\tvar cRef = {\r\n\t\t\t\t\tdynamicFlag:current,\r\n\t\t\t\t\tdirect:ref.parse_index,\r\n\t\t\t\t\tparentNode:current.parentNode,\r\n\t\t\t\t\tstartFlag:ref.startFlag && $.childIndexes(ref.startFlag, html)\r\n\t\t\t\t};\r\n\t\t\t\tchangesReference.push(cRef);\r\n\r\n\t\t\t\t// Pending element insert to take other element reference\r\n\t\t\t\tpendingInsert.push(cRef);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Save reference to element\r\n\t\thtml.sf$elementReferences = changesReference;\r\n\t\t// html.sf$modelParsed = parsed;\r\n\r\n\t\t// Run the pending element\r\n\t\tfor (var i = 0; i < pendingInsert.length; i++) {\r\n\t\t\tvar ref = pendingInsert[i];\r\n\t\t\tvar tDOM = parsed[ref.direct].data;\r\n\r\n\t\t\t// Check if it's an HTMLElement\r\n\t\t\tif(tDOM.onclick !== void 0){\r\n\t\t\t\tref.parentNode.insertBefore(tDOM, ref.dynamicFlag);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\ttDOM = $.parseElement(parsed[ref.direct].data, true);\r\n\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\tref.parentNode.insertBefore(tDOM[a], ref.dynamicFlag);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t}\r\n\r\n\tfunction syntheticCache(element, template, item){\r\n\t\tif(element.sf$cache === void 0)\r\n\t\t\telement.sf$cache = {};\r\n\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\tvar ref = modelRef_array[i];\r\n\t\t\tcache[ref[0]] = deepProperty(item, ref[1]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction syntheticTemplate(element, template, property, item){\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tif(property !== void 0){\r\n\t\t\tvar changes = template.modelReference[property];\r\n\t\t\tif(changes === void 0 || changes.length === 0){\r\n\t\t\t\tconsole.log(element, template, property, item);\r\n\t\t\t\tconsole.error(\"Failed to run syntheticTemplate because property '\"+property+\"' is not observed\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cache)\r\n\t\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\t\tif(ref[0] !== property) continue;\r\n\r\n\t\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t\t// Check if data was different\r\n\t\t\t\t\tif(cache[ref[0]] !== newData)\r\n\t\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar changes = [];\r\n\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\tif(cache === void 0){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t// Check if data was different\r\n\t\t\t\tif(cache[ref[0]] !== newData){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(changes.length === 0) return false;\r\n\t\t}\r\n\r\n\t\tvar parsed = templateExec(template.parse, item, changes);\r\n\t\tfunction checkRelatedChanges(parseIndex){\r\n\t\t\tvar found = false;\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(changes.indexOf(parseIndex[i]) !== -1){\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(found === false)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t// Prepare all required data\r\n\t\t\tvar changes_ = [];\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(parsed[parseIndex[i]] === void 0)\r\n\t\t\t\t\tchanges_.push(parseIndex[i]);\r\n\t\t\t}\r\n\r\n\t\t\tObject.assign(parsed, templateExec(template.parse, item, changes_));\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tvar changesReference = element.sf$elementReferences;\r\n\t\tvar haveChanges = false;\r\n\t\tfor (var i = 0; i < changesReference.length; i++) {\r\n\t\t\tvar cRef = changesReference[i];\r\n\r\n\t\t\tif(cRef.dynamicFlag !== void 0){ // Dynamic data\r\n\t\t\t\tif(parsed[cRef.direct] !== void 0){\r\n\t\t\t\t\tvar tDOM = $.parseElement(parsed[cRef.direct].data, true).reverse();\r\n\t\t\t\t\tvar currentDOM = $.prevAll(cRef.dynamicFlag, cRef.startFlag);\r\n\t\t\t\t\tvar notExist = false;\r\n\r\n\t\t\t\t\t// Replace if exist, skip if similar\r\n\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\t\t\tif(currentDOM[a] === void 0){\r\n\t\t\t\t\t\t\tnotExist = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(currentDOM[a].isEqualNode(tDOM[a]) === false)\r\n\t\t\t\t\t\t\tcRef.parentNode.replaceChild(tDOM[a], currentDOM[a]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Add if not exist\r\n\t\t\t\t\tif(notExist){\r\n\t\t\t\t\t\tfor (var a = tDOM.length - 1; a >= 0; a--)\r\n\t\t\t\t\t\t\tcRef.parentNode.insertBefore(tDOM[a], cRef.dynamicFlag);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove if over index\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tfor (var a = tDOM.length; a < currentDOM.length; a++) {\r\n\t\t\t\t\t\t\tcurrentDOM[a].remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(cRef.textContent !== void 0){ // Text only\r\n\t\t\t\tif(cRef.ref.parse_index !== void 0){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.textContent.textContent === temp) continue;\r\n\t\t\t\t\t\tcRef.textContent.textContent = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\tif(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.textContent.textContent === value) continue;\r\n\r\n\t\t\t\t\tvar ref_ = cRef.textContent;\r\n\t\t\t\t\t// Remove old element if exist\r\n\t\t\t\t\tif(ref_.sf$haveChilds === true){\r\n\t\t\t\t\t\twhile(ref_.previousSibling && ref_.previousSibling.sf$childRoot === ref_){\r\n\t\t\t\t\t\t\tref_.previousSibling.remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// if(item['each$'+])\r\n\t\t\t\t\tref_.textContent = value;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(cRef.attribute !== void 0){ // Attributes\r\n\t\t\t\tif(cRef.ref.parse_index !== void 0){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.attribute.value === temp) continue;\r\n\t\t\t\t\t\tcRef.attribute.value = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\tif(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.attribute.value == value) continue;\r\n\t\t\t\t\tcRef.attribute.value = value;\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn haveChanges;\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval, preParsedReference){\r\n\t\tvar _modelScope = self.root[scope];\r\n\t\tif(!runEval) runEval = '';\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope).join('|')+')\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\tvar preParsed = [];\r\n\t\t\tvar lastParsedIndex = preParsedReference.length;\r\n\t\t}\r\n\r\n\t\tvar prepared = html.replace(sf.regex.dataParser, function(actual, temp){\r\n\t\t\ttemp = avoidQuotes(temp, function(temp_){\r\n\t\t\t\t// Unescape HTML\r\n\t\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t\t// Mask item variable\r\n\t\t\t\tif(mask)\r\n\t\t\t\t\ttemp_ = temp_.replace(itemMask, function(matched){\r\n\t\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// Mask model for variable\r\n\t\t\t\treturn temp_.replace(scopeMask, function(full, matched){\r\n\t\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t\t});\r\n\t\t\t}).split('_model_._modelScope.').join('_model_.').split('._modelScope.').join('.');\r\n\r\n\t\t\t// Evaluate\r\n\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\ttemp = temp.trim();\r\n\r\n\t\t\t\t// Simplicity similar\r\n\t\t\t\tvar exist = preParsed.indexOf(temp);\r\n\r\n\t\t\t\tif(exist === -1){\r\n\t\t\t\t\tpreParsed.push(temp);\r\n\t\t\t\t\tpreParsedReference.push({type:REF_DIRECT, data:[temp, _model_, _modelScope]});\r\n\t\t\t\t\treturn '{{%=' + (preParsed.length + lastParsedIndex - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn '{{%=' + (exist + lastParsedIndex);\r\n\t\t\t}\r\n\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(sf.regex.escapeHTML, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\tpreParsed = _modelScope = _model_ = mask = scope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t}\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\t// Dynamic data parser\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope, runEval){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(passVar === null)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\t// Use strict mode and prepare for new variables\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\t// Declare new variable\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(key === '_model_'){\r\n\t\t\t\t\t\t_model_ = passVar[key];\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove var because no variable are being passed\r\n\t\t\t\tif(firstTime === true)\r\n\t\t\t\t\tstrDeclare = strDeclare.replace('var ', '');\r\n\r\n\t\t\t\t// Escape function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('&#40;').split(')').join('&#41;');\r\n\r\n\t\t\t\t// Pass to static data parser for another HTML data\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Build script preparation\r\n\t\thtml = html.replace(/{\\[([\\s\\S]*?)\\]}/g, function(full, matched){\r\n\t\t\tif(/{{.*?}}/.test(matched) === false)\r\n\t\t\t\treturn \"_result_ += '\"+matched.split(\"'\").join(\"\\\\'\")+\"'\";\r\n\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope).join('|')+')\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.\\\\b', 'g');\r\n\r\n\t\tif(runEval === '#noEval')\r\n\t\t\tvar preParsedReference = [];\r\n\r\n\t\tvar prepared = html.replace(sf.regex.uniqueDataParser, function(actual, temp){\r\n\t\t\ttemp = avoidQuotes(temp, function(temp_){\r\n\t\t\t\t// Unescape HTML\r\n\t\t\t\ttemp_ = temp_.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t\t// Mask item variable\r\n\t\t\t\tif(mask)\r\n\t\t\t\t\ttemp_ = temp_.replace(itemMask, function(matched){\r\n\t\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// Mask model for variable\r\n\t\t\t\treturn temp_.replace(scopeMask, function(full, matched){\r\n\t\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t\t});\r\n\t\t\t}).split('_model_._modelScope.').join('_model_.');\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass_ = /(var|let)([\\w,\\s]+)(?=\\s(?==|in|of))/g;\r\n\t\t\tvar VarPass = [];\r\n\t\t\tvar s1 = null;\r\n\t\t\twhile((s1 = VarPass_.exec(temp)) !== null){\r\n\t\t\t\tVarPass.push(s1[2]);\r\n\t\t\t}\r\n\r\n\t\t\tif(_model_ === null && runEval === '#noEval')\r\n\t\t\t\tVarPass.push('_model_');\r\n\r\n\t\t\tif(VarPass.length !== 0){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/([\\n\\t\\r]|  )+/g, '').split(',').forEach(function(val){\r\n\t\t\t\t\t\tobtained.push(val);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':typeof '+VarPass[i]+'!==\"undefined\"?'+VarPass[i]+':void 0';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(VarPass.length === 0)\r\n\t\t\t\t\tVarPass = 'null';\r\n\t\t\t\telse VarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\t\t\telse temp = temp.split('&VarPass&').join('null');\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\r\n\t\t\t\t// {if, elseIf:([if, value], ...), elseValue}\r\n\t\t\t\tvar findElse = function(text){\r\n\t\t\t\t\ttext = text.join(':');\r\n\t\t\t\t\tvar else_ = null;\r\n\r\n\t\t\t\t\t// Split elseIf\r\n\t\t\t\t\ttext = text.split('@elseif ');\r\n\r\n\t\t\t\t\t// Get else value\r\n\t\t\t\t\tvar else_ = text[text.length - 1].split('@else');\r\n\t\t\t\t\tif(else_.length === 2){\r\n\t\t\t\t\t\ttext[text.length - 1] = else_[0];\r\n\t\t\t\t\t\telse_ = else_.pop();\r\n\t\t\t\t\t\telse_ = else_.substr(else_.indexOf(':') + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse else_ = null;\r\n\r\n\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t\tif:text.shift(),\r\n\t\t\t\t\t\telseIf:[],\r\n\t\t\t\t\t\telseValue:else_\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Separate condition script and value\r\n\t\t\t\t\tfor (var i = 0; i < text.length; i++) {\r\n\t\t\t\t\t\tvar val = text[i].split(':');\r\n\t\t\t\t\t\tobj.elseIf.push([val.shift(), val.join(':')]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tvar condition = check.shift();\r\n\t\t\t\t\tvar elseIf = findElse(check);\r\n\t\t\t\t\telseIf.type = REF_IF;\r\n\t\t\t\t\telseIf.data = [null, _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t\t// Trim Data\r\n\t\t\t\t\telseIf.if = [condition.trim(), elseIf.if.trim()];\r\n\t\t\t\t\tif(elseIf.elseValue !== null)\r\n\t\t\t\t\t\telseIf.elseValue = elseIf.elseValue.trim();\r\n\r\n\t\t\t\t\tfor (var i = 0; i < elseIf.elseIf.length; i++) {\r\n\t\t\t\t\t\telseIf.elseIf[i][0] = elseIf.elseIf[i][0].trim();\r\n\t\t\t\t\t\telseIf.elseIf[i][1] = elseIf.elseIf[i][1].trim();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Push data\r\n\t\t\t\t\tpreParsedReference.push(elseIf);\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scopes = [check[0], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\treturn elseIfHandle(findElse(check), scopes);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcheck.shift();\r\n\t\t\t\tscopes[0] = check.join(':');\r\n\r\n\t\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tvar scopes = [check[1], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tpreParsedReference.push({type:REF_EXEC, data:scopes});\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, scopes);\r\n\t\t\t\treturn temp;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\t_modelScope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t\treturn [prepared, preParsedReference, _content_];\r\n\t\t}\r\n\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\tvar bindArray = function(template, list, mask, modelName, propertyName, targetNode, parentNode, tempDOM){\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'swap', 'move', 'replace', 'softRefresh', 'hardRefresh'];\r\n\t\tvar refreshTimer = -1;\r\n\t\tvar parentChilds = parentNode.children;\r\n\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\r\n\t\t// Update callback\r\n\t\tvar modelRef = self.root[modelName];\r\n\t\tvar eventVar = 'on$'+propertyName;\r\n\t\tvar callback = modelRef[eventVar];\r\n\r\n\t\tvar processElement = function(index, options, other, count){\r\n\t\t\t// Find boundary for inserting to virtual DOM\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar vStartRange = list.$virtual.DOMCursor;\r\n\t\t\t\tvar vEndRange = vStartRange + list.$virtual.preparedLength;\r\n\t\t\t}\r\n\r\n\t\t\tif(options === 'clear'){\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar spacer = [parentNode.firstElementChild, parentNode.lastElementChild];\r\n\r\n\t\t\t\tparentNode.textContent = '';\r\n\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tparentNode.appendChild(spacer[0]);\r\n\t\t\t\t\tparentNode.appendChild(spacer[1]);\r\n\t\t\t\t\tlist.$virtual.dom.textContent = '';\r\n\t\t\t\t\tspacer[1].style.height = \r\n\t\t\t\t\tspacer[0].style.height = 0;\r\n\t\t\t\t\tlist.$virtual.reset(true);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid multiple refresh by set a timer\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar exist = list.$virtual.elements();\r\n\r\n\t\t\t\tclearTimeout(refreshTimer);\r\n\t\t\t\trefreshTimer = setTimeout(function(){\r\n\t\t\t\t\tif(list.$virtual) // Somewhat it's uninitialized\r\n\t\t\t\t\t\tlist.$virtual.reinitScroll();\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse exist = parentChilds;\r\n\r\n\t\t\t// Hard refresh - Append element\r\n\t\t\tif(options === 'hardRefresh'){\r\n\t\t\t\t// Clear siblings after the index\r\n\t\t\t\tfor (var i = index; i < exist.length; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar vCursor = list.$virtual.vCursor;\r\n\r\n\t\t\t\tfor (var i = index; i < list.length; i++) {\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\tif(vCursor.floor === null && i < vEndRange)\r\n\t\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\t\telse list.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse parentNode.appendChild(temp);\r\n\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual && list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(callback === void 0)\r\n\t\t\t\tcallback = modelRef[eventVar];\r\n\r\n\t\t\tif(options === 'swap' || options === 'move'){\r\n\t\t\t\tif(options === 'move'){\r\n\t\t\t\t\tvar overflow = list.length - index - count;\r\n\t\t\t\t\tif(overflow < 0)\r\n\t\t\t\t\t\tcount += overflow;\r\n\r\n\t\t\t\t\t// Move to virtual DOM\r\n\t\t\t\t\tvar vDOM = document.createElement('div');\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tvDOM.appendChild(exist[index + i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar nextSibling = exist[other] || null;\r\n\t\t\t\t\tvar theParent = nextSibling && nextSibling.parentNode;\r\n\r\n\t\t\t\t\tif(theParent === false){\r\n\t\t\t\t\t\tif(list.$virtual && list.length >= vEndRange)\r\n\t\t\t\t\t\t\ttheParent = list.$virtual.dom;\r\n\t\t\t\t\t\telse theParent = parentNode;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Move to defined index\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\ttheParent.insertBefore(vDOM.firstElementChild, nextSibling);\r\n\r\n\t\t\t\t\t\tif(callback !== void 0 && callback.update)\r\n\t\t\t\t\t\t\tcallback.update(exist[index + i], 'move');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(index > other){\r\n\t\t\t\t\tvar index_a = exist[other];\r\n\t\t\t\t\tother = exist[index];\r\n\t\t\t\t\tindex = index_a;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tindex = exist[index];\r\n\t\t\t\t\tother = exist[other];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar other_sibling = other.nextSibling;\r\n\t\t\t\tvar other_parent = other.parentNode;\r\n\t            index.parentNode.insertBefore(other, index.nextSibling);\r\n\t            other_parent.insertBefore(index, other_sibling);\r\n\r\n\t\t\t\tif(callback !== void 0 && callback.update){\r\n\t\t\t\t\tcallback.update(exist[other], 'swap');\r\n\t\t\t\t\tcallback.update(exist[index], 'swap');\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Clear unused element if current array < last array\r\n\t\t\tif(options === 'removeRange'){\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(options === 'remove'){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentEl = exist[index];\r\n\r\n\t\t\t\t\tif(callback !== void 0 && callback.remove){\r\n\t\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\t\tcurrentEl.remove();\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tstartRemove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse currentEl.remove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update\r\n\t\t\telse if(options === 'update'){\r\n\t\t\t\tif(index === void 0){\r\n\t\t\t\t\tindex = 0;\r\n\t\t\t\t\tother = list.length;\r\n\t\t\t\t}\r\n\t\t\t\telse if(other === void 0) other = index + 1;\r\n\t\t\t\telse if(other < 0) other = list.length + other;\r\n\t\t\t\telse other += index;\r\n\r\n\t\t\t\t// Trim length\r\n\t\t\t\tvar overflow = list.length - other;\r\n\t\t\t\tif(overflow < 0) other = other + overflow;\r\n\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\tvar oldChild = exist[i];\r\n\t\t\t\t\tif(oldChild === void 0 || list[i] === void 0)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\toldChild.parentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tparentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\tif(callback !== void 0 && callback.update)\r\n\t\t\t\t\t\tcallback.update(temp, 'replace');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar item = list[index];\r\n\t\t\tif(item === void 0) return;\r\n\r\n\t\t\tvar temp = templateParser(template, item);\r\n\t\t\tif(isKeyed === false)\r\n\t\t\t\tsyntheticCache(temp, template, item);\r\n\r\n\t\t\t// Create\r\n\t\t\tif(options === 'insertAfter'){\r\n\t\t\t\tif(exist.length === 0)\r\n\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\telse{\r\n\t\t\t\t\tvar referenceNode = exist[index - 1];\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode.nextSibling);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t\telse if(options === 'prepend'){\r\n\t\t\t\tvar referenceNode = exist[0];\r\n\t\t\t\tif(referenceNode !== void 0){\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode);\r\n\r\n\t\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t}\r\n\t\t\t\telse options = 'append';\r\n\t\t\t}\r\n\t\t\tif(options === 'append'){\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tif(index === 0) // Add before virtual scroller\r\n\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\telse if(index >= vEndRange){ // To virtual DOM\r\n\t\t\t\t\t\tif(list.$virtual.vCursor.floor === null)\r\n\t\t\t\t\t\t\tlist.$virtual.vCursor.floor = temp;\r\n\r\n\t\t\t\t\t\tlist.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse // To real DOM\r\n\t\t\t\t\t\texist[index-1].insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparentNode.appendChild(temp);\r\n\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar _double_zero = [0,0]; // For arguments\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = void 0;\r\n\t\t\t\t\tvar lastLength = this.length;\r\n\r\n\t\t\t\t\tif(name === 'move'){\r\n\t\t\t\t\t\tvar from = arguments[0];\r\n\t\t\t\t\t\tvar to = arguments[1];\r\n\t\t\t\t\t\tif(from === to) return;\r\n\t\t\t\t\t\tvar count = arguments[2] || 1;\r\n\t\t\t\t\t\tprocessElement(from, 'move', to, count);\r\n\r\n\t\t\t\t\t\tvar temp = Array.prototype.splice.apply(this, [from, count]);\r\n\t\t\t\t\t\ttemp.unshift(to, 0);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Reset virtual ceiling and floor\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(name === 'swap'){\r\n\t\t\t\t\t\tvar i = arguments[0];\r\n\t\t\t\t\t\tvar o = arguments[1];\r\n\t\t\t\t\t\tif(i === o) return;\r\n\t\t\t\t\t\tprocessElement(i, 'swap', o);\r\n\t\t\t\t\t\tvar temp = this[i];\r\n\t\t\t\t\t\tthis[i] = this[o];\r\n\t\t\t\t\t\tthis[o] = temp;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'replace'){\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.resetViewport();\r\n\r\n\t\t\t\t\t\t// Check if item has same reference\r\n\t\t\t\t\t\tif(arguments[0].length >= lastLength && lastLength !== 0){\r\n\t\t\t\t\t\t\tvar matchLeft = lastLength;\r\n\t\t\t\t\t\t\tvar ref = arguments[0];\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < lastLength; i++) {\r\n\t\t\t\t\t\t\t\tif(ref[i] === this[i]){\r\n\t\t\t\t\t\t\t\t\tmatchLeft--;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the end\r\n\t\t\t\t\t\t\tif(matchLeft === 0){\r\n\t\t\t\t\t\t\t\tif(ref.length === lastLength) return;\r\n\r\n\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(lastLength);\r\n\t\t\t\t\t\t\t\ttemp.unshift(lastLength, 0);\r\n\t\t\t\t\t\t\t\tthis.splice.apply(this, temp);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the middle\r\n\t\t\t\t\t\t\telse if(matchLeft !== lastLength){\r\n\t\t\t\t\t\t\t\tif(arguments[1] === true){\r\n\t\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(i);\r\n\t\t\t\t\t\t\t\t\ttemp.unshift(i, lastLength - i);\r\n\t\t\t\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t\t\t\tlist.refresh(i, lastLength);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Build from zero\r\n\t\t\t\t\t\tif(lastLength === 0){\r\n\t\t\t\t\t\t\tArray.prototype.push.apply(this, arguments[0]);\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Clear all items and merge the new one\r\n\t\t\t\t\t\tvar temp = [0, lastLength];\r\n\t\t\t\t\t\tArray.prototype.push.apply(temp, arguments[0]);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Rebuild all element\r\n\t\t\t\t\t\tif(arguments[1] !== true || isKeyed){\r\n\t\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reuse some element\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t// Clear unused element if current array < last array\r\n\t\t\t\t\t\t\tif(this.length < lastLength)\r\n\t\t\t\t\t\t\t\tprocessElement(this.length, 'removeRange', lastLength);\r\n\r\n\t\t\t\t\t\t\t// And start refreshing\r\n\t\t\t\t\t\t\tlist.refresh(0, this.length);\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual && list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reset virtual list\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reset();\r\n\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice' && arguments[0] === 0 && arguments[1] === void 0){\r\n\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\treturn Array.prototype.splice.apply(this, arguments);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(this.length, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'push'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(lastLength, 'append');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = 0; i < arguments.length; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(lastLength + i, 'append');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'shift'){\r\n\t\t\t\t\t\tprocessElement(0, 'remove');\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor > 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor--;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments[0] === 0 && arguments[1] === void 0)\r\n\t\t\t\t\t\t\treturn temp;\r\n\r\n\t\t\t\t\t\t// Removing data\r\n\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\tif(real < 0) real = lastLength + real;\r\n\r\n\t\t\t\t\t\tvar limit = arguments[1];\r\n\t\t\t\t\t\tif(!limit && limit !== 0) limit = this.length;\r\n\r\n\t\t\t\t\t\tfor (var i = limit - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tprocessElement(real + i, 'remove');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = real - limit;\r\n\r\n\t\t\t\t\t\tif(arguments.length >= 3){ // Inserting data\r\n\t\t\t\t\t\t\tlimit = arguments.length - 2;\r\n\r\n\t\t\t\t\t\t\t// Trim the index if more than length\r\n\t\t\t\t\t\t\tif(real >= this.length)\r\n\t\t\t\t\t\t\t\treal = this.length - 1;\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < limit; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(real + i, 'insertAfter');\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\t\tlist.$virtual.DOMCursor += limit;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(0, 'prepend');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = arguments.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\t\tprocessElement(i, 'prepend');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor !== 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor += arguments.length;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'softRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0], 'update', arguments[1]);\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'hardRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0] || 0, 'hardRefresh');\r\n\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = arguments[0] || 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(parentNode && parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\tdelete list.$virtual;\r\n\t\t\tlist.$virtual = {};\r\n\r\n\t\t\t// Transfer virtual DOM\r\n\t\t\tlist.$virtual.dom = tempDOM;\r\n\t\t\tif(callback !== void 0)\r\n\t\t\t\tlist.$virtual.callback = callback;\r\n\t\t\telse list.$virtual.callback_ = {ref:modelRef, var:eventVar};\r\n\r\n\t\t\tparentNode.replaceChild(template.html, parentChilds[1]);\r\n\t\t\tsf.internal.virtual_scroll.handle(list, targetNode, parentNode);\r\n\t\t\ttemplate.html.remove();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tvar scroller = internal.findScrollerElement(parentNode);\r\n\t\t\t\tif(scroller === null) return;\r\n\t\t\t\tscroller.classList.add('sf-scroll-element');\r\n\t\t\t\tinternal.addScrollerStyle();\r\n\t\t\t}, 500);\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\r\n\t\t// Todo: Enable auto item binding\r\n\t\tif(false && list.auto !== false){\r\n\t\t\t// for (var i = 0; i < list.length; i++) {\r\n\t\t\t// \tlist[i]\r\n\t\t\t// }\r\n\t\t}\r\n\r\n\t\thiddenProperty(list, '$replace', function(index, key, needle, func){\r\n\t\t\tvar elRef = list.getElement(index).sf$elementReferences;\r\n\t\t\tvar process = template.modelReference[key];\r\n\t\t\tif(process === void 0){\r\n\t\t\t\tconsole.error(\"Can't found binding for '\"+key+\"'\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < elRef.length; i++) {\r\n\t\t\t\tif(elRef[i].textContent === void 0 || elRef[i].ref.direct === void 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tif(process.indexOf(elRef[i].ref.direct) !== -1){\r\n\t\t\t\t\tvar ref = elRef[i].textContent;\r\n\t\t\t\t\tvar content = $.escapeText(list[index][key]).replace(needle, func);\r\n\r\n\t\t\t\t\t// Skip if nothing was changed\r\n\t\t\t\t\tif(list[index][key] === content) continue;\r\n\t\t\t\t\tref.textContent = ''; // Let this empty for later referencing\r\n\t\t\t\t\tref.sf$haveChilds = true;\r\n\t\t\t\t\tcontent = $.parseElement(content, true);\r\n\r\n\t\t\t\t\t// Remove old element if exist\r\n\t\t\t\t\twhile(ref.previousSibling && ref.previousSibling.sf$childRoot === ref){\r\n\t\t\t\t\t\tref.previousSibling.remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar parentNode_ = ref.parentNode;\r\n\t\t\t\t\tfor (var i = 0; i < content.length; i++) {\r\n\t\t\t\t\t\tcontent[i].sf$childRoot = ref;\r\n\t\t\t\t\t\tparentNode_.insertBefore(content[i], ref);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\thiddenProperty(list, 'refresh', function(index, length, property){\r\n\t\t\tif(index === void 0 || index.constructor === String){\r\n\t\t\t\tproperty = index;\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tlength = list.length;\r\n\t\t\t}\r\n\t\t\telse if(length === void 0) length = index + 1;\r\n\t\t\telse if(length.constructor === String){\r\n\t\t\t\tproperty = length;\r\n\t\t\t\tlength = index + 1;\r\n\t\t\t}\r\n\t\t\telse if(length < 0) length = list.length + length;\r\n\t\t\telse length += index;\r\n\r\n\t\t\t// Trim length\r\n\t\t\tvar overflow = list.length - length;\r\n\t\t\tif(overflow < 0) length = length + overflow;\r\n\r\n\t\t\tfor (var i = index; i < length; i++) {\r\n\t\t\t\tvar elem = list.getElement(i);\r\n\r\n\t\t\t\t// Create element if not exist\r\n\t\t\t\tif(elem === void 0){\r\n\t\t\t\t\tlist.hardRefresh(i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(isKeyed === true)\r\n\t\t\t\t\t\tlist.softRefresh(i);\r\n\t\t\t\t\telse if(syntheticTemplate(elem, template, property, list[i]) === false)\r\n\t\t\t\t\t\tcontinue; // Continue if no update\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== void 0 && callback.update)\r\n\t\t\t\t\tcallback.update(elem, 'replace');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar virtualChilds = null;\r\n\t\tif(list.$virtual)\r\n\t\t\tvirtualChilds = list.$virtual.dom.children;\r\n\t\thiddenProperty(list, 'getElement', function(index){\r\n\t\t\tif(virtualChilds !== null){\r\n\t\t\t\tvar ret = void 0;\r\n\t\t\t\tif(index < list.$virtual.DOMCursor)\r\n\t\t\t\t\treturn virtualChilds[index];\r\n\t\t\t\telse {\r\n\t\t\t\t\tindex -= list.$virtual.DOMCursor;\r\n\t\t\t\t\tvar childElement = parentNode.childElementCount - 2;\r\n\r\n\t\t\t\t\tif(index < childElement)\r\n\t\t\t\t\t\treturn parentChilds[index + 1];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn virtualChilds[index - childElement + list.$virtual.DOMCursor];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn void 0;\r\n\t\t\t}\r\n\r\n\t\t\treturn parentChilds[index];\r\n\t\t});\r\n\t}\r\n\r\n\tvar loopParser = function(name, template, script, targetNode, parentNode){\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\r\n\t\tvar items = root_(name)[method[1]];\r\n\t\tif(items === void 0)\r\n\t\t\titems = root_(name)[method[1]] = [];\r\n\r\n\t\ttemplate.setAttribute('sf-bind-list', method[1]);\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = template;\r\n\t\ttemplate = self.extractPreprocess(template, mask, name);\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\t\t\tvar tempDOM = document.createElement('div');\r\n\t\t\tvar modelRef = self.root[name];\r\n\r\n\t\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\t\tvar elem = templateParser(template, items[i]);\r\n\t\t\t\ttempDOM.appendChild(elem);\r\n\r\n\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\tsyntheticCache(elem, template, items[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// Enable element binding\r\n\t\t\tif(modelRef.sf$bindedKey === void 0)\r\n\t\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\t\tif(modelRef.sf$bindedKey[method[1]] === void 0)\r\n\t\t\t\tmodelRef.sf$bindedKey[method[1]] = null;\r\n\r\n\t\t\tObject.defineProperty(modelRef, method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tif(val.length === 0)\r\n\t\t\t\t\t\treturn items.splice(0);\r\n\t\t\t\t\treturn items.replace(val, true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tbindArray(template, items, mask, name, method[1], targetNode, parentNode, tempDOM);\r\n\r\n\t\t\t// Output to real DOM if not being used for virtual list\r\n\t\t\tif(items.$virtual === void 0){\r\n\t\t\t\tvar children = tempDOM.children;\r\n\t\t\t\tfor (var i = 0, n = children.length; i < n; i++) {\r\n\t\t\t\t\tparentNode.appendChild(children[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttempDOM.remove();\r\n\t\t\t\ttempDOM = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar callInputListener = function(model, property, value){\r\n\t\tvar callback = model['on$'+property];\r\n\t\tvar v2m = model['v2m$'+property];\r\n\t\tvar newValue1 = void 0; var newValue2 = void 0;\r\n\t\tif(callback !== void 0 || v2m !== void 0){\r\n\t\t\tvar old = model[property];\r\n\t\t\tif(old !== null && old !== void 0 && old.constructor === Array)\r\n\t\t\t\told = old.slice(0);\r\n\r\n\t\t\ttry{\r\n\t\t\t\tif(v2m !== void 0)\r\n\t\t\t\t\tnewValue1 = v2m(old, value);\r\n\r\n\t\t\t\tif(callback !== void 0)\r\n\t\t\t\t\tnewValue2 = callback(old, value);\r\n\t\t\t}catch(e){console.error(e)}\r\n\t\t}\r\n\t\treturn newValue2 !== void 0 ? newValue2 : newValue1;\r\n\t}\r\n\r\n\tvar inputBoundRunning = false;\r\n\tvar inputTextBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\r\n\t\tinputBoundRunning = true;\r\n\t\tvar ref = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar value = ref.typeData === Number ? Number(ref.value) : ref.value;\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== void 0)\r\n\t\t\tref.sfModel[ref.sfBounded] = newValue;\r\n\t\telse ref.sfModel[ref.sfBounded] = value;\r\n\t}\r\n\tvar inputFilesBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tvar ref = e.target;\r\n\t\tcallInputListener(ref.sfModel, ref.sfBounded, ref.files);\r\n\t\tref.sfModel[ref.sfBounded] = ref.files;\r\n\t}\r\n\r\n\tvar inputCheckBoxBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tinputBoundRunning = true;\r\n\t\tvar ref = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar value = ref.typeData === Number ? Number(ref.value) : ref.value;\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== void 0)\r\n\t\t\tvalue = newValue;\r\n\r\n\t\tvar model = ref.sfModel;\r\n\t\tvar constructor = model[ref.sfBounded].constructor;\r\n\r\n\t\tif(constructor === Array){\r\n\t\t\tvar i = model[ref.sfBounded].indexOf(value);\r\n\r\n\t\t\tif(i === -1 && ref.checked === true)\r\n\t\t\t\tmodel[ref.sfBounded].push(value);\r\n\t\t\telse if(i !== -1 && ref.checked === false)\r\n\t\t\t\tmodel[ref.sfBounded].splice(i, 1);\r\n\t\t}\r\n\t\telse if(constructor === Boolean || ref.typeData === Boolean)\r\n\t\t\tmodel[ref.sfBounded] = ref.checked;\r\n\t\telse model[ref.sfBounded] = value;\r\n\t}\r\n\r\n\tvar inputSelectBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tinputBoundRunning = true;\r\n\t\tvar ref = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar typeData = ref.typeData;\r\n\t\tif(ref.multiple === true){\r\n\t\t\tvar temp = ref.selectedOptions;\r\n\t\t\tvar value = [];\r\n\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\tvalue.push(typeData === Number ? Number(temp[i].value) : temp[i].value);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse value = typeData === Number ? Number(ref.selectedOptions[0].value) : ref.selectedOptions[0].value;\r\n\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== void 0)\r\n\t\t\tref.sfModel[ref.sfBounded] = newValue;\r\n\t\telse ref.sfModel[ref.sfBounded] = value;\r\n\t}\r\n\r\n\tvar assignElementData = {\r\n\t\tselect:function(model, property, element){\r\n\t\t\tvar list = element.options;\r\n\t\t\tvar typeData = element.typeData;\r\n\t\t\tvar arrayValue = model[property].constructor === Array ? model[property] : false;\r\n\t\t\tfor (var i = 0, n = list.length; i < n; i++) {\r\n\t\t\t\tif(arrayValue === false){\r\n\t\t\t\t\tif(typeData === String)\r\n\t\t\t\t\t\tlist[i].selected = list[i].value === model[property];\r\n\t\t\t\t\telse list[i].selected = list[i].value == model[property];\r\n\t\t\t\t}\r\n\t\t\t\telse list[i].selected = arrayValue.indexOf(typeData === Number ? Number(list[i].value) : list[i].value) !== -1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckbox:function(model, property, element){\r\n\t\t\tif(model[property].constructor === Array)\r\n\t\t\t\telement.checked = model[property].indexOf(element.typeData === Number ? Number(element.value) : element.value) !== -1;\r\n\t\t\telse if(model[property].constructor === Boolean)\r\n\t\t\t\telement.checked = Boolean(model[property]);\r\n\t\t\telse{\r\n\t\t\t\tif(element.typeData === String)\r\n\t\t\t\t\telement.checked = element.value === model[property];\r\n\t\t\t\telse element.checked = element.value == model[property];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar inputBoundRun = function(model, property, elements){\r\n\t\tif(inputBoundRunning === true)\r\n\t\t\treturn; // Avoid multiple assigment\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\tvar ev = new Event('change');\r\n\t\t\tev.fromSFFramework = true;\r\n\r\n\t\t\tif(elements.type === 1) // text\r\n\t\t\t\telements[i].value = model[property];\r\n\t\t\telse if(elements.type === 2) // select options\r\n\t\t\t\tassignElementData.select(model, property, elements[i]);\r\n\t\t\telse if(elements.type === 3) // radio\r\n\t\t\t\telements[i].checked = model[property] == elements[i].value;\r\n\t\t\telse if(elements.type === 4) // checkbox\r\n\t\t\t\tassignElementData.checkbox(model, property, elements[i]);\r\n\r\n\t\t\telements[i].dispatchEvent(ev);\r\n\t\t}\r\n\t}\r\n\r\n\tvar triggerInputEvent = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\tif(e.target.viewInputted === true){\r\n\t\t\te.target.viewInputted = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\te.target.dispatchEvent(new Event('input'));\r\n\t}\r\n\r\n\tvar elementBoundChanges = function(model, property, element, oneWay){\r\n\t\t// Enable multiple element binding\r\n\t\tif(model.sf$bindedKey === void 0)\r\n\t\t\tinitBindingInformation(model);\r\n\r\n\t\tvar type = 0;\r\n\t\tvar typeData = null;\r\n\t\tif(model[property] !== null && model[property] !== void 0)\r\n\t\t\ttypeData = model[property].constructor;\r\n\r\n\t\tvar assignedType = (element.getAttribute('typedata') || '').toLowerCase();\r\n\t\tif(assignedType === 'number')\r\n\t\t\ttypeData = Number;\r\n\r\n\t\telement.typeData = typeData;\r\n\t\t$.on(element, 'change', triggerInputEvent);\r\n\r\n\t\t// Bound value change\r\n\t\tif(element.tagName === 'TEXTAREA'){\r\n\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\telement.value = model[property];\r\n\t\t\ttype = 1;\r\n\t\t}\r\n\r\n\t\telse if(element.selectedOptions !== void 0){\r\n\t\t\t$.on(element, 'input', inputSelectBound);\r\n\t\t\ttype = 2;\r\n\r\n\t\t\tassignElementData.select(model, property, element);\r\n\t\t}\r\n\r\n\t\telse{\r\n\t\t\tvar type = element.type.toLowerCase();\r\n\t\t\tif(type === 'radio'){\r\n\t\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\t\ttype = 3;\r\n\r\n\t\t\t\telement.checked = model[property] == element.value;\r\n\t\t\t}\r\n\t\t\telse if(type === 'checkbox'){\r\n\t\t\t\t$.on(element, 'input', inputCheckBoxBound);\r\n\t\t\t\ttype = 4;\r\n\r\n\t\t\t\tassignElementData.checkbox(model, property, element);\r\n\t\t\t}\r\n\r\n\t\t\telse if(type === 'file'){\r\n\t\t\t\t$.on(element, 'input', inputFilesBound);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telse{\r\n\t\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\t\telement.value = model[property];\r\n\t\t\t\ttype = 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(oneWay === true) return;\r\n\t\tmodelToViewBinding(model, property, inputBoundRun, element, type);\r\n\t}\r\n\r\n\tvar bindInput = function(targetNode){\r\n\t\tvar temp = $('input[sf-bound], textarea[sf-bound], select[sf-bound], input[sf-bind], textarea[sf-bind], select[sf-bind]', targetNode);\r\n\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar model = sf.controller.modelName(element);\r\n\t\t\tif(!model) return;\r\n\t\t\tvar modelScope = self.root[model];\r\n\r\n\t\t\tvar oneWay = false;\r\n\t\t\tvar propertyName = element.getAttribute('sf-bound');\r\n\t\t\tif(propertyName === null){\r\n\t\t\t\tpropertyName = element.getAttribute('sf-bind');\r\n\t\t\t\toneWay = true;\r\n\t\t\t}\r\n\t\t\tif(propertyName === \"\")\r\n\t\t\t\tpropertyName = element.getAttribute('name');\r\n\r\n\t\t\tif(propertyName === null){\r\n\t\t\t\tconsole.error(\"Property key to be bound wasn't be found\", element);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(modelScope[propertyName] === void 0){\r\n\t\t\t\tconsole.error('Can\\'t get property \"'+propertyName+'\" on model \"' + model + '\"');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement.sfBounded = propertyName;\r\n\t\t\telement.sfModel = modelScope;\r\n\t\t\tif(oneWay === false){\r\n\t\t\t\telement.setAttribute('sf-bounded', '');\r\n\t\t\t\telement.removeAttribute('sf-bound');\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\telement.setAttribute('sf-binded', '');\r\n\t\t\t\telement.removeAttribute('sf-bind');\r\n\t\t\t}\r\n\r\n\t\t\telementBoundChanges(modelScope, propertyName, element, oneWay);\r\n\t\t}\r\n\t}\r\n\r\n\tvar alreadyInitialized = false;\r\n\tself.init = function(targetNode, queued){\r\n\t\tif(alreadyInitialized && !targetNode) return;\r\n\t\talreadyInitialized = true;\r\n\t\tsetTimeout(function(){\r\n\t\t\talreadyInitialized = false;\r\n\t\t}, 50);\r\n\r\n\t\tif(!targetNode) targetNode = document.body;\r\n\r\n\t\t// Handle Router Start ==>\r\n\t\tif(sf.router.enabled === true){\r\n\t\t\t// Before model binding\r\n\t\t\tvar temp = $('[sf-page]', targetNode);\r\n\t\t\tvar sfPage = [];\r\n\t\t\ttry{\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tvar sfp = temp[i].getAttribute('sf-page');\r\n\t\t\t\t\tsfPage.push(sfp);\r\n\t\t\t\t\tinternal.routerLocalEvent('before', sfp);\r\n\t\t\t\t}\r\n\t\t\t}catch(e){\r\n\t\t\t\tconsole.error(e, \"Try to use 'sf.router.when' if you want to execute script after model and the view was initialized.\");\r\n\t\t\t}\r\n\r\n\t\t\t// When the model was binded with the view\r\n\t\t\tinternal.afterModelBinding = function(){\r\n\t\t\t\tfor (var i = 0; i < sfPage.length; i++) {\r\n\t\t\t\t\tinternal.routerLocalEvent('when', temp[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinternal.afterModelBinding = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// <== Handle Router End\r\n\r\n\t\tself.parsePreprocess(queued || self.queuePreprocess(targetNode), queued);\r\n\t\tbindInput(targetNode);\r\n\r\n\t\t// Find element for array binding\r\n\t\trepeatedListBinding($('[sf-repeat-this]', targetNode), targetNode, queued);\r\n\r\n\t\t// Used by router\r\n\t\tif(internal.afterModelBinding !== undefined)\r\n\t\t\tinternal.afterModelBinding();\r\n\t}\r\n\r\n\tfunction repeatedListBinding(temp, targetNode, queued, controller_){\r\n\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\tvar element = temp[a];\r\n\t\t\tvar parent = element.parentElement;\r\n\r\n\t\t\tif(queued !== void 0)\r\n\t\t\t\telement.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(parent.classList.contains('sf-virtual-list')){\r\n\t\t\t\tvar ceiling = document.createElement(element.tagName);\r\n\t\t\t\tceiling.classList.add('virtual-spacer');\r\n\t\t\t\tvar floor = ceiling.cloneNode(true);\r\n\r\n\t\t\t\tceiling.classList.add('ceiling');\r\n\t\t\t\tparent.insertBefore(ceiling, parent.firstElementChild); // prepend\r\n\r\n\t\t\t\tfloor.classList.add('floor');\r\n\t\t\t\tparent.appendChild(floor); // append\r\n\t\t\t}\r\n\r\n\t\t\tvar after = element.nextElementSibling;\r\n\t\t\tif(after === null || element === after)\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = element.previousElementSibling;\r\n\t\t\tif(before === null || element === before)\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = element.getAttribute('sf-repeat-this');\r\n\t\t\telement.removeAttribute('sf-repeat-this');\r\n\r\n\t\t\t// Check if the element was already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(element.outerHTML))\r\n\t\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\t\tif(controller_ !== void 0)\r\n\t\t\t\tvar controller = controller_;\r\n\t\t\telse{\r\n\t\t\t\tvar controller = sf.controller.modelName(element);\r\n\t\t\t\tif(controller === void 0) continue;\r\n\t\t\t}\r\n\r\n\t\t\tloopParser(controller, element, script, targetNode, parent);\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t}\r\n\r\n\t// Reset model properties\r\n\t// Don't call if the removed element is TEXT or #comment\r\n\tvar DOMNodeRemoved = scope.DOMNodeRemoved = function(element, isScan){\r\n\t\tif(isScan === void 0){\r\n\t\t\tvar temp = element.querySelectorAll('[sf-controller]');\r\n\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\tDOMNodeRemoved(temp[i], true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(element.hasAttribute('sf-controller') !== false){\r\n\t\t\tvar modelName = element.sf$component === void 0 ? element.getAttribute('sf-controller') : element.sf$component;\r\n\r\n\t\t\tremoveModelBinding(modelName);\r\n\t\t\tif(element.sf$component !== void 0){\r\n\t\t\t\tvar modelFrom = element.sf$componentFrom;\r\n\t\t\t\tvar components = sf.component.available[modelFrom];\r\n\t\t\t\tcomponents.splice(components.indexOf(modelName), 1);\r\n\t\t\t\tinternal.component.triggerEvent(modelFrom, 'removed', self.root[modelName]);\r\n\t\t\t\tdelete self.root[modelName];\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tsf(function(){\r\n\t\tvar everyRemovedNodes = function(nodes){\r\n\t\t\tif(nodes.nodeType !== 1 || nodes.firstElementChild === null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(nodes.sf$elementReferences !== void 0) return;\r\n\t\t\tDOMNodeRemoved(nodes);\r\n\t\t}\r\n\r\n\t\tif(typeof MutationObserver === 'function' && MutationObserver.prototype.observe){\r\n\t\t\tvar everyRecords = function(record){\r\n\t\t\t\trecord.removedNodes.forEach(everyRemovedNodes);\r\n\t\t\t}\r\n\r\n\t\t\tvar observer = new MutationObserver(function(records){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\trecords.forEach(everyRecords);\r\n\t\t\t});\r\n\r\n\t\t\tobserver.observe(document.body, { childList: true, subtree: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.body.addEventListener('DOMNodeRemoved', function(e){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\teveryRemovedNodes(e.target);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tvar removeModelBinding = self.reset = function(modelName){\r\n\t\tvar ref = self.root[modelName];\r\n\t\tif(ref === void 0)\r\n\t\t\treturn;\r\n\r\n\t\tvar bindedKey = ref.sf$bindedKey;\r\n\t\tvar temp = null;\r\n\t\tfor(var key in bindedKey){\r\n\t\t\tdelete bindedKey[key];\r\n\r\n\t\t\tif(ref[key] === void 0 || ref[key] === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(ref[key].constructor === String ||\r\n\t\t\t\tref[key].constructor === Number ||\r\n\t\t\t\tref[key].constructor === Boolean\r\n\t\t\t){/* Ok */}\r\n\r\n\t\t\telse if(ref[key].constructor === Array){\r\n\t\t\t\tif(ref[key].$virtual){\r\n\t\t\t\t\tref[key].$virtual.destroy();\r\n\t\t\t\t\tdelete ref[key].$virtual;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset property without copying the array\r\n\t\t\t\ttemp = ref[key].splice('obtain');\r\n\t\t\t\tdelete ref[key];\r\n\t\t\t\tref[key] = temp;\r\n\t\t\t}\r\n\t\t\telse continue;\r\n\r\n\t\t\tif(Object.getOwnPropertyDescriptor(ref, key) === void 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Reconfigure / Remove property descriptor\r\n\t\t\tvar temp = ref[key];\r\n\t\t\tdelete ref[key];\r\n\t\t\tref[key] = temp;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction modelToViewBinding(model, propertyName, callback, elementBind, type){\r\n\t\t// Enable multiple element binding\r\n\t\tif(model.sf$bindedKey === void 0)\r\n\t\t\tinitBindingInformation(model);\r\n\r\n\t\tif(model.sf$bindedKey[propertyName] !== void 0){\r\n\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\tif(ref.indexOf(callback) === -1)\r\n\t\t\t\tref.push(callback);\r\n\r\n\t\t\tif(elementBind !== void 0){\r\n\t\t\t\tif(ref.input === void 0){\r\n\t\t\t\t\tref.input = [elementBind];\r\n\t\t\t\t\tref.input.type = type;\r\n\t\t\t\t}\r\n\t\t\t\telse ref.input.push(elementBind);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tmodel.sf$bindedKey[propertyName] = [callback];\r\n\r\n\t\tif(elementBind !== void 0){\r\n\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\tref.input = [elementBind];\r\n\t\t\tref.input.type = type;\r\n\t\t}\r\n\r\n\t\t// Proxy property\r\n\t\tif(Object.getOwnPropertyDescriptor(model, propertyName).set !== void 0)\r\n\t\t\treturn;\r\n\r\n\t\tvar objValue = model[propertyName]; // Object value\r\n\t\tObject.defineProperty(model, propertyName, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\t\t\tget:function(getAssigner){\r\n\t\t\t\treturn objValue;\r\n\t\t\t},\r\n\t\t\tset:function(val){\r\n\t\t\t\tif(objValue !== val){\r\n\t\t\t\t\tvar m2v = model['m2v$'+propertyName];\r\n\t\t\t\t\tvar out = inputBoundRunning === false ? model['out$'+propertyName] : void 0;\r\n\t\t\t\t\tvar callback = inputBoundRunning === false ? model['on$'+propertyName] : void 0;\r\n\r\n\t\t\t\t\tif(callback !== void 0 || m2v !== void 0 || out !== void 0){\r\n\t\t\t\t\t\tvar newValue1 = void 0; var newValue2 = void 0; var newValue3 = void 0;\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tif(m2v !== void 0)\r\n\t\t\t\t\t\t\t\tnewValue1 = m2v(objValue, val);\r\n\r\n\t\t\t\t\t\t\tif(out !== void 0)\r\n\t\t\t\t\t\t\t\tnewValue2 = out(objValue, val);\r\n\r\n\t\t\t\t\t\t\tif(callback !== void 0)\r\n\t\t\t\t\t\t\t\tnewValue3 = callback(objValue, val);\r\n\t\t\t\t\t\t}catch(e){console.error(e)}\r\n\r\n\t\t\t\t\t\tobjValue = (newValue3 !== void 0 ? newValue3 : \r\n\t\t\t\t\t\t\t(newValue2 !== void 0 ? newValue2 : \r\n\t\t\t\t\t\t\t(newValue1 !== void 0 ? newValue1 : val)\r\n\t\t\t\t\t\t));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse objValue = val;\r\n\r\n\t\t\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\t\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\t\t\t\tif(inputBoundRun === ref[i]){\r\n\t\t\t\t\t\t\tif(inputBoundRunning !== true) // Avoid multiple assigment\r\n\t\t\t\t\t\t\t\tref[i](model, propertyName, ref.input);\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tref[i]();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinputBoundRunning = false;\r\n\t\t\t\treturn objValue;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvar dcBracket = /{{[^#][\\s\\S]*?}}/;\r\n\tself.bindElement = function(element){\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar data = self.extractPreprocess(element, null, modelName);\r\n\t\ttemplateParser(data, model, true);\r\n\t\tdelete data.addresses;\r\n\t\telement.parentNode.replaceChild(data.html, element);\r\n\r\n\t\telement = data.html;\r\n\r\n\t\tvar onChanges = function(){\r\n\t\t\tif(syntheticTemplate(element, data, void 0, model) === false)\r\n\t\t\t\t0; //No update\r\n\t\t};\r\n\r\n\t\tvar properties = data.modelRef_array;\r\n\t\tfor (var i = 0; i < properties.length; i++) {\r\n\t\t\tvar propertyName = properties[i][0];\r\n\r\n\t\t\tif(model[propertyName] === void 0)\r\n\t\t\t\tmodel[propertyName] = '';\r\n\r\n\t\t\tmodelToViewBinding(model, propertyName, onChanges);\r\n\t\t}\r\n\t}\r\n\r\n\tself.extractPreprocess = function(targetNode, mask, name){\r\n\t\t// Check if it's component\r\n\t\tvar tagName = targetNode.tagName.toLowerCase();\r\n\t\tif(sf.component.registered[tagName] !== void 0){\r\n\t\t\ttargetNode.parentNode.classList.add('sf-keyed-list');\r\n\t\t\ttargetNode.textContent = '';\r\n\t\t\ttargetNode.remove();\r\n\t\t\ttargetNode.setAttribute('sf-component-ignore', '');\r\n\t\t\treturn {\r\n\t\t\t\tcomponent:window['$'+capitalizeLetters(tagName.split('-'))],\r\n\t\t\t\tlist:targetNode.getAttribute('sf-bind-list')\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Remove repeated list from further process\r\n\t\tvar backup = targetNode.querySelectorAll('[sf-repeat-this]');\r\n\t\tfor (var i = 0; i < backup.length; i++) {\r\n\t\t\tvar current = backup[i];\r\n\t\t\tcurrent.insertAdjacentHTML('afterEnd', '<sfrepeat-this id=\"'+i+'\"></sfrepeat-this>');\r\n\t\t\tcurrent.remove();\r\n\t\t}\r\n\r\n\t\tvar copy = targetNode.outerHTML;\r\n\r\n\t\t// Mask the referenced item\r\n\t\tif(mask !== null)\r\n\t\t\tcopy = copy.split('#'+mask).join('_model_');\r\n\t\telse{ // Replace all masked item\r\n\t\t\tcopy.replace(/sf-repeat-this=\"(?:\\W+|)(\\w+)/g, function(full, match){\r\n\t\t\t\tcopy = copy.split('#'+match).join('_model_');\r\n\t\t\t\tcopy = copy.replace(RegExp(sf.regex.strictVar+\"(\"+match+\")\\\\b\", 'g'), '_model_');\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Extract data to be parsed\r\n\t\tcopy = uniqueDataParser(copy, null, mask, name, '#noEval');\r\n\t\tvar preParsed = copy[1];\r\n\t\tvar _content_ = copy[2];\r\n\t\tcopy = dataParser(copy[0], null, mask, name, '#noEval', preParsed);\r\n\r\n\t\tfunction findModelProperty(){\r\n\t\t\tif(mask === null){ // For model items\r\n\t\t\t\t// Get model keys and sort by text length, make sure the longer one is from first index to avoid wrong match\r\n\t\t\t\tvar extract = RegExp('(?:{{.*?\\\\b|_modelScope\\\\.)('+self.modelKeys(self.root[name]).sort(function(a, b){\r\n\t\t\t\t\treturn b.length - a.length\r\n\t\t\t\t}).join('|')+')(\\\\b.*?}}|)', 'g');\r\n\t\t\t}\r\n\t\t\telse var extract = sf.regex.arrayItemsObserve; // For array items\r\n\t\t\tvar found = {};\r\n\r\n\t\t\tfor (var i = 0; i < preParsed.length; i++) {\r\n\t\t\t\tvar current = preParsed[i];\r\n\r\n\t\t\t\t// Text or attribute\r\n\t\t\t\tif(current.type === 0){\r\n\t\t\t\t\tcurrent.data[0].split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(found[match] === void 0) found[match] = [i];\r\n\t\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Dynamic data\r\n\t\t\t\tif(current.type === 1){\r\n\t\t\t\t\tvar checkList = current.if.join(';');\r\n\r\n\t\t\t\t\tif(current.elseValue !== null)\r\n\t\t\t\t\t\tcheckList += ';' + current.elseValue;\r\n\r\n\t\t\t\t\tfor (var a = 0; a < current.elseIf.length; a++) {\r\n\t\t\t\t\t\tcheckList += current.elseIf[a].join(';');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(current.type === 2)\r\n\t\t\t\t\tvar checkList = current.data[0];\r\n\r\n\t\t\t\tcheckList = checkList.replace(/_result_ \\+= _content_\\.take\\(.*?, ([0-9]+)\\);/g, function(full, match){\r\n\t\t\t\t\treturn _content_[match];\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// console.log(99, checkList);\r\n\t\t\t\tcheckList.split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found[match] === void 0) found[match] = [i];\r\n\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn found;\r\n\t\t}\r\n\r\n\t\t// Rebuild element\r\n\t\tcopy = $.parseElement(copy)[0];\r\n\r\n\t\t// Restore element repeated list\r\n\t\tvar restore = copy.querySelectorAll('sfrepeat-this');\r\n\t\tfor (var i = 0; i < restore.length; i++) {\r\n\t\t\tvar current = restore[i];\r\n\t\t\tcurrent.parentNode.replaceChild(backup[current.id], current);\r\n\t\t}\r\n\r\n\t\t// Start addressing\r\n\t\tvar nodes = self.queuePreprocess(copy, true).reverse();\r\n\t\tvar addressed = [];\r\n\r\n\t\tfunction addressAttributes(currentNode){\r\n\t\t\tvar attrs = currentNode.attributes;\r\n\t\t\tvar keys = [];\r\n\t\t\tvar indexes = 0;\r\n\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\tvar found = attrs[a].value.split('{{%=');\r\n\t\t\t\tif(found.length !== 1){\r\n\t\t\t\t\tif(attrs[a].name[0] === ':'){\r\n\t\t\t\t\t\tvar key = {\r\n\t\t\t\t\t\t\tname:attrs[a].name.split(':').join(''),\r\n\t\t\t\t\t\t\tvalue:attrs[a].value\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tcurrentNode.removeAttribute(attrs[a].name);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse var key = {\r\n\t\t\t\t\t\tname:attrs[a].name,\r\n\t\t\t\t\t\tvalue:attrs[a].value\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tindexes = [];\r\n\t\t\t\t\tfound = key.value.replace(/{{%=([0-9]+)/g, function(full, match){\r\n\t\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found === '' && indexes.length === 1)\r\n\t\t\t\t\t\tkey.direct = indexes[0];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tkey.parse_index = indexes;\r\n\r\n\t\t\t\t\tkeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn keys;\r\n\t\t}\r\n\r\n\t\tvar currentElement = addressAttributes(copy);\r\n\t\tif(currentElement.length !== 0)\r\n\t\t\taddressed.push({\r\n\t\t\t\tnodeType:1,\r\n\t\t\t\taddress:[0],\r\n\t\t\t\tattributes:currentElement\r\n\t\t\t});\r\n\r\n\t\tfor (var i = 0; i < nodes.length; i++) {\r\n\t\t\tvar temp = {\r\n\t\t\t\tnodeType:nodes[i].nodeType\r\n\t\t\t};\r\n\r\n\t\t\tif(temp.nodeType === 1){ // Element\r\n\t\t\t\ttemp.attributes = addressAttributes(nodes[i]);\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\telse if(temp.nodeType === 3){ // Text node\r\n\t\t\t\tvar innerHTML = nodes[i].textContent;\r\n\t\t\t\tvar indexes = [];\r\n\r\n\t\t\t\tinnerHTML.replace(/{{%%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Check for dynamic mode\r\n\t\t\t\tif(indexes.length !== 0){\r\n\t\t\t\t\tinnerHTML = innerHTML.split(/{{%%=[0-9]+/gm);\r\n\t\t\t\t\tfor (var a = 0; a < innerHTML.length; a++) {\r\n\t\t\t\t\t\tinnerHTML[a] = trimIndentation(innerHTML[a]).trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodes[i].textContent = innerHTML.shift();\r\n\r\n\t\t\t\t\tvar parent = nodes[i].parentNode;\r\n\t\t\t\t\tvar nextSibling = nodes[i].nextSibling;\r\n\r\n\t\t\t\t\t// Dynamic boundary start\r\n\t\t\t\t\tvar addressStart = null;\r\n\t\t\t\t\tif(indexes.length !== 0 && nodes[i].textContent.length !== 0)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i], true);\r\n\t\t\t\t\telse if(nodes[i].previousSibling !== null)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i].previousSibling, true);\r\n\r\n\t\t\t\t\t// Find boundary ends\r\n\t\t\t\t\tvar commentFlag = [];\r\n\t\t\t\t\tfor(var a = 0; a < indexes.length; a++){\r\n\t\t\t\t\t\tvar flag = document.createComment('');\r\n\t\t\t\t\t\tparent.insertBefore(flag, nextSibling);\r\n\t\t\t\t\t\tcommentFlag.push({\r\n\t\t\t\t\t\t\tnodeType:-1,\r\n\t\t\t\t\t\t\tparse_index:indexes[a],\r\n\t\t\t\t\t\t\tstartFlag:addressStart,\r\n\t\t\t\t\t\t\taddress:$.getSelector(flag, true)\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(innerHTML[a]){\r\n\t\t\t\t\t\t\tvar textNode = document.createTextNode(innerHTML[a]);\r\n\t\t\t\t\t\t\tparent.insertBefore(textNode, nextSibling);\r\n\r\n\t\t\t\t\t\t\t// Get new start flag\r\n\t\t\t\t\t\t\tif(a + 1 < indexes.length)\r\n\t\t\t\t\t\t\t\taddressStart = $.getSelector(textNode, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Merge boundary address\r\n\t\t\t\t\tArray.prototype.push.apply(addressed, commentFlag);\r\n\t\t\t\t\tif(nodes[i].textContent === ''){\r\n\t\t\t\t\t\tnodes[i].remove();\r\n\t\t\t\t\t\tfor (var a = 0; a < commentFlag.length; a++) {\r\n\t\t\t\t\t\t\tvar ref = commentFlag[a].address;\r\n\t\t\t\t\t\t\tref[ref.length - 1]--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(nodes[i].textContent.search(/{{%=[0-9]+/) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if it's only model value\r\n\t\t\t\tindexes = [];\r\n\t\t\t\tinnerHTML = nodes[i].textContent.replace(/{{%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(innerHTML === '' && indexes.length === 1)\r\n\t\t\t\t\ttemp.direct = indexes[0];\r\n\t\t\t\telse{\r\n\t\t\t\t\ttemp.value = nodes[i].textContent;\r\n\t\t\t\t\ttemp.parse_index = indexes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\taddressed.push(temp);\r\n\t\t}\r\n\r\n\t\tvar modelReference = findModelProperty();\r\n\t\tvar keys = Object.keys(modelReference);\r\n\t\tvar asArray = [];\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tasArray.push([keys[i], keys[i].split('.')]);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\thtml:copy,\r\n\t\t\tparse:preParsed,\r\n\t\t\taddresses:addressed,\r\n\t\t\tmodelReference:modelReference,\r\n\t\t\tmodelRef_array:asArray\r\n\t\t};\r\n\t}\r\n\r\n\tvar enclosedHTMLParse = false;\r\n\tvar excludes = ['HTML','HEAD','STYLE','LINK','META','SCRIPT','OBJECT','IFRAME'];\r\n\tself.queuePreprocess = function(targetNode, extracting){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = childNodes.length - 1; i >= 0; i--) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\r\n\t\t\tif(extracting === void 0 && excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tif(enclosedHTMLParse === true) continue;\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\r\n\t\t\t\t// Skip element and it's childs that already bound to prevent vulnerability\r\n\t\t\t\tif(attrs['sf-bind-key'] || attrs['sf-repeat-this'] || attrs['sf-bind-list'] || currentNode.sf$elementReferences !== void 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tArray.prototype.push.apply(temp, self.queuePreprocess(currentNode, extracting));\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tif(currentNode.textContent.length === 0){\r\n\t\t\t\t\tcurrentNode.remove();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// The scan is from bottom to first index\r\n\t\t\t\tvar enclosing = currentNode.textContent.indexOf('{[');\r\n\t\t\t\tif(enclosing !== -1)\r\n\t\t\t\t\tenclosedHTMLParse = false;\r\n\t\t\t\telse if(enclosedHTMLParse === true)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Start enclosed if closing pattern was found\r\n\t\t\t\tvar enclosed = currentNode.textContent.indexOf(']}');\r\n\t\t\t\tif(enclosed !== -1 && (enclosing === -1 || enclosing > enclosed)){ // avoid {[ ... ]}\r\n\t\t\t\t\tenclosedHTMLParse = true; // when ]} ... \r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tif(extracting === void 0){\r\n\t\t\t\t\t\ttemp.push(currentNode.parentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn temp;\r\n\t}\r\n\r\n\tself.parsePreprocess = function(nodes, queued){\r\n\t\tfor (var a = 0; a < nodes.length; a++) {\r\n\t\t\t// Get reference for debugging\r\n\t\t\tvar current = processingElement = nodes[a];\r\n\r\n\t\t\tvar modelElement = sf.controller.modelElement(current);\r\n\t\t\tif(modelElement === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar model = modelElement.sf$component === void 0 ? modelElement.getAttribute('sf-controller') : modelElement.sf$component;\r\n\r\n\t\t\tif(queued !== void 0)\r\n\t\t\t\tcurrent.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(internal.modelPending[model] || self.root[model] === undefined)\r\n\t\t\t\tself(model);\r\n\r\n\t\t\tvar modelRef = self.root[model];\r\n\r\n\t\t\t// Double check if the child element already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(current.innerHTML)){\r\n\t\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\t\tconsole.log(processingElement.cloneNode(true));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(current.hasAttribute('sf-bind-ignore') === false)\r\n\t\t\t\tself.bindElement(current);\r\n\t\t\telse{\r\n\t\t\t\tvar temp = uniqueDataParser(current.innerHTML, modelRef, false, model);\r\n\t\t\t\tcurrent.innerHTML = dataParser(temp, modelRef, false, model);\r\n\t\t\t\tvar attrs = current.attributes;\r\n\t\t\t\tfor (var i = 0; i < attrs.length; i++) {\r\n\t\t\t\t\tif(attrs[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tvar attr = attrs[i];\r\n\t\t\t\t\t\tattr.value = dataParser(attr.value, modelRef, false, model);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initBindingInformation(modelRef){\r\n\t\tif(modelRef.sf$bindedKey !== void 0)\r\n\t\t\treturn;\r\n\r\n\t\t// Element binding data\r\n\t\tObject.defineProperty(modelRef, 'sf$bindedKey', {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable:false,\r\n\t\t\twritable:true,\r\n\t\t\tvalue:{}\r\n\t\t});\r\n\t}\r\n})();","sf.API = function(method, url, data, success, complete, accessToken){\r\n\tvar req = {\r\n\t\turl:url,\r\n\t\tdataType:'json',\r\n\t\tcontentType:\"application/json\",\r\n\t\tmethod:'POST',\r\n\t\tsuccess:function(obj){\r\n\t\t\tif(!sf.API.onSuccess(obj) && success)\r\n\t\t\t\tsuccess(obj, url);\r\n\r\n\t\t\tif(complete) complete(true);\r\n\t\t},\r\n\t\terror:function(xhr, status){\r\n\t\t\tsf.API.onError(xhr, status)\r\n\t\t\tif(complete) complete(false, status);\r\n\t\t}\r\n\t};\r\n\r\n\tif(typeof data !== 'object')\r\n\t\tdata = {};\r\n\r\n\tdata._method = method.toUpperCase();\r\n\r\n\tif(accessToken)\r\n\t\tdata.access_token = accessToken;\r\n\t\r\n\treq.data = data;\r\n\tsf.ajax(req);\r\n}\r\n\r\nsf.API.onError = function(xhr, status){};\r\nsf.API.onSuccess = function(obj){};\r\n\r\nsf.API.url = 'http://anisics.sandbox/api';\r\nsf.API.accessToken = false;\r\nsf.API.get = function(url, data, success, complete){\r\n\treturn sf.API('get', this.url+url, data, success, complete, this.accessToken);\r\n}\r\nsf.API.post = function(url, data, success, complete){\r\n\treturn sf.API('post', this.url+url, data, success, complete, this.accessToken);\r\n}\r\nsf.API.delete = function(url, data, success, complete){\r\n\treturn sf.API('delete', this.url+url, data, success, complete, this.accessToken);\r\n}\r\nsf.API.put = function(url, data, success, complete){\r\n\treturn sf.API('put', this.url+url, data, success, complete, this.accessToken);\r\n}","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tself.pending = {};\r\n\tself.active = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tif(sf.component.registered[name]){\r\n\t\t\tsf.component.registered[name][1] = func;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tself.pending[name] = func;\r\n\t}\r\n\r\n\tself.modelScope = function(element, func){\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = element.getAttribute('sf-bind-list');\r\n\t\tif(!bindedList){\r\n\t\t\tvar parentEl = $.parent(element, '[sf-bind-list]');\r\n\t\t\tif(parentEl !== null)\r\n\t\t\t\tbindedList = parentEl.getAttribute('sf-bind-list');\r\n\t\t}\r\n\t\telse var parentEl = element;\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(sf.model.root[model], -1);\r\n\t\t\telse return sf.model.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = $.prevAll(parentEl, '[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(sf.model.root[model][bindedList], bindedListIndex);\r\n\t\telse return sf.model.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.modelElement = function(element){\r\n\t\tif(element.nodeType === 1 && element.hasAttribute('sf-controller') === true)\r\n\t\t\treturn element;\r\n\r\n\t\treturn $.parent(element, '[sf-controller]');\r\n\t}\r\n\r\n\tself.modelName = function(element){\r\n\t\tvar name = self.modelElement(element);\r\n\t\tif(name === null){\r\n\t\t\tconsole.error(\"Can't find any controller for\", element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tname = name.sf$component === void 0? name.getAttribute('sf-controller') : name.sf$component;\r\n\r\n\t\t// Initialize it first\r\n\t\tif(name !== void 0 && !self.active[name])\r\n\t\t\tself.run(name);\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = e.target;\r\n\t\tvar script = element.getAttribute('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = $.parent(element, '[sf-click]');\r\n\t\t\tscript = element.getAttribute('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = $.parent(element, '[sf-controller]');\r\n\t\tmodel = model.sf$component === void 0 ? model.getAttribute('sf-controller') : model.sf$component;\r\n\t\tvar _modelScope = sf.model.root[model];\r\n\r\n\t\tif(_modelScope === void 0)\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(_modelScope).join('|');\r\n\t\tscript = avoidQuotes(script, function(script_){\r\n\t\t\treturn script_.replace(RegExp(sf.regex.strictVar+'('+modelKeys+')\\\\b', 'g'), function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script.shift();\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(err) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot call `'+method_+'`]\\n', element, err);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0){\r\n\t\t\t// Replace `this` to `element`\r\n\t\t\tscript = eval(('['+script+']').replace(/,this|\\[this/g, function(found){\r\n\t\t\t\treturn found[0] + 'element';\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif(!script)\r\n\t\t\tscript = [];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element, script);\r\n\t\t\te.preventDefault();\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', element, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tself.run = function(name, func){\r\n\t\tif(sf.component.registered[name])\r\n\t\t\treturn console.error(\"'\"+name+\"' is registered as a component\");\r\n\r\n\t\tif(self.pending[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\r\n\t\t\tself.pending[name](sf.model.root[name], root_);\r\n\t\t\tself.active[name] = true;\r\n\t\t\tdelete self.pending[name];\r\n\t\t}\r\n\r\n\t\tif(sf.model.root[name] === void 0)\r\n\t\t\tsf.model.root[name] = {};\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], root_);\r\n\t}\r\n\r\n\tself.init = function(parent){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(name);\r\n\t\t\t});\r\n\r\n\t\tvar temp = $('[sf-controller]', parent || document.body);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tself.run(temp[i].sf$component === void 0? temp[i].getAttribute('sf-controller') : temp[i].sf$component);\r\n\t\t}\r\n\t}\r\n\r\n\t// Create listener for sf-click\r\n\tdocument.addEventListener('DOMContentLoaded', function(){\r\n\t\t$.on(document.body, 'click', '[sf-click]', listenSFClick);\r\n\t\tself.init();\r\n\t}, {capture:true, once:true});\r\n}\r\n\r\nvar root_ = function(scope){\r\n\tif(sf.component.registered[scope]){\r\n\t\tvar available = [];\r\n\t\tvar component = sf.component.available[scope];\r\n\t\tif(component !== void 0){\r\n\t\t\tfor (var i = 0; i < component.length; i++) {\r\n\t\t\t\tavailable.push(sf.model.root[component[i]]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn available;\r\n\t}\r\n\r\n\tif(!sf.model.root[scope]){\r\n\t\tvar scope_ = sf.model.root[scope] = {};\r\n\r\n\t\tif(internal.modelPending[scope] !== void 0){\r\n\t\t\tvar ref = internal.modelPending[scope];\r\n\t\t\tfor (var a = 0; a < ref.length; a++) {\r\n\t\t\t\tref[a](scope_, root_);\r\n\t\t\t}\r\n\r\n\t\t\tdelete internal.modelPending[scope];\r\n\t\t}\r\n\t}\r\n\r\n\treturn sf.model.root[scope];\r\n}","/*\r\n  Special Thanks to Vladimir Kharlampidi\r\n  https://github.com/nolimits4web/\r\n*/\r\n\r\nvar globals = {};\r\nvar jsonpRequests = 0;\r\nfunction Request(requestOptions) {\r\n    var globalsNoCallbacks = Object.assign({}, globals);\r\n    ('beforeCreate beforeOpen beforeSend error complete success statusCode').split(' ').forEach(function (callbackName) {\r\n        delete globalsNoCallbacks[callbackName];\r\n    });\r\n    var defaults = Object.assign({\r\n        url: window.location.toString(),\r\n        method: 'GET',\r\n        data: false,\r\n        async: true,\r\n        cache: true,\r\n        user: '',\r\n        password: '',\r\n        headers: {},\r\n        xhrFields: {},\r\n        statusCode: {},\r\n        processData: true,\r\n        dataType: 'text',\r\n        contentType: 'application/x-www-form-urlencoded',\r\n        timeout: 0,\r\n    }, globalsNoCallbacks);\r\n    var options = Object.assign({}, defaults, requestOptions);\r\n    var proceedRequest;\r\n    // Function to run XHR callbacks and events\r\n    function fireCallback(callbackName) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        /*\r\n          Callbacks:\r\n          beforeCreate (options),\r\n          beforeOpen (xhr, options),\r\n          beforeSend (xhr, options),\r\n          error (xhr, status),\r\n          complete (xhr, stautus),\r\n          success (response, status, xhr),\r\n          statusCode ()\r\n        */\r\n        var globalCallbackValue;\r\n        var optionCallbackValue;\r\n        if (globals[callbackName]) {\r\n            globalCallbackValue = globals[callbackName].apply(globals, data);\r\n        }\r\n        if (options[callbackName]) {\r\n            optionCallbackValue = options[callbackName].apply(options, data);\r\n        }\r\n        if (typeof globalCallbackValue !== 'boolean')\r\n            globalCallbackValue = true;\r\n        if (typeof optionCallbackValue !== 'boolean')\r\n            optionCallbackValue = true;\r\n        return (globalCallbackValue && optionCallbackValue);\r\n    }\r\n    // Before create callback\r\n    proceedRequest = fireCallback('beforeCreate', options);\r\n    if (proceedRequest === false)\r\n        return void 0;\r\n    // For jQuery guys\r\n    if (options.type)\r\n        options.method = options.type;\r\n    // Parameters Prefix\r\n    var paramsPrefix = options.url.indexOf('?') >= 0 ? '&' : '?';\r\n    // UC method\r\n    var method = options.method.toUpperCase();\r\n    // Data to modify GET URL\r\n    if ((method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') && options.data) {\r\n        var stringData = void 0;\r\n        if (typeof options.data === 'string') {\r\n            // Should be key=value string\r\n            if (options.data.indexOf('?') >= 0)\r\n                stringData = options.data.split('?')[1];\r\n            else\r\n                stringData = options.data;\r\n        }\r\n        else {\r\n            // Should be key=value object\r\n            stringData = serializeQuery(options.data);\r\n        }\r\n        if (stringData.length) {\r\n            options.url += paramsPrefix + stringData;\r\n            if (paramsPrefix === '?')\r\n                paramsPrefix = '&';\r\n        }\r\n    }\r\n    // JSONP\r\n    if (options.dataType === 'json' && options.url.indexOf('callback=') >= 0) {\r\n        var callbackName_1 = \"jsonp_\" + (Date.now() + ((jsonpRequests += 1)));\r\n        var abortTimeout_1;\r\n        var callbackSplit = options.url.split('callback=');\r\n        var requestUrl = callbackSplit[0] + \"callback=\" + callbackName_1;\r\n        if (callbackSplit[1].indexOf('&') >= 0) {\r\n            var addVars = callbackSplit[1].split('&').filter(function (el) { return el.indexOf('=') > 0; }).join('&');\r\n            if (addVars.length > 0)\r\n                requestUrl += \"&\" + addVars;\r\n        }\r\n        // Create script\r\n        var script_1 = document.createElement('script');\r\n        script_1.type = 'text/javascript';\r\n        script_1.onerror = function onerror() {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('error', null, 'scripterror');\r\n            fireCallback('complete', null, 'scripterror');\r\n        };\r\n        script_1.src = requestUrl;\r\n        // Handler\r\n        window[callbackName_1] = function jsonpCallback(data) {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('success', data);\r\n            script_1.parentNode.removeChild(script_1);\r\n            script_1 = null;\r\n            delete window[callbackName_1];\r\n        };\r\n        document.querySelector('head').appendChild(script_1);\r\n        if (options.timeout > 0) {\r\n            abortTimeout_1 = setTimeout(function () {\r\n                script_1.parentNode.removeChild(script_1);\r\n                script_1 = null;\r\n                fireCallback('error', null, 'timeout');\r\n            }, options.timeout);\r\n        }\r\n        return void 0;\r\n    }\r\n    // Cache for GET/HEAD requests\r\n    if (method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') {\r\n        if (options.cache === false) {\r\n            options.url += paramsPrefix + \"_nocache\" + Date.now();\r\n        }\r\n    }\r\n    // Create XHR\r\n    var xhr = new XMLHttpRequest();\r\n    // Save Request URL\r\n    xhr.requestUrl = options.url;\r\n    xhr.requestParameters = options;\r\n    // Before open callback\r\n    proceedRequest = fireCallback('beforeOpen', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Open XHR\r\n    xhr.open(method, options.url, options.async, options.user, options.password);\r\n    // Create POST Data\r\n    var postData = null;\r\n    if ((method === 'POST' || method === 'PUT' || method === 'PATCH') && options.data) {\r\n        if (options.processData) {\r\n            var postDataInstances = [ArrayBuffer, Blob, Document, FormData];\r\n            // Post Data\r\n            if (postDataInstances.indexOf(options.data.constructor) >= 0) {\r\n                postData = options.data;\r\n            }\r\n            else {\r\n                // POST Headers\r\n                var boundary = \"---------------------------\" + Date.now().toString(16);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    xhr.setRequestHeader('Content-Type', \"multipart/form-data; boundary=\" + boundary);\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader('Content-Type', options.contentType);\r\n                }\r\n                postData = '';\r\n                var data = serializeQuery(options.data);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    data = data.split('&');\r\n                    var newData = [];\r\n                    for (var i = 0; i < data.length; i += 1) {\r\n                        newData.push(\"Content-Disposition: form-data; name=\\\"\" + data[i].split('=')[0] + \"\\\"\\r\\n\\r\\n\" + data[i].split('=')[1] + \"\\r\\n\");\r\n                    }\r\n                    postData = \"--\" + boundary + \"\\r\\n\" + newData.join(\"--\" + boundary + \"\\r\\n\") + \"--\" + boundary + \"--\\r\\n\";\r\n                }\r\n                else if (options.contentType === 'application/json') {\r\n                    postData = JSON.stringify(options.data);\r\n                }\r\n                else {\r\n                    postData = data;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            postData = options.data;\r\n            xhr.setRequestHeader('Content-Type', options.contentType);\r\n        }\r\n    }\r\n    // Additional headers\r\n    if (options.headers) {\r\n        Object.keys(options.headers).forEach(function (headerName) {\r\n            xhr.setRequestHeader(headerName, options.headers[headerName]);\r\n        });\r\n    }\r\n    // Check for crossDomain\r\n    if (typeof options.crossDomain === 'void 0') {\r\n        // eslint-disable-next-line\r\n        options.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(options.url) && RegExp.$2 !== window.location.host;\r\n    }\r\n    if (!options.crossDomain) {\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    }\r\n    if (options.xhrFields) {\r\n        Object.assign(xhr, options.xhrFields);\r\n    }\r\n    var xhrTimeout;\r\n    // Handle XHR\r\n    xhr.onload = function onload() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 0) {\r\n            var responseData = void 0;\r\n            if (options.dataType === 'json') {\r\n                var parseError = void 0;\r\n                try {\r\n                    responseData = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (err) {\r\n                    parseError = true;\r\n                }\r\n                if (!parseError) {\r\n                    fireCallback('success', responseData, xhr.status, xhr);\r\n                }\r\n                else {\r\n                    fireCallback('error', xhr, 'parseerror');\r\n                }\r\n            }\r\n            else {\r\n                responseData = xhr.responseType === 'text' || xhr.responseType === '' ? xhr.responseText : xhr.response;\r\n                fireCallback('success', responseData, xhr.status, xhr);\r\n            }\r\n        }\r\n        else {\r\n            fireCallback('error', xhr, xhr.status);\r\n        }\r\n        if (options.statusCode) {\r\n            if (globals.statusCode && globals.statusCode[xhr.status])\r\n                globals.statusCode[xhr.status](xhr);\r\n            if (options.statusCode[xhr.status])\r\n                options.statusCode[xhr.status](xhr);\r\n        }\r\n        fireCallback('complete', xhr, xhr.status);\r\n    };\r\n    xhr.onerror = function onerror() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        fireCallback('error', xhr, xhr.status);\r\n        fireCallback('complete', xhr, 'error');\r\n    };\r\n    // Timeout\r\n    if (options.timeout > 0) {\r\n        xhr.onabort = function onabort() {\r\n            if (xhrTimeout)\r\n                clearTimeout(xhrTimeout);\r\n        };\r\n        xhrTimeout = setTimeout(function () {\r\n            xhr.abort();\r\n            fireCallback('error', xhr, 'timeout');\r\n            fireCallback('complete', xhr, 'timeout');\r\n        }, options.timeout);\r\n    }\r\n    // Ajax start callback\r\n    proceedRequest = fireCallback('beforeSend', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Send XHR\r\n    xhr.send(postData);\r\n    // Return XHR object\r\n    return xhr;\r\n}\r\nfunction RequestShortcut(method) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    var _a = [], url = _a[0], data = _a[1], success = _a[2], error = _a[3], dataType = _a[4];\r\n    if (typeof args[1] === 'function') {\r\n        url = args[0], success = args[1], error = args[2], dataType = args[3];\r\n    }\r\n    else {\r\n        url = args[0], data = args[1], success = args[2], error = args[3], dataType = args[4];\r\n    }\r\n    [success, error].forEach(function (callback) {\r\n        if (typeof callback === 'string') {\r\n            dataType = callback;\r\n            if (callback === success)\r\n                success = void 0;\r\n            else\r\n                error = void 0;\r\n        }\r\n    });\r\n    dataType = dataType || (method === 'json' || method === 'postJSON' ? 'json' : void 0);\r\n    var requestOptions = {\r\n        url: url,\r\n        method: method === 'post' || method === 'postJSON' ? 'POST' : 'GET',\r\n        data: data,\r\n        success: success,\r\n        error: error,\r\n        dataType: dataType,\r\n    };\r\n    if (method === 'postJSON') {\r\n        Object.assign(requestOptions, {\r\n            contentType: 'application/json',\r\n            processData: false,\r\n            crossDomain: true,\r\n            data: typeof data === 'string' ? data : JSON.stringify(data),\r\n        });\r\n    }\r\n    return Request(requestOptions);\r\n}\r\nObject.assign(Request, {\r\n    get: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['get'].concat(args));\r\n    },\r\n    post: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['post'].concat(args));\r\n    },\r\n    json: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    getJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    postJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['postJSON'].concat(args));\r\n    },\r\n});\r\nRequest.setup = function setup(options) {\r\n    if (options.type && !options.method) {\r\n        Object.assign(options, { method: options.type });\r\n    }\r\n    Object.assign(globals, options);\r\n};\r\nfunction serializeQuery(params, prefix) {\r\n    var key = Object.keys(params);\r\n    for (var i = 0; i < key.length; i++) {\r\n      var value = params[key[i]];\r\n      if (params.constructor === Array)\r\n          key[i] += prefix + \"[]\";\r\n      else if (params.constructor === Object)\r\n          key[i] = (prefix ? prefix + \"[\" + key[i] + \"]\" : key[i]);\r\n\r\n      if (typeof value === 'object')\r\n          key[i] = serializeQuery(value, key[i]);\r\n      else\r\n          key[i] = key[i] + \"=\" + encodeURIComponent(value);\r\n    }\r\n    return key.join('&');\r\n}\r\n$.ajax = sf.ajax = Request;","return sf;\r\n\r\n// ===== Module End =====\r\n})));","sf.router = new function(){\r\n\tvar self = this;\r\n\tself.loading = false;\r\n\tself.enabled = false;\r\n\tself.pauseRenderOnTransition = false;\r\n\tself.currentPage = [];\r\n\tself.mode = 'server-side';\r\n\tvar initialized = false;\r\n\tvar lazyRouting = false;\r\n\tvar currentRouterURL = '';\r\n\r\n\tvar gEval = routerEval;\r\n\trouterEval = void 0;\r\n\r\n\t// Should be called if not using lazy page load\r\n\tself.init = function(targetNode){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init();\r\n\t\t\t});\r\n\r\n\t\t// Run 'before' event for new page view\r\n\t\tvar temp = $('[sf-controller], [sf-page]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar name = temp[i].getAttribute('sf-page') || '';\r\n\t\t\tif(name !== '')\r\n\t\t\t\trunLocalEvent('before', name);\r\n\r\n\t\t\tif(temp[i].hasAttribute('sf-controller') === true)\r\n\t\t\t\tsf.controller.run(temp[i].getAttribute('sf-controller'));\r\n\r\n\t\t\tif(name !== '')\r\n\t\t\t\trunLocalEvent('when', name);\r\n\t\t}\r\n\r\n\t\tinitialized = true;\r\n\t\tcurrentRouterURL = window.location.pathname;\r\n\t}\r\n\r\n\tfunction popstateListener(event) {\r\n\t\t// Don't continue if the last routing was error\r\n\t\tif(routingError){\r\n\t\t\troutingError = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\troutingBack = true;\r\n\t\tself.goto(window.location.pathname);\r\n\t}\r\n\r\n\tself.enable = function(status){\r\n\t\tif(status === void 0) status = true;\r\n\t\tif(self.enabled === status) return;\r\n\t\tself.enabled = status;\r\n\r\n\t\tif(status === true){\r\n\t\t\t// Create listener for link click\r\n\t\t\t$.on(document.body, 'click', 'a[href]', self.load);\r\n\r\n\t\t\t// Create listener when navigate backward\r\n\t\t\twindow.addEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$.off(document.body, 'click', 'a[href]', self.load);\r\n\t\t\twindow.removeEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t}\r\n\r\n\tvar localEvent = {before:{}, when:{}, after:{}};\r\n\tfunction registerLocalEvent(which, name, func){\r\n\t\tif(!localEvent[which][name])\r\n\t\t\tlocalEvent[which][name] = [];\r\n\r\n\t\tlocalEvent[which][name].push(func);\r\n\t}\r\n\r\n\t// Set index with number if you want to replace old function\r\n\t// Running 'before' new page going to be displayed\r\n\tself.before = function(name, func){\r\n\t\tregisterLocalEvent('before', name, func);\r\n\t}\r\n\r\n\t// Running 'when' new page was been initialized\r\n\tself.when = function(name, func){\r\n\t\tregisterLocalEvent('when', name, func);\r\n\t}\r\n\r\n\t// Running 'after' old page is going to be removed\r\n\tself.after = function(name, func){\r\n\t\tregisterLocalEvent('after', name, func);\r\n\t}\r\n\r\n\tvar runLocalEvent = internal.routerLocalEvent = function(which, name){\r\n\t\tif(which === 'before' && self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.push(name);\r\n\r\n\t\tif(which === 'after' && self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.splice(self.currentPage.indexOf(name), 1);\r\n\r\n\t\tif(localEvent[which][name]){\r\n\t\t\tfor (var i = 0; i < localEvent[which][name].length; i++) {\r\n\t\t\t\tlocalEvent[which][name][i](sf.model);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar onEvent = {\r\n\t\t'loading':[],\r\n\t\t'loaded':[],\r\n\t\t'special':[],\r\n\t\t'error':[]\r\n\t};\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\t// This will enable script evaluation before the model/controller/route\r\n\t// being reinitialized after receiving template from the server.\r\n\t// To be safe, make sure you're not directly outputing any user content\r\n\t// like user's name, posts, modifiable data from user.\r\n\tself.dynamicScript = false;\r\n\r\n\tself.lazyViewPoint = {};\r\n\t/*\r\n\t\t{\r\n\t\t\toldURlPattern:{\r\n\t\t\t\tnewURLPattern:'.viewPoint'\r\n\t\t\t}\r\n\t\t}\r\n\t*/\r\n\r\n\tself.load = function(ev){\r\n\t\tif(self.enabled !== true) return;\r\n\r\n\t\tvar elem = ev.target;\r\n\t\tvar attr = elem.getAttribute('href');\r\n\r\n\t\tif(!attr){\r\n\t\t\telem = $.parent(elem, '[href]');\r\n\t\t\tattr = elem.getAttribute('href');\r\n\t\t}\r\n\r\n\t\tif(!attr || attr[0] === '#') return;\r\n\r\n\t\t// Make sure it's from current origin\r\n\t\tvar path = elem.href.replace(window.location.origin, '');\r\n\t\tif(path.indexOf('//') !== -1)\r\n\t\t\treturn;\r\n\r\n\t\tif(!window.history.pushState || elem.hasAttribute('sf-router-ignore'))\r\n\t\t\treturn;\r\n\r\n\t\tev.preventDefault();\r\n\t\tif(attr[0] === '@'){\r\n\t\t\tvar target = elem.getAttribute('target');\r\n\t\t\tif(target)\r\n\t\t\t\twindow.open(attr.slice(1), target);\r\n\t\t\telse window.location = attr.slice(1);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\treturn !self.goto(path);\r\n\t}\r\n\r\n\tvar RouterLoading = false;\r\n\tvar routingBack = false;\r\n\tvar routingError = false;\r\n\tself.goto = function(path, data, method){\r\n\t\tif(!method) method = 'GET';\r\n        else method = method.toUpperCase();\r\n\r\n\t\tif(!data) data = {};\r\n\r\n\t\tfor (var i = 0; i < onEvent['loading'].length; i++) {\r\n\t\t\tif(onEvent['loading'][i](path)) return;\r\n\t\t}\r\n\t\tvar oldPath = window.location.pathname;\r\n\t\tinitialized = false;\r\n\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\t\tRouterLoading = sf.ajax({\r\n\t\t\turl:window.location.origin + path,\r\n\t\t\tmethod:method,\r\n            data:Object.assign(data, {\r\n                _scarlets:'.dynamic.'\r\n            }),\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\tif(initialized) return;\r\n\t\t\t\tlazyRouting = true;\r\n\r\n\t\t\t\t// Run 'loaded' event\r\n\t\t\t\tRouterLoading = false;\r\n\r\n\t\t\t\t// Find special data\r\n\t\t\t\tvar regex = RegExp('<!-- SF-Special:(.*?)-->', 'gm');\r\n\t\t\t\tvar special = regex.exec(data);\r\n\t\t\t\tif(special && special.length !== 1){\r\n\t\t\t\t\tspecial = special[1].split('--|&>').join('-->');\r\n\t\t\t\t\tspecial = JSON.parse(special);\r\n\r\n\t\t\t\t\tif(!isEmptyObject(special)){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['special'].length; i++) {\r\n\t\t\t\t\t\t\tif(onEvent['special'][i](special)) return;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DOMReference = false;\r\n\t\t\t\tvar foundAction = function(ref){\r\n\t\t\t\t\tDOMReference = $.findOne(ref);\r\n\r\n\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\tvar last = $.findOne('[sf-page]', DOMReference);\r\n\t\t\t\t\trunLocalEvent('after', last ? last.getAttribute('sf-page') : '/');\r\n\r\n\t\t\t\t\t// Redefine title if exist\r\n\t\t\t\t\tif(special && special.title)\r\n\t\t\t\t\t\t$('head > title').innerHTML = special.title;\r\n\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tfor(var oldURL in self.lazyViewPoint){\r\n\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\tfor(var newURL in self.lazyViewPoint[oldURL]){\r\n\t\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\t\tfoundAction(self.lazyViewPoint[oldURL][newURL]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(found) break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When the view point was not found\r\n\t\t\t\tif(!found){\r\n\t\t\t\t\t// Use fallback if exist\r\n\t\t\t\t\tif(sf.router.lazyViewPoint[\"@default\"])\r\n\t\t\t\t\t\tfoundAction(sf.router.lazyViewPoint[\"@default\"]);\r\n\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\t\t\tonEvent['error'][i]('sf.router.lazyViewPoint[\"'+oldURL+'\"][\"'+newURL+'\"] was not found');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Run 'before' event for new page view\r\n\t\t\t\tif(!DOMReference) DOMReference = document.body;\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', 'none');\r\n\r\n\t\t\t\t// Let page script running first\r\n\t\t\t\tDOMReference.innerHTML = data;\r\n\t\t\t\tif(self.dynamicScript !== false){\r\n\t\t\t\t\tvar scripts = DOMReference.getElementsByTagName('script');\r\n\t\t\t\t\tfor (var i = 0; i < scripts.length; i++) {\r\n\t\t\t\t\t    gEval(scripts[i].text);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Parse the DOM data binding\r\n\t\t\t\tsf.model.init(DOMReference);\r\n\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', '');\r\n\r\n\t\t\t\trouterLoaded(currentRouterURL, path, DOMReference);\r\n\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tlazyRouting = false;\r\n\r\n\t\t\t\tcurrentRouterURL = path;\r\n\t\t\t\troutingError = false;\r\n\t\t\t},\r\n\t\t\terror:function(xhr, data){\r\n\t\t\t\troutingError = true;\r\n\t\t\t\tif(xhr.aborted) return;\r\n\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\tonEvent['error'][i](xhr.status, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Back on error\r\n\t\t\t\twindow.history.back();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!routingBack)\r\n\t\t\twindow.history.pushState(null, \"\", path);\r\n\r\n\t\troutingBack = false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Trigger loaded event\r\n\tfunction routerLoaded(currentRouterURL, path, data){\r\n\t\tfor (var i = 0; i < onEvent['loaded'].length; i++) {\r\n\t\t\tonEvent['loaded'][i](currentRouterURL, path, data);\r\n\t\t}\r\n\t}\r\n};","sf.internal.virtual_scroll = new function(){\r\n\tvar self = this;\r\n\tvar scrollingByScript = false;\r\n\r\n\t// before and after\r\n\tself.prepareCount = 4; // 4, 8, 12, 16, ...\r\n\r\n\tself.handle = function(list, targetNode, parentNode){\r\n\t\tvar dynamicList = false;\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvirtual.reset = function(reinitOnly){\r\n\t\t\tvirtual.DOMCursor = 0; // cursor of first element in DOM tree as a cursor\r\n\r\n\t\t\tvirtual.bounding.ceiling = -1;\r\n\t\t\tvirtual.bounding.floor = 0;\r\n\r\n\t\t\tvirtual.vCursor.ceiling = null; // for forward direction\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.firstElementChild; // for backward direction\r\n\r\n\t\t\tvirtual.bounding.initial = virtual.dCursor.ceiling.offsetTop;\r\n\t\t\trefreshScrollBounding(0, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.reinitCursor = function(){\r\n\t\t\tvirtual.vCursor.ceiling = virtual.dom.children[virtual.DOMCursor - 1] || null;\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.children[virtual.DOMCursor] || null;\r\n\t\t}\r\n\r\n\t\tvirtual.reinitScroll = function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.elements = function(){\r\n\t\t\treturn obtainElements(list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.dCursor = { // DOM Cursor\r\n\t\t\tceiling:parentNode.querySelector('.virtual-spacer.ceiling'),\r\n\t\t\tfloor:parentNode.querySelector('.virtual-spacer.floor')\r\n\t\t};\r\n\r\n\t\tvirtual.bounding = {};\r\n\t\tvirtual.vCursor = {};\r\n\r\n\t\tvirtual.reset();\r\n\t\tvirtual.targetNode = parentNode;\r\n\t\tvirtual.scrollHeight = virtual.dCursor.ceiling.nextElementSibling.offsetHeight;\r\n\r\n\t\tvar scroller = parentNode;\r\n\t\tvirtual.destroy = function(){\r\n\t\t\t$.off(scroller, 'scroll');\r\n\t\t\t$.off(parentNode, 'mousedown mouseup');\r\n\t\t\tvirtual.dom.innerHTML = '';\r\n\t\t\toffElementResize(parentNode);\r\n\r\n\t\t\tdelete list.$virtual;\r\n\t\t}\r\n\r\n\t\tvirtual.resetViewport = function(){\r\n\t\t\tvirtual.visibleLength = Math.floor(scroller.clientHeight / virtual.scrollHeight);\r\n\t\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\t\tif(virtual.preparedLength < 18)\r\n\t\t\t\tvirtual.preparedLength = 18;\r\n\t\t}\r\n\r\n\t\tvar pendingFunction = internal.afterModelBinding;\r\n\t\tinternal.afterModelBinding = undefined;\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tif(list.$virtual === undefined) return; // Somewhat it's uninitialized\r\n\r\n\t\t\tscroller = internal.findScrollerElement(parentNode);\r\n\t\t\tscroller.classList.add('sf-scroll-element');\r\n\t\t\tinternal.addScrollerStyle();\r\n\r\n\t\t\tvirtual.resetViewport();\r\n\r\n\t\t\tif(parentNode.classList.contains('sf-list-dynamic')){\r\n\t\t\t\tdynamicList = true;\r\n\t\t\t\tdynamicHeight(list, targetNode, parentNode, scroller);\r\n\t\t\t}\r\n\t\t\telse staticHeight(list, targetNode, parentNode, scroller);\r\n\r\n\t\t\tif(pendingFunction !== undefined){\r\n\t\t\t\tpendingFunction();\r\n\t\t\t\tpendingFunction = undefined;\r\n\t\t\t}\r\n\t\t}, 500);\r\n\t}\r\n\r\n\t// Recommended for a list that have different element height\r\n\tfunction dynamicHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\r\n\t\t\t// Reset virtual spacer height\r\n\t\t\tceilingHeight = 0;\r\n\t\t\tfloorHeight = 0;\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller);\r\n\t\t\tfillViewport();\r\n\t\t}\r\n\r\n\t\t// Insert some element until reach visible height\r\n\t\tfillViewport();\r\n\r\n\t\tvirtual.visibleLength = parentNode.childElementCount - 2;\r\n\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\tif(virtual.preparedLength < 18)\r\n\t\t\tvirtual.preparedLength = 18;\r\n\r\n\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\tvar temp = vCursor.floor;\r\n\t\t\tif(temp === null) break;\r\n\r\n\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t}\r\n\t\tvirtual.DOMCursor = 0;\r\n\r\n\t\tvar ceilingHeight = 0;\r\n\t\tvar floorHeight = 0;\r\n\t\tfunction previousCeiling(){\r\n\t\t\tvar temp = null;\r\n\t\t\tvar resetCeiling = false;\r\n\r\n\t\t\t// Add some element on the ceiling\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\ttemp = virtual.dom.lastElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.ceiling = temp.previousElementSibling;\r\n\t\t\t\tvirtual.DOMCursor--;\r\n\r\n\t\t\t\tceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tif(ceilingHeight > 0)\r\n\t\t\t\t\tceilingHeight -= getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(virtual.DOMCursor < self.prepareCount && !resetCeiling){\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\tresetCeiling = true;\r\n\t\t\t\t\ttemp = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(ceilingHeight < 0 || temp === null)\r\n\t\t\t\tceilingHeight = 0;\r\n\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\t// Remove some element on the floor\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = floor.previousElementSibling;\r\n\t\t\t\tfloorHeight += getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tvCursor.floor = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.floor === null)\r\n\t\t\t\tvCursor.ceiling = virtual.dom.lastElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tfunction fillViewport(){\r\n\t\t\t// Insert some element depend on prepared length\r\n\t\t\tvar length = virtual.preparedLength - (parentNode.childElementCount - 2);\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\ttemp = virtual.dom.firstElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction nextFloor(){\r\n\t\t\tvar temp = null;\r\n\t\t\tfillViewport();\r\n\r\n\t\t\tif(vCursor.floor !== null){\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\t// Add extra element based on prepare count\r\n\t\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\t\ttemp = vCursor.floor;\r\n\t\t\t\t\tif(temp === null) break;\r\n\r\n\t\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\t\tif(floorHeight > 0)\r\n\t\t\t\t\t\tfloorHeight -= getAbsoluteHeight(temp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(floorHeight < 0 || temp === null)\r\n\t\t\t\tfloorHeight = 0;\r\n\r\n\t\t\t// Remove some element on the ceiling\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\t\t\t\tceilingHeight += getAbsoluteHeight(temp);\r\n\t\t\t\tvirtual.DOMCursor++;\r\n\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\telse vCursor.ceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tvCursor.ceiling = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\t\trefreshScrollBounding(0, bounding, list, parentNode);\r\n\r\n\t\tif(virtual.callback_ !== void 0){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript) return;\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tif(scroller.scrollTop < bounding.ceiling){\r\n\t\t\t\t// console.log('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tpreviousCeiling();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\telse if(scroller.scrollTop > bounding.floor){\r\n\t\t\t\t// console.log('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tnextFloor();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\tif(virtual.callback !== void 0 && list.length !== 0){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null &&\r\n\t\t\t\t\tscroller.scrollTop + scroller.clientHeight === scroller.scrollHeight\r\n\t\t\t\t){\r\n\t\t\t\t\tvirtual.callback.hitFloor(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null && scroller.scrollTop === 0){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_ && callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t\tif(scroller.scrollTop === 0 && ceiling.offsetHeight > 10)\r\n\t\t\t\tvirtual.scrollTo(0);\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\t\tonElementResize(parentNode, function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t});\r\n\t}\r\n\r\n\t// Recommended for a list that have similar element height\r\n\tfunction staticHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\r\n\t\t// Insert visible element to dom tree\r\n\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\tif(virtual.dom.firstElementChild === null)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', virtual.dom.firstElementChild);\r\n\t\t}\r\n\r\n\t\tvirtual.refreshVirtualSpacer = refreshVirtualSpacer;\r\n\r\n\t\tfunction refreshVirtualSpacer(cursor){\r\n\t\t\tif(cursor >= self.prepareCount){\r\n\t\t\t\tceiling.style.height = (cursor - self.prepareCount) * virtual.scrollHeight + 'px';\r\n\t\t\t\tfloor.style.height = (list.length - virtual.preparedLength - cursor) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tceiling.style.height = cursor * virtual.scrollHeight + 'px'; //'0px';\r\n\t\t\t\tvar count = (list.length - virtual.preparedLength);\r\n\t\t\t\tfloor.style.height = (count || 0) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\r\n\t\trefreshVirtualSpacer(0);\r\n\t\trefreshScrollBounding(self.prepareCount, bounding, list, parentNode);\r\n\t\tbounding.ceiling = -1;\r\n\r\n\t\tvirtual.offsetTo = function(index){\r\n\t\t\treturn index * virtual.scrollHeight + ceiling.offsetTop;\r\n\t\t}\r\n\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tif(virtual.callback_ !== void 0){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tvar fromCeiling = true;\r\n\t\tvar scrollFocused = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript || scroller.scrollTop >= bounding.ceiling && scroller.scrollTop <= bounding.floor){\r\n\t\t\t\t// Fix chrome scroll anchoring bugs when scrolling at corner\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tif(scroller.scrollTop === 0 || scroller.scrollTop === scroller.scrollHeight - scroller.clientHeight){\r\n\t\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar cursor = Math.floor(scroller.scrollTop / virtual.scrollHeight);\r\n\t\t\tif(cursor + virtual.preparedLength > list.length)\r\n\t\t\t\tcursor = list.length - virtual.preparedLength;\r\n\r\n\t\t\tif(fromCeiling){\r\n\t\t\t\tif(cursor < self.prepareCount*2)\r\n\t\t\t\t\tcursor -= self.prepareCount;\r\n\r\n\t\t\t\t// Fix chrome scroll anchoring bugs\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t}\r\n\t\t\t\tfromCeiling = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cursor < self.prepareCount){\r\n\t\t\t\tcursor = 0;\r\n\t\t\t\tfromCeiling = true;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tvar changes = cursor - virtual.DOMCursor;\r\n\t\t\tif(cursor + changes >= list.length)\r\n\t\t\t\tchanges = cursor + changes - list.length;\r\n\r\n\t\t\tif(changes === 0){ // This should be fixed to improve performance and future bugs\r\n\t\t\t\t//console.warn(\"No changes (The scroll bounding is not correct)\");\r\n\t\t\t\tupdating = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.DOMCursor = cursor;\r\n\r\n\t\t\t// console.log(cursor, changes, bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\t\t\tmoveElementCursor(changes, list);\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\t\t\trefreshScrollBounding(cursor, bounding, list, parentNode);\r\n\t\t\t// console.log('a', bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\r\n\t\t\tif(virtual.callback !== void 0 && list.length !== 0){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null){\r\n\t\t\t\t\tvirtual.callback.hitFloor(cursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(cursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_ && callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\r\n\t\t// For preventing scroll jump if scrolling over than viewport\r\n\t\tif(scroller === parentNode && navigator.userAgent.indexOf('Chrom') !== -1){\r\n\t\t\t$.on(parentNode, 'mousedown', function(){\r\n\t\t\t\tscrollFocused = true;\r\n\t\t\t});\r\n\t\t\t$.on(parentNode, 'mouseup', function(){\r\n\t\t\t\tscrollFocused = false;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction refreshScrollBounding(cursor, bounding, list, parentNode){\r\n\t\tvar temp = Math.floor(self.prepareCount / 2); // half of element preparation\r\n\t\tif(cursor < self.prepareCount){\r\n\t\t\tbounding.ceiling = -1;\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount * 2 + 1];\r\n\r\n\t\t\tif(bounding.floor !== void 0)\r\n\t\t\t\tbounding.floor = bounding.floor.offsetTop;\r\n\t\t\telse bounding.floor = parentNode.lastElementChild.offsetTop + 1000;\r\n\r\n\t\t\tbounding.floor -= bounding.initial;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if(parentNode.children[temp + 1] !== void 0)\r\n\t\t\t\tbounding.ceiling = parentNode.children[temp + 1].offsetTop; // -2 element\r\n\r\n\t\tif(list.$virtual.preparedLength !== void 0 && cursor >= list.length - list.$virtual.preparedLength)\r\n\t\t\tbounding.floor = list.$virtual.dCursor.floor.offsetTop + list.$virtual.scrollHeight*2;\r\n\t\telse{\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount + 3].offsetTop; // +2 element\r\n\r\n\t\t\tif(parentNode.hasAttribute('scroll-reduce-floor')){\r\n\t\t\t\tbounding.floor -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t\tbounding.ceiling -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbounding.ceiling -= bounding.initial;\r\n\t\tbounding.floor -= bounding.initial;// scrollHeight - clientHeight\r\n\t}\r\n\r\n\tfunction moveElementCursor(changes, list){\r\n\t\tvar vDOM = list.$virtual.dom;\r\n\t\tvar vCursor = list.$virtual.vCursor;\r\n\t\tvar dCursor = list.$virtual.dCursor;\r\n\r\n\t\tif(changes > 0){ // forward\r\n\t\t\tvar ref = 0;\r\n\r\n\t\t\t// Select from virtual ceiling cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tref = vDOM.firstElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.ceiling.nextElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the ceiling to vDom\r\n\t\t\tfor (var i = changes; i > 0; i--) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.ceiling === null){\r\n\t\t\t\t\tvCursor.ceiling = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('afterBegin', vCursor.ceiling);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t\t\tvCursor.ceiling = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\t\t}\r\n\t\telse if(changes < 0){ // backward\r\n\t\t\tvar ref = 0;\r\n\t\t\tchanges = -changes;\r\n\r\n\t\t\t// Select from virtual floor cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tref = vDOM.lastElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.floor.previousElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the floor to vDom\r\n\t\t\tfor (var i = 0; i < changes; i++) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvCursor.floor = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('beforeEnd', vCursor.floor);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t\t\tvCursor.floor = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scrollTo(index, list, prepareCount, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar reduce = 0;\r\n\t\tvar index_ = index;\r\n\r\n\t\tif(index >= list.length - virtual.preparedLength){\r\n\t\t\treduce -= prepareCount;\r\n\t\t\tindex = list.length - virtual.preparedLength;\r\n\t\t}\r\n\r\n\t\tif(index - virtual.DOMCursor === 0 || index >= list.length) return;\r\n\r\n\t\tscrollingByScript = true;\r\n\r\n\t\t// Already on DOM tree\r\n\t\tif((virtual.DOMCursor === 0 && index < prepareCount + prepareCount/2) ||\r\n\t\t\t(virtual.DOMCursor + prepareCount/2 > index\r\n\t\t\t&& virtual.DOMCursor + prepareCount < index))\r\n\t\t\t\tscroller.scrollTop = list.getElement(index_).offsetTop;\r\n\r\n\t\t// Move cursor\r\n\t\telse {\r\n\t\t\tvar temp = null;\r\n\t\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\t\tvar floor = virtual.dCursor.floor;\r\n\t\t\tvar vCursor = virtual.vCursor;\r\n\r\n\t\t\t// DOM tree to virtual DOM\r\n\t\t\tvar length = parentNode.childElementCount - 2;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\r\n\t\t\t\t\tif(i === length-1)\r\n\t\t\t\t\t\tvCursor.floor = temp;\r\n\t\t\t\t}\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(index >= prepareCount){\r\n\t\t\t\tif(index < list.length - virtual.preparedLength)\r\n\t\t\t\t\tindex -= prepareCount;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treduce = prepareCount - index;\r\n\t\t\t\tvirtual.DOMCursor = index = 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\r\n\t\t\t// Virtual DOM to DOM tree\r\n\t\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\t\ttemp = virtual.dom.children[index];\r\n\t\t\t\tif(temp === void 0) break;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t\tvirtual.DOMCursor = index;\r\n\r\n\t\t\tvCursor.floor = virtual.dom.children[index] || null;\r\n\t\t\tvCursor.ceiling = vCursor.floor ? vCursor.floor.previousElementSibling : null;\r\n\r\n\t\t\tif(list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\tlist.$virtual.refreshVirtualSpacer(index);\r\n\r\n\t\t\trefreshScrollBounding(index, virtual.bounding, list, parentNode);\r\n\r\n\t\t\ttemp = parentNode.children[prepareCount - reduce + 1];\r\n\t\r\n\t\t\tif(temp !== void 0)\r\n\t\t\t\tscroller.scrollTop = temp.offsetTop - scroller.offsetTop;\r\n\t\t}\r\n\r\n\t\tscrollingByScript = false;\r\n\t}\r\n\r\n\tfunction removeUserScrollFocus(parentNode){\r\n\t\tparentNode.style.overflow = 'hidden';\r\n\t\tsetTimeout(function(){\r\n\t\t\tparentNode.style.overflow = '';\r\n\t\t}, 50);\r\n\t}\r\n\r\n\tfunction getAbsoluteHeight(el){\r\n\t  var styles = window.getComputedStyle(el);\r\n\t  var margin = parseInt(styles['marginTop']) + parseInt(styles['marginBottom']);\r\n\t  return el.offsetHeight + margin || 0;\r\n\t}\r\n\r\n\tfunction obtainElements(list, parentNode){\r\n\t\tvar exist = [];\r\n\t\tvar temp = void 0;\r\n\r\n\t\tvar length = list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[i];\r\n\t\t\tif(temp === void 0) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = parentNode.childElementCount - 2;\r\n\t\tfor (var i = 1; i <= length; i++) {\r\n\t\t\ttemp = parentNode.children[i];\r\n\t\t\tif(temp === void 0) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\t\t\r\n\t\t// Get elements length\r\n\t\tvar elementLength = list.$virtual.dom.childElementCount + length;\r\n\r\n\t\tlength = elementLength - length - list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[list.$virtual.DOMCursor + i];\r\n\t\t\tif(temp === void 0) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\treturn exist;\r\n\t}\r\n\r\n\tfunction refresh(force, list, prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer){\r\n\t\tvar cursor = list.$virtual.DOMCursor;\r\n\t\tvar additionalScroll = 0;\r\n\r\n\t\t// Find nearest cursor for current view position\r\n\t\tif(force){\r\n\t\t\tvar i = -1;\r\n\t\t\tvar length = list.$virtual.preparedLength;\r\n\r\n\t\t\tdo{\r\n\t\t\t\ti++;\r\n\t\t\t} while(i < length && parentNode.children[i].offsetTop < scroller.scrollTop);\r\n\r\n\t\t\tcursor = cursor + i;\r\n\t\t\tif(cursor > 0) cursor -= 1;\r\n\r\n\t\t\tadditionalScroll = scroller.scrollTop - parentNode.children[i].offsetTop;\r\n\t\t}\r\n\r\n\t\t// Force move cursor if element in the DOM tree was overloaded\r\n\t\tif(force || parentNode.childElementCount - 2 > list.$virtual.preparedLength){\r\n\t\t\tlist.$virtual.DOMCursor = list.length;\r\n\t\t\tvar moveTo = cursor;\r\n\t\t\tif(!force)\r\n\t\t\t\tmoveTo = cursor <= prepareCount ? cursor : (cursor + prepareCount);\r\n\r\n\t\t\tscrollTo(moveTo,\r\n\t\t\t\tlist,\r\n\t\t\t\tprepareCount,\r\n\t\t\t\tparentNode,\r\n\t\t\t\tscroller\r\n\t\t\t);\r\n\r\n\t\t\tscroller.scrollTop += additionalScroll;\r\n\t\t}\r\n\r\n\t\tif(refreshVirtualSpacer)\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\r\n\t\tif(checkCursorPosition)\r\n\t\t\tcheckCursorPosition();\r\n\r\n\t\trefreshScrollBounding(cursor, list.$virtual.bounding, list, parentNode);\r\n\t}\r\n\r\n\tvar _onElementResize = [];\r\n\tvar _onElementResize_timer = -1;\r\n\tfunction onElementResize(parentNode, callback){\r\n\t\tif(_onElementResize_timer === -1){\r\n\t\t\t_onElementResize_timer = setInterval(function(){\r\n\t\t\t\tvar temp = null;\r\n\t\t\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\t\t\ttemp = _onElementResize[i];\r\n\r\n\t\t\t\t\t// Check resize\r\n\t\t\t\t\tif(temp.element.scrollHeight === temp.height\r\n\t\t\t\t\t\t|| temp.element.scrollWidth === temp.width)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t// Check if it's removed from DOM\r\n\t\t\t\t\tif(temp.element.parentElement === null){\r\n\t\t\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.callback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(_onElementResize.length === 0){\r\n\t\t\t\t\tclearInterval(_onElementResize_timer);\r\n\t\t\t\t\t_onElementResize_timer = -1;\r\n\t\t\t\t}\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\r\n\t\t_onElementResize.push({\r\n\t\t\telement:parentNode,\r\n\t\t\tcallback:callback,\r\n\t\t\theight:parentNode.scrollHeight,\r\n\t\t\twidth:parentNode.scrollWidth\r\n\t\t});\r\n\t}\r\n\r\n\tfunction offElementResize(parentNode){\r\n\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\tif(_onElementResize[i].element === parentNode)\r\n\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Interval will be cleared when the array is empty\r\n\t}\r\n\r\n\tfunction initStyles(){\r\n\t}\r\n\r\n\tvar styleInitialized = false;\r\n\tinternal.addScrollerStyle = function(){\r\n\t\tif(!styleInitialized){\r\n\t\t\tvar style = document.getElementById('sf-styles');\r\n\r\n\t\t\tif(!style){\r\n\t\t\t\tstyle = document.createElement('style');\r\n\t\t\t\tstyle.id = 'sf-styles';\r\n\t\t\t\tdocument.head.appendChild(style);\r\n\t\t\t}\r\n\r\n\t\t\tstyle.sheet.insertRule(\r\n\t\t\t'.sf-virtual-list .virtual-spacer{'+\r\n\t\t\t    'visibility: hidden !important;'+\r\n\t\t\t    'position: relative !important;'+\r\n\t\t\t    'transform-origin: 0 0 !important;'+\r\n\t\t\t    'width: 0 !important;'+\r\n\t\t\t    'margin: 0 !important;'+\r\n\t\t\t    'padding: 0 !important;'+\r\n\t\t\t    'background: none !important;'+\r\n\t\t\t    'border: none !important;'+\r\n\t\t\t    'box-shadow: none !important;'+\r\n\t\t\t    'transition: none !important;'+\r\n\t\t\t '}', style.sheet.cssRules.length);\r\n\r\n\t\t\tstyle.sheet.insertRule(\r\n\t\t\t'.sf-scroll-element {'+\r\n\t\t\t \t'backface-visibility: hidden;'+\r\n\t\t\t '}', style.sheet.cssRules.length);\r\n\t\t\tstyleInitialized = true;\r\n\t\t}\r\n\t}\r\n\r\n\tvar isScroller = /auto|scroll|overlay|hidden/;\r\n\tinternal.findScrollerElement = function(el){\r\n\t\twhile(el !== null && isScroller.test(getComputedStyle(el).overflow) === false){\r\n\t\t\tel = el.parentElement;\r\n\t\t\tif(el === document.body)\r\n\t\t\t\treturn null;\r\n\t\t};\r\n\r\n\t\treturn el;\r\n\t}\r\n};"]}