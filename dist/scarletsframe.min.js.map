{"version":3,"sources":["sf-a_init.js","sf-a_polyfill.js","sf-controller.js","sf-dom.js","sf-e-ajax.js","sf-z_end.js","sf-loader.js","sf-model.js","sf-router.js","sf-virtual_scroll.js"],"names":["global","factory","exports","module","sf","window","this","undefined","document","arguments","constructor","Function","loader","onFinish","apply","isEmptyObject","obj","key","compareObject","obj1","obj2","i","internal","regex","getQuotes","avoidQuotes","strictVar","Object","assign","defineProperty","value","target","varArgs","TypeError","to","index","length","nextSource","nextKey","prototype","hasOwnProperty","call","writable","configurable","Element","remove","CharacterData","DocumentType","forEach","item","enumerable","parentNode","removeChild","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","querySelectorAll","NodeList","callback","thisArg","location","origin","protocol","hostname","port","controller","self","pending","active","for","name","func","modelScope","element","model","modelName","bindedList","getAttribute","parentEl","$","parent","root","bindedListIndex","prevAll","hasAttribute","run","listenSFClick","e","script","_modelScope","modelKeys","scopeMask","RegExp","replace","full","matched","split","method","method_","eval","shift","join","pop","found","preventDefault","console","error","root_","scope","DOMWasLoaded","init","temp","body","addEventListener","on","capture","once","dom","selector","context","parseElement","String","findOne","querySelector","closest","parentElement","isNext","result","findNodes","nextSibling","previousSibling","push","nextAll","event","tempCallback","ev","off","events","ref","getEventListeners","removeEventListener","splice","animateCSS","animationName","duration","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","style","webkitAnimationDuration","animationDuration","list","classList","add","setTimeout","emptyDOM","div","createElement","ul","tbody","tr","table","select","html","returnNode","tempDOM","indexOf","textContent","insertAdjacentHTML","elements","documentElement","domReady","getSelector","childIndexes","untilElement","names","id","unshift","tagName","array","childNodes","globals","jsonpRequests","Request","requestOptions","globalsNoCallbacks","callbackName","defaults","url","toString","data","async","cache","user","password","headers","xhrFields","statusCode","processData","dataType","contentType","timeout","options","fireCallback","globalCallbackValue","optionCallbackValue","_i","type","paramsPrefix","toUpperCase","stringData","serializeQuery","abortTimeout_1","callbackName_1","Date","now","callbackSplit","requestUrl","addVars","filter","el","script_1","onerror","clearTimeout","src","appendChild","xhr","XMLHttpRequest","requestParameters","open","xhrTimeout","postData","ArrayBuffer","Blob","Document","FormData","boundary","setRequestHeader","newData","JSON","stringify","keys","headerName","crossDomain","test","$2","host","onload","status","responseData","parseError","parse","responseText","err","responseType","response","onabort","abort","send","RequestShortcut","args","_a","success","params","prefix","Array","encodeURIComponent","get","concat","post","json","getJSON","postJSON","setup","ajax","loadedContent","totalContent","DOMReady","turnedOff","whenDOMReady","whenDOMLoaded","whenProgress","onProgress","f","css","rel","href","head","js","warn","isQueued","queuePreprocess","nodeType","repeatedList","onReadyState","readyState","clearInterval","onReadyState_timer","listener","router","setInterval","bindingEnabled","processingElement","trimIndentation","text","indent","trim","bracketMatch","chackValidFunctionCall","allowedFunction","localEval","_model_","_content_","tempScript","preventExecution","check_","exec","log","outerHTML","_result_","_evaled_","escapeEscapedQuote","unescapeEscapedQuote","elseIfHandle","else_","scopes","elseIf","elseValue","currentElement","previousElementSibling","$virtual","DOMCursor","modelRef","templateParser_regex","REF_DIRECT","REF_IF","REF_EXEC","templateExec","parsed","if","templateParser","template","cloneNode","addresses","changesReference","pendingInsert","current","address","cRef","refA","direct","parse_id","match","dynamicFlag","parse_index","startFlag","attributes","a","refB","attribute","setAttribute","sf$changesReference","tDOM","insertBefore","dataParser","mask","runEval","preParsedReference","variableList","itemMask","preParsed","lastParsedIndex","prepared","actual","slice","exist","charCodeAt","uniqueDataParser","take","passVar","currentIndex","strDeclare","firstTime","check","VarPass_","VarPass","s1","obtained","val","findElse","condition","bindArray","propertyName","targetNode","editProperty","refreshTimer","processElement","other","count","spacer","firstElementChild","lastElementChild","children","overflow","vDOM","update","insertAdjacentElement","refresh","oldChild","replaceChild","referenceNode","create","currentRemoved","startRemove","_single_zero","_double_zero","propertyProxy","subject","lastLength","o","matchLeft","real","limit","from","contains","virtual_scroll","handle","childElement","childElementCount","loopParser","items","extractPreprocess","sf$bindedKey","initBindingInformation","set","$replace","inputBoundFunction","bindInput","whichVar","removeAttribute","alreadyInitialized","DOMNodeRemoved","removeModelBinding","queued","parsePreprocess","ceiling","floor","styles","getComputedStyle","absHeight","parseFloat","Math","ceil","offsetHeight","after","nextElementSibling","before","everyRemovedNodes","nodes","nodeName","MutationObserver","observe","everyRecords","record","removedNodes","records","childList","subtree","bindedKey","Number","Boolean","destroy","getOwnPropertyDescriptor","dcBracket","bindObject","which","Node","attrs","attr","htmlClone","innerHTML","onChanges","objValue","bindElement","brackets","s2","copy","reverse","addressed","addressAttributes","currentNode","indexes","map","addressStart","commentFlag","flag","createComment","textNode","createTextNode","search","excludes","extracting","nodeValue","loading","enabled","pauseRenderOnTransition","currentPage","initialized","currentRouterURL","popstateListener","routingError","routingBack","goto","pathname","beforeEvent","enable","load","onEvent","loaded","special","lazyViewPoint","elem","history","pushState","path","RouterLoading","_scarlets","DOMReference","foundAction","last","afterEvent","title","oldURL","newURL","routerLoaded","aborted","back","styleInitialized","scrollingByScript","refreshScrollBounding","cursor","bounding","prepareCount","offsetTop","preparedLength","dCursor","scrollHeight","scrollTo","scroller","refreshVirtualSpacer","virtual","reduce","scrollTop","vCursor","insertCount","removeUserScrollFocus","getAbsoluteHeight","margin","parseInt","force","checkCursorPosition","additionalScroll","moveTo","getElementById","sheet","insertRule","cssRules","initStyles","obtainElements","_onElementResize","offElementResize","resetViewport","visibleLength","clientHeight","fillViewport","ceilingHeight","floorHeight","updating","resetCeiling","height","previousCeiling","nextFloor","_onElementResize_timer","scrollWidth","width","onElementResize","dynamicHeight","offsetTo","fromCeiling","scrollFocused","changes","moveElementCursor","navigator","userAgent","staticHeight"],"mappings":";;;;;;;;CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,oBAAAC,OAAAA,OAAAD,QAAAD,EAAAD,GACAA,EAAAI,GAAAH,EAAAD,GAFA,CAGA,oBAAAK,OAAAA,OAAAC,KAAA,SAAAD,QAAA,kBACAE,WAAAC,WACAA,SAAAH,OAAAG,UAGA,IAAAJ,GAAA,SAAAA,IACA,GAAAK,UAAA,GAAAC,cAAAC,SACA,OAAAP,EAAAQ,OAAAC,SAAAC,MAAA,KAAAL,YAYA,SAAAM,cAAAC,GACA,IAAA,IAAAC,KAAAD,EACA,OAAA,EAEA,OAAA,EAGA,SAAAE,cAAAC,EAAAC,GACA,IAAAD,IAAAC,EACA,OAAA,EAEA,IAAA,IAAAC,KAAAF,EACA,GAAA,iBAAAA,EAAAE,IAAAF,EAAAE,KAAAD,EAAAC,GACA,OAAA,EAEA,OAAA,EAvBAjB,GAAAkB,SAAA,GACAlB,GAAAmB,MAAA,CAEAC,UAAA,yBACAC,YAAA,kDACAC,UAAA,iCClBA,mBAAAC,OAAAC,QACAD,OAAAE,eAAAF,OAAA,SAAA,CACAG,MAAA,SAAAC,EAAAC,GAEA,GAAA,MAAAD,EACA,MAAA,IAAAE,UAAA,8CAEA,IADA,IAAAC,EAAAP,OAAAI,GACAI,EAAA,EAAAA,EAAA1B,UAAA2B,OAAAD,IAAA,CACA,IAAAE,EAAA5B,UAAA0B,GACA,GAAA,MAAAE,EACA,IAAA,IAAAC,KAAAD,EACAV,OAAAY,UAAAC,eAAAC,KAAAJ,EAAAC,KACAJ,EAAAI,GAAAD,EAAAC,IAIA,OAAAJ,GAEAQ,UAAA,EACAC,cAAA,SAIApC,IAAAqC,QAAAL,UAAAM,aAAAtC,IAAAuC,cAAAP,UAAAM,aAAAtC,IAAAwC,aAAAR,UAAAM,QAgBA,CAAAD,QAAAL,UAAAO,cAAAP,UAAAQ,aAAAR,WAdAS,QAAA,SAAAC,GACAA,EAAAT,eAAA,WAGAb,OAAAE,eAAAoB,EAAA,SAAA,CACAN,cAAA,EACAO,YAAA,EACAR,UAAA,EACAZ,MAAA,WACA,OAAAxB,KAAA6C,YACA7C,KAAA6C,WAAAC,YAAA9C,WAOAsC,QAAAL,UAAAc,UACAT,QAAAL,UAAAc,QAAAT,QAAAL,UAAAe,iBACAV,QAAAL,UAAAgB,oBAAAX,QAAAL,UAAAiB,mBACAZ,QAAAL,UAAAkB,kBAAAb,QAAAL,UAAAmB,uBACA,SAAAC,GAGA,IAFA,IAAAN,GAAA/C,KAAAE,UAAAF,KAAAsD,eAAAC,iBAAAF,GACAtC,EAAAgC,EAAAjB,SACAf,GAAA,GAAAgC,EAAAJ,KAAA5B,KAAAf,OACA,OAAAe,GAAA,IAIAyC,SAAAvB,UAAAS,UACAc,SAAAvB,UAAAS,QAAA,SAAAe,EAAAC,GACAA,EAAAA,GAAA3D,OACA,IAAA,IAAAgB,EAAA,EAAAA,EAAAf,KAAA8B,OAAAf,IACA0C,EAAAtB,KAAAuB,EAAA1D,KAAAe,GAAAA,EAAAf,QAKAD,OAAA4D,SAAAC,SACA7D,OAAA4D,SAAAC,OAAA7D,OAAA4D,SAAAE,SAAA,KAAA9D,OAAA4D,SAAAG,UAAA/D,OAAA4D,SAAAI,KAAA,IAAAhE,OAAA4D,SAAAI,KAAA,KChEAjE,GAAAkE,WAAA,IAAA,WACA,IAAAC,KAAAjE,KACAiE,KAAAC,QAAA,GACAD,KAAAE,OAAA,GAEAF,KAAAG,IAAA,SAAAC,EAAAC,GACAL,KAAAC,QAAAG,GAAAC,GAGAL,KAAAM,WAAA,SAAAC,EAAAF,GACA,IAAAG,EAAA3E,GAAAkE,WAAAU,UAAAF,GAEA,IAAAC,EACA,KAAA,oCAEA,IAAAE,EAAAH,EAAAI,aAAA,gBACA,GAAAD,EAKA,IAAAE,EAAAL,OAHA,QADAK,EAAAC,EAAAC,OAAAP,EAAA,qBAEAG,EAAAE,EAAAD,aAAA,iBAIA,IAAAD,EACA,OAAAL,EAAAA,EAAAxE,GAAA2E,MAAAO,KAAAP,IAAA,GACA3E,GAAA2E,MAAAO,KAAAP,GAIA,IAAAQ,EAAA,EAIA,OAHAN,IACAM,EAAAH,EAAAI,QAAAL,EAAA,kBAAA/C,QAEAwC,EAAAA,EAAAxE,GAAA2E,MAAAO,KAAAP,GAAAE,GAAAM,GACAnF,GAAA2E,MAAAO,KAAAP,GAAAE,GAAAM,IAGAhB,KAAAS,UAAA,SAAAF,GACA,IAAAH,OAAApE,EAUA,YAHAA,KALAoE,EADAG,EAAAW,aAAA,iBACAX,EAAAI,aAAA,iBAEAE,EAAAC,OAAAP,EAAA,mBAAAI,aAAA,mBAGAX,KAAAE,OAAAE,IACAJ,KAAAmB,IAAAf,GAEAA,GAGA,IAAAgB,cAAA,SAAAA,cAAAC,GACA,IAAAd,QAAAc,EAAA7D,OACA8D,OAAAf,QAAAI,aAAA,YAEAW,SACAf,QAAAM,EAAAC,OAAAP,QAAA,cACAe,OAAAf,QAAAI,aAAA,aAGA,IAAAH,MAAAK,EAAAC,OAAAP,QAAA,mBAAAI,aAAA,iBAEA,IAAA9E,GAAA2E,MAAAO,KAAAP,OACA,KAAA,2BAAAA,MAAA,iCAEA,IAAAe,YAAA1F,GAAA2E,MAAAO,KAAAP,OAEAgB,UAAA3F,GAAA2E,MAAAgB,UAAAD,aACAE,UAAAC,OAAA7F,GAAAmB,MAAAG,UAAA,IAAAqE,UAAA,IAAA3F,GAAAmB,MAAAE,YAAA,MAAA,KAEAoE,OAAAA,OAAAK,QAAAF,UAAA,SAAAG,EAAAC,GACA,MAAA,eAAAA,IAGAP,OAAAA,OAAAQ,MAAA,KAEA,IAAAC,OAAAT,OAAA,GACAU,QAAAD,OAGA,IACAA,OAAAE,KAAAF,QACA,MAAAV,GACAU,QAAA,EAGA,GAAAA,OAAA,CAMAT,OAAAY,QACAZ,OAAAA,OAAAa,KAAA,KACAb,OAAAA,OAAAQ,MAAA,KACAR,OAAAc,MACAd,OAAAA,OAAAa,KAAA,KAGA,IAAAb,OAAAzD,SAEAyD,OAAAW,MAAA,IAAAX,OAAA,KAAAK,QAAA,gBAAA,SAAAU,GACA,OAAAA,EAAA,GAAA,cAGAf,SACAA,OAAA,IAEA,IACAS,OAAAxF,MAAAgE,QAAAe,QACAD,EAAAiB,iBACA,MAAAjB,GACAkB,QAAAC,MAAA,gCAAAhC,MAAA,KAAAD,QAAA,KAAAc,SAzBAkB,QAAAC,MAAA,gCAAAhC,MAAA,kBAAAwB,QAAA,OAAAzB,UA6BAkC,MAAA,SAAAC,GAOA,OANA7G,GAAA2E,MAAAO,KAAA2B,KACA7G,GAAA2E,MAAAO,KAAA2B,GAAA,IAEA7G,GAAA2E,MAAAO,KAAA2B,IACA7G,GAAAkE,WAAAoB,IAAAuB,GAEA7G,GAAA2E,MAAAO,KAAA2B,IAGA1C,KAAAmB,IAAA,SAAAf,EAAAC,GACA,IAAAxE,GAAAQ,OAAAsG,aACA,OAAA9G,GAAA,WACAmE,KAAAmB,IAAAf,EAAAC,KAGAL,KAAAC,QAAAG,KACAvE,GAAA2E,MAAAO,KAAAX,KACAvE,GAAA2E,MAAAO,KAAAX,GAAA,IAEAJ,KAAAC,QAAAG,GAAAvE,GAAA2E,MAAAO,KAAAX,GAAAqC,OACAzC,KAAAE,OAAAE,IAAA,SACAJ,KAAAC,QAAAG,IAGAC,GACAA,EAAAxE,GAAA2E,MAAAO,KAAAX,GAAAqC,QAGAzC,KAAA4C,KAAA,SAAA9B,GACA,IAAAjF,GAAAQ,OAAAsG,aACA,OAAA9G,GAAA,WACAmE,KAAA4C,KAAAxC,QAIA,IADA,IAAAyC,EAAAhC,EAAA,kBAAAC,GAAA7E,SAAA6G,MACAhG,EAAA,EAAAA,EAAA+F,EAAAhF,OAAAf,IACAkD,KAAAmB,IAAA0B,EAAA/F,GAAA6D,aAAA,mBAKA1E,SAAA8G,iBAAA,mBAAA,WACAlC,EAAAmC,GAAA/G,SAAA6G,KAAA,QAAA,aAAA1B,gBACA,CAAA6B,SAAA,EAAAC,MAAA,KCjKArH,GAAAsH,IAAA,SAAAC,EAAAC,GACA,MAAA,MAAAD,EAAA,GAAAvH,GAAAsH,IAAAG,aAAAF,GACAA,EAAAjH,cAAAoH,OAAAH,EAEAC,EAAAA,EAAA/D,iBAAA8D,GACAnH,SAAAqD,iBAAA8D,IAGA,IAAAvC,EAAAhF,GAAAsH,KAEA,WACA,IAAAnD,EAAAnE,GAAAsH,IAEAnD,EAAAwD,QAAA,SAAAJ,EAAAC,GACA,YAAArH,IAAAqH,EAAAA,EAAAI,cAAAL,GACAnH,SAAAwH,cAAAL,IAGApD,EAAAc,OAAA,SAAAP,EAAA6C,GACA,GAAA7C,EAAAmD,QAAA,OAAAnD,EAAAmD,QAAAN,GAEA,EAAA,CACA,IAAA,IAAA7C,EAAAzB,QAAAsE,GACA,OAAA7C,EAEAA,EAAAA,EAAAoD,oBACA,OAAApD,GAEA,OAAA,MAGAP,EAAAiB,QAAA,SAAAV,EAAA6C,EAAAQ,GACA,IAAAC,EAAA,GACAC,EAAA,OAAAV,GAAAA,EAAAjH,cAAAoH,OAIA,IADAhD,EAAAqD,EAAArD,EAAAwD,YAAAxD,EAAAyD,gBACA,OAAAzD,GAAA,CACA,IAAA,IAAAuD,IAAA,IAAAvD,EAAAzB,QAAAsE,GACAS,EAAAI,KAAA1D,OACA,CACA,GAAAA,IAAA6C,EACA,MACAS,EAAAI,KAAA1D,GAIAA,EADAqD,EACArD,EAAAwD,YAEAxD,EAAAyD,gBAGA,OAAAH,GAIA7D,EAAAkE,QAAA,SAAA3D,EAAA6C,GACA,OAAApD,EAAAiB,QAAAV,EAAA6C,GAAA,IAYApD,EAAAgD,GAAA,SAAAzC,EAAA4D,EAAAf,EAAA5D,EAAA0D,GAaA,GAZA,iBAAA3C,IACAA,EAAAtE,SACAuD,EAAA4D,EACAA,EAAAe,EACAA,EAAA5D,GAGA,mBAAA6C,IACA5D,EAAA4D,EACAA,EAAA,MAGAA,EAAA,CACA,IAAAgB,EAAA5E,EACAA,EAAA,SAAA6E,GACA,OAAArE,EAAAc,OAAAuD,EAAA7G,OAAA4F,IACAgB,EAAAC,IAIA7E,EAAA4D,SAAAA,EACA7C,EAAAwC,iBAAAoB,EAAA3E,EAAA,CAAAyD,SAAA,EAAAC,MAAA,IAAAA,KAIAlD,EAAAkD,KAAA,SAAA3C,EAAA4D,EAAAf,EAAA5D,GACAQ,EAAAgD,GAAAzC,EAAA4D,EAAAf,EAAA5D,GAAA,IAUAQ,EAAAsE,IAAA,SAAA/D,EAAA4D,EAAAf,GAEA,QAAApH,IAAAmI,EASA,GAAA,KADAI,EAAAJ,EAAArC,MAAA,MACAjE,OAAA,CAQA,IAAA2G,EAAAC,kBAAAlE,GACA,QAAAvE,IAAAwI,QAAAxI,IAAAwI,EAAAL,GACA,IAAArH,EAAA0H,EAAAL,GAAAtG,OAAA,EAAAf,GAAA,EAAAA,IACAsG,GAAAoB,EAAAL,GAAArH,GAAAsG,WAAAA,GAGA7C,EAAAmE,oBAAAP,EAAAK,EAAAL,GAAAQ,OAAA7H,EAAA,IAAA,QAbA,IAAA,IAAAA,EAAA,EAAAA,EAAAyH,EAAA1G,OAAAf,IACAkD,EAAAsE,IAAA/D,EAAAgE,EAAAzH,SATA,IADA,IAAAyH,EAAAE,kBAAAlE,GACAzD,EAAA,EAAAA,EAAAyH,EAAA1G,OAAAf,IACAkD,EAAAsE,IAAA/D,EAAAgE,EAAAzH,KAyBAkD,EAAA4E,WAAA,SAAArE,EAAAsE,EAAArF,EAAAsF,GACA,IAAAC,EAAA,CACAC,UAAA,eACAC,WAAA,gBACAC,aAAA,kBACAC,gBAAA,sBAGA,IAAA,IAAAC,KAAAL,EACA,QAAA/I,IAAAuE,EAAA8E,MAAAD,GAAA,CACAL,EAAAA,EAAAK,GACA,MAIAN,IACAvE,EAAA8E,MAAAC,wBAAAR,EAAA,IACAvE,EAAA8E,MAAAE,kBAAAT,EAAA,KAGA,IAAAU,GAAA,YAAAX,GAAA/C,MAAA,KACAvB,EAAAkF,UAAAC,IAAAnJ,MAAAgE,EAAAkF,UAAAD,GACA3E,EAAAqC,KAAA3C,EAAAwE,EAAA,WACAxE,EAAAkF,UAAAnH,OAAA/B,MAAAgE,EAAAkF,UAAAD,GAEAV,GAAAa,WAAA,WACApF,EAAA8E,MAAAC,wBAAAR,EAAA,IACAvE,EAAA8E,MAAAE,kBAAAT,EAAA,KACA,GAEA,mBAAAtF,GAAAA,OAIA,IAAAoG,EAAA,CACAC,IAAA5J,SAAA6J,cAAA,OACAC,GAAA9J,SAAA6J,cAAA,MACAE,MAAA/J,SAAA6J,cAAA,SACAG,GAAAhK,SAAA6J,cAAA,MACAI,MAAAjK,SAAA6J,cAAA,SACAK,OAAAlK,SAAA6J,cAAA,WAEA9F,EAAAsD,aAAA,SAAA8C,EAAAC,GACA,IAAAxC,EAAA,GACAyC,EAAAV,EAAAC,IAEA,IAAAO,EAAAG,QAAA,SAAAD,EAAAV,EAAAG,IACA,IAAAK,EAAAG,QAAA,SAAAD,EAAAV,EAAAI,OACA,IAAAI,EAAAG,QAAA,QAAA,IAAAH,EAAAG,QAAA,SAAAD,EAAAV,EAAAK,IACA,IAAAG,EAAAG,QAAA,YAAAD,EAAAV,EAAAM,OACA,IAAAE,EAAAG,QAAA,aAAAD,EAAAV,EAAAO,QAEAG,EAAAE,YAAA,GACAF,EAAAG,mBAAA,aAAAL,GAGA,IADA,IAAA5B,EAAA8B,EAAAD,EAAA,aAAA,YACAvJ,EAAA,EAAAA,EAAA0H,EAAA3G,OAAAf,IACA+G,EAAAI,KAAAO,EAAA9F,KAAA5B,IAGA,OAAA+G,GAGA7D,EAAA1B,OAAA,SAAAoI,GACA,QAAA1K,IAAA0K,EAAApI,OACA,OAAAoI,EAAApI,SAEA,IAAA,IAAAxB,EAAA,EAAAA,EAAA4J,EAAA7I,OAAAf,IACA4J,EAAA5J,GAAAwB,UAIA,IAAAqI,EAAA,KACAhB,WAAA,WACA9J,GAAAQ,OAAAuK,SAAA,WACAD,EAAA1K,SAAA6G,KAAAa,iBAEA,GAEA3D,EAAA6G,YAAA,SAAAtG,EAAAuG,EAAAC,GACA,IAAAC,EAAA,QACAhL,IAAA+K,IAAAA,EAAAJ,GAIA,IAFA,IAAA3C,EAAA8C,EAAA,kBAAA,yBAEA,OAAAvG,EAAA3B,YAAA,CACA,GAAA2B,EAAA0G,GAAA,CACAD,EAAAE,QAAA,IAAA3G,EAAA0G,IACA,MAGA,GAAA1G,IAAAwG,OACA/K,IAAA8K,EACAE,EAAAE,QAAA3G,EAAA4G,SACAH,EAAAE,QAAA,OAEA,CAIA,IAHA,IAAA7F,EAAAd,EACAzD,EAAAgK,EAAA,EAAA,EAEAzF,EAAA2C,IACA3C,EAAAA,EAAA2C,GACAlH,IAGAgK,EACAE,EAAAE,QAAApK,GAEAkK,EAAAE,QAAA,cAAApK,EAAA,KAIA,GAAA,QADAyD,EAAAA,EAAA3B,YAEA,MAIA,OAAAkI,EACAE,EACAA,EAAA7E,KAAA,QAGAnC,EAAA8G,aAAA,SAAAM,EAAA/D,GACA,IAAA9C,EAAA8C,GAAAsD,EACA7J,EAAA,EAEA,GAAAsK,EAAA,GAAAjL,cAAAoH,OACAhD,EAAAA,EAAAkD,cAAA2D,EAAA,SAEA,GAAA,IAAAA,EAAAvJ,OACA,OAAA0C,EAEA,IAAAzD,EAAAA,EAAAA,EAAAsK,EAAAvJ,OAAAf,IAGA,GAAA,QAFAyD,EAAAA,EAAA8G,WAAA3I,KAAA0I,EAAAtK,KAGA,OAAA,KAGA,OAAAyD,GAzQA,GCLA,IAAA+G,QAAA,GACAC,cAAA,EACA,SAAAC,QAAAC,GACA,IAAAC,EAAAtK,OAAAC,OAAA,GAAAiK,SACA,uEAAAxF,MAAA,KAAArD,QAAA,SAAAkJ,UACAD,EAAAC,KAEA,IAAAC,EAAAxK,OAAAC,OAAA,CACAwK,IAAA/L,OAAA4D,SAAAoI,WACA/F,OAAA,MACAgG,MAAA,EACAC,OAAA,EACAC,OAAA,EACAC,KAAA,GACAC,SAAA,GACAC,QAAA,GACAC,UAAA,GACAC,WAAA,GACAC,aAAA,EACAC,SAAA,OACAC,YAAA,oCACAC,QAAA,GACAhB,GACAiB,EAAAvL,OAAAC,OAAA,GAAAuK,EAAAH,GAGA,SAAAmB,EAAAjB,GAEA,IADA,IAcAkB,EACAC,EAfAf,EAAA,GACAgB,EAAA,EAAAA,EAAA7M,UAAA2B,OAAAkL,IACAhB,EAAAgB,EAAA,GAAA7M,UAAA6M,GAwBA,OAVAzB,QAAAK,KACAkB,EAAAvB,QAAAK,GAAApL,MAAA+K,QAAAS,IAEAY,EAAAhB,KACAmB,EAAAH,EAAAhB,GAAApL,MAAAoM,EAAAZ,IAEA,kBAAAc,IACAA,GAAA,GACA,kBAAAC,IACAA,GAAA,GACAD,GAAAC,EAIA,IAAA,IADAF,EAAA,eAAAD,GACA,CAGAA,EAAAK,OACAL,EAAA5G,OAAA4G,EAAAK,MAEA,IAAAC,EAAAN,EAAAd,IAAAtB,QAAA,MAAA,EAAA,IAAA,IAEAxE,EAAA4G,EAAA5G,OAAAmH,cAEA,IAAA,QAAAnH,GAAA,SAAAA,GAAA,YAAAA,GAAA,WAAAA,IAAA4G,EAAAZ,KAAA,CACA,IAAAoB,OAAA,GAIAA,EAHA,iBAAAR,EAAAZ,KAEAY,EAAAZ,KAAAxB,QAAA,MAAA,EACAoC,EAAAZ,KAAAjG,MAAA,KAAA,GAEA6G,EAAAZ,KAIAqB,eAAAT,EAAAZ,OAEAlK,SACA8K,EAAAd,KAAAoB,EAAAE,EACA,MAAAF,IACAA,EAAA,MAIA,GAAA,SAAAN,EAAAH,UAAAG,EAAAd,IAAAtB,QAAA,cAAA,EAAA,CACA,IACA8C,EADAC,EAAA,UAAAC,KAAAC,OAAAjC,eAAA,IAEAkC,EAAAd,EAAAd,IAAA/F,MAAA,aACA4H,EAAAD,EAAA,GAAA,YAAAH,EACA,GAAAG,EAAA,GAAAlD,QAAA,MAAA,EAAA,CACA,IAAAoD,EAAAF,EAAA,GAAA3H,MAAA,KAAA8H,OAAA,SAAAC,GAAA,OAAAA,EAAAtD,QAAA,KAAA,IAAApE,KAAA,KACAwH,EAAA9L,OAAA,IACA6L,GAAA,IAAAC,GAGA,IAAAG,EAAA7N,SAAA6J,cAAA,UAwBA,OAvBAgE,EAAAd,KAAA,kBACAc,EAAAC,QAAA,WACAC,aAAAX,GACAT,EAAA,QAAA,KAAA,eACAA,EAAA,WAAA,KAAA,gBAEAkB,EAAAG,IAAAP,EAEA5N,OAAAwN,GAAA,SAAAvB,GACAiC,aAAAX,GACAT,EAAA,UAAAb,GACA+B,EAAAlL,WAAAC,YAAAiL,GACAA,EAAA,YACAhO,OAAAwN,IAEArN,SAAAwH,cAAA,QAAAyG,YAAAJ,QACAnB,EAAAD,QAAA,IACAW,EAAA1D,WAAA,WACAmE,EAAAlL,WAAAC,YAAAiL,GACAA,EAAA,KACAlB,EAAA,QAAA,KAAA,YACAD,EAAAD,WAKA,QAAA3G,GAAA,SAAAA,GAAA,YAAAA,GAAA,WAAAA,IACA,IAAA4G,EAAAV,QACAU,EAAAd,KAAAoB,EAAA,WAAAM,KAAAC,OAIA,IAAAW,EAAA,IAAAC,eAMA,GAJAD,EAAAT,WAAAf,EAAAd,IACAsC,EAAAE,kBAAA1B,GAGA,IADAC,EAAA,aAAAuB,EAAAxB,GAEA,OAAAwB,EAEAA,EAAAG,KAAAvI,EAAA4G,EAAAd,IAAAc,EAAAX,MAAAW,EAAAT,KAAAS,EAAAR,UAEA,IAyDAoC,EAzDAC,EAAA,KACA,IAAA,SAAAzI,GAAA,QAAAA,GAAA,UAAAA,IAAA4G,EAAAZ,KACA,GAAAY,EAAAJ,YAGA,GAFA,CAAAkC,YAAAC,KAAAC,SAAAC,UAEArE,QAAAoC,EAAAZ,KAAA5L,cAAA,EACAqO,EAAA7B,EAAAZ,SAEA,CAEA,IAAA8C,EAAA,8BAAAtB,KAAAC,MAAA1B,SAAA,IACA,wBAAAa,EAAAF,YACA0B,EAAAW,iBAAA,eAAA,iCAAAD,GAGAV,EAAAW,iBAAA,eAAAnC,EAAAF,aAEA+B,EAAA,GACA,IAAAzC,EAAAqB,eAAAT,EAAAZ,MACA,GAAA,wBAAAY,EAAAF,YAAA,CACAV,EAAAA,EAAAjG,MAAA,KAEA,IADA,IAAAiJ,EAAA,GACAjO,EAAA,EAAAA,EAAAiL,EAAAlK,OAAAf,GAAA,EACAiO,EAAA9G,KAAA,yCAAA8D,EAAAjL,GAAAgF,MAAA,KAAA,GAAA,YAAAiG,EAAAjL,GAAAgF,MAAA,KAAA,GAAA,QAEA0I,EAAA,KAAAK,EAAA,OAAAE,EAAA5I,KAAA,KAAA0I,EAAA,QAAA,KAAAA,EAAA,cAGAL,EADA,qBAAA7B,EAAAF,YACAuC,KAAAC,UAAAtC,EAAAZ,MAGAA,OAKAyC,EAAA7B,EAAAZ,KACAoC,EAAAW,iBAAA,eAAAnC,EAAAF,aA8EA,OA1EAE,EAAAP,SACAhL,OAAA8N,KAAAvC,EAAAP,SAAA3J,QAAA,SAAA0M,GACAhB,EAAAW,iBAAAK,EAAAxC,EAAAP,QAAA+C,WAIA,IAAAxC,EAAAyC,cAEAzC,EAAAyC,YAAA,0BAAAC,KAAA1C,EAAAd,MAAAnG,OAAA4J,KAAAxP,OAAA4D,SAAA6L,MAEA5C,EAAAyC,aACAjB,EAAAW,iBAAA,mBAAA,kBAEAnC,EAAAN,WACAjL,OAAAC,OAAA8M,EAAAxB,EAAAN,WAIA8B,EAAAqB,OAAA,WAGA,GAFAjB,GACAP,aAAAO,GACAJ,EAAAsB,QAAA,KAAAtB,EAAAsB,OAAA,KAAA,IAAAtB,EAAAsB,OAAA,CACA,IAAAC,OAAA,EACA,GAAA,SAAA/C,EAAAH,SAAA,CACA,IAAAmD,OAAA,EACA,IACAD,EAAAV,KAAAY,MAAAzB,EAAA0B,cAEA,MAAAC,GACAH,GAAA,EAEAA,EAIA/C,EAAA,QAAAuB,EAAA,cAHAvB,EAAA,UAAA8C,EAAAvB,EAAAsB,OAAAtB,QAQAvB,EAAA,UADA8C,EAAA,SAAAvB,EAAA4B,cAAA,KAAA5B,EAAA4B,aAAA5B,EAAA0B,aAAA1B,EAAA6B,SACA7B,EAAAsB,OAAAtB,QAIAvB,EAAA,QAAAuB,EAAAA,EAAAsB,QAEA9C,EAAAL,aACAhB,QAAAgB,YAAAhB,QAAAgB,WAAA6B,EAAAsB,SACAnE,QAAAgB,WAAA6B,EAAAsB,QAAAtB,GACAxB,EAAAL,WAAA6B,EAAAsB,SACA9C,EAAAL,WAAA6B,EAAAsB,QAAAtB,IAEAvB,EAAA,WAAAuB,EAAAA,EAAAsB,SAEAtB,EAAAJ,QAAA,WACAQ,GACAP,aAAAO,GACA3B,EAAA,QAAAuB,EAAAA,EAAAsB,QACA7C,EAAA,WAAAuB,EAAA,UAGAxB,EAAAD,QAAA,IACAyB,EAAA8B,QAAA,WACA1B,GACAP,aAAAO,IAEAA,EAAA5E,WAAA,WACAwE,EAAA+B,QACAtD,EAAA,QAAAuB,EAAA,WACAvB,EAAA,WAAAuB,EAAA,YACAxB,EAAAD,WAIA,IADAE,EAAA,aAAAuB,EAAAxB,GAEAwB,GAEAA,EAAAgC,KAAA3B,GAEAL,IAEA,SAAAiC,gBAAArK,GAEA,IADA,IAAAsK,EAAA,GACAtD,EAAA,EAAAA,EAAA7M,UAAA2B,OAAAkL,IACAsD,EAAAtD,EAAA,GAAA7M,UAAA6M,GAEA,IAAAuD,EAAA,GAAAzE,EAAAyE,EAAA,GAAAvE,EAAAuE,EAAA,GAAAC,EAAAD,EAAA,GAAA9J,EAAA8J,EAAA,GAAA9D,EAAA8D,EAAA,GACA,mBAAAD,EAAA,IACAxE,EAAAwE,EAAA,GAAAE,EAAAF,EAAA,GAAA7J,EAAA6J,EAAA,GAAA7D,EAAA6D,EAAA,KAGAxE,EAAAwE,EAAA,GAAAtE,EAAAsE,EAAA,GAAAE,EAAAF,EAAA,GAAA7J,EAAA6J,EAAA,GAAA7D,EAAA6D,EAAA,IAEA,CAAAE,EAAA/J,GAAA/D,QAAA,SAAAe,GACA,iBAAAA,IACAgJ,EAAAhJ,EACAA,IAAA+M,EACAA,OAAAvQ,EAEAwG,OAAAxG,KAIA,IAAAyL,EAAA,CACAI,IAAAA,EACA9F,OAAA,SAAAA,GAAA,aAAAA,EAAA,OAAA,MACAgG,KAAAA,EACAwE,QAAAA,EACA/J,MAAAA,EACAgG,SAPAA,EAAAA,IAAA,SAAAzG,GAAA,aAAAA,EAAA,YAAA/F,IAiBA,MARA,aAAA+F,GACA3E,OAAAC,OAAAoK,EAAA,CACAgB,YAAA,mBACAF,aAAA,EACA6C,aAAA,EACArD,KAAA,iBAAAA,EAAAA,EAAAiD,KAAAC,UAAAlD,KAGAP,QAAAC,GA6CA,SAAA2B,eAAAoD,EAAAC,GAEA,IADA,IAAA/P,EAAAU,OAAA8N,KAAAsB,GACA1P,EAAA,EAAAA,EAAAJ,EAAAmB,OAAAf,IAAA,CACA,IAAAS,EAAAiP,EAAA9P,EAAAI,IACA0P,EAAArQ,cAAAuQ,MACAhQ,EAAAI,IAAA2P,EAAA,KACAD,EAAArQ,cAAAiB,SACAV,EAAAI,GAAA2P,EAAAA,EAAA,IAAA/P,EAAAI,GAAA,IAAAJ,EAAAI,IAGAJ,EAAAI,GADA,iBAAAS,EACA6L,eAAA7L,EAAAb,EAAAI,IAEAJ,EAAAI,GAAA,IAAA6P,mBAAApP,GAEA,OAAAb,EAAAyF,KAAA,KC9WA,ODqTA/E,OAAAC,OAAAmK,QAAA,CACAoF,IAAA,WAEA,IADA,IAAAP,EAAA,GACAtD,EAAA,EAAAA,EAAA7M,UAAA2B,OAAAkL,IACAsD,EAAAtD,GAAA7M,UAAA6M,GAEA,OAAAqD,gBAAA7P,WAAA,EAAA,CAAA,OAAAsQ,OAAAR,KAEAS,KAAA,WAEA,IADA,IAAAT,EAAA,GACAtD,EAAA,EAAAA,EAAA7M,UAAA2B,OAAAkL,IACAsD,EAAAtD,GAAA7M,UAAA6M,GAEA,OAAAqD,gBAAA7P,WAAA,EAAA,CAAA,QAAAsQ,OAAAR,KAEAU,KAAA,WAEA,IADA,IAAAV,EAAA,GACAtD,EAAA,EAAAA,EAAA7M,UAAA2B,OAAAkL,IACAsD,EAAAtD,GAAA7M,UAAA6M,GAEA,OAAAqD,gBAAA7P,WAAA,EAAA,CAAA,QAAAsQ,OAAAR,KAEAW,QAAA,WAEA,IADA,IAAAX,EAAA,GACAtD,EAAA,EAAAA,EAAA7M,UAAA2B,OAAAkL,IACAsD,EAAAtD,GAAA7M,UAAA6M,GAEA,OAAAqD,gBAAA7P,WAAA,EAAA,CAAA,QAAAsQ,OAAAR,KAEAY,SAAA,WAEA,IADA,IAAAZ,EAAA,GACAtD,EAAA,EAAAA,EAAA7M,UAAA2B,OAAAkL,IACAsD,EAAAtD,GAAA7M,UAAA6M,GAEA,OAAAqD,gBAAA7P,WAAA,EAAA,CAAA,YAAAsQ,OAAAR,OAGA7E,QAAA0F,MAAA,SAAAvE,GACAA,EAAAK,OAAAL,EAAA5G,QACA3E,OAAAC,OAAAsL,EAAA,CAAA5G,OAAA4G,EAAAK,OAEA5L,OAAAC,OAAAiK,QAAAqB,IAkBA9H,EAAAsM,KAAAtR,GAAAsR,KAAA3F,QEhXA3L,GAAAQ,OAAA,IAAA,WACA,IAAA2D,EAAAjE,KACAiE,EAAAoN,cAAA,EACApN,EAAAqN,aAAA,EACArN,EAAA2C,cAAA,EACA3C,EAAAsN,UAAA,EACAtN,EAAAuN,WAAA,EAEA,IAAAC,EAAA,GACAC,EAAA,GACAC,EAAA,GAEA1N,EAAAsE,IAAA,WACAtE,EAAAuN,WAAA,GAIAvN,EAAA1D,SAAA,SAAA+D,GACA,GAAAL,EAAA2C,aAAA,OAAAtC,KACA,IAAAoN,EAAAlH,QAAAlG,IACAoN,EAAAxJ,KAAA5D,IAEAL,EAAA4G,SAAA,SAAAvG,GACA,GAAAL,EAAAsN,SAAA,OAAAjN,KACA,IAAAmN,EAAAjH,QAAAlG,IACAmN,EAAAvJ,KAAA5D,IAEAL,EAAA2N,WAAA,SAAAtN,GACA,GAAAL,EAAA2C,aAAA,OAAAtC,EAAAL,EAAAoN,cAAApN,EAAAqN,eACA,IAAAK,EAAAnH,QAAAlG,IACAqN,EAAAzJ,KAAA5D,IAGAL,EAAA4N,EAAA,SAAArN,GACAP,EAAAoN,gBACA,IAAA,IAAAtQ,EAAA,EAAAA,EAAA4Q,EAAA7P,OAAAf,IACA4Q,EAAA5Q,GAAAkD,EAAAoN,cAAApN,EAAAqN,eAIArN,EAAA6N,IAAA,SAAArI,GACA,GAAAxF,EAAA2C,aAAA,CAEA,IAAA,IAAA7F,EAAA0I,EAAA3H,OAAA,EAAAf,GAAA,EAAAA,IACA,IAAA+D,EAAA,eAAA2E,EAAA1I,GAAA,MAAAe,QACA2H,EAAAb,OAAA7H,EAAA,GAEA,GAAA,IAAA0I,EAAA3H,OAAA,OAEAmC,EAAAuN,WAAA,EAEAvN,EAAAqN,aAAArN,EAAAqN,aAAA7H,EAAA3H,OACA,IAAAf,EAAA,EAAAA,EAAA0I,EAAA3H,OAAAf,IAAA,CACA,IAAAsC,EAAAnD,SAAA6J,cAAA,QACA1G,EAAA0O,IAAA,aACA1O,EAAA2O,KAAAvI,EAAA1I,GACAsC,EAAA2D,iBAAA,OAAAlH,GAAAQ,OAAAuR,EAAA,CAAA1K,MAAA,IACA9D,EAAA2D,iBAAA,QAAAlH,GAAAQ,OAAAuR,EAAA,CAAA1K,MAAA,IACAjH,SAAA+R,KAAA9D,YAAA9K,KAIAY,EAAAiO,GAAA,SAAAzI,GACA,GAAAxF,EAAA2C,aAAA,CAEA,IAAA,IAAA7F,EAAA0I,EAAA3H,OAAA,EAAAf,GAAA,EAAAA,IACA,IAAA+D,EAAA,gBAAA2E,EAAA1I,GAAA,MAAAe,QACA2H,EAAAb,OAAA7H,EAAA,GAEA,GAAA,IAAA0I,EAAA3H,OAAA,OAEAmC,EAAAuN,WAAA,EAEAvN,EAAAqN,aAAArN,EAAAqN,aAAA7H,EAAA3H,OACA,IAAAf,EAAA,EAAAA,EAAA0I,EAAA3H,OAAAf,IAAA,CACA,IAAAsC,EAAAnD,SAAA6J,cAAA,UACA1G,EAAA4J,KAAA,kBACA5J,EAAA4I,OAAA,EACA5I,EAAA6K,IAAAzE,EAAA1I,GACAsC,EAAA2D,iBAAA,OAAAlH,GAAAQ,OAAAuR,EAAA,CAAA1K,MAAA,IACA9D,EAAA2D,iBAAA,QAAAlH,GAAAQ,OAAAuR,EAAA,CAAA1K,MAAA,IACAjH,SAAA+R,KAAA9D,YAAA9K,KAIAuG,WAAA,WACA,IAAA3F,EAAAqN,cAAArN,EAAAuN,YACAvN,EAAAoN,cAAApN,EAAAqN,aAAA,EACA9K,QAAA2L,KAAA,wFAEA,KAEA,IAAAC,GAAA,EACAlS,SAAA8G,iBAAA,mBAAA,SAAAoB,GAEA,IAAA,IAAAgK,GAAAlS,SAAA6G,KAAA,CACAqL,EAAAtS,GAAA2E,MAAA4N,gBAAAnS,SAAA6G,MACA,IAAA,IAAAhG,EAAA,EAAAA,EAAAqR,EAAAtQ,OAAAf,IACA,IAAAqR,EAAArR,GAAAuR,UACAF,EAAArR,GAAA2I,UAAAC,IAAA,iBAGA,IAAA4I,EAAAzN,EAAA,mBAAA5E,SAAA6G,MACA,IAAAhG,EAAA,EAAAA,EAAAwR,EAAAzQ,OAAAf,IACAwR,EAAAxR,GAAA2I,UAAAC,IAAA,iBAIA,IAAA7C,EAAAhC,EAAA,wBACA,IAAA/D,EAAA,EAAAA,EAAA+F,EAAAhF,OAAAf,IACAjB,GAAAQ,OAAAgR,eACAxK,EAAA/F,GAAAiG,iBAAA,OAAAlH,GAAAQ,OAAAuR,EAAA,CAAA1K,MAAA,IACAL,EAAA/F,GAAAiG,iBAAA,QAAAlH,GAAAQ,OAAAuR,EAAA,CAAA1K,MAAA,IAIA,SAAAqL,IACA,GAAA,OAAAJ,GAKA,MAAA,IAAAnO,EAAAuN,WAAAvN,EAAAoN,cAAApN,EAAAqN,gBAGA,IAAA,kBAAAhC,KAAApP,SAAAuS,YAAA,CAKA,GAFAC,cAAAC,IAEA,IAAA1O,EAAAsN,SAAA,CACAtN,EAAAsN,UAAA,EACA,IAAA,IAAAxQ,EAAA,EAAAA,EAAA0Q,EAAA3P,OAAAf,IACA,IACA0Q,EAAA1Q,KACA,MAAAuE,GACAkB,QAAAC,MAAAnB,IAKA,IAAAsN,EAAA9S,GAAAsH,IAAA,qBACA,IAAArG,EAAA,EAAAA,EAAA6R,EAAA9Q,OAAAf,IACA6R,EAAA7R,GAAA4H,oBAAA,QAAA7I,GAAAQ,OAAAuR,GACAe,EAAA7R,GAAA4H,oBAAA,OAAA7I,GAAAQ,OAAAuR,GAGA5N,EAAA2C,cAAA,EACA,IAAA7F,EAAA,EAAAA,EAAA2Q,EAAA5P,OAAAf,IACA,IACA2Q,EAAA3Q,KACA,MAAAuE,GACAkB,QAAAC,MAAAnB,GAGAqM,EAAA/I,OAAA,GACA6I,EAAA7I,OAAA,GACA8I,EAAA9I,OAAA,GACA6I,EAAAC,EAAA,KAGA5R,GAAAkE,WAAA6C,OACA/G,GAAA2E,MAAAoC,KAAA3G,SAAA6G,KAAAqL,GACAtS,GAAA+S,OAAAhM,OAEAuL,EAAA,WA/CAM,cAAAC,GAkDA,IAAAA,EAAAG,YAAAN,EAAA,KACAA,OAGA1S,GAAAmC,UAAA7B,YAAAN,GAAAQ,OAAAC,SC3KAT,GAAA2E,MAAA,SAAAkC,GAOA,OANA7G,GAAA2E,MAAAO,KAAA2B,KACA7G,GAAA2E,MAAAO,KAAA2B,GAAA,IAEA7G,GAAAkE,WAAAE,QAAAyC,IACA7G,GAAAkE,WAAAoB,IAAAuB,GAEA7G,GAAA2E,MAAAO,KAAA2B,IAGA,WACA,IAAA1C,KAAAnE,GAAA2E,MACAsO,gBAAA,EACA9O,KAAAe,KAAA,GAEA,IAAAgO,kBAAA,KAGA,SAAAC,gBAAAC,GACA,IAAAC,EAAAD,EAAAnN,MAAA,KAAA,GAKA,YAAA9F,KAHAkT,EADA,MAAAA,EAAA,GAAA,IAAA,OAAAA,EAAA,GAAA,GACAA,EAAA,GACAA,EAAA,IAEAD,EAEA,KADAC,EAAAA,EAAArR,OAAAqR,EAAAC,OAAAtR,QACAoR,EACAA,EAAAtN,QAAAD,OAAA,YAAAwN,EAAA,KAAA,MAAA,IAIA,IAAAE,aAAA1N,OAAA,wBAAA7F,GAAAmB,MAAAE,YAAA,KACAmS,uBAAA,qBACAC,gBAAA,CAAA,IAAA,MAAA,KAAA,QAAA,iBAAA,eACAC,UAAA,SAAAA,UAAAjO,OAAAkO,QAAAjO,YAAAkO,WAIA,IAAAC,WAAApO,OAGAoO,WAAAA,WAAA/N,QAAA9F,GAAAmB,MAAAC,UAAA,YAKA,IAFA,IAAA0S,kBAAA,EACAC,OAAA,KACA,QAAAA,OAAAR,aAAAS,KAAAH,cAGA,GAFAE,OAAA,GAAAA,OAAA,GAAAT,QAEA,IAAAG,gBAAA/I,QAAAqJ,OAAA,KACA,gBAAAA,OAAA,GAAA9N,MAAA,KAAA,IACAuN,uBAAAhE,KAAAuE,OAAA,GAAAA,OAAA,GAAA/R,OAAA,IACA,CACA8R,iBAAAC,OAAA,GACA,MAIA,GAAAD,iBAIA,OAHApN,QAAAC,MAAA,8CAAAmN,iBAAA,KACApN,QAAAuN,IAAAd,gBAAAD,kBAAAgB,WAAAZ,QAEA,YAIA,IAAAa,SAAA,GACA,IACA,IAAA,IAAA,WAAA3E,KAAA/J,QAAA,CACA,IAAA2O,SAAAhO,KAAA,eAAAX,OAAAQ,MAAA,YAAAK,KAAA,WAAA,QACA,OAAA6N,SAAAC,SAEA,IAAAA,SAAAhO,KAAAX,QACA,MAAAD,GAIA,OAHAkB,QAAAC,MAAAnB,GACAkB,QAAAuN,IAAAd,gBAAAD,kBAAAgB,WAAAZ,QAEA,YAGA,MAAA,KAAAa,SAAAA,SACAC,UA8CA,SAAAC,mBAAAjB,GACA,OAAAA,EAAAnN,MAAA,OAAAK,KAAA,SAAAL,MAAA,OAAAK,KAAA,SAGA,SAAAgO,qBAAAlB,GACA,OAAAA,EAAAnN,MAAA,SAAAK,KAAA,OAAAL,MAAA,SAAAK,KAAA,OAGA,SAAAiO,aAAAC,EAAAC,GAIA,IAHA,IAAAC,EAAAF,EAAAE,OAGAzT,EAAA,EAAAA,EAAAyT,EAAA1S,OAAAf,IAGA,GADAwT,EAAA,GAAAC,EAAAzT,GAAA,GACAyS,UAAAhT,MAAAyD,KAAAe,KAAAuP,GAKA,OADAA,EAAA,GAAAC,EAAAzT,GAAA,GACAyS,UAAAhT,MAAAyD,KAAAe,KAAAuP,GAIA,OAAA,OAAAD,EAAAG,UACA,IAEAF,EAAA,GAAAD,EAAAG,UACAjB,UAAAhT,MAAAyD,KAAAe,KAAAuP,IAtEAtQ,KAAApC,MAAA,SAAA2C,GAKA,IAJA,IAAAzD,GAAA,EACAqK,EAAA5G,EAAA4G,QACAsJ,EAAAlQ,EAEA,OAAAA,GACAA,EAAA4G,UAAAA,GACArK,IAEAyD,EAAAA,EAAAmQ,uBAGA,IAAAlL,EAAAiL,EAAA9P,aAAA,gBACA,IAAA6E,EAAA,OAAA1I,EAEA,IAAA0H,EAAA3I,GAAA2E,MAAAO,KAAAlF,GAAAkE,WAAAU,UAAAgQ,IAAAjL,GACA,OAAAhB,EAAAmM,SAEA7T,EAAA0H,EAAAmM,SAAAC,UAAA,EAFA9T,GAMAkD,KAAAG,IAAA,SAAAC,EAAAC,GACA,IAAAxE,GAAAQ,OAAAsG,aACA,OAAA9G,GAAA,WACAmE,KAAAG,IAAAC,EAAAC,KAGAA,EAAAL,KAAAI,GAAAJ,OAIAA,KAAAwB,UAAA,SAAAqP,GAEA,IADA,IAAA3F,EAAA9N,OAAA8N,KAAA2F,GACA/T,EAAAoO,EAAArN,OAAA,EAAAf,GAAA,EAAAA,KACA,IAAAoO,EAAApO,GAAAyJ,QAAA,MACA2E,EAAAvG,OAAA7H,EAAA,GAEA,OAAAoO,EAAA/I,KAAA,MAoCA,IAAA2O,qBAAA,iBACAC,WAAA,EAAAC,OAAA,EAAAC,SAAA,EACAC,aAAA,SAAAtF,EAAAlN,GAIA,IAHA,IAAAyS,EAAA,GAGArU,EAAA,EAAAA,EAAA8O,EAAA/N,OAAAf,IAAA,CACA,IAAA0H,EAAAoH,EAAA9O,GAIA,GAHA0H,EAAAuD,KAAA,GAAArJ,EAGA8F,EAAAwE,OAAA+H,YAAAvM,EAAAwE,OAAAiI,SACAE,EAAArU,GAAA,CAAAkM,KAAAxE,EAAAwE,KAAAjB,KAAAwH,UAAAhT,MAAAyD,KAAAe,KAAAyD,EAAAuD,YAGA,GAAAvD,EAAAwE,OAAAgI,OAAA,CACA,IAAAV,EAAA9L,EAAAuD,KAKA,GAJAoJ,EAAArU,GAAA,CAAAkM,KAAAxE,EAAAwE,KAAAjB,KAAA,IACAuI,EAAA,GAAA9L,EAAA4M,GAAA,IAGA7B,UAAAhT,MAAAyD,KAAAe,KAAAuP,GAAA,CACAa,EAAArU,GAAAiL,KAAAqI,aAAA5L,EAAA8L,GACA,SAGAA,EAAA,GAAA9L,EAAA4M,GAAA,GACAD,EAAArU,GAAAiL,KAAAwH,UAAAhT,MAAAyD,KAAAe,KAAAuP,IAGA,OAAAa,GAGAE,eAAA,SAAAC,EAAA5S,GACA,IAAA0H,EAAAkL,EAAAlL,KAAAmL,WAAA,GACAC,EAAAF,EAAAE,UACAL,EAAAD,aAAAI,EAAA1F,MAAAlN,GAGA0H,EAAA5F,MAAA9B,EAMA,IAJA,IAAA+S,EAAA,GACAC,EAAA,GAGA5U,EAAA,EAAAA,EAAA0U,EAAA3T,OAAAf,IAAA,CACA,IAAA0H,EAAAgN,EAAA1U,GACA6U,EAAA9Q,EAAAiG,aAAAtC,EAAAoN,QAAAxL,GAGA,GAAA,IAAA5B,EAAA6J,SAAA,CA2BA,GAAA,IAAA7J,EAAA6J,SAAA,CAEAwD,EAAA,CAAArL,YADAsL,EAAAH,GAIA,GAFAF,EAAAxN,KAAA4N,IAEA,IAAArN,EAAAuN,OAAA,CACAF,EAAAE,OAAAvN,EAAAuN,OACAD,EAAAtL,YAAA2K,EAAA3M,EAAAuN,QAAAhK,KACA,SAKA4J,EAAAhO,cACAkO,EAAAtU,MAAAuU,EAAAtL,YACAqL,EAAAG,SAAA,GAEAF,EAAAtL,YAAAsL,EAAAtL,YAAA7E,QAAAmP,qBAAA,SAAAlP,EAAAqQ,GAEA,OADAJ,EAAAG,SAAA/N,KAAAgO,GACAd,EAAAc,GAAAlK,OAKA,IAAA,IAAAvD,EAAA6J,SAAA,CACAwD,EAAA,CACAK,YAAAP,EACAQ,YAAA3N,EAAA2N,YACAvT,WAAA+S,EAAA/S,WACAwT,UAAA5N,EAAA4N,WAAAvR,EAAAiG,aAAAtC,EAAA4N,UAAAhM,IAEAqL,EAAAxN,KAAA4N,GAGAH,EAAAzN,KAAA4N,SA3DA,IADA,IAAAC,EAAAtN,EAAA6N,WACAC,EAAA,EAAAA,EAAAR,EAAAjU,OAAAyU,IAAA,CACA,IAAAC,EAAAT,EAAAQ,GACAT,EAAA,CAAAW,UAAAD,GACAd,EAAAxN,KAAA4N,IAEA,IAAAU,EAAAR,QAOAQ,EAAAZ,EAAAU,WAAAE,EAAAnS,MACAyR,EAAAtU,MAAAgV,EAAAhV,MACAsU,EAAAG,SAAA,GAEAO,EAAAhV,MAAAgV,EAAAhV,MAAAoE,QAAAmP,qBAAA,SAAAlP,EAAAqQ,GAEA,OADAJ,EAAAG,SAAA/N,KAAAgO,GACAd,EAAAc,GAAAlK,SAZA8J,EAAAE,OAAAQ,EAAAR,OACAJ,EAAAc,aAAAF,EAAAnS,KAAA+Q,EAAAoB,EAAAR,QAAAhK,QAyDA3B,EAAAsM,oBAAAjB,EAGA,IAAA3U,EAAA,EAAAA,EAAA4U,EAAA7T,OAAAf,IACA,CAAA0H,EAAAkN,EAAA5U,GAAA,IACA6V,EAAA9R,EAAAyC,aAAA6N,EAAA3M,EAAA2N,aAAApK,MAAA,GACA,IAAAuK,EAAA,EAAAA,EAAAK,EAAA9U,OAAAyU,IACA9N,EAAA5F,WAAAgU,aAAAD,EAAAL,GAAA9N,EAAA0N,aAIA,OAAA9L,GAKAyM,WAAA,SAAAzM,EAAAoJ,EAAAsD,EAAApQ,EAAAqQ,EAAAC,GACA,IAAAzR,EAAAvB,KAAAe,KAAA2B,GACAqQ,IAAAA,EAAA,IAIA,IADA,IAAAE,EAAAjT,KAAAwB,UAAAD,GACAzE,EAAAmW,EAAApV,OAAA,EAAAf,GAAA,EAAAA,IACAyE,EAAA0R,EAAAnW,cAAAV,UACA6W,EAAAtO,OAAA7H,EAAA,GAIA,IAAA2E,EAAAC,OAAA7F,GAAAmB,MAAAG,UAAA,IAAA8V,EAAA,IAAApX,GAAAmB,MAAAE,YAAA,MAAA,KAEA,GAAA4V,EACA,IAAAI,EAAAxR,OAAA7F,GAAAmB,MAAAG,UAAA2V,EAAA,MAAAjX,GAAAmB,MAAAE,YAAA,MAAA,KAIA,GAFA4R,gBAAA,EAEA,YAAAiE,EACA,IAAAI,EAAA,GACAC,EAAAJ,EAAAnV,OAGA,IAAAwV,EAAAjN,EAAAzE,QAAA,uBAAA,SAAA2R,EAAAzQ,GAqBA,GAnBAA,EAAAqN,mBAAArN,GAGAiQ,IACAjQ,EAAAA,EAAAlB,QAAAuR,EAAA,SAAArR,GACA,MAAA,WAAAA,EAAA,GAAA0R,MAAA,MAWA1Q,GAHAA,EAAAsN,qBAJAtN,EAAAA,EAAAlB,QAAAF,EAAA,SAAAG,EAAAC,GACA,MAAA,eAAAA,MAMAC,MAAA,SAAAK,KAAA,KAAAL,MAAA,QAAAK,KAAA,KAAAL,MAAA,QAAAK,KAAA,KAGA,YAAA4Q,EAAA,CACAlQ,EAAAA,EAAAsM,OAGA,IAAAqE,EAAAL,EAAA5M,QAAA1D,GAEA,OAAA,IAAA2Q,GACAL,EAAAlP,KAAApB,GACAmQ,EAAA/O,KAAA,CAAA+E,KAAA+H,WAAAhJ,KAAA,CAAAlF,EAAA2M,EAAAjO,KACA,QAAA4R,EAAAtV,OAAAuV,EAAA,IAEA,QAAAI,EAAAJ,GAKA,OAFAvQ,EAAA,GAAA0M,UAAAhT,MAAAyD,KAAAe,KAAA,CAAAgS,EAAAlQ,EAAA2M,EAAAjO,KAEAI,QAAA,kCAAA,SAAA7E,GACA,MAAA,KAAAA,EAAA2W,WAAA,GAAA,QASA,MALA,YAAAV,IAEAI,EAAAF,EAAA1R,EAAAiO,EAAAsD,EAAApQ,EAAAqQ,EAAAtR,EAAAyR,EAAA9M,EAAA,KACAT,WAAA,WAAA0N,EAAA,MAAA,IAEAA,GAIAK,iBAAA,SAAAtN,EAAAoJ,EAAAsD,EAAApQ,EAAAqQ,GAEA,IAAAtD,EAAA,CACA5R,OAAA,EACA8V,KAAA,SAAAC,EAAAC,GACA,GAAA,OAAAD,EACA,OAAAf,WAAA9W,KAAA8X,GAAArE,EAAAsD,EAAApQ,GAGA,IAAAoR,EAAA,oBACAC,GAAA,EAGA,IAAA,IAAArX,KAAAkX,EACA,iBAAAA,EAAAlX,GACAkX,EAAAlX,GAAA,IAAAkX,EAAAlX,GAAAoF,MAAA,KAAAK,KAAA,OAAA,IACA,iBAAAyR,EAAAlX,KACAkX,EAAAlX,GAAAsO,KAAAC,UAAA2I,EAAAlX,KAEAqX,IACAD,GAAA,KAEAA,GAAApX,EAAA,MAAAkX,EAAAlX,GACAqX,GAAA,EAWA,OAPA,IAAAA,IACAD,EAAAA,EAAAnS,QAAA,OAAA,KAGAmS,EAAAA,EAAAhS,MAAA,KAAAK,KAAA,SAAAL,MAAA,KAAAK,KAAA,SAGA0Q,WAAA9W,KAAA8X,GAAArE,EAAAsD,EAAApQ,EAAAoR,EAAA,OAKA1N,EAAAA,EAAAzE,QAAA,oBAAA,SAAAC,EAAAC,GACA,OAAA,IAAA,UAAAwJ,KAAAxJ,GACA,gBAAAA,EAAAC,MAAA,KAAAK,KAAA,OAAA,KAEAsN,EAAAA,EAAA5R,QAAAgE,EACA4N,EAAA5R,SACA,0CAAA4R,EAAA5R,OAAA,GAAA,QAGA,IAAA0D,EAAAvB,KAAAe,KAAA2B,GAGAjB,EAAAC,OAAA7F,GAAAmB,MAAAG,UAAA,IAAA6C,KAAAwB,UAAAD,GAAA,IAAA1F,GAAAmB,MAAAE,YAAA,MAAA,KAEA,GAAA4V,EACA,IAAAI,EAAAxR,OAAA7F,GAAAmB,MAAAG,UAAA2V,EAAA,MAAAjX,GAAAmB,MAAAE,YAAA,MAAA,KAEA,GAAA,YAAA6V,EACA,IAAAC,EAAA,GAEA,IAAAK,EAAAjN,EAAAzE,QAAA,mBAAA,SAAA2R,EAAAzQ,GAEAA,EAAAqN,mBAAArN,GAGAiQ,IACAjQ,EAAAA,EAAAlB,QAAAuR,EAAA,SAAArR,GACA,MAAA,WAAAA,EAAA,GAAA0R,MAAA,MAUA1Q,GAHAA,EAAAsN,qBAHAtN,EAAAA,EAAAlB,QAAAF,EAAA,SAAAG,EAAAC,GACA,MAAA,eAAAA,MAKAC,MAAA,SAAAK,KAAA,KAAAL,MAAA,QAAAK,KAAA,KAAAL,MAAA,QAAAK,KAAA,KASA,IAPA,IACA6R,GAAA,EAGAC,EAAA,wCACAC,EAAA,GACAC,EAAA,KACA,QAAAA,EAAAF,EAAApE,KAAAhN,KACAqR,EAAAjQ,KAAAkQ,EAAA,IAMA,GAHA,OAAA3E,GAAA,YAAAuD,GACAmB,EAAAjQ,KAAA,WAEA,IAAAiQ,EAAArW,OAAA,CAEA,IADA,IAAAuW,EAAA,GACAtX,EAAA,EAAAA,EAAAoX,EAAArW,OAAAf,IACAoX,EAAApX,GAAA6E,QAAA,kBAAA,IAAAG,MAAA,KAAArD,QAAA,SAAA4V,GACAD,EAAAnQ,KAAAoQ,KAGAH,EAAAE,EACA,IAAAtX,EAAA,EAAAA,EAAAoX,EAAArW,OAAAf,IACAoX,EAAApX,IAAA,YAAAoX,EAAApX,GAAA,kBAAAoX,EAAApX,GAAA,cAIAoX,EADA,IAAAA,EAAArW,OACA,OACA,IAAAqW,EAAA/R,KAAA,KAAA,IACAU,EAAAA,EAAAf,MAAA,aAAAK,KAAA+R,QAEArR,EAAAA,EAAAf,MAAA,aAAAK,KAAA,QAGA,GAAA,KADA6R,EAAAnR,EAAAf,MAAA,SACAjE,OAAA,CACAmW,EAAAA,EAAA,GAAAlS,MAAA,KAGA,IAAAwS,EAAA,SAAArF,GAEA,IAAAoB,EAAA,KAIA,KADApB,GAJAA,EAAAA,EAAA9M,KAAA,MAIAL,MAAA,UAAA,IAAAmN,EAAA1I,QAAA,KAAA,IAAA,QACA1I,OACAwS,EAAApB,EAAA7M,MACA6M,EAAAA,EAAA,GAYA,IAPA,IAAAxS,EAAA,CACA2U,IAHAnC,EAAAA,EAAAnN,MAAA,aAGAI,QACAqO,OAAA,GACAC,UAAAH,GAIAvT,EAAA,EAAAA,EAAAmS,EAAApR,OAAAf,IAAA,CACA,IAAAuX,EAAApF,EAAAnS,GAAAgF,MAAA,KACArF,EAAA8T,OAAAtM,KAAA,CAAAoQ,EAAAnS,QAAAmS,EAAAlS,KAAA,OAGA,OAAA1F,GAGA,GAAA,YAAAsW,EAAA,CACA,IAAAwB,EAAAP,EAAA9R,QACAqO,EAAA+D,EAAAN,GACAzD,EAAAvH,KAAAgI,OACAT,EAAAxI,KAAA,CAAA,KAAAyH,EAAAjO,EAAAkO,GAGAc,EAAAa,GAAA,CAAAmD,EAAApF,OAAAoB,EAAAa,GAAAjC,QACA,OAAAoB,EAAAC,YACAD,EAAAC,UAAAD,EAAAC,UAAArB,QAEA,IAAArS,EAAA,EAAAA,EAAAyT,EAAAA,OAAA1S,OAAAf,IACAyT,EAAAA,OAAAzT,GAAA,GAAAyT,EAAAA,OAAAzT,GAAA,GAAAqS,OACAoB,EAAAA,OAAAzT,GAAA,GAAAyT,EAAAA,OAAAzT,GAAA,GAAAqS,OAKA,OADA6D,EAAA/O,KAAAsM,GACA,SAAAyC,EAAAnV,OAAA,GAGA,IAAAyS,EAAA,CAAA0D,EAAA,GAAAxE,EAAAjO,EAAAkO,GAGA,OAAAF,UAAAhT,MAAAyD,KAAAe,KAAAuP,IAKA0D,EAAA9R,QACAoO,EAAA,GAAA0D,EAAA7R,KAAA,KAEAoN,UAAAhT,MAAAyD,KAAAe,KAAAuP,KAPA0D,EAAA9R,QACAkO,aAAAkE,EAAAN,GAAA1D,IAaA,GAAA,KADA0D,EAAAnR,EAAAf,MAAA,UACAjE,OAAA,CACAyS,EAAA,CAAA0D,EAAA,GAAAxE,EAAAjO,EAAAkO,GAEA,MAAA,YAAAsD,GACAC,EAAA/O,KAAA,CAAA+E,KAAAiI,SAAAlJ,KAAAuI,IACA,SAAA0C,EAAAnV,OAAA,IAGAgF,EAAA0M,UAAAhT,MAAAyD,KAAAe,KAAAuP,GAGA,MAAA,KAGA,MAAA,YAAAyC,GAEAxR,EAAAwR,EAAAtR,EAAAyR,EAAA9M,EAAA,KACAT,WAAA,WAAA0N,EAAA,MAAA,GACA,CAAAA,EAAAL,IAGAK,GAGAmB,UAAA,SAAAlD,EAAA9L,EAAAsN,EAAArS,EAAAgU,EAAAC,EAAA9V,EAAA0H,GACA,IAAAqO,EAAA,CAAA,MAAA,OAAA,SAAA,QAAA,UAAA,OAAA,OAAA,WAAA,cAAA,eACAC,GAAA,EACAC,EAAA,SAAAjX,EAAA+K,EAAAmM,EAAAC,GACA,GAAA,UAAApM,EAAA,CACA,GAAAnD,EAAAmL,SACA,IAAAqE,EAAA,CAAApW,EAAAqW,kBAAArW,EAAAsW,kBAQA,OANAtW,EAAA4H,YAAA,QAEAhB,EAAAmL,WACA/R,EAAAsL,YAAA8K,EAAA,IACApW,EAAAsL,YAAA8K,EAAA,MAMA,GAAA,gBAAArM,EAAA,CAaA,IAAAnJ,EAAAQ,KAAAe,KAAAN,GAAA,MAAAgU,GAEA,GAAA,SAAA9L,GAAA,SAAAA,EAAA,CACA,IAAAnE,EAAA5F,EAAAuW,SAMA,GALA3P,EAAAmL,WACA/S,IACAkX,KAGA,SAAAnM,EAAA,CACA,IAAAyM,EAAA5P,EAAA3H,OAAAD,EAAAmX,EACAK,EAAA,IACAL,GAAAK,GAGA,IAAAC,EAAApZ,SAAA6J,cAAA,OACA,IAAAhJ,EAAA,EAAAA,EAAAiY,EAAAjY,IACAuY,EAAAnL,YAAA1F,EAAA5G,IAGA,IAAAmG,EAAAS,EAAAsQ,IAAA,KAGA,IAAAhY,EAAA,EAAAA,EAAAiY,EAAAjY,IACA8B,EAAAgU,aAAAyC,EAAAJ,kBAAAlR,QAEA/H,IAAAwD,GAAAA,EAAA8V,QACA9V,EAAA8V,OACA,OAAAvR,GAAAA,EAAA2M,wBACA9R,EAAAsW,iBAAA,QAEA,OAGA,GAAAtX,GAAAkX,EAAA,CACA,IAAAjS,EAAAjF,EACAA,EAAAkX,EACAA,EAAAjS,EAUA,OAPA2B,EAAA5G,GAAA2X,sBAAA,WAAA/Q,EAAAsQ,IACAtQ,EAAAsQ,GAAAS,sBAAA,WAAA/Q,EAAA5G,cAEA5B,IAAAwD,GAAAA,EAAA8V,SACA9V,EAAA8V,OAAA9Q,EAAAsQ,GAAA,QACAtV,EAAA8V,OAAA9Q,EAAA5G,GAAA,UAKA,GAAA4H,EAAAmL,SAAA,CACA,IAAA6C,EAAAhO,EAAAmL,SAAAjK,WAEAsD,aAAA4K,GACAA,EAAAjP,WAAA,WACAH,EAAAmL,SAAA6E,SAAA,IACA,UAEAhC,EAAA5U,EAAAuW,SAGA,GAAA,WAAAxM,EAAA,CAwBA,GAAA,WAAAA,EAAA,CAEAmM,EADAA,EACAA,EAAA,EAAAtP,EAAA3H,OAAAiX,EACAlX,EAAAkX,EAFAlX,EAAA,EAIA,IAAAd,EAAAc,EAAAd,EAAAgY,EAAAhY,IAAA,CACA,IAAA2Y,EAAAjC,EAAA1W,GACA,QAAAd,IAAAyZ,QAAAzZ,IAAAwJ,EAAA1I,GACA,MAEA+F,EAAAwO,eAAAC,EAAA9L,EAAA1I,IAEA,GAAA0I,EAAAmL,SAEA,YADA8E,EAAA7W,WAAA8W,aAAA7S,EAAA4S,GAIA7W,EAAA8W,aAAA7S,EAAA4S,QACAzZ,IAAAwD,GAAAA,EAAA8V,QACA9V,EAAA8V,OAAAzS,EAAA,YAKA,QAAA7G,KADA0C,EAAA8G,EAAA5H,IACA,CAEAiF,EAAAwO,eAAAC,EAAA5S,GAAA,IACAiX,EAAAnC,EAAA5V,GAGA,GAAA,gBAAA+K,EAAA,CACA/K,EAAA,IAAAA,EAAAA,EAAA,EAAA4V,EAAA3V,OAAA,EAGA,KAFA8X,EAAAnC,EAAA5V,IAQA,YALA4H,EAAAmL,UAAA,IAAAnL,EAAA3H,SACAe,EAAA2W,sBAAA,aAAA1S,QACA7G,IAAAwD,GAAAA,EAAAoW,QACApW,EAAAoW,OAAA/S,KAKA8S,EAAAJ,sBAAA,WAAA1S,QACA7G,IAAAwD,GAAAA,EAAAoW,QACApW,EAAAoW,OAAA/S,GAGA2C,EAAAmL,UAAAnL,EAAAmL,SAAA6E,eAEA,GAAA,WAAA7M,EAAA,CACA,GAAAnD,EAAAmL,UAAA,IAAAnL,EAAA3H,OAOA,OANA2V,EAAA5V,EAAA,GAAA2X,sBAAA,WAAA1S,QACA7G,IAAAwD,GAAAA,EAAAoW,QACApW,EAAAoW,OAAA/S,QAGA2C,EAAAmL,SAAA6E,UAIA5W,EAAAsL,YAAArH,QACA7G,IAAAwD,GAAAA,EAAAoW,QACApW,EAAAoW,OAAA/S,OAEA,iBAAA8F,IACA6K,EAAA,GAAA+B,sBAAA,cAAA1S,QACA7G,IAAAwD,GAAAA,EAAAoW,QACApW,EAAAoW,OAAA/S,GAGA2C,EAAAmL,UAAAnL,EAAAmL,SAAA6E,iBA9FA,GAAAhC,EAAA5V,GAAA,CACA,IAAAiY,GAAA,EACAC,EAAA,WACAD,IACAA,GAAA,EAEArC,EAAA5V,GAAAU,SACAkH,EAAAmL,UAAAnL,EAAAmL,SAAA6E,iBAGAxZ,IAAAwD,GAAAA,EAAAlB,OAEAkB,EAAAlB,OAAAkV,EAAA5V,GAAAkY,IACAnQ,WAAAmQ,EAAA,KAIAA,SA5FA,CAEA,IADA,IAAApX,EAAA8G,EACA1I,EAAAc,EAAAd,EAAA4B,EAAAb,OAAAf,IACA0I,EAAAmL,SACA/R,EAAAgU,aAAAvB,eAAAC,EAAA5S,EAAA5B,IAAA8B,EAAAsW,kBAEAtW,EAAAsL,YAAAmH,eAAAC,EAAA5S,EAAA5B,KAGA0I,EAAAmL,UAAAnL,EAAAmL,SAAA6E,YAoKAO,EAAA,CAAA,GACAC,EAAA,CAAA,EAAA,GACAC,EAAA,SAAAC,EAAA9V,GACAhD,OAAAE,eAAA4Y,EAAA9V,EAAA,CACAzB,YAAA,EACAP,cAAA,EACAb,MAAA,WACA,IAAAsF,OAAA7G,EACAma,EAAApa,KAAA8B,OAEA,GAAA,SAAAuC,EAAA,CAYA,GAAA,SAAAA,EAAA,CACA,IAAAtD,EAAAZ,UAAA,GACAka,EAAAla,UAAA,GACA,GAAAY,IAAAsZ,EAAA,OACAvB,EAAA/X,EAAA,OAAAsZ,GACAvT,EAAA9G,KAAAe,GAGA,OAFAf,KAAAe,GAAAf,KAAAqa,QACAra,KAAAqa,GAAAvT,GAIA,GAAA,aAAAzC,EAAA,CAEA,GAAAlE,UAAA,GAAA2B,QAAAsY,GAAA,IAAAA,EAAA,CACA,IAAAE,EAAAF,EACA3R,EAAAtI,UAAA,GAEA,IAAAY,EAAA,EAAAA,EAAAqZ,GACA3R,EAAA1H,KAAAf,KAAAe,GADAA,IAEAuZ,IAMA,GAAA,IAAAA,EAAA,CACA,GAAA7R,EAAA3G,SAAAsY,EAAA,OAIA,OAFAzJ,MAAA1O,UAAA2G,OAAApI,MAAAR,KAAA,CAAAoa,EAAA,GAAAtJ,OAAA3Q,UAAA,GAAAqX,MAAA4C,UACAtB,EAAAsB,EAAA,gBAWA,OANA,IAAAA,IACAzJ,MAAA1O,UAAA2G,OAAApI,MAAAR,KAAAga,GACAlB,EAAA,EAAA,UAEAnI,MAAA1O,UAAA2G,OAAApI,MAAAR,KAAAia,EAAAnJ,OAAA3Q,UAAA,KACA2Y,EAAA,EAAA,eACA9Y,KAGA,GAAA,WAAAqE,GAAA,IAAAlE,UAAA,SAAAF,IAAAE,UAAA,GAEA,OADA2Y,EAAA,EAAA,SACAnI,MAAA1O,UAAA2G,OAAApI,MAAAR,KAAAG,WAMA,GAHAwQ,MAAA1O,UAAAoC,KACAyC,EAAA6J,MAAA1O,UAAAoC,GAAA7D,MAAAR,KAAAG,YAEA,QAAAkE,EACAyU,EAAA9Y,KAAA8B,OAAA,eAEA,GAAA,SAAAuC,EACAyU,EAAAsB,EAAA,eAEA,GAAA,UAAA/V,EACAyU,EAAA,EAAA,eAEA,GAAA,WAAAzU,EAAA,CACA,GAAA,IAAAlE,UAAA,SAAAF,IAAAE,UAAA,GACA,OAAA2G,EAGA,IAAAyT,EAAApa,UAAA,GACAoa,EAAA,IAAAA,EAAAH,EAAAG,GAEA,IAAAC,EAAAra,UAAA,GACAqa,GAAA,IAAAA,IAAAA,EAAAxa,KAAA8B,QAEA,IAAAf,EAAAyZ,EAAA,EAAAzZ,GAAA,EAAAA,IACA+X,EAAAyB,EAAAxZ,EAAA,UAGA,GAAAZ,UAAA2B,QAAA,EAAA,CACA0Y,EAAAra,UAAA2B,OAAA,EACA,IAAAf,EAAA,EAAAA,EAAAyZ,EAAAzZ,IACA+X,EAAAyB,EAAAxZ,EAAA,oBAKA,YAAAsD,EACAyU,EAAA,EAAA,gBAEA,gBAAAzU,EACAyU,EAAA3Y,UAAA,GAAA,SAAAA,UAAA,IAEA,gBAAAkE,GACAyU,EAAA,EAAA,eAEA,OAAAhS,EAvGA,IAAA2T,EAAAta,UAAA,GACAyB,EAAAzB,UAAA,GACA,GAAAsa,IAAA7Y,EAAA,CACA,IAAAoX,EAAA7Y,UAAA,IAAA,EACA2Y,EAAA2B,EAAA,OAAA7Y,EAAAoX,GAEA,IAAAlS,EAAA6J,MAAA1O,UAAA2G,OAAApI,MAAAR,KAAA,CAAAya,EAAAzB,IACArI,MAAA1O,UAAA2G,OAAApI,MAAAR,KAAA,CAAA4B,EAAA,GAAAkP,OAAAhK,SAqGAjE,GAAAA,EAAA6G,UAAAgR,SAAA,4BACAjR,EAAAmL,SACAnL,EAAAmL,SAAA,GAGAnL,EAAAmL,SAAAxN,IAAAmD,EAEA1H,EAAA8W,aAAApE,EAAAlL,KAAAxH,EAAAuW,SAAA,IACAtZ,GAAAkB,SAAA2Z,eAAAC,OAAAnR,EAAAkP,EAAA9V,GACA0S,EAAAlL,KAAA9H,UAGA,IAAA,IAAAxB,EAAA,EAAAA,EAAA6X,EAAA9W,OAAAf,IACAmZ,EAAAzQ,EAAAmP,EAAA7X,IAGAM,OAAAE,eAAAkI,EAAA,aAAA,CACA7G,YAAA,EACAP,cAAA,EACAb,MAAA,SAAAK,GACA,GAAA4H,EAAAmL,SAAA,CACA,GAAA/S,EAAA4H,EAAAmL,SAAAC,UACA,OAAApL,EAAAmL,SAAAxN,IAAAgS,SAAAvX,GAEAA,GAAA4H,EAAAmL,SAAAC,UACA,IAAAgG,EAAAhY,EAAAiY,kBAAA,EACA,OAAAjZ,GAAAgZ,EACAhY,EAAAuW,SAAAvX,EAAA,GAEA4H,EAAAmL,SAAAxN,IAAAgS,SAAAvX,EAAAgZ,EAAApR,EAAAmL,SAAAC,WAGA,OAAAhS,EAAAuW,SAAAvX,OAKAkZ,WAAA,SAAA1W,EAAAkR,EAAAhQ,EAAAoT,EAAA9V,GACA,IAAAmD,EAAAT,EAAAQ,MAAA,QACAgR,EAAA/Q,EAAA,GAEA,IAAA/B,KAAAe,KAAAX,GACA,OAAAmC,QAAAC,MAAA,0CAAApC,EAAA,kBAAAkR,GAEA,IAAAyF,EAAA/W,KAAAe,KAAAX,GAAA2B,EAAA,IACA,QAAA/F,IAAA+a,GAWA,GANAzF,EAAAmB,aAAA,eAAA1Q,EAAA,IAGAgN,kBAAAuC,EACAA,EAAAtR,KAAAgX,kBAAA1F,EAAAwB,EAAA1S,GAEA,IAAA2B,EAAAlE,OAAA,CACA,IAAAyI,EAAArK,SAAA6J,cAAA,OACA+K,EAAA7Q,KAAAe,KAAAX,GAEA,IAAA,IAAAtD,KAAAia,EACAzQ,EAAA4D,YAAAmH,eAAAC,EAAAyF,EAAAja,KA0BA,QAtBAd,IAAA6U,EAAAoG,cACAC,uBAAArG,QAEA7U,IAAA6U,EAAAoG,aAAAlV,EAAA,MACA8O,EAAAoG,aAAAlV,EAAA,IAAA,MAEA3E,OAAAE,eAAAuT,EAAA9O,EAAA,GAAA,CACApD,YAAA,EACAP,cAAA,EACAwO,IAAA,WACA,OAAAmK,GAEAI,IAAA,SAAA9C,GACA,OAAA,IAAAA,EAAAxW,OACAkZ,EAAApS,OAAA,GACAoS,EAAAK,SAAA/C,MAIAG,UAAAlD,EAAAyF,EAAAjE,EAAA1S,EAAA2B,EAAA,GAAA2S,EAAA9V,EAAA0H,QAGAtK,IAAA+a,EAAApG,SAAA,CACA,IAAAwE,EAAA7O,EAAA6O,SACA,IAAArY,EAAA,EAAAA,EAAAqY,EAAAtX,OAAAf,IACA8B,EAAAsL,YAAAiL,EAAArY,IAGAwJ,EAAAhI,SACAgI,EAAA,YAhDA/D,QAAAC,MAAA,wBAAAT,EAAA,GAAA,0CAAA3B,EAAA,MAqDAiX,mBAAA,SAAAhW,GACArB,KAAAe,KAAAM,EAAA7D,OAAA,aAAA6D,EAAA7D,OAAA,eAAA6D,EAAA7D,OAAAD,OAGA+Z,UAAA,SAAA5C,GAGA,IAFA,IAAA7R,EAAAhC,EAAA,kBAAA6T,GAEA5X,EAAA,EAAAA,EAAA+F,EAAAhF,OAAAf,IAAA,CACA,IAAAyD,EAAAsC,EAAA/F,GACA0D,EAAA3E,GAAAkE,WAAAU,UAAAF,GACA,IAAAC,EAAA,OAEA,IAAA+W,EAAAhX,EAAAI,aAAA,YAGA,QAAA3E,WAAAgE,KAAAe,KAAAP,GAAA+W,GAEA,YADAhV,QAAAC,MAAA,uCAAAhC,EAAA,OAAA+W,EAAA,MAIAhX,EAAA,cAAAgX,EACAhX,EAAA,YAAAC,EACAD,EAAAkS,aAAA,aAAA,IACAlS,EAAAiX,gBAAA,YAGA,UAAAjX,EAAA4G,SAAA,aAAA5G,EAAA4G,QACAtG,EAAAmC,GAAAzC,EAAA,QAAA8W,oBAGAxW,EAAAmC,GAAAzC,EAAA,SAAA8W,sBAIAI,oBAAA,EAiEA,SAAAC,eAAAnX,GAEA,IADA,IAAAsC,EAAAhC,EAAA,kBAAAN,GACAzD,EAAA,EAAAA,EAAA+F,EAAAhF,OAAAf,IACA6a,mBAAA9U,EAAA/F,GAAA6D,aAAA,mBAGA,IAAAJ,EAAAW,aAAA,kBAGAyW,mBAAApX,EAAAI,aAAA,kBAzEAX,KAAA4C,KAAA,SAAA8R,EAAAkD,GACA,IAAAH,oBAAA/C,EAAA,CACA+C,oBAAA,EACA9R,WAAA,WACA8R,oBAAA,GACA,IAEA/C,IAAAA,EAAAzY,SAAA6G,MACA9C,KAAA6X,gBAAAD,GAAA5X,KAAAoO,gBAAAsG,GAAAkD,GACAN,UAAA5C,GAGA,IADA,IAAA7R,EAAAhC,EAAA,mBAAA6T,GACA5X,EAAA,EAAAA,EAAA+F,EAAAhF,OAAAf,IAAA,CACA,IAAAyD,EAAAsC,EAAA/F,GACAyD,EAAAoD,cAKA,QAHA3H,IAAA4b,GACArX,EAAAkF,UAAAnH,OAAA,iBAEAiC,EAAA3B,WAAA6G,UAAAgR,SAAA,mBAAA,CACA,IAAAqB,EAAA7b,SAAA6J,cAAAvF,EAAA4G,SACA2Q,EAAArS,UAAAC,IAAA,kBACA,IAAAqS,EAAAD,EAAAvG,WAAA,GAEAuG,EAAArS,UAAAC,IAAA,WAEAnF,EAAA3B,WAAA2W,sBAAA,aAAAuC,GAEAC,EAAAtS,UAAAC,IAAA,SAEAnF,EAAA3B,WAAA2W,sBAAA,YAAAwC,GAGA,IAAAC,EAAAlc,OAAAmc,iBAAA1X,GACA2X,EAAAC,WAAAH,EAAA,WAAAG,WAAAH,EAAA,cACAA,EAAA,KAGAE,EAAAE,KAAAC,KAAA9X,EAAA+X,aAAAJ,GAGA,IAAAK,EAAAhY,EAAAiY,mBACA,OAAAD,GAAAhY,IAAAgY,IACAA,GAAA,GAEA,IAAAE,EAAAlY,EAAAmQ,uBACA,OAAA+H,GAAAlY,IAAAkY,IACAA,GAAA,GAEA,IAAAnX,EAAAf,EAAAI,aAAA,kBACAJ,EAAAiX,gBAAA,kBACA,IAAAzX,EAAAlE,GAAAkE,WAAAU,UAAAF,GAGA,GAAA,2BAAA8K,KAAA9K,EAAAwP,WACA,KAAA,yCAEA+G,WAAA/W,EAAAQ,EAAAe,EAAAoT,EAAAnU,EAAA3B,YACA2B,EAAAjC,YAkBAzC,GAAA,WACA,IAAA6c,EAAA,SAAAC,GACA,IAAAxR,EAAAwR,EAAAC,SACA,SAAAzR,GAAA,UAAAA,GAAA,aAAAA,GAEAuQ,eAAAiB,IAGA,GAAA,mBAAAE,kBAAAA,iBAAA7a,UAAA8a,QAAA,CACA,IAAAC,EAAA,SAAAC,GACAA,EAAAC,aAAAxa,QAAAia,IAGA,IAAAG,iBAAA,SAAAK,GACApK,gBACAoK,EAAAza,QAAAsa,KAGAD,QAAA7c,SAAA6G,KAAA,CAAAqW,WAAA,EAAAC,SAAA,SAGAnd,SAAA6G,KAAAC,iBAAA,iBAAA,SAAA1B,GACAyN,gBACA4J,EAAArX,EAAA7D,YAKA,IAAAma,mBAAA,SAAAlX,GACA,IAAA+D,EAAAxE,KAAAe,KAAAN,GACA,QAAAzE,IAAAwI,EAAA,CAGA,IAAA6U,EAAA7U,EAAAyS,aACApU,EAAA,KACA,IAAA,IAAAnG,KAAA2c,EAGA,UAFAA,EAAA3c,QAEAV,IAAAwI,EAAA9H,IAAA,OAAA8H,EAAA9H,GAAA,CAGA,GAAA8H,EAAA9H,GAAAP,cAAAoH,QACAiB,EAAA9H,GAAAP,cAAAmd,QACA9U,EAAA9H,GAAAP,cAAAod,aAGA,CAAA,GAAA/U,EAAA9H,GAAAP,cAAAuQ,MAWA,SAVAlI,EAAA9H,GAAAiU,WACAnM,EAAA9H,GAAAiU,SAAA6I,iBACAhV,EAAA9H,GAAAiU,UAIA9N,EAAA2B,EAAA9H,GAAAiI,OAAA,iBACAH,EAAA9H,GACA8H,EAAA9H,GAAAmG,EAIA,QAAA7G,IAAAoB,OAAAqc,yBAAAjV,EAAA9H,GAAA,CAIAmG,EAAA2B,EAAA9H,UACA8H,EAAA9H,GACA8H,EAAA9H,GAAAmG,MAIA6W,UAAA,eACAC,WAAA,SAAApZ,EAAAsQ,EAAA4D,EAAAmF,GACArZ,aAAAsZ,OACAtZ,EAAAA,EAAA,IAGAwO,kBAAAxO,EAGAA,EAAAkS,aAAA,cAAAgC,GACA,IAAAhU,EAAA5E,GAAAkE,WAAAU,UAAAF,GAGA,GAAA,SAAAqZ,IAAAA,EAGA,IAFA,IAAAE,EAAA,GAEAhd,EAAA,EAAAA,EAAAyD,EAAA8R,WAAAxU,OAAAf,IAAA,CACA,IAAAid,EAAAxZ,EAAA8R,WAAAvV,GAAAsD,MAGA,IAAAsZ,UAAArO,KAAA9K,EAAAI,aAAAoZ,MAGAD,EAAAC,GAAAxZ,EAAAI,aAAAoZ,GACAxZ,EAAAiX,gBAAAuC,IAKA,GAAA,SAAAH,IAAAA,EACA,IAAAI,EAAAzZ,EAAAgR,WAAA,GAAA0I,UAEA,IAAAC,EAAA,WACA,GAAA,SAAAN,IAAAA,EACA,IAAA,IAAAxZ,KAAA0Z,EACA,IAAA,IAAAA,EAAA1Z,GAAAmG,QAAAkO,GAAA,CAGA,IAAA5R,EAAAgQ,WAAAiH,EAAA1Z,GAAAyQ,GAAA,EAAApQ,GACA,UAAAL,EACAG,EAAAhD,MAAAsF,EAEAtC,EAAAkS,aAAArS,EAAAyC,GACA,MAIA,GAAA,SAAA+W,IAAAA,EAAA,CACA/W,EAAA6Q,iBAAAsG,EAAAnJ,GAAA,EAAApQ,GACAoC,EAAAgQ,WAAAhQ,EAAAgO,GAAA,EAAApQ,GACAF,EAAAiG,YAAA,GACAjG,EAAAkG,mBAAA,aAAA5D,KAIA,QAAA7G,IAAA6U,EAAA4D,GACA,KAAA,aAAAA,EAAA,uBAAAhU,EAAA,UAMA,QAHAzE,IAAA6U,EAAAoG,cACAC,uBAAArG,QAEA7U,IAAA6U,EAAAoG,aAAAxC,GAAA,CAKA,IAAA0F,EAAAtJ,EAAA4D,GACArX,OAAAE,eAAAuT,EAAA4D,EAAA,CACA9V,YAAA,EACAP,cAAA,EACAwO,IAAA,WACA,OAAAuN,GAEAhD,IAAA,SAAA9C,GACA8F,EAAA9F,EAGA,IADA,IAAA7P,EAAAqM,EAAAoG,aAAAxC,GACA3X,EAAA,EAAAA,EAAA0H,EAAA3G,OAAAf,IACA0H,EAAA1H,KAGA,OAAAqd,KAIAtJ,EAAAoG,aAAAxC,GAAA,CAAAyF,QAvBArJ,EAAAoG,aAAAxC,GAAAxQ,KAAAiW,IA0BAla,KAAAoa,YAAA,SAAA7Z,EAAAqZ,GACA,IAAAnZ,EAAA5E,GAAAkE,WAAAU,UAAAF,GACAC,EAAAR,KAAAe,KAAAN,GACA,IAAAD,EAAA,OAAA+B,QAAAC,MAAA,aAAA/B,EAAA,gCAAAF,GAEA,IAAA6F,EAAA7F,EAAAwP,UAGA,GAAA,2BAAA1E,KAAAjF,GACA7D,QAAAC,MAAA,8CADA,CAKA,SAAAoX,IACAxT,EAAAA,EAAAzE,QAAApB,EAAA0Z,UAAA,KAMA,IAJA,IAAAI,EAAA,kBAGApH,EAAAjT,KAAAwB,UAAAhB,GACA1D,EAAAmW,EAAApV,OAAA,EAAAf,GAAA,EAAAA,IACA0D,EAAAyS,EAAAnW,cAAAV,UACA6W,EAAAtO,OAAA7H,EAAA,GAKA,IAFA,IACAqX,EADA1S,EAAAC,OAAA7F,GAAAmB,MAAAG,UAAA,IAAA8V,EAAA,IAAApX,GAAAmB,MAAAE,YAAA,MAAA,KACAod,EAAA,KACA,QAAAnG,EAAAkG,EAAAxK,KAAAzJ,KACA,KAAA,QAAAkU,EAAA7Y,EAAAoO,KAAAsE,EAAA,MACAwF,WAAApZ,EAAAC,EAAA8Z,EAAA,GAAAV,KAKA5Z,KAAAgX,kBAAA,SAAAtC,EAAA5B,EAAA1S,GACA,IAAAma,EAAA7F,EAAA3E,UAGAwK,EAAAA,EAAAzY,MAAA,IAAAgR,GAAA3Q,KAAA,WAIA,IAAAgR,GADAoH,EAAA7G,iBAAA6G,EAAA,KAAAzH,EAAA1S,EAAA,YACA,GACAma,EAAA1H,WAAA0H,EAAA,GAAA,KAAAzH,EAAA1S,EAAA,UAAA+S,GAGAoH,EAAA1Z,EAAAyC,aAAAiX,GAAA,GACA,IAAA5B,EAAA3Y,KAAAoO,gBAAAmM,GAAA,GAAAC,UACAC,EAAA,GAEA,SAAAC,EAAAC,GAGA,IAFA,IAAAb,EAAAa,EAAAtI,WACAnH,EAAA,GACAoH,EAAA,EAAAA,EAAAwH,EAAAjc,OAAAyU,IAAA,CACA,IAAAjQ,EAAAyX,EAAAxH,GAAA/U,MAAAuE,MAAA,QACA,GAAA,IAAAO,EAAAxE,OAAA,CACA,IAAAnB,EAAA,CACAqV,QAAA,EACA3R,KAAA0Z,EAAAxH,GAAAlS,MAGA,KAAAiC,EAAA,IAAA,IAAAA,EAAAxE,SACAnB,EAAAqV,OAAAuH,OAAAjX,EAAA,MAAA,GAEA6I,EAAAjH,KAAAvH,IAGA,OAAAwO,EAGA,IAAAuF,EAAAiK,EAAAH,GACA,IAAA9J,EAAA5S,QACA4c,EAAAxW,KAAA,CACAoK,SAAA,EACAuD,QAAA,CAAA,GACAS,WAAA5B,IAGA,IAAA,IAAA3T,EAAA,EAAAA,EAAA6b,EAAA9a,OAAAf,IAAA,CACA,IAAA+F,EAAA,CACAwL,SAAAsK,EAAA7b,GAAAuR,UAGA,GAAA,IAAAxL,EAAAwL,SACAxL,EAAAwP,WAAAqI,EAAA/B,EAAA7b,IACA+F,EAAA+O,QAAA/Q,EAAAgG,YAAA8R,EAAA7b,IAAA,QAGA,GAAA,IAAA+F,EAAAwL,SAAA,CACA,IAAA4L,EAAAtB,EAAA7b,GAAA0J,YAQA,GAPA3D,EAAAkP,QAAA,EACAlP,EAAA+X,QAAA,GAEAX,EAAAtY,QAAA,kBAAA,SAAAC,EAAAqQ,GACApP,EAAA+X,QAAA3W,KAAAgO,KAGA,IAAApP,EAAA+X,QAAA/c,OAAA,CACAgF,EAAA+X,QAAA/X,EAAA+X,QAAAC,IAAAvB,QAEAW,EAAAA,EAAAnY,MAAA,iBACA,IAAA,IAAAwQ,EAAA,EAAAA,EAAA2H,EAAApc,OAAAyU,IACA2H,EAAA3H,GAAAtD,gBAAAiL,EAAA3H,IAAAnD,OAEAwJ,EAAA7b,GAAA0J,YAAAyT,EAAA/X,QAEA,IAAApB,EAAA6X,EAAA7b,GAAA8B,WACAmF,EAAA4U,EAAA7b,GAAAiH,YAEA+W,EAAA,KACA,IAAAjY,EAAA+X,QAAA/c,QAAA,IAAA8a,EAAA7b,GAAA0J,YAAA3I,SACAid,EAAAja,EAAAgG,YAAA8R,EAAA7b,IAAA,IAGA,IAAAie,EAAA,GACA,IAAAzI,EAAA,EAAAA,EAAAzP,EAAA+X,QAAA/c,OAAAyU,IAAA,CACA,IAAA0I,EAAA/e,SAAAgf,cAAA,IASA,GARAna,EAAA8R,aAAAoI,EAAAjX,GACAgX,EAAA9W,KAAA,CACAoK,UAAA,EACA8D,YAAAtP,EAAA+X,QAAAtI,GACAF,UAAA0I,EACAlJ,QAAA/Q,EAAAgG,YAAAmU,GAAA,KAGAf,EAAA3H,GAAA,CACA,IAAA4I,EAAAjf,SAAAkf,eAAAlB,EAAA3H,IACAxR,EAAA8R,aAAAsI,EAAAnX,GAGAuO,EAAA,EAAAzP,EAAA+X,QAAA/c,SACAid,EAAAja,EAAAgG,YAAAqU,GAAA,KAOA,GADAT,EAAAA,EAAA5N,OAAAkO,GACA,KAAApC,EAAA7b,GAAA0J,YAAA,CACAmS,EAAA7b,GAAAwB,SACA,IAAAgU,EAAA,EAAAA,EAAAyI,EAAAld,OAAAyU,IAAA,CACA,IAAA9N,EAAAuW,EAAAzI,GAAAV,QACApN,EAAAA,EAAA3G,OAAA,KAEA,SAEA,IAAA,IAAA8a,EAAA7b,GAAA0J,YAAA4U,OAAA,cACA,SAEAvY,EAAA+O,QAAA/Q,EAAAgG,YAAA8R,EAAA7b,IAAA,GACA2d,EAAAxW,KAAApB,eAGAA,EAAA+X,QAGA,MAFAX,EAAAtB,EAAA7b,GAAA8B,WAAAqb,UAAAnY,MAAA,SAEA,IAAA,IAAAmY,EAAApc,SACAgF,EAAAkP,OAAAuH,OAAAW,EAAA,MAAA,GACApX,EAAA+O,QAAA/Q,EAAAgG,YAAA8R,EAAA7b,IAAA,GAIA2d,EAAAxW,KAAApB,GAGA,MAAA,CACAuD,KAAAmU,EACA3O,MAAAuH,EACA3B,UAAAiJ,IAIA,IAAAY,SAAA,CAAA,OAAA,OAAA,QAAA,OAAA,OAAA,SAAA,SAAA,UAiGA,SAAAnE,uBAAArG,QACA7U,IAAA6U,EAAAoG,cAIA7Z,OAAAE,eAAAuT,EAAA,eAAA,CACAzS,cAAA,EACAO,YAAA,EACAR,UAAA,EACAZ,MAAA,KAzGAyC,KAAAoO,gBAAA,SAAAsG,EAAA4G,GAIA,IAHA,IAAAjU,GAAAqN,GAAAzY,SAAA6G,MAAAuE,WAEAxE,EAAA,GACA/F,EAAAuK,EAAAxJ,OAAA,EAAAf,GAAA,EAAAA,IAAA,CACA,IAAA6d,EAAAtT,EAAAvK,GAEA,QAAAd,IAAAsf,IAAA,IAAAD,SAAA9U,QAAAoU,EAAA/B,UAGA,GAAA,IAAA+B,EAAAtM,SAAA,CACA,IAAAyL,EAAAa,EAAAtI,WAGA,GAAAyH,EAAA,gBAAAA,EAAA,mBAAAA,EAAA,gBAAA,SAEA,IAAA,IAAAxH,EAAA,EAAAA,EAAAwH,EAAAjc,OAAAyU,KACA,IAAAwH,EAAAxH,GAAA/U,MAAAgJ,QAAA,aACAvK,IAAAsf,GACAX,EAAAlI,aAAA,gBAAA,YACA5P,EAAAoB,KAAA0W,IAIA9X,EAAAA,EAAAgK,OAAA7M,KAAAoO,gBAAAuM,EAAAW,SAGA,GAAA,IAAAX,EAAAtM,SAAA,CAGA,GAFAsM,EAAAnU,YAAAmU,EAAAnU,YAEA,IAAAmU,EAAAnU,YAAA3I,OAAA,CACA8c,EAAArc,SACA,SAGA,IAAA,IAAAqc,EAAAY,UAAAhV,QAAA,MAAA,CACA,QAAAvK,IAAAsf,EAAA,CACAX,EAAA/b,WAAA6T,aAAA,gBAAA,IAGA,IAAAH,EAAA,EAAAA,EAAAzP,EAAAhF,OAAAyU,IACAzP,EAAAyP,GAAAkF,gBAAA,iBAGA3U,EAAAoB,KAAA0W,EAAA/b,YACA,MAGAiE,EAAAoB,KAAA0W,KAKA,OAAA9X,GAGA7C,KAAA6X,gBAAA,SAAAc,EAAAf,GACA,IAAA,IAAAtF,EAAA,EAAAA,EAAAqG,EAAA9a,OAAAyU,IAAA,CAEA,IAAAX,EAAA5C,kBAAA4J,EAAArG,GAEA9R,EAAA3E,GAAAkE,WAAAU,UAAAkR,GAMA,GALAA,EAAA6F,gBAAA,sBAEAxb,IAAA4b,GACAjG,EAAAlM,UAAAnH,OAAA,kBAEA0B,KAAAe,KAAAP,GACA,OAAA+B,QAAAC,MAAA,0CAAAhC,EAAA,kBAAAmR,GAEA3R,KAAAe,KAAAP,GAGA,GAAA,2BAAA6K,KAAAsG,EAAAsI,WAGA,OAFA1X,QAAAC,MAAA,+CACAD,QAAAuN,IAAAf,kBAAAwC,WAAA,IAIAI,EAAAzQ,aAAA,YACAlB,KAAAoa,YAAAzI,EAAAA,EAAAhR,aAAA,YAGA,IAAAkC,EAAA6Q,iBAAA/B,EAAAsI,UAAAja,KAAAe,KAAAP,IAAA,EAAAA,GACAmR,EAAAsI,UAAApH,WAAAhQ,EAAA7C,KAAAe,KAAAP,IAAA,EAAAA,GAGA,IADA,IAAAsZ,EAAAnB,EAAArG,GAAAD,WACAvV,EAAA,EAAAA,EAAAgd,EAAAjc,OAAAf,IACA,IAAA,IAAAgd,EAAAhd,GAAAS,MAAAgJ,QAAA,MAAA,CACA,IAAAwT,EAAAD,EAAAhd,GACAid,EAAAxc,MAAAsV,WAAAkH,EAAAxc,MAAAyC,KAAAe,KAAAP,IAAA,EAAAA,MAh+CA,GCXA3E,GAAA+S,OAAA,IAAA,WACA,IAAA5O,EAAAjE,KACAiE,EAAAwb,SAAA,EACAxb,EAAAyb,SAAA,EACAzb,EAAA0b,yBAAA,EACA1b,EAAA2b,YAAA,GACA,IAAAC,GAAA,EAEAC,EAAA,GAyBA,SAAAC,EAAA3X,GAEA4X,EACAA,GAAA,GAIAC,GAAA,EACAhc,EAAAic,KAAAngB,OAAA4D,SAAAwc,WA9BAlc,EAAA4C,KAAA,SAAA8R,GACA,IAAA7Y,GAAAQ,OAAAsG,aACA,OAAA9G,GAAA,WACAmE,EAAA4C,SAKA,IADA,IAAAC,EAAAhC,EAAA,6BAAA6T,GACA5X,EAAA,EAAAA,EAAA+F,EAAAhF,OAAAf,IAIA,GAHA+F,EAAA/F,GAAA6D,aAAA,kBACA9E,GAAAkE,WAAAoB,IAAA0B,EAAA/F,GAAA6D,aAAA,kBAEAkC,EAAA/F,GAAA6D,aAAA,WAAA,CACA,IAAAP,EAAAyC,EAAA/F,GAAA6D,aAAA,WACAwb,EAAA/b,GAIAwb,GAAA,EACAC,EAAA/f,OAAA4D,SAAAwc,UAcAlc,EAAAoc,OAAA,SAAA3Q,QACAzP,IAAAyP,IAAAA,GAAA,GACAzL,EAAAyb,UAAAhQ,IACAzL,EAAAyb,QAAAhQ,GAEA,IAAAA,GAEA5K,EAAAmC,GAAA/G,SAAA6G,KAAA,QAAA,UAAA9C,EAAAqc,MAGAvgB,OAAAiH,iBAAA,WAAA+Y,GAAA,KAGAjb,EAAAyD,IAAArI,SAAA6G,KAAA,QAAA,UAAA9C,EAAAqc,MACAvgB,OAAA4I,oBAAA,WAAAoX,GAAA,MAIA,IAAArD,EAAA,GAEAzY,EAAAyY,OAAA,SAAArY,EAAAC,EAAAzC,GACA6a,EAAArY,KACAqY,EAAArY,GAAA,SAEApE,IAAA4B,GACA,IAAA6a,EAAArY,GAAAmG,QAAAlG,IACAoY,EAAArY,GAAA6D,KAAA5D,GAGAoY,EAAArY,GAAAxC,GAAAyC,GAGA,IAAAkY,EAAA,GAEAvY,EAAAuY,MAAA,SAAAnY,EAAAC,EAAAzC,GACA2a,EAAAnY,KACAmY,EAAAnY,GAAA,SAEApE,IAAA4B,GACA,IAAA2a,EAAAnY,GAAAmG,QAAAlG,IACAkY,EAAAnY,GAAA6D,KAAA5D,GAGAkY,EAAAnY,GAAAxC,GAAAyC,GAGA,IAAAoC,EAAA,SAAAC,GAOA,OANA7G,GAAA2E,MAAAO,KAAA2B,KACA7G,GAAA2E,MAAAO,KAAA2B,GAAA,IAEA7G,GAAA2E,MAAAO,KAAA2B,IACA7G,GAAAkE,WAAAoB,IAAAuB,GAEA7G,GAAA2E,MAAAO,KAAA2B,IAIAyZ,EAAA,SAAA/b,GAIA,IAHA,IAAAJ,EAAA2b,YAAApV,QAAAnG,IACAJ,EAAA2b,YAAA1X,KAAA7D,GAEAqY,EAAArY,GACA,IAAA,IAAAtD,EAAA,EAAAA,EAAA2b,EAAArY,GAAAvC,OAAAf,IACA2b,EAAArY,GAAAtD,GAAA2F,IAiBA6Z,EAAA,CACAd,QAAA,GACAe,OAAA,GACAC,QAAA,GACAha,MAAA,IAEAxC,EAAAgD,GAAA,SAAAmB,EAAA9D,IACA,IAAAic,EAAAnY,GAAAoC,QAAAlG,IACAic,EAAAnY,GAAAF,KAAA5D,IAGAL,EAAAyc,cAAA,GASAzc,EAAAqc,KAAA,SAAAhY,GACA,IAAA,IAAArE,EAAAyb,QAAA,CAEA,IAAAiB,EAAArY,EAAA7G,OACA,GAAAkf,EAAA3O,MAEA4O,QAAAC,YAAAF,EAAAxb,aAAA,oBAAA,CAIA,IAAA2b,EAAAH,EAAA3O,KAAApM,QAAA7F,OAAA4D,SAAAC,OAAA,IACA,IAAA,IAAAkd,EAAAtW,QAAA,MAIA,OADAlC,EAAA/B,kBACAtC,EAAAic,KAAAY,MAGA,IAAAC,GAAA,EACAd,GAAA,EACAD,GAAA,EACA/b,EAAAic,KAAA,SAAAY,EAAA9U,EAAAhG,GAEAA,EADAA,EACAA,EAAAmH,cADA,MAGAnB,IAAAA,EAAA,IAEA,IAAA,IAAAjL,EAAA,EAAAA,EAAAwf,EAAA,QAAAze,OAAAf,IACA,GAAAwf,EAAA,QAAAxf,GAAA+f,GAAA,OAEA/gB,OAAA4D,SAAAwc,SAsHA,OArHAN,GAAA,EAEAkB,GAAAA,EAAA5Q,QACA4Q,EAAAjc,EAAAsM,KAAA,CACAtF,IAAA/L,OAAA4D,SAAAC,OAAAkd,EACA9a,OAAAA,EACAgG,KAAA3K,OAAAC,OAAA0K,EAAA,CACAgV,UAAA,cAEAxQ,QAAA,SAAAxE,GACA,IAAA6T,EAAA,EACA,EAGAkB,GAAA,EAGA,IACAN,EADA9a,OAAA,iCAAA7F,GAAAmB,MAAAE,YAAA,MACA2S,KAAA9H,GACA,GAAAyU,GAAA,IAAAA,EAAA3e,SACA2e,EAAAA,EAAA,GAAA1a,MAAA,SAAAK,KAAA,WAGA3F,cAFAggB,EAAAxR,KAAAY,MAAA4Q,KAGA,IAAA,IAAA1f,EAAA,EAAAA,EAAAwf,EAAA,QAAAze,OAAAf,IACA,GAAAwf,EAAA,QAAAxf,GAAA0f,GAAA,OAKA,IAAAQ,GAAA,EACAC,EAAA,SAAAzY,GACAwY,EAAAnc,EAAA2C,QAAAgB,GAGA,IAAA0Y,EAAArc,EAAA2C,QAAA,YAAAwZ,IAjGA,SAAA5c,GAIA,IAHA,IAAAJ,EAAA2b,YAAApV,QAAAnG,IACAJ,EAAA2b,YAAAhX,OAAA3E,EAAA2b,YAAApV,QAAAnG,GAAA,GAEAmY,EAAAnY,GACA,IAAA,IAAAtD,EAAA,EAAAA,EAAAyb,EAAAnY,GAAAvC,OAAAf,IACAyb,EAAAnY,GAAAtD,GAAA2F,GA4FA0a,CAAAD,EAAAA,EAAAvc,aAAA,WAAA,KAGA6b,GAAAA,EAAAY,QACAvc,EAAA,gBAAAoZ,UAAAuC,EAAAY,OAEA/a,GAAA,GAGAA,GAAA,EACA,IAAA,IAAAgb,KAAArd,EAAAyc,cAAA,CACA,IAAA,IAAAZ,EAAAtV,QAAA8W,GACA,IAAA,IAAAC,KAAAtd,EAAAyc,cAAAY,GACA,IAAA,IAAAxB,EAAAtV,QAAA8W,GAAA,CACAJ,EAAAjd,EAAAyc,cAAAY,GAAAC,IACA,MAIA,GAAAjb,EAAA,MAIA,IAAAA,IAEAxG,GAAA+S,OAAA6N,cAAA,aACAQ,EAAAphB,GAAA+S,OAAA6N,cAAA,cAEApa,GACA,IAAAvF,EAAA,EAAAA,EAAAwf,EAAA,MAAAze,OAAAf,IACAwf,EAAA,MAAAxf,GAAA,4BAAAugB,EAAA,OAAAC,EAAA,oBAMAN,IAAAA,EAAA/gB,SAAA6G,MACA9C,EAAA0b,yBACA1b,EAAA0b,wBAAA7N,IAAA,UAAA,QAGAmP,EAAA/C,UAAAlS,EAGAlM,GAAA2E,MAAAoC,KAAAoa,GAGA,IAAAna,EAAAhC,EAAA,YAAAmc,GACA,IAAAlgB,EAAA,EAAAA,EAAA+F,EAAAhF,OAAAf,IACAqf,EAAAtZ,EAAA/F,GAAA6D,aAAA,YAGAX,EAAA0b,yBACA1b,EAAA0b,wBAAA7N,IAAA,UAAA,IAgCA,SAAAgO,EAAAgB,EAAA9U,GACA,IAAA,IAAAjL,EAAA,EAAAA,EAAAwf,EAAA,OAAAze,OAAAf,IACAwf,EAAA,OAAAxf,GAAA+e,EAAAgB,EAAA9U,GAhCAwV,CAAA1B,EAAAgB,EAAAG,GAEApB,GAAA,GACA,EAEAC,EAAAgB,EACAd,GAAA,IAEAvZ,MAAA,SAAA2H,EAAApC,GAEA,GADAgU,GAAA,GACA5R,EAAAqT,QAAA,CAEAV,GAAA,EACA,IAAA,IAAAhgB,EAAA,EAAAA,EAAAwf,EAAA,MAAAze,OAAAf,IACAwf,EAAA,MAAAxf,GAAAqN,EAAAsB,OAAA1D,GAIAjM,OAAA6gB,QAAAc,WAIAzB,GACAlgB,OAAA6gB,QAAAC,UAAA,KAAA,GAAAC,GAEAb,GAAA,GACA,ICpSAngB,GAAAkB,SAAA2Z,eAAA,IAAA,WACA,IAAA1W,EAAAjE,KACA2hB,GAAA,EACAC,GAAA,EA8WA,SAAAC,EAAAC,EAAAC,EAAAtY,EAAA5G,GACA,IAAAiE,EAAAuV,KAAAL,MAAA/X,EAAA+d,aAAA,GACA,GAAAF,EAAA7d,EAAA+d,aAQA,OAPAD,EAAAhG,SAAA,EACAgG,EAAA/F,MAAAnZ,EAAAuW,SAAA,EAAAnV,EAAA+d,aAAA,aAEA/hB,IAAA8hB,EAAA/F,MACA+F,EAAA/F,MAAA+F,EAAA/F,MAAAiG,UACAF,EAAA/F,MAAAnZ,EAAAsW,iBAAA8I,UAAA,UAIAhiB,IAAA4C,EAAAuW,SAAAtS,EAAA,KACAib,EAAAhG,QAAAlZ,EAAAuW,SAAAtS,EAAA,GAAAmb,gBAEAhiB,IAAAwJ,EAAAmL,SAAAsN,gBAAAJ,GAAArY,EAAA3H,OAAA2H,EAAAmL,SAAAsN,eACAH,EAAA/F,MAAAvS,EAAAmL,SAAAuN,QAAAnG,MAAAiG,UAAA,EAAAxY,EAAAmL,SAAAwN,cAEAL,EAAA/F,MAAAnZ,EAAAuW,SAAAnV,EAAA+d,aAAA,GAAAC,UAEApf,EAAAsC,aAAA,yBACA4c,EAAA/F,OAAAnZ,EAAA+B,aAAA,uBACAmd,EAAAhG,SAAAlZ,EAAA+B,aAAA,yBAoEA,SAAAyd,EAAAxgB,EAAA4H,EAAAuY,EAAAnf,EAAAyf,EAAAC,GACA,IAAAC,EAAA/Y,EAAAmL,SACA6N,EAAA,EAOA,GALA5gB,GAAA4H,EAAA3H,OAAA0gB,EAAAN,iBACAO,GAAAT,EACAngB,EAAA4H,EAAA3H,OAAA0gB,EAAAN,kBAGArgB,EAAA2gB,EAAA3N,WAAA,GAAAhT,GAAA4H,EAAA3H,QAAA,CAKA,GAHA8f,GAAA,EAGA,IAAAY,EAAA3N,WAAAhT,EAAAmgB,EAAAA,EAAA,GACAQ,EAAA3N,UAAAmN,EAAA,EAAAngB,GACA2gB,EAAA3N,UAAAmN,EAAAngB,EACAygB,EAAAI,UAAA7f,EAAAuW,SAAAvX,EAAA2gB,EAAA3N,UAAA,GAAAoN,cAGA,CAQA,IAPA,IAAAnb,EAAA,KACAiV,EAAAyG,EAAAL,QAAApG,QACAC,EAAAwG,EAAAL,QAAAnG,MACA2G,EAAAH,EAAAG,QAGA7gB,EAAAe,EAAAiY,kBAAA,EACA/Z,EAAA,EAAAA,EAAAe,EAAAf,IACA+F,EAAAiV,EAAAU,mBAEA,OAAAkG,EAAA3G,OACAwG,EAAApb,IAAAoS,sBAAA,YAAA1S,GAEA/F,IAAAe,EAAA,IACA6gB,EAAA3G,MAAAlV,IAEA6b,EAAA3G,MAAAxC,sBAAA,cAAA1S,GAGAjF,GAAAmgB,EACAngB,EAAA4H,EAAA3H,OAAA0gB,EAAAN,iBACArgB,GAAAmgB,IAGAS,EAAAT,EAAAngB,EACA2gB,EAAA3N,UAAAhT,EAAA,GAGA,IAAA+gB,EAAAJ,EAAAN,gBAAAzY,EAAA3H,OAAA0gB,EAAAN,eAAAzY,EAAA3H,OAGA,IAAAf,EAAA,EAAAA,EAAA6hB,QAEA3iB,KADA6G,EAAA0b,EAAApb,IAAAgS,SAAAvX,IADAd,IAIAib,EAAAxC,sBAAA,cAAA1S,GAEA0b,EAAA3N,UAAAhT,EAEA8gB,EAAA3G,MAAAwG,EAAApb,IAAAgS,SAAAvX,IAAA,KACA8gB,EAAA5G,QAAA4G,EAAA3G,MAAA2G,EAAA3G,MAAArH,uBAAA,KAEA4N,GACAA,EAAA1gB,GAEAggB,EAAAhgB,EAAA2gB,EAAAT,SAAAtY,EAAA5G,QAIA5C,KAFA6G,EAAAjE,EAAAuW,SAAA4I,EAAAS,EAAA,MAGAH,EAAAI,UAAA5b,EAAAmb,UAAAK,EAAAL,WAGAL,GAAA,GAGA,SAAAiB,EAAAhgB,GACAA,EAAAyG,MAAA+P,SAAA,SACAzP,WAAA,WACA/G,EAAAyG,MAAA+P,SAAA,IACA,IAGA,SAAAyJ,EAAAhV,GACA,IAAAmO,EAAAlc,OAAAmc,iBAAApO,GACAiV,EAAAC,SAAA/G,EAAA,WAAA+G,SAAA/G,EAAA,cACA,OAAAnO,EAAAyO,aAAAwG,GAAA,EA+BA,SAAAtJ,EAAAwJ,EAAAxZ,EAAAuY,EAAAnf,EAAAyf,EAAAY,EAAAX,GACA,IAAAT,EAAArY,EAAAmL,SAAAC,UACAsO,EAAA,EAGA,GAAAF,EAAA,CACA,IAAAliB,GAAA,EACAe,EAAA2H,EAAAmL,SAAAsN,eAEA,GACAnhB,UACAA,EAAAe,GAAAe,EAAAuW,SAAArY,GAAAkhB,UAAAK,EAAAI,YAEAZ,GAAA/gB,GACA,IAAA+gB,GAAA,GAEAqB,EAAAb,EAAAI,UAAA7f,EAAAuW,SAAArY,GAAAkhB,UAIA,GAAAgB,GAAApgB,EAAAiY,kBAAA,EAAArR,EAAAmL,SAAAsN,eAAA,CACAzY,EAAAmL,SAAAC,UAAApL,EAAA3H,OACA,IAAAshB,EAAAtB,EACAmB,IACAG,EAAAtB,GAAAE,EAAAF,EAAAA,EAAAE,GAEAK,EAAAe,EACA3Z,EACAuY,EACAnf,EACAyf,EACAC,GAGAD,EAAAI,WAAAS,EAGAZ,GACAA,EAAAT,GAEAoB,GACAA,IAEArB,EAAAC,EAAArY,EAAAmL,SAAAmN,SAAAtY,EAAA5G,GAtmBAoB,EAAA+d,aAAA,EAEA/d,EAAA2W,OAAA,SAAAnR,EAAAkP,EAAA9V,GACA8e,KAqpBA,WACA,IAAArY,EAAApJ,SAAAmjB,eAAA,aAEA/Z,KACAA,EAAApJ,SAAA6J,cAAA,UACAmB,GAAA,YACAhL,SAAA+R,KAAA9D,YAAA7E,IAGAA,EAAAga,MAAAC,WACA,4LAWAja,EAAAga,MAAAE,SAAA1hB,QAzqBA2hB,GACA9B,GAAA,GAGAlY,EAAAmL,SAAAjK,SAAA,WACA,OAshBA,SAAAlB,EAAA5G,GAKA,IAJA,IAAA4U,EAAA,GACA3Q,OAAA7G,EAEA6B,EAAA2H,EAAAmL,SAAAC,UACA9T,EAAA,EAAAA,EAAAe,QAEA7B,KADA6G,EAAA2C,EAAAmL,SAAAxN,IAAAgS,SAAArY,IADAA,IAGA0W,EAAAvP,KAAApB,GAGAhF,EAAAe,EAAAiY,kBAAA,EACA,IAAA,IAAA/Z,EAAA,EAAAA,GAAAe,QAEA7B,KADA6G,EAAAjE,EAAAuW,SAAArY,IADAA,IAGA0W,EAAAvP,KAAApB,GAGAhF,EAAA2H,EAAA3H,OAAAA,EAAA2H,EAAAmL,SAAAC,UACA,IAAA,IAAA9T,EAAA,EAAAA,EAAAe,QAEA7B,KADA6G,EAAA2C,EAAAmL,SAAAxN,IAAAgS,SAAA3P,EAAAmL,SAAAC,UAAA9T,IADAA,IAGA0W,EAAAvP,KAAApB,GAGA,OAAA2Q,EA/iBAiM,CAAAja,EAAA5G,IAGA4G,EAAAmL,SAAAuN,QAAA,CACApG,QAAAlZ,EAAA6E,cAAA,2BACAsU,MAAAnZ,EAAA6E,cAAA,0BAGA+B,EAAAmL,SAAAmN,SAAA,CACAhG,SAAA,EACAC,MAAA,GAGAvS,EAAAmL,SAAA+N,QAAA,CACA5G,QAAA,KACAC,MAAA,MAGAvS,EAAAmL,SAAA+D,WAAA9V,EACA4G,EAAAmL,SAAAC,UAAA,EAEApL,EAAAmL,SAAAwN,aACA3Y,EAAAmL,SAAAuN,QAAAnG,MAAAiG,UACAxY,EAAAmL,SAAAuN,QAAApG,QAAAkG,UAEA,IAAAK,EAAA,KACA7Y,EAAAmL,SAAA6I,QAAA,WACA3Y,EAAAyD,IAAA+Z,EAAA,UACAxd,EAAAyD,IAAA1F,EAAA,qBACA4G,EAAAmL,SAAAxN,IAAA8W,UAAA,GAymBA,SAAArb,GACA,IAAA,IAAA9B,EAAA4iB,EAAA7hB,OAAA,EAAAf,GAAA,EAAAA,IACA4iB,EAAA5iB,GAAAyD,UAAA3B,GACA8gB,EAAA/a,OAAA7H,EAAA,GA3mBA6iB,CAAA/gB,UACA4G,EAAAmL,UAGAnL,EAAAmL,SAAAiP,cAAA,WACApa,EAAAmL,SAAAkP,cAAAzH,KAAAL,MAAAsG,EAAAyB,aAAAta,EAAAmL,SAAAwN,cACA3Y,EAAAmL,SAAAsN,eAAAzY,EAAAmL,SAAAkP,cAAA,EAAA7f,EAAA+d,cAGApY,WAAA,WACA0Y,EAAAzf,EAGA,IADA,IAAAf,EAAAe,EAAA+B,aAAA,wBAAA,EACA7D,EAAA,EAAAA,EAAAe,EAAAf,IACAuhB,EAAAA,EAAA1a,cAGA6B,EAAAmL,SAAAiP,gBAEAhhB,EAAA6G,UAAAgR,SAAA,mBAQA,SAAAjR,EAAAkP,EAAA9V,EAAAyf,GACA,IAAAE,EAAA/Y,EAAAmL,SACAmH,EAAAyG,EAAAL,QAAApG,QACAC,EAAAwG,EAAAL,QAAAnG,MACA2G,EAAAH,EAAAG,QACAA,EAAA3G,MAAAwG,EAAApb,IAAA8R,kBAEAsJ,EAAAH,SAAA,SAAAxgB,GACAwgB,EAAAxgB,EAAA4H,EAAAxF,EAAA+d,aAAAnf,EAAAyf,IAGAE,EAAA/I,QAAA,SAAAwJ,GACAxJ,EAAAwJ,EAAAxZ,EAAAxF,EAAA+d,aAAAnf,EAAAyf,IAIA0B,IAEAxB,EAAAsB,cAAAjhB,EAAAiY,kBAAA,EACA0H,EAAAN,eAAAM,EAAAsB,cAAA,EAAA7f,EAAA+d,aAEA,IAAA,IAAAjhB,EAAA,EAAAA,EAAAkD,EAAA+d,aAAAjhB,IAAA,CACA,IAAA+F,EAAA6b,EAAA3G,MACA,GAAA,OAAAlV,EAAA,MAEA6b,EAAA3G,MAAAlV,EAAA2V,mBACAT,EAAAxC,sBAAA,cAAA1S,GAEA0b,EAAA3N,UAAA,EAEA,IAAAoP,EAAA,EACAC,EAAA,EAqDA,SAAAF,IAGA,IADA,IAAAliB,EAAA0gB,EAAAN,gBAAArf,EAAAiY,kBAAA,GACA/Z,EAAA,EAAAA,EAAAe,GAMA,QAJAgF,EADA,OAAA6b,EAAA5G,QACAyG,EAAApb,IAAA8R,kBAEAyJ,EAAA5G,QAAAU,oBAJA1b,IAOA4hB,EAAA3G,MAAAlV,EAAA2V,mBAEAT,EAAAxC,sBAAA,cAAA1S,GAiDA,IAAAib,EAAAS,EAAAT,SACAF,EAAA,EAAAE,EAAAtY,EAAA5G,GAEA,IAAAshB,GAAA,EAsBArf,EAAAmC,GAAAqb,EAAA,SArBA,WACA,GAAA6B,GAAAvC,EAAA,OACAuC,GAAA,EAEA7B,EAAAI,UAAAX,EAAAhG,UAzHA,WAKA,IAJA,IAAAjV,EAAA,KACAsd,GAAA,EAGArjB,EAAA,EAAAA,EAAAkD,EAAA+d,cAMA,QAJAlb,EADA,OAAA6b,EAAA3G,MACAwG,EAAApb,IAAA+R,iBAEAwJ,EAAA3G,MAAArH,wBAJA5T,IAOA4hB,EAAA5G,QAAAjV,EAAA6N,uBACA6N,EAAA3N,YAEAkH,EAAAvC,sBAAA,WAAA1S,GAEAmd,EAAA,IACAA,GAAAnB,EAAAhc,IAEA0b,EAAA3N,UAAA5Q,EAAA+d,eAAAoC,IACArjB,EAAA,EACAqjB,GAAA,EACAtd,EAAA,OAIAmd,EAAA,GAAA,OAAAnd,KACAmd,EAAA,GAIA,IAFA,IAAAniB,EAAAe,EAAAiY,kBAAA,EAAArR,EAAAmL,SAAAsN,eAEAnhB,EAAA,EAAAA,EAAAe,EAAAf,IACA+F,EAAAkV,EAAArH,uBACAuP,GAAApB,EAAAhc,GAEA,OAAA6b,EAAA3G,MACAwG,EAAApb,IAAAoS,sBAAA,YAAA1S,GACA6b,EAAA3G,MAAAxC,sBAAA,cAAA1S,GAEA6b,EAAA3G,MAAAlV,EAGA,OAAA6b,EAAA3G,MACA2G,EAAA5G,QAAAyG,EAAApb,IAAA+R,iBAEAwJ,EAAA5G,QAAA4G,EAAA3G,MAAArH,uBAEAoH,EAAAzS,MAAA+a,OAAAJ,EAAA,KACAjI,EAAA1S,MAAA+a,OAAAH,EAAA,KA0EAI,GACAzC,EAAAW,EAAA3N,UAAAkN,EAAAtY,EAAA5G,IAIAyf,EAAAI,UAAAX,EAAA/F,SA5DA,WACA,IAAAlV,EAAA,KACAkd,IAEA,OAAArB,EAAA5G,UACA4G,EAAA5G,QAAA4G,EAAA3G,MAAArH,wBAGA,IAAA,IAAA5T,EAAA,EAAAA,EAAAkD,EAAA+d,cAEA,QADAlb,EAAA6b,EAAA3G,OADAjb,IAIA4hB,EAAA3G,MAAAlV,EAAA2V,mBACAT,EAAAxC,sBAAA,cAAA1S,GAEAod,EAAA,IACAA,GAAApB,EAAAhc,KAGAod,EAAA,GAAA,OAAApd,KACAod,EAAA,GAIA,IADA,IAAApiB,EAAAe,EAAAiY,kBAAA,EAAArR,EAAAmL,SAAAsN,eACAnhB,EAAA,EAAAA,EAAAe,EAAAf,IACA+F,EAAAiV,EAAAU,mBACAwH,GAAAnB,EAAAhc,GACA0b,EAAA3N,YAEA,OAAA8N,EAAA5G,QACAyG,EAAApb,IAAAoS,sBAAA,aAAA1S,GACA6b,EAAA5G,QAAAvC,sBAAA,WAAA1S,GAEA6b,EAAA5G,QAAAjV,EAGA,OAAA6b,EAAA5G,QACA4G,EAAA3G,MAAAwG,EAAApb,IAAA8R,kBAEAyJ,EAAA3G,MAAA2G,EAAA5G,QAAAU,mBAEAV,EAAAzS,MAAA+a,OAAAJ,EAAA,KACAjI,EAAA1S,MAAA+a,OAAAH,EAAA,KAoBAK,GACA1C,EAAAW,EAAA3N,UAAAkN,EAAAtY,EAAA5G,IAIAshB,GAAA,IAkYA,SAAAthB,EAAAY,IACA,IAAA+gB,IACAA,EAAA1R,YAAA,WAEA,IADA,IAAAhM,EAAA,KACA/F,EAAA4iB,EAAA7hB,OAAA,EAAAf,GAAA,EAAAA,KACA+F,EAAA6c,EAAA5iB,IAGAyD,QAAA4d,eAAAtb,EAAAud,QACAvd,EAAAtC,QAAAigB,cAAA3d,EAAA4d,QAIA,OAAA5d,EAAAtC,QAAAoD,cAKAd,EAAArD,WAJAkgB,EAAA/a,OAAA7H,EAAA,IAOA,IAAA4iB,EAAA7hB,SACA4Q,cAAA8R,GACAA,GAAA,IAEA,MAGAb,EAAAzb,KAAA,CACA1D,QAAA3B,EACAY,SAAAA,EACA4gB,OAAAxhB,EAAAuf,aACAsC,MAAA7hB,EAAA4hB,cA9ZAE,CAAA9hB,EAAA,WACAgf,EAAAW,EAAA3N,UAAAkN,EAAAtY,EAAA5G,KAnLA+hB,CAAAnb,EAAAkP,EAAA9V,EAAAyf,GAwLA,SAAA7Y,EAAAkP,EAAA9V,EAAAyf,GAOA,IANA,IAAAE,EAAA/Y,EAAAmL,SACAmH,EAAAyG,EAAAL,QAAApG,QACAC,EAAAwG,EAAAL,QAAAnG,MAGA4G,EAAAJ,EAAAN,gBAAAzY,EAAA3H,OAAA0gB,EAAAN,eAAAzY,EAAA3H,OACAf,EAAA,EAAAA,EAAA6hB,GACA,OAAAJ,EAAApb,IAAA8R,kBADAnY,IAIAib,EAAAxC,sBAAA,cAAAgJ,EAAApb,IAAA8R,mBAGA,SAAAqJ,EAAAT,GACA,GAAAA,GAAA7d,EAAA+d,aACAjG,EAAAzS,MAAA+a,QAAAvC,EAAA7d,EAAA+d,cAAAQ,EAAAJ,aAAA,KACApG,EAAA1S,MAAA+a,QAAA5a,EAAA3H,OAAA0gB,EAAAN,eAAAJ,GAAAU,EAAAJ,aAAA,SAEA,CACArG,EAAAzS,MAAA+a,OAAAvC,EAAAU,EAAAJ,aAAA,KACA,IAAApJ,EAAAvP,EAAA3H,OAAA0gB,EAAAN,eACAlG,EAAA1S,MAAA+a,QAAArL,GAAA,GAAAwJ,EAAAJ,aAAA,MAIA,IAAAL,EAAAS,EAAAT,SAEAQ,EAAA,GACAV,EAAA5d,EAAA+d,aAAAD,EAAAtY,EAAA5G,GACAkf,EAAAhG,SAAA,EAEAyG,EAAAqC,SAAA,SAAAhjB,GACA,OAAAA,EAAA2gB,EAAAJ,aAAArG,EAAAkG,WAGAO,EAAAG,QACA3G,MAAAwG,EAAApb,IAAA8R,kBACAsJ,EAAAH,SAAA,SAAAxgB,GACAwgB,EAAAxgB,EAAA4H,EAAAxF,EAAA+d,aAAAnf,EAAAyf,EAAAC,IAGAC,EAAA/I,QAAA,SAAAwJ,GACAxJ,EAAAwJ,EAAAxZ,EAAAxF,EAAA+d,aAAAnf,EAAAyf,EAAAY,EAAAX,IAGA,IAAA4B,GAAA,EACAW,GAAA,EACAC,GAAA,EACA,SAAA7B,IACA,GAAAiB,GAAAvC,GAAAU,EAAAI,WAAAX,EAAAhG,SAAAuG,EAAAI,WAAAX,EAAA/F,MAEA+I,IACA,IAAAzC,EAAAI,WAAAJ,EAAAI,YAAAJ,EAAAF,aAAAE,EAAAyB,eACAlB,EAAAP,GACAyC,GAAA,QALA,CAWA,IAAAjD,EAAAzF,KAAAL,MAAAsG,EAAAI,UAAAF,EAAAJ,cACAN,EAAAU,EAAAN,eAAAzY,EAAA3H,SACAggB,EAAArY,EAAA3H,OAAA0gB,EAAAN,gBAEA4C,IACAhD,EAAA,EAAA7d,EAAA+d,eACAF,GAAA7d,EAAA+d,cAGA+C,IACAlC,EAAAP,GACAyC,GAAA,GAEAD,GAAA,GAGAhD,EAAA7d,EAAA+d,eACAF,EAAA,EACAgD,GAAA,GAGAX,GAAA,EAEA,IAAAa,EAAAlD,EAAAU,EAAA3N,UACAiN,EAAAkD,GAAAvb,EAAA3H,SACAkjB,EAAAlD,EAAAkD,EAAAvb,EAAA3H,QAEA,IAAAkjB,GAMAxC,EAAA3N,UAAAiN,EAqDA,SAAAkD,EAAAvb,GACA,IAAA6P,EAAA7P,EAAAmL,SAAAxN,IACAub,EAAAlZ,EAAAmL,SAAA+N,QACAR,EAAA1Y,EAAAmL,SAAAuN,QAEA,GAAA6C,EAAA,EAAA,CAIA,IAHA,IAAAvc,EAAA,EAGA1H,EAAA,EAAAA,EAAAikB,EAAAjkB,IAEA0H,EADA,OAAAka,EAAA5G,QACAzC,EAAAJ,kBAEAyJ,EAAA5G,QAAAU,mBACA0F,EAAAnG,MAAAxC,sBAAA,cAAA/Q,GAIA,IAAA,IAAA1H,EAAAikB,EAAAjkB,EAAA,EAAAA,IACA,OAAA4hB,EAAA5G,SACA4G,EAAA5G,QAAAoG,EAAApG,QAAAU,mBACAnD,EAAAE,sBAAA,aAAAmJ,EAAA5G,WAGAtT,EAAA0Z,EAAApG,QAAAU,mBACAkG,EAAA5G,QAAAvC,sBAAA,WAAA/Q,GACAka,EAAA5G,QAAAtT,GAIAka,EAAA3G,MAAA2G,EAAA5G,QAAAU,wBAEA,GAAAuI,EAAA,EAAA,CACA,IAAAvc,EAAA,EACAuc,GAAAA,EAGA,IAAA,IAAAjkB,EAAA,EAAAA,EAAAikB,EAAAjkB,IAEA0H,EADA,OAAAka,EAAA3G,MACA1C,EAAAH,iBAEAwJ,EAAA3G,MAAArH,uBACAwN,EAAApG,QAAAvC,sBAAA,WAAA/Q,GAIA,IAAA,IAAA1H,EAAA,EAAAA,EAAAikB,EAAAjkB,IACA,OAAA4hB,EAAA3G,OACA2G,EAAA3G,MAAAmG,EAAAnG,MAAArH,uBACA2E,EAAAE,sBAAA,YAAAmJ,EAAA3G,SAIAvT,EAAA0Z,EAAAnG,MAAArH,uBACAgO,EAAA3G,MAAAxC,sBAAA,cAAA/Q,GACAka,EAAA3G,MAAAvT,GAIAka,EAAA5G,QAAA4G,EAAA3G,MAAArH,wBA3GAsQ,CAAAD,EAAAvb,GACA8Y,EAAAT,GACAD,EAAAC,EAAAC,EAAAtY,EAAA5G,GAGAshB,GAAA,GAdAA,GAAA,GAiBArf,EAAAmC,GAAAqb,EAAA,SAAAY,GAGAZ,IAAAzf,IAAA,IAAAqiB,UAAAC,UAAA3a,QAAA,WACA1F,EAAAmC,GAAApE,EAAA,YAAA,WACAkiB,GAAA,IAEAjgB,EAAAmC,GAAApE,EAAA,UAAA,WACAkiB,GAAA,KAzSAK,CAAA3b,EAAAkP,EAAA9V,EAAAyf,IACA,MA2iBA,IAAAqB,EAAA,GACAa,GAAA,GJhnBA1kB","file":"scarletsframe.min.js","sourcesContent":["(function(global, factory){\r\n  if(typeof exports === 'object' && typeof module !== 'undefined') module.exports = factory(global);\r\n  else global.sf = factory(global);\r\n}(typeof window !== \"undefined\" ? window : this, (function(window){'use strict';\r\nif(typeof document === undefined)\r\n\tdocument = window.document;\r\n// ===== Module Init =====\r\n\r\nvar sf = function(){\r\n\tif(arguments[0].constructor === Function){\r\n\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\t}\r\n};\r\n\r\nsf.internal = {};\r\nsf.regex = {\r\n\t// ToDo: Need help to skip escaped quote\r\n\tgetQuotes:/(['\"])[\\s\\S]*?[^\\\\]\\1/g,\r\n\tavoidQuotes:'(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)',\r\n\tstrictVar:'(?=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )'\r\n};\r\n\r\nfunction isEmptyObject(obj){\r\n\tfor(var key in obj){\r\n\t\treturn false;\r\n\t}\r\n\treturn true\r\n}\r\n\r\nfunction compareObject(obj1, obj2){\r\n\tif(!obj1 || !obj2)\r\n\t\treturn false;\r\n\r\n\tfor(var i in obj1){\r\n\t\tif(typeof obj1[i] !== 'object' && obj1[i] !== obj2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}","// ==== ES5 Polyfill ====\r\nif(typeof Object.assign != 'function'){\r\n  Object.defineProperty(Object, \"assign\", {\r\n    value: function assign(target, varArgs) {\r\n      'use strict';\r\n      if (target == null)\r\n        throw new TypeError('Cannot convert undefined or null to object');\r\n      var to = Object(target);\r\n      for (var index = 1; index < arguments.length; index++) {\r\n        var nextSource = arguments[index];\r\n        if (nextSource != null) {\r\n          for (var nextKey in nextSource) {\r\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey))\r\n              to[nextKey] = nextSource[nextKey];\r\n          }\r\n        }\r\n      }\r\n      return to;\r\n    },\r\n    writable: true,\r\n    configurable: true\r\n  });\r\n}\r\n\r\nif(Element.prototype.remove === undefined || CharacterData.prototype.remove === undefined || DocumentType.prototype.remove === undefined){\r\n  (function (arr) {\r\n    arr.forEach(function (item) {\r\n      if (item.hasOwnProperty('remove')) {\r\n        return;\r\n      }\r\n      Object.defineProperty(item, 'remove', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n        value: function remove() {\r\n          if (this.parentNode !== null)\r\n            this.parentNode.removeChild(this);\r\n        }\r\n      });\r\n    });\r\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\r\n}\r\n\r\nif(!Element.prototype.matches){\r\n  Element.prototype.matches = (Element.prototype).matchesSelector ||\r\n    (Element.prototype).mozMatchesSelector || (Element.prototype).msMatchesSelector ||\r\n    (Element.prototype).oMatchesSelector || (Element.prototype).webkitMatchesSelector ||\r\n    function (s) {\r\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n      i = matches.length;\r\n      while (--i >= 0 && matches.item(i) !== this){}\r\n      return i > -1;\r\n    };\r\n}\r\n\r\nif(!NodeList.prototype.forEach){\r\n    NodeList.prototype.forEach = function (callback, thisArg) {\r\n        thisArg = thisArg || window;\r\n        for (var i = 0; i < this.length; i++) {\r\n            callback.call(thisArg, this[i], i, this);\r\n        }\r\n    };\r\n}\r\n\r\nif(!window.location.origin){\r\n  window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');\r\n}","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tself.pending = {};\r\n\tself.active = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tself.pending[name] = func;\r\n\t}\r\n\r\n\tself.modelScope = function(element, func){\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = element.getAttribute('sf-bind-list');\r\n\t\tif(!bindedList){\r\n\t\t\tvar parentEl = $.parent(element, '[sf-bind-list]');\r\n\t\t\tif(parentEl !== null)\r\n\t\t\t\tbindedList = parentEl.getAttribute('sf-bind-list');\r\n\t\t}\r\n\t\telse var parentEl = element;\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(sf.model.root[model], -1);\r\n\t\t\telse return sf.model.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = $.prevAll(parentEl, '[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(sf.model.root[model][bindedList], bindedListIndex);\r\n\t\telse return sf.model.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.modelName = function(element){\r\n\t\tvar name = undefined;\r\n\t\tif(element.hasAttribute('sf-controller'))\r\n\t\t\tname = element.getAttribute('sf-controller');\r\n\t\telse\r\n\t\t\tname = $.parent(element, '[sf-controller]').getAttribute('sf-controller');\r\n\r\n\t\t// Initialize it first\r\n\t\tif(name !== undefined && !self.active[name])\r\n\t\t\tself.run(name);\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = e.target;\r\n\t\tvar script = element.getAttribute('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = $.parent(element, '[sf-click]');\r\n\t\t\tscript = element.getAttribute('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = $.parent(element, '[sf-controller]').getAttribute('sf-controller');\r\n\r\n\t\tif(!sf.model.root[model])\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar _modelScope = sf.model.root[model];\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(_modelScope);\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+modelKeys+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tscript = script.replace(scopeMask, function(full, matched){\r\n\t\t\treturn '_modelScope.'+matched;\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script[0];\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(e) {\r\n\t\t\tmethod = false;\r\n\t\t}\r\n\r\n\t\tif(!method){\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot call `'+method_+'`]\\n', element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript.shift();\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0){\r\n\t\t\t// Replace `this` to `element`\r\n\t\t\tscript = eval(('['+script+']').replace(/,this|\\[this/g, function(found){\r\n\t\t\t\treturn found[0] + 'element';\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif(!script)\r\n\t\t\tscript = [];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element, script);\r\n\t\t\te.preventDefault();\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', element, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tvar root_ = function(scope){\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.model.root[scope] = {};\r\n\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.controller.run(scope);\r\n\r\n\t\treturn sf.model.root[scope];\r\n\t}\r\n\r\n\tself.run = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.run(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(self.pending[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\r\n\t\t\tself.pending[name](sf.model.root[name], root_);\r\n\t\t\tself.active[name] = true;\r\n\t\t\tdelete self.pending[name];\r\n\t\t}\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], root_);\r\n\t}\r\n\r\n\tself.init = function(parent){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(name);\r\n\t\t\t});\r\n\r\n\t\tvar temp = $('[sf-controller]', parent || document.body);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tself.run(temp[i].getAttribute('sf-controller'));\r\n\t\t}\r\n\t}\r\n\r\n\t// Create listener for sf-click\r\n\tdocument.addEventListener('DOMContentLoaded', function(){\r\n\t\t$.on(document.body, 'click', '[sf-click]', listenSFClick);\r\n\t}, {capture:true, once:true});\r\n}","sf.dom = function(selector, context){\r\n\tif(selector[0] === '<') return sf.dom.parseElement(selector);\r\n\tif(selector.constructor !== String) return selector;\r\n\r\n\tif(context) return context.querySelectorAll(selector);\r\n\treturn document.querySelectorAll(selector);\r\n}\r\n\r\nvar $ = sf.dom; // Shortcut\r\n\r\n;(function(){\r\n\tvar self = sf.dom;\r\n\r\n\tself.findOne = function(selector, context){\r\n\t\tif(context !== undefined) return context.querySelector(selector);\r\n\t\treturn document.querySelector(selector);\r\n\t}\r\n\r\n\tself.parent = function(element, selector){\r\n\t\tif(element.closest) return element.closest(selector);\r\n\r\n\t\tdo {\r\n\t\t\tif(element.matches(selector) === true)\r\n\t\t\t\treturn element;\r\n\r\n\t\t\telement = element.parentElement;\r\n\t\t} while (element !== null);\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tself.prevAll = function(element, selector, isNext){\r\n\t\tvar result = [];\r\n\t\tvar findNodes = selector === null || selector.constructor !== String ? true : false;\r\n\r\n\t\t// Skip current element\r\n\t\telement = isNext ? element.nextSibling : element.previousSibling;\r\n\t\twhile (element !== null) {\r\n\t\t\tif(findNodes === false && element.matches(selector) === true)\r\n\t\t\t\tresult.push(element);\r\n\t\t\telse{\r\n\t\t\t\tif(element === selector)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tresult.push(element);\r\n\t\t\t}\r\n\r\n\t\t\tif(isNext)\r\n\t\t\t\telement = element.nextSibling;\r\n\t\t\telse\r\n\t\t\t\telement = element.previousSibling;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.nextAll = function(element, selector){\r\n\t\treturn self.prevAll(element, selector, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen to an event\r\n\t * @param  Node \t\t\telement \tparent element\r\n\t * @param  string \t\t\tevent   \tevent name\r\n\t * @param  function|string  selector    callback function or selector\r\n\t * @param  function\t\t\tcallback    callback function\r\n\t * @param  boolean\t\t\tonce    \tcall once\r\n\t * @return null\r\n\t */\r\n\tself.on = function(element, event, selector, callback, once){\r\n\t\tif(typeof element === 'string'){\r\n\t\t\telement = document;\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = event;\r\n\t\t\tevent = element;\r\n\t\t}\r\n\r\n\t\tif(typeof selector === 'function'){\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = null;\r\n\t\t}\r\n\r\n\t\tif(selector){\r\n\t\t\tvar tempCallback = callback;\r\n\t\t\tcallback = function(ev){\r\n\t\t\t\tif(self.parent(ev.target, selector) !== null)\r\n\t\t\t\t\ttempCallback(ev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcallback.selector = selector;\r\n\t\telement.addEventListener(event, callback, {capture:true, once:once === true});\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.once = function(element, event, selector, callback){\r\n\t\tself.on(element, event, selector, callback, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event listener\r\n\t * @param  Node \telement \tparent element\r\n\t * @param  string \tevent   \tevent name\r\n\t * @param  string  \tselector    selector\r\n\t * @return null\r\n\t */\r\n\tself.off = function(element, event, selector){\r\n\t\t// Remove all event\r\n\t\tif(event === undefined){\r\n\t\t\tvar events = getEventListeners(element);\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar events = event.split(' ');\r\n\t\tif(events.length !== 0){\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove listener\r\n\t\tvar ref = getEventListeners(element);\r\n\t\tif(ref !== undefined && ref[event] !== undefined){\r\n\t\t\tfor (var i = ref[event].length - 1; i >= 0; i--) {\r\n\t\t\t\tif(selector && ref[event][i].selector !== selector)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\telement.removeEventListener(event, ref[event].splice(i, 1), true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.animateCSS = function(element, animationName, callback, duration) {\r\n\t\tvar animationEnd = {\r\n\t\t\tanimation: 'animationend',\r\n\t\t\tOAnimation: 'oAnimationEnd',\r\n\t\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t\t};\r\n\r\n\t\tfor (var t in animationEnd){\r\n\t\t\tif(element.style[t] !== undefined){\r\n\t\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(duration){\r\n\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t}\r\n\r\n\t\tvar list = ('animated ' + animationName).split(' ');\r\n\t\telement.classList.add.apply(element.classList, list);\r\n\t\t$.once(element, animationEnd, function(){\r\n\t\t\telement.classList.remove.apply(element.classList, list);\r\n\t\t\t\r\n\t\t\tif(duration) setTimeout(function(){\r\n\t\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t\t}, 1);\r\n\r\n\t\t\tif(typeof callback === 'function') callback();\r\n\t\t});\r\n\t}\r\n\r\n\tvar emptyDOM = {\r\n\t\tdiv:document.createElement('div'),\r\n\t\tul:document.createElement('ul'),\r\n\t\ttbody:document.createElement('tbody'),\r\n\t\ttr:document.createElement('tr'),\r\n\t\ttable:document.createElement('table'),\r\n\t\tselect:document.createElement('select'),\r\n\t};\r\n\tself.parseElement = function(html, returnNode){\r\n\t\tvar result = [];\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\r\n        if(html.indexOf('<li') === 0) tempDOM = emptyDOM.ul;\r\n        if(html.indexOf('<tr') === 0) tempDOM = emptyDOM.tbody;\r\n        if(html.indexOf('<td') === 0 || html.indexOf('<th') === 0) tempDOM = emptyDOM.tr;\r\n        if(html.indexOf('<tbody') === 0) tempDOM = emptyDOM.table;\r\n        if(html.indexOf('<option') === 0) tempDOM = emptyDOM.select;\r\n\r\n\t\ttempDOM.textContent = '';\r\n\t\ttempDOM.insertAdjacentHTML('afterBegin', html);\r\n\r\n\t\tvar ref = tempDOM[returnNode ? 'childNodes' : 'children'];\r\n\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\tresult.push(ref.item(i));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tself.remove = function(elements){\r\n\t\tif(elements.remove !== undefined)\r\n\t\t\treturn elements.remove();\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\telements[i].remove();\r\n\t\t}\r\n\t}\r\n\r\n\tvar documentElement = null;\r\n\tsetTimeout(function(){\r\n\t\tsf.loader.domReady(function(){\r\n\t\t\tdocumentElement = document.body.parentElement;\r\n\t\t});\r\n\t}, 1);\r\n\r\n\tself.getSelector = function(element, childIndexes, untilElement){\r\n\t\tvar names = [];\r\n\t\tif(untilElement === undefined) untilElement = documentElement;\r\n\r\n\t\tvar previousSibling = childIndexes ? 'previousSibling' : 'previousElementSibling';\r\n\r\n\t\twhile(element.parentNode !== null){\r\n\t\t\tif(element.id){\r\n\t\t\t\tnames.unshift('#'+element.id);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(element === untilElement){\r\n\t\t\t\t\tif(childIndexes === undefined)\r\n\t\t\t\t\t\tnames.unshift(element.tagName);\r\n\t\t\t\t\telse names.unshift(0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar e = element;\r\n\t\t\t\t\tvar i = childIndexes ? 0 : 1;\r\n\r\n\t\t\t\t\twhile(e[previousSibling]){\r\n\t\t\t\t\t\te = e[previousSibling];\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(childIndexes)\r\n\t\t\t\t\t\tnames.unshift(i);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tnames.unshift(\":nth-child(\"+i+\")\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t\tif(element === null)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndexes)\r\n\t\t\treturn names;\r\n\t\treturn names.join(\" > \");\r\n\t}\r\n\r\n\tself.childIndexes = function(array, context){\r\n\t\tvar element = context || documentElement;\r\n\t\tvar i = 1;\r\n\r\n\t\tif(array[0].constructor === String)\r\n\t\t\telement = element.querySelector(array[0]);\r\n\r\n\t\telse if(array.length === 1)\r\n\t\t\treturn element;\r\n\r\n\t\tfor (i = i; i < array.length; i++) {\r\n\t\t\telement = element.childNodes.item(array[i]);\r\n\r\n\t\t\tif(element === null)\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n})();","/*\r\n  Special Thanks to Vladimir Kharlampidi\r\n  https://github.com/nolimits4web/\r\n*/\r\n\r\nvar globals = {};\r\nvar jsonpRequests = 0;\r\nfunction Request(requestOptions) {\r\n    var globalsNoCallbacks = Object.assign({}, globals);\r\n    ('beforeCreate beforeOpen beforeSend error complete success statusCode').split(' ').forEach(function (callbackName) {\r\n        delete globalsNoCallbacks[callbackName];\r\n    });\r\n    var defaults = Object.assign({\r\n        url: window.location.toString(),\r\n        method: 'GET',\r\n        data: false,\r\n        async: true,\r\n        cache: true,\r\n        user: '',\r\n        password: '',\r\n        headers: {},\r\n        xhrFields: {},\r\n        statusCode: {},\r\n        processData: true,\r\n        dataType: 'text',\r\n        contentType: 'application/x-www-form-urlencoded',\r\n        timeout: 0,\r\n    }, globalsNoCallbacks);\r\n    var options = Object.assign({}, defaults, requestOptions);\r\n    var proceedRequest;\r\n    // Function to run XHR callbacks and events\r\n    function fireCallback(callbackName) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        /*\r\n          Callbacks:\r\n          beforeCreate (options),\r\n          beforeOpen (xhr, options),\r\n          beforeSend (xhr, options),\r\n          error (xhr, status),\r\n          complete (xhr, stautus),\r\n          success (response, status, xhr),\r\n          statusCode ()\r\n        */\r\n        var globalCallbackValue;\r\n        var optionCallbackValue;\r\n        if (globals[callbackName]) {\r\n            globalCallbackValue = globals[callbackName].apply(globals, data);\r\n        }\r\n        if (options[callbackName]) {\r\n            optionCallbackValue = options[callbackName].apply(options, data);\r\n        }\r\n        if (typeof globalCallbackValue !== 'boolean')\r\n            globalCallbackValue = true;\r\n        if (typeof optionCallbackValue !== 'boolean')\r\n            optionCallbackValue = true;\r\n        return (globalCallbackValue && optionCallbackValue);\r\n    }\r\n    // Before create callback\r\n    proceedRequest = fireCallback('beforeCreate', options);\r\n    if (proceedRequest === false)\r\n        return undefined;\r\n    // For jQuery guys\r\n    if (options.type)\r\n        options.method = options.type;\r\n    // Parameters Prefix\r\n    var paramsPrefix = options.url.indexOf('?') >= 0 ? '&' : '?';\r\n    // UC method\r\n    var method = options.method.toUpperCase();\r\n    // Data to modify GET URL\r\n    if ((method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') && options.data) {\r\n        var stringData = void 0;\r\n        if (typeof options.data === 'string') {\r\n            // Should be key=value string\r\n            if (options.data.indexOf('?') >= 0)\r\n                stringData = options.data.split('?')[1];\r\n            else\r\n                stringData = options.data;\r\n        }\r\n        else {\r\n            // Should be key=value object\r\n            stringData = serializeQuery(options.data);\r\n        }\r\n        if (stringData.length) {\r\n            options.url += paramsPrefix + stringData;\r\n            if (paramsPrefix === '?')\r\n                paramsPrefix = '&';\r\n        }\r\n    }\r\n    // JSONP\r\n    if (options.dataType === 'json' && options.url.indexOf('callback=') >= 0) {\r\n        var callbackName_1 = \"jsonp_\" + (Date.now() + ((jsonpRequests += 1)));\r\n        var abortTimeout_1;\r\n        var callbackSplit = options.url.split('callback=');\r\n        var requestUrl = callbackSplit[0] + \"callback=\" + callbackName_1;\r\n        if (callbackSplit[1].indexOf('&') >= 0) {\r\n            var addVars = callbackSplit[1].split('&').filter(function (el) { return el.indexOf('=') > 0; }).join('&');\r\n            if (addVars.length > 0)\r\n                requestUrl += \"&\" + addVars;\r\n        }\r\n        // Create script\r\n        var script_1 = document.createElement('script');\r\n        script_1.type = 'text/javascript';\r\n        script_1.onerror = function onerror() {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('error', null, 'scripterror');\r\n            fireCallback('complete', null, 'scripterror');\r\n        };\r\n        script_1.src = requestUrl;\r\n        // Handler\r\n        window[callbackName_1] = function jsonpCallback(data) {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('success', data);\r\n            script_1.parentNode.removeChild(script_1);\r\n            script_1 = null;\r\n            delete window[callbackName_1];\r\n        };\r\n        document.querySelector('head').appendChild(script_1);\r\n        if (options.timeout > 0) {\r\n            abortTimeout_1 = setTimeout(function () {\r\n                script_1.parentNode.removeChild(script_1);\r\n                script_1 = null;\r\n                fireCallback('error', null, 'timeout');\r\n            }, options.timeout);\r\n        }\r\n        return undefined;\r\n    }\r\n    // Cache for GET/HEAD requests\r\n    if (method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') {\r\n        if (options.cache === false) {\r\n            options.url += paramsPrefix + \"_nocache\" + Date.now();\r\n        }\r\n    }\r\n    // Create XHR\r\n    var xhr = new XMLHttpRequest();\r\n    // Save Request URL\r\n    xhr.requestUrl = options.url;\r\n    xhr.requestParameters = options;\r\n    // Before open callback\r\n    proceedRequest = fireCallback('beforeOpen', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Open XHR\r\n    xhr.open(method, options.url, options.async, options.user, options.password);\r\n    // Create POST Data\r\n    var postData = null;\r\n    if ((method === 'POST' || method === 'PUT' || method === 'PATCH') && options.data) {\r\n        if (options.processData) {\r\n            var postDataInstances = [ArrayBuffer, Blob, Document, FormData];\r\n            // Post Data\r\n            if (postDataInstances.indexOf(options.data.constructor) >= 0) {\r\n                postData = options.data;\r\n            }\r\n            else {\r\n                // POST Headers\r\n                var boundary = \"---------------------------\" + Date.now().toString(16);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    xhr.setRequestHeader('Content-Type', \"multipart/form-data; boundary=\" + boundary);\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader('Content-Type', options.contentType);\r\n                }\r\n                postData = '';\r\n                var data = serializeQuery(options.data);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    data = data.split('&');\r\n                    var newData = [];\r\n                    for (var i = 0; i < data.length; i += 1) {\r\n                        newData.push(\"Content-Disposition: form-data; name=\\\"\" + data[i].split('=')[0] + \"\\\"\\r\\n\\r\\n\" + data[i].split('=')[1] + \"\\r\\n\");\r\n                    }\r\n                    postData = \"--\" + boundary + \"\\r\\n\" + newData.join(\"--\" + boundary + \"\\r\\n\") + \"--\" + boundary + \"--\\r\\n\";\r\n                }\r\n                else if (options.contentType === 'application/json') {\r\n                    postData = JSON.stringify(options.data);\r\n                }\r\n                else {\r\n                    postData = data;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            postData = options.data;\r\n            xhr.setRequestHeader('Content-Type', options.contentType);\r\n        }\r\n    }\r\n    // Additional headers\r\n    if (options.headers) {\r\n        Object.keys(options.headers).forEach(function (headerName) {\r\n            xhr.setRequestHeader(headerName, options.headers[headerName]);\r\n        });\r\n    }\r\n    // Check for crossDomain\r\n    if (typeof options.crossDomain === 'undefined') {\r\n        // eslint-disable-next-line\r\n        options.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(options.url) && RegExp.$2 !== window.location.host;\r\n    }\r\n    if (!options.crossDomain) {\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    }\r\n    if (options.xhrFields) {\r\n        Object.assign(xhr, options.xhrFields);\r\n    }\r\n    var xhrTimeout;\r\n    // Handle XHR\r\n    xhr.onload = function onload() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 0) {\r\n            var responseData = void 0;\r\n            if (options.dataType === 'json') {\r\n                var parseError = void 0;\r\n                try {\r\n                    responseData = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (err) {\r\n                    parseError = true;\r\n                }\r\n                if (!parseError) {\r\n                    fireCallback('success', responseData, xhr.status, xhr);\r\n                }\r\n                else {\r\n                    fireCallback('error', xhr, 'parseerror');\r\n                }\r\n            }\r\n            else {\r\n                responseData = xhr.responseType === 'text' || xhr.responseType === '' ? xhr.responseText : xhr.response;\r\n                fireCallback('success', responseData, xhr.status, xhr);\r\n            }\r\n        }\r\n        else {\r\n            fireCallback('error', xhr, xhr.status);\r\n        }\r\n        if (options.statusCode) {\r\n            if (globals.statusCode && globals.statusCode[xhr.status])\r\n                globals.statusCode[xhr.status](xhr);\r\n            if (options.statusCode[xhr.status])\r\n                options.statusCode[xhr.status](xhr);\r\n        }\r\n        fireCallback('complete', xhr, xhr.status);\r\n    };\r\n    xhr.onerror = function onerror() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        fireCallback('error', xhr, xhr.status);\r\n        fireCallback('complete', xhr, 'error');\r\n    };\r\n    // Timeout\r\n    if (options.timeout > 0) {\r\n        xhr.onabort = function onabort() {\r\n            if (xhrTimeout)\r\n                clearTimeout(xhrTimeout);\r\n        };\r\n        xhrTimeout = setTimeout(function () {\r\n            xhr.abort();\r\n            fireCallback('error', xhr, 'timeout');\r\n            fireCallback('complete', xhr, 'timeout');\r\n        }, options.timeout);\r\n    }\r\n    // Ajax start callback\r\n    proceedRequest = fireCallback('beforeSend', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Send XHR\r\n    xhr.send(postData);\r\n    // Return XHR object\r\n    return xhr;\r\n}\r\nfunction RequestShortcut(method) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    var _a = [], url = _a[0], data = _a[1], success = _a[2], error = _a[3], dataType = _a[4];\r\n    if (typeof args[1] === 'function') {\r\n        url = args[0], success = args[1], error = args[2], dataType = args[3];\r\n    }\r\n    else {\r\n        url = args[0], data = args[1], success = args[2], error = args[3], dataType = args[4];\r\n    }\r\n    [success, error].forEach(function (callback) {\r\n        if (typeof callback === 'string') {\r\n            dataType = callback;\r\n            if (callback === success)\r\n                success = undefined;\r\n            else\r\n                error = undefined;\r\n        }\r\n    });\r\n    dataType = dataType || (method === 'json' || method === 'postJSON' ? 'json' : undefined);\r\n    var requestOptions = {\r\n        url: url,\r\n        method: method === 'post' || method === 'postJSON' ? 'POST' : 'GET',\r\n        data: data,\r\n        success: success,\r\n        error: error,\r\n        dataType: dataType,\r\n    };\r\n    if (method === 'postJSON') {\r\n        Object.assign(requestOptions, {\r\n            contentType: 'application/json',\r\n            processData: false,\r\n            crossDomain: true,\r\n            data: typeof data === 'string' ? data : JSON.stringify(data),\r\n        });\r\n    }\r\n    return Request(requestOptions);\r\n}\r\nObject.assign(Request, {\r\n    get: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['get'].concat(args));\r\n    },\r\n    post: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['post'].concat(args));\r\n    },\r\n    json: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    getJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    postJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['postJSON'].concat(args));\r\n    },\r\n});\r\nRequest.setup = function setup(options) {\r\n    if (options.type && !options.method) {\r\n        Object.assign(options, { method: options.type });\r\n    }\r\n    Object.assign(globals, options);\r\n};\r\nfunction serializeQuery(params, prefix) {\r\n    var key = Object.keys(params);\r\n    for (var i = 0; i < key.length; i++) {\r\n      var value = params[key[i]];\r\n      if (params.constructor === Array)\r\n          key[i] += prefix + \"[]\";\r\n      else if (params.constructor === Object)\r\n          key[i] = (prefix ? prefix + \"[\" + key[i] + \"]\" : key[i]);\r\n\r\n      if (typeof value === 'object')\r\n          key[i] = serializeQuery(value, key[i]);\r\n      else\r\n          key[i] = key[i] + \"=\" + encodeURIComponent(value);\r\n    }\r\n    return key.join('&');\r\n}\r\n$.ajax = sf.ajax = Request;","return sf;\r\n\r\n// ===== Module End =====\r\n})));","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 0;\r\n\tself.DOMWasLoaded = false;\r\n\tself.DOMReady = false;\r\n\tself.turnedOff = true;\r\n\r\n\tvar whenDOMReady = [];\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\tself.off = function(){\r\n\t\tself.turnedOff = true;\r\n\t}\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.domReady = function(func){\r\n\t\tif(self.DOMReady) return func();\r\n\t\tif(whenDOMReady.indexOf(func) !== -1) return;\r\n\t\twhenDOMReady.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('link');\r\n\t        s.rel = 'stylesheet';\r\n\t        s.href = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tself.js = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('script');\r\n\t        s.type = \"text/javascript\";\r\n\t        s.async = true;\r\n\t        s.src = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(function(){\r\n\t\tif(self.totalContent === 0 && !self.turnedOff){\r\n\t\t\tself.loadedContent = self.totalContent = 1;\r\n\t\t\tconsole.warn(\"If you don't use content loader feature, please turn it off with `sf.loader.off()`\");\r\n\t\t}\r\n\t}, 10000);\r\n\r\n\tvar isQueued = false;\r\n\tdocument.addEventListener(\"DOMContentLoaded\", function(event){\r\n\t\t// Add processing class to queued element\r\n\t\tif(isQueued === false && document.body){\r\n\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\t\t\tfor (var i = 0; i < isQueued.length; i++) {\r\n\t\t\t\tif(isQueued[i].nodeType === 1)\r\n\t\t\t\t\tisQueued[i].classList.add('sf-dom-queued');\r\n\t\t\t}\r\n\r\n\t\t\tvar repeatedList = $('[sf-repeat-this]', document.body);\r\n\t\t\tfor (var i = 0; i < repeatedList.length; i++) {\r\n\t\t\t\trepeatedList[i].classList.add('sf-dom-queued');\r\n\t\t\t}\r\n\r\n\t\t\t// Find images\r\n\t\t\tvar temp = $('img:not(onload)[src]');\r\n\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\tsf.loader.totalContent++;\r\n\t\t\t\ttemp[i].addEventListener('load', sf.loader.f, {once:true});\r\n\t\t\t\ttemp[i].addEventListener('error', sf.loader.f, {once:true});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction onReadyState(){\r\n\t\t\tif(isQueued === null){\r\n\t\t\t\tclearInterval(onReadyState_timer);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(self.turnedOff === false && self.loadedContent < self.totalContent)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(/loaded|complete/.test(document.readyState) === false)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tclearInterval(onReadyState_timer);\r\n\r\n\t\t\tif(self.DOMReady === false){\r\n\t\t\t\tself.DOMReady = true;\r\n\t\t\t\tfor (var i = 0; i < whenDOMReady.length; i++) {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\twhenDOMReady[i]();\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar listener = sf.dom('script, link, img');\r\n\t\t\tfor (var i = 0; i < listener.length; i++) {\r\n\t\t\t\tlistener[i].removeEventListener('error', sf.loader.f);\r\n\t\t\t\tlistener[i].removeEventListener('load', sf.loader.f);\r\n\t\t\t}\r\n\r\n\t\t\tself.DOMWasLoaded = true;\r\n\t\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\t\ttry{\r\n\t\t\t\t\twhenDOMLoaded[i]();\r\n\t\t\t\t} catch(e){\r\n\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhenProgress.splice(0);\r\n\t\t\twhenDOMReady.splice(0);\r\n\t\t\twhenDOMLoaded.splice(0);\r\n\t\t\twhenDOMReady = whenDOMLoaded = null;\r\n\r\n\t\t\t// Last init\r\n\t\t\tsf.controller.init();\r\n\t\t\tsf.model.init(document.body, isQueued);\r\n\t\t\tsf.router.init();\r\n\r\n\t\t\tisQueued = null;\r\n\t\t}\r\n\r\n\t\tvar onReadyState_timer = setInterval(onReadyState, 100);\r\n\t\tonReadyState();\r\n\t});\r\n}\r\nsf.prototype.constructor = sf.loader.onFinish;","// Data save and HTML content binding\r\nsf.model = function(scope){\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\tif(sf.controller.pending[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n};\r\n\r\n(function(){\r\n\tvar self = sf.model;\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\r\n\tvar processingElement = null;\r\n\r\n\t// For debugging, normalize indentation\r\n\tfunction trimIndentation(text){\r\n\t\tvar indent = text.split(\"\\n\", 3);\r\n\t\tif(indent[0][0] !== ' ' || indent[0][0] !== \"\\t\")\r\n\t\t\tindent = indent[1];\r\n\t\telse indent = indent[0];\r\n\r\n\t\tif(indent === undefined) return text;\r\n\t\tindent = indent.length - indent.trim().length;\r\n\t\tif(indent === 0) return text;\r\n\t\treturn text.replace(RegExp('^([\\\\t ]{'+indent+'})', 'gm'), '');\r\n\t}\r\n\r\n\t// Secured evaluation\r\n\tvar bracketMatch = RegExp('([\\\\w.]*?[\\\\S\\\\s])\\\\('+sf.regex.avoidQuotes, 'g');\r\n\tvar chackValidFunctionCall = /[a-zA-Z0-9 \\]\\$\\)]/;\r\n\tvar allowedFunction = [':', 'for', 'if', 'while', '_content_.take', 'console.log'];\r\n\tvar localEval = function(script, _model_, _modelScope, _content_){\r\n\t\t\"use strict\";\r\n\r\n\t\t// ==== Security check ====\r\n\t\tvar tempScript = script;\r\n\r\n\t\t// Remove quotes\r\n\t\ttempScript = tempScript.replace(sf.regex.getQuotes, '\"Quotes\"');\r\n\r\n\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\tvar preventExecution = false;\r\n\t\tvar check_ = null;\r\n\t\twhile((check_ = bracketMatch.exec(tempScript)) !== null){\r\n\t\t\tcheck_[1] = check_[1].trim();\r\n\r\n\t\t\tif(allowedFunction.indexOf(check_[1]) === -1 &&\r\n\t\t\t\tcheck_[1].split('.')[0] !== '_modelScope' &&\r\n\t\t\t\tchackValidFunctionCall.test(check_[1][check_[1].length-1])\r\n\t\t\t){\r\n\t\t\t\tpreventExecution = check_[1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(preventExecution){\r\n\t\t\tconsole.error(\"Trying to executing unrecognized function (\"+preventExecution+\")\");\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\t\t// ==== Security check ended ====\r\n\t\r\n\t\tvar _result_ = '';\r\n\t\ttry{\r\n\t\t\tif(/@return /.test(script) === true){\r\n\t\t\t\tvar _evaled_ = eval('(function(){'+script.split('@return ').join('return ')+'})()');\r\n\t\t\t\treturn _result_ + _evaled_;\r\n\t\t\t}\r\n\t\t\telse var _evaled_ = eval(script);\r\n\t\t} catch(e){\r\n\t\t\tconsole.error(e);\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\t// Find an index for the element on the list\r\n\tself.index = function(element){\r\n\t\tvar i = -1;\r\n\t\tvar tagName = element.tagName;\r\n\t\tvar currentElement = element;\r\n\r\n\t\twhile(element !== null) {\r\n\t\t\tif(element.tagName === tagName)\r\n\t\t\t\ti++;\r\n\r\n\t\t\telement = element.previousElementSibling;\r\n\t\t}\r\n\r\n\t\tvar list = currentElement.getAttribute('sf-bind-list');\r\n\t\tif(!list) return i;\r\n\r\n\t\tvar ref = sf.model.root[sf.controller.modelName(currentElement)][list];\r\n\t\tif(!ref.$virtual) return i;\r\n\r\n\t\treturn i + ref.$virtual.DOMCursor - 1;\r\n\t}\r\n\r\n\t// Declare model for the name with a function\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\t\t\r\n\t\tfunc(self(name), self);\r\n\t}\r\n\r\n\t// Get property of the model\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys.join('|');\r\n\t}\r\n\r\n\t// Escape the escaped quote\r\n\tfunction escapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*');\r\n\t}\r\n\r\n\tfunction unescapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\");\r\n\t}\r\n\r\n\tfunction elseIfHandle(else_, scopes){\r\n\t\tvar elseIf = else_.elseIf;\r\n\r\n\t\t// Else if\r\n\t\tfor (var i = 0; i < elseIf.length; i++) {\r\n\t\t\t// Check the condition\r\n\t\t\tscopes[0] = elseIf[i][0];\r\n\t\t\tif(!localEval.apply(self.root, scopes))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Get the value\r\n\t\t\tscopes[0] = elseIf[i][1];\r\n\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t}\r\n\r\n\t\t// Else\r\n\t\tif(else_.elseValue === null)\r\n\t\t\treturn '';\r\n\r\n\t\tscopes[0] = else_.elseValue;\r\n\t\treturn localEval.apply(self.root, scopes);\r\n\t}\r\n\r\n\t// ==== Template parser ====\r\n\tvar templateParser_regex = /{{%=([0-9]+)/gm;\r\n\tvar REF_DIRECT = 0, REF_IF = 1, REF_EXEC = 2;\r\n\tvar templateExec = function(parse, item){\r\n\t\tvar parsed = {};\r\n\r\n\t\t// Get or evaluate static or dynamic data\r\n\t\tfor (var i = 0; i < parse.length; i++) {\r\n\t\t\tvar ref = parse[i];\r\n\t\t\tref.data[1] = item;\r\n\r\n\t\t\t// Direct evaluation type\r\n\t\t\tif(ref.type === REF_DIRECT || ref.type === REF_EXEC)\r\n\t\t\t\tparsed[i] = {type:ref.type, data:localEval.apply(self.root, ref.data)};\r\n\r\n\t\t\t// Conditional type\r\n\t\t\telse if(ref.type === REF_IF){\r\n\t\t\t\tvar scopes = ref.data;\r\n\t\t\t\tparsed[i] = {type:ref.type, data:''};\r\n\t\t\t\tscopes[0] = ref.if[0];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tparsed[i].data = elseIfHandle(ref, scopes);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscopes[0] = ref.if[1];\r\n\t\t\t\tparsed[i].data = localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n\r\n\tvar templateParser = function(template, item){\r\n\t\tvar html = template.html.cloneNode(true);\r\n\t\tvar addresses = template.addresses;\r\n\t\tvar parsed = templateExec(template.parse, item);\r\n\r\n\t\t// Save model item reference to node\r\n\t\thtml.model = item;\r\n\r\n\t\tvar changesReference = [];\r\n\t\tvar pendingInsert = [];\r\n\r\n\t\t// Find element where the data belongs to\r\n\t\tfor (var i = 0; i < addresses.length; i++) {\r\n\t\t\tvar ref = addresses[i];\r\n\t\t\tvar current = $.childIndexes(ref.address, html);\r\n\r\n\t\t\t// Modify element attributes\r\n\t\t\tif(ref.nodeType === 1){\r\n\t\t\t\tvar refA = ref.attributes;\r\n\t\t\t\tfor (var a = 0; a < refA.length; a++) {\r\n\t\t\t\t\tvar refB = refA[a];\r\n\t\t\t\t\tvar cRef = {attribute:refB};\r\n\t\t\t\t\tchangesReference.push(cRef);\r\n\r\n\t\t\t\t\tif(refB.direct !== false){\r\n\t\t\t\t\t\tcRef.direct = refB.direct;\r\n\t\t\t\t\t\tcurrent.setAttribute(refB.name, parsed[refB.direct].data);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Below is used for multiple data\r\n\t\t\t\t\trefB = current.attributes[refB.name];\r\n\t\t\t\t\tcRef.value = refB.value;\r\n\t\t\t\t\tcRef.parse_id = [];\r\n\r\n\t\t\t\t\trefB.value = refB.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\tcRef.parse_id.push(match);\r\n\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Replace text node\r\n\t\t\tif(ref.nodeType === 3){\r\n\t\t\t\tvar refA = current;\r\n\t\t\t\tvar cRef = {textContent:refA};\r\n\t\t\t\tchangesReference.push(cRef);\r\n\r\n\t\t\t\tif(ref.direct !== false){\r\n\t\t\t\t\tcRef.direct = ref.direct;\r\n\t\t\t\t\trefA.textContent = parsed[ref.direct].data;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Below is used for multiple/dynamic data\r\n\t\t\t\tvar haveDynamicData = false;\r\n\t\t\t\tvar parentNode = current.parentElement;\r\n\t\t\t\tcRef.value = refA.textContent;\r\n\t\t\t\tcRef.parse_id = [];\r\n\r\n\t\t\t\trefA.textContent = refA.textContent.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\tcRef.parse_id.push(match);\r\n\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Replace dynamic node\r\n\t\t\tif(ref.nodeType === -1){\r\n\t\t\t\tvar cRef = {\r\n\t\t\t\t\tdynamicFlag:current,\r\n\t\t\t\t\tparse_index:ref.parse_index,\r\n\t\t\t\t\tparentNode:current.parentNode,\r\n\t\t\t\t\tstartFlag:ref.startFlag && $.childIndexes(ref.startFlag, html)\r\n\t\t\t\t};\r\n\t\t\t\tchangesReference.push(cRef);\r\n\r\n\t\t\t\t// Pending element insert to take other element reference\r\n\t\t\t\tpendingInsert.push(cRef);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Save reference to element\r\n\t\thtml.sf$changesReference = changesReference;\r\n\r\n\t\t// Run the pending element\r\n\t\tfor (var i = 0; i < pendingInsert.length; i++) {\r\n\t\t\tvar ref = pendingInsert[i];\r\n\t\t\tvar tDOM = $.parseElement(parsed[ref.parse_index].data, true);\r\n\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\tref.parentNode.insertBefore(tDOM[a], ref.dynamicFlag);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval, preParsedReference){\r\n\t\tvar _modelScope = self.root[scope];\r\n\t\tif(!runEval) runEval = '';\r\n\t\t\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(_modelScope);\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(_modelScope[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\tvar preParsed = [];\r\n\t\t\tvar lastParsedIndex = preParsedReference.length;\r\n\t\t}\r\n\r\n\t\tvar prepared = html.replace(/{{([^@%][\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = escapeEscapedQuote(temp); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\r\n\t\t\ttemp = unescapeEscapedQuote(temp); // ToDo: Unescape\r\n\r\n\t\t\t// Unescape HTML\r\n\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t// Evaluate\r\n\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\ttemp = temp.trim();\r\n\r\n\t\t\t\t// Simplicity similar\r\n\t\t\t\tvar exist = preParsed.indexOf(temp);\r\n\r\n\t\t\t\tif(exist === -1){\r\n\t\t\t\t\tpreParsed.push(temp);\r\n\t\t\t\t\tpreParsedReference.push({type:REF_DIRECT, data:[temp, _model_, _modelScope]});\r\n\t\t\t\t\treturn '{{%=' + (preParsed.length + lastParsedIndex - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn '{{%=' + (exist + lastParsedIndex);\r\n\t\t\t}\r\n\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(/(?!&#.*?;)[\\u00A0-\\u9999<>\\&]/gm, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\tpreParsed = variableList = _modelScope = _model_ = mask = scope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t}\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\t// Dynamic data parser\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope, runEval){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(passVar === null)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\t// Use strict mode and prepare for new variables\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\t// Declare new variable\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove var because no variable are being passed\r\n\t\t\t\tif(firstTime === true)\r\n\t\t\t\t\tstrDeclare = strDeclare.replace('var ', '');\r\n\r\n\t\t\t\t// Escape function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('&#40;').split(')').join('&#41;');\r\n\r\n\t\t\t\t// Pass to static data parser for another HTML data\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Build script preparation\r\n\t\thtml = html.replace(/{\\[([\\s\\S]*?)\\]}/g, function(full, matched){\r\n\t\t\tif(/{{.*?}}/.test(matched) === false)\r\n\t\t\t\treturn \"_result_ += '\"+matched.split(\"'\").join(\"\\\\'\")+\"'\";\r\n\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope)+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(runEval === '#noEval')\r\n\t\t\tvar preParsedReference = [];\r\n\r\n\t\tvar prepared = html.replace(/{{(@[\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = escapeEscapedQuote(temp); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\t\t\ttemp = unescapeEscapedQuote(temp); // ToDo: Unescape\r\n\r\n\t\t\t// Unescape HTML\r\n\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass_ = /(var|let)([\\w,\\s]+)(?=\\s(?==|in|of))/g;\r\n\t\t\tvar VarPass = [];\r\n\t\t\tvar s1 = null;\r\n\t\t\twhile((s1 = VarPass_.exec(temp)) !== null){\r\n\t\t\t\tVarPass.push(s1[2]);\r\n\t\t\t}\r\n\r\n\t\t\tif(_model_ === null && runEval === '#noEval')\r\n\t\t\t\tVarPass.push('_model_');\r\n\r\n\t\t\tif(VarPass.length !== 0){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/([\\n\\t\\r]|  )+/g, '').split(',').forEach(function(val){\r\n\t\t\t\t\t\tobtained.push(val);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':(typeof '+VarPass[i]+'!==\"undefined\"?'+VarPass[i]+':undefined)';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(VarPass.length === 0)\r\n\t\t\t\t\tVarPass = 'null';\r\n\t\t\t\telse VarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\t\t\telse temp = temp.split('&VarPass&').join('null');\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\r\n\t\t\t\t// {if, elseIf:([if, value], ...), elseValue}\r\n\t\t\t\tvar findElse = function(text){\r\n\t\t\t\t\ttext = text.join(':');\r\n\t\t\t\t\tvar else_ = null;\r\n\r\n\t\t\t\t\t// Get else value\r\n\t\t\t\t\tvar text = text.split('@else' + (text.indexOf(':') !== -1 ? ':' : ' :'));\r\n\t\t\t\t\tif(text.length === 2)\r\n\t\t\t\t\t\telse_ = text.pop();\r\n\t\t\t\t\telse text = text[0];\r\n\r\n\t\t\t\t\t// Split elseIf\r\n\t\t\t\t\ttext = text.split('@elseif ');\r\n\r\n\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t\tif:text.shift(),\r\n\t\t\t\t\t\telseIf:[],\r\n\t\t\t\t\t\telseValue:else_\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Separate condition script and value\r\n\t\t\t\t\tfor (var i = 0; i < text.length; i++) {\r\n\t\t\t\t\t\tvar val = text[i].split(':');\r\n\t\t\t\t\t\tobj.elseIf.push([val.shift(), val.join(':')]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tvar condition = check.shift();\r\n\t\t\t\t\tvar elseIf = findElse(check);\r\n\t\t\t\t\telseIf.type = REF_IF;\r\n\t\t\t\t\telseIf.data = [null, _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t\t// Trim Data\r\n\t\t\t\t\telseIf.if = [condition.trim(), elseIf.if.trim()];\r\n\t\t\t\t\tif(elseIf.elseValue !== null)\r\n\t\t\t\t\t\telseIf.elseValue = elseIf.elseValue.trim();\r\n\r\n\t\t\t\t\tfor (var i = 0; i < elseIf.elseIf.length; i++) {\r\n\t\t\t\t\t\telseIf.elseIf[i][0] = elseIf.elseIf[i][0].trim();\r\n\t\t\t\t\t\telseIf.elseIf[i][1] = elseIf.elseIf[i][1].trim();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Push data\r\n\t\t\t\t\tpreParsedReference.push(elseIf);\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scopes = [check[0], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\treturn elseIfHandle(findElse(check), scopes);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcheck.shift();\r\n\t\t\t\tscopes[0] = check.join(':');\r\n\r\n\t\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tvar scopes = [check[1], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tpreParsedReference.push({type:REF_EXEC, data:scopes});\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, scopes);\r\n\t\t\t\treturn temp;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\t_modelScope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t\treturn [prepared, preParsedReference];\r\n\t\t}\r\n\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\tvar bindArray = function(template, list, mask, modelName, propertyName, targetNode, parentNode, tempDOM){\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'swap', 'move', '$replace', 'softRefresh', 'hardRefresh'];\r\n\t\tvar refreshTimer = -1;\r\n\t\tvar processElement = function(index, options, other, count){\r\n\t\t\tif(options === 'clear'){\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar spacer = [parentNode.firstElementChild, parentNode.lastElementChild];\r\n\r\n\t\t\t\tparentNode.textContent = '';\r\n\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tparentNode.appendChild(spacer[0]);\r\n\t\t\t\t\tparentNode.appendChild(spacer[1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Hard refresh\r\n\t\t\tif(options === 'hardRefresh'){\r\n\t\t\t\tvar item = list;\r\n\t\t\t\tfor (var i = index; i < item.length; i++) {\r\n\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\tparentNode.insertBefore(templateParser(template, item[i]), parentNode.lastElementChild);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tparentNode.appendChild(templateParser(template, item[i]));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar callback = self.root[modelName]['on$'+propertyName];\r\n\r\n\t\t\tif(options === 'swap' || options === 'move'){\r\n\t\t\t\tvar ref = parentNode.children;\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t\tother++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(options === 'move'){\r\n\t\t\t\t\tvar overflow = list.length - index - count;\r\n\t\t\t\t\tif(overflow < 0)\r\n\t\t\t\t\t\tcount += overflow;\r\n\r\n\t\t\t\t\t// Move to virtual DOM\r\n\t\t\t\t\tvar vDOM = document.createElement('div');\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tvDOM.appendChild(ref[index]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar nextSibling = ref[other] || null;\r\n\r\n\t\t\t\t\t// Move to defined index\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tparentNode.insertBefore(vDOM.firstElementChild, nextSibling);\r\n\r\n\t\t\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\t\t\tcallback.update(\r\n\t\t\t\t\t\t\t\t(nextSibling !== null && nextSibling.previousElementSibling)\r\n\t\t\t\t\t\t\t\t|| parentNode.lastElementChild, 'move');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(index >= other){\r\n\t\t\t\t\tvar temp = index;\r\n\t\t\t\t\tindex = other;\r\n\t\t\t\t\tother = temp;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tref[index].insertAdjacentElement('afterEnd', ref[other]);\r\n\t\t\t\tref[other].insertAdjacentElement('afterEnd', ref[index]);\r\n\r\n\t\t\t\tif(callback !== undefined && callback.update){\r\n\t\t\t\t\tcallback.update(ref[other], 'swap');\r\n\t\t\t\t\tcallback.update(ref[index], 'swap');\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar exist = list.$virtual.elements();\r\n\r\n\t\t\t\tclearTimeout(refreshTimer);\r\n\t\t\t\trefreshTimer = setTimeout(function(){\r\n\t\t\t\t\tlist.$virtual.refresh(true);\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse exist = parentNode.children;\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(options === 'remove'){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\texist[index].remove();\r\n\t\t\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.remove){\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tsetTimeout(startRemove, 800);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse startRemove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update\r\n\t\t\telse if(options === 'update'){\r\n\t\t\t\tif(!other) other = index + 1;\r\n\t\t\t\telse if(other < 0) other = list.length + other;\r\n\t\t\t\telse other = index - other;\r\n\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\tvar oldChild = exist[i];\r\n\t\t\t\t\tif(oldChild === undefined || list[i] === undefined)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\toldChild.parentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tparentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\t\tcallback.update(temp, 'replace');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar item = list[index];\r\n\t\t\tif(item === undefined) return;\r\n\r\n\t\t\tvar temp = templateParser(template, item);\r\n\t\t\tvar referenceNode = exist[index];\r\n\r\n\t\t\t// Create\r\n\t\t\tif(options === 'insertAfter'){\r\n\t\t\t\tvar index = index !== 0 ? index - 1 : (exist.length - 1);\r\n\t\t\t\tvar referenceNode = exist[index];\r\n\r\n\t\t\t\tif(!referenceNode){\r\n\t\t\t\t\tif(!list.$virtual || list.length === 0){\r\n\t\t\t\t\t\tparentNode.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treferenceNode.insertAdjacentElement('afterEnd', temp);\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\r\n\t\t\t\t// Refresh virtual scroll\r\n\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t}\r\n\t\t\telse if(options === 'append'){\r\n\t\t\t\tif(list.$virtual && list.length !== 0){\r\n\t\t\t\t\texist[index-1].insertAdjacentElement('afterEnd', temp);\r\n\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\r\n\t\t\t\t\t// Refresh virtual scroll\r\n\t\t\t\t\tlist.$virtual.refresh();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparentNode.appendChild(temp);\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t\telse if(options === 'insertBefore'){\r\n\t\t\t\texist[0].insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\r\n\t\t\t\t// Refresh virtual scroll\r\n\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar _single_zero = [0]; // For arguments\r\n\t\tvar _double_zero = [0,0]; // For arguments\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = undefined;\r\n\t\t\t\t\tvar lastLength = this.length;\r\n\r\n\t\t\t\t\tif(name === 'move'){\r\n\t\t\t\t\t\tvar from = arguments[0];\r\n\t\t\t\t\t\tvar to = arguments[1];\r\n\t\t\t\t\t\tif(from === to) return;\r\n\t\t\t\t\t\tvar count = arguments[2] || 1;\r\n\t\t\t\t\t\tprocessElement(from, 'move', to, count);\r\n\r\n\t\t\t\t\t\tvar temp = Array.prototype.splice.apply(this, [from, count]);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, [to, 0].concat(temp));\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(name === 'swap'){\r\n\t\t\t\t\t\tvar i = arguments[0];\r\n\t\t\t\t\t\tvar o = arguments[1];\r\n\t\t\t\t\t\tif(i === o) return;\r\n\t\t\t\t\t\tprocessElement(i, 'swap', o);\r\n\t\t\t\t\t\tvar temp = this[i];\r\n\t\t\t\t\t\tthis[i] = this[o];\r\n\t\t\t\t\t\tthis[o] = temp;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === '$replace'){\r\n\t\t\t\t\t\t// Check if appending\r\n\t\t\t\t\t\tif(arguments[0].length >= lastLength && lastLength !== 0){\r\n\t\t\t\t\t\t\tvar matchLeft = lastLength;\r\n\t\t\t\t\t\t\tvar ref = arguments[0];\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < lastLength; i++) {\r\n\t\t\t\t\t\t\t\tif(ref[i] === this[i]){\r\n\t\t\t\t\t\t\t\t\tmatchLeft--;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(matchLeft === 0){\r\n\t\t\t\t\t\t\t\tif(ref.length === lastLength) return;\r\n\r\n\t\t\t\t\t\t\t\tArray.prototype.splice.apply(this, [lastLength, 0].concat(arguments[0].slice(lastLength)));\r\n\t\t\t\t\t\t\t\tprocessElement(lastLength, 'hardRefresh');\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(lastLength !== 0){\r\n\t\t\t\t\t\t\tArray.prototype.splice.apply(this, _single_zero);\r\n\t\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, _double_zero.concat(arguments[0]));\r\n\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice' && arguments[0] === 0 && arguments[1] === undefined){\r\n\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\treturn Array.prototype.splice.apply(this, arguments);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(this.length, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'push')\r\n\t\t\t\t\t\tprocessElement(lastLength, 'append');\r\n\r\n\t\t\t\t\telse if(name === 'shift')\r\n\t\t\t\t\t\tprocessElement(0, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments[0] === 0 && arguments[1] === undefined)\r\n\t\t\t\t\t\t\treturn temp;\r\n\r\n\t\t\t\t\t\t// Removing data\r\n\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\tif(real < 0) real = lastLength + real;\r\n\r\n\t\t\t\t\t\tvar limit = arguments[1];\r\n\t\t\t\t\t\tif(!limit && limit !== 0) limit = this.length;\r\n\r\n\t\t\t\t\t\tfor (var i = limit - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tprocessElement(real + i, 'remove');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(arguments.length >= 3){ // Inserting data\r\n\t\t\t\t\t\t\tlimit = arguments.length - 2;\r\n\t\t\t\t\t\t\tfor (var i = 0; i < limit; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(real + i, 'insertAfter');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift')\r\n\t\t\t\t\t\tprocessElement(0, 'insertBefore');\r\n\r\n\t\t\t\t\telse if(name === 'softRefresh')\r\n\t\t\t\t\t\tprocessElement(arguments[0], 'update', arguments[1]);\r\n\r\n\t\t\t\t\telse if(name === 'hardRefresh')\r\n\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(parentNode && parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\tdelete list.$virtual;\r\n\t\t\tlist.$virtual = {};\r\n\r\n\t\t\t// Transfer virtual DOM\r\n\t\t\tlist.$virtual.dom = tempDOM;\r\n\r\n\t\t\tparentNode.replaceChild(template.html, parentNode.children[1]);\r\n\t\t\tsf.internal.virtual_scroll.handle(list, targetNode, parentNode);\r\n\t\t\ttemplate.html.remove();\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\r\n\t\tObject.defineProperty(list, 'getElement', {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(index){\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tif(index < list.$virtual.DOMCursor)\r\n\t\t\t\t\t\treturn list.$virtual.dom.children[index];\r\n\r\n\t\t\t\t\tindex -= list.$virtual.DOMCursor;\r\n\t\t\t\t\tvar childElement = parentNode.childElementCount - 2;\r\n\t\t\t\t\tif(index <= childElement)\r\n\t\t\t\t\t\treturn parentNode.children[index + 1];\r\n\r\n\t\t\t\t\treturn list.$virtual.dom.children[index - childElement + list.$virtual.DOMCursor];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn parentNode.children[index];\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvar loopParser = function(name, template, script, targetNode, parentNode){\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\r\n\t\tif(!self.root[name])\r\n\t\t\treturn console.error(\"Can't parse element because model for '\"+name+\"' was not found\", template);\r\n\r\n\t\tvar items = self.root[name][method[1]];\r\n\t\tif(items === undefined){\r\n\t\t\tconsole.error(\"Can't bind array to `\"+method[1]+\"` because undefined property in model `\"+name+\"`\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttemplate.setAttribute('sf-bind-list', method[1]);\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = template;\r\n\t\ttemplate = self.extractPreprocess(template, mask, name);\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tvar tempDOM = document.createElement('div');\r\n\t\t\tvar modelRef = self.root[name];\r\n\t\t\t\r\n\t\t\tfor(var i in items){\r\n\t\t\t\ttempDOM.appendChild(templateParser(template, items[i]));\r\n\t\t\t}\r\n\r\n\t\t\t// Enable element binding\r\n\t\t\tif(modelRef.sf$bindedKey === undefined)\r\n\t\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\t\tif(modelRef.sf$bindedKey[method[1]] === undefined)\r\n\t\t\t\tmodelRef.sf$bindedKey[method[1]] = null;\r\n\r\n\t\t\tObject.defineProperty(modelRef, method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tif(val.length === 0)\r\n\t\t\t\t\t\treturn items.splice(0);\r\n\t\t\t\t\treturn items.$replace(val);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tbindArray(template, items, mask, name, method[1], targetNode, parentNode, tempDOM);\r\n\r\n\t\t\t// Output to real DOM if not being used for virtual list\r\n\t\t\tif(items.$virtual === undefined){\r\n\t\t\t\tvar children = tempDOM.children;\r\n\t\t\t\tfor (var i = 0; i < children.length; i++) {\r\n\t\t\t\t\tparentNode.appendChild(children[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttempDOM.remove();\r\n\t\t\t\ttempDOM = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar inputBoundFunction = function(e){\r\n\t\tself.root[e.target['sf-model']][e.target['sf-bounded']] = e.target.value;\r\n\t};\r\n\r\n\tvar bindInput = function(targetNode){\r\n\t\tvar temp = $('input[sf-bound]', targetNode);\r\n\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar model = sf.controller.modelName(element);\r\n\t\t\tif(!model) return;\r\n\r\n\t\t\tvar whichVar = element.getAttribute('sf-bound');\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(typeof self.root[model][whichVar] === undefined){\r\n\t\t\t\tconsole.error('Cannot get reference for self.root[\"' + model + '\"][\"' + whichVar+'\"]');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement['sf-bounded'] = whichVar;\r\n\t\t\telement['sf-model'] = model;\r\n\t\t\telement.setAttribute('sf-bounded', '');\r\n\t\t\telement.removeAttribute('sf-bound');\r\n\r\n\t\t\t// Bound value change\r\n\t\t\tif(element.tagName === 'INPUT' || element.tagName === 'TEXTAREA')\r\n\t\t\t\t$.on(element, 'keyup', inputBoundFunction);\r\n\r\n\t\t\telse\r\n\t\t\t\t$.on(element, 'change', inputBoundFunction);\r\n\t\t}\r\n\t}\r\n\r\n\tvar alreadyInitialized = false;\r\n\tself.init = function(targetNode, queued){\r\n\t\tif(alreadyInitialized && !targetNode) return;\r\n\t\talreadyInitialized = true;\r\n\t\tsetTimeout(function(){\r\n\t\t\talreadyInitialized = false;\r\n\t\t}, 50);\r\n\r\n\t\tif(!targetNode) targetNode = document.body;\r\n\t\tself.parsePreprocess(queued || self.queuePreprocess(targetNode), queued);\r\n\t\tbindInput(targetNode);\r\n\r\n\t\tvar temp = $('[sf-repeat-this]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar parent = element.parentElement;\r\n\r\n\t\t\tif(queued !== undefined)\r\n\t\t\t\telement.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(element.parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\t\tvar ceiling = document.createElement(element.tagName);\r\n\t\t\t\tceiling.classList.add('virtual-spacer');\r\n\t\t\t\tvar floor = ceiling.cloneNode(true);\r\n\r\n\t\t\t\tceiling.classList.add('ceiling');\r\n\t\t\t\t//ceiling.style.transform = 'scaleY(0)';\r\n\t\t\t\telement.parentNode.insertAdjacentElement('afterBegin', ceiling); // prepend\r\n\r\n\t\t\t\tfloor.classList.add('floor');\r\n\t\t\t\t//floor.style.transform = 'scaleY(0)';\r\n\t\t\t\telement.parentNode.insertAdjacentElement('beforeEnd', floor); // append\r\n\r\n\t\t\t\t// His total scrollHeight\r\n\t\t\t\tvar styles = window.getComputedStyle(element);\r\n\t\t\t\tvar absHeight = parseFloat(styles['marginTop']) + parseFloat(styles['marginBottom']);\r\n\t\t\t\tstyles = null;\r\n\r\n\t\t\t\t// Element height + margin\r\n\t\t\t\tabsHeight = Math.ceil(element.offsetHeight + absHeight);\r\n\t\t\t}\r\n\r\n\t\t\tvar after = element.nextElementSibling;\r\n\t\t\tif(after === null || element === after)\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = element.previousElementSibling;\r\n\t\t\tif(before === null || element === before)\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = element.getAttribute('sf-repeat-this');\r\n\t\t\telement.removeAttribute('sf-repeat-this');\r\n\t\t\tvar controller = sf.controller.modelName(element);\r\n\r\n\t\t\t// Check if the element was already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(element.outerHTML))\r\n\t\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\t\tloopParser(controller, element, script, targetNode, element.parentNode);\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t}\r\n\r\n\t// Reset model properties\r\n\t// Don't call if the removed element is TEXT or #comment\r\n\tfunction DOMNodeRemoved(element){\r\n\t\tvar temp = $('[sf-controller]', element);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tremoveModelBinding(temp[i].getAttribute('sf-controller'));\r\n\t\t}\r\n\r\n\t\tif(element.hasAttribute('sf-controller') === false)\r\n\t\t\treturn;\r\n\r\n\t\tremoveModelBinding(element.getAttribute('sf-controller'));\r\n\t}\r\n\r\n\tsf(function(){\r\n\t\tvar everyRemovedNodes = function(nodes){\r\n\t\t\tvar tagName = nodes.nodeName;\r\n\t\t\tif(tagName === 'TEXT' || tagName === '#text' || tagName === '#comment') return;\r\n\r\n\t\t\tDOMNodeRemoved(nodes);\r\n\t\t}\r\n\r\n\t\tif(typeof MutationObserver === 'function' && MutationObserver.prototype.observe){\r\n\t\t\tvar everyRecords = function(record){\r\n\t\t\t\trecord.removedNodes.forEach(everyRemovedNodes);\r\n\t\t\t}\r\n\r\n\t\t\tvar observer = new MutationObserver(function(records){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\trecords.forEach(everyRecords);\r\n\t\t\t});\r\n\r\n\t\t\tobserver.observe(document.body, { childList: true, subtree: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.body.addEventListener('DOMNodeRemoved', function(e){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\teveryRemovedNodes(e.target);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tvar removeModelBinding = function(modelName){\r\n\t\tvar ref = self.root[modelName];\r\n\t\tif(ref === undefined)\r\n\t\t\treturn;\r\n\r\n\t\tvar bindedKey = ref.sf$bindedKey;\r\n\t\tvar temp = null;\r\n\t\tfor(var key in bindedKey){\r\n\t\t\tdelete bindedKey[key];\r\n\r\n\t\t\tif(ref[key] === undefined || ref[key] === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(ref[key].constructor === String ||\r\n\t\t\t\tref[key].constructor === Number ||\r\n\t\t\t\tref[key].constructor === Boolean\r\n\t\t\t){/* Ok */}\r\n\r\n\t\t\telse if(ref[key].constructor === Array){\r\n\t\t\t\tif(ref[key].$virtual){\r\n\t\t\t\t\tref[key].$virtual.destroy();\r\n\t\t\t\t\tdelete ref[key].$virtual;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset property without copying the array\r\n\t\t\t\ttemp = ref[key].splice('obtain');\r\n\t\t\t\tdelete ref[key];\r\n\t\t\t\tref[key] = temp;\r\n\t\t\t}\r\n\t\t\telse continue;\r\n\r\n\t\t\tif(Object.getOwnPropertyDescriptor(ref, key) === undefined)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Reconfigure / Remove property descriptor\r\n\t\t\tvar temp = ref[key];\r\n\t\t\tdelete ref[key];\r\n\t\t\tref[key] = temp;\r\n\t\t}\r\n\t}\r\n\r\n\tvar dcBracket = /{{[\\s\\S]*?}}/;\r\n\tvar bindObject = function(element, modelRef, propertyName, which){\r\n\t\tif(!(element instanceof Node))\r\n\t\t\telement = element[0];\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = element;\r\n\r\n\t\t// First initialization\r\n\t\telement.setAttribute('sf-bind-key', propertyName);\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\r\n\t\t// Cache attribute content\r\n\t\tif(which === 'attr' || !which){\r\n\t\t\tvar attrs = {};\r\n\r\n\t\t\tfor (var i = 0; i < element.attributes.length; i++) {\r\n\t\t\t\tvar attr = element.attributes[i].name;\r\n\r\n\t\t\t\t// Check if it has a bracket\r\n\t\t\t\tif(dcBracket.test(element.getAttribute(attr)) === false)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tattrs[attr] = element.getAttribute(attr);\r\n\t\t\t\telement.removeAttribute(attr);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Cache html content\r\n\t\tif(which === 'html' || !which)\r\n\t\t\tvar htmlClone = element.cloneNode(true).innerHTML;\r\n\r\n\t\tvar onChanges = function(){\r\n\t\t\tif(which === 'attr' || !which){\r\n\t\t\t\tfor(var name in attrs){\r\n\t\t\t\t\tif(attrs[name].indexOf(propertyName) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tvar temp = dataParser(attrs[name], modelRef, false, modelName);\r\n\t\t\t\t\tif(name === 'value')\r\n\t\t\t\t\t\telement.value = temp;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\telement.setAttribute(name, temp);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(which === 'html' || !which){\r\n\t\t\t\tvar temp = uniqueDataParser(htmlClone, modelRef, false, modelName);\r\n\t\t\t\ttemp = dataParser(temp, modelRef, false, modelName);\r\n\t\t\t\telement.textContent = '';\r\n\t\t\t\telement.insertAdjacentHTML('afterBegin', temp);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif(modelRef[propertyName] === undefined)\r\n\t\t\tthrow \"Property '\"+propertyName+\"' was not found on '\"+modelName+\"' model\";\r\n\r\n\t\t// Enable multiple element binding\r\n\t\tif(modelRef.sf$bindedKey === undefined)\r\n\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\tif(modelRef.sf$bindedKey[propertyName] !== undefined){\r\n\t\t\tmodelRef.sf$bindedKey[propertyName].push(onChanges);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar objValue = modelRef[propertyName]; // Object value\r\n\t\tObject.defineProperty(modelRef, propertyName, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\t\t\tget:function(){\r\n\t\t\t\treturn objValue;\r\n\t\t\t},\r\n\t\t\tset:function(val){\r\n\t\t\t\tobjValue = val;\r\n\r\n\t\t\t\tvar ref = modelRef.sf$bindedKey[propertyName];\r\n\t\t\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\t\t\tref[i]();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn objValue;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tmodelRef.sf$bindedKey[propertyName] = [onChanges];\r\n\t}\r\n\r\n\tself.bindElement = function(element, which){\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar html = element.outerHTML;\r\n\r\n\t\t// Check if the child element was already bound to prevent vulnerability\r\n\t\tif(/sf-bind-key|sf-bind-list/.test(html)){\r\n\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(which === 'attr')\r\n\t\t\thtml = html.replace(element.innerHTML, '');\r\n\r\n\t\tvar brackets = /{{([\\s\\S]*?)}}/g;\r\n\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(model);\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(model[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\t\tvar s1, s2 = null;\r\n\t\twhile((s1 = brackets.exec(html)) !== null){\r\n\t\t\twhile ((s2 = scopeMask.exec(s1[1])) !== null) {\r\n\t\t\t\tbindObject(element, model, s2[1], which);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.extractPreprocess = function(targetNode, mask, name){\r\n\t\tvar copy = targetNode.outerHTML;\r\n\r\n\t\t// Mask the referenced item\r\n\t\tcopy = copy.split('#'+mask).join('_model_');\r\n\r\n\t\t// Extract data to be parsed\r\n\t\tcopy = uniqueDataParser(copy, null, mask, name, '#noEval');\r\n\t\tvar preParsed = copy[1];\r\n\t\tcopy = dataParser(copy[0], null, mask, name, '#noEval', preParsed);\r\n\r\n\t\t// Build element and start addressing\r\n\t\tcopy = $.parseElement(copy)[0];\r\n\t\tvar nodes = self.queuePreprocess(copy, true).reverse();\r\n\t\tvar addressed = [];\r\n\r\n\t\tfunction addressAttributes(currentNode){\r\n\t\t\tvar attrs = currentNode.attributes;\r\n\t\t\tvar keys = [];\r\n\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\tvar found = attrs[a].value.split('{{%=');\r\n\t\t\t\tif(found.length !== 1){\r\n\t\t\t\t\tvar key = {\r\n\t\t\t\t\t\tdirect: false,\r\n\t\t\t\t\t\tname:attrs[a].name\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif(found[0] === '' && found.length === 2)\r\n\t\t\t\t\t\tkey.direct = Number(found[1]) || false;\r\n\r\n\t\t\t\t\tkeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn keys;\r\n\t\t}\r\n\r\n\t\tvar currentElement = addressAttributes(copy);\r\n\t\tif(currentElement.length !== 0)\r\n\t\t\taddressed.push({\r\n\t\t\t\tnodeType:1,\r\n\t\t\t\taddress:[0],\r\n\t\t\t\tattributes:currentElement\r\n\t\t\t});\r\n\r\n\t\tfor (var i = 0; i < nodes.length; i++) {\r\n\t\t\tvar temp = {\r\n\t\t\t\tnodeType:nodes[i].nodeType\r\n\t\t\t};\r\n\r\n\t\t\tif(temp.nodeType === 1){ // Element\r\n\t\t\t\ttemp.attributes = addressAttributes(nodes[i]);\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\telse if(temp.nodeType === 3){ // Text node\r\n\t\t\t\tvar innerHTML = nodes[i].textContent;\r\n\t\t\t\ttemp.direct = false;\r\n\t\t\t\ttemp.indexes = [];\r\n\r\n\t\t\t\tinnerHTML.replace(/{{%%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\ttemp.indexes.push(match);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(temp.indexes.length !== 0){\r\n\t\t\t\t\ttemp.indexes = temp.indexes.map(Number);\r\n\r\n\t\t\t\t\tinnerHTML = innerHTML.split(/{{%%=[0-9]+/gm);\r\n\t\t\t\t\tfor (var a = 0; a < innerHTML.length; a++) {\r\n\t\t\t\t\t\tinnerHTML[a] = trimIndentation(innerHTML[a]).trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodes[i].textContent = innerHTML.shift();\r\n\r\n\t\t\t\t\tvar parent = nodes[i].parentNode;\r\n\t\t\t\t\tvar nextSibling = nodes[i].nextSibling;\r\n\r\n\t\t\t\t\tvar addressStart = null;\r\n\t\t\t\t\tif(temp.indexes.length !== 0 && nodes[i].textContent.length !== 0)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i], true);\r\n\t\t\t\t\t\t// parent.insertBefore(document.createComment('sf_parse_start'), nextSibling);\r\n\r\n\t\t\t\t\tvar commentFlag = [];\r\n\t\t\t\t\tfor(var a = 0; a < temp.indexes.length; a++){\r\n\t\t\t\t\t\tvar flag = document.createComment('');\r\n\t\t\t\t\t\tparent.insertBefore(flag, nextSibling);\r\n\t\t\t\t\t\tcommentFlag.push({\r\n\t\t\t\t\t\t\tnodeType:-1,\r\n\t\t\t\t\t\t\tparse_index:temp.indexes[a],\r\n\t\t\t\t\t\t\tstartFlag:addressStart,\r\n\t\t\t\t\t\t\taddress:$.getSelector(flag, true)\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(innerHTML[a]){\r\n\t\t\t\t\t\t\tvar textNode = document.createTextNode(innerHTML[a]);\r\n\t\t\t\t\t\t\tparent.insertBefore(textNode, nextSibling);\r\n\r\n\t\t\t\t\t\t\t// Get new start flag\r\n\t\t\t\t\t\t\tif(a + 1 < temp.indexes.length)\r\n\t\t\t\t\t\t\t\taddressStart = $.getSelector(textNode, true);\r\n\t\t\t\t\t\t\t\t// if(nodes[i].previousSibling.nodeType !== 8 || nodes[i].previousSibling.textContent.indexOf('sf_parse_') === -1)\r\n\t\t\t\t\t\t\t\t\t// parent.insertBefore(document.createComment('sf_parse_start'), nextSibling);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\taddressed = addressed.concat(commentFlag);\r\n\t\t\t\t\tif(nodes[i].textContent === ''){\r\n\t\t\t\t\t\tnodes[i].remove();\r\n\t\t\t\t\t\tfor (var a = 0; a < commentFlag.length; a++) {\r\n\t\t\t\t\t\t\tvar ref = commentFlag[a].address;\r\n\t\t\t\t\t\t\tref[ref.length - 1]--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(nodes[i].textContent.search(/{{%=[0-9]+/) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t\t\taddressed.push(temp);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tdelete temp.indexes;\r\n\t\t\t\t\tinnerHTML = nodes[i].parentNode.innerHTML.split('{{%=');\r\n\r\n\t\t\t\t\tif(innerHTML[0] === '' && innerHTML.length === 2)\r\n\t\t\t\t\t\ttemp.direct = Number(innerHTML[1]) || false;\r\n\t\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\taddressed.push(temp);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\thtml:copy,\r\n\t\t\tparse:preParsed,\r\n\t\t\taddresses:addressed\r\n\t\t}\r\n\t}\r\n\r\n\tvar excludes = ['HTML','HEAD','STYLE','LINK','META','SCRIPT','OBJECT','IFRAME'];\r\n\tself.queuePreprocess = function(targetNode, extracting){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = childNodes.length - 1; i >= 0; i--) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\r\n\t\t\tif(extracting === undefined && excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\r\n\t\t\t\t// Skip element and it's childs that already bound to prevent vulnerability\r\n\t\t\t\tif(attrs['sf-bind-key'] || attrs['sf-repeat-this'] || attrs['sf-bind-list']) continue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tif(extracting === undefined)\r\n\t\t\t\t\t\t\tcurrentNode.setAttribute('sf-preprocess', 'attronly');\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = temp.concat(self.queuePreprocess(currentNode, extracting));\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tcurrentNode.textContent = currentNode.textContent;\r\n\r\n\t\t\t\tif(currentNode.textContent.length === 0){\r\n\t\t\t\t\tcurrentNode.remove();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tif(extracting === undefined){\r\n\t\t\t\t\t\tcurrentNode.parentNode.setAttribute('sf-preprocess', '');\r\n\r\n\t\t\t\t\t\t// Reset Siblings\r\n\t\t\t\t\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\t\t\t\t\ttemp[a].removeAttribute('sf-preprocess');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttemp.push(currentNode.parentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn temp;\r\n\t}\r\n\r\n\tself.parsePreprocess = function(nodes, queued){\r\n\t\tfor (var a = 0; a < nodes.length; a++) {\r\n\t\t\t// Get reference for debugging\r\n\t\t\tvar current = processingElement = nodes[a];\r\n\r\n\t\t\tvar model = sf.controller.modelName(current);\r\n\t\t\tcurrent.removeAttribute('sf-preprocess');\r\n\r\n\t\t\tif(queued !== undefined)\r\n\t\t\t\tcurrent.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(!self.root[model])\r\n\t\t\t\treturn console.error(\"Can't parse element because model for '\"+model+\"' was not found\", current);\r\n\r\n\t\t\tvar modelRef = self.root[model];\r\n\r\n\t\t\t// Double check if the child element already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(current.innerHTML)){\r\n\t\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\t\tconsole.log(processingElement.cloneNode(true));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(current.hasAttribute('sf-bind'))\r\n\t\t\t\tself.bindElement(current, current.getAttribute('sf-bind'));\r\n\r\n\t\t\t// Avoid editing the outerHTML because it will remove the bind\r\n\t\t\tvar temp = uniqueDataParser(current.innerHTML, self.root[model], false, model);\r\n\t\t\tcurrent.innerHTML = dataParser(temp, self.root[model], false, model);\r\n\r\n\t\t\tvar attrs = nodes[a].attributes;\r\n\t\t\tfor (var i = 0; i < attrs.length; i++) {\r\n\t\t\t\tif(attrs[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\tvar attr = attrs[i];\r\n\t\t\t\t\tattr.value = dataParser(attr.value, self.root[model], false, model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initBindingInformation(modelRef){\r\n\t\tif(modelRef.sf$bindedKey !== undefined)\r\n\t\t\treturn;\r\n\r\n\t\t// Element binding data\r\n\t\tObject.defineProperty(modelRef, 'sf$bindedKey', {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable:false,\r\n\t\t\twritable:true,\r\n\t\t\tvalue:{}\r\n\t\t});\r\n\t}\r\n})();","sf.router = new function(){\r\n\tvar self = this;\r\n\tself.loading = false;\r\n\tself.enabled = false;\r\n\tself.pauseRenderOnTransition = false;\r\n\tself.currentPage = [];\r\n\tvar initialized = false;\r\n\tvar lazyRouting = false;\r\n\tvar currentRouterURL = '';\r\n\r\n\t// Should be called if not using lazy page load\r\n\tself.init = function(targetNode){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init();\r\n\t\t\t});\r\n\r\n\t\t// Run 'before' event for new page view\r\n\t\tvar temp = $('[sf-controller], [sf-page]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tif(temp[i].getAttribute('sf-controller'))\r\n\t\t\t\tsf.controller.run(temp[i].getAttribute('sf-controller'));\r\n\t\t\t\r\n\t\t\tif(temp[i].getAttribute('sf-page')){\r\n\t\t\t\tvar name = temp[i].getAttribute('sf-page');\r\n\t\t\t\tbeforeEvent(name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinitialized = true;\r\n\t\tcurrentRouterURL = window.location.pathname;\r\n\t}\r\n\r\n\tfunction popstateListener(event) {\r\n\t\t// Don't continue if the last routing was error\r\n\t\tif(routingError){\r\n\t\t\troutingError = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\troutingBack = true;\r\n\t\tself.goto(window.location.pathname);\r\n\t}\r\n\r\n\tself.enable = function(status){\r\n\t\tif(status === undefined) status = true;\r\n\t\tif(self.enabled === status) return;\r\n\t\tself.enabled = status;\r\n\r\n\t\tif(status === true){\r\n\t\t\t// Create listener for link click\r\n\t\t\t$.on(document.body, 'click', 'a[href]', self.load);\r\n\r\n\t\t\t// Create listener when navigate backward\r\n\t\t\twindow.addEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$.off(document.body, 'click', 'a[href]', self.load);\r\n\t\t\twindow.removeEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t}\r\n\r\n\tvar before = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.before = function(name, func, index){\r\n\t\tif(!before[name])\r\n\t\t\tbefore[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(before[name].indexOf(func) === -1)\r\n\t\t\t\tbefore[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tbefore[name][index] = func;\r\n\t}\r\n\r\n\tvar after = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.after = function(name, func, index){\r\n\t\tif(!after[name])\r\n\t\t\tafter[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(after[name].indexOf(func) === -1)\r\n\t\t\t\tafter[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tafter[name][index] = func;\r\n\t}\r\n\r\n\tvar root_ = function(scope){\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.model.root[scope] = {};\r\n\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.controller.run(scope);\r\n\t\t\r\n\t\treturn sf.model.root[scope];\r\n\t}\r\n\r\n\t// Running 'before' new page going to be displayed\r\n\tvar beforeEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.push(name);\r\n\r\n\t\tif(before[name]){\r\n\t\t\tfor (var i = 0; i < before[name].length; i++) {\r\n\t\t\t\tbefore[name][i](root_);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Running 'after' old page going to be removed\r\n\tvar afterEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.splice(self.currentPage.indexOf(name), 1);\r\n\r\n\t\tif(after[name]){\r\n\t\t\tfor (var i = 0; i < after[name].length; i++) {\r\n\t\t\t\tafter[name][i](root_);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar onEvent = {\r\n\t\t'loading':[],\r\n\t\t'loaded':[],\r\n\t\t'special':[],\r\n\t\t'error':[]\r\n\t};\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\tself.lazyViewPoint = {};\r\n\t/*\r\n\t\t{\r\n\t\t\toldURlPattern:{\r\n\t\t\t\tnewURLPattern:'.viewPoint'\r\n\t\t\t}\r\n\t\t}\r\n\t*/\r\n\r\n\tself.load = function(ev){\r\n\t\tif(self.enabled !== true) return;\r\n\r\n\t\tvar elem = ev.target;\r\n\t\tif(!elem.href) return;\r\n\r\n\t\tif(!history.pushState || elem.hasAttribute('sf-router-ignore'))\r\n\t\t\treturn;\r\n\r\n\t\t// Make sure it's from current origin\r\n\t\tvar path = elem.href.replace(window.location.origin, '');\r\n\t\tif(path.indexOf('//') !== -1)\r\n\t\t\treturn;\r\n\r\n\t\tev.preventDefault()\r\n\t\treturn !self.goto(path);\r\n\t}\r\n\r\n\tvar RouterLoading = false;\r\n\tvar routingBack = false;\r\n\tvar routingError = false;\r\n\tself.goto = function(path, data, method){\r\n\t\tif(!method) method = 'GET';\r\n        else method = method.toUpperCase();\r\n\r\n\t\tif(!data) data = {};\r\n\r\n\t\tfor (var i = 0; i < onEvent['loading'].length; i++) {\r\n\t\t\tif(onEvent['loading'][i](path)) return;\r\n\t\t}\r\n\t\tvar oldPath = window.location.pathname;\r\n\t\tinitialized = false;\r\n\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\t\tRouterLoading = $.ajax({\r\n\t\t\turl:window.location.origin + path,\r\n\t\t\tmethod:method,\r\n            data:Object.assign(data, {\r\n                _scarlets:'.dynamic.'\r\n            }),\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\tif(initialized) return;\r\n\t\t\t\tlazyRouting = true;\r\n\r\n\t\t\t\t// Run 'loaded' event\r\n\t\t\t\tRouterLoading = false;\r\n\r\n\t\t\t\t// Find special data\r\n\t\t\t\tvar regex = RegExp('<!-- SF-Special:(.*?)-->'+sf.regex.avoidQuotes, 'gm');\r\n\t\t\t\tvar special = regex.exec(data);\r\n\t\t\t\tif(special && special.length !== 1){\r\n\t\t\t\t\tspecial = special[1].split('--|&>').join('-->');\r\n\t\t\t\t\tspecial = JSON.parse(special);\r\n\r\n\t\t\t\t\tif(!isEmptyObject(special)){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['special'].length; i++) {\r\n\t\t\t\t\t\t\tif(onEvent['special'][i](special)) return;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DOMReference = false;\r\n\t\t\t\tvar foundAction = function(ref){\r\n\t\t\t\t\tDOMReference = $.findOne(ref);\r\n\r\n\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\tvar last = $.findOne('[sf-page]', DOMReference);\r\n\t\t\t\t\tafterEvent(last ? last.getAttribute('sf-page') : '/');\r\n\r\n\t\t\t\t\t// Redefine title if exist\r\n\t\t\t\t\tif(special && special.title)\r\n\t\t\t\t\t\t$('head > title').innerHTML = special.title;\r\n\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tfor(var oldURL in self.lazyViewPoint){\r\n\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\tfor(var newURL in self.lazyViewPoint[oldURL]){\r\n\t\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\t\tfoundAction(self.lazyViewPoint[oldURL][newURL]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(found) break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When the view point was not found\r\n\t\t\t\tif(!found){\r\n\t\t\t\t\t// Use fallback if exist\r\n\t\t\t\t\tif(sf.router.lazyViewPoint[\"@default\"])\r\n\t\t\t\t\t\tfoundAction(sf.router.lazyViewPoint[\"@default\"]);\r\n\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\t\t\tonEvent['error'][i]('sf.router.lazyViewPoint[\"'+oldURL+'\"][\"'+newURL+'\"] was not found');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Run 'before' event for new page view\r\n\t\t\t\tif(!DOMReference) DOMReference = document.body;\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', 'none');\r\n\r\n\t\t\t\t// Let page script running first, then update the data binding\r\n\t\t\t\tDOMReference.innerHTML = data;\r\n\r\n\t\t\t\t// Parse the DOM data binding\r\n\t\t\t\tsf.model.init(DOMReference);\r\n\r\n\t\t\t\t// Init template to model binding\r\n\t\t\t\tvar temp = $('[sf-page]', DOMReference);\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tbeforeEvent(temp[i].getAttribute('sf-page'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', '');\r\n\r\n\t\t\t\trouterLoaded(currentRouterURL, path, DOMReference);\r\n\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tlazyRouting = false;\r\n\r\n\t\t\t\tcurrentRouterURL = path;\r\n\t\t\t\troutingError = false;\r\n\t\t\t},\r\n\t\t\terror:function(xhr, data){\r\n\t\t\t\troutingError = true;\r\n\t\t\t\tif(xhr.aborted) return;\r\n\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\tonEvent['error'][i](xhr.status, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Back on error\r\n\t\t\t\twindow.history.back();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!routingBack)\r\n\t\t\twindow.history.pushState(null, \"\", path);\r\n\r\n\t\troutingBack = false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Trigger loaded event\r\n\tfunction routerLoaded(currentRouterURL, path, data){\r\n\t\tfor (var i = 0; i < onEvent['loaded'].length; i++) {\r\n\t\t\tonEvent['loaded'][i](currentRouterURL, path, data);\r\n\t\t}\r\n\t}\r\n};","sf.internal.virtual_scroll = new function(){\r\n\tvar self = this;\r\n\tvar styleInitialized = false;\r\n\tvar scrollingByScript = false;\r\n\r\n\t// before and after\r\n\tself.prepareCount = 4; // 4, 8, 12, 16, ...\r\n\r\n\tself.handle = function(list, targetNode, parentNode){\r\n\t\tif(!styleInitialized){\r\n\t\t\tinitStyles();\r\n\t\t\tstyleInitialized = true;\r\n\t\t}\r\n\r\n\t\tlist.$virtual.elements = function(){\r\n\t\t\treturn obtainElements(list, parentNode);\r\n\t\t}\r\n\r\n\t\tlist.$virtual.dCursor = { // DOM Cursor\r\n\t\t\tceiling:parentNode.querySelector('.virtual-spacer.ceiling'),\r\n\t\t\tfloor:parentNode.querySelector('.virtual-spacer.floor')\r\n\t\t};\r\n\r\n\t\tlist.$virtual.bounding = {\r\n\t\t\tceiling:-1,\r\n\t\t\tfloor:0\r\n\t\t}\r\n\r\n\t\tlist.$virtual.vCursor = { // Virtual Cursor\r\n\t\t\tceiling:null, // for forward direction\r\n\t\t\tfloor:null // for backward direction\r\n\t\t}\r\n\r\n\t\tlist.$virtual.targetNode = parentNode;\r\n\t\tlist.$virtual.DOMCursor = 0; // cursor of first element in DOM tree as a cursor\r\n\r\n\t\tlist.$virtual.scrollHeight = \r\n\t\t\tlist.$virtual.dCursor.floor.offsetTop - \r\n\t\t\tlist.$virtual.dCursor.ceiling.offsetTop;\r\n\r\n\t\tvar scroller = null;\r\n\t\tlist.$virtual.destroy = function(){\r\n\t\t\t$.off(scroller, 'scroll');\r\n\t\t\t$.off(parentNode, 'mousedown mouseup');\r\n\t\t\tlist.$virtual.dom.innerHTML = '';\r\n\t\t\toffElementResize(parentNode);\r\n\t\t\tdelete list.$virtual;\r\n\t\t}\r\n\r\n\t\tlist.$virtual.resetViewport = function(){\r\n\t\t\tlist.$virtual.visibleLength = Math.floor(scroller.clientHeight / list.$virtual.scrollHeight);\r\n\t\t\tlist.$virtual.preparedLength = list.$virtual.visibleLength + self.prepareCount * 2;\r\n\t\t}\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tscroller = parentNode;\r\n\r\n\t\t\tvar length = parentNode.getAttribute('scroll-parent-index') || 0;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tscroller = scroller.parentElement;\r\n\t\t\t}\r\n\r\n\t\t\tlist.$virtual.resetViewport();\r\n\r\n\t\t\tif(parentNode.classList.contains('sf-list-dynamic'))\r\n\t\t\t\tdynamicHeight(list, targetNode, parentNode, scroller);\r\n\t\t\telse\r\n\t\t\t\tstaticHeight(list, targetNode, parentNode, scroller);\r\n\t\t}, 500);\r\n\t}\r\n\r\n\t// Recommended for a list that have different element height\r\n\tfunction dynamicHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\t// Insert some element until reach visible height\r\n\t\tfillViewport();\r\n\r\n\t\tvirtual.visibleLength = parentNode.childElementCount - 2;\r\n\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\tvar temp = vCursor.floor;\r\n\t\t\tif(temp === null) break;\r\n\r\n\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t}\r\n\t\tvirtual.DOMCursor = 0;\r\n\r\n\t\tvar ceilingHeight = 0;\r\n\t\tvar floorHeight = 0;\r\n\t\tfunction previousCeiling(){\r\n\t\t\tvar temp = null;\r\n\t\t\tvar resetCeiling = false;\r\n\r\n\t\t\t// Add some element on the ceiling\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\ttemp = virtual.dom.lastElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.ceiling = temp.previousElementSibling;\r\n\t\t\t\tvirtual.DOMCursor--;\r\n\r\n\t\t\t\tceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tif(ceilingHeight > 0)\r\n\t\t\t\t\tceilingHeight -= getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(virtual.DOMCursor < self.prepareCount && !resetCeiling){\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\tresetCeiling = true;\r\n\t\t\t\t\ttemp = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(ceilingHeight < 0 || temp === null)\r\n\t\t\t\tceilingHeight = 0;\r\n\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\t// Remove some element on the floor\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = floor.previousElementSibling;\r\n\t\t\t\tfloorHeight += getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tvCursor.floor = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.floor === null)\r\n\t\t\t\tvCursor.ceiling = virtual.dom.lastElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tfunction fillViewport(){\r\n\t\t\t// Insert some element depend on prepared length\r\n\t\t\tvar length = virtual.preparedLength - (parentNode.childElementCount - 2);\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\ttemp = virtual.dom.firstElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction nextFloor(){\r\n\t\t\tvar temp = null;\r\n\t\t\tfillViewport();\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t// Add extra element based on prepare count\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\ttemp = vCursor.floor;\r\n\t\t\t\tif(temp === null) break;\r\n\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tif(floorHeight > 0)\r\n\t\t\t\t\tfloorHeight -= getAbsoluteHeight(temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(floorHeight < 0 || temp === null)\r\n\t\t\t\tfloorHeight = 0;\r\n\r\n\t\t\t// Remove some element on the ceiling\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\t\t\t\tceilingHeight += getAbsoluteHeight(temp);\r\n\t\t\t\tvirtual.DOMCursor++;\r\n\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\telse vCursor.ceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tvCursor.ceiling = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\t\trefreshScrollBounding(0, bounding, list, parentNode);\r\n\r\n\t\tvar updating = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript) return;\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tif(scroller.scrollTop < bounding.ceiling){\r\n\t\t\t\t// console.log('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tpreviousCeiling();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\telse if(scroller.scrollTop > bounding.floor){\r\n\t\t\t\t// console.log('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tnextFloor();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\t\tonElementResize(parentNode, function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t});\r\n\t}\r\n\r\n\t// Recommended for a list that have similar element height\r\n\tfunction staticHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\r\n\t\t// Insert visible element to dom tree\r\n\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\tif(virtual.dom.firstElementChild === null)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', virtual.dom.firstElementChild);\r\n\t\t}\r\n\r\n\t\tfunction refreshVirtualSpacer(cursor){\r\n\t\t\tif(cursor >= self.prepareCount){\r\n\t\t\t\tceiling.style.height = (cursor - self.prepareCount) * virtual.scrollHeight + 'px';\r\n\t\t\t\tfloor.style.height = (list.length - virtual.preparedLength - cursor) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tceiling.style.height = cursor * virtual.scrollHeight + 'px'; //'0px';\r\n\t\t\t\tvar count = (list.length - virtual.preparedLength);\r\n\t\t\t\tfloor.style.height = (count || 0) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\r\n\t\trefreshVirtualSpacer(0);\r\n\t\trefreshScrollBounding(self.prepareCount, bounding, list, parentNode);\r\n\t\tbounding.ceiling = -1;\r\n\r\n\t\tvirtual.offsetTo = function(index){\r\n\t\t\treturn index * virtual.scrollHeight + ceiling.offsetTop;\r\n\t\t}\r\n\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tvar fromCeiling = true;\r\n\t\tvar scrollFocused = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript || scroller.scrollTop >= bounding.ceiling && scroller.scrollTop <= bounding.floor){\r\n\t\t\t\t// Fix chrome scroll anchoring bugs when scrolling at corner\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tif(scroller.scrollTop === 0 || scroller.scrollTop === scroller.scrollHeight - scroller.clientHeight){\r\n\t\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar cursor = Math.floor(scroller.scrollTop / virtual.scrollHeight);\r\n\t\t\tif(cursor + virtual.preparedLength > list.length)\r\n\t\t\t\tcursor = list.length - virtual.preparedLength;\r\n\r\n\t\t\tif(fromCeiling){\r\n\t\t\t\tif(cursor < self.prepareCount*2)\r\n\t\t\t\t\tcursor -= self.prepareCount;\r\n\r\n\t\t\t\t// Fix chrome scroll anchoring bugs\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t}\r\n\t\t\t\tfromCeiling = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cursor < self.prepareCount){\r\n\t\t\t\tcursor = 0;\r\n\t\t\t\tfromCeiling = true;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tvar changes = cursor - virtual.DOMCursor;\r\n\t\t\tif(cursor + changes >= list.length)\r\n\t\t\t\tchanges = cursor + changes - list.length;\r\n\r\n\t\t\tif(changes === 0){ // This should be fixed to improve performance and future bugs\r\n\t\t\t\t//console.warn(\"No changes (The scroll bounding is not correct)\");\r\n\t\t\t\tupdating = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.DOMCursor = cursor;\r\n\r\n\t\t\t//console.log(cursor, changes);\r\n\r\n\t\t\t//console.log(cursor, changes, bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\t\t\tmoveElementCursor(changes, list);\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\t\t\trefreshScrollBounding(cursor, bounding, list, parentNode);\r\n\t\t\t//console.log('a', bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\r\n\t\t// For preventing scroll jump if scrolling over than viewport\r\n\t\tif(scroller === parentNode && navigator.userAgent.indexOf('Chrom') !== -1){\r\n\t\t\t$.on(parentNode, 'mousedown', function(){\r\n\t\t\t\tscrollFocused = true;\r\n\t\t\t});\r\n\t\t\t$.on(parentNode, 'mouseup', function(){\r\n\t\t\t\tscrollFocused = false;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction refreshScrollBounding(cursor, bounding, list, parentNode){\r\n\t\tvar temp = Math.floor(self.prepareCount / 2); // half of element preparation\r\n\t\tif(cursor < self.prepareCount){\r\n\t\t\tbounding.ceiling = -1;\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount * 2 + 1];\r\n\r\n\t\t\tif(bounding.floor !== undefined)\r\n\t\t\t\tbounding.floor = bounding.floor.offsetTop;\r\n\t\t\telse bounding.floor = parentNode.lastElementChild.offsetTop + 1000;\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if(parentNode.children[temp + 1] !== undefined)\r\n\t\t\t\tbounding.ceiling = parentNode.children[temp + 1].offsetTop; // -2 element\r\n\r\n\t\tif(list.$virtual.preparedLength !== undefined && cursor >= list.length - list.$virtual.preparedLength)\r\n\t\t\tbounding.floor = list.$virtual.dCursor.floor.offsetTop + list.$virtual.scrollHeight*2;\r\n\t\telse{\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount + 3].offsetTop; // +2 element\r\n\r\n\t\t\tif(parentNode.hasAttribute('scroll-reduce-floor')){\r\n\t\t\t\tbounding.floor -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t\tbounding.ceiling -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction moveElementCursor(changes, list){\r\n\t\tvar vDOM = list.$virtual.dom;\r\n\t\tvar vCursor = list.$virtual.vCursor;\r\n\t\tvar dCursor = list.$virtual.dCursor;\r\n\r\n\t\tif(changes > 0){ // forward\r\n\t\t\tvar ref = 0;\r\n\r\n\t\t\t// Select from virtual ceiling cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tref = vDOM.firstElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.ceiling.nextElementSibling;\r\n\t\t\t\tdCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the ceiling to vDom\r\n\t\t\tfor (var i = changes; i > 0; i--) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.ceiling === null){\r\n\t\t\t\t\tvCursor.ceiling = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('afterBegin', vCursor.ceiling);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t\t\tvCursor.ceiling = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\t\t}\r\n\t\telse if(changes < 0){ // backward\r\n\t\t\tvar ref = 0;\r\n\t\t\tchanges = -changes;\r\n\r\n\t\t\t// Select from virtual floor cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tref = vDOM.lastElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.floor.previousElementSibling;\r\n\t\t\t\tdCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the floor to vDom\r\n\t\t\tfor (var i = 0; i < changes; i++) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvCursor.floor = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('beforeEnd', vCursor.floor);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t\t\tvCursor.floor = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scrollTo(index, list, prepareCount, parentNode, scroller, refreshVirtualSpacer){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar reduce = 0;\r\n\r\n\t\tif(index >= list.length - virtual.preparedLength){\r\n\t\t\treduce -= prepareCount;\r\n\t\t\tindex = list.length - virtual.preparedLength;\r\n\t\t}\r\n\r\n\t\tif(index - virtual.DOMCursor === 0 || index >= list.length) return;\r\n\r\n\t\tscrollingByScript = true;\r\n\r\n\t\t// Already on DOM tree\r\n\t\tif((virtual.DOMCursor === 0 && index < prepareCount + prepareCount/2) ||\r\n\t\t\t(virtual.DOMCursor + prepareCount/2 > index\r\n\t\t\t&& virtual.DOMCursor + prepareCount < index))\r\n\t\t\tscroller.scrollTop = parentNode.children[index - virtual.DOMCursor + 1].offsetTop;\r\n\r\n\t\t// Move cursor\r\n\t\telse {\r\n\t\t\tvar temp = null;\r\n\t\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\t\tvar floor = virtual.dCursor.floor;\r\n\t\t\tvar vCursor = virtual.vCursor;\r\n\r\n\t\t\t// DOM tree to virtual DOM\r\n\t\t\tvar length = parentNode.childElementCount - 2;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\r\n\t\t\t\t\tif(i === length-1)\r\n\t\t\t\t\t\tvCursor.floor = temp;\r\n\t\t\t\t}\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(index >= prepareCount){\r\n\t\t\t\tif(index < list.length - virtual.preparedLength)\r\n\t\t\t\t\tindex -= prepareCount;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treduce = prepareCount - index;\r\n\t\t\t\tvirtual.DOMCursor = index = 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\r\n\t\t\t// Virtual DOM to DOM tree\r\n\t\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\t\ttemp = virtual.dom.children[index];\r\n\t\t\t\tif(temp === undefined) break;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t\tvirtual.DOMCursor = index;\r\n\r\n\t\t\tvCursor.floor = virtual.dom.children[index] || null;\r\n\t\t\tvCursor.ceiling = vCursor.floor ? vCursor.floor.previousElementSibling : null;\r\n\r\n\t\t\tif(refreshVirtualSpacer)\r\n\t\t\t\trefreshVirtualSpacer(index);\r\n\r\n\t\t\trefreshScrollBounding(index, virtual.bounding, list, parentNode);\r\n\r\n\t\t\ttemp = parentNode.children[prepareCount - reduce + 1];\r\n\t\r\n\t\t\tif(temp !== undefined)\r\n\t\t\t\tscroller.scrollTop = temp.offsetTop - scroller.offsetTop;\r\n\t\t}\r\n\r\n\t\tscrollingByScript = false;\r\n\t}\r\n\r\n\tfunction removeUserScrollFocus(parentNode){\r\n\t\tparentNode.style.overflow = 'hidden';\r\n\t\tsetTimeout(function(){\r\n\t\t\tparentNode.style.overflow = '';\r\n\t\t}, 50);\r\n\t}\r\n\r\n\tfunction getAbsoluteHeight(el){\r\n\t  var styles = window.getComputedStyle(el);\r\n\t  var margin = parseInt(styles['marginTop']) + parseInt(styles['marginBottom']);\r\n\t  return el.offsetHeight + margin || 0;\r\n\t}\r\n\r\n\tfunction obtainElements(list, parentNode){\r\n\t\tvar exist = [];\r\n\t\tvar temp = undefined;\r\n\r\n\t\tvar length = list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = parentNode.childElementCount - 2;\r\n\t\tfor (var i = 1; i <= length; i++) {\r\n\t\t\ttemp = parentNode.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = list.length - length - list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[list.$virtual.DOMCursor + i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\treturn exist;\r\n\t}\r\n\r\n\tfunction refresh(force, list, prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer){\r\n\t\tvar cursor = list.$virtual.DOMCursor;\r\n\t\tvar additionalScroll = 0;\r\n\r\n\t\t// Find nearest cursor for current view position\r\n\t\tif(force){\r\n\t\t\tvar i = -1;\r\n\t\t\tvar length = list.$virtual.preparedLength;\r\n\r\n\t\t\tdo{\r\n\t\t\t\ti++;\r\n\t\t\t} while(i < length && parentNode.children[i].offsetTop < scroller.scrollTop);\r\n\r\n\t\t\tcursor = cursor + i;\r\n\t\t\tif(cursor > 0) cursor -= 1;\r\n\r\n\t\t\tadditionalScroll = scroller.scrollTop - parentNode.children[i].offsetTop;\r\n\t\t}\r\n\r\n\t\t// Force move cursor if element in the DOM tree was overloaded\r\n\t\tif(force || parentNode.childElementCount - 2 > list.$virtual.preparedLength){\r\n\t\t\tlist.$virtual.DOMCursor = list.length;\r\n\t\t\tvar moveTo = cursor;\r\n\t\t\tif(!force)\r\n\t\t\t\tmoveTo = cursor <= prepareCount ? cursor : (cursor + prepareCount);\r\n\r\n\t\t\tscrollTo(moveTo,\r\n\t\t\t\tlist,\r\n\t\t\t\tprepareCount,\r\n\t\t\t\tparentNode,\r\n\t\t\t\tscroller,\r\n\t\t\t\trefreshVirtualSpacer\r\n\t\t\t);\r\n\r\n\t\t\tscroller.scrollTop += additionalScroll;\r\n\t\t}\r\n\r\n\t\tif(refreshVirtualSpacer)\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\r\n\t\tif(checkCursorPosition)\r\n\t\t\tcheckCursorPosition();\r\n\r\n\t\trefreshScrollBounding(cursor, list.$virtual.bounding, list, parentNode);\r\n\t}\r\n\r\n\tvar _onElementResize = [];\r\n\tvar _onElementResize_timer = -1;\r\n\tfunction onElementResize(parentNode, callback){\r\n\t\tif(_onElementResize_timer === -1){\r\n\t\t\t_onElementResize_timer = setInterval(function(){\r\n\t\t\t\tvar temp = null;\r\n\t\t\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\t\t\ttemp = _onElementResize[i];\r\n\r\n\t\t\t\t\t// Check resize\r\n\t\t\t\t\tif(temp.element.scrollHeight === temp.height\r\n\t\t\t\t\t\t|| temp.element.scrollWidth === temp.width)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t// Check if it's removed from DOM\r\n\t\t\t\t\tif(temp.element.parentElement === null){\r\n\t\t\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.callback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(_onElementResize.length === 0){\r\n\t\t\t\t\tclearInterval(_onElementResize_timer);\r\n\t\t\t\t\t_onElementResize_timer = -1;\r\n\t\t\t\t}\r\n\t\t\t}, 200);\r\n\t\t}\r\n\r\n\t\t_onElementResize.push({\r\n\t\t\telement:parentNode,\r\n\t\t\tcallback:callback,\r\n\t\t\theight:parentNode.scrollHeight,\r\n\t\t\twidth:parentNode.scrollWidth\r\n\t\t});\r\n\t}\r\n\r\n\tfunction offElementResize(parentNode){\r\n\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\tif(_onElementResize[i].element === parentNode)\r\n\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Interval will be cleared when the array is empty\r\n\t}\r\n\r\n\tfunction initStyles(){\r\n\t\tvar style = document.getElementById('sf-styles');\r\n\r\n\t\tif(!style){\r\n\t\t\tstyle = document.createElement('style');\r\n\t\t\tstyle.id = 'sf-styles';\r\n        \tdocument.head.appendChild(style);\r\n\t\t}\r\n\r\n\t\tstyle.sheet.insertRule(\r\n\t\t'.sf-virtual-list .virtual-spacer{'+\r\n            'visibility: hidden;'+\r\n            'position: relative;'+\r\n            'height: 1px;'+\r\n            'transform-origin: 0 0;'+\r\n            'width: 1px;'+\r\n            'margin: 0;'+\r\n            'padding: 0;'+\r\n            'background: none;'+\r\n            'border: none;'+\r\n            'box-shadow: none;'+\r\n         '}', style.sheet.cssRules.length);\r\n\t}\r\n};"]}