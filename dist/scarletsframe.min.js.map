{"version":3,"sources":["sf-a_init.js","sf-controller.js","sf-dom.js","sf-e-ajax.js","sf-z_end.js","sf-loader.js","sf-model.js","sf-router.js","sf-virtual_scroll.js"],"names":["global","factory","exports","module","sf","window","this","undefined","document","arguments","constructor","Function","loader","onFinish","apply","isEmptyObject","obj","key","compareObject","obj1","obj2","i","internal","regex","getQuotes","avoidQuotes","strictVar","controller","self","pending","active","for","name","func","modelScope","element","model","modelName","bindedList","getAttribute","parentEl","$","parent","root","bindedListIndex","prevAll","length","hasAttribute","run","listenSFClick","e","target","script","_modelScope","modelKeys","scopeMask","RegExp","replace","full","matched","split","method","method_","eval","shift","join","pop","found","preventDefault","console","error","root_","scope","DOMWasLoaded","init","temp","body","addEventListener","on","capture","once","dom","selector","context","parseElement","String","querySelectorAll","findOne","querySelector","closest","matches","msMatchesSelector","parentElement","isNext","result","push","nextElementSibling","previousElementSibling","nextAll","event","callback","tempCallback","ev","off","events","ref","getEventListeners","removeEventListener","splice","animateCSS","animationName","duration","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","style","webkitAnimationDuration","animationDuration","list","classList","add","remove","setTimeout","emptyDOM","div","createElement","ul","tbody","tr","table","select","html","returnNode","tempDOM","indexOf","textContent","insertAdjacentHTML","item","elements","documentElement","domReady","getSelector","childIndexes","untilElement","names","previousSibling","id","unshift","tagName","array","childNodes","globals","jsonpRequests","Request","requestOptions","globalsNoCallbacks","Object","assign","forEach","callbackName","defaults","url","location","toString","data","async","cache","user","password","headers","xhrFields","statusCode","processData","dataType","contentType","timeout","options","fireCallback","globalCallbackValue","optionCallbackValue","_i","type","paramsPrefix","toUpperCase","stringData","serializeQuery","abortTimeout_1","callbackName_1","Date","now","callbackSplit","requestUrl","addVars","filter","el","script_1","onerror","clearTimeout","src","parentNode","removeChild","appendChild","xhr","XMLHttpRequest","requestParameters","open","xhrTimeout","postData","ArrayBuffer","Blob","Document","FormData","boundary","setRequestHeader","newData","JSON","stringify","keys","headerName","crossDomain","test","$2","host","onload","status","responseData","parseError","parse","responseText","err","responseType","response","onabort","abort","send","RequestShortcut","args","_a","success","params","prefix","value","Array","encodeURIComponent","get","concat","post","json","getJSON","postJSON","setup","ajax","loadedContent","totalContent","DOMReady","turnedOff","whenDOMReady","whenDOMLoaded","whenProgress","onProgress","f","removeAttribute","css","getElementsByTagName","js","s","head","warn","everythingLoaded","setInterval","readyState","scripts","clearInterval","router","prototype","setAttribute","bindingEnabled","processingElement","trimIndentation","text","indent","trim","bracketMatch","chackValidFunctionCall","allowedFunction","localEval","_model_","_content_","tempScript","preventExecution","check_","exec","log","outerHTML","_result_","_evaled_","escapeEscapedQuote","unescapeEscapedQuote","elseIfHandle","else_","scopes","elseIf","elseValue","index","currentElement","$virtual","DOMCursor","modelRef","preparedParser_regex","REF_DIRECT","REF_IF","REF_EXEC","preparedParser","template","cloneNode","addresses","parsed","if","current","address","nodeType","refA","direct","match","replacement","innerHTML","indexes","a","tDOM","insertBefore","nextSibling","attributes","refB","dataParser","mask","runEval","preParsedReference","variableList","itemMask","preParsed","lastParsedIndex","prepared","actual","slice","exist","charCodeAt","uniqueDataParser","take","passVar","currentIndex","strDeclare","firstTime","check","VarPass_","VarPass","s1","obtained","val","findElse","condition","bindArray","propertyName","targetNode","editProperty","refreshTimer","processElement","other","count","spacer","firstElementChild","lastElementChild","children","overflow","vDOM","update","insertAdjacentElement","refresh","oldChild","replaceChild","referenceNode","create","currentRemoved","startRemove","_single_zero","_double_zero","propertyProxy","subject","defineProperty","enumerable","configurable","lastLength","o","matchLeft","real","limit","from","to","contains","virtual_scroll","handle","childElement","childElementCount","loopParser","items","extractPreprocess","sf$bindedKey","initBindingInformation","set","$replace","inputBoundFunction","bindInput","whichVar","alreadyInitialized","DOMNodeRemoved","removeModelBinding","parsePreprocess","queuePreprocess","ceiling","floor","styles","getComputedStyle","absHeight","parseFloat","Math","ceil","offsetHeight","after","before","everyRemovedNodes","nodes","nodeName","MutationObserver","observe","everyRecords","record","removedNodes","records","childList","subtree","bindedKey","Number","Boolean","destroy","getOwnPropertyDescriptor","dcBracket","bindObject","which","Node","attrs","attr","htmlClone","onChanges","objValue","bindElement","brackets","s2","copy","addressed","addressAttributes","currentNode","map","search","excludes","writable","extracting","nodeValue","loading","enabled","pauseRenderOnTransition","currentPage","initialized","currentRouterURL","popstateListener","routingError","routingBack","goto","pathname","beforeEvent","enable","load","onEvent","loaded","special","lazyViewPoint","elem","href","history","pushState","path","origin","RouterLoading","_scarlets","DOMReference","foundAction","last","afterEvent","title","oldURL","newURL","routerLoaded","aborted","back","styleInitialized","scrollingByScript","refreshScrollBounding","cursor","bounding","prepareCount","offsetTop","preparedLength","dCursor","scrollHeight","scrollTo","scroller","refreshVirtualSpacer","virtual","reduce","scrollTop","vCursor","insertCount","removeUserScrollFocus","getAbsoluteHeight","margin","parseInt","force","checkCursorPosition","additionalScroll","moveTo","getElementById","sheet","insertRule","initStyles","obtainElements","_onElementResize","offElementResize","resetViewport","visibleLength","clientHeight","fillViewport","ceilingHeight","floorHeight","updating","resetCeiling","height","previousCeiling","nextFloor","_onElementResize_timer","scrollWidth","width","onElementResize","dynamicHeight","offsetTo","fromCeiling","scrollFocused","changes","moveElementCursor","navigator","userAgent","staticHeight"],"mappings":"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","file":"scarletsframe.min.js","sourcesContent":["(function(global, factory){\r\n  if(typeof exports === 'object' && typeof module !== 'undefined') module.exports = factory(global);\r\n  else global.sf = factory(global);\r\n}(typeof window !== \"undefined\" ? window : this, (function(window){'use strict';\r\nif(typeof document === undefined)\r\n\tdocument = window.document;\r\n// ===== Module Init =====\r\n\r\nvar sf = function(){\r\n\tif(arguments[0].constructor === Function){\r\n\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\t}\r\n};\r\n\r\nsf.internal = {};\r\nsf.regex = {\r\n\t// ToDo: Need help to skip escaped quote\r\n\tgetQuotes:/((?<![\\\\])['\"])((?:.(?!(?<![\\\\])\\1))*.?)\\1/gm,\r\n\tavoidQuotes:'(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)',\r\n\tstrictVar:'(?=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )'\r\n};\r\n\r\nfunction isEmptyObject(obj){\r\n\tfor(var key in obj){\r\n\t\treturn false;\r\n\t}\r\n\treturn true\r\n}\r\n\r\nfunction compareObject(obj1, obj2){\r\n\tif(!obj1 || !obj2)\r\n\t\treturn false;\r\n\r\n\tfor(var i in obj1){\r\n\t\tif(typeof obj1[i] !== 'object' && obj1[i] !== obj2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tself.pending = {};\r\n\tself.active = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tself.pending[name] = func;\r\n\t}\r\n\r\n\tself.modelScope = function(element, func){\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = element.getAttribute('sf-bind-list');\r\n\t\tif(!bindedList){\r\n\t\t\tvar parentEl = $.parent(element, '[sf-bind-list]');\r\n\t\t\tif(parentEl !== null)\r\n\t\t\t\tbindedList = parentEl.getAttribute('sf-bind-list');\r\n\t\t}\r\n\t\telse var parentEl = element;\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(sf.model.root[model], -1);\r\n\t\t\telse return sf.model.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = $.prevAll(parentEl, '[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(sf.model.root[model][bindedList], bindedListIndex);\r\n\t\telse return sf.model.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.modelName = function(element){\r\n\t\tvar name = undefined;\r\n\t\tif(element.hasAttribute('sf-controller'))\r\n\t\t\tname = element.getAttribute('sf-controller');\r\n\t\telse\r\n\t\t\tname = $.parent(element, '[sf-controller]').getAttribute('sf-controller');\r\n\r\n\t\t// Initialize it first\r\n\t\tif(name !== undefined && !self.active[name])\r\n\t\t\tself.run(name);\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = e.target;\r\n\t\tvar script = element.getAttribute('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = $.parent(element, '[sf-click]');\r\n\t\t\tscript = element.getAttribute('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = $.parent(element, '[sf-controller]').getAttribute('sf-controller');\r\n\r\n\t\tif(!sf.model.root[model])\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar _modelScope = sf.model.root[model];\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(_modelScope);\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+modelKeys+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tscript = script.replace(scopeMask, function(full, matched){\r\n\t\t\treturn '_modelScope.'+matched;\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script[0];\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(e) {\r\n\t\t\tmethod = false;\r\n\t\t}\r\n\r\n\t\tif(!method){\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot call `'+method_+'`]\\n', element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript.shift();\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0){\r\n\t\t\t// Replace `this` to `element`\r\n\t\t\tscript = eval(('['+script+']').replace(/,this|\\[this/g, function(found){\r\n\t\t\t\treturn found[0] + 'element';\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif(!script)\r\n\t\t\tscript = [];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element, script);\r\n\t\t\te.preventDefault();\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', element, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tvar root_ = function(scope){\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.model.root[scope] = {};\r\n\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.controller.run(scope);\r\n\r\n\t\treturn sf.model.root[scope];\r\n\t}\r\n\r\n\tself.run = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.run(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(self.pending[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\r\n\t\t\tself.pending[name](sf.model.root[name], root_);\r\n\t\t\tself.active[name] = true;\r\n\t\t\tdelete self.pending[name];\r\n\t\t}\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], root_);\r\n\t}\r\n\r\n\tself.init = function(parent){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(name);\r\n\t\t\t});\r\n\r\n\t\tvar temp = $('[sf-controller]', parent || document.body);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tself.run(temp[i].getAttribute('sf-controller'));\r\n\t\t}\r\n\t}\r\n\r\n\t// Create listener for sf-click\r\n\tdocument.addEventListener('DOMContentLoaded', function(){\r\n\t\t$.on(document.body, 'click', '[sf-click]', listenSFClick);\r\n\t}, {capture:true, once:true});\r\n}","sf.dom = function(selector, context){\r\n\tif(selector[0] === '<') return sf.dom.parseElement(selector);\r\n\tif(selector.constructor !== String) return selector;\r\n\r\n\tif(context) return context.querySelectorAll(selector);\r\n\treturn document.querySelectorAll(selector);\r\n}\r\n\r\nvar $ = sf.dom; // Shortcut\r\n\r\n;(function(){\r\n\tvar self = sf.dom;\r\n\r\n\tself.findOne = function(selector, context){\r\n\t\tif(context !== undefined) return context.querySelector(selector);\r\n\t\treturn document.querySelector(selector);\r\n\t}\r\n\r\n\tself.parent = function(element, selector){\r\n\t\tif(element.closest) return element.closest(selector);\r\n\t\tvar matches = 'matches';\r\n\r\n\t\tif(!element.matches)\r\n\t\t\tmatches = element.msMatchesSelector ? 'msMatchesSelector' : 'webkitMatchesSelector';\r\n\r\n\t\tdo {\r\n\t\t\tif(element[matches](selector) === true)\r\n\t\t\t\treturn element;\r\n\r\n\t\t\telement = element.parentElement;\r\n\t\t} while (element !== null);\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tself.prevAll = function(element, selector, isNext){\r\n\t\tvar matches = 'matches';\r\n\t\tvar result = [];\r\n\r\n\t\tif(!element.matches)\r\n\t\t\tmatches = element.msMatchesSelector ? 'msMatchesSelector' : 'webkitMatchesSelector';\r\n\r\n\t\tdo {\r\n\t\t\tif(element[matches](selector) === true)\r\n\t\t\t\tresult.push(element);\r\n\r\n\t\t\tif(isNext)\r\n\t\t\t\telement = element.nextElementSibling;\r\n\t\t\telse\r\n\t\t\t\telement = element.previousElementSibling;\r\n\t\t} while (element !== null);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.nextAll = function(element, selector){\r\n\t\treturn self.prevAll(element, selector, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen to an event\r\n\t * @param  Node \t\t\telement \tparent element\r\n\t * @param  string \t\t\tevent   \tevent name\r\n\t * @param  function|string  selector    callback function or selector\r\n\t * @param  function\t\t\tcallback    callback function\r\n\t * @param  boolean\t\t\tonce    \tcall once\r\n\t * @return null\r\n\t */\r\n\tself.on = function(element, event, selector, callback, once){\r\n\t\tif(typeof element === 'string'){\r\n\t\t\telement = document;\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = event;\r\n\t\t\tevent = element;\r\n\t\t}\r\n\r\n\t\tif(typeof selector === 'function'){\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = null;\r\n\t\t}\r\n\r\n\t\tif(selector){\r\n\t\t\tvar tempCallback = callback;\r\n\t\t\tcallback = function(ev){\r\n\t\t\t\tif(self.parent(ev.target, selector) !== null)\r\n\t\t\t\t\ttempCallback(ev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcallback.selector = selector;\r\n\t\telement.addEventListener(event, callback, {capture:true, once:once === true});\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.once = function(element, event, selector, callback){\r\n\t\tself.on(element, event, selector, callback, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event listener\r\n\t * @param  Node \telement \tparent element\r\n\t * @param  string \tevent   \tevent name\r\n\t * @param  string  \tselector    selector\r\n\t * @return null\r\n\t */\r\n\tself.off = function(element, event, selector){\r\n\t\t// Remove all event\r\n\t\tif(event === undefined){\r\n\t\t\tvar events = getEventListeners(element);\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar events = event.split(' ');\r\n\t\tif(events.length !== 0){\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove listener\r\n\t\tvar ref = getEventListeners(element);\r\n\t\tif(ref !== undefined && ref[event] !== undefined){\r\n\t\t\tfor (var i = ref[event].length - 1; i >= 0; i--) {\r\n\t\t\t\tif(selector && ref[event][i].selector !== selector)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\telement.removeEventListener(event, ref[event].splice(i, 1), true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.animateCSS = function(element, animationName, callback, duration) {\r\n\t\tvar animationEnd = {\r\n\t\t\tanimation: 'animationend',\r\n\t\t\tOAnimation: 'oAnimationEnd',\r\n\t\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t\t};\r\n\r\n\t\tfor (var t in animationEnd){\r\n\t\t\tif(element.style[t] !== undefined){\r\n\t\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(duration){\r\n\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t}\r\n\r\n\t\tvar list = ('animated ' + animationName).split(' ');\r\n\t\telement.classList.add.apply(element.classList, list);\r\n\t\t$.once(element, animationEnd, function(){\r\n\t\t\telement.classList.remove.apply(element.classList, list);\r\n\t\t\t\r\n\t\t\tif(duration) setTimeout(function(){\r\n\t\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t\t}, 1);\r\n\r\n\t\t\tif(typeof callback === 'function') callback();\r\n\t\t});\r\n\t}\r\n\r\n\tvar emptyDOM = {\r\n\t\tdiv:document.createElement('div'),\r\n\t\tul:document.createElement('ul'),\r\n\t\ttbody:document.createElement('tbody'),\r\n\t\ttr:document.createElement('tr'),\r\n\t\ttable:document.createElement('table'),\r\n\t\tselect:document.createElement('select'),\r\n\t};\r\n\tself.parseElement = function(html, returnNode){\r\n\t\tvar result = [];\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\r\n        if(html.indexOf('<li') === 0) tempDOM = emptyDOM.ul;\r\n        if(html.indexOf('<tr') === 0) tempDOM = emptyDOM.tbody;\r\n        if(html.indexOf('<td') === 0 || html.indexOf('<th') === 0) tempDOM = emptyDOM.tr;\r\n        if(html.indexOf('<tbody') === 0) tempDOM = emptyDOM.table;\r\n        if(html.indexOf('<option') === 0) tempDOM = emptyDOM.select;\r\n\r\n\t\ttempDOM.textContent = '';\r\n\t\ttempDOM.insertAdjacentHTML('afterBegin', html);\r\n\r\n\t\tvar ref = tempDOM[returnNode ? 'childNodes' : 'children'];\r\n\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\tresult.push(ref.item(i));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tself.remove = function(elements){\r\n\t\tif(elements.remove !== undefined)\r\n\t\t\treturn elements.remove();\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\telements[i].remove();\r\n\t\t}\r\n\t}\r\n\r\n\tvar documentElement = null;\r\n\tsetTimeout(function(){\r\n\t\tsf.loader.domReady(function(){\r\n\t\t\tdocumentElement = document.body.parentElement;\r\n\t\t});\r\n\t}, 1);\r\n\r\n\tself.getSelector = function(element, childIndexes = false, untilElement = false){\r\n\t\tvar names = [];\r\n\t\tif(untilElement === false) untilElement = documentElement;\r\n\r\n\t\tvar previousSibling = childIndexes ? 'previousSibling' : 'previousElementSibling';\r\n\r\n\t\twhile(element.parentElement !== null){\r\n\t\t\tif(element.id){\r\n\t\t\t\tnames.unshift('#'+element.id);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(element === untilElement){\r\n\t\t\t\t\tif(childIndexes === false)\r\n\t\t\t\t\t\tnames.unshift(element.tagName);\r\n\t\t\t\t\telse names.unshift(0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar e = element;\r\n\t\t\t\t\tvar i = childIndexes ? 0 : 1;\r\n\r\n\t\t\t\t\twhile(e[previousSibling]){\r\n\t\t\t\t\t\te = e[previousSibling];\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(childIndexes)\r\n\t\t\t\t\t\tnames.unshift(i);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tnames.unshift(\":nth-child(\"+i+\")\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\telement = element.parentElement;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndexes)\r\n\t\t\treturn names;\r\n\t\treturn names.join(\" > \");\r\n\t}\r\n\r\n\tself.childIndexes = function(array, context){\r\n\t\tvar element = context || documentElement;\r\n\t\tvar i = 1;\r\n\r\n\t\tif(array[0].constructor === String)\r\n\t\t\telement = element.querySelector(array[0]);\r\n\r\n\t\telse if(array.length === 1)\r\n\t\t\treturn element;\r\n\r\n\t\tfor (i = i; i < array.length; i++) {\r\n\t\t\telement = element.childNodes.item(array[i]);\r\n\r\n\t\t\tif(element === null)\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n})();","/*\r\n  Special Thanks to Vladimir Kharlampidi\r\n  https://github.com/nolimits4web/\r\n*/\r\n\r\nvar globals = {};\r\nvar jsonpRequests = 0;\r\nfunction Request(requestOptions) {\r\n    var globalsNoCallbacks = Object.assign({}, globals);\r\n    ('beforeCreate beforeOpen beforeSend error complete success statusCode').split(' ').forEach(function (callbackName) {\r\n        delete globalsNoCallbacks[callbackName];\r\n    });\r\n    var defaults = Object.assign({\r\n        url: window.location.toString(),\r\n        method: 'GET',\r\n        data: false,\r\n        async: true,\r\n        cache: true,\r\n        user: '',\r\n        password: '',\r\n        headers: {},\r\n        xhrFields: {},\r\n        statusCode: {},\r\n        processData: true,\r\n        dataType: 'text',\r\n        contentType: 'application/x-www-form-urlencoded',\r\n        timeout: 0,\r\n    }, globalsNoCallbacks);\r\n    var options = Object.assign({}, defaults, requestOptions);\r\n    var proceedRequest;\r\n    // Function to run XHR callbacks and events\r\n    function fireCallback(callbackName) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        /*\r\n          Callbacks:\r\n          beforeCreate (options),\r\n          beforeOpen (xhr, options),\r\n          beforeSend (xhr, options),\r\n          error (xhr, status),\r\n          complete (xhr, stautus),\r\n          success (response, status, xhr),\r\n          statusCode ()\r\n        */\r\n        var globalCallbackValue;\r\n        var optionCallbackValue;\r\n        if (globals[callbackName]) {\r\n            globalCallbackValue = globals[callbackName].apply(globals, data);\r\n        }\r\n        if (options[callbackName]) {\r\n            optionCallbackValue = options[callbackName].apply(options, data);\r\n        }\r\n        if (typeof globalCallbackValue !== 'boolean')\r\n            globalCallbackValue = true;\r\n        if (typeof optionCallbackValue !== 'boolean')\r\n            optionCallbackValue = true;\r\n        return (globalCallbackValue && optionCallbackValue);\r\n    }\r\n    // Before create callback\r\n    proceedRequest = fireCallback('beforeCreate', options);\r\n    if (proceedRequest === false)\r\n        return undefined;\r\n    // For jQuery guys\r\n    if (options.type)\r\n        options.method = options.type;\r\n    // Parameters Prefix\r\n    var paramsPrefix = options.url.indexOf('?') >= 0 ? '&' : '?';\r\n    // UC method\r\n    var method = options.method.toUpperCase();\r\n    // Data to modify GET URL\r\n    if ((method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') && options.data) {\r\n        var stringData = void 0;\r\n        if (typeof options.data === 'string') {\r\n            // Should be key=value string\r\n            if (options.data.indexOf('?') >= 0)\r\n                stringData = options.data.split('?')[1];\r\n            else\r\n                stringData = options.data;\r\n        }\r\n        else {\r\n            // Should be key=value object\r\n            stringData = serializeQuery(options.data);\r\n        }\r\n        if (stringData.length) {\r\n            options.url += paramsPrefix + stringData;\r\n            if (paramsPrefix === '?')\r\n                paramsPrefix = '&';\r\n        }\r\n    }\r\n    // JSONP\r\n    if (options.dataType === 'json' && options.url.indexOf('callback=') >= 0) {\r\n        var callbackName_1 = \"jsonp_\" + (Date.now() + ((jsonpRequests += 1)));\r\n        var abortTimeout_1;\r\n        var callbackSplit = options.url.split('callback=');\r\n        var requestUrl = callbackSplit[0] + \"callback=\" + callbackName_1;\r\n        if (callbackSplit[1].indexOf('&') >= 0) {\r\n            var addVars = callbackSplit[1].split('&').filter(function (el) { return el.indexOf('=') > 0; }).join('&');\r\n            if (addVars.length > 0)\r\n                requestUrl += \"&\" + addVars;\r\n        }\r\n        // Create script\r\n        var script_1 = document.createElement('script');\r\n        script_1.type = 'text/javascript';\r\n        script_1.onerror = function onerror() {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('error', null, 'scripterror');\r\n            fireCallback('complete', null, 'scripterror');\r\n        };\r\n        script_1.src = requestUrl;\r\n        // Handler\r\n        window[callbackName_1] = function jsonpCallback(data) {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('success', data);\r\n            script_1.parentNode.removeChild(script_1);\r\n            script_1 = null;\r\n            delete window[callbackName_1];\r\n        };\r\n        document.querySelector('head').appendChild(script_1);\r\n        if (options.timeout > 0) {\r\n            abortTimeout_1 = setTimeout(function () {\r\n                script_1.parentNode.removeChild(script_1);\r\n                script_1 = null;\r\n                fireCallback('error', null, 'timeout');\r\n            }, options.timeout);\r\n        }\r\n        return undefined;\r\n    }\r\n    // Cache for GET/HEAD requests\r\n    if (method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') {\r\n        if (options.cache === false) {\r\n            options.url += paramsPrefix + \"_nocache\" + Date.now();\r\n        }\r\n    }\r\n    // Create XHR\r\n    var xhr = new XMLHttpRequest();\r\n    // Save Request URL\r\n    xhr.requestUrl = options.url;\r\n    xhr.requestParameters = options;\r\n    // Before open callback\r\n    proceedRequest = fireCallback('beforeOpen', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Open XHR\r\n    xhr.open(method, options.url, options.async, options.user, options.password);\r\n    // Create POST Data\r\n    var postData = null;\r\n    if ((method === 'POST' || method === 'PUT' || method === 'PATCH') && options.data) {\r\n        if (options.processData) {\r\n            var postDataInstances = [ArrayBuffer, Blob, Document, FormData];\r\n            // Post Data\r\n            if (postDataInstances.indexOf(options.data.constructor) >= 0) {\r\n                postData = options.data;\r\n            }\r\n            else {\r\n                // POST Headers\r\n                var boundary = \"---------------------------\" + Date.now().toString(16);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    xhr.setRequestHeader('Content-Type', \"multipart/form-data; boundary=\" + boundary);\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader('Content-Type', options.contentType);\r\n                }\r\n                postData = '';\r\n                var data = serializeQuery(options.data);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    data = data.split('&');\r\n                    var newData = [];\r\n                    for (var i = 0; i < data.length; i += 1) {\r\n                        newData.push(\"Content-Disposition: form-data; name=\\\"\" + data[i].split('=')[0] + \"\\\"\\r\\n\\r\\n\" + data[i].split('=')[1] + \"\\r\\n\");\r\n                    }\r\n                    postData = \"--\" + boundary + \"\\r\\n\" + newData.join(\"--\" + boundary + \"\\r\\n\") + \"--\" + boundary + \"--\\r\\n\";\r\n                }\r\n                else if (options.contentType === 'application/json') {\r\n                    postData = JSON.stringify(options.data);\r\n                }\r\n                else {\r\n                    postData = data;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            postData = options.data;\r\n            xhr.setRequestHeader('Content-Type', options.contentType);\r\n        }\r\n    }\r\n    // Additional headers\r\n    if (options.headers) {\r\n        Object.keys(options.headers).forEach(function (headerName) {\r\n            xhr.setRequestHeader(headerName, options.headers[headerName]);\r\n        });\r\n    }\r\n    // Check for crossDomain\r\n    if (typeof options.crossDomain === 'undefined') {\r\n        // eslint-disable-next-line\r\n        options.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(options.url) && RegExp.$2 !== window.location.host;\r\n    }\r\n    if (!options.crossDomain) {\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    }\r\n    if (options.xhrFields) {\r\n        Object.assign(xhr, options.xhrFields);\r\n    }\r\n    var xhrTimeout;\r\n    // Handle XHR\r\n    xhr.onload = function onload() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 0) {\r\n            var responseData = void 0;\r\n            if (options.dataType === 'json') {\r\n                var parseError = void 0;\r\n                try {\r\n                    responseData = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (err) {\r\n                    parseError = true;\r\n                }\r\n                if (!parseError) {\r\n                    fireCallback('success', responseData, xhr.status, xhr);\r\n                }\r\n                else {\r\n                    fireCallback('error', xhr, 'parseerror');\r\n                }\r\n            }\r\n            else {\r\n                responseData = xhr.responseType === 'text' || xhr.responseType === '' ? xhr.responseText : xhr.response;\r\n                fireCallback('success', responseData, xhr.status, xhr);\r\n            }\r\n        }\r\n        else {\r\n            fireCallback('error', xhr, xhr.status);\r\n        }\r\n        if (options.statusCode) {\r\n            if (globals.statusCode && globals.statusCode[xhr.status])\r\n                globals.statusCode[xhr.status](xhr);\r\n            if (options.statusCode[xhr.status])\r\n                options.statusCode[xhr.status](xhr);\r\n        }\r\n        fireCallback('complete', xhr, xhr.status);\r\n    };\r\n    xhr.onerror = function onerror() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        fireCallback('error', xhr, xhr.status);\r\n        fireCallback('complete', xhr, 'error');\r\n    };\r\n    // Timeout\r\n    if (options.timeout > 0) {\r\n        xhr.onabort = function onabort() {\r\n            if (xhrTimeout)\r\n                clearTimeout(xhrTimeout);\r\n        };\r\n        xhrTimeout = setTimeout(function () {\r\n            xhr.abort();\r\n            fireCallback('error', xhr, 'timeout');\r\n            fireCallback('complete', xhr, 'timeout');\r\n        }, options.timeout);\r\n    }\r\n    // Ajax start callback\r\n    proceedRequest = fireCallback('beforeSend', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Send XHR\r\n    xhr.send(postData);\r\n    // Return XHR object\r\n    return xhr;\r\n}\r\nfunction RequestShortcut(method) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    var _a = [], url = _a[0], data = _a[1], success = _a[2], error = _a[3], dataType = _a[4];\r\n    if (typeof args[1] === 'function') {\r\n        url = args[0], success = args[1], error = args[2], dataType = args[3];\r\n    }\r\n    else {\r\n        url = args[0], data = args[1], success = args[2], error = args[3], dataType = args[4];\r\n    }\r\n    [success, error].forEach(function (callback) {\r\n        if (typeof callback === 'string') {\r\n            dataType = callback;\r\n            if (callback === success)\r\n                success = undefined;\r\n            else\r\n                error = undefined;\r\n        }\r\n    });\r\n    dataType = dataType || (method === 'json' || method === 'postJSON' ? 'json' : undefined);\r\n    var requestOptions = {\r\n        url: url,\r\n        method: method === 'post' || method === 'postJSON' ? 'POST' : 'GET',\r\n        data: data,\r\n        success: success,\r\n        error: error,\r\n        dataType: dataType,\r\n    };\r\n    if (method === 'postJSON') {\r\n        Object.assign(requestOptions, {\r\n            contentType: 'application/json',\r\n            processData: false,\r\n            crossDomain: true,\r\n            data: typeof data === 'string' ? data : JSON.stringify(data),\r\n        });\r\n    }\r\n    return Request(requestOptions);\r\n}\r\nObject.assign(Request, {\r\n    get: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['get'].concat(args));\r\n    },\r\n    post: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['post'].concat(args));\r\n    },\r\n    json: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    getJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    postJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['postJSON'].concat(args));\r\n    },\r\n});\r\nRequest.setup = function setup(options) {\r\n    if (options.type && !options.method) {\r\n        Object.assign(options, { method: options.type });\r\n    }\r\n    Object.assign(globals, options);\r\n};\r\nfunction serializeQuery(params, prefix) {\r\n    var key = Object.keys(params);\r\n    for (var i = 0; i < key.length; i++) {\r\n      var value = params[key[i]];\r\n      if (params.constructor === Array)\r\n          key[i] += prefix + \"[]\";\r\n      else if (params.constructor === Object)\r\n          key[i] = (prefix ? prefix + \"[\" + key[i] + \"]\" : key[i]);\r\n\r\n      if (typeof value === 'object')\r\n          key[i] = serializeQuery(value, key[i]);\r\n      else\r\n          key[i] = key[i] + \"=\" + encodeURIComponent(value);\r\n    }\r\n    return key.join('&');\r\n}\r\n$.ajax = sf.ajax = Request;","return sf;\r\n\r\n// ===== Module End =====\r\n})));","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 0;\r\n\tself.DOMWasLoaded = false;\r\n\tself.DOMReady = false;\r\n\tself.turnedOff = false;\r\n\r\n\tvar whenDOMReady = [];\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\tself.off = function(){\r\n\t\tself.turnedOff = true;\r\n\t}\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.domReady = function(func){\r\n\t\tif(self.DOMReady) return func();\r\n\t\tif(whenDOMReady.indexOf(func) !== -1) return;\r\n\t\twhenDOMReady.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t\tif(element && element.removeAttribute) element.removeAttribute('onload');\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tvar temp = '';\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\ttemp += '<link onload=\"sf.loader.f(this);\" rel=\"stylesheet\" href=\"'+list[i]+'\">';\r\n\t\t}\r\n\r\n\t\tself.domReady(function(){\r\n\t\t\tdocument.getElementsByTagName('body')[0].insertAdjacentHTML('beforeend', temp);\r\n\t\t});\r\n\t}\r\n\r\n\tself.js = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('script');\r\n\t        s.type = \"text/javascript\";\r\n\t        s.async = true;\r\n\t        s.src = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(function(){\r\n\t\tif(self.totalContent === 0 && !self.turnedOff){\r\n\t\t\tself.loadedContent = self.totalContent = 1;\r\n\t\t\tconsole.warn(\"If you don't use content loader feature, please turn it off with `sf.loader.off()`\");\r\n\t\t}\r\n\t}, 10000);\r\n\tvar everythingLoaded = setInterval(function() {\r\n\tif (/loaded|complete/.test(document.readyState)) {\r\n\t\tif(self.DOMReady === false){\r\n\t\t\tself.DOMReady = true;\r\n\t\t\tfor (var i = 0; i < whenDOMReady.length; i++) {\r\n\t\t\t\ttry{\r\n\t\t\t\t\twhenDOMReady[i]();\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(self.loadedContent < self.totalContent || self.loadedContent === 0){\r\n\t\t\tif(!self.turnedOff)\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar scripts = sf.dom('script');\r\n\t\tfor (var i = 0; i < scripts.length; i++) {\r\n\t\t\tscripts[i].removeEventListener('error', sf.loader.f);\r\n\t\t}\r\n\r\n\t\tclearInterval(everythingLoaded);\r\n\t\tself.DOMWasLoaded = true;\r\n\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\ttry{\r\n\t\t\t\twhenDOMLoaded[i]();\r\n\t\t\t} catch(e){\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\twhenProgress.splice(0);\r\n\t\twhenDOMReady.splice(0);\r\n\t\twhenDOMLoaded.splice(0);\r\n\t\twhenProgress = whenDOMReady = whenDOMLoaded = null;\r\n\r\n\t\t// Last init\r\n\t\tsf.controller.init();\r\n\t\tsf.model.init();\r\n\t\tsf.router.init();\r\n\t}\r\n\t}, 100);\r\n};\r\nsf.prototype.constructor = sf.loader.onFinish;\r\n\r\n// Find images\r\nsf.loader.domReady(function(){\r\n\tvar temp = $('img:not(onload)[src]');\r\n\tfor (var i = 0; i < temp.length; i++) {\r\n\t\tsf.loader.totalContent++;\r\n\t\ttemp[i].setAttribute('onload', \"sf.loader.f(this)\");\r\n\t}\r\n}, 0);","// Data save and HTML content binding\r\nsf.model = function(scope){\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\tif(sf.controller.pending[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n};\r\n\r\n(function(){\r\n\tvar self = sf.model;\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\r\n\tvar processingElement = null;\r\n\r\n\t// For debugging, normalize indentation\r\n\tfunction trimIndentation(text){\r\n\t\tvar indent = text.split(\"\\n\", 3);\r\n\t\tif(indent[0][0] !== ' ' || indent[0][0] !== \"\\t\")\r\n\t\t\tindent = indent[1];\r\n\t\telse indent = indent[0];\r\n\r\n\t\tindent = indent.length - indent.trim().length;\r\n\t\tif(indent === 0) return text;\r\n\t\treturn text.replace(RegExp('^([\\\\t ]{'+indent+'})', 'gm'), '');\r\n\t}\r\n\r\n\t// Secured evaluation\r\n\tvar bracketMatch = RegExp('([\\\\w.]*?[\\\\S\\\\s])\\\\('+sf.regex.avoidQuotes, 'g');\r\n\tvar chackValidFunctionCall = /[a-zA-Z0-9 \\]\\$\\)]/;\r\n\tvar allowedFunction = [':', 'for', 'if', 'while', '_content_.take', 'console.log'];\r\n\tvar localEval = function(script, _model_, _modelScope, _content_){\r\n\t\t\"use strict\";\r\n\r\n\t\t// ==== Security check ====\r\n\t\tvar tempScript = script;\r\n\r\n\t\t// Remove quotes\r\n\t\ttempScript = tempScript.replace(sf.regex.getQuotes, '\"Quotes\"');\r\n\r\n\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\tvar preventExecution = false;\r\n\t\tvar check_ = null;\r\n\t\twhile((check_ = bracketMatch.exec(tempScript)) !== null){\r\n\t\t\tcheck_[1] = check_[1].trim();\r\n\r\n\t\t\tif(allowedFunction.indexOf(check_[1]) === -1 &&\r\n\t\t\t\tcheck_[1].split('.')[0] !== '_modelScope' &&\r\n\t\t\t\tchackValidFunctionCall.test(check_[1][check_[1].length-1])\r\n\t\t\t){\r\n\t\t\t\tpreventExecution = check_[1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(preventExecution){\r\n\t\t\tconsole.error(\"Trying to executing unrecognized function (\"+preventExecution+\")\");\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\t\t// ==== Security check ended ====\r\n\t\r\n\t\tvar _result_ = '';\r\n\t\ttry{\r\n\t\t\tif(/@return /.test(script) === true){\r\n\t\t\t\tvar _evaled_ = eval('(function(){'+script.split('@return ').join('return ')+'})()');\r\n\t\t\t\treturn _result_ + _evaled_;\r\n\t\t\t}\r\n\t\t\telse var _evaled_ = eval(script);\r\n\t\t} catch(e){\r\n\t\t\tconsole.error(e);\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\t// Find an index for the element on the list\r\n\tself.index = function(element){\r\n\t\tvar i = -1;\r\n\t\tvar tagName = element.tagName;\r\n\t\tvar currentElement = element;\r\n\r\n\t\twhile(element !== null) {\r\n\t\t\tif(element.tagName === tagName)\r\n\t\t\t\ti++;\r\n\r\n\t\t\telement = element.previousElementSibling;\r\n\t\t}\r\n\r\n\t\tvar list = currentElement.getAttribute('sf-bind-list');\r\n\t\tif(!list) return i;\r\n\r\n\t\tvar ref = sf.model.root[sf.controller.modelName(currentElement)][list];\r\n\t\tif(!ref.$virtual) return i;\r\n\r\n\t\treturn i + ref.$virtual.DOMCursor - 1;\r\n\t}\r\n\r\n\t// Declare model for the name with a function\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\t\t\r\n\t\tfunc(self(name), self);\r\n\t}\r\n\r\n\t// Get property of the model\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys.join('|');\r\n\t}\r\n\r\n\t// Escape the escaped quote\r\n\tfunction escapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*');\r\n\t}\r\n\r\n\tfunction unescapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\");\r\n\t}\r\n\r\n\tfunction elseIfHandle(else_, scopes){\r\n\t\tvar elseIf = else_.elseIf;\r\n\r\n\t\t// Else if\r\n\t\tfor (var i = 0; i < elseIf.length; i++) {\r\n\t\t\t// Check the condition\r\n\t\t\tscopes[0] = elseIf[i][0];\r\n\t\t\tif(!localEval.apply(self.root, scopes))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Get the value\r\n\t\t\tscopes[0] = elseIf[i][1];\r\n\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t}\r\n\r\n\t\t// Else\r\n\t\tif(else_.elseValue === null)\r\n\t\t\treturn '';\r\n\r\n\t\tscopes[0] = else_.elseValue;\r\n\t\treturn localEval.apply(self.root, scopes);\r\n\t}\r\n\r\n\t// Template parser\r\n\tvar preparedParser_regex = /{{%=([0-9]+)/gm;\r\n\tvar REF_DIRECT = 0, REF_IF = 1, REF_EXEC = 2;\r\n\tvar preparedParser = function(template, item){\r\n\t\tvar html = template.html.cloneNode(true);\r\n\t\tvar addresses = template.addresses;\r\n\t\tvar parse = template.parse;\r\n\t\tvar parsed = {};\r\n\r\n\t\t// Save model item reference to node\r\n\t\thtml.model = item;\r\n\r\n\t\t// Get or evaluate static or dynamic data\r\n\t\tfor (var i = 0; i < parse.length; i++) {\r\n\t\t\tvar ref = parse[i];\r\n\t\t\tref.data[1] = item;\r\n\r\n\t\t\t// Direct evaluation type\r\n\t\t\tif(ref.type === REF_DIRECT || ref.type === REF_EXEC)\r\n\t\t\t\tparsed[i] = {type:ref.type, data:localEval.apply(self.root, ref.data)};\r\n\r\n\t\t\t// Conditional type\r\n\t\t\telse if(ref.type === REF_IF){\r\n\t\t\t\tvar scopes = ref.data;\r\n\t\t\t\tparsed[i] = {type:ref.type, data:''};\r\n\t\t\t\tscopes[0] = ref.if[0];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tparsed[i].data = elseIfHandle(ref, scopes);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscopes[0] = ref.if[1];\r\n\t\t\t\tparsed[i].data = localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Find element where the data belongs to\r\n\t\tfor (var i = 0; i < addresses.length; i++) {\r\n\t\t\tvar ref = addresses[i];\r\n\t\t\tvar current = $.childIndexes(ref.address, html);\r\n\r\n\t\t\t// Modify element attributes\r\n\t\t\tif(ref.nodeType === 1){\r\n\t\t\t\tvar refA = ref.attributes;\r\n\t\t\t\tfor (var a = 0; a < refA.length; a++) {\r\n\t\t\t\t\tvar refB = refA[a];\r\n\t\t\t\t\tif(refB.direct !== false){\r\n\t\t\t\t\t\tcurrent.setAttribute(refB.name, parsed[refB.direct].data);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Below is used for multiple data\r\n\t\t\t\t\trefB = current.attributes[refB.name];\r\n\t\t\t\t\trefB.value = refB.value.replace(preparedParser_regex, function(full, match){\r\n\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Replace text node\r\n\t\t\tif(ref.nodeType === 3){\r\n\t\t\t\tvar refA = current;\r\n\t\t\t\t\r\n\t\t\t\tif(ref.direct !== false){\r\n\t\t\t\t\trefA.textContent = parsed[ref.direct].data;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Below is used for multiple/dynamic data\r\n\t\t\t\tvar haveDynamicData = false;\r\n\t\t\t\tvar parentNode = current.parentNode;\r\n\t\t\t\trefA.textContent = refA.textContent.replace(preparedParser_regex, function(full, match){\r\n\t\t\t\t\tvar replacement = parsed[match];\r\n\r\n\t\t\t\t\tif(replacement.type === REF_DIRECT)\r\n\t\t\t\t\t\treturn replacement.data;\r\n\r\n\t\t\t\t\treturn full;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(ref.innerHTML !== undefined){\r\n\t\t\t\t\tvar indexes = ref.indexes;\r\n\t\t\t\t\tvar parentNode = current.parentNode;\r\n\r\n\t\t\t\t\tfor (var a = 0; a < indexes.length; a++) {\r\n\t\t\t\t\t\tvar replacement = parsed[indexes[a]];\r\n\r\n\t\t\t\t\t\t// as Element from text\r\n\t\t\t\t\t\tvar tDOM = $.parseElement(replacement.data + ref.innerHTML[a], true);\r\n\t\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\t\t\t\tparentNode.insertBefore(tDOM[a], current.nextSibling);\r\n\t\t\t\t\t\t\tcurrent = tDOM[a];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval, preParsedReference){\r\n\t\tvar _modelScope = self.root[scope];\r\n\t\tif(!runEval) runEval = '';\r\n\t\t\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(_modelScope);\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(_modelScope[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\tvar preParsed = [];\r\n\t\t\tvar lastParsedIndex = preParsedReference.length;\r\n\t\t}\r\n\r\n\t\tvar prepared = html.replace(/{{([^@][\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = escapeEscapedQuote(temp); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\r\n\t\t\ttemp = unescapeEscapedQuote(temp); // ToDo: Unescape\r\n\r\n\t\t\t// Unescape HTML\r\n\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t// Evaluate\r\n\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\ttemp = temp.trim();\r\n\r\n\t\t\t\t// Simplicity similar\r\n\t\t\t\tvar exist = preParsed.indexOf(temp);\r\n\r\n\t\t\t\tif(exist === -1){\r\n\t\t\t\t\tpreParsed.push(temp);\r\n\t\t\t\t\tpreParsedReference.push({type:REF_DIRECT, data:[temp, _model_, _modelScope]});\r\n\t\t\t\t\treturn '{{%=' + (preParsed.length + lastParsedIndex - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn '{{%=' + (exist + lastParsedIndex);\r\n\t\t\t}\r\n\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(/(?!&#.*?;)[\\u00A0-\\u9999<>\\&]/gm, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\tpreParsed = variableList = _modelScope = _model_ = mask = scope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t}\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\t// Dynamic data parser\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope, runEval){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(passVar === null)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\t// Use strict mode and prepare for new variables\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\t// Declare new variable\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove var because no variable are being passed\r\n\t\t\t\tif(firstTime === true)\r\n\t\t\t\t\tstrDeclare = strDeclare.replace('var ', '');\r\n\r\n\t\t\t\t// Escape function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('&#40;').split(')').join('&#41;');\r\n\r\n\t\t\t\t// Pass to static data parser for another HTML data\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Build script preparation\r\n\t\thtml = html.replace(/{\\[([\\s\\S]*?)\\]}/g, function(full, matched){\r\n\t\t\tif(/{{.*?}}/.test(matched) === false)\r\n\t\t\t\treturn \"_result_ += '\"+matched.split(\"'\").join(\"\\\\'\")+\"'\";\r\n\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope)+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(runEval === '#noEval')\r\n\t\t\tvar preParsedReference = [];\r\n\r\n\t\tvar prepared = html.replace(/{{(@[\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = escapeEscapedQuote(temp); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\t\t\ttemp = unescapeEscapedQuote(temp); // ToDo: Unescape\r\n\r\n\t\t\t// Unescape HTML\r\n\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass_ = /(var|let)([\\w,\\s]+)(?=\\s(?==|in|of))/g;\r\n\t\t\tvar VarPass = [];\r\n\t\t\tvar s1 = null;\r\n\t\t\twhile((s1 = VarPass_.exec(temp)) !== null){\r\n\t\t\t\tVarPass.push(s1[2]);\r\n\t\t\t}\r\n\r\n\t\t\tif(_model_ === null && runEval === '#noEval')\r\n\t\t\t\tVarPass.push('_model_');\r\n\r\n\t\t\tif(VarPass.length !== 0){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/([\\n\\t\\r]|  )+/g, '').split(',').forEach(function(val){\r\n\t\t\t\t\t\tobtained.push(val);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':(typeof '+VarPass[i]+'!==\"undefined\"?'+VarPass[i]+':undefined)';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(VarPass.length === 0)\r\n\t\t\t\t\tVarPass = 'null';\r\n\t\t\t\telse VarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\t\t\telse temp = temp.split('&VarPass&').join('null');\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\r\n\t\t\t\t// {if, elseIf:([if, value], ...), elseValue}\r\n\t\t\t\tvar findElse = function(text){\r\n\t\t\t\t\ttext = text.join(':');\r\n\t\t\t\t\tvar else_ = null;\r\n\r\n\t\t\t\t\t// Get else value\r\n\t\t\t\t\tvar text = text.split('@else' + (text.indexOf(':') !== -1 ? ':' : ' :'));\r\n\t\t\t\t\tif(text.length === 2)\r\n\t\t\t\t\t\telse_ = text.pop();\r\n\t\t\t\t\telse text = text[0];\r\n\r\n\t\t\t\t\t// Split elseIf\r\n\t\t\t\t\ttext = text.split('@elseif ');\r\n\r\n\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t\tif:text.shift(),\r\n\t\t\t\t\t\telseIf:[],\r\n\t\t\t\t\t\telseValue:else_\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Separate condition script and value\r\n\t\t\t\t\tfor (var i = 0; i < text.length; i++) {\r\n\t\t\t\t\t\tvar val = text[i].split(':');\r\n\t\t\t\t\t\tobj.elseIf.push([val.shift(), val.join(':')]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tvar condition = check.shift();\r\n\t\t\t\t\tvar elseIf = findElse(check);\r\n\t\t\t\t\telseIf.type = REF_IF;\r\n\t\t\t\t\telseIf.data = [null, _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t\t// Trim Data\r\n\t\t\t\t\telseIf.if = [condition.trim(), elseIf.if.trim()];\r\n\t\t\t\t\tif(elseIf.elseValue !== null)\r\n\t\t\t\t\t\telseIf.elseValue = elseIf.elseValue.trim();\r\n\r\n\t\t\t\t\tfor (var i = 0; i < elseIf.elseIf.length; i++) {\r\n\t\t\t\t\t\telseIf.elseIf[i][0] = elseIf.elseIf[i][0].trim();\r\n\t\t\t\t\t\telseIf.elseIf[i][1] = elseIf.elseIf[i][1].trim();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Push data\r\n\t\t\t\t\tpreParsedReference.push(elseIf);\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scopes = [check[0], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\treturn elseIfHandle(findElse(check), scopes);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcheck.shift();\r\n\t\t\t\tscopes[0] = check.join(':');\r\n\r\n\t\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tvar scopes = [check[1], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tpreParsedReference.push({type:REF_EXEC, data:scopes});\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, scopes);\r\n\t\t\t\treturn temp;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\t_modelScope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t\treturn [prepared, preParsedReference];\r\n\t\t}\r\n\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\tvar bindArray = function(template, list, mask, modelName, propertyName, targetNode, parentNode, tempDOM){\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'swap', 'move', '$replace', 'softRefresh', 'hardRefresh'];\r\n\t\tvar refreshTimer = -1;\r\n\t\tvar processElement = function(index, options, other, count){\r\n\t\t\tif(options === 'clear'){\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar spacer = [parentNode.firstElementChild, parentNode.lastElementChild];\r\n\r\n\t\t\t\tparentNode.textContent = '';\r\n\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tparentNode.appendChild(spacer[0]);\r\n\t\t\t\t\tparentNode.appendChild(spacer[1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Hard refresh\r\n\t\t\tif(options === 'hardRefresh'){\r\n\t\t\t\tvar item = list;\r\n\t\t\t\tfor (var i = index; i < item.length; i++) {\r\n\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\tparentNode.insertBefore(preparedParser(template, item[i]), parentNode.lastElementChild);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tparentNode.appendChild(preparedParser(template, item[i]));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar callback = self.root[modelName]['on$'+propertyName];\r\n\r\n\t\t\tif(options === 'swap' || options === 'move'){\r\n\t\t\t\tvar ref = parentNode.children;\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t\tother++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(options === 'move'){\r\n\t\t\t\t\tvar overflow = list.length - index - count;\r\n\t\t\t\t\tif(overflow < 0)\r\n\t\t\t\t\t\tcount += overflow;\r\n\r\n\t\t\t\t\t// Move to virtual DOM\r\n\t\t\t\t\tvar vDOM = document.createElement('div');\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tvDOM.appendChild(ref[index]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar nextSibling = ref[other] || null;\r\n\r\n\t\t\t\t\t// Move to defined index\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tparentNode.insertBefore(vDOM.firstElementChild, nextSibling);\r\n\r\n\t\t\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\t\t\tcallback.update(\r\n\t\t\t\t\t\t\t\t(nextSibling !== null && nextSibling.previousElementSibling)\r\n\t\t\t\t\t\t\t\t|| parentNode.lastElementChild, 'move');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(index >= other){\r\n\t\t\t\t\tvar temp = index;\r\n\t\t\t\t\tindex = other;\r\n\t\t\t\t\tother = temp;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tref[index].insertAdjacentElement('afterEnd', ref[other]);\r\n\t\t\t\tref[other].insertAdjacentElement('afterEnd', ref[index]);\r\n\r\n\t\t\t\tif(callback !== undefined && callback.update){\r\n\t\t\t\t\tcallback.update(ref[other], 'swap');\r\n\t\t\t\t\tcallback.update(ref[index], 'swap');\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar exist = list.$virtual.elements();\r\n\r\n\t\t\t\tclearTimeout(refreshTimer);\r\n\t\t\t\trefreshTimer = setTimeout(function(){\r\n\t\t\t\t\tlist.$virtual.refresh(true);\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse exist = parentNode.children;\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(options === 'remove'){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\texist[index].remove();\r\n\t\t\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.remove){\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tsetTimeout(startRemove, 800);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse startRemove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update\r\n\t\t\telse if(options === 'update'){\r\n\t\t\t\tif(!other) other = index + 1;\r\n\t\t\t\telse if(other < 0) other = list.length + other;\r\n\t\t\t\telse other = index - other;\r\n\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\tvar oldChild = exist[i];\r\n\t\t\t\t\tif(oldChild === undefined || list[i] === undefined)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tvar temp = preparedParser(template, list[i]);\r\n\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\toldChild.parentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tparentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\t\tcallback.update(temp, 'replace');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar item = list[index];\r\n\t\t\tif(item === undefined) return;\r\n\r\n\t\t\tvar temp = preparedParser(template, item);\r\n\t\t\tvar referenceNode = exist[index];\r\n\r\n\t\t\t// Create\r\n\t\t\tif(options === 'insertAfter'){\r\n\t\t\t\tvar index = index !== 0 ? index - 1 : (exist.length - 1);\r\n\t\t\t\tvar referenceNode = exist[index];\r\n\r\n\t\t\t\tif(!referenceNode){\r\n\t\t\t\t\tif(!list.$virtual || list.length === 0){\r\n\t\t\t\t\t\tparentNode.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treferenceNode.insertAdjacentElement('afterEnd', temp);\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\r\n\t\t\t\t// Refresh virtual scroll\r\n\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t}\r\n\t\t\telse if(options === 'append'){\r\n\t\t\t\tif(list.$virtual && list.length !== 0){\r\n\t\t\t\t\texist[index-1].insertAdjacentElement('afterEnd', temp);\r\n\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\r\n\t\t\t\t\t// Refresh virtual scroll\r\n\t\t\t\t\tlist.$virtual.refresh();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparentNode.appendChild(temp);\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t\telse if(options === 'insertBefore'){\r\n\t\t\t\texist[0].insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\r\n\t\t\t\t// Refresh virtual scroll\r\n\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar _single_zero = [0]; // For arguments\r\n\t\tvar _double_zero = [0,0]; // For arguments\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = undefined;\r\n\t\t\t\t\tvar lastLength = this.length;\r\n\r\n\t\t\t\t\tif(name === 'move'){\r\n\t\t\t\t\t\tvar from = arguments[0];\r\n\t\t\t\t\t\tvar to = arguments[1];\r\n\t\t\t\t\t\tif(from === to) return;\r\n\t\t\t\t\t\tvar count = arguments[2] || 1;\r\n\t\t\t\t\t\tprocessElement(from, 'move', to, count);\r\n\r\n\t\t\t\t\t\tvar temp = Array.prototype.splice.apply(this, [from, count]);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, [to, 0].concat(temp));\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(name === 'swap'){\r\n\t\t\t\t\t\tvar i = arguments[0];\r\n\t\t\t\t\t\tvar o = arguments[1];\r\n\t\t\t\t\t\tif(i === o) return;\r\n\t\t\t\t\t\tprocessElement(i, 'swap', o);\r\n\t\t\t\t\t\tvar temp = this[i];\r\n\t\t\t\t\t\tthis[i] = this[o];\r\n\t\t\t\t\t\tthis[o] = temp;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === '$replace'){\r\n\t\t\t\t\t\t// Check if appending\r\n\t\t\t\t\t\tif(arguments[0].length >= lastLength && lastLength !== 0){\r\n\t\t\t\t\t\t\tvar matchLeft = lastLength;\r\n\t\t\t\t\t\t\tvar ref = arguments[0];\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < lastLength; i++) {\r\n\t\t\t\t\t\t\t\tif(ref[i] === this[i]){\r\n\t\t\t\t\t\t\t\t\tmatchLeft--;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(matchLeft === 0){\r\n\t\t\t\t\t\t\t\tif(ref.length === lastLength) return;\r\n\r\n\t\t\t\t\t\t\t\tArray.prototype.splice.apply(this, [lastLength, 0].concat(arguments[0].slice(lastLength)));\r\n\t\t\t\t\t\t\t\tprocessElement(lastLength, 'hardRefresh');\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(lastLength !== 0){\r\n\t\t\t\t\t\t\tArray.prototype.splice.apply(this, _single_zero);\r\n\t\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, _double_zero.concat(arguments[0]));\r\n\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice' && arguments[0] === 0 && arguments[1] === undefined){\r\n\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\treturn Array.prototype.splice.apply(this, arguments);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(this.length, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'push')\r\n\t\t\t\t\t\tprocessElement(lastLength, 'append');\r\n\r\n\t\t\t\t\telse if(name === 'shift')\r\n\t\t\t\t\t\tprocessElement(0, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments[0] === 0 && arguments[1] === undefined)\r\n\t\t\t\t\t\t\treturn temp;\r\n\r\n\t\t\t\t\t\t// Removing data\r\n\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\tif(real < 0) real = lastLength + real;\r\n\r\n\t\t\t\t\t\tvar limit = arguments[1];\r\n\t\t\t\t\t\tif(!limit && limit !== 0) limit = this.length;\r\n\r\n\t\t\t\t\t\tfor (var i = limit - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tprocessElement(real + i, 'remove');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(arguments.length >= 3){ // Inserting data\r\n\t\t\t\t\t\t\tlimit = arguments.length - 2;\r\n\t\t\t\t\t\t\tfor (var i = 0; i < limit; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(real + i, 'insertAfter');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift')\r\n\t\t\t\t\t\tprocessElement(0, 'insertBefore');\r\n\r\n\t\t\t\t\telse if(name === 'softRefresh')\r\n\t\t\t\t\t\tprocessElement(arguments[0], 'update', arguments[1]);\r\n\r\n\t\t\t\t\telse if(name === 'hardRefresh')\r\n\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(parentNode && parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\tdelete list.$virtual;\r\n\t\t\tlist.$virtual = {};\r\n\r\n\t\t\t// Transfer virtual DOM\r\n\t\t\tlist.$virtual.dom = tempDOM;\r\n\r\n\t\t\tparentNode.replaceChild(template.html, parentNode.children[1]);\r\n\t\t\tsf.internal.virtual_scroll.handle(list, targetNode, parentNode);\r\n\t\t\ttemplate.html.remove();\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\r\n\t\tObject.defineProperty(list, 'getElement', {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(index){\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tif(index < list.$virtual.DOMCursor)\r\n\t\t\t\t\t\treturn list.$virtual.dom.children[index];\r\n\r\n\t\t\t\t\tindex -= list.$virtual.DOMCursor;\r\n\t\t\t\t\tvar childElement = parentNode.childElementCount - 2;\r\n\t\t\t\t\tif(index <= childElement)\r\n\t\t\t\t\t\treturn parentNode.children[index + 1];\r\n\r\n\t\t\t\t\treturn list.$virtual.dom.children[index - childElement + list.$virtual.DOMCursor];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn parentNode.children[index];\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvar loopParser = function(name, template, script, targetNode, parentNode){\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\r\n\t\tif(!self.root[name])\r\n\t\t\treturn console.error(\"Can't parse element because model for '\"+name+\"' was not found\", template);\r\n\r\n\t\tvar items = self.root[name][method[1]];\r\n\t\tif(items === undefined){\r\n\t\t\tconsole.error(\"Can't bind array to `\"+method[1]+\"` because undefined property in model `\"+name+\"`\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttemplate.setAttribute('sf-bind-list', method[1]);\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = template;\r\n\t\ttemplate = self.extractPreprocess(template, mask, name);\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tvar tempDOM = document.createElement('div');\r\n\t\t\tvar modelRef = self.root[name];\r\n\t\t\t\r\n\t\t\tfor(var i in items){\r\n\t\t\t\ttempDOM.appendChild(preparedParser(template, items[i]));\r\n\t\t\t}\r\n\r\n\t\t\t// Enable element binding\r\n\t\t\tif(modelRef.sf$bindedKey === undefined)\r\n\t\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\t\tif(modelRef.sf$bindedKey[method[1]] === undefined)\r\n\t\t\t\tmodelRef.sf$bindedKey[method[1]] = null;\r\n\r\n\t\t\tObject.defineProperty(modelRef, method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tif(val.length === 0)\r\n\t\t\t\t\t\treturn items.splice(0);\r\n\t\t\t\t\treturn items.$replace(val);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tbindArray(template, items, mask, name, method[1], targetNode, parentNode, tempDOM);\r\n\r\n\t\t\t// Output to real DOM if not being used for virtual list\r\n\t\t\tif(items.$virtual === undefined){\r\n\t\t\t\tvar children = tempDOM.children;\r\n\t\t\t\tfor (var i = 0; i < children.length; i++) {\r\n\t\t\t\t\tparentNode.appendChild(children[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttempDOM.remove();\r\n\t\t\t\ttempDOM = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar inputBoundFunction = function(e){\r\n\t\tself.root[e.target['sf-model']][e.target['sf-bounded']] = e.target.value;\r\n\t};\r\n\r\n\tvar bindInput = function(targetNode){\r\n\t\tvar temp = $('input[sf-bound]', targetNode);\r\n\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar model = sf.controller.modelName(element);\r\n\t\t\tif(!model) return;\r\n\r\n\t\t\tvar whichVar = element.getAttribute('sf-bound');\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(typeof self.root[model][whichVar] === undefined){\r\n\t\t\t\tconsole.error('Cannot get reference for self.root[\"' + model + '\"][\"' + whichVar+'\"]');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement['sf-bounded'] = whichVar;\r\n\t\t\telement['sf-model'] = model;\r\n\t\t\telement.setAttribute('sf-bounded', '');\r\n\t\t\telement.removeAttribute('sf-bound');\r\n\r\n\t\t\t// Bound value change\r\n\t\t\tif(element.tagName === 'INPUT' || element.tagName === 'TEXTAREA')\r\n\t\t\t\t$.on(element, 'keyup', inputBoundFunction);\r\n\r\n\t\t\telse\r\n\t\t\t\t$.on(element, 'change', inputBoundFunction);\r\n\t\t}\r\n\t}\r\n\r\n\tvar alreadyInitialized = false;\r\n\tself.init = function(targetNode){\r\n\t\tif(alreadyInitialized && !targetNode) return;\r\n\t\talreadyInitialized = true;\r\n\t\tsetTimeout(function(){\r\n\t\t\talreadyInitialized = false;\r\n\t\t}, 50);\r\n\r\n\t\tif(!targetNode) targetNode = document.body;\r\n\t\tself.parsePreprocess(self.queuePreprocess(targetNode));\r\n\t\tbindInput(targetNode);\r\n\r\n\t\tvar temp = $('[sf-repeat-this]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar parent = element.parentElement;\r\n\r\n\t\t\tif(element.parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\t\tvar ceiling = document.createElement(element.tagName);\r\n\t\t\t\tceiling.classList.add('virtual-spacer');\r\n\t\t\t\tvar floor = ceiling.cloneNode(true);\r\n\r\n\t\t\t\tceiling.classList.add('ceiling');\r\n\t\t\t\t//ceiling.style.transform = 'scaleY(0)';\r\n\t\t\t\telement.parentNode.insertAdjacentElement('afterBegin', ceiling); // prepend\r\n\r\n\t\t\t\tfloor.classList.add('floor');\r\n\t\t\t\t//floor.style.transform = 'scaleY(0)';\r\n\t\t\t\telement.parentNode.insertAdjacentElement('beforeEnd', floor); // append\r\n\r\n\t\t\t\t// His total scrollHeight\r\n\t\t\t\tvar styles = window.getComputedStyle(element);\r\n\t\t\t\tvar absHeight = parseFloat(styles['marginTop']) + parseFloat(styles['marginBottom']);\r\n\t\t\t\tstyles = null;\r\n\r\n\t\t\t\t// Element height + margin\r\n\t\t\t\tabsHeight = Math.ceil(element.offsetHeight + absHeight);\r\n\t\t\t}\r\n\r\n\t\t\tvar after = element.nextElementSibling;\r\n\t\t\tif(after === null || element === after)\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = element.previousElementSibling;\r\n\t\t\tif(before === null || element === before)\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = element.getAttribute('sf-repeat-this');\r\n\t\t\telement.removeAttribute('sf-repeat-this');\r\n\t\t\tvar controller = sf.controller.modelName(element);\r\n\r\n\t\t\t// Check if the element was already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(element.outerHTML))\r\n\t\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\t\tloopParser(controller, element, script, targetNode, element.parentNode);\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t}\r\n\r\n\t// Reset model properties\r\n\t// Don't call if the removed element is TEXT or #comment\r\n\tfunction DOMNodeRemoved(element){\r\n\t\tvar temp = $('[sf-controller]', element);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tremoveModelBinding(temp[i].getAttribute('sf-controller'));\r\n\t\t}\r\n\r\n\t\tif(element.hasAttribute('sf-controller') === false)\r\n\t\t\treturn;\r\n\r\n\t\tremoveModelBinding(element.getAttribute('sf-controller'));\r\n\t}\r\n\r\n\tsf(function(){\r\n\t\tvar everyRemovedNodes = function(nodes){\r\n\t\t\tvar tagName = nodes.nodeName;\r\n\t\t\tif(tagName === 'TEXT' || tagName === '#text' || tagName === '#comment') return;\r\n\r\n\t\t\tDOMNodeRemoved(nodes);\r\n\t\t}\r\n\r\n\t\tif(typeof MutationObserver === 'function' && MutationObserver.prototype.observe){\r\n\t\t\tvar everyRecords = function(record){\r\n\t\t\t\trecord.removedNodes.forEach(everyRemovedNodes);\r\n\t\t\t}\r\n\r\n\t\t\tvar observer = new MutationObserver(function(records){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\trecords.forEach(everyRecords);\r\n\t\t\t});\r\n\r\n\t\t\tobserver.observe(document.body, { childList: true, subtree: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.body.addEventListener('DOMNodeRemoved', function(e){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\teveryRemovedNodes(e.target);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tvar removeModelBinding = function(modelName){\r\n\t\tvar ref = self.root[modelName];\r\n\t\tif(ref === undefined)\r\n\t\t\treturn;\r\n\r\n\t\tvar bindedKey = ref.sf$bindedKey;\r\n\t\tvar temp = null;\r\n\t\tfor(var key in bindedKey){\r\n\t\t\tdelete bindedKey[key];\r\n\r\n\t\t\tif(ref[key] === undefined || ref[key] === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(ref[key].constructor === String ||\r\n\t\t\t\tref[key].constructor === Number ||\r\n\t\t\t\tref[key].constructor === Boolean\r\n\t\t\t){/* Ok */}\r\n\r\n\t\t\telse if(ref[key].constructor === Array){\r\n\t\t\t\tif(ref[key].$virtual){\r\n\t\t\t\t\tref[key].$virtual.destroy();\r\n\t\t\t\t\tdelete ref[key].$virtual;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset property without copying the array\r\n\t\t\t\ttemp = ref[key].splice('obtain');\r\n\t\t\t\tdelete ref[key];\r\n\t\t\t\tref[key] = temp;\r\n\t\t\t}\r\n\t\t\telse continue;\r\n\r\n\t\t\tif(Object.getOwnPropertyDescriptor(ref, key) === undefined)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Reconfigure / Remove property descriptor\r\n\t\t\tvar temp = ref[key];\r\n\t\t\tdelete ref[key];\r\n\t\t\tref[key] = temp;\r\n\t\t}\r\n\t}\r\n\r\n\tvar dcBracket = /{{[\\s\\S]*?}}/;\r\n\tvar bindObject = function(element, modelRef, propertyName, which){\r\n\t\tif(!(element instanceof Node))\r\n\t\t\telement = element[0];\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = element;\r\n\r\n\t\t// First initialization\r\n\t\telement.setAttribute('sf-bind-key', propertyName);\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\r\n\t\t// Cache attribute content\r\n\t\tif(which === 'attr' || !which){\r\n\t\t\tvar attrs = {};\r\n\r\n\t\t\tfor (var i = 0; i < element.attributes.length; i++) {\r\n\t\t\t\tvar attr = element.attributes[i].name;\r\n\r\n\t\t\t\t// Check if it has a bracket\r\n\t\t\t\tif(dcBracket.test(element.getAttribute(attr)) === false)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tattrs[attr] = element.getAttribute(attr);\r\n\t\t\t\telement.removeAttribute(attr);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Cache html content\r\n\t\tif(which === 'html' || !which)\r\n\t\t\tvar htmlClone = element.cloneNode(true).innerHTML;\r\n\r\n\t\tvar onChanges = function(){\r\n\t\t\tif(which === 'attr' || !which){\r\n\t\t\t\tfor(var name in attrs){\r\n\t\t\t\t\tif(attrs[name].indexOf(propertyName) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tvar temp = dataParser(attrs[name], modelRef, false, modelName);\r\n\t\t\t\t\tif(name === 'value')\r\n\t\t\t\t\t\telement.value = temp;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\telement.setAttribute(name, temp);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(which === 'html' || !which){\r\n\t\t\t\tvar temp = uniqueDataParser(htmlClone, modelRef, false, modelName);\r\n\t\t\t\ttemp = dataParser(temp, modelRef, false, modelName);\r\n\t\t\t\telement.textContent = '';\r\n\t\t\t\telement.insertAdjacentHTML('afterBegin', temp);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif(modelRef[propertyName] === undefined)\r\n\t\t\tthrow \"Property '\"+propertyName+\"' was not found on '\"+modelName+\"' model\";\r\n\r\n\t\t// Enable multiple element binding\r\n\t\tif(modelRef.sf$bindedKey === undefined)\r\n\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\tif(modelRef.sf$bindedKey[propertyName] !== undefined){\r\n\t\t\tmodelRef.sf$bindedKey[propertyName].push(onChanges);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar objValue = modelRef[propertyName]; // Object value\r\n\t\tObject.defineProperty(modelRef, propertyName, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\t\t\tget:function(){\r\n\t\t\t\treturn objValue;\r\n\t\t\t},\r\n\t\t\tset:function(val){\r\n\t\t\t\tobjValue = val;\r\n\r\n\t\t\t\tvar ref = modelRef.sf$bindedKey[propertyName];\r\n\t\t\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\t\t\tref[i]();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn objValue;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tmodelRef.sf$bindedKey[propertyName] = [onChanges];\r\n\t}\r\n\r\n\tself.bindElement = function(element, which){\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar html = element.outerHTML;\r\n\r\n\t\t// Check if the child element was already bound to prevent vulnerability\r\n\t\tif(/sf-bind-key|sf-bind-list/.test(html))\r\n\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\tif(which === 'attr')\r\n\t\t\thtml = html.replace(element.innerHTML, '');\r\n\r\n\t\tvar brackets = /{{([\\s\\S]*?)}}/g;\r\n\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(model);\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(model[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\t\tvar s1, s2 = null;\r\n\t\twhile((s1 = brackets.exec(html)) !== null){\r\n\t\t\twhile ((s2 = scopeMask.exec(s1[1])) !== null) {\r\n\t\t\t\tbindObject(element, model, s2[1], which);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.extractPreprocess = function(targetNode, mask, name){\r\n\t\tvar copy = targetNode.outerHTML;\r\n\r\n\t\t// Mask the referenced item\r\n\t\tcopy = copy.split('#'+mask).join('_model_');\r\n\r\n\t\t// Extract data to be parsed\r\n\t\tcopy = uniqueDataParser(copy, null, mask, name, '#noEval');\r\n\t\tvar preParsed = copy[1];\r\n\t\tcopy = dataParser(copy[0], null, mask, name, '#noEval', preParsed);\r\n\r\n\t\t// Build element and start addressing\r\n\t\tcopy = $.parseElement(copy)[0];\r\n\t\tvar nodes = self.queuePreprocess(copy, true);\r\n\t\tvar addressed = [];\r\n\r\n\t\tfunction addressAttributes(currentNode){\r\n\t\t\tvar attrs = currentNode.attributes;\r\n\t\t\tvar keys = [];\r\n\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\tvar found = attrs[a].value.split('{{%=');\r\n\t\t\t\tif(found.length !== 1){\r\n\t\t\t\t\tvar key = {\r\n\t\t\t\t\t\tdirect: false,\r\n\t\t\t\t\t\tname:attrs[a].name\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif(found[0] === '' && found.length === 2)\r\n\t\t\t\t\t\tkey.direct = Number(found[1]) || false;\r\n\r\n\t\t\t\t\tkeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn keys;\r\n\t\t}\r\n\r\n\t\tvar currentElement = addressAttributes(copy);\r\n\t\tif(currentElement.length !== 0)\r\n\t\t\taddressed.push({\r\n\t\t\t\tnodeType:1,\r\n\t\t\t\taddress:[0],\r\n\t\t\t\tattributes:currentElement\r\n\t\t\t});\r\n\r\n\t\tfor (var i = 0; i < nodes.length; i++) {\r\n\t\t\tvar temp = {\r\n\t\t\t\tnodeType:nodes[i].nodeType,\r\n\t\t\t\taddress:$.getSelector(nodes[i], true)\r\n\t\t\t};\r\n\r\n\t\t\tif(temp.nodeType === 1) // Element\r\n\t\t\t\ttemp.attributes = addressAttributes(nodes[i]);\r\n\r\n\t\t\telse if(temp.nodeType === 3){ // Text node\r\n\t\t\t\tvar innerHTML = nodes[i].textContent;\r\n\t\t\t\ttemp.direct = false;\r\n\r\n\t\t\t\ttemp.indexes = innerHTML.match(/(?<={{%%=)[0-9]+/gm);\r\n\t\t\t\tif(temp.indexes !== null){\r\n\t\t\t\t\ttemp.indexes = temp.indexes.map(Number);\r\n\r\n\t\t\t\t\tinnerHTML = innerHTML.split(/{{%%=[0-9]+/gm);\r\n\r\n\t\t\t\t\tif(innerHTML[0][0] === \"\\n\"){\r\n\t\t\t\t\t\tfor (var a = 0; a < innerHTML.length; a++) {\r\n\t\t\t\t\t\t\tinnerHTML[a] = trimIndentation(innerHTML[a]).trim();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnodes[i].textContent = innerHTML[0].search(/{{%%=[0-9]+/) === 0 ? '' : innerHTML.shift();\r\n\t\t\t\t\ttemp.innerHTML = innerHTML;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tdelete temp.indexes;\r\n\t\t\t\t\tinnerHTML = nodes[i].parentNode.innerHTML.split('{{%=');\r\n\r\n\t\t\t\t\tif(innerHTML[0] === '' && innerHTML.length === 2)\r\n\t\t\t\t\t\ttemp.direct = Number(innerHTML[1]) || false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\taddressed.push(temp);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\thtml:copy,\r\n\t\t\tparse:preParsed,\r\n\t\t\taddresses:addressed\r\n\t\t}\r\n\t}\r\n\r\n\tvar excludes = ['HTML','HEAD','STYLE','LINK','META','SCRIPT','OBJECT','IFRAME'];\r\n\tself.queuePreprocess = function(targetNode, extracting = false){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = childNodes.length - 1; i >= 0; i--) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\r\n\t\t\tif(extracting === false && excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\r\n\t\t\t\t// Skip element and it's childs that already bound to prevent vulnerability\r\n\t\t\t\tif(attrs['sf-bind-key'] || attrs['sf-repeat-this'] || attrs['sf-bind-list']) continue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tif(extracting === false)\r\n\t\t\t\t\t\t\tcurrentNode.setAttribute('sf-preprocess', 'attronly');\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = temp.concat(self.queuePreprocess(currentNode, extracting));\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tcurrentNode.textContent = currentNode.textContent;\r\n\r\n\t\t\t\tif(currentNode.textContent.length === 0){\r\n\t\t\t\t\tcurrentNode.remove();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tif(extracting === false){\r\n\t\t\t\t\t\tcurrentNode.parentNode.setAttribute('sf-preprocess', '');\r\n\r\n\t\t\t\t\t\t// Reset Siblings\r\n\t\t\t\t\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\t\t\t\t\ttemp[a].removeAttribute('sf-preprocess');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttemp.push(currentNode.parentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn temp;\r\n\t}\r\n\r\n\tself.parsePreprocess = function(nodes){\r\n\t\tfor (var a = 0; a < nodes.length; a++) {\r\n\t\t\tvar model = sf.controller.modelName(nodes[a]);\r\n\t\t\tnodes[a].removeAttribute('sf-preprocess');\r\n\r\n\t\t\tif(!self.root[model])\r\n\t\t\t\treturn console.error(\"Can't parse element because model for '\"+model+\"' was not found\", nodes[a]);\r\n\r\n\t\t\tvar modelRef = self.root[model];\r\n\r\n\t\t\t// Get reference for debugging\r\n\t\t\tprocessingElement = nodes[a];\r\n\r\n\t\t\t// Double check if the child element already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(nodes[a].innerHTML)){\r\n\t\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\t\tconsole.log(processingElement.cloneNode(true));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(nodes[a].hasAttribute('sf-bind'))\r\n\t\t\t\tself.bindElement(nodes[a], nodes[a].getAttribute('sf-bind'));\r\n\r\n\t\t\t// Avoid editing the outerHTML because it will remove the bind\r\n\t\t\tvar temp = uniqueDataParser(nodes[a].innerHTML, self.root[model], false, model);\r\n\t\t\tnodes[a].innerHTML = dataParser(temp, self.root[model], false, model);\r\n\r\n\t\t\tvar attrs = nodes[a].attributes;\r\n\t\t\tfor (var i = 0; i < attrs.length; i++) {\r\n\t\t\t\tif(attrs[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\tvar attr = attrs[i];\r\n\t\t\t\t\tattr.value = dataParser(attr.value, self.root[model], false, model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initBindingInformation(modelRef){\r\n\t\tif(modelRef.sf$bindedKey !== undefined)\r\n\t\t\treturn;\r\n\r\n\t\t// Element binding data\r\n\t\tObject.defineProperty(modelRef, 'sf$bindedKey', {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable:false,\r\n\t\t\twritable:true,\r\n\t\t\tvalue:{}\r\n\t\t});\r\n\t}\r\n})();","sf.router = new function(){\r\n\tvar self = this;\r\n\tself.loading = false;\r\n\tself.enabled = false;\r\n\tself.pauseRenderOnTransition = false;\r\n\tself.currentPage = [];\r\n\tvar initialized = false;\r\n\tvar lazyRouting = false;\r\n\tvar currentRouterURL = '';\r\n\r\n\t// Should be called if not using lazy page load\r\n\tself.init = function(targetNode){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init();\r\n\t\t\t});\r\n\r\n\t\t// Run 'before' event for new page view\r\n\t\tvar temp = $('[sf-controller], [sf-page]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tif(temp[i].getAttribute('sf-controller'))\r\n\t\t\t\tsf.controller.run(temp[i].getAttribute('sf-controller'));\r\n\t\t\t\r\n\t\t\tif(temp[i].getAttribute('sf-page')){\r\n\t\t\t\tvar name = temp[i].getAttribute('sf-page');\r\n\t\t\t\tbeforeEvent(name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinitialized = true;\r\n\t\tcurrentRouterURL = window.location.pathname;\r\n\t}\r\n\r\n\tfunction popstateListener(event) {\r\n\t\t// Don't continue if the last routing was error\r\n\t\tif(routingError){\r\n\t\t\troutingError = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\troutingBack = true;\r\n\t\tself.goto(window.location.pathname);\r\n\t}\r\n\r\n\tself.enable = function(status){\r\n\t\tif(status === undefined) status = true;\r\n\t\tif(self.enabled === status) return;\r\n\t\tself.enabled = status;\r\n\r\n\t\tif(status === true){\r\n\t\t\t// Create listener for link click\r\n\t\t\t$.on(document.body, 'click', 'a[href]', self.load);\r\n\r\n\t\t\t// Create listener when navigate backward\r\n\t\t\twindow.addEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$.off(document.body, 'click', 'a[href]', self.load);\r\n\t\t\twindow.removeEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t}\r\n\r\n\tvar before = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.before = function(name, func, index){\r\n\t\tif(!before[name])\r\n\t\t\tbefore[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(before[name].indexOf(func) === -1)\r\n\t\t\t\tbefore[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tbefore[name][index] = func;\r\n\t}\r\n\r\n\tvar after = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.after = function(name, func, index){\r\n\t\tif(!after[name])\r\n\t\t\tafter[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(after[name].indexOf(func) === -1)\r\n\t\t\t\tafter[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tafter[name][index] = func;\r\n\t}\r\n\r\n\tvar root_ = function(scope){\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.model.root[scope] = {};\r\n\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.controller.run(scope);\r\n\t\t\r\n\t\treturn sf.model.root[scope];\r\n\t}\r\n\r\n\t// Running 'before' new page going to be displayed\r\n\tvar beforeEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.push(name);\r\n\r\n\t\tif(before[name]){\r\n\t\t\tfor (var i = 0; i < before[name].length; i++) {\r\n\t\t\t\tbefore[name][i](root_);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Running 'after' old page going to be removed\r\n\tvar afterEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.splice(self.currentPage.indexOf(name), 1);\r\n\r\n\t\tif(after[name]){\r\n\t\t\tfor (var i = 0; i < after[name].length; i++) {\r\n\t\t\t\tafter[name][i](root_);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar onEvent = {\r\n\t\t'loading':[],\r\n\t\t'loaded':[],\r\n\t\t'special':[],\r\n\t\t'error':[]\r\n\t};\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\tself.lazyViewPoint = {};\r\n\t/*\r\n\t\t{\r\n\t\t\toldURlPattern:{\r\n\t\t\t\tnewURLPattern:'.viewPoint'\r\n\t\t\t}\r\n\t\t}\r\n\t*/\r\n\r\n\tself.load = function(ev){\r\n\t\tif(self.enabled !== true) return;\r\n\r\n\t\tvar elem = ev.target;\r\n\t\tif(!elem.href) return;\r\n\r\n\t\tif(!history.pushState || elem.hasAttribute('sf-router-ignore'))\r\n\t\t\treturn;\r\n\r\n\t\t// Make sure it's from current origin\r\n\t\tvar path = elem.href.replace(window.location.origin, '');\r\n\t\tif(path.indexOf('//') !== -1)\r\n\t\t\treturn;\r\n\r\n\t\tev.preventDefault()\r\n\t\treturn !self.goto(path);\r\n\t}\r\n\r\n\tvar RouterLoading = false;\r\n\tvar routingBack = false;\r\n\tvar routingError = false;\r\n\tself.goto = function(path, data, method){\r\n\t\tif(!method) method = 'GET';\r\n        else method = method.toUpperCase();\r\n\r\n\t\tif(!data) data = {};\r\n\r\n\t\tfor (var i = 0; i < onEvent['loading'].length; i++) {\r\n\t\t\tif(onEvent['loading'][i](path)) return;\r\n\t\t}\r\n\t\tvar oldPath = window.location.pathname;\r\n\t\tinitialized = false;\r\n\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\t\tRouterLoading = $.ajax({\r\n\t\t\turl:window.location.origin + path,\r\n\t\t\tmethod:method,\r\n            data:Object.assign(data, {\r\n                _scarlets:'.dynamic.'\r\n            }),\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\tif(initialized) return;\r\n\t\t\t\tlazyRouting = true;\r\n\r\n\t\t\t\t// Run 'loaded' event\r\n\t\t\t\tRouterLoading = false;\r\n\r\n\t\t\t\t// Find special data\r\n\t\t\t\tvar regex = RegExp('<!-- SF-Special:(.*?)-->'+sf.regex.avoidQuotes, 'gm');\r\n\t\t\t\tvar special = regex.exec(data);\r\n\t\t\t\tif(special && special.length !== 1){\r\n\t\t\t\t\tspecial = special[1].split('--|&>').join('-->');\r\n\t\t\t\t\tspecial = JSON.parse(special);\r\n\r\n\t\t\t\t\tif(!isEmptyObject(special)){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['special'].length; i++) {\r\n\t\t\t\t\t\t\tif(onEvent['special'][i](special)) return;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DOMReference = false;\r\n\t\t\t\tvar foundAction = function(ref){\r\n\t\t\t\t\tDOMReference = $.findOne(ref);\r\n\r\n\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\tvar last = $.findOne('[sf-page]', DOMReference);\r\n\t\t\t\t\tafterEvent(last ? last.getAttribute('sf-page') : '/');\r\n\r\n\t\t\t\t\t// Redefine title if exist\r\n\t\t\t\t\tif(special && special.title)\r\n\t\t\t\t\t\t$('head > title').innerHTML = special.title;\r\n\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tfor(var oldURL in self.lazyViewPoint){\r\n\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\tfor(var newURL in self.lazyViewPoint[oldURL]){\r\n\t\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\t\tfoundAction(self.lazyViewPoint[oldURL][newURL]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(found) break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When the view point was not found\r\n\t\t\t\tif(!found){\r\n\t\t\t\t\t// Use fallback if exist\r\n\t\t\t\t\tif(sf.router.lazyViewPoint[\"@default\"])\r\n\t\t\t\t\t\tfoundAction(sf.router.lazyViewPoint[\"@default\"]);\r\n\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\t\t\tonEvent['error'][i]('sf.router.lazyViewPoint[\"'+oldURL+'\"][\"'+newURL+'\"] was not found');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Run 'before' event for new page view\r\n\t\t\t\tif(!DOMReference) DOMReference = document.body;\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', 'none');\r\n\r\n\t\t\t\t// Let page script running first, then update the data binding\r\n\t\t\t\tDOMReference.innerHTML = data;\r\n\r\n\t\t\t\t// Parse the DOM data binding\r\n\t\t\t\tsf.model.init(DOMReference);\r\n\r\n\t\t\t\t// Init template to model binding\r\n\t\t\t\tvar temp = $('[sf-page]', DOMReference);\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tbeforeEvent(temp[i].getAttribute('sf-page'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', '');\r\n\r\n\t\t\t\trouterLoaded(currentRouterURL, path, DOMReference);\r\n\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tlazyRouting = false;\r\n\r\n\t\t\t\tcurrentRouterURL = path;\r\n\t\t\t\troutingError = false;\r\n\t\t\t},\r\n\t\t\terror:function(xhr, data){\r\n\t\t\t\troutingError = true;\r\n\t\t\t\tif(xhr.aborted) return;\r\n\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\tonEvent['error'][i](xhr.status, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Back on error\r\n\t\t\t\twindow.history.back();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!routingBack)\r\n\t\t\twindow.history.pushState(null, \"\", path);\r\n\r\n\t\troutingBack = false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Trigger loaded event\r\n\tfunction routerLoaded(currentRouterURL, path, data){\r\n\t\tfor (var i = 0; i < onEvent['loaded'].length; i++) {\r\n\t\t\tonEvent['loaded'][i](currentRouterURL, path, data);\r\n\t\t}\r\n\t}\r\n};","sf.internal.virtual_scroll = new function(){\r\n\tvar self = this;\r\n\tvar styleInitialized = false;\r\n\tvar scrollingByScript = false;\r\n\r\n\t// before and after\r\n\tself.prepareCount = 4; // 4, 8, 12, 16, ...\r\n\r\n\tself.handle = function(list, targetNode, parentNode){\r\n\t\tif(!styleInitialized){\r\n\t\t\tinitStyles();\r\n\t\t\tstyleInitialized = true;\r\n\t\t}\r\n\r\n\t\tlist.$virtual.elements = function(){\r\n\t\t\treturn obtainElements(list, parentNode);\r\n\t\t}\r\n\r\n\t\tlist.$virtual.dCursor = { // DOM Cursor\r\n\t\t\tceiling:parentNode.querySelector('.virtual-spacer.ceiling'),\r\n\t\t\tfloor:parentNode.querySelector('.virtual-spacer.floor')\r\n\t\t};\r\n\r\n\t\tlist.$virtual.bounding = {\r\n\t\t\tceiling:-1,\r\n\t\t\tfloor:0\r\n\t\t}\r\n\r\n\t\tlist.$virtual.vCursor = { // Virtual Cursor\r\n\t\t\tceiling:null, // for forward direction\r\n\t\t\tfloor:null // for backward direction\r\n\t\t}\r\n\r\n\t\tlist.$virtual.targetNode = parentNode;\r\n\t\tlist.$virtual.DOMCursor = 0; // cursor of first element in DOM tree as a cursor\r\n\r\n\t\tlist.$virtual.scrollHeight = \r\n\t\t\tlist.$virtual.dCursor.floor.offsetTop - \r\n\t\t\tlist.$virtual.dCursor.ceiling.offsetTop;\r\n\r\n\t\tvar scroller = null;\r\n\t\tlist.$virtual.destroy = function(){\r\n\t\t\t$.off(scroller, 'scroll');\r\n\t\t\t$.off(parentNode, 'mousedown mouseup');\r\n\t\t\tlist.$virtual.dom.innerHTML = '';\r\n\t\t\toffElementResize(parentNode);\r\n\t\t\tdelete list.$virtual;\r\n\t\t}\r\n\r\n\t\tlist.$virtual.resetViewport = function(){\r\n\t\t\tlist.$virtual.visibleLength = Math.floor(scroller.clientHeight / list.$virtual.scrollHeight);\r\n\t\t\tlist.$virtual.preparedLength = list.$virtual.visibleLength + self.prepareCount * 2;\r\n\t\t}\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tscroller = parentNode;\r\n\r\n\t\t\tvar length = parentNode.getAttribute('scroll-parent-index') || 0;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tscroller = scroller.parentElement;\r\n\t\t\t}\r\n\r\n\t\t\tlist.$virtual.resetViewport();\r\n\r\n\t\t\tif(parentNode.classList.contains('sf-list-dynamic'))\r\n\t\t\t\tdynamicHeight(list, targetNode, parentNode, scroller);\r\n\t\t\telse\r\n\t\t\t\tstaticHeight(list, targetNode, parentNode, scroller);\r\n\t\t}, 500);\r\n\t}\r\n\r\n\t// Recommended for a list that have different element height\r\n\tfunction dynamicHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\t// Insert some element until reach visible height\r\n\t\tfillViewport();\r\n\r\n\t\tvirtual.visibleLength = parentNode.childElementCount - 2;\r\n\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\tvar temp = vCursor.floor;\r\n\t\t\tif(temp === null) break;\r\n\r\n\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t}\r\n\t\tvirtual.DOMCursor = 0;\r\n\r\n\t\tvar ceilingHeight = 0;\r\n\t\tvar floorHeight = 0;\r\n\t\tfunction previousCeiling(){\r\n\t\t\tvar temp = null;\r\n\t\t\tvar resetCeiling = false;\r\n\r\n\t\t\t// Add some element on the ceiling\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\ttemp = virtual.dom.lastElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.ceiling = temp.previousElementSibling;\r\n\t\t\t\tvirtual.DOMCursor--;\r\n\r\n\t\t\t\tceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tif(ceilingHeight > 0)\r\n\t\t\t\t\tceilingHeight -= getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(virtual.DOMCursor < self.prepareCount && !resetCeiling){\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\tresetCeiling = true;\r\n\t\t\t\t\ttemp = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(ceilingHeight < 0 || temp === null)\r\n\t\t\t\tceilingHeight = 0;\r\n\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\t// Remove some element on the floor\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = floor.previousElementSibling;\r\n\t\t\t\tfloorHeight += getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tvCursor.floor = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.floor === null)\r\n\t\t\t\tvCursor.ceiling = virtual.dom.lastElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tfunction fillViewport(){\r\n\t\t\t// Insert some element depend on prepared length\r\n\t\t\tvar length = virtual.preparedLength - (parentNode.childElementCount - 2);\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\ttemp = virtual.dom.firstElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction nextFloor(){\r\n\t\t\tvar temp = null;\r\n\t\t\tfillViewport();\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t// Add extra element based on prepare count\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\ttemp = vCursor.floor;\r\n\t\t\t\tif(temp === null) break;\r\n\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tif(floorHeight > 0)\r\n\t\t\t\t\tfloorHeight -= getAbsoluteHeight(temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(floorHeight < 0 || temp === null)\r\n\t\t\t\tfloorHeight = 0;\r\n\r\n\t\t\t// Remove some element on the ceiling\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\t\t\t\tceilingHeight += getAbsoluteHeight(temp);\r\n\t\t\t\tvirtual.DOMCursor++;\r\n\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\telse vCursor.ceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tvCursor.ceiling = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\t\trefreshScrollBounding(0, bounding, list, parentNode);\r\n\r\n\t\tvar updating = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript) return;\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tif(scroller.scrollTop < bounding.ceiling){\r\n\t\t\t\t// console.log('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tpreviousCeiling();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\telse if(scroller.scrollTop > bounding.floor){\r\n\t\t\t\t// console.log('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tnextFloor();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\t\tonElementResize(parentNode, function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t});\r\n\t}\r\n\r\n\t// Recommended for a list that have similar element height\r\n\tfunction staticHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\r\n\t\t// Insert visible element to dom tree\r\n\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\tif(virtual.dom.firstElementChild === null)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', virtual.dom.firstElementChild);\r\n\t\t}\r\n\r\n\t\tfunction refreshVirtualSpacer(cursor){\r\n\t\t\tif(cursor >= self.prepareCount){\r\n\t\t\t\tceiling.style.height = (cursor - self.prepareCount) * virtual.scrollHeight + 'px';\r\n\t\t\t\tfloor.style.height = (list.length - virtual.preparedLength - cursor) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tceiling.style.height = cursor * virtual.scrollHeight + 'px'; //'0px';\r\n\t\t\t\tvar count = (list.length - virtual.preparedLength);\r\n\t\t\t\tfloor.style.height = (count || 0) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\r\n\t\trefreshVirtualSpacer(0);\r\n\t\trefreshScrollBounding(self.prepareCount, bounding, list, parentNode);\r\n\t\tbounding.ceiling = -1;\r\n\r\n\t\tvirtual.offsetTo = function(index){\r\n\t\t\treturn index * virtual.scrollHeight + ceiling.offsetTop;\r\n\t\t}\r\n\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tvar fromCeiling = true;\r\n\t\tvar scrollFocused = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript || scroller.scrollTop >= bounding.ceiling && scroller.scrollTop <= bounding.floor){\r\n\t\t\t\t// Fix chrome scroll anchoring bugs when scrolling at corner\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tif(scroller.scrollTop === 0 || scroller.scrollTop === scroller.scrollHeight - scroller.clientHeight){\r\n\t\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar cursor = Math.floor(scroller.scrollTop / virtual.scrollHeight);\r\n\t\t\tif(cursor + virtual.preparedLength > list.length)\r\n\t\t\t\tcursor = list.length - virtual.preparedLength;\r\n\r\n\t\t\tif(fromCeiling){\r\n\t\t\t\tif(cursor < self.prepareCount*2)\r\n\t\t\t\t\tcursor -= self.prepareCount;\r\n\r\n\t\t\t\t// Fix chrome scroll anchoring bugs\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t}\r\n\t\t\t\tfromCeiling = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cursor < self.prepareCount){\r\n\t\t\t\tcursor = 0;\r\n\t\t\t\tfromCeiling = true;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tvar changes = cursor - virtual.DOMCursor;\r\n\t\t\tif(cursor + changes >= list.length)\r\n\t\t\t\tchanges = cursor + changes - list.length;\r\n\r\n\t\t\tif(changes === 0){ // This should be fixed to improve performance and future bugs\r\n\t\t\t\t//console.warn(\"No changes (The scroll bounding is not correct)\");\r\n\t\t\t\tupdating = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.DOMCursor = cursor;\r\n\r\n\t\t\t//console.log(cursor, changes);\r\n\r\n\t\t\t//console.log(cursor, changes, bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\t\t\tmoveElementCursor(changes, list);\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\t\t\trefreshScrollBounding(cursor, bounding, list, parentNode);\r\n\t\t\t//console.log('a', bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\r\n\t\t// For preventing scroll jump if scrolling over than viewport\r\n\t\tif(scroller === parentNode && navigator.userAgent.indexOf('Chrom') !== -1){\r\n\t\t\t$.on(parentNode, 'mousedown', function(){\r\n\t\t\t\tscrollFocused = true;\r\n\t\t\t});\r\n\t\t\t$.on(parentNode, 'mouseup', function(){\r\n\t\t\t\tscrollFocused = false;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction refreshScrollBounding(cursor, bounding, list, parentNode){\r\n\t\tvar temp = Math.floor(self.prepareCount / 2); // half of element preparation\r\n\t\tif(cursor < self.prepareCount){\r\n\t\t\tbounding.ceiling = -1;\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount * 2 + 1];\r\n\r\n\t\t\tif(bounding.floor !== undefined)\r\n\t\t\t\tbounding.floor = bounding.floor.offsetTop;\r\n\t\t\telse bounding.floor = parentNode.lastElementChild.offsetTop + 1000;\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if(parentNode.children[temp + 1] !== undefined)\r\n\t\t\t\tbounding.ceiling = parentNode.children[temp + 1].offsetTop; // -2 element\r\n\r\n\t\tif(list.$virtual.preparedLength !== undefined && cursor >= list.length - list.$virtual.preparedLength)\r\n\t\t\tbounding.floor = list.$virtual.dCursor.floor.offsetTop + list.$virtual.scrollHeight*2;\r\n\t\telse{\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount + 3].offsetTop; // +2 element\r\n\r\n\t\t\tif(parentNode.hasAttribute('scroll-reduce-floor')){\r\n\t\t\t\tbounding.floor -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t\tbounding.ceiling -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction moveElementCursor(changes, list){\r\n\t\tvar vDOM = list.$virtual.dom;\r\n\t\tvar vCursor = list.$virtual.vCursor;\r\n\t\tvar dCursor = list.$virtual.dCursor;\r\n\r\n\t\tif(changes > 0){ // forward\r\n\t\t\tvar ref = 0;\r\n\r\n\t\t\t// Select from virtual ceiling cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tref = vDOM.firstElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.ceiling.nextElementSibling;\r\n\t\t\t\tdCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the ceiling to vDom\r\n\t\t\tfor (var i = changes; i > 0; i--) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.ceiling === null){\r\n\t\t\t\t\tvCursor.ceiling = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('afterBegin', vCursor.ceiling);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t\t\tvCursor.ceiling = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\t\t}\r\n\t\telse if(changes < 0){ // backward\r\n\t\t\tvar ref = 0;\r\n\t\t\tchanges = -changes;\r\n\r\n\t\t\t// Select from virtual floor cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tref = vDOM.lastElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.floor.previousElementSibling;\r\n\t\t\t\tdCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the floor to vDom\r\n\t\t\tfor (var i = 0; i < changes; i++) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvCursor.floor = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('beforeEnd', vCursor.floor);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t\t\tvCursor.floor = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scrollTo(index, list, prepareCount, parentNode, scroller, refreshVirtualSpacer){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar reduce = 0;\r\n\r\n\t\tif(index >= list.length - virtual.preparedLength){\r\n\t\t\treduce -= prepareCount;\r\n\t\t\tindex = list.length - virtual.preparedLength;\r\n\t\t}\r\n\r\n\t\tif(index - virtual.DOMCursor === 0 || index >= list.length) return;\r\n\r\n\t\tscrollingByScript = true;\r\n\r\n\t\t// Already on DOM tree\r\n\t\tif((virtual.DOMCursor === 0 && index < prepareCount + prepareCount/2) ||\r\n\t\t\t(virtual.DOMCursor + prepareCount/2 > index\r\n\t\t\t&& virtual.DOMCursor + prepareCount < index))\r\n\t\t\tscroller.scrollTop = parentNode.children[index - virtual.DOMCursor + 1].offsetTop;\r\n\r\n\t\t// Move cursor\r\n\t\telse {\r\n\t\t\tvar temp = null;\r\n\t\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\t\tvar floor = virtual.dCursor.floor;\r\n\t\t\tvar vCursor = virtual.vCursor;\r\n\r\n\t\t\t// DOM tree to virtual DOM\r\n\t\t\tvar length = parentNode.childElementCount - 2;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\r\n\t\t\t\t\tif(i === length-1)\r\n\t\t\t\t\t\tvCursor.floor = temp;\r\n\t\t\t\t}\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(index >= prepareCount){\r\n\t\t\t\tif(index < list.length - virtual.preparedLength)\r\n\t\t\t\t\tindex -= prepareCount;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treduce = prepareCount - index;\r\n\t\t\t\tvirtual.DOMCursor = index = 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\r\n\t\t\t// Virtual DOM to DOM tree\r\n\t\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\t\ttemp = virtual.dom.children[index];\r\n\t\t\t\tif(temp === undefined) break;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t\tvirtual.DOMCursor = index;\r\n\r\n\t\t\tvCursor.floor = virtual.dom.children[index] || null;\r\n\t\t\tvCursor.ceiling = vCursor.floor ? vCursor.floor.previousElementSibling : null;\r\n\r\n\t\t\tif(refreshVirtualSpacer)\r\n\t\t\t\trefreshVirtualSpacer(index);\r\n\r\n\t\t\trefreshScrollBounding(index, virtual.bounding, list, parentNode);\r\n\r\n\t\t\ttemp = parentNode.children[prepareCount - reduce + 1];\r\n\t\r\n\t\t\tif(temp !== undefined)\r\n\t\t\t\tscroller.scrollTop = temp.offsetTop - scroller.offsetTop;\r\n\t\t}\r\n\r\n\t\tscrollingByScript = false;\r\n\t}\r\n\r\n\tfunction removeUserScrollFocus(parentNode){\r\n\t\tparentNode.style.overflow = 'hidden';\r\n\t\tsetTimeout(function(){\r\n\t\t\tparentNode.style.overflow = '';\r\n\t\t}, 50);\r\n\t}\r\n\r\n\tfunction getAbsoluteHeight(el){\r\n\t  var styles = window.getComputedStyle(el);\r\n\t  var margin = parseInt(styles['marginTop']) + parseInt(styles['marginBottom']);\r\n\t  return el.offsetHeight + margin || 0;\r\n\t}\r\n\r\n\tfunction obtainElements(list, parentNode){\r\n\t\tvar exist = [];\r\n\t\tvar temp = undefined;\r\n\r\n\t\tvar length = list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = parentNode.childElementCount - 2;\r\n\t\tfor (var i = 1; i <= length; i++) {\r\n\t\t\ttemp = parentNode.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = list.length - length - list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[list.$virtual.DOMCursor + i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\treturn exist;\r\n\t}\r\n\r\n\tfunction refresh(force, list, prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer){\r\n\t\tvar cursor = list.$virtual.DOMCursor;\r\n\t\tvar additionalScroll = 0;\r\n\r\n\t\t// Find nearest cursor for current view position\r\n\t\tif(force){\r\n\t\t\tvar i = -1;\r\n\t\t\tvar length = list.$virtual.preparedLength;\r\n\r\n\t\t\tdo{\r\n\t\t\t\ti++;\r\n\t\t\t} while(i < length && parentNode.children[i].offsetTop < scroller.scrollTop);\r\n\r\n\t\t\tcursor = cursor + i;\r\n\t\t\tif(cursor > 0) cursor -= 1;\r\n\r\n\t\t\tadditionalScroll = scroller.scrollTop - parentNode.children[i].offsetTop;\r\n\t\t}\r\n\r\n\t\t// Force move cursor if element in the DOM tree was overloaded\r\n\t\tif(force || parentNode.childElementCount - 2 > list.$virtual.preparedLength){\r\n\t\t\tlist.$virtual.DOMCursor = list.length;\r\n\t\t\tvar moveTo = cursor;\r\n\t\t\tif(!force)\r\n\t\t\t\tmoveTo = cursor <= prepareCount ? cursor : (cursor + prepareCount);\r\n\r\n\t\t\tscrollTo(moveTo,\r\n\t\t\t\tlist,\r\n\t\t\t\tprepareCount,\r\n\t\t\t\tparentNode,\r\n\t\t\t\tscroller,\r\n\t\t\t\trefreshVirtualSpacer\r\n\t\t\t);\r\n\r\n\t\t\tscroller.scrollTop += additionalScroll;\r\n\t\t}\r\n\r\n\t\tif(refreshVirtualSpacer)\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\r\n\t\tif(checkCursorPosition)\r\n\t\t\tcheckCursorPosition();\r\n\r\n\t\trefreshScrollBounding(cursor, list.$virtual.bounding, list, parentNode);\r\n\t}\r\n\r\n\tvar _onElementResize = [];\r\n\tvar _onElementResize_timer = -1;\r\n\tfunction onElementResize(parentNode, callback){\r\n\t\tif(_onElementResize_timer === -1){\r\n\t\t\t_onElementResize_timer = setInterval(function(){\r\n\t\t\t\tvar temp = null;\r\n\t\t\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\t\t\ttemp = _onElementResize[i];\r\n\r\n\t\t\t\t\t// Check resize\r\n\t\t\t\t\tif(temp.element.scrollHeight === temp.height\r\n\t\t\t\t\t\t|| temp.element.scrollWidth === temp.width)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t// Check if it's removed from DOM\r\n\t\t\t\t\tif(temp.element.parentElement === null){\r\n\t\t\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.callback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(_onElementResize.length === 0){\r\n\t\t\t\t\tclearInterval(_onElementResize_timer);\r\n\t\t\t\t\t_onElementResize_timer = -1;\r\n\t\t\t\t}\r\n\t\t\t}, 200);\r\n\t\t}\r\n\r\n\t\t_onElementResize.push({\r\n\t\t\telement:parentNode,\r\n\t\t\tcallback:callback,\r\n\t\t\theight:parentNode.scrollHeight,\r\n\t\t\twidth:parentNode.scrollWidth\r\n\t\t});\r\n\t}\r\n\r\n\tfunction offElementResize(parentNode){\r\n\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\tif(_onElementResize[i].element === parentNode)\r\n\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Interval will be cleared when the array is empty\r\n\t}\r\n\r\n\tfunction initStyles(){\r\n\t\tvar style = document.getElementById('sf-styles');\r\n\r\n\t\tif(!style){\r\n\t\t\tstyle = document.createElement('style');\r\n\t\t\tstyle.id = 'sf-styles';\r\n        \tdocument.head.appendChild(style);\r\n\t\t}\r\n\r\n\t\tstyle.sheet.insertRule(\r\n\t\t'.sf-virtual-list .virtual-spacer{'+\r\n            'visibility: hidden;'+\r\n            'position: relative;'+\r\n            'height: 1px;'+\r\n            'transform-origin: 0 0;'+\r\n            'width: 1px;'+\r\n            'margin: 0;'+\r\n            'padding: 0;'+\r\n            'background: none;'+\r\n            'border: none;'+\r\n            'box-shadow: none;'+\r\n         '}');\r\n\t}\r\n};"]}