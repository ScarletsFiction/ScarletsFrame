{"version":3,"sources":["sf-a_init.js","sf-dom.js","sf-loader.js","sf-component.js","sf-model.js","sf-a_polyfill.js","sf-controller.js","sf-e-ajax.js","sf-z_end.js","sf-router.js","sf-virtual_scroll.js"],"names":["global","factory","exports","module","sf","window","this","undefined","document","internal","arguments","constructor","Function","loader","onFinish","apply","isEmptyObject","obj","key","compareObject","obj1","obj2","i","hiddenProperty","property","value","Object","defineProperty","enumerable","configurable","deepProperty","path","length","regex","getQuotes","avoidQuotes","strictVar","dom","selector","context","parseElement","String","querySelectorAll","$","self","findOne","querySelector","parent","element","closest","matches","parentElement","prevAll","isNext","result","findNodes","nextSibling","previousSibling","push","nextAll","on","event","callback","once","tempCallback","ev","target","addEventListener","capture","sf$eventListener","off","events","split","ref","removeEventListener","splice","animateCSS","animationName","duration","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","style","webkitAnimationDuration","animationDuration","list","classList","add","remove","setTimeout","emptyDOM","div","createElement","ul","tbody","tr","table","select","html","returnNode","tempDOM","indexOf","textContent","insertAdjacentHTML","item","escapeText","text","innerHTML","elements","documentElement","domReady","body","haveSymbol","getSelector","childIndexes","untilElement","names","parentNode","id","test","unshift","tagName","e","join","array","substr","childNodes","loadedContent","totalContent","DOMWasLoaded","DOMReady","turnedOff","whenDOMReady","whenDOMLoaded","whenProgress","func","onProgress","f","css","s","rel","href","head","appendChild","js","type","async","src","console","warn","isQueued","domLoadEvent","model","queuePreprocess","domStateEvent","readyState","error","resourceWaitTimer","setInterval","waitResources","clearInterval","listener","controller","init","router","prototype","component","scope","registered","available","bases","for","name","extend","pending","base","outerHTML","triggerEvent","new","newElement","cloneNode","newID","setAttribute","sf$component","sf$componentFrom","newObj","root","Array","firstElementChild","destroy","DOMNodeRemoved","root_","run","bindingEnabled","processingElement","trimIndentation","indent","trim","replace","RegExp","bracketMatch","chackValidFunctionCall","allowedFunction","localEval","script","_model_","_modelScope","_content_","tempScript","preventExecution","check_","exec","log","_result_","_evaled_","eval","escapeEscapedQuote","unescapeEscapedQuote","elseIfHandle","else_","scopes","elseIf","elseValue","index","currentElement","previousElementSibling","getAttribute","modelName","$virtual","DOMCursor","modelKeys","modelRef","keys","templateParser_regex","REF_DIRECT","REF_IF","REF_EXEC","templateExec","parse","atIndex","parsed","data","if","templateParser","template","original","addresses","changesReference","pendingInsert","current","address","nodeType","refA","direct","full","match","cRef","dynamicFlag","parse_index","startFlag","attributes","a","refB","attribute","removeAttribute","sf$elementReferences","tDOM","insertBefore","syntheticCache","sf$cache","cache","modelRef_array","syntheticTemplate","changes","modelReference","newData","checkRelatedChanges","parseIndex","found","assign","haveChanges","temp","ref_","sf$haveChilds","sf$childRoot","reverse","currentDOM","notExist","isEqualNode","replaceChild","dataParser","mask","runEval","preParsedReference","variableList","scopeMask","itemMask","preParsed","lastParsedIndex","prepared","actual","matched","slice","exist","charCodeAt","uniqueDataParser","take","passVar","currentIndex","strDeclare","firstTime","JSON","stringify","check","VarPass_","VarPass","s1","obtained","forEach","val","findElse","pop","shift","condition","bindArray","propertyName","targetNode","editProperty","refreshTimer","parentChilds","children","isKeyed","contains","eventVar","processElement","options","other","count","vEndRange","preparedLength","spacer","lastElementChild","height","reset","clearTimeout","reinitScroll","overflow","vDOM","theParent","update","index_a","other_sibling","other_parent","oldChild","referenceNode","create","vCursor","floor","insertAdjacentElement","currentRemoved","startRemove","refreshVirtualSpacer","propertyProxy","subject","lastLength","from","to","reinitCursor","o","resetViewport","matchLeft","refresh","real","limit","callback_","var","virtual_scroll","handle","needle","elRef","getElement","process","content","parentNode_","elem","hardRefresh","softRefresh","virtualChilds","childElement","childElementCount","loopParser","method","items","extractPreprocess","sf$bindedKey","initBindingInformation","get","set","n","inputBoundFunction","bindInput","whichVar","alreadyInitialized","queued","parsePreprocess","ceiling","after","nextElementSibling","before","hasAttribute","removeModelBinding","sf$componentFor","modelFrom","components","everyRemovedNodes","nodes","MutationObserver","observe","everyRecords","record","removedNodes","records","childList","subtree","bindedKey","Number","Boolean","getOwnPropertyDescriptor","dcBracket","bindElement","proxyProperty","objValue","onChanges","properties","copy","addressed","addressAttributes","currentNode","attrs","indexes","addressStart","commentFlag","flag","createComment","textNode","createTextNode","search","extract","sort","b","checkList","full_","match_","findModelProperty","asArray","enclosedHTMLParse","excludes","writable","extracting","nodeName","enclosing","enclosed","nodeValue","modelElement","attr","varArgs","TypeError","nextSource","nextKey","hasOwnProperty","call","Element","CharacterData","DocumentType","removeChild","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","ownerDocument","NodeList","thisArg","location","origin","protocol","hostname","port","values","res","active","modelScope","bindedList","parentEl","bindedListIndex","listenSFClick","method_","preventDefault","globals","jsonpRequests","Request","requestOptions","globalsNoCallbacks","callbackName","defaults","url","toString","user","password","headers","xhrFields","statusCode","processData","dataType","contentType","timeout","fireCallback","globalCallbackValue","optionCallbackValue","_i","paramsPrefix","toUpperCase","stringData","serializeQuery","abortTimeout_1","callbackName_1","Date","now","callbackSplit","requestUrl","addVars","filter","el","script_1","onerror","xhr","XMLHttpRequest","requestParameters","open","xhrTimeout","postData","ArrayBuffer","Blob","Document","FormData","boundary","setRequestHeader","headerName","crossDomain","$2","host","onload","status","responseData","parseError","responseText","err","responseType","response","onabort","abort","send","RequestShortcut","args","_a","success","params","prefix","encodeURIComponent","concat","post","json","getJSON","postJSON","setup","ajax","loading","enabled","pauseRenderOnTransition","currentPage","initialized","currentRouterURL","popstateListener","routingError","routingBack","goto","pathname","beforeEvent","enable","load","onEvent","loaded","special","lazyViewPoint","history","pushState","RouterLoading","_scarlets","DOMReference","foundAction","last","afterEvent","title","oldURL","newURL","routerLoaded","aborted","back","styleInitialized","scrollingByScript","refreshScrollBounding","cursor","bounding","Math","prepareCount","offsetTop","initial","dCursor","scrollHeight","scrollTo","scroller","virtual","reduce","scrollTop","insertCount","removeUserScrollFocus","getAbsoluteHeight","styles","getComputedStyle","margin","parseInt","offsetHeight","force","checkCursorPosition","additionalScroll","moveTo","getElementById","sheet","insertRule","cssRules","initStyles","reinitOnly","elementLength","obtainElements","_onElementResize","offElementResize","visibleLength","clientHeight","ceilingHeight","floorHeight","fillViewport","updating","resetCeiling","previousCeiling","nextFloor","hitFloor","hitCeiling","_onElementResize_timer","scrollWidth","width","onElementResize","dynamicHeight","offsetTo","fromCeiling","scrollFocused","moveElementCursor","navigator","userAgent","staticHeight"],"mappings":"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","file":"scarletsframe.min.js","sourcesContent":["(function(global, factory){\r\n  if(typeof exports === 'object' && typeof module !== 'undefined') module.exports = factory(global);\r\n  else global.sf = factory(global);\r\n}(typeof window !== \"undefined\" ? window : this, (function(window){'use strict';\r\nif(typeof document === undefined)\r\n\tdocument = window.document;\r\n// ===== Module Init =====\r\nvar internal = {};\r\n\r\nvar sf = function(){\r\n\tif(arguments[0].constructor === Function){\r\n\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\t}\r\n};\r\n\r\nsf.internal = {};\r\nsf.regex = {\r\n\t// ToDo: Need help to skip escaped quote\r\n\tgetQuotes:/(['\"])[\\s\\S]*?[^\\\\]\\1/g,\r\n\tavoidQuotes:'(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)',\r\n\tstrictVar:'(?=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )'\r\n};\r\n\r\nfunction isEmptyObject(obj){\r\n\tfor(var key in obj){\r\n\t\treturn false;\r\n\t}\r\n\treturn true\r\n}\r\n\r\nfunction compareObject(obj1, obj2){\r\n\tif(!obj1 || !obj2)\r\n\t\treturn false;\r\n\r\n\tfor(var i in obj1){\r\n\t\tif(typeof obj1[i] !== 'object' && obj1[i] !== obj2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction hiddenProperty(obj, property, value){\r\n\tObject.defineProperty(obj, property, {\r\n\t\tenumerable: false,\r\n\t\tconfigurable: true,\r\n\t\tvalue: value\r\n\t});\r\n}\r\n\r\nfunction deepProperty(obj, path){\r\n  for(var i = 0; i < path.length; i++){\r\n    obj = obj[path[i]];\r\n    if(obj === undefined) return obj;\r\n  }\r\n  return obj;\r\n}","sf.dom = function(selector, context){\r\n\tif(selector[0] === '<') return sf.dom.parseElement(selector);\r\n\tif(selector.constructor !== String) return selector;\r\n\r\n\tif(context) return context.querySelectorAll(selector);\r\n\treturn document.querySelectorAll(selector);\r\n}\r\n\r\nvar $ = sf.dom; // Shortcut\r\n\r\n;(function(){\r\n\tvar self = sf.dom;\r\n\r\n\tself.findOne = function(selector, context){\r\n\t\tif(context !== undefined) return context.querySelector(selector);\r\n\t\treturn document.querySelector(selector);\r\n\t}\r\n\r\n\tself.parent = function(element, selector){\r\n\t\tif(element.closest) return element.closest(selector);\r\n\r\n\t\tdo {\r\n\t\t\tif(element.matches(selector) === true)\r\n\t\t\t\treturn element;\r\n\r\n\t\t\telement = element.parentElement;\r\n\t\t} while (element !== null);\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tself.prevAll = function(element, selector, isNext){\r\n\t\tvar result = [];\r\n\t\tvar findNodes = selector === null || selector.constructor !== String ? true : false;\r\n\r\n\t\t// Skip current element\r\n\t\telement = isNext ? element.nextSibling : element.previousSibling;\r\n\t\twhile (element !== null) {\r\n\t\t\tif(findNodes === false && element.matches(selector) === true)\r\n\t\t\t\tresult.push(element);\r\n\t\t\telse{\r\n\t\t\t\tif(element === selector)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tresult.push(element);\r\n\t\t\t}\r\n\r\n\t\t\tif(isNext)\r\n\t\t\t\telement = element.nextSibling;\r\n\t\t\telse\r\n\t\t\t\telement = element.previousSibling;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.nextAll = function(element, selector){\r\n\t\treturn self.prevAll(element, selector, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen to an event\r\n\t * @param  Node \t\t\telement \tparent element\r\n\t * @param  string \t\t\tevent   \tevent name\r\n\t * @param  function|string  selector    callback function or selector\r\n\t * @param  function\t\t\tcallback    callback function\r\n\t * @param  boolean\t\t\tonce    \tcall once\r\n\t * @return null\r\n\t */\r\n\tself.on = function(element, event, selector, callback, once){\r\n\t\tif(typeof element === 'string'){\r\n\t\t\telement = document;\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = event;\r\n\t\t\tevent = element;\r\n\t\t}\r\n\r\n\t\tif(typeof selector === 'function'){\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = null;\r\n\t\t}\r\n\r\n\t\tif(selector){\r\n\t\t\tvar tempCallback = callback;\r\n\t\t\tcallback = function(ev){\r\n\t\t\t\tif(self.parent(ev.target, selector) !== null)\r\n\t\t\t\t\ttempCallback(ev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcallback.selector = selector;\r\n\t\tcallback.once = once;\r\n\t\telement.addEventListener(event, callback, {capture:true, once:once === true});\r\n\r\n\t\t// Save event listener\r\n\t\tif(element.sf$eventListener === undefined)\r\n\t\t\telement.sf$eventListener = {};\r\n\r\n\t\tif(element.sf$eventListener[event] === undefined)\r\n\t\t\telement.sf$eventListener[event] = [];\r\n\r\n\t\telement.sf$eventListener[event].push(callback);\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.once = function(element, event, selector, callback){\r\n\t\tself.on(element, event, selector, callback, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event listener\r\n\t * @param  Node \telement \tparent element\r\n\t * @param  string \tevent   \tevent name\r\n\t * @param  string  \tselector    selector\r\n\t * @return null\r\n\t */\r\n\tself.off = function(element, event, selector){\r\n\t\t// Remove all event\r\n\t\tif(event === undefined){\r\n\t\t\tif(element.sf$eventListener === undefined)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar events = element.sf$eventListener[event];\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar events = event.split(' ');\r\n\t\tif(events.length !== 1){\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove listener\r\n\t\tif(element.sf$eventListener === undefined)\r\n\t\t\treturn;\r\n\r\n\t\tvar ref = element.sf$eventListener;\r\n\t\tif(ref !== undefined && ref[event] !== undefined){\r\n\t\t\tfor (var i = ref[event].length - 1; i >= 0; i--) {\r\n\t\t\t\tif(selector && ref[event][i].selector !== selector)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\telement.removeEventListener(event, ref[event].splice(i, 1), true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.animateCSS = function(element, animationName, callback, duration) {\r\n\t\tvar animationEnd = {\r\n\t\t\tanimation: 'animationend',\r\n\t\t\tOAnimation: 'oAnimationEnd',\r\n\t\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t\t};\r\n\r\n\t\tfor (var t in animationEnd){\r\n\t\t\tif(element.style[t] !== undefined){\r\n\t\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(duration){\r\n\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t}\r\n\r\n\t\tvar list = ('animated ' + animationName).split(' ');\r\n\t\telement.classList.add.apply(element.classList, list);\r\n\t\t$.once(element, animationEnd, function(){\r\n\t\t\telement.classList.remove.apply(element.classList, list);\r\n\t\t\t\r\n\t\t\tif(duration) setTimeout(function(){\r\n\t\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t\t}, 1);\r\n\r\n\t\t\tif(typeof callback === 'function') callback();\r\n\t\t});\r\n\t}\r\n\r\n\tvar emptyDOM = {\r\n\t\tdiv:document.createElement('div'),\r\n\t\tul:document.createElement('ul'),\r\n\t\ttbody:document.createElement('tbody'),\r\n\t\ttr:document.createElement('tr'),\r\n\t\ttable:document.createElement('table'),\r\n\t\tselect:document.createElement('select'),\r\n\t};\r\n\tself.parseElement = function(html, returnNode){\r\n\t\tvar result = [];\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\r\n        if(html.indexOf('<li') === 0) tempDOM = emptyDOM.ul;\r\n        if(html.indexOf('<tr') === 0) tempDOM = emptyDOM.tbody;\r\n        if(html.indexOf('<td') === 0 || html.indexOf('<th') === 0) tempDOM = emptyDOM.tr;\r\n        if(html.indexOf('<tbody') === 0) tempDOM = emptyDOM.table;\r\n        if(html.indexOf('<option') === 0) tempDOM = emptyDOM.select;\r\n\r\n\t\ttempDOM.textContent = '';\r\n\t\ttempDOM.insertAdjacentHTML('afterBegin', html);\r\n\r\n\t\tvar ref = tempDOM[returnNode ? 'childNodes' : 'children'];\r\n\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\tresult.push(ref.item(i));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tself.escapeText = function(text){\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\t\ttempDOM.textContent = text;\r\n\t\treturn tempDOM.innerHTML;\r\n\t}\r\n\r\n\tself.remove = function(elements){\r\n\t\tif(elements.remove !== undefined)\r\n\t\t\treturn elements.remove();\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\telements[i].remove();\r\n\t\t}\r\n\t}\r\n\r\n\tvar documentElement = null;\r\n\tsetTimeout(function(){\r\n\t\tsf.loader.domReady(function(){\r\n\t\t\tdocumentElement = document.body.parentElement;\r\n\t\t});\r\n\t}, 1);\r\n\r\n\tvar haveSymbol = /[~`!@#$%^&*()+={}|[\\]\\\\:\";'<>?,./ ]/;\r\n\tself.getSelector = function(element, childIndexes, untilElement){\r\n\t\tvar names = [];\r\n\t\tif(untilElement === undefined) untilElement = documentElement;\r\n\r\n\t\tvar previousSibling = childIndexes ? 'previousSibling' : 'previousElementSibling';\r\n\r\n\t\twhile(element.parentNode !== null){\r\n\t\t\tif(element.id && !haveSymbol.test(element.id)){\r\n\t\t\t\tnames.unshift('#'+element.id);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(element === untilElement){\r\n\t\t\t\t\tif(childIndexes === undefined)\r\n\t\t\t\t\t\tnames.unshift(element.tagName);\r\n\t\t\t\t\telse names.unshift(0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar e = element;\r\n\t\t\t\t\tvar i = childIndexes ? 0 : 1;\r\n\r\n\t\t\t\t\twhile(e[previousSibling]){\r\n\t\t\t\t\t\te = e[previousSibling];\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(childIndexes)\r\n\t\t\t\t\t\tnames.unshift(i);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tnames.unshift(\":nth-child(\"+i+\")\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t\tif(element === null)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndexes)\r\n\t\t\treturn names;\r\n\t\treturn names.join(\" > \");\r\n\t}\r\n\r\n\tself.childIndexes = function(array, context){\r\n\t\tvar element = context || documentElement;\r\n\t\tvar i = 1;\r\n\r\n\t\tif(array[0].constructor === String && element.id !== array[0].substr(1))\r\n\t\t\telement = element.querySelector(array[0]);\r\n\r\n\t\telse if(array.length === 1)\r\n\t\t\treturn element;\r\n\r\n\t\tfor (i = i; i < array.length; i++) {\r\n\t\t\telement = element.childNodes.item(array[i]);\r\n\r\n\t\t\tif(element === null)\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n})();","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 0;\r\n\tself.DOMWasLoaded = false;\r\n\tself.DOMReady = false;\r\n\tself.turnedOff = true;\r\n\r\n\tvar whenDOMReady = [];\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\tself.off = function(){\r\n\t\tself.turnedOff = true;\r\n\t}\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.domReady = function(func){\r\n\t\tif(self.DOMReady) return func();\r\n\t\tif(whenDOMReady.indexOf(func) !== -1) return;\r\n\t\twhenDOMReady.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('link');\r\n\t        s.rel = 'stylesheet';\r\n\t        s.href = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tself.js = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('script');\r\n\t        s.type = \"text/javascript\";\r\n\t        s.async = true;\r\n\t        s.src = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(function(){\r\n\t\tif(self.totalContent === 0 && !self.turnedOff){\r\n\t\t\tself.loadedContent = self.totalContent = 1;\r\n\t\t\tconsole.warn(\"If you don't use content loader feature, please turn it off with `sf.loader.off()`\");\r\n\t\t}\r\n\t}, 10000);\r\n\r\n\r\n\tvar isQueued = false;\r\n\tvar lastState = '';\r\n\tdocument.addEventListener(\"load\", function domLoadEvent(event){\r\n\t\t// Add processing class to queued element\r\n\t\tif(isQueued === false && document.body){\r\n\t\t\tdocument.removeEventListener('load', domLoadEvent, true);\r\n\r\n\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tfor (var i = 0; i < isQueued.length; i++) {\r\n\t\t\t\tisQueued[i].classList.add('sf-dom-queued');\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued.length === 0) isQueued = false;\r\n\r\n\t\t\tif(lastState === 'loading'){\r\n\t\t\t\tvar repeatedList = $('[sf-repeat-this]', document.body);\r\n\t\t\t\tfor (var i = 0; i < repeatedList.length; i++) {\r\n\t\t\t\t\trepeatedList[i].classList.add('sf-dom-queued');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Find images\r\n\t\t\t\tvar temp = $('img:not(onload)[src]');\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tsf.loader.totalContent++;\r\n\t\t\t\t\ttemp[i].addEventListener('load', sf.loader.f, {once:true});\r\n\t\t\t\t\ttemp[i].addEventListener('error', sf.loader.f, {once:true});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, true);\r\n\r\n\tdocument.addEventListener('readystatechange', function domStateEvent(){\r\n\t\tif(document.readyState === 'interactive' || document.readyState === 'complete'){\r\n\t\t\tif(self.DOMReady === false){\r\n\t\t\t\tself.DOMReady = true;\r\n\t\t\t\tfor (var i = 0; i < whenDOMReady.length; i++) {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\twhenDOMReady[i]();\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued === false)\r\n\t\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tresourceWaitTimer = setInterval(waitResources, 100);\r\n\t\t\tdocument.removeEventListener('readystatechange', domStateEvent, true);\r\n\t\t}\r\n\t}, true);\r\n\r\n\tvar resourceWaitTimer = -1;\r\n\tfunction waitResources(){\r\n\t\tif(self.turnedOff === false && self.loadedContent < self.totalContent)\r\n\t\t\treturn;\r\n\r\n\t\tclearInterval(resourceWaitTimer);\r\n\r\n\t\tvar listener = sf.dom('script, link, img');\r\n\t\tfor (var i = 0; i < listener.length; i++) {\r\n\t\t\tlistener[i].removeEventListener('error', sf.loader.f);\r\n\t\t\tlistener[i].removeEventListener('load', sf.loader.f);\r\n\t\t}\r\n\r\n\t\tself.DOMWasLoaded = true;\r\n\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\ttry{\r\n\t\t\t\twhenDOMLoaded[i]();\r\n\t\t\t} catch(e){\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\twhenProgress.splice(0);\r\n\t\twhenDOMReady.splice(0);\r\n\t\twhenDOMLoaded.splice(0);\r\n\t\twhenDOMReady = whenDOMLoaded = null;\r\n\r\n\t\t// Last init\r\n\t\tsf.controller.init();\r\n\t\tsf.model.init(document.body, isQueued);\r\n\t\tsf.router.init();\r\n\r\n\t\tisQueued = null;\r\n\t}\r\n}\r\nsf.prototype.constructor = sf.loader.onFinish;","sf.component = new function(){\r\n\tvar self = this;\r\n\tvar scope = internal.component = {};\r\n\tself.registered = {};\r\n\tself.available = {};\r\n\r\n\tvar bases = {};\r\n\tvar events = {};\r\n\r\n\tself.for = function(name, func, extend){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(self.registered[name] === undefined)\r\n\t\t\tself.registered[name] = [func, sf.controller.pending[name], 0, false, extend];\r\n\t\tself.registered[name][0] = func;\r\n\t\tdelete sf.controller.pending[name];\r\n\t}\r\n\r\n\tself.event = function(name, func){\r\n\t\tevents[name] = func;\r\n\t}\r\n\r\n\tself.base = function(name, func){\r\n\t\tbases[name] = func;\r\n\t}\r\n\r\n\tself.html = function(name, outerHTML){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.html(name, outerHTML);\r\n\t\t\t});\r\n\r\n\t\tif(self.registered[name] === undefined)\r\n\t\t\tself.registered[name] = [false, false, 0, false];\r\n\t\tself.registered[name][3] = $.parseElement(outerHTML)[0];\r\n\t}\r\n\r\n\tscope.triggerEvent = function(name, event, obj){\r\n\t\tif(events[name] === undefined || events[name][event] === undefined)\r\n\t\t\treturn;\r\n\r\n\t\tevents[name][event](obj, event);\r\n\t}\r\n\r\n\tvar tempDOM = document.createElement('div');\r\n\tself.new = function(name, element){\r\n\t\tvar newElement = element === undefined;\r\n\t\tif(element === undefined){\r\n\t\t\tif(self.registered[name][3] === false){\r\n\t\t\t\tconsole.error(\"HTML content for '\"+name+\"' was not defined\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement = self.registered[name][3].cloneNode(true);\r\n\t\t}\r\n\r\n\t\tvar newID = name+'@'+(self.registered[name][2]++);\r\n\t\telement.setAttribute('sf-controller', newID);\r\n\t\telement.sf$component = true;\r\n\t\telement.sf$componentFrom = name;\r\n\r\n\t\tif(self.available[name] === undefined)\r\n\t\t\tself.available[name] = [];\r\n\r\n\t\tself.available[name].push(newID);\r\n\r\n\t\tvar newObj = sf.model.root[newID] = {};\r\n\t\tself.registered[name][0](newObj, sf.model);\r\n\r\n\t\tvar extend = self.registered[name][4];\r\n\t\tif(extend !== undefined){\r\n\t\t\tif(extend.constructor === Array){\r\n\t\t\t\tfor (var i = 0; i < extend.length; i++) {\r\n\t\t\t\t\tif(bases[extend[i]] === undefined)\r\n\t\t\t\t\t\treturn console.error(\"'\"+extend[i]+\"' base is not found\");\r\n\t\t\t\t\tbases[extend[i]](newObj, sf.model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(bases[extend] === undefined)\r\n\t\t\t\t\treturn console.error(\"'\"+extend+\"' base is not found\");\r\n\t\t\t\tbases[extend](newObj, sf.model);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(self.registered[name][1])\r\n\t\t\tself.registered[name][1](newObj, sf.model);\r\n\r\n\t\tscope.triggerEvent(name, 'created', newObj);\r\n\r\n\t\tif(newElement){\r\n\t\t\t// Wrap to temporary vDOM\r\n\t\t\ttempDOM.appendChild(element);\r\n\t\t\tsf.model.init(element);\r\n\t\t\telement = tempDOM.firstElementChild;\r\n\t\t\telement.remove();\r\n\r\n\t\t\telement.model = sf.model.root[newID];\r\n\t\t\telement.destroy = function(){\r\n\t\t\t\tif(this.parentElement === null)\r\n\t\t\t\t\tinternal.model.DOMNodeRemoved(this);\r\n\t\t\t\telse this.remove();\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\telement.model = sf.model.root[newID];\r\n\t\treturn newID;\r\n\t}\r\n};","// Data save and HTML content binding\r\nsf.model = function(scope){\r\n\tif(sf.component.registered[scope] !== undefined)\r\n\t\treturn root_(scope);\r\n\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\tif(sf.controller.pending[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n};\r\n\r\n(function(){\r\n\tvar self = sf.model;\r\n\tvar scope = internal.model = {};\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\r\n\tvar processingElement = null;\r\n\r\n\t// For debugging, normalize indentation\r\n\tfunction trimIndentation(text){\r\n\t\tvar indent = text.split(\"\\n\", 3);\r\n\t\tif(indent[0][0] !== ' ' || indent[0][0] !== \"\\t\")\r\n\t\t\tindent = indent[1];\r\n\t\telse indent = indent[0];\r\n\r\n\t\tif(indent === undefined) return text;\r\n\t\tindent = indent.length - indent.trim().length;\r\n\t\tif(indent === 0) return text;\r\n\t\treturn text.replace(RegExp('^([\\\\t ]{'+indent+'})', 'gm'), '');\r\n\t}\r\n\r\n\t// Secured evaluation\r\n\tvar bracketMatch = RegExp('([\\\\w.]*?[\\\\S\\\\s])\\\\('+sf.regex.avoidQuotes, 'g');\r\n\tvar chackValidFunctionCall = /[a-zA-Z0-9 \\]\\$\\)]/;\r\n\tvar allowedFunction = [':', 'for', 'if', 'while', '_content_.take', 'console.log'];\r\n\tvar localEval = function(script, _model_, _modelScope, _content_){\r\n\t\t\"use strict\";\r\n\r\n\t\t// ==== Security check ====\r\n\t\tvar tempScript = script;\r\n\r\n\t\t// Remove quotes\r\n\t\ttempScript = tempScript.replace(sf.regex.getQuotes, '\"Quotes\"');\r\n\r\n\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\tvar preventExecution = false;\r\n\t\tvar check_ = null;\r\n\t\twhile((check_ = bracketMatch.exec(tempScript)) !== null){\r\n\t\t\tcheck_[1] = check_[1].trim();\r\n\r\n\t\t\tif(allowedFunction.indexOf(check_[1]) === -1 &&\r\n\t\t\t\tcheck_[1].split('.')[0] !== '_modelScope' &&\r\n\t\t\t\tchackValidFunctionCall.test(check_[1][check_[1].length-1])\r\n\t\t\t){\r\n\t\t\t\tpreventExecution = check_[1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(preventExecution){\r\n\t\t\tconsole.error(\"Trying to executing unrecognized function (\"+preventExecution+\")\");\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\t\t// ==== Security check ended ====\r\n\t\r\n\t\tvar _result_ = '';\r\n\t\ttry{\r\n\t\t\tif(/@return /.test(script) === true){\r\n\t\t\t\tvar _evaled_ = eval('(function(){'+script.split('@return ').join('return ')+'})()');\r\n\t\t\t\treturn _result_ + _evaled_;\r\n\t\t\t}\r\n\t\t\telse var _evaled_ = eval(script);\r\n\t\t} catch(e){\r\n\t\t\tconsole.error(e);\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\t// Find an index for the element on the list\r\n\tself.index = function(element){\r\n\t\tvar i = -1;\r\n\t\tvar tagName = element.tagName;\r\n\t\tvar currentElement = element;\r\n\r\n\t\twhile(element !== null) {\r\n\t\t\tif(element.tagName === tagName)\r\n\t\t\t\ti++;\r\n\r\n\t\t\telement = element.previousElementSibling;\r\n\t\t}\r\n\r\n\t\tvar list = currentElement.getAttribute('sf-bind-list');\r\n\t\tif(!list) return i;\r\n\r\n\t\tvar ref = self.root[sf.controller.modelName(currentElement)][list];\r\n\t\tif(!ref.$virtual) return i;\r\n\r\n\t\treturn i + ref.$virtual.DOMCursor - 1;\r\n\t}\r\n\r\n\t// Declare model for the name with a function\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\t\t\r\n\t\tfunc(self(name), self);\r\n\t}\r\n\r\n\t// Get property of the model\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys;\r\n\t}\r\n\r\n\t// Escape the escaped quote\r\n\tfunction escapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*');\r\n\t}\r\n\r\n\tfunction unescapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\");\r\n\t}\r\n\r\n\tfunction elseIfHandle(else_, scopes){\r\n\t\tvar elseIf = else_.elseIf;\r\n\r\n\t\t// Else if\r\n\t\tfor (var i = 0; i < elseIf.length; i++) {\r\n\t\t\t// Check the condition\r\n\t\t\tscopes[0] = elseIf[i][0];\r\n\t\t\tif(!localEval.apply(self.root, scopes))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Get the value\r\n\t\t\tscopes[0] = elseIf[i][1];\r\n\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t}\r\n\r\n\t\t// Else\r\n\t\tif(else_.elseValue === null)\r\n\t\t\treturn '';\r\n\r\n\t\tscopes[0] = else_.elseValue;\r\n\t\treturn localEval.apply(self.root, scopes);\r\n\t}\r\n\r\n\t// ==== Template parser ====\r\n\tvar templateParser_regex = /{{%=([0-9]+)/gm;\r\n\tvar REF_DIRECT = 0, REF_IF = 1, REF_EXEC = 2;\r\n\tvar templateExec = function(parse, item, atIndex){\r\n\t\tvar parsed = {};\r\n\r\n\t\t// Get or evaluate static or dynamic data\r\n\t\tfor (var i = 0; i < parse.length; i++) {\r\n\t\t\tif(atIndex !== undefined && atIndex.indexOf(i) === -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar ref = parse[i];\r\n\t\t\tref.data[1] = item;\r\n\r\n\t\t\t// Direct evaluation type\r\n\t\t\tif(ref.type === REF_DIRECT || ref.type === REF_EXEC)\r\n\t\t\t\tparsed[i] = {type:ref.type, data:localEval.apply(self.root, ref.data)};\r\n\r\n\t\t\t// Conditional type\r\n\t\t\telse if(ref.type === REF_IF){\r\n\t\t\t\tvar scopes = ref.data;\r\n\t\t\t\tparsed[i] = {type:ref.type, data:''};\r\n\t\t\t\tscopes[0] = ref.if[0];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tparsed[i].data = elseIfHandle(ref, scopes);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscopes[0] = ref.if[1];\r\n\t\t\t\tparsed[i].data = localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n\r\n\tvar templateParser = function(template, item, original){\r\n\t\tvar html = original === true ? template.html : template.html.cloneNode(true);\r\n\t\tvar addresses = template.addresses;\r\n\t\tvar parsed = templateExec(template.parse, item);\r\n\r\n\t\t// Save model item reference to node\r\n\t\thtml.model = item;\r\n\r\n\t\tvar changesReference = [];\r\n\t\tvar pendingInsert = [];\r\n\r\n\t\t// Find element where the data belongs to\r\n\t\tfor (var i = 0; i < addresses.length; i++) {\r\n\t\t\tvar ref = addresses[i];\r\n\t\t\tvar current = $.childIndexes(ref.address, html);\r\n\r\n\t\t\t// Modify element attributes\r\n\t\t\tif(ref.nodeType === 1){\r\n\t\t\t\tvar refA = ref.attributes;\r\n\t\t\t\tfor(var a = 0; a < refA.length; a++){\r\n\t\t\t\t\tvar refB = refA[a];\r\n\r\n\t\t\t\t\tchangesReference.push({\r\n\t\t\t\t\t\tattribute:(refB.name === 'value' && current.tagName === 'INPUT' ? current : current.attributes[refB.name]),\r\n\t\t\t\t\t\tref:refB\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(refB.name === 'value' && current.tagName === 'INPUT'){\r\n\t\t\t\t\t\tcurrent.value = parsed[refB.direct].data;\r\n\t\t\t\t\t\tcurrent.removeAttribute('value');\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(refB.direct !== undefined){\r\n\t\t\t\t\t\tcurrent.setAttribute(refB.name, parsed[refB.direct].data);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Below is used for multiple data\r\n\t\t\t\t\trefB = current.attributes[refB.name];\r\n\r\n\t\t\t\t\trefB.value = refB.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Replace text node\r\n\t\t\tif(ref.nodeType === 3){\r\n\t\t\t\tvar refA = current;\r\n\r\n\t\t\t\tchangesReference.push({\r\n\t\t\t\t\ttextContent:refA,\r\n\t\t\t\t\tref:ref\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(ref.direct !== undefined){\r\n\t\t\t\t\trefA.textContent = parsed[ref.direct].data;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Below is used for multiple/dynamic data\r\n\t\t\t\trefA.textContent = refA.textContent.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Replace dynamic node\r\n\t\t\tif(ref.nodeType === -1){\r\n\t\t\t\tvar cRef = {\r\n\t\t\t\t\tdynamicFlag:current,\r\n\t\t\t\t\tdirect:ref.parse_index,\r\n\t\t\t\t\tparentNode:current.parentNode,\r\n\t\t\t\t\tstartFlag:ref.startFlag && $.childIndexes(ref.startFlag, html)\r\n\t\t\t\t};\r\n\t\t\t\tchangesReference.push(cRef);\r\n\r\n\t\t\t\t// Pending element insert to take other element reference\r\n\t\t\t\tpendingInsert.push(cRef);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Save reference to element\r\n\t\thtml.sf$elementReferences = changesReference;\r\n\t\t// html.sf$modelParsed = parsed;\r\n\r\n\t\t// Run the pending element\r\n\t\tfor (var i = 0; i < pendingInsert.length; i++) {\r\n\t\t\tvar ref = pendingInsert[i];\r\n\t\t\tvar tDOM = $.parseElement(parsed[ref.direct].data, true);\r\n\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\tref.parentNode.insertBefore(tDOM[a], ref.dynamicFlag);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t}\r\n\r\n\tfunction syntheticCache(element, template, item){\r\n\t\tif(element.sf$cache === undefined)\r\n\t\t\telement.sf$cache = {};\r\n\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\tvar ref = modelRef_array[i];\r\n\t\t\tcache[ref[0]] = deepProperty(item, ref[1]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction syntheticTemplate(element, template, property, item){\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tif(property !== undefined){\r\n\t\t\tvar changes = template.modelReference[property];\r\n\t\t\tif(changes === undefined || changes.length === 0){\r\n\t\t\t\tconsole.error(\"Failed to run syntheticTemplate because property '\"+property+\"' is not observed\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cache)\r\n\t\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\t\tif(ref[0] !== property) continue;\r\n\r\n\t\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t\t// Check if data was different\r\n\t\t\t\t\tif(cache[ref[0]] !== newData)\r\n\t\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar changes = [];\r\n\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\tif(cache === undefined){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t// Check if data was different\r\n\t\t\t\tif(cache[ref[0]] !== newData){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(changes.length === 0) return false;\r\n\t\t}\r\n\r\n\t\tvar parsed = templateExec(template.parse, item, changes);\r\n\t\tfunction checkRelatedChanges(parseIndex){\r\n\t\t\tvar found = false;\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(changes.indexOf(parseIndex[i]) !== -1){\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(found === false)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t// Prepare all required data\r\n\t\t\tchanges = [];\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(parsed[parseIndex[i]] === undefined){\r\n\t\t\t\t\tchanges.push(parseIndex[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tObject.assign(parsed, templateExec(template.parse, item, changes));\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tvar changesReference = element.sf$elementReferences;\r\n\t\tvar haveChanges = false;\r\n\t\tfor (var i = 0; i < changesReference.length; i++) {\r\n\t\t\tvar cRef = changesReference[i];\r\n\r\n\t\t\tif(cRef.dynamicFlag !== undefined){ // Dynamic data\r\n\t\t\t\tif(parsed[cRef.direct] !== undefined){\r\n\t\t\t\t\tvar tDOM = $.parseElement(parsed[cRef.direct].data, true).reverse();\r\n\t\t\t\t\tvar currentDOM = $.prevAll(cRef.dynamicFlag, cRef.startFlag);\r\n\t\t\t\t\tvar notExist = false;\r\n\r\n\t\t\t\t\t// Replace if exist, skip if similar\r\n\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\t\t\tif(currentDOM[a] === undefined){\r\n\t\t\t\t\t\t\tnotExist = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(currentDOM[a].isEqualNode(tDOM[a]) === false)\r\n\t\t\t\t\t\t\tcRef.parentNode.replaceChild(tDOM[a], currentDOM[a]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Add if not exist\r\n\t\t\t\t\tif(notExist){\r\n\t\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++)\r\n\t\t\t\t\t\t\tcRef.parentNode.insertBefore(tDOM[a], cRef.dynamicFlag);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove if over index\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tfor (var a = tDOM.length; a < currentDOM.length; a++) {\r\n\t\t\t\t\t\t\tcurrentDOM[a].remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(cRef.textContent !== undefined){ // Text only\r\n\t\t\t\tif(cRef.ref.parse_index !== undefined){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.textContent.textContent === temp) continue;\r\n\t\t\t\t\t\tcRef.textContent.textContent = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.textContent.textContent === value) continue;\r\n\r\n\t\t\t\t\tvar ref_ = cRef.textContent;\r\n\t\t\t\t\t// Remove old element if exist\r\n\t\t\t\t\tif(ref_.sf$haveChilds === true){\r\n\t\t\t\t\t\twhile(ref_.previousSibling && ref_.previousSibling.sf$childRoot === ref_){\r\n\t\t\t\t\t\t\tref_.previousSibling.remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tref_.textContent = value;\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(cRef.attribute !== undefined){ // Attributes\r\n\t\t\t\tif(cRef.ref.parse_index !== undefined){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.attribute.value === temp) continue;\r\n\t\t\t\t\t\tcRef.attribute.value = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.attribute.value === value) continue;\r\n\t\t\t\t\tcRef.attribute.value = value;\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn haveChanges;\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval, preParsedReference){\r\n\t\tvar _modelScope = self.root[scope];\r\n\t\tif(!runEval) runEval = '';\r\n\t\t\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(_modelScope).join('|');\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(_modelScope[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\tvar preParsed = [];\r\n\t\t\tvar lastParsedIndex = preParsedReference.length;\r\n\t\t}\r\n\r\n\t\tvar prepared = html.replace(/{{([^@%][\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = escapeEscapedQuote(temp); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\r\n\t\t\ttemp = unescapeEscapedQuote(temp); // ToDo: Unescape\r\n\r\n\t\t\t// Unescape HTML\r\n\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t// Evaluate\r\n\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\ttemp = temp.trim();\r\n\r\n\t\t\t\t// Simplicity similar\r\n\t\t\t\tvar exist = preParsed.indexOf(temp);\r\n\r\n\t\t\t\tif(exist === -1){\r\n\t\t\t\t\tpreParsed.push(temp);\r\n\t\t\t\t\tpreParsedReference.push({type:REF_DIRECT, data:[temp, _model_, _modelScope]});\r\n\t\t\t\t\treturn '{{%=' + (preParsed.length + lastParsedIndex - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn '{{%=' + (exist + lastParsedIndex);\r\n\t\t\t}\r\n\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(/(?!&#.*?;)[\\u00A0-\\u9999<>\\&]/gm, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\tpreParsed = variableList = _modelScope = _model_ = mask = scope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t}\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\t// Dynamic data parser\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope, runEval){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(passVar === null)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\t// Use strict mode and prepare for new variables\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\t// Declare new variable\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove var because no variable are being passed\r\n\t\t\t\tif(firstTime === true)\r\n\t\t\t\t\tstrDeclare = strDeclare.replace('var ', '');\r\n\r\n\t\t\t\t// Escape function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('&#40;').split(')').join('&#41;');\r\n\r\n\t\t\t\t// Pass to static data parser for another HTML data\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Build script preparation\r\n\t\thtml = html.replace(/{\\[([\\s\\S]*?)\\]}/g, function(full, matched){\r\n\t\t\tif(/{{.*?}}/.test(matched) === false)\r\n\t\t\t\treturn \"_result_ += '\"+matched.split(\"'\").join(\"\\\\'\")+\"'\";\r\n\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope).join('|')+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(runEval === '#noEval')\r\n\t\t\tvar preParsedReference = [];\r\n\r\n\t\tvar prepared = html.replace(/{{((@|#[\\w])[\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = escapeEscapedQuote(temp); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\t\t\ttemp = unescapeEscapedQuote(temp); // ToDo: Unescape\r\n\r\n\t\t\t// Unescape HTML\r\n\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass_ = /(var|let)([\\w,\\s]+)(?=\\s(?==|in|of))/g;\r\n\t\t\tvar VarPass = [];\r\n\t\t\tvar s1 = null;\r\n\t\t\twhile((s1 = VarPass_.exec(temp)) !== null){\r\n\t\t\t\tVarPass.push(s1[2]);\r\n\t\t\t}\r\n\r\n\t\t\tif(_model_ === null && runEval === '#noEval')\r\n\t\t\t\tVarPass.push('_model_');\r\n\r\n\t\t\tif(VarPass.length !== 0){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/([\\n\\t\\r]|  )+/g, '').split(',').forEach(function(val){\r\n\t\t\t\t\t\tobtained.push(val);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':(typeof '+VarPass[i]+'!==\"undefined\"?'+VarPass[i]+':undefined)';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(VarPass.length === 0)\r\n\t\t\t\t\tVarPass = 'null';\r\n\t\t\t\telse VarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\t\t\telse temp = temp.split('&VarPass&').join('null');\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\r\n\t\t\t\t// {if, elseIf:([if, value], ...), elseValue}\r\n\t\t\t\tvar findElse = function(text){\r\n\t\t\t\t\ttext = text.join(':');\r\n\t\t\t\t\tvar else_ = null;\r\n\r\n\t\t\t\t\t// Split elseIf\r\n\t\t\t\t\ttext = text.split('@elseif ');\r\n\r\n\t\t\t\t\t// Get else value\r\n\t\t\t\t\tvar else_ = text[text.length - 1].split('@else');\r\n\t\t\t\t\tif(else_.length === 2){\r\n\t\t\t\t\t\ttext[text.length - 1] = else_[0];\r\n\t\t\t\t\t\telse_ = else_.pop();\r\n\t\t\t\t\t\telse_ = else_.substr(else_.indexOf(':') + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse else_ = null;\r\n\r\n\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t\tif:text.shift(),\r\n\t\t\t\t\t\telseIf:[],\r\n\t\t\t\t\t\telseValue:else_\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Separate condition script and value\r\n\t\t\t\t\tfor (var i = 0; i < text.length; i++) {\r\n\t\t\t\t\t\tvar val = text[i].split(':');\r\n\t\t\t\t\t\tobj.elseIf.push([val.shift(), val.join(':')]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tvar condition = check.shift();\r\n\t\t\t\t\tvar elseIf = findElse(check);\r\n\t\t\t\t\telseIf.type = REF_IF;\r\n\t\t\t\t\telseIf.data = [null, _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t\t// Trim Data\r\n\t\t\t\t\telseIf.if = [condition.trim(), elseIf.if.trim()];\r\n\t\t\t\t\tif(elseIf.elseValue !== null)\r\n\t\t\t\t\t\telseIf.elseValue = elseIf.elseValue.trim();\r\n\r\n\t\t\t\t\tfor (var i = 0; i < elseIf.elseIf.length; i++) {\r\n\t\t\t\t\t\telseIf.elseIf[i][0] = elseIf.elseIf[i][0].trim();\r\n\t\t\t\t\t\telseIf.elseIf[i][1] = elseIf.elseIf[i][1].trim();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Push data\r\n\t\t\t\t\tpreParsedReference.push(elseIf);\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scopes = [check[0], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\treturn elseIfHandle(findElse(check), scopes);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcheck.shift();\r\n\t\t\t\tscopes[0] = check.join(':');\r\n\r\n\t\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tvar scopes = [check[1], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tpreParsedReference.push({type:REF_EXEC, data:scopes});\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, scopes);\r\n\t\t\t\treturn temp;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\t_modelScope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t\treturn [prepared, preParsedReference, _content_];\r\n\t\t}\r\n\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\tvar bindArray = function(template, list, mask, modelName, propertyName, targetNode, parentNode, tempDOM){\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'swap', 'move', 'replace', 'softRefresh', 'hardRefresh'];\r\n\t\tvar refreshTimer = -1;\r\n\t\tvar parentChilds = parentNode.children;\r\n\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\r\n\t\t// Update callback\r\n\t\tvar modelRef = self.root[modelName];\r\n\t\tvar eventVar = 'on$'+propertyName;\r\n\t\tvar callback = modelRef[eventVar];\r\n\r\n\t\tvar processElement = function(index, options, other, count){\r\n\t\t\t// Find boundary for inserting to virtual DOM\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar vStartRange = list.$virtual.DOMCursor;\r\n\t\t\t\tvar vEndRange = vStartRange + list.$virtual.preparedLength;\r\n\t\t\t}\r\n\r\n\t\t\tif(options === 'clear'){\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar spacer = [parentNode.firstElementChild, parentNode.lastElementChild];\r\n\r\n\t\t\t\tparentNode.textContent = '';\r\n\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tparentNode.appendChild(spacer[0]);\r\n\t\t\t\t\tparentNode.appendChild(spacer[1]);\r\n\t\t\t\t\tlist.$virtual.dom.textContent = '';\r\n\t\t\t\t\tspacer[1].style.height = \r\n\t\t\t\t\tspacer[0].style.height = 0;\r\n\t\t\t\t\tlist.$virtual.reset(true);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid multiple refresh by set a timer\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar exist = list.$virtual.elements();\r\n\r\n\t\t\t\tclearTimeout(refreshTimer);\r\n\t\t\t\trefreshTimer = setTimeout(function(){\r\n\t\t\t\t\tlist.$virtual.reinitScroll();\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse exist = parentChilds;\r\n\r\n\t\t\t// Hard refresh - Append element\r\n\t\t\tif(options === 'hardRefresh'){\r\n\t\t\t\t// Clear siblings after the index\r\n\t\t\t\tfor (var i = index; i < exist.length; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar vCursor = list.$virtual.vCursor;\r\n\r\n\t\t\t\tfor (var i = index; i < list.length; i++) {\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\tif(vCursor.floor === null && i < vEndRange)\r\n\t\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\t\telse list.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse parentNode.appendChild(temp);\r\n\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual && list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(callback === undefined)\r\n\t\t\t\tcallback = modelRef[eventVar];\r\n\r\n\t\t\tif(options === 'swap' || options === 'move'){\r\n\t\t\t\tif(options === 'move'){\r\n\t\t\t\t\tvar overflow = list.length - index - count;\r\n\t\t\t\t\tif(overflow < 0)\r\n\t\t\t\t\t\tcount += overflow;\r\n\r\n\t\t\t\t\t// Move to virtual DOM\r\n\t\t\t\t\tvar vDOM = document.createElement('div');\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tvDOM.appendChild(exist[index + i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar nextSibling = exist[other] || null;\r\n\t\t\t\t\tvar theParent = nextSibling && nextSibling.parentNode;\r\n\r\n\t\t\t\t\tif(theParent === false){\r\n\t\t\t\t\t\tif(list.$virtual && list.length >= vEndRange)\r\n\t\t\t\t\t\t\ttheParent = list.$virtual.dom;\r\n\t\t\t\t\t\telse theParent = parentNode;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Move to defined index\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\ttheParent.insertBefore(vDOM.firstElementChild, nextSibling);\r\n\r\n\t\t\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\t\t\tcallback.update(exist[index + i], 'move');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(index > other){\r\n\t\t\t\t\tvar index_a = exist[other];\r\n\t\t\t\t\tother = exist[index];\r\n\t\t\t\t\tindex = index_a;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tindex = exist[index];\r\n\t\t\t\t\tother = exist[other];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar other_sibling = other.nextSibling;\r\n\t\t\t\tvar other_parent = other.parentNode;\r\n\t            index.parentNode.insertBefore(other, index.nextSibling);\r\n\t            other_parent.insertBefore(index, other_sibling);\r\n\r\n\t\t\t\tif(callback !== undefined && callback.update){\r\n\t\t\t\t\tcallback.update(exist[other], 'swap');\r\n\t\t\t\t\tcallback.update(exist[index], 'swap');\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Clear unused element if current array < last array\r\n\t\t\tif(options === 'removeRange'){\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(options === 'remove'){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\texist[index].remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.remove){\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tsetTimeout(startRemove, 800);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse startRemove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update\r\n\t\t\telse if(options === 'update'){\r\n\t\t\t\tif(index === undefined){\r\n\t\t\t\t\tindex = 0;\r\n\t\t\t\t\tother = list.length;\r\n\t\t\t\t}\r\n\t\t\t\telse if(other === undefined) other = index + 1;\r\n\t\t\t\telse if(other < 0) other = list.length + other;\r\n\t\t\t\telse other += index;\r\n\r\n\t\t\t\t// Trim length\r\n\t\t\t\tvar overflow = list.length - other;\r\n\t\t\t\tif(overflow < 0) other = other + overflow;\r\n\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\tvar oldChild = exist[i];\r\n\t\t\t\t\tif(oldChild === undefined || list[i] === undefined)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\toldChild.parentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tparentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\t\tcallback.update(temp, 'replace');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar item = list[index];\r\n\t\t\tif(item === undefined) return;\r\n\r\n\t\t\tvar temp = templateParser(template, item);\r\n\t\t\tif(isKeyed === false)\r\n\t\t\t\tsyntheticCache(temp, template, item);\r\n\r\n\t\t\t// Create\r\n\t\t\tif(options === 'insertAfter'){\r\n\t\t\t\tif(exist.length === 0)\r\n\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\telse{\r\n\t\t\t\t\tvar referenceNode = exist[index - 1];\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode.nextSibling);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t\telse if(options === 'prepend'){\r\n\t\t\t\tvar referenceNode = exist[0];\r\n\t\t\t\tif(referenceNode !== undefined){\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode);\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t}\r\n\t\t\t\telse options = 'append';\r\n\t\t\t}\r\n\t\t\tif(options === 'append'){\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tif(index === 0) // Add before virtual scroller\r\n\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\telse if(index >= vEndRange){ // To virtual DOM\r\n\t\t\t\t\t\tif(list.$virtual.vCursor.floor === null)\r\n\t\t\t\t\t\t\tlist.$virtual.vCursor.floor = temp;\r\n\r\n\t\t\t\t\t\tlist.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse // To real DOM\r\n\t\t\t\t\t\texist[index-1].insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparentNode.appendChild(temp);\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar _double_zero = [0,0]; // For arguments\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = undefined;\r\n\t\t\t\t\tvar lastLength = this.length;\r\n\r\n\t\t\t\t\tif(name === 'move'){\r\n\t\t\t\t\t\tvar from = arguments[0];\r\n\t\t\t\t\t\tvar to = arguments[1];\r\n\t\t\t\t\t\tif(from === to) return;\r\n\t\t\t\t\t\tvar count = arguments[2] || 1;\r\n\t\t\t\t\t\tprocessElement(from, 'move', to, count);\r\n\r\n\t\t\t\t\t\tvar temp = Array.prototype.splice.apply(this, [from, count]);\r\n\t\t\t\t\t\ttemp.unshift(to, 0);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Reset virtual ceiling and floor\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(name === 'swap'){\r\n\t\t\t\t\t\tvar i = arguments[0];\r\n\t\t\t\t\t\tvar o = arguments[1];\r\n\t\t\t\t\t\tif(i === o) return;\r\n\t\t\t\t\t\tprocessElement(i, 'swap', o);\r\n\t\t\t\t\t\tvar temp = this[i];\r\n\t\t\t\t\t\tthis[i] = this[o];\r\n\t\t\t\t\t\tthis[o] = temp;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'replace'){\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.resetViewport();\r\n\r\n\t\t\t\t\t\t// Check if item has same reference\r\n\t\t\t\t\t\tif(arguments[0].length >= lastLength && lastLength !== 0){\r\n\t\t\t\t\t\t\tvar matchLeft = lastLength;\r\n\t\t\t\t\t\t\tvar ref = arguments[0];\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < lastLength; i++) {\r\n\t\t\t\t\t\t\t\tif(ref[i] === this[i]){\r\n\t\t\t\t\t\t\t\t\tmatchLeft--;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the end\r\n\t\t\t\t\t\t\tif(matchLeft === 0){\r\n\t\t\t\t\t\t\t\tif(ref.length === lastLength) return;\r\n\r\n\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(lastLength);\r\n\t\t\t\t\t\t\t\ttemp.unshift(lastLength, 0);\r\n\t\t\t\t\t\t\t\tthis.splice.apply(this, temp);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the middle\r\n\t\t\t\t\t\t\telse if(matchLeft !== lastLength){\r\n\t\t\t\t\t\t\t\tif(arguments[1] === true){\r\n\t\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(i);\r\n\t\t\t\t\t\t\t\t\ttemp.unshift(i, lastLength - i);\r\n\t\t\t\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t\t\t\tlist.refresh(i, lastLength);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Build from zero\r\n\t\t\t\t\t\tif(lastLength === 0){\r\n\t\t\t\t\t\t\tArray.prototype.push.apply(this, arguments[0]);\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Clear all items and merge the new one\r\n\t\t\t\t\t\tvar temp = [0, lastLength];\r\n\t\t\t\t\t\tArray.prototype.push.apply(temp, arguments[0]);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Rebuild all element\r\n\t\t\t\t\t\tif(arguments[1] !== true || isKeyed){\r\n\t\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reuse some element\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t// Clear unused element if current array < last array\r\n\t\t\t\t\t\t\tif(this.length < lastLength)\r\n\t\t\t\t\t\t\t\tprocessElement(this.length, 'removeRange', lastLength);\r\n\r\n\t\t\t\t\t\t\t// And start refreshing\r\n\t\t\t\t\t\t\tlist.refresh(0, this.length);\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual && list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reset virtual list\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reset();\r\n\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice' && arguments[0] === 0 && arguments[1] === undefined){\r\n\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\treturn Array.prototype.splice.apply(this, arguments);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(this.length, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'push'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(lastLength, 'append');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = 0; i < arguments.length; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(lastLength + i, 'append');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'shift'){\r\n\t\t\t\t\t\tprocessElement(0, 'remove');\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor > 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor--;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments[0] === 0 && arguments[1] === undefined)\r\n\t\t\t\t\t\t\treturn temp;\r\n\r\n\t\t\t\t\t\t// Removing data\r\n\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\tif(real < 0) real = lastLength + real;\r\n\r\n\t\t\t\t\t\tvar limit = arguments[1];\r\n\t\t\t\t\t\tif(!limit && limit !== 0) limit = this.length;\r\n\r\n\t\t\t\t\t\tfor (var i = limit - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tprocessElement(real + i, 'remove');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = real - limit;\r\n\r\n\t\t\t\t\t\tif(arguments.length >= 3){ // Inserting data\r\n\t\t\t\t\t\t\tlimit = arguments.length - 2;\r\n\r\n\t\t\t\t\t\t\t// Trim the index if more than length\r\n\t\t\t\t\t\t\tif(real >= this.length)\r\n\t\t\t\t\t\t\t\treal = this.length - 1;\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < limit; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(real + i, 'insertAfter');\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\t\tlist.$virtual.DOMCursor += limit;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(0, 'prepend');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = arguments.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\t\tprocessElement(i, 'prepend');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor !== 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor += arguments.length;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'softRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0], 'update', arguments[1]);\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'hardRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0] || 0, 'hardRefresh');\r\n\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = arguments[0] || 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(parentNode && parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\tdelete list.$virtual;\r\n\t\t\tlist.$virtual = {};\r\n\r\n\t\t\t// Transfer virtual DOM\r\n\t\t\tlist.$virtual.dom = tempDOM;\r\n\t\t\tif(callback !== undefined)\r\n\t\t\t\tlist.$virtual.callback = callback;\r\n\t\t\telse list.$virtual.callback_ = {ref:modelRef, var:eventVar};\r\n\r\n\t\t\tparentNode.replaceChild(template.html, parentChilds[1]);\r\n\t\t\tsf.internal.virtual_scroll.handle(list, targetNode, parentNode);\r\n\t\t\ttemplate.html.remove();\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\r\n\t\t// Todo: Enable auto item binding\r\n\t\tif(false && list.auto !== false){\r\n\t\t\t// for (var i = 0; i < list.length; i++) {\r\n\t\t\t// \tlist[i]\r\n\t\t\t// }\r\n\t\t}\r\n\r\n\t\thiddenProperty(list, '$replace', function(index, key, needle, func){\r\n\t\t\tvar elRef = list.getElement(index).sf$elementReferences;\r\n\t\t\tvar process = template.modelReference[key];\r\n\t\t\tif(process === undefined){\r\n\t\t\t\tconsole.error(\"Can't found binding for '\"+key+\"'\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < elRef.length; i++) {\r\n\t\t\t\tif(elRef[i].textContent === undefined || elRef[i].ref.direct === undefined)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tif(process.indexOf(elRef[i].ref.direct) !== -1){\r\n\t\t\t\t\tvar ref = elRef[i].textContent;\r\n\t\t\t\t\tvar content = $.escapeText(list[index][key]).replace(needle, func);\r\n\r\n\t\t\t\t\t// Skip if nothing was changed\r\n\t\t\t\t\tif(list[index][key] === content) continue;\r\n\t\t\t\t\tref.textContent = ''; // Let this empty for later referencing\r\n\t\t\t\t\tref.sf$haveChilds = true;\r\n\t\t\t\t\tcontent = $.parseElement(content, true);\r\n\r\n\t\t\t\t\t// Remove old element if exist\r\n\t\t\t\t\twhile(ref.previousSibling && ref.previousSibling.sf$childRoot === ref){\r\n\t\t\t\t\t\tref.previousSibling.remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar parentNode_ = ref.parentNode;\r\n\t\t\t\t\tfor (var i = 0; i < content.length; i++) {\r\n\t\t\t\t\t\tcontent[i].sf$childRoot = ref;\r\n\t\t\t\t\t\tparentNode_.insertBefore(content[i], ref);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\thiddenProperty(list, 'refresh', function(index, length, property){\r\n\t\t\tif(index === undefined || index.constructor === String){\r\n\t\t\t\tproperty = index;\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tlength = list.length;\r\n\t\t\t}\r\n\t\t\telse if(length === undefined) length = index + 1;\r\n\t\t\telse if(length.constructor === String){\r\n\t\t\t\tproperty = length;\r\n\t\t\t\tlength = index + 1;\r\n\t\t\t}\r\n\t\t\telse if(length < 0) length = list.length + length;\r\n\t\t\telse length += index;\r\n\r\n\t\t\t// Trim length\r\n\t\t\tvar overflow = list.length - length;\r\n\t\t\tif(overflow < 0) length = length + overflow;\r\n\r\n\t\t\tfor (var i = index; i < length; i++) {\r\n\t\t\t\tvar elem = list.getElement(i);\r\n\r\n\t\t\t\t// Create element if not exist\r\n\t\t\t\tif(elem === undefined){\r\n\t\t\t\t\tlist.hardRefresh(i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(isKeyed === true)\r\n\t\t\t\t\t\tlist.softRefresh(i);\r\n\t\t\t\t\telse if(syntheticTemplate(elem, template, property, list[i]) === false)\r\n\t\t\t\t\t\tcontinue; // Continue if no update\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\tcallback.update(elem, 'replace');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar virtualChilds = null;\r\n\t\tif(list.$virtual)\r\n\t\t\tvirtualChilds = list.$virtual.dom.children;\r\n\t\thiddenProperty(list, 'getElement', function(index){\r\n\t\t\tif(virtualChilds !== null){\r\n\t\t\t\tvar ret = undefined;\r\n\t\t\t\tif(index < list.$virtual.DOMCursor)\r\n\t\t\t\t\treturn virtualChilds[index];\r\n\t\t\t\telse {\r\n\t\t\t\t\tindex -= list.$virtual.DOMCursor;\r\n\t\t\t\t\tvar childElement = parentNode.childElementCount - 2;\r\n\r\n\t\t\t\t\tif(index < childElement)\r\n\t\t\t\t\t\treturn parentChilds[index + 1];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn virtualChilds[index - childElement + list.$virtual.DOMCursor];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t\treturn parentChilds[index];\r\n\t\t});\r\n\t}\r\n\r\n\tvar loopParser = function(name, template, script, targetNode, parentNode){\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\r\n\t\tvar items = root_(name)[method[1]];\r\n\t\tif(items === undefined)\r\n\t\t\titems = root_(name)[method[1]] = [];\r\n\r\n\t\ttemplate.setAttribute('sf-bind-list', method[1]);\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = template;\r\n\t\ttemplate = self.extractPreprocess(template, mask, name);\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tvar tempDOM = document.createElement('div');\r\n\t\t\tvar modelRef = self.root[name];\r\n\r\n\t\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\t\tvar elem = templateParser(template, items[i]);\r\n\t\t\t\ttempDOM.appendChild(elem);\r\n\r\n\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\tsyntheticCache(elem, template, items[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// Enable element binding\r\n\t\t\tif(modelRef.sf$bindedKey === undefined)\r\n\t\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\t\tif(modelRef.sf$bindedKey[method[1]] === undefined)\r\n\t\t\t\tmodelRef.sf$bindedKey[method[1]] = null;\r\n\r\n\t\t\tObject.defineProperty(modelRef, method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tif(val.length === 0)\r\n\t\t\t\t\t\treturn items.splice(0);\r\n\t\t\t\t\treturn items.replace(val, true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tbindArray(template, items, mask, name, method[1], targetNode, parentNode, tempDOM);\r\n\r\n\t\t\t// Output to real DOM if not being used for virtual list\r\n\t\t\tif(items.$virtual === undefined){\r\n\t\t\t\tvar children = tempDOM.children;\r\n\t\t\t\tfor (var i = 0, n = children.length; i < n; i++) {\r\n\t\t\t\t\tparentNode.appendChild(children[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttempDOM.remove();\r\n\t\t\t\ttempDOM = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar inputBoundFunction = function(e){\r\n\t\tself.root[e.target['sf-model']][e.target['sf-bounded']] = e.target.value;\r\n\t};\r\n\r\n\tvar bindInput = function(targetNode){\r\n\t\tvar temp = $('input[sf-bound]', targetNode);\r\n\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar model = sf.controller.modelName(element);\r\n\t\t\tif(!model) return;\r\n\r\n\t\t\tvar whichVar = element.getAttribute('sf-bound');\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(typeof self.root[model][whichVar] === undefined){\r\n\t\t\t\tconsole.error('Cannot get reference for self.root[\"' + model + '\"][\"' + whichVar+'\"]');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement['sf-bounded'] = whichVar;\r\n\t\t\telement['sf-model'] = model;\r\n\t\t\telement.setAttribute('sf-bounded', '');\r\n\t\t\telement.removeAttribute('sf-bound');\r\n\r\n\t\t\t// Bound value change\r\n\t\t\tif(element.tagName === 'INPUT' || element.tagName === 'TEXTAREA')\r\n\t\t\t\t$.on(element, 'keyup', inputBoundFunction);\r\n\r\n\t\t\telse\r\n\t\t\t\t$.on(element, 'change', inputBoundFunction);\r\n\t\t}\r\n\t}\r\n\r\n\tvar alreadyInitialized = false;\r\n\tself.init = function(targetNode, queued){\r\n\t\tif(alreadyInitialized && !targetNode) return;\r\n\t\talreadyInitialized = true;\r\n\t\tsetTimeout(function(){\r\n\t\t\talreadyInitialized = false;\r\n\t\t}, 50);\r\n\r\n\t\tif(!targetNode) targetNode = document.body;\r\n\r\n\t\tself.parsePreprocess(queued || self.queuePreprocess(targetNode), queued);\r\n\t\tbindInput(targetNode);\r\n\r\n\t\t// Find element for array binding\r\n\t\tvar temp = $('[sf-repeat-this]', targetNode);\r\n\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\tvar element = temp[a];\r\n\t\t\tvar parent = element.parentElement;\r\n\r\n\t\t\tif(queued !== undefined)\r\n\t\t\t\telement.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(parent.classList.contains('sf-virtual-list')){\r\n\t\t\t\tvar ceiling = document.createElement(element.tagName);\r\n\t\t\t\tceiling.classList.add('virtual-spacer');\r\n\t\t\t\tvar floor = ceiling.cloneNode(true);\r\n\r\n\t\t\t\tceiling.classList.add('ceiling');\r\n\t\t\t\tparent.insertBefore(ceiling, parent.firstElementChild); // prepend\r\n\r\n\t\t\t\tfloor.classList.add('floor');\r\n\t\t\t\tparent.appendChild(floor); // append\r\n\t\t\t}\r\n\r\n\t\t\tvar after = element.nextElementSibling;\r\n\t\t\tif(after === null || element === after)\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = element.previousElementSibling;\r\n\t\t\tif(before === null || element === before)\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = element.getAttribute('sf-repeat-this');\r\n\t\t\telement.removeAttribute('sf-repeat-this');\r\n\r\n\t\t\t// Check if the element was already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(element.outerHTML))\r\n\t\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\t\tvar controller = sf.controller.modelName(element);\r\n\t\t\tloopParser(controller, element, script, targetNode, parent);\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t}\r\n\r\n\t// Reset model properties\r\n\t// Don't call if the removed element is TEXT or #comment\r\n\tvar DOMNodeRemoved = scope.DOMNodeRemoved = function(element){\r\n\t\tif(element.hasAttribute('sf-controller') !== false){\r\n\t\t\tvar modelName = element.getAttribute('sf-controller');\r\n\r\n\t\t\tremoveModelBinding(modelName);\r\n\t\t\tif(element.sf$component !== undefined){\r\n\t\t\t\tvar modelFrom = element.sf$componentFrom;\r\n\t\t\t\tvar components = sf.component.available[modelFrom];\r\n\t\t\t\tcomponents.splice(components.indexOf(modelName), 1);\r\n\t\t\t\tinternal.component.triggerEvent(modelFrom, 'removed', self.root[modelName]);\r\n\t\t\t\tdelete self.root[modelName];\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar temp = $('[sf-controller]', element);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar modelName = temp[i].getAttribute('sf-controller');\r\n\r\n\t\t\tremoveModelBinding(modelName);\r\n\t\t\tif(element.sf$component !== undefined){\r\n\t\t\t\tmodelName = element.sf$componentFor;\r\n\t\t\t\tvar modelFrom = element.sf$componentFrom;\r\n\t\t\t\tvar components = sf.component.available[modelName];\r\n\t\t\t\tcomponents.splice(components.indexOf(modelName), 1);\r\n\t\t\t\tinternal.component.triggerEvent(modelFrom, 'removed', self.root[modelName]);\r\n\t\t\t\tdelete self.root[modelName];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsf(function(){\r\n\t\tvar everyRemovedNodes = function(nodes){\r\n\t\t\tif(nodes.nodeType !== 1 || nodes.firstElementChild === null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(nodes.sf$elementReferences !== undefined) return;\r\n\t\t\tDOMNodeRemoved(nodes);\r\n\t\t}\r\n\r\n\t\tif(typeof MutationObserver === 'function' && MutationObserver.prototype.observe){\r\n\t\t\tvar everyRecords = function(record){\r\n\t\t\t\trecord.removedNodes.forEach(everyRemovedNodes);\r\n\t\t\t}\r\n\r\n\t\t\tvar observer = new MutationObserver(function(records){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\trecords.forEach(everyRecords);\r\n\t\t\t});\r\n\r\n\t\t\tobserver.observe(document.body, { childList: true, subtree: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.body.addEventListener('DOMNodeRemoved', function(e){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\teveryRemovedNodes(e.target);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tvar removeModelBinding = self.reset = function(modelName){\r\n\t\tvar ref = self.root[modelName];\r\n\t\tif(ref === undefined)\r\n\t\t\treturn;\r\n\r\n\t\tvar bindedKey = ref.sf$bindedKey;\r\n\t\tvar temp = null;\r\n\t\tfor(var key in bindedKey){\r\n\t\t\tdelete bindedKey[key];\r\n\r\n\t\t\tif(ref[key] === undefined || ref[key] === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(ref[key].constructor === String ||\r\n\t\t\t\tref[key].constructor === Number ||\r\n\t\t\t\tref[key].constructor === Boolean\r\n\t\t\t){/* Ok */}\r\n\r\n\t\t\telse if(ref[key].constructor === Array){\r\n\t\t\t\tif(ref[key].$virtual){\r\n\t\t\t\t\tref[key].$virtual.destroy();\r\n\t\t\t\t\tdelete ref[key].$virtual;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset property without copying the array\r\n\t\t\t\ttemp = ref[key].splice('obtain');\r\n\t\t\t\tdelete ref[key];\r\n\t\t\t\tref[key] = temp;\r\n\t\t\t}\r\n\t\t\telse continue;\r\n\r\n\t\t\tif(Object.getOwnPropertyDescriptor(ref, key) === undefined)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Reconfigure / Remove property descriptor\r\n\t\t\tvar temp = ref[key];\r\n\t\t\tdelete ref[key];\r\n\t\t\tref[key] = temp;\r\n\t\t}\r\n\t}\r\n\r\n\tvar dcBracket = /{{[^#][\\s\\S]*?}}/;\r\n\tself.bindElement = function(element){\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar data = self.extractPreprocess(element, null, modelName);\r\n\t\ttemplateParser(data, model, true);\r\n\t\tdelete data.addresses;\r\n\t\telement.parentNode.replaceChild(data.html, element);\r\n\t\telement = data.html;\r\n\r\n\t\tfunction proxyProperty(propertyName){\r\n\t\t\tvar objValue = model[propertyName]; // Object value\r\n\t\t\tObject.defineProperty(model, propertyName, {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn objValue;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tobjValue = val;\r\n\r\n\t\t\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\t\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\t\t\t\tref[i]();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn objValue;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tvar onChanges = function(){\r\n\t\t\tif(syntheticTemplate(element, data, undefined, model) === false)\r\n\t\t\t\t0; //No update\r\n\t\t};\r\n\r\n\t\tvar properties = data.modelRef_array;\r\n\t\tfor (var i = 0; i < properties.length; i++) {\r\n\t\t\tvar propertyName = properties[i][0];\r\n\r\n\t\t\tif(model[propertyName] === undefined)\r\n\t\t\t\tmodel[propertyName] = '';\r\n\r\n\t\t\t// Enable multiple element binding\r\n\t\t\tif(model.sf$bindedKey === undefined)\r\n\t\t\t\tinitBindingInformation(model);\r\n\r\n\t\t\tif(model.sf$bindedKey[propertyName] !== undefined){\r\n\t\t\t\tif(model.sf$bindedKey[propertyName].indexOf(onChanges) === -1)\r\n\t\t\t\t\tmodel.sf$bindedKey[propertyName].push(onChanges);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tproxyProperty(propertyName);\r\n\t\t\tmodel.sf$bindedKey[propertyName] = [onChanges];\r\n\t\t}\r\n\t}\r\n\r\n\tself.extractPreprocess = function(targetNode, mask, name){\r\n\t\tvar copy = targetNode.outerHTML;\r\n\r\n\t\t// Mask the referenced item\r\n\t\tif(mask !== null)\r\n\t\t\tcopy = copy.split('#'+mask).join('_model_');\r\n\r\n\t\t// Extract data to be parsed\r\n\t\tcopy = uniqueDataParser(copy, null, mask, name, '#noEval');\r\n\t\tvar preParsed = copy[1];\r\n\t\tvar _content_ = copy[2];\r\n\t\tcopy = dataParser(copy[0], null, mask, name, '#noEval', preParsed);\r\n\r\n\t\tfunction findModelProperty(){\r\n\t\t\tif(mask === null){\r\n\t\t\t\t// Get model keys and sort by text length, make sure the longer one is from first index to avoid wrong match\r\n\t\t\t\tvar extract = RegExp('('+self.modelKeys(self.root[name]).sort(function(a, b){return b.length - a.length}).join('|')+')', 'g');\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tvar extract = RegExp('\\\\b(?:_model_|'+mask+')\\\\.([a-zA-Z0-9.[\\'\\\\]]+)(?:$|[^\\'\\\\]])', 'g');\r\n\t\t\tvar found = {};\r\n\r\n\t\t\tfor (var i = 0; i < preParsed.length; i++) {\r\n\t\t\t\tvar current = preParsed[i];\r\n\r\n\t\t\t\t// Text or attribute\r\n\t\t\t\tif(current.type === 0){\r\n\t\t\t\t\tcurrent.data[0].split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(found[match] === undefined) found[match] = [i];\r\n\t\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Dynamic data\r\n\t\t\t\tif(current.type === 1){\r\n\t\t\t\t\tvar checkList = current.if.join(';');\r\n\r\n\t\t\t\t\tif(current.elseValue !== null)\r\n\t\t\t\t\t\tcheckList += ';' + current.elseValue;\r\n\r\n\t\t\t\t\tfor (var a = 0; a < current.elseIf.length; a++) {\r\n\t\t\t\t\t\tcheckList += current.elseIf[a].join(';');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(current.type === 2)\r\n\t\t\t\t\tvar checkList = current.data[0];\r\n\r\n\t\t\t\tcheckList = checkList.replace(/_result_ \\+= _content_\\.take\\(.*?, ([0-9]+)\\);/g, function(full, match){\r\n\t\t\t\t\treturn _content_[match];\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcheckList.split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found[match] === undefined) found[match] = [i];\r\n\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn found;\r\n\t\t}\r\n\r\n\t\t// Build element and start addressing\r\n\t\tcopy = $.parseElement(copy)[0];\r\n\t\tvar nodes = self.queuePreprocess(copy, true).reverse();\r\n\t\tvar addressed = [];\r\n\r\n\t\tfunction addressAttributes(currentNode){\r\n\t\t\tvar attrs = currentNode.attributes;\r\n\t\t\tvar keys = [];\r\n\t\t\tvar indexes = 0;\r\n\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\tvar found = attrs[a].value.split('{{%=');\r\n\t\t\t\tif(found.length !== 1){\r\n\t\t\t\t\tvar key = {\r\n\t\t\t\t\t\tname:attrs[a].name,\r\n\t\t\t\t\t\tvalue:attrs[a].value\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tindexes = [];\r\n\t\t\t\t\tfound = attrs[a].value.replace(/{{%=([0-9]+)/g, function(full, match){\r\n\t\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found === '' && indexes.length === 1)\r\n\t\t\t\t\t\tkey.direct = indexes[0];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tkey.parse_index = indexes;\r\n\r\n\t\t\t\t\tkeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn keys;\r\n\t\t}\r\n\r\n\t\tvar currentElement = addressAttributes(copy);\r\n\t\tif(currentElement.length !== 0)\r\n\t\t\taddressed.push({\r\n\t\t\t\tnodeType:1,\r\n\t\t\t\taddress:[0],\r\n\t\t\t\tattributes:currentElement\r\n\t\t\t});\r\n\r\n\t\tfor (var i = 0; i < nodes.length; i++) {\r\n\t\t\tvar temp = {\r\n\t\t\t\tnodeType:nodes[i].nodeType\r\n\t\t\t};\r\n\r\n\t\t\tif(temp.nodeType === 1){ // Element\r\n\t\t\t\ttemp.attributes = addressAttributes(nodes[i]);\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\telse if(temp.nodeType === 3){ // Text node\r\n\t\t\t\tvar innerHTML = nodes[i].textContent;\r\n\t\t\t\tvar indexes = [];\r\n\r\n\t\t\t\tinnerHTML.replace(/{{%%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Check for dynamic mode\r\n\t\t\t\tif(indexes.length !== 0){\r\n\t\t\t\t\tinnerHTML = innerHTML.split(/{{%%=[0-9]+/gm);\r\n\t\t\t\t\tfor (var a = 0; a < innerHTML.length; a++) {\r\n\t\t\t\t\t\tinnerHTML[a] = trimIndentation(innerHTML[a]).trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodes[i].textContent = innerHTML.shift();\r\n\r\n\t\t\t\t\tvar parent = nodes[i].parentNode;\r\n\t\t\t\t\tvar nextSibling = nodes[i].nextSibling;\r\n\r\n\t\t\t\t\t// Dynamic boundary start\r\n\t\t\t\t\tvar addressStart = null;\r\n\t\t\t\t\tif(indexes.length !== 0 && nodes[i].textContent.length !== 0)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i], true);\r\n\t\t\t\t\telse if(nodes[i].previousSibling !== null)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i].previousSibling, true);\r\n\r\n\t\t\t\t\t// Find boundary ends\r\n\t\t\t\t\tvar commentFlag = [];\r\n\t\t\t\t\tfor(var a = 0; a < indexes.length; a++){\r\n\t\t\t\t\t\tvar flag = document.createComment('');\r\n\t\t\t\t\t\tparent.insertBefore(flag, nextSibling);\r\n\t\t\t\t\t\tcommentFlag.push({\r\n\t\t\t\t\t\t\tnodeType:-1,\r\n\t\t\t\t\t\t\tparse_index:indexes[a],\r\n\t\t\t\t\t\t\tstartFlag:addressStart,\r\n\t\t\t\t\t\t\taddress:$.getSelector(flag, true)\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(innerHTML[a]){\r\n\t\t\t\t\t\t\tvar textNode = document.createTextNode(innerHTML[a]);\r\n\t\t\t\t\t\t\tparent.insertBefore(textNode, nextSibling);\r\n\r\n\t\t\t\t\t\t\t// Get new start flag\r\n\t\t\t\t\t\t\tif(a + 1 < indexes.length)\r\n\t\t\t\t\t\t\t\taddressStart = $.getSelector(textNode, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Merge boundary address\r\n\t\t\t\t\tArray.prototype.push.apply(addressed, commentFlag);\r\n\t\t\t\t\tif(nodes[i].textContent === ''){\r\n\t\t\t\t\t\tnodes[i].remove();\r\n\t\t\t\t\t\tfor (var a = 0; a < commentFlag.length; a++) {\r\n\t\t\t\t\t\t\tvar ref = commentFlag[a].address;\r\n\t\t\t\t\t\t\tref[ref.length - 1]--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(nodes[i].textContent.search(/{{%=[0-9]+/) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if it's only model value\r\n\t\t\t\tindexes = [];\r\n\t\t\t\tinnerHTML = nodes[i].textContent.replace(/{{%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(innerHTML === '' && indexes.length === 1)\r\n\t\t\t\t\ttemp.direct = indexes[0];\r\n\t\t\t\telse{\r\n\t\t\t\t\ttemp.value = nodes[i].textContent;\r\n\t\t\t\t\ttemp.parse_index = indexes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\taddressed.push(temp);\r\n\t\t}\r\n\r\n\t\tvar modelReference = findModelProperty();\r\n\t\tvar keys = Object.keys(modelReference);\r\n\t\tvar asArray = [];\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tasArray.push([keys[i], keys[i].split('.')]);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\thtml:copy,\r\n\t\t\tparse:preParsed,\r\n\t\t\taddresses:addressed,\r\n\t\t\tmodelReference:modelReference,\r\n\t\t\tmodelRef_array:asArray\r\n\t\t};\r\n\t}\r\n\r\n\tvar enclosedHTMLParse = false;\r\n\tvar excludes = ['HTML','HEAD','STYLE','LINK','META','SCRIPT','OBJECT','IFRAME'];\r\n\tself.queuePreprocess = function(targetNode, extracting){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = childNodes.length - 1; i >= 0; i--) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\r\n\t\t\tif(extracting === undefined && excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tif(enclosedHTMLParse === true) continue;\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\r\n\t\t\t\t// Skip element and it's childs that already bound to prevent vulnerability\r\n\t\t\t\tif(attrs['sf-bind-key'] || attrs['sf-repeat-this'] || attrs['sf-bind-list']) continue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tif(extracting === undefined)\r\n\t\t\t\t\t\t\tcurrentNode.setAttribute('sf-preprocess', 'attronly');\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tArray.prototype.push.apply(temp, self.queuePreprocess(currentNode, extracting));\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tif(currentNode.textContent.length === 0){\r\n\t\t\t\t\tcurrentNode.remove();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// The scan is from bottom to first index\r\n\t\t\t\tvar enclosing = currentNode.textContent.indexOf('{[');\r\n\t\t\t\tif(enclosing !== -1)\r\n\t\t\t\t\tenclosedHTMLParse = false;\r\n\t\t\t\telse if(enclosedHTMLParse === true)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Start enclosed if closing pattern was found\r\n\t\t\t\tvar enclosed = currentNode.textContent.indexOf(']}');\r\n\t\t\t\tif(enclosed !== -1 && (enclosing === -1 || enclosing > enclosed)){ // avoid {[ ... ]}\r\n\t\t\t\t\tenclosedHTMLParse = true; // when ]} ... \r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tif(extracting === undefined){\r\n\t\t\t\t\t\tcurrentNode.parentNode.setAttribute('sf-preprocess', '');\r\n\r\n\t\t\t\t\t\t// Reset Siblings\r\n\t\t\t\t\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\t\t\t\t\ttemp[a].removeAttribute('sf-preprocess');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttemp.push(currentNode.parentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn temp;\r\n\t}\r\n\r\n\tself.parsePreprocess = function(nodes, queued){\r\n\t\tfor (var a = 0; a < nodes.length; a++) {\r\n\t\t\t// Get reference for debugging\r\n\t\t\tvar current = processingElement = nodes[a];\r\n\r\n\t\t\tvar modelElement = sf.controller.modelElement(current);\r\n\t\t\tif(modelElement === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar model = modelElement.getAttribute('sf-controller');\r\n\t\t\tcurrent.removeAttribute('sf-preprocess');\r\n\r\n\t\t\tif(queued !== undefined)\r\n\t\t\t\tcurrent.classList.remove('sf-dom-queued');\r\n\r\n\t\t\t// Check if it's component\r\n\t\t\tif(self.root[model] === undefined && sf.component.registered[model])\r\n\t\t\t\tmodel = sf.component.new(model, modelElement);\r\n\r\n\t\t\tvar modelRef = self.root[model] || root_(model);\r\n\r\n\t\t\t// Double check if the child element already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(current.innerHTML)){\r\n\t\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\t\tconsole.log(processingElement.cloneNode(true));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(current.hasAttribute('sf-bind-ignore') === false)\r\n\t\t\t\tself.bindElement(current);\r\n\t\t\telse{\r\n\t\t\t\tvar temp = uniqueDataParser(current.innerHTML, modelRef, false, model);\r\n\t\t\t\tcurrent.innerHTML = dataParser(temp, modelRef, false, model);\r\n\t\t\t\tvar attrs = current.attributes;\r\n\t\t\t\tfor (var i = 0; i < attrs.length; i++) {\r\n\t\t\t\t\tif(attrs[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tvar attr = attrs[i];\r\n\t\t\t\t\t\tattr.value = dataParser(attr.value, modelRef, false, model);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initBindingInformation(modelRef){\r\n\t\tif(modelRef.sf$bindedKey !== undefined)\r\n\t\t\treturn;\r\n\r\n\t\t// Element binding data\r\n\t\tObject.defineProperty(modelRef, 'sf$bindedKey', {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable:false,\r\n\t\t\twritable:true,\r\n\t\t\tvalue:{}\r\n\t\t});\r\n\t}\r\n})();","// ==== ES5 Polyfill ====\r\nif(typeof Object.assign != 'function'){\r\n  Object.defineProperty(Object, \"assign\", {\r\n    value: function assign(target, varArgs) {\r\n      'use strict';\r\n      if (target == null)\r\n        throw new TypeError('Cannot convert undefined or null to object');\r\n      var to = Object(target);\r\n      for (var index = 1; index < arguments.length; index++) {\r\n        var nextSource = arguments[index];\r\n        if (nextSource != null) {\r\n          for (var nextKey in nextSource) {\r\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey))\r\n              to[nextKey] = nextSource[nextKey];\r\n          }\r\n        }\r\n      }\r\n      return to;\r\n    },\r\n    writable: true,\r\n    configurable: true\r\n  });\r\n}\r\n\r\nif(Element.prototype.remove === undefined || CharacterData.prototype.remove === undefined || DocumentType.prototype.remove === undefined){\r\n  (function (arr) {\r\n    arr.forEach(function (item) {\r\n      if (item.hasOwnProperty('remove')) {\r\n        return;\r\n      }\r\n      Object.defineProperty(item, 'remove', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n        value: function remove() {\r\n          if (this.parentNode !== null)\r\n            this.parentNode.removeChild(this);\r\n        }\r\n      });\r\n    });\r\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\r\n}\r\n\r\nif(!Element.prototype.matches){\r\n  Element.prototype.matches = (Element.prototype).matchesSelector ||\r\n    (Element.prototype).mozMatchesSelector || (Element.prototype).msMatchesSelector ||\r\n    (Element.prototype).oMatchesSelector || (Element.prototype).webkitMatchesSelector ||\r\n    function (s) {\r\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n      i = matches.length;\r\n      while (--i >= 0 && matches.item(i) !== this){}\r\n      return i > -1;\r\n    };\r\n}\r\n\r\nif(!NodeList.prototype.forEach){\r\n    NodeList.prototype.forEach = function (callback, thisArg) {\r\n        thisArg = thisArg || window;\r\n        for (var i = 0; i < this.length; i++) {\r\n            callback.call(thisArg, this[i], i, this);\r\n        }\r\n    };\r\n}\r\n\r\nif(!window.location.origin)\r\n  window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');\r\n\r\nif(!Object.values)\r\n  Object.values = function(obj){\r\n    var res = [];\r\n    for (var i in obj) {\r\n        if (obj.hasOwnProperty(i)) {\r\n            res.push(obj[i]);\r\n        }\r\n    }\r\n    return res;\r\n  }","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tself.pending = {};\r\n\tself.active = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tif(sf.component.registered[name]){\r\n\t\t\tsf.component.registered[name][1] = func;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tself.pending[name] = func;\r\n\t}\r\n\r\n\tself.modelScope = function(element, func){\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = element.getAttribute('sf-bind-list');\r\n\t\tif(!bindedList){\r\n\t\t\tvar parentEl = $.parent(element, '[sf-bind-list]');\r\n\t\t\tif(parentEl !== null)\r\n\t\t\t\tbindedList = parentEl.getAttribute('sf-bind-list');\r\n\t\t}\r\n\t\telse var parentEl = element;\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(sf.model.root[model], -1);\r\n\t\t\telse return sf.model.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = $.prevAll(parentEl, '[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(sf.model.root[model][bindedList], bindedListIndex);\r\n\t\telse return sf.model.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.modelElement = function(element){\r\n\t\tif(element.nodeType === 1 && element.hasAttribute('sf-controller'))\r\n\t\t\treturn element;\r\n\r\n\t\treturn $.parent(element, '[sf-controller]');\r\n\t}\r\n\r\n\tself.modelName = function(element){\r\n\t\tvar name = self.modelElement(element).getAttribute('sf-controller');\r\n\r\n\t\t// Initialize it first\r\n\t\tif(name !== undefined && !self.active[name])\r\n\t\t\tself.run(name);\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = e.target;\r\n\t\tvar script = element.getAttribute('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = $.parent(element, '[sf-click]');\r\n\t\t\tscript = element.getAttribute('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = $.parent(element, '[sf-controller]').getAttribute('sf-controller');\r\n\r\n\t\tif(!sf.model.root[model])\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar _modelScope = sf.model.root[model];\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(_modelScope).join('|');\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+modelKeys+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tscript = script.replace(scopeMask, function(full, matched){\r\n\t\t\treturn '_modelScope.'+matched;\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script[0];\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(e) {\r\n\t\t\tmethod = false;\r\n\t\t}\r\n\r\n\t\tif(!method){\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot call `'+method_+'`]\\n', element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript.shift();\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0){\r\n\t\t\t// Replace `this` to `element`\r\n\t\t\tscript = eval(('['+script+']').replace(/,this|\\[this/g, function(found){\r\n\t\t\t\treturn found[0] + 'element';\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif(!script)\r\n\t\t\tscript = [];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element, script);\r\n\t\t\te.preventDefault();\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', element, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tself.run = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.run(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(sf.component.registered[name])\r\n\t\t\treturn console.error(\"'\"+name+\"' is registered as a component\");\r\n\r\n\t\tif(self.pending[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\r\n\t\t\tself.pending[name](sf.model.root[name], root_);\r\n\t\t\tself.active[name] = true;\r\n\t\t\tdelete self.pending[name];\r\n\t\t}\r\n\r\n\t\tif(sf.model.root[name] === undefined)\r\n\t\t\tsf.model.root[name] = {};\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], root_);\r\n\t}\r\n\r\n\tself.init = function(parent){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(name);\r\n\t\t\t});\r\n\r\n\t\tvar temp = $('[sf-controller]', parent || document.body);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tself.run(temp[i].getAttribute('sf-controller'));\r\n\t\t}\r\n\t}\r\n\r\n\t// Create listener for sf-click\r\n\tdocument.addEventListener('DOMContentLoaded', function(){\r\n\t\t$.on(document.body, 'click', '[sf-click]', listenSFClick);\r\n\t}, {capture:true, once:true});\r\n}\r\n\r\nvar root_ = function(scope){\r\n\tif(sf.component.registered[scope]){\r\n\t\tvar available = [];\r\n\t\tvar component = sf.component.available[scope];\r\n\t\tif(component !== undefined){\r\n\t\t\tfor (var i = 0; i < component.length; i++) {\r\n\t\t\t\tavailable.push(sf.model.root[component[i]]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn available;\r\n\t}\r\n\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\treturn sf.model.root[scope];\r\n}","/*\r\n  Special Thanks to Vladimir Kharlampidi\r\n  https://github.com/nolimits4web/\r\n*/\r\n\r\nvar globals = {};\r\nvar jsonpRequests = 0;\r\nfunction Request(requestOptions) {\r\n    var globalsNoCallbacks = Object.assign({}, globals);\r\n    ('beforeCreate beforeOpen beforeSend error complete success statusCode').split(' ').forEach(function (callbackName) {\r\n        delete globalsNoCallbacks[callbackName];\r\n    });\r\n    var defaults = Object.assign({\r\n        url: window.location.toString(),\r\n        method: 'GET',\r\n        data: false,\r\n        async: true,\r\n        cache: true,\r\n        user: '',\r\n        password: '',\r\n        headers: {},\r\n        xhrFields: {},\r\n        statusCode: {},\r\n        processData: true,\r\n        dataType: 'text',\r\n        contentType: 'application/x-www-form-urlencoded',\r\n        timeout: 0,\r\n    }, globalsNoCallbacks);\r\n    var options = Object.assign({}, defaults, requestOptions);\r\n    var proceedRequest;\r\n    // Function to run XHR callbacks and events\r\n    function fireCallback(callbackName) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        /*\r\n          Callbacks:\r\n          beforeCreate (options),\r\n          beforeOpen (xhr, options),\r\n          beforeSend (xhr, options),\r\n          error (xhr, status),\r\n          complete (xhr, stautus),\r\n          success (response, status, xhr),\r\n          statusCode ()\r\n        */\r\n        var globalCallbackValue;\r\n        var optionCallbackValue;\r\n        if (globals[callbackName]) {\r\n            globalCallbackValue = globals[callbackName].apply(globals, data);\r\n        }\r\n        if (options[callbackName]) {\r\n            optionCallbackValue = options[callbackName].apply(options, data);\r\n        }\r\n        if (typeof globalCallbackValue !== 'boolean')\r\n            globalCallbackValue = true;\r\n        if (typeof optionCallbackValue !== 'boolean')\r\n            optionCallbackValue = true;\r\n        return (globalCallbackValue && optionCallbackValue);\r\n    }\r\n    // Before create callback\r\n    proceedRequest = fireCallback('beforeCreate', options);\r\n    if (proceedRequest === false)\r\n        return undefined;\r\n    // For jQuery guys\r\n    if (options.type)\r\n        options.method = options.type;\r\n    // Parameters Prefix\r\n    var paramsPrefix = options.url.indexOf('?') >= 0 ? '&' : '?';\r\n    // UC method\r\n    var method = options.method.toUpperCase();\r\n    // Data to modify GET URL\r\n    if ((method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') && options.data) {\r\n        var stringData = void 0;\r\n        if (typeof options.data === 'string') {\r\n            // Should be key=value string\r\n            if (options.data.indexOf('?') >= 0)\r\n                stringData = options.data.split('?')[1];\r\n            else\r\n                stringData = options.data;\r\n        }\r\n        else {\r\n            // Should be key=value object\r\n            stringData = serializeQuery(options.data);\r\n        }\r\n        if (stringData.length) {\r\n            options.url += paramsPrefix + stringData;\r\n            if (paramsPrefix === '?')\r\n                paramsPrefix = '&';\r\n        }\r\n    }\r\n    // JSONP\r\n    if (options.dataType === 'json' && options.url.indexOf('callback=') >= 0) {\r\n        var callbackName_1 = \"jsonp_\" + (Date.now() + ((jsonpRequests += 1)));\r\n        var abortTimeout_1;\r\n        var callbackSplit = options.url.split('callback=');\r\n        var requestUrl = callbackSplit[0] + \"callback=\" + callbackName_1;\r\n        if (callbackSplit[1].indexOf('&') >= 0) {\r\n            var addVars = callbackSplit[1].split('&').filter(function (el) { return el.indexOf('=') > 0; }).join('&');\r\n            if (addVars.length > 0)\r\n                requestUrl += \"&\" + addVars;\r\n        }\r\n        // Create script\r\n        var script_1 = document.createElement('script');\r\n        script_1.type = 'text/javascript';\r\n        script_1.onerror = function onerror() {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('error', null, 'scripterror');\r\n            fireCallback('complete', null, 'scripterror');\r\n        };\r\n        script_1.src = requestUrl;\r\n        // Handler\r\n        window[callbackName_1] = function jsonpCallback(data) {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('success', data);\r\n            script_1.parentNode.removeChild(script_1);\r\n            script_1 = null;\r\n            delete window[callbackName_1];\r\n        };\r\n        document.querySelector('head').appendChild(script_1);\r\n        if (options.timeout > 0) {\r\n            abortTimeout_1 = setTimeout(function () {\r\n                script_1.parentNode.removeChild(script_1);\r\n                script_1 = null;\r\n                fireCallback('error', null, 'timeout');\r\n            }, options.timeout);\r\n        }\r\n        return undefined;\r\n    }\r\n    // Cache for GET/HEAD requests\r\n    if (method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') {\r\n        if (options.cache === false) {\r\n            options.url += paramsPrefix + \"_nocache\" + Date.now();\r\n        }\r\n    }\r\n    // Create XHR\r\n    var xhr = new XMLHttpRequest();\r\n    // Save Request URL\r\n    xhr.requestUrl = options.url;\r\n    xhr.requestParameters = options;\r\n    // Before open callback\r\n    proceedRequest = fireCallback('beforeOpen', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Open XHR\r\n    xhr.open(method, options.url, options.async, options.user, options.password);\r\n    // Create POST Data\r\n    var postData = null;\r\n    if ((method === 'POST' || method === 'PUT' || method === 'PATCH') && options.data) {\r\n        if (options.processData) {\r\n            var postDataInstances = [ArrayBuffer, Blob, Document, FormData];\r\n            // Post Data\r\n            if (postDataInstances.indexOf(options.data.constructor) >= 0) {\r\n                postData = options.data;\r\n            }\r\n            else {\r\n                // POST Headers\r\n                var boundary = \"---------------------------\" + Date.now().toString(16);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    xhr.setRequestHeader('Content-Type', \"multipart/form-data; boundary=\" + boundary);\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader('Content-Type', options.contentType);\r\n                }\r\n                postData = '';\r\n                var data = serializeQuery(options.data);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    data = data.split('&');\r\n                    var newData = [];\r\n                    for (var i = 0; i < data.length; i += 1) {\r\n                        newData.push(\"Content-Disposition: form-data; name=\\\"\" + data[i].split('=')[0] + \"\\\"\\r\\n\\r\\n\" + data[i].split('=')[1] + \"\\r\\n\");\r\n                    }\r\n                    postData = \"--\" + boundary + \"\\r\\n\" + newData.join(\"--\" + boundary + \"\\r\\n\") + \"--\" + boundary + \"--\\r\\n\";\r\n                }\r\n                else if (options.contentType === 'application/json') {\r\n                    postData = JSON.stringify(options.data);\r\n                }\r\n                else {\r\n                    postData = data;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            postData = options.data;\r\n            xhr.setRequestHeader('Content-Type', options.contentType);\r\n        }\r\n    }\r\n    // Additional headers\r\n    if (options.headers) {\r\n        Object.keys(options.headers).forEach(function (headerName) {\r\n            xhr.setRequestHeader(headerName, options.headers[headerName]);\r\n        });\r\n    }\r\n    // Check for crossDomain\r\n    if (typeof options.crossDomain === 'undefined') {\r\n        // eslint-disable-next-line\r\n        options.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(options.url) && RegExp.$2 !== window.location.host;\r\n    }\r\n    if (!options.crossDomain) {\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    }\r\n    if (options.xhrFields) {\r\n        Object.assign(xhr, options.xhrFields);\r\n    }\r\n    var xhrTimeout;\r\n    // Handle XHR\r\n    xhr.onload = function onload() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 0) {\r\n            var responseData = void 0;\r\n            if (options.dataType === 'json') {\r\n                var parseError = void 0;\r\n                try {\r\n                    responseData = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (err) {\r\n                    parseError = true;\r\n                }\r\n                if (!parseError) {\r\n                    fireCallback('success', responseData, xhr.status, xhr);\r\n                }\r\n                else {\r\n                    fireCallback('error', xhr, 'parseerror');\r\n                }\r\n            }\r\n            else {\r\n                responseData = xhr.responseType === 'text' || xhr.responseType === '' ? xhr.responseText : xhr.response;\r\n                fireCallback('success', responseData, xhr.status, xhr);\r\n            }\r\n        }\r\n        else {\r\n            fireCallback('error', xhr, xhr.status);\r\n        }\r\n        if (options.statusCode) {\r\n            if (globals.statusCode && globals.statusCode[xhr.status])\r\n                globals.statusCode[xhr.status](xhr);\r\n            if (options.statusCode[xhr.status])\r\n                options.statusCode[xhr.status](xhr);\r\n        }\r\n        fireCallback('complete', xhr, xhr.status);\r\n    };\r\n    xhr.onerror = function onerror() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        fireCallback('error', xhr, xhr.status);\r\n        fireCallback('complete', xhr, 'error');\r\n    };\r\n    // Timeout\r\n    if (options.timeout > 0) {\r\n        xhr.onabort = function onabort() {\r\n            if (xhrTimeout)\r\n                clearTimeout(xhrTimeout);\r\n        };\r\n        xhrTimeout = setTimeout(function () {\r\n            xhr.abort();\r\n            fireCallback('error', xhr, 'timeout');\r\n            fireCallback('complete', xhr, 'timeout');\r\n        }, options.timeout);\r\n    }\r\n    // Ajax start callback\r\n    proceedRequest = fireCallback('beforeSend', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Send XHR\r\n    xhr.send(postData);\r\n    // Return XHR object\r\n    return xhr;\r\n}\r\nfunction RequestShortcut(method) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    var _a = [], url = _a[0], data = _a[1], success = _a[2], error = _a[3], dataType = _a[4];\r\n    if (typeof args[1] === 'function') {\r\n        url = args[0], success = args[1], error = args[2], dataType = args[3];\r\n    }\r\n    else {\r\n        url = args[0], data = args[1], success = args[2], error = args[3], dataType = args[4];\r\n    }\r\n    [success, error].forEach(function (callback) {\r\n        if (typeof callback === 'string') {\r\n            dataType = callback;\r\n            if (callback === success)\r\n                success = undefined;\r\n            else\r\n                error = undefined;\r\n        }\r\n    });\r\n    dataType = dataType || (method === 'json' || method === 'postJSON' ? 'json' : undefined);\r\n    var requestOptions = {\r\n        url: url,\r\n        method: method === 'post' || method === 'postJSON' ? 'POST' : 'GET',\r\n        data: data,\r\n        success: success,\r\n        error: error,\r\n        dataType: dataType,\r\n    };\r\n    if (method === 'postJSON') {\r\n        Object.assign(requestOptions, {\r\n            contentType: 'application/json',\r\n            processData: false,\r\n            crossDomain: true,\r\n            data: typeof data === 'string' ? data : JSON.stringify(data),\r\n        });\r\n    }\r\n    return Request(requestOptions);\r\n}\r\nObject.assign(Request, {\r\n    get: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['get'].concat(args));\r\n    },\r\n    post: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['post'].concat(args));\r\n    },\r\n    json: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    getJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    postJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['postJSON'].concat(args));\r\n    },\r\n});\r\nRequest.setup = function setup(options) {\r\n    if (options.type && !options.method) {\r\n        Object.assign(options, { method: options.type });\r\n    }\r\n    Object.assign(globals, options);\r\n};\r\nfunction serializeQuery(params, prefix) {\r\n    var key = Object.keys(params);\r\n    for (var i = 0; i < key.length; i++) {\r\n      var value = params[key[i]];\r\n      if (params.constructor === Array)\r\n          key[i] += prefix + \"[]\";\r\n      else if (params.constructor === Object)\r\n          key[i] = (prefix ? prefix + \"[\" + key[i] + \"]\" : key[i]);\r\n\r\n      if (typeof value === 'object')\r\n          key[i] = serializeQuery(value, key[i]);\r\n      else\r\n          key[i] = key[i] + \"=\" + encodeURIComponent(value);\r\n    }\r\n    return key.join('&');\r\n}\r\n$.ajax = sf.ajax = Request;","return sf;\r\n\r\n// ===== Module End =====\r\n})));","sf.router = new function(){\r\n\tvar self = this;\r\n\tself.loading = false;\r\n\tself.enabled = false;\r\n\tself.pauseRenderOnTransition = false;\r\n\tself.currentPage = [];\r\n\tvar initialized = false;\r\n\tvar lazyRouting = false;\r\n\tvar currentRouterURL = '';\r\n\r\n\t// Should be called if not using lazy page load\r\n\tself.init = function(targetNode){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init();\r\n\t\t\t});\r\n\r\n\t\t// Run 'before' event for new page view\r\n\t\tvar temp = $('[sf-controller], [sf-page]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tif(temp[i].getAttribute('sf-controller'))\r\n\t\t\t\tsf.controller.run(temp[i].getAttribute('sf-controller'));\r\n\t\t\t\r\n\t\t\tif(temp[i].getAttribute('sf-page')){\r\n\t\t\t\tvar name = temp[i].getAttribute('sf-page');\r\n\t\t\t\tbeforeEvent(name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinitialized = true;\r\n\t\tcurrentRouterURL = window.location.pathname;\r\n\t}\r\n\r\n\tfunction popstateListener(event) {\r\n\t\t// Don't continue if the last routing was error\r\n\t\tif(routingError){\r\n\t\t\troutingError = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\troutingBack = true;\r\n\t\tself.goto(window.location.pathname);\r\n\t}\r\n\r\n\tself.enable = function(status){\r\n\t\tif(status === undefined) status = true;\r\n\t\tif(self.enabled === status) return;\r\n\t\tself.enabled = status;\r\n\r\n\t\tif(status === true){\r\n\t\t\t// Create listener for link click\r\n\t\t\t$.on(document.body, 'click', 'a[href]', self.load);\r\n\r\n\t\t\t// Create listener when navigate backward\r\n\t\t\twindow.addEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$.off(document.body, 'click', 'a[href]', self.load);\r\n\t\t\twindow.removeEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t}\r\n\r\n\tvar before = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.before = function(name, func, index){\r\n\t\tif(!before[name])\r\n\t\t\tbefore[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(before[name].indexOf(func) === -1)\r\n\t\t\t\tbefore[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tbefore[name][index] = func;\r\n\t}\r\n\r\n\tvar after = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.after = function(name, func, index){\r\n\t\tif(!after[name])\r\n\t\t\tafter[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(after[name].indexOf(func) === -1)\r\n\t\t\t\tafter[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tafter[name][index] = func;\r\n\t}\r\n\r\n\t// Running 'before' new page going to be displayed\r\n\tvar beforeEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.push(name);\r\n\r\n\t\tif(before[name]){\r\n\t\t\tfor (var i = 0; i < before[name].length; i++) {\r\n\t\t\t\tbefore[name][i](sf.model);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Running 'after' old page going to be removed\r\n\tvar afterEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.splice(self.currentPage.indexOf(name), 1);\r\n\r\n\t\tif(after[name]){\r\n\t\t\tfor (var i = 0; i < after[name].length; i++) {\r\n\t\t\t\tafter[name][i](sf.model);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar onEvent = {\r\n\t\t'loading':[],\r\n\t\t'loaded':[],\r\n\t\t'special':[],\r\n\t\t'error':[]\r\n\t};\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\tself.lazyViewPoint = {};\r\n\t/*\r\n\t\t{\r\n\t\t\toldURlPattern:{\r\n\t\t\t\tnewURLPattern:'.viewPoint'\r\n\t\t\t}\r\n\t\t}\r\n\t*/\r\n\r\n\tself.load = function(ev){\r\n\t\tif(self.enabled !== true) return;\r\n\r\n\t\tvar elem = ev.target;\r\n\t\tif(!elem.href) return;\r\n\r\n\t\tif(!history.pushState || elem.hasAttribute('sf-router-ignore'))\r\n\t\t\treturn;\r\n\r\n\t\t// Make sure it's from current origin\r\n\t\tvar path = elem.href.replace(window.location.origin, '');\r\n\t\tif(path.indexOf('//') !== -1)\r\n\t\t\treturn;\r\n\r\n\t\tev.preventDefault()\r\n\t\treturn !self.goto(path);\r\n\t}\r\n\r\n\tvar RouterLoading = false;\r\n\tvar routingBack = false;\r\n\tvar routingError = false;\r\n\tself.goto = function(path, data, method){\r\n\t\tif(!method) method = 'GET';\r\n        else method = method.toUpperCase();\r\n\r\n\t\tif(!data) data = {};\r\n\r\n\t\tfor (var i = 0; i < onEvent['loading'].length; i++) {\r\n\t\t\tif(onEvent['loading'][i](path)) return;\r\n\t\t}\r\n\t\tvar oldPath = window.location.pathname;\r\n\t\tinitialized = false;\r\n\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\t\tRouterLoading = $.ajax({\r\n\t\t\turl:window.location.origin + path,\r\n\t\t\tmethod:method,\r\n            data:Object.assign(data, {\r\n                _scarlets:'.dynamic.'\r\n            }),\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\tif(initialized) return;\r\n\t\t\t\tlazyRouting = true;\r\n\r\n\t\t\t\t// Run 'loaded' event\r\n\t\t\t\tRouterLoading = false;\r\n\r\n\t\t\t\t// Find special data\r\n\t\t\t\tvar regex = RegExp('<!-- SF-Special:(.*?)-->'+sf.regex.avoidQuotes, 'gm');\r\n\t\t\t\tvar special = regex.exec(data);\r\n\t\t\t\tif(special && special.length !== 1){\r\n\t\t\t\t\tspecial = special[1].split('--|&>').join('-->');\r\n\t\t\t\t\tspecial = JSON.parse(special);\r\n\r\n\t\t\t\t\tif(!isEmptyObject(special)){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['special'].length; i++) {\r\n\t\t\t\t\t\t\tif(onEvent['special'][i](special)) return;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DOMReference = false;\r\n\t\t\t\tvar foundAction = function(ref){\r\n\t\t\t\t\tDOMReference = $.findOne(ref);\r\n\r\n\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\tvar last = $.findOne('[sf-page]', DOMReference);\r\n\t\t\t\t\tafterEvent(last ? last.getAttribute('sf-page') : '/');\r\n\r\n\t\t\t\t\t// Redefine title if exist\r\n\t\t\t\t\tif(special && special.title)\r\n\t\t\t\t\t\t$('head > title').innerHTML = special.title;\r\n\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tfor(var oldURL in self.lazyViewPoint){\r\n\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\tfor(var newURL in self.lazyViewPoint[oldURL]){\r\n\t\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\t\tfoundAction(self.lazyViewPoint[oldURL][newURL]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(found) break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When the view point was not found\r\n\t\t\t\tif(!found){\r\n\t\t\t\t\t// Use fallback if exist\r\n\t\t\t\t\tif(sf.router.lazyViewPoint[\"@default\"])\r\n\t\t\t\t\t\tfoundAction(sf.router.lazyViewPoint[\"@default\"]);\r\n\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\t\t\tonEvent['error'][i]('sf.router.lazyViewPoint[\"'+oldURL+'\"][\"'+newURL+'\"] was not found');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Run 'before' event for new page view\r\n\t\t\t\tif(!DOMReference) DOMReference = document.body;\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', 'none');\r\n\r\n\t\t\t\t// Let page script running first, then update the data binding\r\n\t\t\t\tDOMReference.innerHTML = data;\r\n\r\n\t\t\t\t// Parse the DOM data binding\r\n\t\t\t\tsf.model.init(DOMReference);\r\n\r\n\t\t\t\t// Init template to model binding\r\n\t\t\t\tvar temp = $('[sf-page]', DOMReference);\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tbeforeEvent(temp[i].getAttribute('sf-page'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', '');\r\n\r\n\t\t\t\trouterLoaded(currentRouterURL, path, DOMReference);\r\n\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tlazyRouting = false;\r\n\r\n\t\t\t\tcurrentRouterURL = path;\r\n\t\t\t\troutingError = false;\r\n\t\t\t},\r\n\t\t\terror:function(xhr, data){\r\n\t\t\t\troutingError = true;\r\n\t\t\t\tif(xhr.aborted) return;\r\n\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\tonEvent['error'][i](xhr.status, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Back on error\r\n\t\t\t\twindow.history.back();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!routingBack)\r\n\t\t\twindow.history.pushState(null, \"\", path);\r\n\r\n\t\troutingBack = false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Trigger loaded event\r\n\tfunction routerLoaded(currentRouterURL, path, data){\r\n\t\tfor (var i = 0; i < onEvent['loaded'].length; i++) {\r\n\t\t\tonEvent['loaded'][i](currentRouterURL, path, data);\r\n\t\t}\r\n\t}\r\n};","sf.internal.virtual_scroll = new function(){\r\n\tvar self = this;\r\n\tvar styleInitialized = false;\r\n\tvar scrollingByScript = false;\r\n\r\n\t// before and after\r\n\tself.prepareCount = 4; // 4, 8, 12, 16, ...\r\n\r\n\tself.handle = function(list, targetNode, parentNode){\r\n\t\tif(!styleInitialized){\r\n\t\t\tinitStyles();\r\n\t\t\tstyleInitialized = true;\r\n\t\t}\r\n\r\n\t\tvar dynamicList = false;\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvirtual.reset = function(reinitOnly){\r\n\t\t\tvirtual.DOMCursor = 0; // cursor of first element in DOM tree as a cursor\r\n\r\n\t\t\tvirtual.bounding.ceiling = -1;\r\n\t\t\tvirtual.bounding.floor = 0;\r\n\r\n\t\t\tvirtual.vCursor.ceiling = null; // for forward direction\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.firstElementChild; // for backward direction\r\n\r\n\t\t\tvirtual.bounding.initial = virtual.dCursor.ceiling.offsetTop;\r\n\t\t\trefreshScrollBounding(0, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.reinitCursor = function(){\r\n\t\t\tvirtual.vCursor.ceiling = virtual.dom.children[virtual.DOMCursor - 1] || null;\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.children[virtual.DOMCursor] || null;\r\n\t\t}\r\n\r\n\t\tvirtual.reinitScroll = function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.elements = function(){\r\n\t\t\treturn obtainElements(list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.dCursor = { // DOM Cursor\r\n\t\t\tceiling:parentNode.querySelector('.virtual-spacer.ceiling'),\r\n\t\t\tfloor:parentNode.querySelector('.virtual-spacer.floor')\r\n\t\t};\r\n\r\n\t\tvirtual.bounding = {};\r\n\t\tvirtual.vCursor = {};\r\n\r\n\t\tvirtual.reset();\r\n\t\tvirtual.targetNode = parentNode;\r\n\t\tvirtual.scrollHeight = virtual.dCursor.floor.offsetTop - virtual.bounding.initial;\r\n\r\n\t\tvar scroller = parentNode;\r\n\t\tvirtual.destroy = function(){\r\n\t\t\t$.off(scroller, 'scroll');\r\n\t\t\t$.off(parentNode, 'mousedown mouseup');\r\n\t\t\tvirtual.dom.innerHTML = '';\r\n\t\t\toffElementResize(parentNode);\r\n\r\n\t\t\tdelete list.$virtual;\r\n\t\t}\r\n\r\n\t\tvirtual.resetViewport = function(){\r\n\t\t\tvirtual.visibleLength = Math.floor(scroller.clientHeight / virtual.scrollHeight);\r\n\t\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\t\tif(virtual.preparedLength < 18)\r\n\t\t\t\tvirtual.preparedLength = 18;\r\n\t\t}\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tscroller = parentNode;\r\n\r\n\t\t\tvar length = parentNode.getAttribute('scroll-parent-index') || 0;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tscroller = scroller.parentElement;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.resetViewport();\r\n\r\n\t\t\tif(parentNode.classList.contains('sf-list-dynamic')){\r\n\t\t\t\tdynamicList = true;\r\n\t\t\t\tdynamicHeight(list, targetNode, parentNode, scroller);\r\n\t\t\t}\r\n\t\t\telse staticHeight(list, targetNode, parentNode, scroller);\r\n\t\t}, 500);\r\n\t}\r\n\r\n\t// Recommended for a list that have different element height\r\n\tfunction dynamicHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\r\n\t\t\t// Reset virtual spacer height\r\n\t\t\tceilingHeight = 0;\r\n\t\t\tfloorHeight = 0;\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller);\r\n\t\t\tfillViewport();\r\n\t\t}\r\n\r\n\t\t// Insert some element until reach visible height\r\n\t\tfillViewport();\r\n\r\n\t\tvirtual.visibleLength = parentNode.childElementCount - 2;\r\n\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\tvar temp = vCursor.floor;\r\n\t\t\tif(temp === null) break;\r\n\r\n\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t}\r\n\t\tvirtual.DOMCursor = 0;\r\n\r\n\t\tvar ceilingHeight = 0;\r\n\t\tvar floorHeight = 0;\r\n\t\tfunction previousCeiling(){\r\n\t\t\tvar temp = null;\r\n\t\t\tvar resetCeiling = false;\r\n\r\n\t\t\t// Add some element on the ceiling\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\ttemp = virtual.dom.lastElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.ceiling = temp.previousElementSibling;\r\n\t\t\t\tvirtual.DOMCursor--;\r\n\r\n\t\t\t\tceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tif(ceilingHeight > 0)\r\n\t\t\t\t\tceilingHeight -= getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(virtual.DOMCursor < self.prepareCount && !resetCeiling){\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\tresetCeiling = true;\r\n\t\t\t\t\ttemp = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(ceilingHeight < 0 || temp === null)\r\n\t\t\t\tceilingHeight = 0;\r\n\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\t// Remove some element on the floor\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = floor.previousElementSibling;\r\n\t\t\t\tfloorHeight += getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tvCursor.floor = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.floor === null)\r\n\t\t\t\tvCursor.ceiling = virtual.dom.lastElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tfunction fillViewport(){\r\n\t\t\t// Insert some element depend on prepared length\r\n\t\t\tvar length = virtual.preparedLength - (parentNode.childElementCount - 2);\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\ttemp = virtual.dom.firstElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction nextFloor(){\r\n\t\t\tvar temp = null;\r\n\t\t\tfillViewport();\r\n\r\n\t\t\tif(vCursor.floor !== null){\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\t// Add extra element based on prepare count\r\n\t\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\t\ttemp = vCursor.floor;\r\n\t\t\t\t\tif(temp === null) break;\r\n\r\n\t\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\t\tif(floorHeight > 0)\r\n\t\t\t\t\t\tfloorHeight -= getAbsoluteHeight(temp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(floorHeight < 0 || temp === null)\r\n\t\t\t\tfloorHeight = 0;\r\n\r\n\t\t\t// Remove some element on the ceiling\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\t\t\t\tceilingHeight += getAbsoluteHeight(temp);\r\n\t\t\t\tvirtual.DOMCursor++;\r\n\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\telse vCursor.ceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tvCursor.ceiling = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\t\trefreshScrollBounding(0, bounding, list, parentNode);\r\n\r\n\t\tif(virtual.callback_ !== undefined){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript) return;\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tif(scroller.scrollTop < bounding.ceiling){\r\n\t\t\t\t// console.log('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tpreviousCeiling();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\telse if(scroller.scrollTop > bounding.floor){\r\n\t\t\t\t// console.log('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tnextFloor();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\tif(virtual.callback !== undefined && list.length !== 0){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null &&\r\n\t\t\t\t\tscroller.scrollTop + scroller.clientHeight === scroller.scrollHeight\r\n\t\t\t\t){\r\n\t\t\t\t\tvirtual.callback.hitFloor(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null && scroller.scrollTop === 0){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_ && callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\t\tonElementResize(parentNode, function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t});\r\n\t}\r\n\r\n\t// Recommended for a list that have similar element height\r\n\tfunction staticHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\r\n\t\t// Insert visible element to dom tree\r\n\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\tif(virtual.dom.firstElementChild === null)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', virtual.dom.firstElementChild);\r\n\t\t}\r\n\r\n\t\tvirtual.refreshVirtualSpacer = refreshVirtualSpacer;\r\n\r\n\t\tfunction refreshVirtualSpacer(cursor){\r\n\t\t\tif(cursor >= self.prepareCount){\r\n\t\t\t\tceiling.style.height = (cursor - self.prepareCount) * virtual.scrollHeight + 'px';\r\n\t\t\t\tfloor.style.height = (list.length - virtual.preparedLength - cursor) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tceiling.style.height = cursor * virtual.scrollHeight + 'px'; //'0px';\r\n\t\t\t\tvar count = (list.length - virtual.preparedLength);\r\n\t\t\t\tfloor.style.height = (count || 0) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\r\n\t\trefreshVirtualSpacer(0);\r\n\t\trefreshScrollBounding(self.prepareCount, bounding, list, parentNode);\r\n\t\tbounding.ceiling = -1;\r\n\r\n\t\tvirtual.offsetTo = function(index){\r\n\t\t\treturn index * virtual.scrollHeight + ceiling.offsetTop;\r\n\t\t}\r\n\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tif(virtual.callback_ !== undefined){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tvar fromCeiling = true;\r\n\t\tvar scrollFocused = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript || scroller.scrollTop >= bounding.ceiling && scroller.scrollTop <= bounding.floor){\r\n\t\t\t\t// Fix chrome scroll anchoring bugs when scrolling at corner\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tif(scroller.scrollTop === 0 || scroller.scrollTop === scroller.scrollHeight - scroller.clientHeight){\r\n\t\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar cursor = Math.floor(scroller.scrollTop / virtual.scrollHeight);\r\n\t\t\tif(cursor + virtual.preparedLength > list.length)\r\n\t\t\t\tcursor = list.length - virtual.preparedLength;\r\n\r\n\t\t\tif(fromCeiling){\r\n\t\t\t\tif(cursor < self.prepareCount*2)\r\n\t\t\t\t\tcursor -= self.prepareCount;\r\n\r\n\t\t\t\t// Fix chrome scroll anchoring bugs\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t}\r\n\t\t\t\tfromCeiling = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cursor < self.prepareCount){\r\n\t\t\t\tcursor = 0;\r\n\t\t\t\tfromCeiling = true;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tvar changes = cursor - virtual.DOMCursor;\r\n\t\t\tif(cursor + changes >= list.length)\r\n\t\t\t\tchanges = cursor + changes - list.length;\r\n\r\n\t\t\tif(changes === 0){ // This should be fixed to improve performance and future bugs\r\n\t\t\t\t//console.warn(\"No changes (The scroll bounding is not correct)\");\r\n\t\t\t\tupdating = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.DOMCursor = cursor;\r\n\r\n\t\t\t// console.log(cursor, changes, bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\t\t\tmoveElementCursor(changes, list);\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\t\t\trefreshScrollBounding(cursor, bounding, list, parentNode);\r\n\t\t\t// console.log('a', bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\r\n\t\t\tif(virtual.callback !== undefined && list.length !== 0){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null){\r\n\t\t\t\t\tvirtual.callback.hitFloor(cursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(cursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_ && callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\r\n\t\t// For preventing scroll jump if scrolling over than viewport\r\n\t\tif(scroller === parentNode && navigator.userAgent.indexOf('Chrom') !== -1){\r\n\t\t\t$.on(parentNode, 'mousedown', function(){\r\n\t\t\t\tscrollFocused = true;\r\n\t\t\t});\r\n\t\t\t$.on(parentNode, 'mouseup', function(){\r\n\t\t\t\tscrollFocused = false;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction refreshScrollBounding(cursor, bounding, list, parentNode){\r\n\t\tvar temp = Math.floor(self.prepareCount / 2); // half of element preparation\r\n\t\tif(cursor < self.prepareCount){\r\n\t\t\tbounding.ceiling = -1;\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount * 2 + 1];\r\n\r\n\t\t\tif(bounding.floor !== undefined)\r\n\t\t\t\tbounding.floor = bounding.floor.offsetTop;\r\n\t\t\telse bounding.floor = parentNode.lastElementChild.offsetTop + 1000;\r\n\r\n\t\t\tbounding.floor -= bounding.initial;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if(parentNode.children[temp + 1] !== undefined)\r\n\t\t\t\tbounding.ceiling = parentNode.children[temp + 1].offsetTop; // -2 element\r\n\r\n\t\tif(list.$virtual.preparedLength !== undefined && cursor >= list.length - list.$virtual.preparedLength)\r\n\t\t\tbounding.floor = list.$virtual.dCursor.floor.offsetTop + list.$virtual.scrollHeight*2;\r\n\t\telse{\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount + 3].offsetTop; // +2 element\r\n\r\n\t\t\tif(parentNode.hasAttribute('scroll-reduce-floor')){\r\n\t\t\t\tbounding.floor -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t\tbounding.ceiling -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbounding.ceiling -= bounding.initial;\r\n\t\tbounding.floor -= bounding.initial;// scrollHeight - clientHeight\r\n\t}\r\n\r\n\tfunction moveElementCursor(changes, list){\r\n\t\tvar vDOM = list.$virtual.dom;\r\n\t\tvar vCursor = list.$virtual.vCursor;\r\n\t\tvar dCursor = list.$virtual.dCursor;\r\n\r\n\t\tif(changes > 0){ // forward\r\n\t\t\tvar ref = 0;\r\n\r\n\t\t\t// Select from virtual ceiling cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tref = vDOM.firstElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.ceiling.nextElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the ceiling to vDom\r\n\t\t\tfor (var i = changes; i > 0; i--) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.ceiling === null){\r\n\t\t\t\t\tvCursor.ceiling = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('afterBegin', vCursor.ceiling);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t\t\tvCursor.ceiling = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\t\t}\r\n\t\telse if(changes < 0){ // backward\r\n\t\t\tvar ref = 0;\r\n\t\t\tchanges = -changes;\r\n\r\n\t\t\t// Select from virtual floor cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tref = vDOM.lastElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.floor.previousElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the floor to vDom\r\n\t\t\tfor (var i = 0; i < changes; i++) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvCursor.floor = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('beforeEnd', vCursor.floor);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t\t\tvCursor.floor = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scrollTo(index, list, prepareCount, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar reduce = 0;\r\n\r\n\t\tif(index >= list.length - virtual.preparedLength){\r\n\t\t\treduce -= prepareCount;\r\n\t\t\tindex = list.length - virtual.preparedLength;\r\n\t\t}\r\n\r\n\t\tif(index - virtual.DOMCursor === 0 || index >= list.length) return;\r\n\r\n\t\tscrollingByScript = true;\r\n\r\n\t\t// Already on DOM tree\r\n\t\tif((virtual.DOMCursor === 0 && index < prepareCount + prepareCount/2) ||\r\n\t\t\t(virtual.DOMCursor + prepareCount/2 > index\r\n\t\t\t&& virtual.DOMCursor + prepareCount < index))\r\n\t\t\tscroller.scrollTop = parentNode.children[index - virtual.DOMCursor + 1].offsetTop;\r\n\r\n\t\t// Move cursor\r\n\t\telse {\r\n\t\t\tvar temp = null;\r\n\t\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\t\tvar floor = virtual.dCursor.floor;\r\n\t\t\tvar vCursor = virtual.vCursor;\r\n\r\n\t\t\t// DOM tree to virtual DOM\r\n\t\t\tvar length = parentNode.childElementCount - 2;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\r\n\t\t\t\t\tif(i === length-1)\r\n\t\t\t\t\t\tvCursor.floor = temp;\r\n\t\t\t\t}\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(index >= prepareCount){\r\n\t\t\t\tif(index < list.length - virtual.preparedLength)\r\n\t\t\t\t\tindex -= prepareCount;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treduce = prepareCount - index;\r\n\t\t\t\tvirtual.DOMCursor = index = 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\r\n\t\t\t// Virtual DOM to DOM tree\r\n\t\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\t\ttemp = virtual.dom.children[index];\r\n\t\t\t\tif(temp === undefined) break;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t\tvirtual.DOMCursor = index;\r\n\r\n\t\t\tvCursor.floor = virtual.dom.children[index] || null;\r\n\t\t\tvCursor.ceiling = vCursor.floor ? vCursor.floor.previousElementSibling : null;\r\n\r\n\t\t\tif(list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\tlist.$virtual.refreshVirtualSpacer(index);\r\n\r\n\t\t\trefreshScrollBounding(index, virtual.bounding, list, parentNode);\r\n\r\n\t\t\ttemp = parentNode.children[prepareCount - reduce + 1];\r\n\t\r\n\t\t\tif(temp !== undefined)\r\n\t\t\t\tscroller.scrollTop = temp.offsetTop - scroller.offsetTop;\r\n\t\t}\r\n\r\n\t\tscrollingByScript = false;\r\n\t}\r\n\r\n\tfunction removeUserScrollFocus(parentNode){\r\n\t\tparentNode.style.overflow = 'hidden';\r\n\t\tsetTimeout(function(){\r\n\t\t\tparentNode.style.overflow = '';\r\n\t\t}, 50);\r\n\t}\r\n\r\n\tfunction getAbsoluteHeight(el){\r\n\t  var styles = window.getComputedStyle(el);\r\n\t  var margin = parseInt(styles['marginTop']) + parseInt(styles['marginBottom']);\r\n\t  return el.offsetHeight + margin || 0;\r\n\t}\r\n\r\n\tfunction obtainElements(list, parentNode){\r\n\t\tvar exist = [];\r\n\t\tvar temp = undefined;\r\n\r\n\t\tvar length = list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = parentNode.childElementCount - 2;\r\n\t\tfor (var i = 1; i <= length; i++) {\r\n\t\t\ttemp = parentNode.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\t\t\r\n\t\t// Get elements length\r\n\t\tvar elementLength = list.$virtual.dom.childElementCount + length;\r\n\r\n\t\tlength = elementLength - length - list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[list.$virtual.DOMCursor + i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\treturn exist;\r\n\t}\r\n\r\n\tfunction refresh(force, list, prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer){\r\n\t\tvar cursor = list.$virtual.DOMCursor;\r\n\t\tvar additionalScroll = 0;\r\n\r\n\t\t// Find nearest cursor for current view position\r\n\t\tif(force){\r\n\t\t\tvar i = -1;\r\n\t\t\tvar length = list.$virtual.preparedLength;\r\n\r\n\t\t\tdo{\r\n\t\t\t\ti++;\r\n\t\t\t} while(i < length && parentNode.children[i].offsetTop < scroller.scrollTop);\r\n\r\n\t\t\tcursor = cursor + i;\r\n\t\t\tif(cursor > 0) cursor -= 1;\r\n\r\n\t\t\tadditionalScroll = scroller.scrollTop - parentNode.children[i].offsetTop;\r\n\t\t}\r\n\r\n\t\t// Force move cursor if element in the DOM tree was overloaded\r\n\t\tif(force || parentNode.childElementCount - 2 > list.$virtual.preparedLength){\r\n\t\t\tlist.$virtual.DOMCursor = list.length;\r\n\t\t\tvar moveTo = cursor;\r\n\t\t\tif(!force)\r\n\t\t\t\tmoveTo = cursor <= prepareCount ? cursor : (cursor + prepareCount);\r\n\r\n\t\t\tscrollTo(moveTo,\r\n\t\t\t\tlist,\r\n\t\t\t\tprepareCount,\r\n\t\t\t\tparentNode,\r\n\t\t\t\tscroller\r\n\t\t\t);\r\n\r\n\t\t\tscroller.scrollTop += additionalScroll;\r\n\t\t}\r\n\r\n\t\tif(refreshVirtualSpacer)\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\r\n\t\tif(checkCursorPosition)\r\n\t\t\tcheckCursorPosition();\r\n\r\n\t\trefreshScrollBounding(cursor, list.$virtual.bounding, list, parentNode);\r\n\t}\r\n\r\n\tvar _onElementResize = [];\r\n\tvar _onElementResize_timer = -1;\r\n\tfunction onElementResize(parentNode, callback){\r\n\t\tif(_onElementResize_timer === -1){\r\n\t\t\t_onElementResize_timer = setInterval(function(){\r\n\t\t\t\tvar temp = null;\r\n\t\t\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\t\t\ttemp = _onElementResize[i];\r\n\r\n\t\t\t\t\t// Check resize\r\n\t\t\t\t\tif(temp.element.scrollHeight === temp.height\r\n\t\t\t\t\t\t|| temp.element.scrollWidth === temp.width)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t// Check if it's removed from DOM\r\n\t\t\t\t\tif(temp.element.parentElement === null){\r\n\t\t\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.callback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(_onElementResize.length === 0){\r\n\t\t\t\t\tclearInterval(_onElementResize_timer);\r\n\t\t\t\t\t_onElementResize_timer = -1;\r\n\t\t\t\t}\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\r\n\t\t_onElementResize.push({\r\n\t\t\telement:parentNode,\r\n\t\t\tcallback:callback,\r\n\t\t\theight:parentNode.scrollHeight,\r\n\t\t\twidth:parentNode.scrollWidth\r\n\t\t});\r\n\t}\r\n\r\n\tfunction offElementResize(parentNode){\r\n\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\tif(_onElementResize[i].element === parentNode)\r\n\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Interval will be cleared when the array is empty\r\n\t}\r\n\r\n\tfunction initStyles(){\r\n\t\tvar style = document.getElementById('sf-styles');\r\n\r\n\t\tif(!style){\r\n\t\t\tstyle = document.createElement('style');\r\n\t\t\tstyle.id = 'sf-styles';\r\n        \tdocument.head.appendChild(style);\r\n\t\t}\r\n\r\n\t\tstyle.sheet.insertRule(\r\n\t\t'.sf-virtual-list .virtual-spacer{'+\r\n            'visibility: hidden;'+\r\n            'position: relative;'+\r\n            'height: 1px;'+\r\n            'transform-origin: 0 0;'+\r\n            'width: 1px;'+\r\n            'margin: 0;'+\r\n            'padding: 0;'+\r\n            'background: none;'+\r\n            'border: none;'+\r\n            'box-shadow: none;'+\r\n         '}', style.sheet.cssRules.length);\r\n\t}\r\n};"]}