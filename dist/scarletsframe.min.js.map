{"version":3,"sources":["sf-a_init.js","sf-controller.js","sf-loader.js","sf-model.js","sf-router.js"],"names":["sf","arguments","constructor","Function","loader","onFinish","apply","setTimeout","router","init","$","fn","extend","animateCSS","animationName","callback","duration","self","this","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","undefined","style","css","addClass","one","removeClass","controller","active","for","name","func","model","root","elementModel","element","elem","fromElement","bindedList","attr","parents","bindedListIndex","prevAll","length","listenSFClick","e","target","script","eq","_modelScope","modelKeys","scopeMask","RegExp","replace","full","matched","split","method","method_","eval","shift","join","pop","console","error","run","DOMWasLoaded","on","each","attributes","value","loadedContent","totalContent","whenDOMLoaded","whenProgress","indexOf","push","onProgress","f","i","removeAttribute","list","splice","temp","document","getElementsByTagName","innerHTML","js","text","appendTo","everythingLoaded","setInterval","test","readyState","clearInterval","prototype","setAttribute","bindingEnabled","modelRef","keys","Object","clearElementData","current","dataParser","html","_model_","mask","scope","runEval","itemMask","actual","slice","uniqueDataParser","_content_","take","passVar","currentIndex","strDeclare","firstTime","key","JSON","stringify","VarPass","result","check","trim","call","args","a","values","regex","match","exec","message","bindArray","modelName","propertyName","oldArray","parse","editProperty","processElement","index","update","insertBefore","exist","find","item","create","outerHTML","insertAfter","currentRemoved","startRemove","remove","propertyProxy","subject","defineProperty","enumerable","configurable","Array","real","until","foundChanges","loopParser","content","returns","items","get","set","val","refreshBind","bindInput","whichVar","removeAttr","keyup","bindObject","targetNode","queuePreprocess","parsePreprocess","parent","after","next","before","data","append","addEventListener","bindRef","models","removeBinding","modelNames","attrs","id","ref","object","cache","isEmptyObject","created","dcBracket","which","Node","Date","now","attrName","callbackFunction","getOwnPropertyDescriptor","objValue","bindElement","brackets","bindable","childNodes","body","excludes","toUpperCase","currentNode","nodeName","nodeType","nodeValue","parentNode","loading","enabled","currentPage","initialized","lazy","beforeEvent","currentRouterURL","window","location","pathname","enable","status","DOMReference","afterEvent","onEvent","loaded","event","lazyViewPoint","url","href","origin","charAt","load","history","pushState","LazyRouter","RouterLoading","path","oldPath","abort","loadURL","_scarlets","success","skipLazyView","found","oldURL","newURL","replaceState"],"mappings":"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","file":"scarletsframe.min.js","sourcesContent":["if(typeof sf === 'undefined'){\r\n\tsf = function(){\r\n\t\tif(arguments[0].constructor === Function){\r\n\t\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nsetTimeout(function(){\r\n\tsf(sf.router.init);\r\n}, 10);\r\n\r\n// Add animate.css feature on jQuery\r\n$.fn.extend({\r\n  animateCSS: function(animationName, callback, duration) {\r\n\tvar self = this;\r\n\tvar animationEnd = {\r\n\t\tanimation: 'animationend',\r\n\t\tOAnimation: 'oAnimationEnd',\r\n\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t};\r\n\r\n\tfor (var t in animationEnd)\r\n\t\tif (self[0].style[t] !== undefined){\r\n\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\tif(duration)\r\n\t\tself.css('-webkit-animation-duration', duration+'s').css('animation-duration', duration+'s');\r\n\r\n\tself.addClass('animated ' + animationName).one(animationEnd, function(){\r\n\t\tsetTimeout(function(){\r\n\t\t\t$(self).removeClass('animated ' + animationName);\r\n\t\t}, 1);\r\n\r\n\t\tif(duration)\r\n\t\t\t$(self).css('-webkit-animation-duration', '').css('animation-duration', '');\r\n\r\n\t\tif (typeof callback === 'function') callback();\r\n\t});\r\n\r\n\treturn self;\r\n  }\r\n});","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tvar controller = {};\r\n\tself.active = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.model.root[name])\r\n\t\t\tsf.model.root[name] = {};\r\n\r\n\t\tcontroller[name] = func;\r\n\t}\r\n\r\n\tself.elementModel = function(element, func = false){\r\n\t\tvar elem = $(element);\r\n\t\tvar model = sf.controller.fromElement(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = elem.attr('[sf-bind-list]');\r\n\t\tif(!bindedList)\r\n\t\t\tbindedList = elem.parents('[sf-bind-list]').attr('sf-bind-list');\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(self.root[model], -1);\r\n\t\t\telse return self.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = elem.parents('[sf-bind-list]').prevAll('[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(self.root[model][bindedList], bindedListIndex);\r\n\t\telse return self.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.fromElement = function(element){\r\n\t\tvar elem = $(element);\r\n\t\tvar model = elem.parents(\"[sf-model]\").attr('sf-model');\r\n\t\tif(!model)\r\n\t\t\tmodel = elem.parents('[sf-controller]').attr('sf-controller');\r\n\t\treturn model;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = $(e.target);\r\n\t\tvar script = element.attr('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = element.parents('[sf-click]').eq(0);\r\n\t\t\tscript = element.attr('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = element.parents('[sf-model]').attr('sf-model');\r\n\r\n\t\tif(!sf.model.root[model])\r\n\t\t\tmodel = element.parents('[sf-controller]').attr('sf-controller');\r\n\r\n\t\tif(!sf.model.root[model])\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar _modelScope = sf.model.root[model];\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(_modelScope);\r\n\t\tvar scopeMask = RegExp('(?<=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )('+modelKeys+')(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)\\\\b', 'g');\r\n\r\n\t\tscript = script.replace(scopeMask, function(full, matched){\r\n\t\t\treturn '_modelScope.'+matched;\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script[0];\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(e) {\r\n\t\t\tmethod = false;\r\n\t\t}\r\n\r\n\t\tif(!method){\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot find '+method_+']\\n', e.target);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript.shift();\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0)\r\n\t\t\tscript = eval('['+script+']');\r\n\t\tif(!script)\r\n\t\t\tscript = [];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element, script);\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', e.target, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tself.run = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.run(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(controller[name]){\r\n\t\t\tif(!self.active[name]){\r\n\t\t\t\tif(controller[name])\r\n\t\t\t\t\tcontroller[name](sf.model.root[name], sf.model.root);\r\n\r\n\t\t\t\t// Listen to sf-click\r\n\t\t\t\t$('[sf-controller=\"'+name+'\"]').on('click', '[sf-click]', listenSFClick);\r\n\r\n\t\t\t\tself.active[name] = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], sf.model.root);\r\n\r\n\t\t// Mark as loaded\r\n\t\tif(controller[name])\r\n\t\t\tdelete controller[name];\r\n\t}\r\n\r\n\tself.init = function(){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(name);\r\n\t\t\t});\r\n\r\n\t\t$('[sf-controller]').each(function(){\r\n\t\t\tself.run(this.attributes['sf-controller'].value);\r\n\t\t});\r\n\t}\r\n}","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 1;\r\n\tself.DOMWasLoaded = false;\r\n\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t\tif(element) element.removeAttribute('onload');\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length!==0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tvar temp = '';\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\ttemp += '<link onload=\"sf.loader.f(this)\" rel=\"stylesheet\" href=\"'+list[i]+'\">';\r\n\t\t}\r\n\r\n\t\tdocument.getElementsByTagName('head')[0].innerHTML += temp;\r\n\t}\r\n\r\n\tself.js = function(list, target = 'head'){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length!==0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tvar text = '';\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\ttext += '<script onload=\"sf.loader.f(this)\" type=\"text/'+'javascript\" src=\"'+list[i]+'\"></'+'script>';\r\n\t\t}\r\n\r\n\t\t$(text).appendTo(target);\r\n\t}\r\n\r\n\tvar everythingLoaded = setInterval(function() {\r\n\tif (/loaded|complete/.test(document.readyState)) {\r\n\t\tclearInterval(everythingLoaded);\r\n\t\tself.DOMWasLoaded = true;\r\n\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\twhenDOMLoaded[i]();\r\n\t\t}\r\n\t\twhenProgress.splice(0);\r\n\t\twhenDOMLoaded.splice(0);\r\n\t}\r\n\t}, 100);\r\n};\r\nsf.prototype.constructor = sf.loader.onFinish;\r\n\r\n// Find images\r\n$(function(){\r\n\t$('img:not(onload)[src]').each(function(){\r\n\t\tsf.loader.totalContent++;\r\n\t\tthis.setAttribute('onload', \"sf.loader.f(this)\");\r\n\t});\r\n});","// Data save and HTML content binding\r\nsf.model = new function(){\r\n\tvar self = this;\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tif(!self.root[name])\r\n\t\t\tself.root[name] = {};\r\n\r\n\t\tfunc(self.root[name], self.root);\r\n\t}\r\n\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys.join('|');\r\n\t}\r\n\r\n\tvar clearElementData = function(current){\r\n\t\tcurrent.innerHTML = '';\r\n\t\tfor (var i = 0; i < current.attributes.length; i++) {\r\n\t\t\tvar name = current.attributes[i].name;\r\n\t\t\tif(name !== 'sf-bind-list')\r\n\t\t\t\tcurrent.removeAttribute(name);\r\n\t\t}\r\n\t\tcurrent.setAttribute('style', 'display:none');\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval = ''){\r\n\t\tvar _modelScope = sf.model.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp('(?<=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )('+self.modelKeys(_modelScope)+')(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp('(?<=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )'+mask+'\\\\.(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\treturn html.replace(/{{([^@].*?)}}/g, function(actual, temp){\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\r\n\t\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\t\ttemp = temp.split('(').join('').split(')').join('');\r\n\r\n\t\t\t// Evaluate\r\n\t\t\ttemp = eval(runEval + temp);\r\n\r\n\t\t\treturn temp;\r\n\t\t});\r\n\t}\r\n\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Disable function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('').split(')').join('');\r\n\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar VarPass = ['i', 'obj'];\r\n\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\tVarPass[i] += ':(typeof '+VarPass[i]+'!=\"undefined\"?'+VarPass[i]+':null)';\r\n\t\t}\r\n\t\tVarPass = '{'+VarPass.join(',')+'}';\r\n\t\thtml = html.replace(/{\\[(.*?)\\]}/gs, function(full, matched){\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn 'result += _content_.take('+VarPass+', '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = sf.model.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp('(?<=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )('+self.modelKeys(_modelScope)+')(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp('(?<=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )'+mask+'\\\\.(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)\\\\b', 'g');\r\n\r\n\t\treturn html.replace(/{{(@.*?)}}/gs, function(actual, temp){\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[1].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(matched){\r\n\t\t\t\treturn '_modelScope.'+matched[1].slice(1);\r\n\t\t\t});\r\n\r\n\t\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\t\ttemp = temp.split(':');\r\n\t\t\ttemp[0] = temp[0].split('(').join('').split(')').join('');\r\n\t\t\ttemp = temp.join(':');\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length != 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\t\t\t\r\n\t\t\t\t// If condition was meet\r\n\t\t\t\tif(eval(check[0])){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\tresult = check.join(':');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Function arguments should like: function@arg1, arg2\r\n\t\t\t// And it will converted to: model.function(arg1, arg2)\r\n\t\t\tcheck = temp.split('@call');\r\n\t\t\tif(check.length != 1){\r\n\t\t\t\tcheck = check[1].trim();\r\n\t\t\t\tvar call = check.split('@');\r\n\t\t\t\tvar args = [];\r\n\r\n\t\t\t\tif(call.length !== 1){\r\n\t\t\t\t\targs = call[1];\r\n\r\n\t\t\t\t\targs = args.split(' ').join('').split(',');\r\n\t\t\t\t\tfor (var a = 0; a < args.length; a++) {\r\n\t\t\t\t\t\targs[a] = eval(args[a]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcall = call[0];\r\n\t\t\t\tif(!sf.model.root[scope][call])\r\n\t\t\t\t\tthrow \"'\"+call+\"' was not available inside '\"+scope+\"' model\";\r\n\r\n\t\t\t\tvar values = sf.model.root[scope][call].apply(null, args);\r\n\t\t\t\tresult = values;\r\n\t\t\t}\r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length != 1){\r\n\t\t\t\tcheck = check[1].split('&lt;').join('<').split('&gt;').join('>').split('&amp;').join('&');\r\n\r\n\t\t\t\t// Allowed: for, if, while\r\n\t\t\t\tvar regex = /(for|if|while)#(.*?):/gs;\r\n\t\t\t\tvar match = regex.exec(check);\r\n\t\t\t\twhile (match !== null) {\r\n\t\t\t\t  check = check.replace(match[0], match[1] + '(' + match[2] + ')');\r\n\t\t\t\t  match = regex.exec(check);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar currentIndex = i;\r\n\t\t\t\ttry{\r\n\t\t\t\t\teval(check);\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tconsole.error(\"Error in @exec with message: \"+e.message);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\ti = currentIndex;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t});\r\n\t}\r\n\r\n\tvar bindArray = function(html, list, mask, modelName, propertyName){\r\n\t\tvar oldArray = JSON.parse(JSON.stringify(list));\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'refreshBind'];\r\n\t\tvar processElement = function(index, update = false, insertBefore = false){\r\n\t\t\tvar exist = $(\"[sf-model='\"+modelName+\"']\");\r\n\t\t\tif(exist.length === 0)\r\n\t\t\t\texist = $(\"[sf-controller='\"+modelName+\"']\");\r\n\r\n\t\t\tif(exist.length === 0) return;\r\n\t\t\texist = exist.find(\"[sf-bind-list='\"+propertyName+\"']\");\r\n\r\n\t\t\tvar callback = false;\r\n\t\t\tif(self.root[modelName]['on$'+propertyName])\r\n\t\t\t\tcallback = self.root[modelName]['on$'+propertyName];\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(!update){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\tif(exist.length <= 1)\r\n\t\t\t\t\t\t\treturn clearElementData(exist[index]);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\texist[index].remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(callback.remove){\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tsetTimeout(startRemove, 800);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse startRemove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Create or update\r\n\t\t\tvar item = self.root[modelName][propertyName][index];\r\n\r\n\t\t\tvar temp = dataParser(html, item, mask, modelName);\r\n\t\t\ttemp = uniqueDataParser(temp, item, mask, modelName);\r\n\t\t\ttemp = $(temp);\r\n\r\n\t\t\t// Create\r\n\t\t\tif(!exist[index]){\r\n\t\t\t\tif(callback.create)\r\n\t\t\t\t\tcallback.create(temp[0]);\r\n\r\n\t\t\t\ttemp.insertAfter(exist[exist.length - 1]);\r\n\t\t\t}\r\n\r\n\t\t\telse{\r\n\t\t\t\t// Create\r\n\t\t\t\tif(insertBefore){\r\n\t\t\t\t\tif(callback.create)\r\n\t\t\t\t\t\tcallback.create(temp[0]);\r\n\r\n\t\t\t\t\ttemp.insertBefore(exist[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(callback.update)\r\n\t\t\t\t\t\tcallback.update(temp[0]);\r\n\r\n\t\t\t\t\texist[index].outerHTML = temp[0].outerHTML;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = undefined;\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(this.length);\r\n\r\n\t\t\t\t\telse if(name === 'push')\r\n\t\t\t\t\t\tprocessElement(this.length - 1, true);\r\n\r\n\t\t\t\t\telse if(name === 'shift')\r\n\t\t\t\t\t\tprocessElement(0);\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments.length >= 3){\r\n\t\t\t\t\t\t\targuments[0] = false;\r\n\t\t\t\t\t\t\tname = 'refreshBind';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\t\tif(real < 0) real = this.length + real + 1;\r\n\r\n\t\t\t\t\t\t\tvar until = arguments[1];\r\n\t\t\t\t\t\t\tif(!until) until = this.length - real;\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < until; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(real);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift')\r\n\t\t\t\t\t\tprocessElement(0, true, true);\r\n\r\n\t\t\t\t\tif(name === 'refreshBind'){\r\n\t\t\t\t\t\tif(arguments[0] || arguments[0] === 0)\r\n\t\t\t\t\t\t\tprocessElement(arguments[0], true);\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tvar foundChanges = false;\r\n\t\t\t\t\t\t\tfor (var i = 0; i < this.length; i++) {\r\n\t\t\t\t\t\t\t\tif(JSON.stringify(oldArray[i]) !== JSON.stringify(this[i])){\r\n\t\t\t\t\t\t\t\t\tfoundChanges = true;\r\n\t\t\t\t\t\t\t\t\tprocessElement(i, true);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(foundChanges)\r\n\t\t\t\t\t\t\t\toldArray = JSON.parse(JSON.stringify(this));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tvar loopParser = function(name, content, script){\r\n\t\tvar returns = '';\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\r\n\t\tif(!sf.model.root[name])\r\n\t\t\treturn console.error(\"Can't parse element because model for '\"+name+\"' was not found\", $(content)[0]);\r\n\r\n\t\tvar items = self.root[name][method[1]];\r\n\t\tcontent = $(content).attr('sf-bind-list', method[1])[0].outerHTML;\r\n\t\tcontent = content.replace(/  +|\\t+/g, '');\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tfor(var i in items){\r\n\t\t\t\tvar item = items[i];\r\n\r\n\t\t\t\ttemp = dataParser(content, item, mask, name);\r\n\t\t\t\ttemp = uniqueDataParser(temp, item, mask, name);\r\n\t\t\t\treturns += temp;\r\n\t\t\t}\r\n\t\t\tObject.defineProperty(self.root[name], method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tfor (var i = 0; i < val.length; i++) {\r\n\t\t\t\t\t\tif(items[i]){\r\n\t\t\t\t\t\t\titems[i] = val[i];\r\n\t\t\t\t\t\t\titems.refreshBind(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse items.push(val[i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(items.length > val.length)\r\n\t\t\t\t\t\titems.splice(items.length - val.length);\r\n\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tbindArray(content, items, mask, name, method[1]);\r\n\t\t}\r\n\t\treturn returns;\r\n\t}\r\n\r\n\tvar bindInput = function(){\r\n\t\t$('input[sf-bound]').each(function(){\r\n\t\t\tvar element = $(this);\r\n\t\t\tvar model = element.parents('[sf-controller]').attr('sf-controller');\r\n\t\t\tif(!model) return;\r\n\r\n\t\t\tvar whichVar = element.attr('sf-bound');\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(typeof self.root[model][whichVar] === undefined){\r\n\t\t\t\tconsole.error('Cannot get reference for self.root[\"' + model + '\"][\"' + whichVar+'\"]');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement.attr('sf-bounded', whichVar);\r\n\t\t\telement.removeAttr('sf-bound');\r\n\r\n\t\t\t// Bound key up\r\n\t\t\telement.keyup(function(e){\r\n\t\t\t\tself.root[model][whichVar] = element.val();\r\n\t\t\t});\r\n\r\n\t\t\t// Bind value\r\n\t\t\telement.attr('value', '{{'+whichVar+'}}');\r\n\t\t\tbindObject(element, self.root[model], whichVar, 'attr');\r\n\t\t});\r\n\t}\r\n\r\n\tself.init = function(targetNode = false){\r\n\t\tsf.model.queuePreprocess(targetNode);\r\n\t\tsf.model.parsePreprocess(targetNode);\r\n\r\n\t\t$('[sf-repeat-this]').each(function(){\r\n\t\t\tvar self = $(this);\r\n\t\t\tvar parent = self.parent();\r\n\r\n\t\t\tvar after = self.next();\r\n\t\t\tif(!after.length || self[0] === after[0])\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = self.before();\r\n\t\t\tif(!before.length || self[0] === before[0])\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = self.attr('sf-repeat-this');\r\n\t\t\tself.removeAttr('sf-repeat-this');\r\n\t\t\tvar controller = self.parents('[sf-controller]').attr('sf-controller');\r\n\r\n\t\t\tvar content = this.outerHTML;\r\n\r\n\t\t\tvar data = loopParser(controller, content, script);\r\n\t\t\tif(data){\r\n\t\t\t\tself.remove();\r\n\t\t\t\t\r\n\t\t\t\tdata = $(data);\r\n\t\t\t\tif(after)\r\n\t\t\t\t\tdata.insertBefore(after);\r\n\t\t\t\telse if(before)\r\n\t\t\t\t\tdata.insertAfter(before);\r\n\t\t\t\telse\r\n\t\t\t\t\tparent.append(data);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tself.attr('sf-bind-list', script.split(' in ')[1]);\r\n\t\t\t\tclearElementData(this);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tdocument.addEventListener('DOMNodeRemoved', function(e){\r\n\t\tif(!bindingEnabled || !bindRef.length) return;\r\n\r\n\t\tvar element = e.target;\r\n\t\tvar models = [];\r\n\t\t$(element).find('[sf-controller]').each(function(){\r\n\t\t\tmodels.push(this.attributes['sf-controller'].value);\r\n\t\t});\r\n\r\n\t\tif(element.attributes && element.attributes['sf-controller'])\r\n\t\t\tmodels.push(element.attributes['sf-controller'].value);\r\n\r\n\t\t$(element).find('[sf-bind-id], [sf-bind-list], [sf-bounded], [sf-repeat-this]').each(function(){\r\n\t\t\tremoveBinding(this, models);\r\n\t\t});\r\n\r\n\t\tremoveBinding(element);\r\n\t});\r\n\r\n\tvar removeBinding = function(element, modelNames = false){\r\n\t\tif(!element.attributes) return;\r\n\r\n\t\tvar attrs = element.attributes;\r\n\t\tif(attrs['sf-bind-id']){\r\n\t\t\tvar id = attrs['sf-bind-id'].value;\r\n\r\n\t\t\tif(!bindRef[id]) return;\r\n\t\t\tvar ref = bindRef[id];\r\n\r\n\t\t\tfor (var i = 0; i < ref.propertyName.length; i++) {\r\n\t\t\t\tvar value = ref.object[ref.propertyName[i]];\r\n\t\t\t\tObject.defineProperty(ref.object, ref.propertyName[i], {\r\n\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\tvalue:value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tdelete bindRef[id];\r\n\r\n\t\t\t// Remove callback left\r\n\t\t\tvar cache = bindRef.cache\r\n\t\t\tfor(var i in cache){\r\n\t\t\t\tif(cache[i].callback && cache[i].callback[id])\r\n\t\t\t\t\tdelete cache[i].callback[id];\r\n\t\t\t\tif($.isEmptyObject(cache[i].callback))\r\n\t\t\t\t\tdelete cache[i];\r\n\t\t\t}\r\n\r\n\t\t\tif(cache[id]){\r\n\t\t\t\tdelete cache[id].attrs;\r\n\t\t\t\tdelete cache[id].innerHTML;\r\n\t\t\t\tdelete cache[id].modelName;\r\n\t\t\t\tdelete cache[id].model;\r\n\t\t\t\tdelete cache[id].created;\r\n\t\t\t\tdelete cache[id].element;\r\n\t\t\t}\r\n\r\n\t\t\tbindRef.length--;\r\n\t\t\tif(bindRef.length === 0)\r\n\t\t\t\tbindRef.index = 0;\r\n\t\t}\r\n\r\n\t\tif(!modelNames) return;\r\n\r\n\t\tvar propertyName = false;\r\n\t\tif(attrs['sf-bind-list'])\r\n\t\t\tpropertyName = attrs['sf-bind-list'].value;\r\n\r\n\t\tif(attrs['sf-repeat-this'])\r\n\t\t\tpropertyName = attrs['sf-repeat-this'].value.split(' in ')[1];\r\n\r\n\t\tif(attrs['sf-bounded'])\r\n\t\t\tpropertyName = attrs['sf-bounded'].value;\r\n\r\n\t\tfor (var i = 0; i < modelNames.length; i++) {\r\n\t\t\tvar modelRef = self.root[modelNames[i]];\r\n\t\t\tif(!modelRef[propertyName]) continue;\r\n\r\n\t\t\tvar value = modelRef[propertyName];\r\n\t\t\tObject.defineProperty(modelRef, propertyName, {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue:value\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/*{\r\n\t\tid:{\r\n\t\t\tobject,\r\n\t\t\t[propertyName]\r\n\t\t}\r\n\t}*/\r\n\t// For resetting object property it the element was removed from DOM\r\n\tvar bindRef = {length:0, index:0, cache:{}};\r\n\tself.bindRef = bindRef;\r\n\tvar dcBracket = /{{.*?}}/;\r\n\tvar bindObject = function(element, object, propertyName, which){\r\n\t\tif(!(element instanceof Node))\r\n\t\t\telement = element[0];\r\n\r\n\t\t// First initialization\r\n\t\tvar id = bindRef.index;\r\n\t\t$(element).attr('sf-bind-id', id);\r\n\r\n\t\tbindRef.index++;\r\n\t\tbindRef.length++;\r\n\t\tbindRef.cache[id] = {};\r\n\t\tvar cache = bindRef.cache[id];\r\n\r\n\t\tcache.attrs = {};\r\n\t\tcache.innerHTML = '';\r\n\t\tcache.modelName = sf.controller.fromElement(element);\r\n\t\tcache.model = self.root[cache.modelName];\r\n\t\tcache.created = Date.now();\r\n\r\n\t\tif(which === 'attr' || !which){\r\n\t\t\tfor(var i in element.attributes){\r\n\t\t\t\t// Check if it has a bracket\r\n\t\t\t\tif(!dcBracket.test(element.attributes[i].value))\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tvar attrName = element.attributes[i].name;\r\n\t\t\t\tcache.attrs[attrName] = element.attributes[i].value;\r\n\r\n\t\t\t\tif(attrName === 'value')\r\n\t\t\t\t\telement.removeAttribute(attrName);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(which === 'html' || !which)\r\n\t\t\tcache.innerHTML = element.innerHTML;\r\n\r\n\t\t// Get current object reference\r\n\t\tif(!bindRef[id]) bindRef[id] = {object:object, propertyName:[]};\r\n\t\tbindRef[id].propertyName.push(propertyName);\r\n\r\n\t\tcache.element = $(element);\r\n\t\tvar callbackFunction = function(){\r\n\t\t\tif(which === 'attr' || !which){\r\n\t\t\t\tfor(var name in cache.attrs){\r\n\t\t\t\t\tif(cache.attrs[name].indexOf(propertyName) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tvar temp = dataParser(cache.attrs[name], cache.model, false, cache.modelName);\r\n\t\t\t\t\tif(name === 'value')\r\n\t\t\t\t\t\tcache.element.val(temp);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tcache.element.attr(name, temp);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(which === 'html' || !which){\r\n\t\t\t\tvar temp = uniqueDataParser(cache.innerHTML, cache.model, false, cache.modelName);\r\n\t\t\t\ttemp = dataParser(temp, cache.model, false, cache.modelName);\r\n\t\t\t\tcache.element.html(temp);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif(Object.getOwnPropertyDescriptor(cache.model, propertyName)['set']){\r\n\t\t\tfor(var i in bindRef){\r\n\t\t\t\tif(cache.model === bindRef[i].object && bindRef[i].propertyName.indexOf(propertyName) !== -1){\r\n\t\t\t\t\tbindRef.cache[i].callback[id] = callbackFunction;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tcache.callback = {};\r\n\t\tcache.callback[id] = callbackFunction;\r\n\r\n\t\tvar objValue = object[propertyName]; // Object value\r\n\t\tObject.defineProperty(object, propertyName, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\t\t\tget:function(){\r\n\t\t\t\treturn objValue;\r\n\t\t\t},\r\n\t\t\tset:function(val){\r\n\t\t\t\tobjValue = val;\r\n\r\n\t\t\t\tfor(var i in cache.callback){\r\n\t\t\t\t\tcache.callback[i]();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn objValue;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tself.bindElement = function(element, which = false){\r\n\t\tvar modelName = sf.controller.fromElement(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar scopeMask = RegExp('(?<=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )('+self.modelKeys(model)+')(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)\\\\b', 'g');\r\n\r\n\t\tvar html = element.outerHTML;\r\n\t\tif(which === 'attr')\r\n\t\t\thtml = html.replace(element.innerHTML, '');\r\n\r\n\t\tvar brackets = html.match(/(?<={{).*?(?=}})/gs);\r\n\t\tfor (var i = 0; i < brackets.length; i++) {\r\n\t\t\twhile ((bindable = scopeMask.exec(brackets[i])) !== null) {\r\n\t\t\t\tbindObject(element, model, bindable[i], which);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.queuePreprocess = function(targetNode = false){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar excludes = ['html','head','style','link','meta','script','object','iframe'];\r\n\t\tfor (var i = 0; i < excludes.length; i++) {\r\n\t\t\texcludes[i] = excludes[i].toUpperCase();\r\n\t\t}\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = 0; i < childNodes.length; i++) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\t\t\tif(excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\t\t\t\tif(attrs['sf-bind-id'] || attrs['sf-repeat-this'] || attrs['sf-bind-list']) continue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tcurrentNode.setAttribute('sf-preprocess', 'attronly');\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tself.queuePreprocess(currentNode);\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tcurrentNode.parentNode.setAttribute('sf-preprocess', '');\r\n\r\n\t\t\t\t\t// Reset Siblings\r\n\t\t\t\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\t\t\t\ttemp[a].removeAttribute('sf-preprocess');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.parsePreprocess = function(targetNode = false){\r\n\t\t$(targetNode || document.body).find('[sf-preprocess]').each(function(){\r\n\t\t\tvar model = sf.controller.fromElement(this);\r\n\t\t\tthis.removeAttribute('sf-preprocess');\r\n\r\n\t\t\tif(!sf.model.root[model])\r\n\t\t\t\treturn console.error(\"Can't parse element because model for '\"+model+\"' was not found\", this);\r\n\r\n\t\t\tself.bindElement(this, $(this).attr('sf-bind'));\r\n\r\n\t\t\t// Avoid editing the outerHTML because it will remove the bind\r\n\t\t\tvar temp = uniqueDataParser(this.innerHTML, sf.model.root[model], false, model);\r\n\t\t\tthis.innerHTML = dataParser(temp, sf.model.root[model], false, model);\r\n\t\t\tfor (var i = 0; i < this.attributes.length; i++) {\r\n\t\t\t\tif(this.attributes[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\tthis.attributes[i].value = dataParser(this.attributes[i].value, sf.model.root[model], false, model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tbindInput();\r\n\t}\r\n}","sf.router = new function(){\r\n\tvar self = this;\r\n\tself.loading = false;\r\n\tself.enabled = false;\r\n\tself.currentPage = [];\r\n\tvar initialized = false;\r\n\tvar lazyRouting = false;\r\n\r\n\t// Should be called if not using lazy page load\r\n\tself.init = function(){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init();\r\n\t\t\t});\r\n\r\n\t\t// Reinit lazy router\r\n\t\tself.lazy();\r\n\r\n\t\t// Run 'before' event for new page view\r\n\t\t$('[sf-page]').each(function(){\r\n\t\t\tvar name = this.attributes['sf-page'].value;\r\n\t\t\tbeforeEvent(name);\r\n\t\t});\r\n\r\n\t\tinitialized = true;\r\n\t\tcurrentRouterURL = window.location.pathname;\r\n\t}\r\n\r\n\tself.enable = function(status = true){\r\n\t\tself.enabled = status;\r\n\r\n\t\tif(status)\r\n\t\t\tself.lazy();\r\n\t\telse{\r\n\t\t\t$('a[href][onclick]').each(function(){\r\n\t\t\t\tvar current = $(this);\r\n\t\t\t\tif(current.attr('onclick') === 'return sf.router.load(this)')\r\n\t\t\t\t\tcurrent.removeAttr('onclick');\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tvar before = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.before = function(name, func, index = false){\r\n\t\tif(!before[name])\r\n\t\t\tbefore[name] = [];\r\n\r\n\t\tif(index === false){\r\n\t\t\tif(before[name].indexOf(func) === -1)\r\n\t\t\t\tbefore[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tbefore[name][index] = func;\r\n\t}\r\n\r\n\tvar after = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.after = function(name, func, index = false){\r\n\t\tif(!after[name])\r\n\t\t\tafter[name] = [];\r\n\r\n\t\tif(index === false){\r\n\t\t\tif(after[name].indexOf(func) === -1)\r\n\t\t\t\tafter[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tafter[name][index] = func;\r\n\t}\r\n\r\n\t// Running 'before' new page going to be displayed\r\n\tvar beforeEvent = function(name, DOMReference = false){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.push(name);\r\n\r\n\t\t// Init all controller\r\n\t\tsf.controller.init();\r\n\r\n\t\t// Init template to model binding\r\n\t\tsf.model.init(DOMReference);\r\n\r\n\t\tif(before[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\r\n\t\t\tfor (var i = 0; i < before[name].length; i++) {\r\n\t\t\t\tbefore[name][i](sf.model.root);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Running 'after' old page going to be removed\r\n\tvar afterEvent = function(){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.splice(self.currentPage.indexOf(name), 1);\r\n\r\n\t\tif(self.currentPage !== '' && after[self.currentPage]){\r\n\t\t\tif(!sf.model.root[self.currentPage])\r\n\t\t\t\tsf.model.root[self.currentPage] = {};\r\n\r\n\t\t\tfor (var i = 0; i < after[self.currentPage].length; i++) {\r\n\t\t\t\tafter[self.currentPage][i](sf.model.root);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar onEvent = {\r\n\t\t'loading':[],\r\n\t\t'loaded':[],\r\n\t\t'error':[]\r\n\t};\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\tself.lazyViewPoint = {};\r\n\t/*\r\n\t\t{\r\n\t\t\toldURlPattern:{\r\n\t\t\t\tnewURLPattern:'.viewPoint'\r\n\t\t\t}\r\n\t\t}\r\n\t*/\r\n\tself.lazy = function(){\r\n\t\tif(!self.enabled) return;\r\n\r\n\t\t$('a[href]:not([onclick])').each(function(){\r\n\t\t\tvar url = this.href;\r\n\t\t\tif(url.indexOf('#') !== -1)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(url.indexOf(window.location.origin) !== 0 && url.charAt(0) !== '/')\r\n\t\t\t\treturn; //Not current domain origin\r\n\r\n\t\t\t$(this).attr('onclick', 'return sf.router.load(this)');\r\n\t\t});\r\n\t}\r\n\r\n\tself.load = function(elem){\r\n\t\tif(!history.pushState || $(elem).attr('sf-router') == 'ignore')\r\n\t\t\treturn true;\r\n\r\n\t\treturn !LazyRouter(elem.href.replace(window.location.origin, ''));\r\n\t}\r\n\r\n\tvar RouterLoading = false;\r\n\tvar currentRouterURL = '';\r\n\tvar LazyRouter = function(path){\r\n\t\tfor (var i = 0; i < onEvent['loading'].length; i++) {\r\n\t\t\tonEvent['loading'][i](path);\r\n\t\t}\r\n\t\tvar oldPath = window.location.pathname;\r\n\t\tinitialized = false;\r\n\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\t\tRouterLoading = loadURL(window.location.origin + path, {\r\n            data:{\r\n                _scarlets:'.dynamic.'\r\n            },\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\tif(initialized) return;\r\n\t\t\t\tlazyRouting = true;\r\n\r\n\t\t\t\t// Run 'loaded' event\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tvar skipLazyView = false;\r\n\t\t\t\tfor (var i = 0; i < onEvent['loaded'].length; i++) {\r\n\t\t\t\t\tskipLazyView = onEvent['loaded'][i](currentRouterURL, path, data) || skipLazyView;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DOMReference = false;\r\n\t\t\t\tif(!skipLazyView){\r\n\t\t\t\t\tvar found = false;\r\n\t\t\t\t\tfor(var oldURL in self.lazyViewPoint){\r\n\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\tfor(var newURL in self.lazyViewPoint[oldURL]){\r\n\t\t\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\t\t\t// Put new view\r\n\t\t\t\t\t\t\t\t\tDOMReference = $(self.lazyViewPoint[oldURL][newURL]);\r\n\r\n\t\t\t\t\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\t\t\t\t\tafterEvent(DOMReference.find('[sf-page]'));\r\n\t\t\t\t\t\t\t\t\tDOMReference.html(data);\r\n\t\t\t\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(found) break;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// When the view point was not found\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\t// Use fallback if exist\r\n\t\t\t\t\t\tif(sf.router.lazyViewPoint[\"@default\"]){\r\n\t\t\t\t\t\t\tDOMReference = $(sf.router.lazyViewPoint[\"@default\"]);\r\n\r\n\t\t\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\t\t\tafterEvent(DOMReference.find('[sf-page]'));\r\n\t\t\t\t\t\t\tDOMReference.html(data);\r\n\t\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\t\t\t\tonEvent['error'][i]('sf.router.lazyViewPoint[\"'+oldURL+'\"][\"'+newURL+'\"] was not found');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// If the init function was called\r\n\t\t\t\t\tif(initialized) return;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reinit lazy router\r\n\t\t\t\tself.lazy();\r\n\r\n\t\t\t\t// Run 'before' event for new page view\r\n\t\t\t\tDOMReference.find('[sf-controller], [sf-page]').each(function(){\r\n\t\t\t\t\tif(this.attributes['sf-controller'])\r\n\t\t\t\t\t\tsf.controller.run(this.attributes['sf-controller'].value);\r\n\r\n\t\t\t\t\tif(this.attributes['sf-page'])\r\n\t\t\t\t\t\tbeforeEvent(this.attributes['sf-page'].value, DOMReference[0]);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tlazyRouting = false;\r\n\r\n\t\t\t\tcurrentRouterURL = path;\r\n\t\t\t},\r\n\t\t\terror:function(e){\r\n\t\t\t\twindow.history.replaceState(null, \"\", oldPath);\r\n\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\tonEvent['error'][i](e.message);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\twindow.history.pushState(null, \"\", path);\r\n\t\treturn true;\r\n\t}\r\n};"]}