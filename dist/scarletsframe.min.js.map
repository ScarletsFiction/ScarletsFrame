{"version":3,"sources":["sf-a_init.js","sf-controller.js","sf-loader.js","sf-model.js","sf-router.js"],"names":["sf","_sf","apply","this","arguments","toString","constructor","Function","loader","onFinish","regex","avoidQuotes","strictVar","$","fn","jQuery","Dom7","extend","obj","func","animateCSS","animationName","callback","duration","self","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","undefined","style","css","addClass","one","setTimeout","removeClass","controller","pending","active","for","name","modelScope","element","elem","model","modelName","bindedList","attr","parents","root","bindedListIndex","prevAll","length","attributes","value","run","listenSFClick","e","target","script","eq","_modelScope","modelKeys","scopeMask","RegExp","replace","full","matched","split","method","method_","eval","shift","join","pop","console","error","root_","scope","DOMWasLoaded","init","parent","document","body","each","once","on","loadedContent","totalContent","whenDOMLoaded","whenProgress","indexOf","push","onProgress","f","i","removeAttribute","list","splice","temp","getElementsByTagName","innerHTML","js","ajax","url","dataType","cache","complete","everythingLoaded","setInterval","test","readyState","clearInterval","router","prototype","setAttribute","bindingEnabled","processingElement","bracketMatch","chackValidFunctionCall","allowedFunction","localEval","script_","_model_","_content_","preventExecution","check","exec","trim","_result_","log","outerHTML","_evaled_","index","tagName","modelRef","keys","Object","clearElementData","current","cleanData","dataParser","html","mask","runEval","variableList","itemMask","actual","slice","charCodeAt","uniqueDataParser","take","passVar","currentIndex","strDeclare","firstTime","key","JSON","stringify","VarPass_","VarPass","s1","obtained","forEach","val","bindArray","propertyName","targetNode","oldArray","editProperty","processElement","update","insertBefore","insertAfter","exist","getAttribute","item","all","first","prev","prepend","remove","create","currentRemoved","startRemove","propertyProxy","subject","defineProperty","enumerable","configurable","lastLength","Array","real","limit","foundChanges","compareObject","obj1","obj2","loopParser","content","returns","items","get","set","softRefresh","bindInput","whichVar","removeAttr","keyup","bindObject","alreadyInitialized","DOMNodeRemoved","removeBinding","Node","parsePreprocess","queuePreprocess","after","next","before","data","append","MutationObserver","observe","records","a","removedNodes","nodeName","childList","subtree","addEventListener","modelNames","attrs","id","bindRef","ref","object","writable","isEmptyObject","created","dcBracket","which","Date","now","attrName","callbackFunction","getOwnPropertyDescriptor","objValue","bindElement","brackets","s2","childNodes","excludes","toUpperCase","currentNode","nodeType","concat","nodeValue","parentNode","nodes","loading","enabled","pauseRenderOnTransition","currentPage","initialized","currentRouterURL","lazy","beforeEvent","window","location","pathname","enable","status","event","routingError","routingBack","goto","onEvent","loaded","special","lazyViewPoint","href","origin","charAt","load","history","pushState","RouterLoading","path","abort","assign","_scarlets","success","parse","DOMReference","foundAction","afterEvent","title","found","oldURL","newURL","routerLoaded","xhr","aborted","back"],"mappings":";;;;;;;;AAYA,GAZAA,GAAA,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAAC,KAAAC,WAAA,OAAAJ,EAAAK,SAAA,WAAA,OAAAJ,EAAAI,YAAAL,EAAA,CAAA,WACA,GAAAI,UAAA,GAAAE,cAAAC,SACA,OAAAP,GAAAQ,OAAAC,SAAAP,MAAA,KAAAE,aAIAJ,GAAAU,MAAA,CAEAC,YAAA,kDACAC,UAAA,iCAGA,oBAAAC,IAAAA,EAAAC,GACA,GAAA,oBAAAC,OACAF,EAAAE,WACA,CAAA,GAAA,oBAAAC,KAGA,KAAA,0CAFAH,EAAAG,KAKAH,EAAAC,GAAAG,SACAJ,EAAAC,GAAAG,OAAA,SAAAC,GACA,IAAA,IAAAC,KAAAD,EACAL,EAAAC,GAAAK,GAAAD,EAAAC,KAMAN,EAAAC,GAAAG,OAAA,CACAG,WAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAArB,KACAsB,EAAA,CACAC,UAAA,eACAC,WAAA,gBACAC,aAAA,kBACAC,gBAAA,sBAGA,IAAA,IAAAC,KAAAL,EACA,QAAAM,IAAAP,EAAA,GAAAQ,MAAAF,GAAA,CACAL,EAAAA,EAAAK,GACA,MAiBA,OAdAP,GACAC,EAAAS,IAAA,6BAAAV,EAAA,KAAAU,IAAA,qBAAAV,EAAA,KAEAC,EAAAU,SAAA,YAAAb,GAAAc,IAAAV,EAAA,WACAW,WAAA,WACAvB,EAAAW,GAAAa,YAAA,YAAAhB,IACA,GAEAE,GACAV,EAAAW,GAAAS,IAAA,6BAAA,IAAAA,IAAA,qBAAA,IAEA,mBAAAX,GAAAA,MAGAE,KC3DAxB,GAAAsC,WAAA,IAAA,WACA,IAAAd,KAAArB,KACAqB,KAAAe,QAAA,GACAf,KAAAgB,OAAA,GAEAhB,KAAAiB,IAAA,SAAAC,EAAAvB,GACAK,KAAAe,QAAAG,GAAAvB,GAGAK,KAAAmB,WAAA,SAAAC,EAAAzB,GACA,IAAA0B,EAAAhC,EAAA+B,GACAE,EAAA9C,GAAAsC,WAAAS,UAAAH,GAEA,IAAAE,EACA,KAAA,oCAEA,IAAAE,EAAAH,EAAAI,KAAA,kBAIA,GAHAD,IACAA,EAAAH,EAAAK,QAAA,kBAAAD,KAAA,kBAEAD,EACA,OAAA7B,EAAAA,EAAAnB,GAAA8C,MAAAK,KAAAL,IAAA,GACA9C,GAAA8C,MAAAK,KAAAL,GAIA,IAAAM,EAAA,EAIA,OAHAJ,IACAI,EAAAP,EAAAK,QAAA,kBAAAG,QAAA,kBAAAC,QAEAnC,EAAAA,EAAAnB,GAAA8C,MAAAK,KAAAL,GAAAE,GAAAI,GACApD,GAAA8C,MAAAK,KAAAL,GAAAE,GAAAI,IAGA5B,KAAAuB,UAAA,SAAAH,GACA,IAAAF,OAAAX,EAUA,YAHAA,KALAW,EADAE,EAAAW,WAAA,iBACAX,EAAAW,WAAA,iBAAAC,MAEA3C,EAAA+B,GAAAM,QAAA,mBAAAD,KAAA,mBAGAzB,KAAAgB,OAAAE,IACAlB,KAAAiC,IAAAf,GAEAA,GAGA,IAAAgB,cAAA,SAAAA,cAAAC,GACA,IAAAf,QAAA/B,EAAA8C,EAAAC,QACAC,OAAAjB,QAAAK,KAAA,YAEAY,SACAjB,QAAAA,QAAAM,QAAA,cAAAY,GAAA,GACAD,OAAAjB,QAAAK,KAAA,aAGA,IAAAH,MAAAF,QAAAM,QAAA,mBAAAD,KAAA,iBAEA,IAAAjD,GAAA8C,MAAAK,KAAAL,OACA,KAAA,2BAAAA,MAAA,iCAEA,IAAAiB,YAAA/D,GAAA8C,MAAAK,KAAAL,OAEAkB,UAAAhE,GAAA8C,MAAAkB,UAAAD,aACAE,UAAAC,OAAAlE,GAAAU,MAAAE,UAAA,IAAAoD,UAAA,IAAAhE,GAAAU,MAAAC,YAAA,MAAA,KAEAkD,OAAAA,OAAAM,QAAAF,UAAA,SAAAG,EAAAC,GACA,MAAA,eAAAA,IAGAR,OAAAA,OAAAS,MAAA,KAEA,IAAAC,OAAAV,OAAA,GACAW,QAAAD,OAGA,IACAA,OAAAE,KAAAF,QACA,MAAAZ,GACAY,QAAA,EAGA,GAAAA,OAAA,CAMAV,OAAAa,QACAb,OAAAA,OAAAc,KAAA,KACAd,OAAAA,OAAAS,MAAA,KACAT,OAAAe,MACAf,OAAAA,OAAAc,KAAA,KAGA,IAAAd,OAAAP,SACAO,OAAAY,KAAA,IAAAZ,OAAA,MACAA,SACAA,OAAA,IAEA,IACAU,OAAArE,MAAA0C,QAAA,GAAAiB,QACA,MAAAF,GACAkB,QAAAC,MAAA,gCAAAhC,MAAA,KAAAa,EAAAC,OAAA,KAAAD,SApBAkB,QAAAC,MAAA,gCAAAhC,MAAA,iBAAA0B,QAAA,MAAAb,EAAAC,SAwBAmB,MAAA,SAAAC,GAOA,OANAhF,GAAA8C,MAAAK,KAAA6B,KACAhF,GAAA8C,MAAAK,KAAA6B,GAAA,IAEAhF,GAAA8C,MAAAK,KAAA6B,IACAhF,GAAAsC,WAAAmB,IAAAuB,GAEAhF,GAAA8C,MAAAK,KAAA6B,IAGAxD,KAAAiC,IAAA,SAAAf,EAAAvB,GACA,IAAAnB,GAAAQ,OAAAyE,aACA,OAAAjF,GAAA,WACAwB,KAAAiC,IAAAf,EAAAvB,KAGAK,KAAAe,QAAAG,KACA1C,GAAA8C,MAAAK,KAAAT,KACA1C,GAAA8C,MAAAK,KAAAT,GAAA,IAEAlB,KAAAe,QAAAG,GAAA1C,GAAA8C,MAAAK,KAAAT,GAAAqC,OACAvD,KAAAgB,OAAAE,IAAA,SACAlB,KAAAe,QAAAG,IAGAvB,GACAA,EAAAnB,GAAA8C,MAAAK,KAAAT,GAAAqC,QAGAvD,KAAA0D,KAAA,SAAAC,GACA,IAAAnF,GAAAQ,OAAAyE,aACA,OAAAjF,GAAA,WACAwB,KAAA0D,KAAAxC,QAGA7B,EAAA,kBAAAsE,EAAAtE,EAAAsE,GAAA,GAAAC,SAAAC,MAAAC,KAAA,WACA9D,KAAAiC,IAAAtD,KAAAoD,WAAA,iBAAAC,UAKA3C,EAAAuE,UAAAG,KAAA,mBAAA,WACA1E,EAAAuE,SAAAC,MAAAG,GAAA,QAAA,aAAA9B,kBCvJA1D,GAAAQ,OAAA,IAAA,WACA,IAAAgB,EAAArB,KACAqB,EAAAiE,cAAA,EACAjE,EAAAkE,aAAA,EACAlE,EAAAyD,cAAA,EAEA,IAAAU,EAAA,GACAC,EAAA,GAGApE,EAAAf,SAAA,SAAAU,GACA,GAAAK,EAAAyD,aAAA,OAAA9D,KACA,IAAAwE,EAAAE,QAAA1E,IACAwE,EAAAG,KAAA3E,IAEAK,EAAAuE,WAAA,SAAA5E,GACA,GAAAK,EAAAyD,aAAA,OAAA9D,EAAAK,EAAAiE,cAAAjE,EAAAkE,eACA,IAAAE,EAAAC,QAAA1E,IACAyE,EAAAE,KAAA3E,IAGAK,EAAAwE,EAAA,SAAApD,GACApB,EAAAiE,gBACA,IAAA,IAAAQ,EAAA,EAAAA,EAAAL,EAAAtC,OAAA2C,IACAL,EAAAK,GAAAzE,EAAAiE,cAAAjE,EAAAkE,cAEA9C,GAAAA,EAAAsD,iBAAAtD,EAAAsD,gBAAA,WAGA1E,EAAAS,IAAA,SAAAkE,GACA,GAAA3E,EAAAyD,aAAA,CAEA,IAAA,IAAAgB,EAAAE,EAAA7C,OAAA,EAAA2C,GAAA,EAAAA,IACA,IAAApF,EAAA,eAAAsF,EAAAF,GAAA,MAAA3C,QACA6C,EAAAC,OAAAH,EAAA,GAEA,GAAA,IAAAE,EAAA7C,OAAA,OAEA9B,EAAAkE,aAAAlE,EAAAkE,aAAAS,EAAA7C,OACA,IAAA+C,EAAA,GACA,IAAAJ,EAAA,EAAAA,EAAAE,EAAA7C,OAAA2C,IACAI,GAAA,4DAAAF,EAAAF,GAAA,KAGApF,EAAA,WACAuE,SAAAkB,qBAAA,QAAA,GAAAC,WAAAF,KAIA7E,EAAAgF,GAAA,SAAAL,GACA,GAAA3E,EAAAyD,aAAA,CAEA,IAAA,IAAAgB,EAAAE,EAAA7C,OAAA,EAAA2C,GAAA,EAAAA,IACA,IAAApF,EAAA,gBAAAsF,EAAAF,GAAA,MAAA3C,QACA6C,EAAAC,OAAAH,EAAA,GAEA,GAAA,IAAAE,EAAA7C,OAAA,OAEA9B,EAAAkE,aAAAlE,EAAAkE,aAAAS,EAAA7C,OACA,IAAA2C,EAAA,EAAAA,EAAAE,EAAA7C,OAAA2C,IACApF,EAAA4F,KAAA,CACAC,IAAAP,EAAAF,GACAU,SAAA,SACAC,OAAA,EACAC,SAAA7G,GAAAQ,OAAAwF,KAKA5D,WAAA,WACA,IAAAZ,EAAAkE,eACAlE,EAAAiE,cAAAjE,EAAAkE,aAAA,IACA,KACA,IAAAoB,EAAAC,YAAA,WACA,GAAA,kBAAAC,KAAA5B,SAAA6B,YAAA,CACA,GAAAzF,EAAAiE,cAAAjE,EAAAkE,cAAA,IAAAlE,EAAAiE,cACA,OAEAyB,cAAAJ,GACAtF,EAAAyD,cAAA,EACA,IAAA,IAAAgB,EAAA,EAAAA,EAAAN,EAAArC,OAAA2C,IACA,IACAN,EAAAM,KACA,MAAAtC,GACAkB,QAAAC,MAAAnB,GAGAiC,EAAAQ,OAAA,GACAT,EAAAS,OAAA,GAGApG,GAAAsC,WAAA4C,OACAlF,GAAA8C,MAAAoC,OACAlF,GAAAmH,OAAAjC,SAEA,MAEAlF,GAAAoH,UAAA9G,YAAAN,GAAAQ,OAAAC,SAGAI,EAAA,WACAA,EAAA,wBAAAyE,KAAA,WACAtF,GAAAQ,OAAAkF,eACAvF,KAAAkH,aAAA,SAAA,yBCtGArH,GAAA8C,MAAA,SAAAkC,GAOA,OANAhF,GAAA8C,MAAAK,KAAA6B,KACAhF,GAAA8C,MAAAK,KAAA6B,GAAA,IAEAhF,GAAAsC,WAAAC,QAAAyC,IACAhF,GAAAsC,WAAAmB,IAAAuB,GAEAhF,GAAA8C,MAAAK,KAAA6B,IAGA,WACA,IAAAxD,KAAAxB,GAAA8C,MACAwE,gBAAA,EACA9F,KAAA2B,KAAA,GAEA,IAAAoE,kBAAA,KAEAC,aAAAtD,OAAA,wBAAAlE,GAAAU,MAAAC,YAAA,KACA8G,uBAAA,qBACAC,gBAAA,CAAA,IAAA,MAAA,KAAA,QAAA,iBAAA,eACAC,UAAA,SAAAA,UAAAC,QAAAC,QAAA9D,YAAA+D,WACA,IAAAjE,OAAA+D,QACAA,QAAAA,QAAAtD,MAAA,OAAAK,KAAA,SAAAL,MAAA,OAAAK,KAAA,SACAiD,QAAAA,QAAAtD,MAAA,gBAAAK,KAAA,IACAiD,QAAAA,QAAAtD,MAAA,YAAAK,KAAA,IAKA,IAFA,IAAAoD,kBAAA,EACAC,MAAA,KACA,QAAAA,MAAAR,aAAAS,KAAAL,WAGA,GAFAI,MAAA,GAAAA,MAAA,GAAAE,QAEA,IAAAR,gBAAA7B,QAAAmC,MAAA,KACA,gBAAAA,MAAA,GAAA1D,MAAA,KAAA,IACAmD,uBAAAT,KAAAgB,MAAA,GAAAA,MAAA,GAAA1E,OAAA,IACA,CACAyE,iBAAAC,MAAA,GACA,MAIA,IAAAG,SAAA,GAEA,GADAP,QAAAA,QAAAtD,MAAA,SAAAK,KAAA,OAAAL,MAAA,SAAAK,KAAA,OACAoD,iBAIA,OAHAlD,QAAAC,MAAA,8CAAAiD,iBAAA,KACAlD,QAAAuD,IAAAvH,EAAA0G,kBAAAc,WAAA,IACAxD,QAAAuD,IAAAR,SACA,GAEA,IACA,IAAAU,SAAA7D,KAAAmD,SACA,MAAAjE,GAIA,OAHAkB,QAAAC,MAAAnB,GACAkB,QAAAuD,IAAAR,SACA/C,QAAAuD,IAAAvH,EAAA0G,kBAAAc,WAAA,IACA,GAGA,MAAA,KAAAF,SAAAA,SACAG,UAGA9G,KAAA+G,MAAA,SAAA3F,GACA,OAAA/B,EAAA+B,GAAAS,QAAAT,EAAA4F,SAAAlF,QAGA9B,KAAAiB,IAAA,SAAAC,EAAAvB,GACA,IAAAnB,GAAAQ,OAAAyE,aACA,OAAAjF,GAAA,WACAwB,KAAAiB,IAAAC,EAAAvB,KAGAA,EAAAK,KAAAkB,GAAAlB,OAGAA,KAAAwC,UAAA,SAAAyE,GAEA,IADA,IAAAC,EAAAC,OAAAD,KAAAD,GACAxC,EAAAyC,EAAApF,OAAA,EAAA2C,GAAA,EAAAA,KACA,IAAAyC,EAAAzC,GAAAJ,QAAA,MACA6C,EAAAtC,OAAAH,EAAA,GAEA,OAAAyC,EAAA/D,KAAA,MAGA,IAAAiE,iBAAA,SAAAC,GAEAhI,GAAAA,EAAAiI,WACAjI,EAAAiI,UAAAD,EAAAvC,qBAAA,MAEAuC,EAAAtC,UAAA,GACA,IAAA,IAAAN,EAAA,EAAAA,EAAA4C,EAAAtF,WAAAD,OAAA2C,IAAA,CACA,IAAAvD,EAAAmG,EAAAtF,WAAA0C,GAAAvD,KACA,iBAAAA,GACAmG,EAAA3C,gBAAAxD,GAEAmG,EAAAxB,aAAA,QAAA,iBAKA0B,WAAA,SAAAC,EAAAnB,EAAAoB,EAAAjE,EAAAkE,GACA,IAAAnF,EAAAvC,KAAA2B,KAAA6B,GACAkE,IAAAA,EAAA,IAIA,IADA,IAAAC,EAAA3H,KAAAwC,UAAAD,GACAkC,EAAAkD,EAAA7F,OAAA,EAAA2C,GAAA,EAAAA,IACAlC,EAAAoF,EAAAlD,cAAA1F,UACA4I,EAAA/C,OAAAH,EAAA,GAIA,IAAAhC,EAAAC,OAAAlE,GAAAU,MAAAE,UAAA,IAAAuI,EAAA,IAAAnJ,GAAAU,MAAAC,YAAA,MAAA,KAEA,GAAAsI,EACA,IAAAG,EAAAlF,OAAAlE,GAAAU,MAAAE,UAAAqI,EAAA,MAAAjJ,GAAAU,MAAAC,YAAA,MAAA,KAIA,OAFA2G,gBAAA,EAEA0B,EAAA7E,QAAA,sBAAA,SAAAkF,EAAAhD,GAoBA,OAlBAA,EAAAA,EAAA/B,MAAA,OAAAK,KAAA,SAAAL,MAAA,OAAAK,KAAA,SAGAsE,IACA5C,EAAAA,EAAAlC,QAAAiF,EAAA,SAAA/E,GACA,MAAA,WAAAA,EAAA,GAAAiF,MAAA,MAQAjD,GAJAA,EAAAA,EAAAlC,QAAAF,EAAA,SAAAG,EAAAC,GACA,MAAA,eAAAA,KAGAC,MAAA,SAAAK,KAAA,OAAAL,MAAA,SAAAK,KAAA,QAGA0B,EAAA,GAAAsB,UAAAzH,MAAAsB,KAAA2B,KAAA,CAAA+F,EAAA7C,EAAAwB,EAAA9D,KAEAI,QAAA,yBAAA,SAAA8B,GACA,MAAA,KAAAA,EAAAsD,WAAA,GAAA,SAKAC,iBAAA,SAAAR,EAAAnB,EAAAoB,EAAAjE,GAEA,IAAA8C,EAAA,CACAxE,OAAA,EACAmG,KAAA,SAAAC,EAAAC,GACA,IAAAD,EACA,OAAAX,WAAA5I,KAAAwJ,GAAA9B,EAAAoB,EAAAjE,GAEA,IAAA4E,EAAA,oBACAC,GAAA,EAEA,IAAA,IAAAC,KAAAJ,EACA,iBAAAA,EAAAI,GACAJ,EAAAI,GAAA,IAAAJ,EAAAI,GAAAxF,MAAA,KAAAK,KAAA,OAAA,IACA,iBAAA+E,EAAAI,KACAJ,EAAAI,GAAAC,KAAAC,UAAAN,EAAAI,KAEAD,IACAD,GAAA,KAEAA,GAAAE,EAAA,MAAAJ,EAAAI,GACAD,GAAA,EAMA,OAFAD,EAAAA,EAAAtF,MAAA,KAAAK,KAAA,IAAAL,MAAA,KAAAK,KAAA,IAEAoE,WAAA5I,KAAAwJ,GAAA9B,EAAAoB,EAAAjE,EAAA4E,EAAA,OAIAZ,EAAAA,EAAA7E,QAAA,oBAAA,SAAAC,EAAAC,GAGA,OAFAyD,EAAAA,EAAAxE,QAAAe,EACAyD,EAAAxE,SACA,0CAAAwE,EAAAxE,OAAA,GAAA,OAGA,IAAAS,EAAAvC,KAAA2B,KAAA6B,GAGAf,EAAAC,OAAAlE,GAAAU,MAAAE,UAAA,IAAAY,KAAAwC,UAAAD,GAAA,IAAA/D,GAAAU,MAAAC,YAAA,MAAA,KAEA,GAAAsI,EACA,IAAAG,EAAAlF,OAAAlE,GAAAU,MAAAE,UAAAqI,EAAA,MAAAjJ,GAAAU,MAAAC,YAAA,MAAA,KAEA,OAAAqI,EAAA7E,QAAA,mBAAA,SAAAkF,EAAAhD,GAEAA,EAAAA,EAAA/B,MAAA,OAAAK,KAAA,SAAAL,MAAA,OAAAK,KAAA,SAGAsE,IACA5C,EAAAA,EAAAlC,QAAAiF,EAAA,SAAA/E,GACA,MAAA,WAAAA,EAAA,GAAAiF,MAAA,MASA,IACAtB,GAAA,EAGA,GAAA,IADAA,GALA3B,GAHAA,EAAAA,EAAAlC,QAAAF,EAAA,SAAAG,EAAAC,GACA,MAAA,eAAAA,KAEAC,MAAA,SAAAK,KAAA,OAAAL,MAAA,SAAAK,KAAA,QAKAL,MAAA,SACAhB,SACA0E,EAAAA,EAAA,GAAA1D,MAAA,KAGAqD,UAAAzH,MAAAsB,KAAA2B,KAAA,CAAA6E,EAAA,GAAAH,EAAA9D,EAAA+D,KAEA,OADAE,EAAAtD,QACAsD,EAAArD,KAAA,KAQA,IAHA,IAAAsF,EAAA,wCACAC,EAAA,GACAC,EAAA,KACA,QAAAA,EAAAF,EAAAhC,KAAA5B,KACA6D,EAAApE,KAAAqE,EAAA,IAEA,GAAAD,EAAA5G,OAAA,CAEA,IADA,IAAA8G,EAAA,GACAnE,EAAA,EAAAA,EAAAiE,EAAA5G,OAAA2C,IACAiE,EAAAjE,GAAA9B,QAAA,kBAAA,IAAAG,MAAA,KAAA+F,QAAA,SAAAC,GACAF,EAAAtE,KAAAwE,KAGAJ,EAAAE,EACA,IAAAnE,EAAA,EAAAA,EAAAiE,EAAA5G,OAAA2C,IACAiE,EAAAjE,IAAA,YAAAiE,EAAAjE,GAAA,iBAAAiE,EAAAjE,GAAA,cAEAiE,EAAA,IAAAA,EAAAvF,KAAA,KAAA,IACA0B,EAAAA,EAAA/B,MAAA,aAAAK,KAAAuF,GAQA,OAAA,IADAlC,GALA3B,EAAAA,EAAA/B,MAAA,aAAAK,KAAA,OAKAL,MAAA,UACAhB,QACA0E,EAAAA,EAAA,GAAA1D,MAAA,QAAAK,KAAA,KAAAL,MAAA,QAAAK,KAAA,KAAAL,MAAA,SAAAK,KAAA,KAEA0B,EAAAsB,UAAAzH,MAAAsB,KAAA2B,KAAA,CAAA6E,EAAAH,EAAA9D,EAAA+D,KAGA,MAIAyC,UAAA,SAAAvB,EAAA7C,EAAA8C,EAAAlG,EAAAyH,EAAAC,GA8LA,IA7LA,IAAAC,EAAAvE,EAAAmD,MAAA,GACAqB,EAAA,CAAA,MAAA,OAAA,SAAA,QAAA,UAAA,cAAA,eACAC,EAAA,SAAArC,EAAAsC,EAAAC,EAAAC,GACA,IAAAC,EAAAnK,EAAA,mBAAAkC,EAAA,KAAA0H,GACA,GAAA,IAAAO,EAAA1H,OAAA,CACA,GAAAmH,EAAAQ,aAAA,mBAAAlI,EAEA,OADAiI,EAAAP,EAIAO,EAAAnK,EAAA,kBAAA2J,EAAA,KAAAQ,GAEA,IAAA1J,GAAA,EAKA,GAJAE,KAAA2B,KAAAJ,GAAA,MAAAyH,KACAlJ,EAAAE,KAAA2B,KAAAJ,GAAA,MAAAyH,KAGA,IAAAjC,EAAA,CAGA,IAFA,IAAA2C,EAAA1J,KAAA2B,KAAAJ,GAAAyH,GACAW,EAAA,GACAlF,EAAA,EAAAA,EAAAiF,EAAA5H,OAAA2C,IAAA,CACA,IAAAI,EAAAmD,iBAAAR,EAAAkC,EAAAjF,GAAAgD,EAAAlG,GACAoI,GAAApC,WAAA1C,EAAA6E,EAAAjF,GAAAgD,EAAAlG,GAIA,IAAAqI,EAAAJ,EAAAlH,GAAA,GAAAuH,OAOA,OANAD,EAAA,KAAAJ,EAAA,GACAA,EAAA7F,SAAAmG,QAAAH,GAEAtK,EAAAsK,GAAAJ,YAAAK,QACAJ,EAAAO,SAMA,GAAAV,EAAA,CA0BAK,EAAA1J,KAAA2B,KAAAJ,GAAAyH,GAAAjC,GAEAlC,EAAAmD,iBAAAR,EAAAkC,EAAAjC,EAAAlG,GACAsD,EAAA0C,WAAA1C,EAAA6E,EAAAjC,EAAAlG,GACAsD,EAAAxF,EAAAwF,IAGA2E,EAAAzC,IAAAwC,GACAzJ,EAAAkK,QACAlK,EAAAkK,OAAAnF,EAAA,IAEAA,EAAA0E,YAAAC,EAAA,IAAAzC,EAAAA,EAAA,EAAAyC,EAAA1H,OAAA,KAKAwH,GACAxJ,EAAAkK,QACAlK,EAAAkK,OAAAnF,EAAA,IAEAA,EAAAyE,aAAAE,EAAA,MAKA1J,EAAAuJ,QACAvJ,EAAAuJ,OAAAxE,EAAA,IAGAxF,GAAAA,EAAAiI,YACAjI,EAAAiI,UAAAkC,EAAAzC,GAAAjC,qBAAA,MACAzF,EAAAiI,UAAAkC,EAAAzC,KAGAyC,EAAAzC,GAAAF,UAAAhC,EAAA,GAAAgC,gBA3DA,GAAA2C,EAAAzC,GAAA,CACA,IAAAkD,GAAA,EACAC,EAAA,WACA,IAAAD,EAAA,CAGA,GAFAA,GAAA,EAEAT,EAAA1H,QAAA,EACA,OAAAsF,iBAAAoC,EAAAzC,IAEAyC,EAAAzC,GAAAgD,WAGAjK,EAAAiK,OAEAjK,EAAAiK,OAAAP,EAAAzC,GAAAmD,IACAtJ,WAAAsJ,EAAA,KAIAA,MA4CAC,EAAA,SAAAC,EAAAlJ,GACAiG,OAAAkD,eAAAD,EAAAlJ,EAAA,CACAoJ,YAAA,EACAC,cAAA,EACAvI,MAAA,WACA,IAAA6C,OAAAtE,EACAiK,EAAA7L,KAAAmD,OAKA,GAHA2I,MAAA7E,UAAA1E,KACA2D,EAAA4F,MAAA7E,UAAA1E,GAAAxC,MAAAC,KAAAC,YAEA,QAAAsC,EACAkI,EAAAoB,EAAA,QAEA,GAAA,SAAAtJ,EACAkI,EAAAoB,GAAA,QAEA,GAAA,UAAAtJ,EACAkI,EAAA,QAEA,GAAA,WAAAlI,EACA,GAAAtC,UAAAkD,QAAA,EACAlD,UAAA,IAAA,EACAsC,EAAA,kBAEA,CACA,IAAAwJ,EAAA9L,UAAA,GACA8L,EAAA,IAAAA,EAAAF,EAAAE,GAEA,IAAAC,EAAA/L,UAAA,GACA+L,IAAAA,EAAAzB,EAAApH,QAEA,IAAA,IAAA2C,EAAAkG,EAAA,EAAAlG,GAAA,EAAAA,IACA2E,EAAAsB,EAAAjG,OAKA,YAAAvD,GACAkI,EAAA,GAAA,GAAA,GAEA,GAAA,gBAAAlI,EACA,GAAAtC,UAAA,IAAA,IAAAA,UAAA,GACAwK,EAAAxK,UAAA,KAAAsK,EAAAtK,UAAA,SACA,CACA,IAAAgM,GAAA,EAGA,GAAA1B,EAAApH,OAAAnD,KAAAmD,OACA,IAAA2C,EAAAyE,EAAApH,OAAA,EAAA2C,GAAA9F,KAAAmD,OAAA2C,KACA,IAAA9F,KAAA0F,QAAA6E,EAAAzE,MACAmG,GAAA,EACAxB,EAAA3E,IAMA,GAAAyE,EAAApH,OAAAnD,KAAAmD,OACA,IAAA2C,EAAAyE,EAAApH,OAAA,EAAA2C,EAAA9F,KAAAmD,OAAA2C,IACAmG,GAAA,EACAxB,EAAA3E,GAAA,GAAA,GAKA,IAAAA,EAAA,EAAAA,EAAA9F,KAAAmD,OAAA2C,KACA,IAAAoG,cAAA3B,EAAAzE,GAAA9F,KAAA8F,MACAmG,GAAA,EACAxB,EAAA3E,GAAA,IAIAmG,IACA1B,EAAAvK,KAAAmJ,MAAA,QAGA,gBAAA5G,GACAgI,EAAAvK,KAAAmJ,MAAA,GACAsB,GAAA,IAEAqB,MAAA7E,UAAA1E,GAAAxC,MAAAwK,EAAAtK,WAEA,OAAAiG,MAKAJ,EAAA,EAAAA,EAAA0E,EAAArH,OAAA2C,IACA0F,EAAAxF,EAAAwE,EAAA1E,KAIA,SAAAoG,cAAAC,EAAAC,GACA,IAAAD,IAAAC,EACA,OAAA,EAEA,IAAA,IAAAtG,KAAAqG,EACA,GAAA,iBAAAA,EAAArG,IAAAqG,EAAArG,KAAAsG,EAAAtG,GACA,OAAA,EAEA,OAAA,EAGA,IAAAuG,WAAA,SAAA9J,EAAA+J,EAAA5I,EAAA4G,GACA,IAAAiC,EAAA,GACAnI,EAAAV,EAAAS,MAAA,QACA2E,EAAA1E,EAAA,GAEA,IAAA/C,KAAA2B,KAAAT,GACA,OAAAmC,QAAAC,MAAA,0CAAApC,EAAA,kBAAA7B,EAAA4L,GAAA,IAEA,IAAAE,EAAAnL,KAAA2B,KAAAT,GAAA6B,EAAA,IAQA,GAFAkI,GADAA,GAFAlF,kBAAA1G,EAAA4L,GAAAxJ,KAAA,eAAAsB,EAAA,IAAA,IAEA8D,WACAlE,QAAA,WAAA,IAEA,IAAAI,EAAAjB,OAAA,CACA,IAAA,IAAA2C,KAAA0G,EAAA,CACA,IAAAzB,EAAAyB,EAAA1G,GAEAI,KAAAmD,iBAAAiD,EAAAvB,EAAAjC,EAAAvG,GACA2D,KAAA0C,WAAA1C,KAAA6E,EAAAjC,EAAAvG,GACAgK,GAAArG,KAEAsC,OAAAkD,eAAArK,KAAA2B,KAAAT,GAAA6B,EAAA,GAAA,CACAuH,YAAA,EACAC,cAAA,EACAa,IAAA,WACA,OAAAD,GAEAE,IAAA,SAAAvC,GACA,IAAA,IAAArE,EAAA,EAAAA,EAAAqE,EAAAhH,OAAA2C,IACA0G,EAAA1G,IACA0G,EAAA1G,GAAAqE,EAAArE,GACA0G,EAAAG,YAAA7G,IAEA0G,EAAA7G,KAAAwE,EAAArE,IAMA,OAHA0G,EAAArJ,OAAAgH,EAAAhH,QACAqJ,EAAAvG,OAAAkE,EAAAhH,QAEAqJ,KAGApC,UAAAkC,EAAAE,EAAA1D,EAAAvG,EAAA6B,EAAA,GAAAkG,GAEA,OAAAiC,GAGAK,UAAA,SAAAtC,GACA5J,EAAA,kBAAA4J,GAAAnF,KAAA,WACA,IAAA1C,EAAA/B,EAAAV,MACA2C,EAAAF,EAAAM,QAAA,mBAAAD,KAAA,iBACA,GAAAH,EAAA,CAEA,IAAAkK,EAAApK,EAAAK,KAAA,iBAGAlB,WAAAP,KAAA2B,KAAAL,GAAAkK,IAKApK,EAAAK,KAAA,aAAA+J,GACApK,EAAAqK,WAAA,YAGArK,EAAAsK,MAAA,SAAAvJ,GACAnC,KAAA2B,KAAAL,GAAAkK,GAAApK,EAAA0H,QAIA1H,EAAAK,KAAA,QAAA,KAAA+J,EAAA,MACAG,WAAAvK,EAAApB,KAAA2B,KAAAL,GAAAkK,EAAA,SAdAnI,QAAAC,MAAA,uCAAAhC,EAAA,OAAAkK,EAAA,UAkBAI,oBAAA,EA4DA,SAAAC,eAAAzK,GACA,IAAAE,EAAA9C,GAAAsC,WAAAS,UAAAH,GAEA/B,EAAA,+DAAA+B,GAAA0C,KAAA,WACAgI,cAAAnN,KAAA2C,KAGAwK,cAAA1K,GAlEApB,KAAA0D,KAAA,SAAAuF,GACA2C,qBAAA3C,IACA2C,oBAAA,EACAhL,WAAA,WACAgL,oBAAA,GACA,IAEA3C,EACAA,aAAA8C,OACA9C,EAAA5J,EAAA4J,GAAA,IAEAA,EAAArF,SAAAC,KAEA7D,KAAAgM,gBAAAhM,KAAAiM,gBAAAhD,IACAsC,UAAAtC,GAEA5J,EAAA,mBAAA4J,GAAAnF,KAAA,WACA,IAAA9D,EAAAX,EAAAV,MACAgF,EAAA3D,EAAA2D,SAEAuI,EAAAlM,EAAAmM,OACAD,EAAApK,QAAA9B,EAAA,KAAAkM,EAAA,KACAA,GAAA,GAEA,IAAAE,EAAApM,EAAA6J,OACAuC,EAAAtK,QAAA9B,EAAA,KAAAoM,EAAA,KACAA,GAAA,GAEA,IAAA/J,EAAArC,EAAAyB,KAAA,kBACAzB,EAAAyL,WAAA,kBACA,IAAA3K,EAAAtC,GAAAsC,WAAAS,UAAA5C,MAEAsM,EAAAtM,KAAAkI,UAGA,GAAA,0BAAArB,KAAAyF,GACA,KAAA,yCAEA,IAAAoB,EAAArB,WAAAlK,EAAAmK,EAAA5I,EAAA4G,GACAoD,GACArM,EAAA+J,SAEAsC,EAAAhN,EAAAgN,GACAH,EACAG,EAAA/C,aAAA4C,GACAE,EACAC,EAAA9C,YAAA6C,GAEAzI,EAAA2I,OAAAD,KAGArM,EAAAyB,KAAA,eAAAY,EAAAS,MAAA,QAAA,IACAsE,iBAAAzI,WAiBAU,EAAA,WACA,mBAAAkN,kBAAAA,iBAAA3G,UAAA4G,QACA,IAAAD,iBAAA,SAAAE,GACA,GAAA3G,eAEA,IAAA,IAAArB,KAAAgI,EACA,IAAA,IAAAC,KAAAD,EAAAhI,GAAAkI,aAAA,CACA,IAAA3F,EAAAyF,EAAAhI,GAAAkI,aAAAD,GAAAE,SACA,SAAA5F,GAAA,aAAAA,GACA6E,eAAAY,EAAAhI,GAAAkI,aAAAD,OAIAF,QAAA5I,SAAAC,KAAA,CAAAgJ,WAAA,EAAAC,SAAA,IAGAlJ,SAAAC,KAAAkJ,iBAAA,iBAAA,SAAA5K,GACA,GAAA2D,eAAA,CACA,IAAAkB,EAAA7E,EAAAC,OAAAwK,SACA,GAAA,SAAA5F,GAAA,aAAAA,EAAA,OACA6E,eAAA1J,EAAAC,aAMA,IAAA0J,cAAA,SAAA1K,EAAA4L,GACA,GAAA5L,EAAAW,WAAA,CAEA,IAAAkL,EAAA7L,EAAAW,WACA,GAAAkL,EAAA,cAAA,CACA,IAAAC,EAAAD,EAAA,cAAAjL,MAEA,IAAAmL,QAAAD,GAAA,OAGA,IAFA,IAAAE,EAAAD,QAAAD,GAEAzI,EAAA,EAAAA,EAAA2I,EAAApE,aAAAlH,OAAA2C,IAAA,CACA,IAAAzC,EAAAoL,EAAAC,OAAAD,EAAApE,aAAAvE,IACA0C,OAAAkD,eAAA+C,EAAAC,OAAAD,EAAApE,aAAAvE,GAAA,CACA8F,cAAA,EACAD,YAAA,EACAgD,UAAA,EACAtL,MAAAA,WAIAmL,QAAAD,GAGA,IAAA9H,EAAA+H,QAAA/H,MACA,IAAA,IAAAX,KAAAW,EACAA,EAAAX,GAAA3E,UAAAsF,EAAAX,GAAA3E,SAAAoN,WACA9H,EAAAX,GAAA3E,SAAAoN,GACA7N,EAAAkO,cAAAnI,EAAAX,GAAA3E,kBACAsF,EAAAX,GAGAW,EAAA8H,YACA9H,EAAA8H,GAAAD,aACA7H,EAAA8H,GAAAnI,iBACAK,EAAA8H,GAAA3L,iBACA6D,EAAA8H,GAAA5L,aACA8D,EAAA8H,GAAAM,eACApI,EAAA8H,GAAA9L,SAGA+L,QAAArL,SACA,IAAAqL,QAAArL,SACAqL,QAAApG,MAAA,GAGA,GAAAiG,EAAA,CAEA,IAAAhE,GAAA,EACAiE,EAAA,kBACAjE,EAAAiE,EAAA,gBAAAjL,OAEAiL,EAAA,oBACAjE,EAAAiE,EAAA,kBAAAjL,MAAAc,MAAA,QAAA,IAEAmK,EAAA,gBACAjE,EAAAiE,EAAA,cAAAjL,OAEA,IAAAyC,EAAA,EAAAA,EAAAuI,EAAAlL,OAAA2C,IAAA,CACA,IAAAwC,EAAAjH,KAAA2B,KAAAqL,EAAAvI,IACA,GAAAwC,EAAA+B,GAAA,CAEAhH,EAAAiF,EAAA+B,GAAAlB,MAAA,GACAX,OAAAkD,eAAApD,EAAA+B,EAAA,CACAuB,cAAA,EACAD,YAAA,EACAgD,UAAA,EACAtL,MAAAA,SAYAmL,QAAA,CAAArL,OAAA,EAAAiF,MAAA,EAAA3B,MAAA,IACApF,KAAAmN,QAAAA,QACA,IAAAM,UAAA,eACA9B,WAAA,SAAAvK,EAAAiM,EAAArE,EAAA0E,GACAtM,aAAA2K,OACA3K,EAAAA,EAAA,IAGA2E,kBAAA3E,EAGA,IAAA8L,EAAAC,QAAApG,MACA1H,EAAA+B,GAAAK,KAAA,aAAAyL,GAEAC,QAAApG,QACAoG,QAAArL,SACAqL,QAAA/H,MAAA8H,GAAA,GACA,IAAA9H,EAAA+H,QAAA/H,MAAA8H,GAQA,GANA9H,EAAA6H,MAAA,GACA7H,EAAAL,UAAA,GACAK,EAAA7D,UAAA/C,GAAAsC,WAAAS,UAAAH,GACAgE,EAAA9D,MAAAtB,KAAA2B,KAAAyD,EAAA7D,WACA6D,EAAAoI,QAAAG,KAAAC,MAEA,SAAAF,IAAAA,EACA,IAAA,IAAAjJ,KAAArD,EAAAW,WAEA,GAAA0L,UAAAjI,KAAApE,EAAAW,WAAA0C,GAAAzC,OAAA,CAGA,IAAA6L,EAAAzM,EAAAW,WAAA0C,GAAAvD,KACAkE,EAAA6H,MAAAY,GAAAzM,EAAAW,WAAA0C,GAAAzC,MAEA,UAAA6L,GACAzM,EAAAsD,gBAAAmJ,GAIA,SAAAH,GAAAA,IACAtI,EAAAL,UAAA3D,EAAA2D,WAGAoI,QAAAD,KAAAC,QAAAD,GAAA,CAAAG,OAAAA,EAAArE,aAAA,KACAmE,QAAAD,GAAAlE,aAAA1E,KAAA0E,GAEA5D,EAAAhE,QAAA/B,EAAA+B,GACA,IAAA0M,EAAA,WACA,GAAA,SAAAJ,IAAAA,EACA,IAAA,IAAAxM,KAAAkE,EAAA6H,MACA,IAAA,IAAA7H,EAAA6H,MAAA/L,GAAAmD,QAAA2E,GAAA,CAGA,IAAAnE,EAAA0C,WAAAnC,EAAA6H,MAAA/L,GAAAkE,EAAA9D,OAAA,EAAA8D,EAAA7D,WACA,UAAAL,EACAkE,EAAAhE,QAAA0H,IAAAjE,GAEAO,EAAAhE,QAAAK,KAAAP,EAAA2D,GACA,MAIA,GAAA,SAAA6I,IAAAA,EAAA,CACA7I,EAAAmD,iBAAA5C,EAAAL,UAAAK,EAAA9D,OAAA,EAAA8D,EAAA7D,WACAsD,EAAA0C,WAAA1C,EAAAO,EAAA9D,OAAA,EAAA8D,EAAA7D,WACA6D,EAAAhE,QAAAoG,KAAA3C,KAIA,QAAAtE,IAAA6E,EAAA9D,MAAA0H,GAAA,KAAA,aAAAA,EAAA,uBAAA5D,EAAA7D,UAAA,UACA,GAAA4F,OAAA4G,yBAAA3I,EAAA9D,MAAA0H,GAAA,KACA,IAAA,IAAAvE,KAAA0I,QACA,GAAA/H,EAAA9D,QAAA6L,QAAA1I,GAAA4I,SAAA,IAAAF,QAAA1I,GAAAuE,aAAA3E,QAAA2E,GAAA,CACAmE,QAAA/H,MAAAX,GAAA3E,SAAAoN,GAAAY,EACA,WAJA,CAUA1I,EAAAtF,SAAA,GACAsF,EAAAtF,SAAAoN,GAAAY,EAEA,IAAAE,EAAAX,EAAArE,GACA7B,OAAAkD,eAAAgD,EAAArE,EAAA,CACAsB,YAAA,EACAC,cAAA,EACAa,IAAA,WACA,OAAA4C,GAEA3C,IAAA,SAAAvC,GAGA,IAAA,IAAArE,KAFAuJ,EAAAlF,EAEA1D,EAAAtF,SACAsF,EAAAtF,SAAA2E,KAGA,OAAAuJ,OAKAhO,KAAAiO,YAAA,SAAA7M,EAAAsM,GACA,IAAAnM,EAAA/C,GAAAsC,WAAAS,UAAAH,GACAE,EAAAtB,KAAA2B,KAAAJ,GACA,IAAAD,EAAA,OAAA+B,QAAAC,MAAA,aAAA/B,EAAA,gCAAAH,GAEA,IAAAoG,EAAApG,EAAAyF,UAGA,GAAA,0BAAArB,KAAAgC,GACA,KAAA,yCAEA,SAAAkG,IACAlG,EAAAA,EAAA7E,QAAAvB,EAAA2D,UAAA,KAMA,IAJA,IAAAmJ,EAAA,kBAGAvG,EAAA3H,KAAAwC,UAAAlB,GACAmD,EAAAkD,EAAA7F,OAAA,EAAA2C,GAAA,EAAAA,IACAnD,EAAAqG,EAAAlD,cAAA1F,UACA4I,EAAA/C,OAAAH,EAAA,GAKA,IAFA,IACAkE,EADAlG,EAAAC,OAAAlE,GAAAU,MAAAE,UAAA,IAAAuI,EAAA,IAAAnJ,GAAAU,MAAAC,YAAA,MAAA,KACAgP,EAAA,KACA,QAAAxF,EAAAuF,EAAAzH,KAAAe,KACA,KAAA,QAAA2G,EAAA1L,EAAAgE,KAAAkC,EAAA,MACAgD,WAAAvK,EAAAE,EAAA6M,EAAA,GAAAT,IAKA1N,KAAAiM,gBAAA,SAAAhD,GAIA,IAHA,IAAAmF,GAAAnF,GAAArF,SAAAC,MAAAuK,WAEAC,EAAA,CAAA,OAAA,OAAA,QAAA,OAAA,OAAA,SAAA,SAAA,UACA5J,EAAA,EAAAA,EAAA4J,EAAAvM,OAAA2C,IACA4J,EAAA5J,GAAA4J,EAAA5J,GAAA6J,cAGA,IAAAzJ,EAAA,GACA,IAAAJ,EAAA,EAAAA,EAAA2J,EAAAtM,OAAA2C,IAAA,CACA,IAAA8J,EAAAH,EAAA3J,GACA,IAAA,IAAA4J,EAAAhK,QAAAkK,EAAA3B,UAGA,GAAA,IAAA2B,EAAAC,SAAA,CACA,IAAAvB,EAAAsB,EAAAxM,WAGA,GAAAkL,EAAA,eAAAA,EAAA,mBAAAA,EAAA,gBAAA,SAEA,IAAA,IAAAP,EAAA,EAAAA,EAAAO,EAAAnL,OAAA4K,KACA,IAAAO,EAAAP,GAAA1K,MAAAqC,QAAA,QACAkK,EAAA1I,aAAA,gBAAA,YACAhB,EAAAP,KAAAiK,IAIA1J,EAAAA,EAAA4J,OAAAzO,KAAAiM,gBAAAsC,SAGA,GAAA,IAAAA,EAAAC,WACA,IAAAD,EAAAG,UAAArK,QAAA,MAAA,CACAkK,EAAAI,WAAA9I,aAAA,gBAAA,IAGA,IAAA6G,EAAA,EAAAA,EAAA7H,EAAA/C,OAAA4K,IACA7H,EAAA6H,GAAAhI,gBAAA,iBAEAG,EAAAP,KAAAiK,EAAAI,YAEA,OAKA,OAAA9J,GAGA7E,KAAAgM,gBAAA,SAAA4C,GACA,IAAA,IAAAlC,EAAA,EAAAA,EAAAkC,EAAA9M,OAAA4K,IAAA,CACA,IAAApL,EAAA9C,GAAAsC,WAAAS,UAAAqN,EAAAlC,IAGA,GAFAkC,EAAAlC,GAAAhI,gBAAA,kBAEA1E,KAAA2B,KAAAL,GACA,OAAA+B,QAAAC,MAAA,0CAAAhC,EAAA,kBAAAsN,EAAAlC,IAMA,GAHA3G,kBAAA6I,EAAAlC,GAGA,0BAAAlH,KAAAoJ,EAAAlC,GAAA3H,WAGA,OAFA1B,QAAAC,MAAA,+CACAD,QAAAuD,IAAAvH,EAAA0G,kBAAAc,WAAA,IAIAxH,EAAAuP,EAAAlC,IAAAjL,KAAA,YACAzB,KAAAiO,YAAAW,EAAAlC,GAAArN,EAAAuP,EAAAlC,IAAAjL,KAAA,YAGA,IAAAoD,EAAAmD,iBAAA4G,EAAAlC,GAAA3H,UAAA/E,KAAA2B,KAAAL,IAAA,EAAAA,GACAsN,EAAAlC,GAAA3H,UAAAwC,WAAA1C,EAAA7E,KAAA2B,KAAAL,IAAA,EAAAA,GACA,IAAA,IAAAmD,EAAA,EAAAA,EAAAmK,EAAAlC,GAAA3K,WAAAD,OAAA2C,KACA,IAAAmK,EAAAlC,GAAA3K,WAAA0C,GAAAzC,MAAAqC,QAAA,QACAuK,EAAAlC,GAAA3K,WAAA0C,GAAAzC,MAAAuF,WAAAqH,EAAAlC,GAAA3K,WAAA0C,GAAAzC,MAAAhC,KAAA2B,KAAAL,IAAA,EAAAA,MAj5BA,GCXA9C,GAAAmH,OAAA,IAAA,WACA,IAAA3F,EAAArB,KACAqB,EAAA6O,SAAA,EACA7O,EAAA8O,SAAA,EACA9O,EAAA+O,yBAAA,EACA/O,EAAAgP,YAAA,GACA,IAAAC,GAAA,EAEAC,EAAA,GAGAlP,EAAA0D,KAAA,SAAAuF,GACA,IAAAzK,GAAAQ,OAAAyE,aACA,OAAAjF,GAAA,WACAwB,EAAA0D,SAIA1D,EAAAmP,OAGA9P,EAAA,6BAAAA,EAAA4J,GAAA,IAAAnF,KAAA,WAIA,GAHAnF,KAAAoD,WAAA,kBACAvD,GAAAsC,WAAAmB,IAAAtD,KAAAoD,WAAA,iBAAAC,OAEArD,KAAAoD,WAAA,WAAA,CACA,IAAAb,EAAAvC,KAAAoD,WAAA,WAAAC,MACAoN,EAAAlO,MAIA+N,GAAA,EACAC,EAAAG,OAAAC,SAAAC,UAGAvP,EAAAwP,OAAA,SAAAC,QACAlP,IAAAkP,IAAAA,GAAA,GACAzP,EAAA8O,UAAAW,IACAzP,EAAA8O,QAAAW,EAEAA,EACAzP,EAAAmP,OAEA9P,EAAA,oBAAAyE,KAAA,WACA,IAAAuD,EAAAhI,EAAAV,MACA,gCAAA0I,EAAA5F,KAAA,YACA4F,EAAAoE,WAAA,aAIA4D,OAAAtC,iBAAA,WAAA,SAAA2C,GAEAC,EACAA,GAAA,GAIAC,GAAA,EACA5P,EAAA6P,KAAAR,OAAAC,SAAAC,aACA,KAGA,IAAAnD,EAAA,GAEApM,EAAAoM,OAAA,SAAAlL,EAAAvB,EAAAoH,GACAqF,EAAAlL,KACAkL,EAAAlL,GAAA,SAEAX,IAAAwG,GACA,IAAAqF,EAAAlL,GAAAmD,QAAA1E,IACAyM,EAAAlL,GAAAoD,KAAA3E,GAGAyM,EAAAlL,GAAA6F,GAAApH,GAGA,IAAAuM,EAAA,GAEAlM,EAAAkM,MAAA,SAAAhL,EAAAvB,EAAAoH,GACAmF,EAAAhL,KACAgL,EAAAhL,GAAA,SAEAX,IAAAwG,GACA,IAAAmF,EAAAhL,GAAAmD,QAAA1E,IACAuM,EAAAhL,GAAAoD,KAAA3E,GAGAuM,EAAAhL,GAAA6F,GAAApH,GAGA,IAAA4D,EAAA,SAAAC,GAOA,OANAhF,GAAA8C,MAAAK,KAAA6B,KACAhF,GAAA8C,MAAAK,KAAA6B,GAAA,IAEAhF,GAAA8C,MAAAK,KAAA6B,IACAhF,GAAAsC,WAAAmB,IAAAuB,GAEAhF,GAAA8C,MAAAK,KAAA6B,IAIA4L,EAAA,SAAAlO,GAIA,IAHA,IAAAlB,EAAAgP,YAAA3K,QAAAnD,IACAlB,EAAAgP,YAAA1K,KAAApD,GAEAkL,EAAAlL,GACA,IAAA,IAAAuD,EAAA,EAAAA,EAAA2H,EAAAlL,GAAAY,OAAA2C,IACA2H,EAAAlL,GAAAuD,GAAAlB,IAiBAuM,EAAA,CACAjB,QAAA,GACAkB,OAAA,GACAC,QAAA,GACA1M,MAAA,IAEAtD,EAAAgE,GAAA,SAAA0L,EAAA/P,IACA,IAAAmQ,EAAAJ,GAAArL,QAAA1E,IACAmQ,EAAAJ,GAAApL,KAAA3E,IAGAK,EAAAiQ,cAAA,GAQAjQ,EAAAmP,KAAA,WACAnP,EAAA8O,SAEAzP,EAAA,0BAAAyE,KAAA,WACA,IAAAoB,EAAAvG,KAAAuR,MACA,IAAAhL,EAAAb,QAAA,OAGA,IAAAa,EAAAb,QAAAgL,OAAAC,SAAAa,SAAA,MAAAjL,EAAAkL,OAAA,IAGA/Q,EAAAV,MAAA8C,KAAA,UAAA,mCAIAzB,EAAAqQ,KAAA,SAAAhP,GACA,OAAAiP,QAAAC,WAAA,UAAAlR,EAAAgC,GAAAI,KAAA,eAGAzB,EAAA6P,KAAAxO,EAAA6O,KAAAvN,QAAA0M,OAAAC,SAAAa,OAAA,MAGA,IAAAK,GAAA,EACAZ,GAAA,EACAD,GAAA,EACA3P,EAAA6P,KAAA,SAAAY,EAAApE,EAAAtJ,GAEAA,EADAA,EACAA,EAAAuL,cADA,MAGA,IAAA,IAAA7J,EAAA,EAAAA,EAAAqL,EAAA,QAAAhO,OAAA2C,IACA,GAAAqL,EAAA,QAAArL,GAAAgM,GAAA,OAEApB,OAAAC,SAAAC,SAwHA,OAvHAN,GAAA,EAEAuB,GAAAA,EAAAE,QACAF,EAAAnR,EAAA4F,KAAA,CACAC,IAAAmK,OAAAC,SAAAa,OAAAM,EACA1N,OAAAA,EACAsJ,KAAAlF,OAAAwJ,OAAAtE,EAAA,CACAuE,UAAA,cAEAC,QAAA,SAAAxE,GACA,IAAA4C,EAAA,EACA,EAGAuB,GAAA,EAGA,IACAR,EADAtN,OAAA,iCAAAlE,GAAAU,MAAAC,YAAA,MACAsH,KAAA4F,GACA,GAAA2D,GAAA,IAAAA,EAAAlO,SACAkO,EAAAA,EAAA,GAAAlN,MAAA,SAAAK,KAAA,UACA6M,EAAAzH,KAAAuI,MAAAd,IAEA3Q,EAAAkO,cAAAyC,IACA,IAAA,IAAAvL,EAAA,EAAAA,EAAAqL,EAAA,QAAAhO,OAAA2C,IACA,GAAAqL,EAAA,QAAArL,GAAAuL,GAAA,OAKA,IAAAe,GAAA,EACAC,EAAA,SAAA5D,GACA2D,EAAA1R,EAAA+N,GA/FA,SAAAlM,GAIA,IAHA,IAAAlB,EAAAgP,YAAA3K,QAAAnD,IACAlB,EAAAgP,YAAApK,OAAA5E,EAAAgP,YAAA3K,QAAAnD,GAAA,GAEAgL,EAAAhL,GACA,IAAA,IAAAuD,EAAA,EAAAA,EAAAyH,EAAAhL,GAAAY,OAAA2C,IACAyH,EAAAhL,GAAAuD,GAAAlB,GA4FA0N,CAAA5R,EAAA,YAAA0R,EAAA,IAAAtP,KAAA,YAGAuO,GAAAA,EAAAkB,OACA7R,EAAA,cAAAmI,KAAAwI,EAAAkB,OAEAC,GAAA,GAGAA,GAAA,EACA,IAAA,IAAAC,KAAApR,EAAAiQ,cAAA,CACA,IAAA,IAAAf,EAAA7K,QAAA+M,GACA,IAAA,IAAAC,KAAArR,EAAAiQ,cAAAmB,GACA,IAAA,IAAAlC,EAAA7K,QAAA+M,GAAA,CACAJ,EAAAhR,EAAAiQ,cAAAmB,GAAAC,IACA,MAIA,GAAAF,EAAA,MAIA,IAAAA,IAEA3S,GAAAmH,OAAAsK,cAAA,aACAe,EAAAxS,GAAAmH,OAAAsK,cAAA,cAEAkB,GACA,IAAA1M,EAAA,EAAAA,EAAAqL,EAAA,MAAAhO,OAAA2C,IACAqL,EAAA,MAAArL,GAAA,4BAAA2M,EAAA,OAAAC,EAAA,oBAMArR,EAAAmP,OAGA4B,IAAAA,EAAA1R,EAAAuE,SAAAC,OACA7D,EAAA+O,yBACA/O,EAAA+O,wBAAAtO,IAAA,UAAA,QAGAsQ,EAAAvJ,KAAA6E,GAGA7N,GAAA8C,MAAAoC,KAAAqN,GAGA1R,EAAA,YAAA0R,EAAA,IAAAjN,KAAA,WACAnF,KAAAoD,WAAA,YACAqN,EAAAzQ,KAAAoD,WAAA,WAAAC,SAGAhC,EAAA+O,yBACA/O,EAAA+O,wBAAAtO,IAAA,UAAA,IAgCA,SAAAyO,EAAAuB,EAAApE,GACA,IAAA,IAAA5H,EAAA,EAAAA,EAAAqL,EAAA,OAAAhO,OAAA2C,IACAqL,EAAA,OAAArL,GAAAyK,EAAAuB,EAAApE,GAhCAiF,CAAApC,EAAAuB,EAAAM,GAEA9B,GAAA,GACA,EAEAC,EAAAuB,EACAd,GAAA,IAEArM,MAAA,SAAAiO,EAAAlF,GAEA,GADAsD,GAAA,GACA4B,EAAAC,QAAA,CAEAhB,GAAA,EACA,IAAA,IAAA/L,EAAA,EAAAA,EAAAqL,EAAA,MAAAhO,OAAA2C,IACAqL,EAAA,MAAArL,GAAA8M,EAAA9B,OAAApD,GAIAgD,OAAAiB,QAAAmB,WAIA7B,GACAP,OAAAiB,QAAAC,UAAA,KAAA,GAAAE,GAEAb,GAAA,GACA","file":"scarletsframe.min.js","sourcesContent":["sf = function(){\r\n\tif(arguments[0].constructor === Function){\r\n\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\t}\r\n};\r\n\r\nsf.regex = {\r\n\t// ToDo: Need help to skip escaped quote\r\n\tavoidQuotes:'(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)',\r\n\tstrictVar:'(?=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )'\r\n};\r\n\r\nif(typeof $ === 'undefined' || !$.fn){\r\n\tif(typeof jQuery !== 'undefined')\r\n\t\t$ = jQuery;\r\n\telse if(typeof Dom7 !== 'undefined')\r\n\t\t$ = Dom7;\r\n\telse\r\n\t\tthrow \"Please load jQuery before ScarletsFrame\";\r\n}\r\n\r\nif(!$.fn.extend){\r\n\t$.fn.extend = function(obj){\r\n\t\tfor(var func in obj){\r\n\t\t\t$.fn[func] = obj[func];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Add animate.css feature on jQuery\r\n$.fn.extend({\r\n  animateCSS: function(animationName, callback, duration) {\r\n\tvar self = this;\r\n\tvar animationEnd = {\r\n\t\tanimation: 'animationend',\r\n\t\tOAnimation: 'oAnimationEnd',\r\n\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t};\r\n\r\n\tfor (var t in animationEnd)\r\n\t\tif (self[0].style[t] !== undefined){\r\n\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\tif(duration)\r\n\t\tself.css('-webkit-animation-duration', duration+'s').css('animation-duration', duration+'s');\r\n\r\n\tself.addClass('animated ' + animationName).one(animationEnd, function(){\r\n\t\tsetTimeout(function(){\r\n\t\t\t$(self).removeClass('animated ' + animationName);\r\n\t\t}, 1);\r\n\r\n\t\tif(duration)\r\n\t\t\t$(self).css('-webkit-animation-duration', '').css('animation-duration', '');\r\n\r\n\t\tif (typeof callback === 'function') callback();\r\n\t});\r\n\r\n\treturn self;\r\n  }\r\n});","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tself.pending = {};\r\n\tself.active = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tself.pending[name] = func;\r\n\t}\r\n\r\n\tself.modelScope = function(element, func){\r\n\t\tvar elem = $(element);\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = elem.attr('[sf-bind-list]');\r\n\t\tif(!bindedList)\r\n\t\t\tbindedList = elem.parents('[sf-bind-list]').attr('sf-bind-list');\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(sf.model.root[model], -1);\r\n\t\t\telse return sf.model.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = elem.parents('[sf-bind-list]').prevAll('[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(sf.model.root[model][bindedList], bindedListIndex);\r\n\t\telse return sf.model.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.modelName = function(element){\r\n\t\tvar name = undefined;\r\n\t\tif(element.attributes['sf-controller'])\r\n\t\t\tname = element.attributes['sf-controller'].value;\r\n\t\telse\r\n\t\t\tname = $(element).parents('[sf-controller]').attr('sf-controller');\r\n\r\n\t\t// Initialize it first\r\n\t\tif(name !== undefined && !self.active[name])\r\n\t\t\tself.run(name);\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = $(e.target);\r\n\t\tvar script = element.attr('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = element.parents('[sf-click]').eq(0);\r\n\t\t\tscript = element.attr('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = element.parents('[sf-controller]').attr('sf-controller');\r\n\r\n\t\tif(!sf.model.root[model])\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar _modelScope = sf.model.root[model];\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(_modelScope);\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+modelKeys+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tscript = script.replace(scopeMask, function(full, matched){\r\n\t\t\treturn '_modelScope.'+matched;\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script[0];\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(e) {\r\n\t\t\tmethod = false;\r\n\t\t}\r\n\r\n\t\tif(!method){\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot find '+method_+']\\n', e.target);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript.shift();\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0)\r\n\t\t\tscript = eval('['+script+']');\r\n\t\tif(!script)\r\n\t\t\tscript = [];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element[0], script);\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', e.target, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tvar root_ = function(scope){\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.model.root[scope] = {};\r\n\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.controller.run(scope);\r\n\t\t\r\n\t\treturn sf.model.root[scope];\r\n\t}\r\n\t// Deprecated\r\n\tself.run = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.run(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(self.pending[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\t\t\r\n\t\t\tself.pending[name](sf.model.root[name], root_);\r\n\t\t\tself.active[name] = true;\r\n\t\t\tdelete self.pending[name];\r\n\t\t}\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], root_);\r\n\t}\r\n\r\n\tself.init = function(parent){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(name);\r\n\t\t\t});\r\n\r\n\t\t$('[sf-controller]', parent ? $(parent)[0] : document.body).each(function(){\r\n\t\t\tself.run(this.attributes['sf-controller'].value);\r\n\t\t});\r\n\t}\r\n\r\n\t// Create listener for sf-click\r\n\t$(document).once('DOMContentLoaded', function(){\r\n\t\t$(document.body).on('click', '[sf-click]', listenSFClick);\r\n\t});\r\n}","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 0;\r\n\tself.DOMWasLoaded = false;\r\n\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t\tif(element && element.removeAttribute) element.removeAttribute('onload');\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length!==0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tvar temp = '';\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\ttemp += '<link onload=\"sf.loader.f(this);\" rel=\"stylesheet\" href=\"'+list[i]+'\">';\r\n\t\t}\r\n\r\n\t\t$(function(){\r\n\t\t\tdocument.getElementsByTagName('body')[0].innerHTML += temp;\r\n\t\t});\r\n\t}\r\n\r\n\tself.js = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length!==0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\t$.ajax({\r\n\t\t\t  url: list[i],\r\n\t\t\t  dataType: \"script\",\r\n\t\t\t  cache: true,\r\n\t\t\t  complete: sf.loader.f\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(function(){\r\n\t\tif(self.totalContent === 0)\r\n\t\t\tself.loadedContent = self.totalContent = 1;\r\n\t}, 10000);\r\n\tvar everythingLoaded = setInterval(function() {\r\n\tif (/loaded|complete/.test(document.readyState)) {\r\n\t\tif(self.loadedContent < self.totalContent || self.loadedContent === 0)\r\n\t\t\treturn;\r\n\r\n\t\tclearInterval(everythingLoaded);\r\n\t\tself.DOMWasLoaded = true;\r\n\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\ttry{\r\n\t\t\t\twhenDOMLoaded[i]();\r\n\t\t\t} catch(e){\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\twhenProgress.splice(0);\r\n\t\twhenDOMLoaded.splice(0);\r\n\r\n\t\t// Last init\r\n\t\tsf.controller.init();\r\n\t\tsf.model.init();\r\n\t\tsf.router.init();\r\n\t}\r\n\t}, 100);\r\n};\r\nsf.prototype.constructor = sf.loader.onFinish;\r\n\r\n// Find images\r\n$(function(){\r\n\t$('img:not(onload)[src]').each(function(){\r\n\t\tsf.loader.totalContent++;\r\n\t\tthis.setAttribute('onload', \"sf.loader.f(this)\");\r\n\t});\r\n});","// Data save and HTML content binding\r\nsf.model = function(scope){\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\tif(sf.controller.pending[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n};\r\n\r\n(function(){\r\n\tvar self = sf.model;\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\r\n\tvar processingElement = null;\r\n\r\n\tvar bracketMatch = RegExp('([\\\\w.]*?[\\\\S\\\\s])\\\\('+sf.regex.avoidQuotes, 'g');\r\n\tvar chackValidFunctionCall = /[a-zA-Z0-9 \\]\\$\\)]/;\r\n\tvar allowedFunction = [':', 'for', 'if', 'while', '_content_.take', 'console.log'];\r\n\tvar localEval = function(script_, _model_, _modelScope, _content_){\r\n\t\tvar script = script_;\r\n\t\tscript_ = script_.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*'); // ToDo: Escape\r\n\t\tscript_ = script_.split('._modelScope').join('');\r\n\t\tscript_ = script_.split('._model_').join('');\r\n\r\n\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\tvar preventExecution = false;\r\n\t\tvar check = null;\r\n\t\twhile((check = bracketMatch.exec(script_)) !== null){\r\n\t\t\tcheck[1] = check[1].trim();\r\n\r\n\t\t\tif(allowedFunction.indexOf(check[1]) === -1 &&\r\n\t\t\t\tcheck[1].split('.')[0] !== '_modelScope' &&\r\n\t\t\t\tchackValidFunctionCall.test(check[1][check[1].length-1])\r\n\t\t\t){\r\n\t\t\t\tpreventExecution = check[1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar _result_ = '';\r\n\t\tscript_ = script_.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\"); // ToDo: Unescape\r\n\t\tif(preventExecution){\r\n\t\t\tconsole.error(\"Trying to executing unrecognized function (\"+preventExecution+\")\");\r\n\t\t\tconsole.log($(processingElement.outerHTML)[0]);\r\n\t\t\tconsole.log(script_);\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\ttry{\r\n\t\t\tvar _evaled_ = eval(script_);\r\n\t\t} catch(e){\r\n\t\t\tconsole.error(e);\r\n\t\t\tconsole.log(script_);\r\n\t\t\tconsole.log($(processingElement.outerHTML)[0]);\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\tself.index = function(element){\r\n\t\treturn $(element).prevAll(element.tagName).length;\r\n\t}\r\n\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\t\t\r\n\t\tfunc(self(name), self);\r\n\t}\r\n\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys.join('|');\r\n\t}\r\n\r\n\tvar clearElementData = function(current){\r\n\t\t// Clean associated data on jQuery\r\n\t\tif($ && $.cleanData)\r\n\t\t\t$.cleanData(current.getElementsByTagName(\"*\"));\r\n\r\n\t\tcurrent.innerHTML = '';\r\n\t\tfor (var i = 0; i < current.attributes.length; i++) {\r\n\t\t\tvar name = current.attributes[i].name;\r\n\t\t\tif(name !== 'sf-bind-list')\r\n\t\t\t\tcurrent.removeAttribute(name);\r\n\t\t}\r\n\t\tcurrent.setAttribute('style', 'display:none');\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval){\r\n\t\tvar _modelScope = self.root[scope];\r\n\t\tif(!runEval) runEval = '';\r\n\t\t\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(_modelScope);\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(_modelScope[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\treturn html.replace(/{{([^@][\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = temp.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*'); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\r\n\t\t\ttemp = temp.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\"); // ToDo: Unescape\r\n\r\n\t\t\t// Evaluate\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(/[\\u00A0-\\u9999<>\\&]/gim, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\t}\r\n\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(!passVar)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Disable function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('').split(')').join('');\r\n\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\thtml = html.replace(/{\\[([\\s\\S]*?)\\]}/g, function(full, matched){\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope)+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\treturn html.replace(/{{(@[\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = temp.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*'); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\t\t\ttemp = temp.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\"); // ToDo: Unescape\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length != 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\t\t\t\r\n\t\t\t\t// If condition was meet\r\n\t\t\t\tif(localEval.apply(self.root, [check[0], _model_, _modelScope, _content_])){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\treturn check.join(':');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass_ = /(var|let)([\\w,\\s]+)(?=\\s(?==|in|of))/g;\r\n\t\t\tvar VarPass = [];\r\n\t\t\tvar s1 = null;\r\n\t\t\twhile((s1 = VarPass_.exec(temp)) !== null){\r\n\t\t\t\tVarPass.push(s1[2]);\r\n\t\t\t}\r\n\t\t\tif(VarPass.length){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/([\\n\\t\\r]|  )+/g, '').split(',').forEach(function(val){\r\n\t\t\t\t\t\tobtained.push(val);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':(typeof '+VarPass[i]+'!=\"undefined\"?'+VarPass[i]+':undefined)';\r\n\t\t\t\t}\r\n\t\t\t\tVarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\t\t\ttemp = temp.split('&VarPass&').join('{}'); \r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length != 1){\r\n\t\t\t\tcheck = check[1].split('&lt;').join('<').split('&gt;').join('>').split('&amp;').join('&');\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, [check, _model_, _modelScope, _content_]);\r\n\t\t\t\treturn temp;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\t}\r\n\r\n\tvar bindArray = function(html, list, mask, modelName, propertyName, targetNode){\r\n\t\tvar oldArray = list.slice(0);\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'softRefresh', 'hardRefresh'];\r\n\t\tvar processElement = function(index, update, insertBefore, insertAfter){\r\n\t\t\tvar exist = $(\"[sf-controller='\"+modelName+\"']\", targetNode);\r\n\t\t\tif(exist.length === 0){\r\n\t\t\t\tif(targetNode.getAttribute('sf-controller') === modelName)\r\n\t\t\t\t\texist = targetNode;\r\n\t\t\t\telse return;\r\n\t\t\t}\r\n\r\n\t\t\texist = $(\"[sf-bind-list='\"+propertyName+\"']\", exist);\r\n\r\n\t\t\tvar callback = false;\r\n\t\t\tif(self.root[modelName]['on$'+propertyName])\r\n\t\t\t\tcallback = self.root[modelName]['on$'+propertyName];\r\n\r\n\t\t\t// Hard refresh\r\n\t\t\tif(index === -1){\r\n\t\t\t\tvar item = self.root[modelName][propertyName];\r\n\t\t\t\tvar all = '';\r\n\t\t\t\tfor (var i = 0; i < item.length; i++) {\r\n\t\t\t\t\tvar temp = uniqueDataParser(html, item[i], mask, modelName);\r\n\t\t\t\t\tall += dataParser(temp, item[i], mask, modelName);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Get first element\r\n\t\t\t\tvar first = exist.eq(0).prev();\r\n\t\t\t\tif(first[0] === exist[0])\r\n\t\t\t\t\texist.parent().prepend(all);\r\n\t\t\t\telse\r\n\t\t\t\t\t$(all).insertAfter(first);\r\n\t\t\t\texist.remove();\r\n\t\t\t\t\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(!update){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\tif(exist.length <= 1)\r\n\t\t\t\t\t\t\treturn clearElementData(exist[index]);\r\n\r\n\t\t\t\t\t\texist[index].remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(callback.remove){\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tsetTimeout(startRemove, 800);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse startRemove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Create or update\r\n\t\t\tvar item = self.root[modelName][propertyName][index];\r\n\r\n\t\t\tvar temp = uniqueDataParser(html, item, mask, modelName);\r\n\t\t\ttemp = dataParser(temp, item, mask, modelName);\r\n\t\t\ttemp = $(temp);\r\n\r\n\t\t\t// Create\r\n\t\t\tif(!exist[index] || insertAfter){\r\n\t\t\t\tif(callback.create)\r\n\t\t\t\t\tcallback.create(temp[0]);\r\n\r\n\t\t\t\ttemp.insertAfter(exist[index !== 0 ? index - 1 : (exist.length - 1)]);\r\n\t\t\t}\r\n\r\n\t\t\telse{\r\n\t\t\t\t// Create\r\n\t\t\t\tif(insertBefore){\r\n\t\t\t\t\tif(callback.create)\r\n\t\t\t\t\t\tcallback.create(temp[0]);\r\n\r\n\t\t\t\t\ttemp.insertBefore(exist[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(callback.update)\r\n\t\t\t\t\t\tcallback.update(temp[0]);\r\n\r\n\t\t\t\t\t// Clean associated data on jQuery\r\n\t\t\t\t\tif($ && $.cleanData){\r\n\t\t\t\t\t\t$.cleanData(exist[index].getElementsByTagName(\"*\"));\r\n\t\t\t\t\t\t$.cleanData(exist[index]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\texist[index].outerHTML = temp[0].outerHTML;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = undefined;\r\n\t\t\t\t\tvar lastLength = this.length;\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(lastLength - 1);\r\n\r\n\t\t\t\t\telse if(name === 'push')\r\n\t\t\t\t\t\tprocessElement(lastLength, true);\r\n\r\n\t\t\t\t\telse if(name === 'shift')\r\n\t\t\t\t\t\tprocessElement(0);\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments.length >= 3){ // Inserting data\r\n\t\t\t\t\t\t\targuments[0] = false;\r\n\t\t\t\t\t\t\tname = 'softRefresh';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{ // Removing data\r\n\t\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\t\tif(real < 0) real = lastLength + real;\r\n\r\n\t\t\t\t\t\t\tvar limit = arguments[1];\r\n\t\t\t\t\t\t\tif(!limit) limit = oldArray.length;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfor (var i = limit - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\t\tprocessElement(real + i);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift')\r\n\t\t\t\t\t\tprocessElement(0, true, true);\r\n\r\n\t\t\t\t\tif(name === 'softRefresh'){\r\n\t\t\t\t\t\tif(arguments[0] || arguments[0] === 0)\r\n\t\t\t\t\t\t\tprocessElement(arguments[0], !!oldArray[arguments[0]]);\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tvar foundChanges = false;\r\n\r\n\t\t\t\t\t\t\t// Removal\r\n\t\t\t\t\t\t\tif(oldArray.length > this.length){\r\n\t\t\t\t\t\t\t\tfor (var i = oldArray.length - 1; i >= this.length; i--) {\r\n\t\t\t\t\t\t\t\t\tif(this.indexOf(oldArray[i]) === -1){\r\n\t\t\t\t\t\t\t\t\t\tfoundChanges = true;\r\n\t\t\t\t\t\t\t\t\t\tprocessElement(i);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Creates\r\n\t\t\t\t\t\t\tif(oldArray.length < this.length){\r\n\t\t\t\t\t\t\t\tfor (var i = oldArray.length - 1; i < this.length; i++) {\r\n\t\t\t\t\t\t\t\t\tfoundChanges = true;\r\n\t\t\t\t\t\t\t\t\tprocessElement(i, true, true);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Update\r\n\t\t\t\t\t\t\tfor (var i = 0; i < this.length; i++) {\r\n\t\t\t\t\t\t\t\tif(compareObject(oldArray[i], this[i]) === false){\r\n\t\t\t\t\t\t\t\t\tfoundChanges = true;\r\n\t\t\t\t\t\t\t\t\tprocessElement(i, true);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(foundChanges)\r\n\t\t\t\t\t\t\t\toldArray = this.slice(0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(name === 'hardRefresh'){\r\n\t\t\t\t\t\toldArray = this.slice(0);\r\n\t\t\t\t\t\tprocessElement(-1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse Array.prototype[name].apply(oldArray, arguments);\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction compareObject(obj1, obj2){\r\n\t\tif(!obj1 || !obj2)\r\n\t\t\treturn false;\r\n\r\n\t\tfor(var i in obj1){\r\n\t\t\tif(typeof obj1[i] !== 'object' && obj1[i] !== obj2[i])\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tvar loopParser = function(name, content, script, targetNode){\r\n\t\tvar returns = '';\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\r\n\t\tif(!self.root[name])\r\n\t\t\treturn console.error(\"Can't parse element because model for '\"+name+\"' was not found\", $(content)[0]);\r\n\r\n\t\tvar items = self.root[name][method[1]];\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = $(content).attr('sf-bind-list', method[1])[0];\r\n\r\n\t\tcontent = processingElement.outerHTML;\r\n\t\tcontent = content.replace(/  +|\\t+/g, '');\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tfor(var i in items){\r\n\t\t\t\tvar item = items[i];\r\n\r\n\t\t\t\ttemp = uniqueDataParser(content, item, mask, name);\r\n\t\t\t\ttemp = dataParser(temp, item, mask, name);\r\n\t\t\t\treturns += temp;\r\n\t\t\t}\r\n\t\t\tObject.defineProperty(self.root[name], method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tfor (var i = 0; i < val.length; i++) {\r\n\t\t\t\t\t\tif(items[i]){\r\n\t\t\t\t\t\t\titems[i] = val[i];\r\n\t\t\t\t\t\t\titems.softRefresh(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse items.push(val[i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(items.length > val.length)\r\n\t\t\t\t\t\titems.splice(val.length);\r\n\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tbindArray(content, items, mask, name, method[1], targetNode);\r\n\t\t}\r\n\t\treturn returns;\r\n\t}\r\n\r\n\tvar bindInput = function(targetNode){\r\n\t\t$('input[sf-bound]', targetNode).each(function(){\r\n\t\t\tvar element = $(this);\r\n\t\t\tvar model = element.parents('[sf-controller]').attr('sf-controller');\r\n\t\t\tif(!model) return;\r\n\r\n\t\t\tvar whichVar = element.attr('sf-bound');\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(typeof self.root[model][whichVar] === undefined){\r\n\t\t\t\tconsole.error('Cannot get reference for self.root[\"' + model + '\"][\"' + whichVar+'\"]');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement.attr('sf-bounded', whichVar);\r\n\t\t\telement.removeAttr('sf-bound');\r\n\r\n\t\t\t// Bound key up\r\n\t\t\telement.keyup(function(e){\r\n\t\t\t\tself.root[model][whichVar] = element.val();\r\n\t\t\t});\r\n\r\n\t\t\t// Bind value\r\n\t\t\telement.attr('value', '{{'+whichVar+'}}');\r\n\t\t\tbindObject(element, self.root[model], whichVar, 'attr');\r\n\t\t});\r\n\t}\r\n\r\n\tvar alreadyInitialized = false;\r\n\tself.init = function(targetNode){\r\n\t\tif(alreadyInitialized && !targetNode) return;\r\n\t\talreadyInitialized = true;\r\n\t\tsetTimeout(function(){\r\n\t\t\talreadyInitialized = false;\r\n\t\t}, 50);\r\n\r\n\t\tif(targetNode){\r\n\t\t\tif(!(targetNode instanceof Node))\r\n\t\t\t\ttargetNode = $(targetNode)[0];\r\n\t\t}\r\n\t\telse targetNode = document.body;\r\n\r\n\t\tself.parsePreprocess(self.queuePreprocess(targetNode));\r\n\t\tbindInput(targetNode);\r\n\r\n\t\t$('[sf-repeat-this]', targetNode).each(function(){\r\n\t\t\tvar self = $(this);\r\n\t\t\tvar parent = self.parent();\r\n\r\n\t\t\tvar after = self.next();\r\n\t\t\tif(!after.length || self[0] === after[0])\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = self.prev();\r\n\t\t\tif(!before.length || self[0] === before[0])\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = self.attr('sf-repeat-this');\r\n\t\t\tself.removeAttr('sf-repeat-this');\r\n\t\t\tvar controller = sf.controller.modelName(this);\r\n\r\n\t\t\tvar content = this.outerHTML;\r\n\r\n\t\t\t// Check if the element was already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-id|sf-bind-list/.test(content))\r\n\t\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\t\tvar data = loopParser(controller, content, script, targetNode);\r\n\t\t\tif(data){\r\n\t\t\t\tself.remove();\r\n\t\t\t\t\r\n\t\t\t\tdata = $(data);\r\n\t\t\t\tif(after)\r\n\t\t\t\t\tdata.insertBefore(after);\r\n\t\t\t\telse if(before)\r\n\t\t\t\t\tdata.insertAfter(before);\r\n\t\t\t\telse\r\n\t\t\t\t\tparent.append(data);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tself.attr('sf-bind-list', script.split(' in ')[1]);\r\n\t\t\t\tclearElementData(this);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t// Reset model properties\r\n\t// Don't call if the removed element is TEXT or #comment\r\n\tfunction DOMNodeRemoved(element){\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\t$('[sf-bind-id], [sf-bind-list], [sf-bounded], [sf-repeat-this]', element).each(function(){\r\n\t\t\tremoveBinding(this, model);\r\n\t\t});\r\n\r\n\t\tremoveBinding(element);\r\n\t}\r\n\r\n\t$(function(){\r\n\t\tif(typeof MutationObserver === 'function' && MutationObserver.prototype.observe){\r\n\t\t\tvar observer = new MutationObserver(function(records){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\r\n\t\t\t\tfor(var i in records){\r\n\t\t\t\t\tfor(var a in records[i].removedNodes){\r\n\t\t\t\t\t\tvar tagName = records[i].removedNodes[a].nodeName;\r\n\t\t\t\t\t\tif(tagName !== 'TEXT' || tagName !== '#comment') continue;\r\n\t\t\t\t\t\tDOMNodeRemoved(records[i].removedNodes[a]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tobserver.observe(document.body, { childList: true, subtree: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.body.addEventListener('DOMNodeRemoved', function(e){\r\n\t\t\t\tif(bindingEnabled){\r\n\t\t\t\t\tvar tagName = e.target.nodeName;\r\n\t\t\t\t\tif(tagName !== 'TEXT' || tagName !== '#comment') return;\r\n\t\t\t\t\tDOMNodeRemoved(e.target);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tvar removeBinding = function(element, modelNames){\r\n\t\tif(!element.attributes) return;\r\n\r\n\t\tvar attrs = element.attributes;\r\n\t\tif(attrs['sf-bind-id']){\r\n\t\t\tvar id = attrs['sf-bind-id'].value;\r\n\r\n\t\t\tif(!bindRef[id]) return;\r\n\t\t\tvar ref = bindRef[id];\r\n\r\n\t\t\tfor (var i = 0; i < ref.propertyName.length; i++) {\r\n\t\t\t\tvar value = ref.object[ref.propertyName[i]];\r\n\t\t\t\tObject.defineProperty(ref.object, ref.propertyName[i], {\r\n\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\tenumerable:true,\r\n\t\t\t\t\twritable:true,\r\n\t\t\t\t\tvalue:value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tdelete bindRef[id];\r\n\r\n\t\t\t// Remove callback left\r\n\t\t\tvar cache = bindRef.cache\r\n\t\t\tfor(var i in cache){\r\n\t\t\t\tif(cache[i].callback && cache[i].callback[id])\r\n\t\t\t\t\tdelete cache[i].callback[id];\r\n\t\t\t\tif($.isEmptyObject(cache[i].callback))\r\n\t\t\t\t\tdelete cache[i];\r\n\t\t\t}\r\n\r\n\t\t\tif(cache[id]){\r\n\t\t\t\tdelete cache[id].attrs;\r\n\t\t\t\tdelete cache[id].innerHTML;\r\n\t\t\t\tdelete cache[id].modelName;\r\n\t\t\t\tdelete cache[id].model;\r\n\t\t\t\tdelete cache[id].created;\r\n\t\t\t\tdelete cache[id].element;\r\n\t\t\t}\r\n\r\n\t\t\tbindRef.length--;\r\n\t\t\tif(bindRef.length === 0)\r\n\t\t\t\tbindRef.index = 0;\r\n\t\t}\r\n\r\n\t\tif(!modelNames) return;\r\n\r\n\t\tvar propertyName = false;\r\n\t\tif(attrs['sf-bind-list'])\r\n\t\t\tpropertyName = attrs['sf-bind-list'].value;\r\n\r\n\t\tif(attrs['sf-repeat-this'])\r\n\t\t\tpropertyName = attrs['sf-repeat-this'].value.split(' in ')[1];\r\n\r\n\t\tif(attrs['sf-bounded'])\r\n\t\t\tpropertyName = attrs['sf-bounded'].value;\r\n\r\n\t\tfor (var i = 0; i < modelNames.length; i++) {\r\n\t\t\tvar modelRef = self.root[modelNames[i]];\r\n\t\t\tif(!modelRef[propertyName]) continue;\r\n\r\n\t\t\tvar value = modelRef[propertyName].slice(0);\r\n\t\t\tObject.defineProperty(modelRef, propertyName, {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable:true,\r\n\t\t\t\twritable:true,\r\n\t\t\t\tvalue:value\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/*{\r\n\t\tid:{\r\n\t\t\tobject,\r\n\t\t\t[propertyName]\r\n\t\t}\r\n\t}*/\r\n\t// For resetting object property it the element was removed from DOM\r\n\tvar bindRef = {length:0, index:0, cache:{}};\r\n\tself.bindRef = bindRef;\r\n\tvar dcBracket = /{{[\\s\\S]*?}}/;\r\n\tvar bindObject = function(element, object, propertyName, which){\r\n\t\tif(!(element instanceof Node))\r\n\t\t\telement = element[0];\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = element;\r\n\r\n\t\t// First initialization\r\n\t\tvar id = bindRef.index;\r\n\t\t$(element).attr('sf-bind-id', id);\r\n\r\n\t\tbindRef.index++;\r\n\t\tbindRef.length++;\r\n\t\tbindRef.cache[id] = {};\r\n\t\tvar cache = bindRef.cache[id];\r\n\r\n\t\tcache.attrs = {};\r\n\t\tcache.innerHTML = '';\r\n\t\tcache.modelName = sf.controller.modelName(element);\r\n\t\tcache.model = self.root[cache.modelName];\r\n\t\tcache.created = Date.now();\r\n\r\n\t\tif(which === 'attr' || !which){\r\n\t\t\tfor(var i in element.attributes){\r\n\t\t\t\t// Check if it has a bracket\r\n\t\t\t\tif(!dcBracket.test(element.attributes[i].value))\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tvar attrName = element.attributes[i].name;\r\n\t\t\t\tcache.attrs[attrName] = element.attributes[i].value;\r\n\r\n\t\t\t\tif(attrName === 'value')\r\n\t\t\t\t\telement.removeAttribute(attrName);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(which === 'html' || !which)\r\n\t\t\tcache.innerHTML = element.innerHTML;\r\n\r\n\t\t// Get current object reference\r\n\t\tif(!bindRef[id]) bindRef[id] = {object:object, propertyName:[]};\r\n\t\tbindRef[id].propertyName.push(propertyName);\r\n\r\n\t\tcache.element = $(element);\r\n\t\tvar callbackFunction = function(){\r\n\t\t\tif(which === 'attr' || !which){\r\n\t\t\t\tfor(var name in cache.attrs){\r\n\t\t\t\t\tif(cache.attrs[name].indexOf(propertyName) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tvar temp = dataParser(cache.attrs[name], cache.model, false, cache.modelName);\r\n\t\t\t\t\tif(name === 'value')\r\n\t\t\t\t\t\tcache.element.val(temp);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tcache.element.attr(name, temp);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(which === 'html' || !which){\r\n\t\t\t\tvar temp = uniqueDataParser(cache.innerHTML, cache.model, false, cache.modelName);\r\n\t\t\t\ttemp = dataParser(temp, cache.model, false, cache.modelName);\r\n\t\t\t\tcache.element.html(temp);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif(cache.model[propertyName] === undefined) throw \"Property '\"+propertyName+\"' was not found on '\"+cache.modelName+\"' model\";\r\n\t\tif(Object.getOwnPropertyDescriptor(cache.model, propertyName)['set']){\r\n\t\t\tfor(var i in bindRef){\r\n\t\t\t\tif(cache.model === bindRef[i].object && bindRef[i].propertyName.indexOf(propertyName) !== -1){\r\n\t\t\t\t\tbindRef.cache[i].callback[id] = callbackFunction;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tcache.callback = {};\r\n\t\tcache.callback[id] = callbackFunction;\r\n\r\n\t\tvar objValue = object[propertyName]; // Object value\r\n\t\tObject.defineProperty(object, propertyName, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\t\t\tget:function(){\r\n\t\t\t\treturn objValue;\r\n\t\t\t},\r\n\t\t\tset:function(val){\r\n\t\t\t\tobjValue = val;\r\n\r\n\t\t\t\tfor(var i in cache.callback){\r\n\t\t\t\t\tcache.callback[i]();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn objValue;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tself.bindElement = function(element, which){\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar html = element.outerHTML;\r\n\r\n\t\t// Check if the child element was already bound to prevent vulnerability\r\n\t\tif(/sf-bind-id|sf-bind-list/.test(html))\r\n\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\tif(which === 'attr')\r\n\t\t\thtml = html.replace(element.innerHTML, '');\r\n\r\n\t\tvar brackets = /{{([\\s\\S]*?)}}/g;\r\n\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(model);\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(model[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\t\tvar s1, s2 = null;\r\n\t\twhile((s1 = brackets.exec(html)) !== null){\r\n\t\t\twhile ((s2 = scopeMask.exec(s1[1])) !== null) {\r\n\t\t\t\tbindObject(element, model, s2[1], which);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.queuePreprocess = function(targetNode){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar excludes = ['html','head','style','link','meta','script','object','iframe'];\r\n\t\tfor (var i = 0; i < excludes.length; i++) {\r\n\t\t\texcludes[i] = excludes[i].toUpperCase();\r\n\t\t}\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = 0; i < childNodes.length; i++) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\t\t\tif(excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\r\n\t\t\t\t// Skip element and it's childs that already bound to prevent vulnerability\r\n\t\t\t\tif(attrs['sf-bind-id'] || attrs['sf-repeat-this'] || attrs['sf-bind-list']) continue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tcurrentNode.setAttribute('sf-preprocess', 'attronly');\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = temp.concat(self.queuePreprocess(currentNode));\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tcurrentNode.parentNode.setAttribute('sf-preprocess', '');\r\n\r\n\t\t\t\t\t// Reset Siblings\r\n\t\t\t\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\t\t\t\ttemp[a].removeAttribute('sf-preprocess');\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttemp.push(currentNode.parentNode);\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn temp;\r\n\t}\r\n\r\n\tself.parsePreprocess = function(nodes){\r\n\t\tfor (var a = 0; a < nodes.length; a++) {\r\n\t\t\tvar model = sf.controller.modelName(nodes[a]);\r\n\t\t\tnodes[a].removeAttribute('sf-preprocess');\r\n\r\n\t\t\tif(!self.root[model])\r\n\t\t\t\treturn console.error(\"Can't parse element because model for '\"+model+\"' was not found\", nodes[a]);\r\n\r\n\t\t\t// Get reference for debugging\r\n\t\t\tprocessingElement = nodes[a];\r\n\r\n\t\t\t// Double check if the child element already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-id|sf-bind-list/.test(nodes[a].innerHTML)){\r\n\t\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\t\tconsole.log($(processingElement.outerHTML)[0]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif($(nodes[a]).attr('sf-bind'))\r\n\t\t\t\tself.bindElement(nodes[a], $(nodes[a]).attr('sf-bind'));\r\n\r\n\t\t\t// Avoid editing the outerHTML because it will remove the bind\r\n\t\t\tvar temp = uniqueDataParser(nodes[a].innerHTML, self.root[model], false, model);\r\n\t\t\tnodes[a].innerHTML = dataParser(temp, self.root[model], false, model);\r\n\t\t\tfor (var i = 0; i < nodes[a].attributes.length; i++) {\r\n\t\t\t\tif(nodes[a].attributes[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\tnodes[a].attributes[i].value = dataParser(nodes[a].attributes[i].value, self.root[model], false, model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();","sf.router = new function(){\r\n\tvar self = this;\r\n\tself.loading = false;\r\n\tself.enabled = false;\r\n\tself.pauseRenderOnTransition = false;\r\n\tself.currentPage = [];\r\n\tvar initialized = false;\r\n\tvar lazyRouting = false;\r\n\tvar currentRouterURL = '';\r\n\r\n\t// Should be called if not using lazy page load\r\n\tself.init = function(targetNode){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init();\r\n\t\t\t});\r\n\r\n\t\t// Reinit lazy router\r\n\t\tself.lazy();\r\n\r\n\t\t// Run 'before' event for new page view\r\n\t\t$('[sf-controller], [sf-page]', $(targetNode)[0]).each(function(){\r\n\t\t\tif(this.attributes['sf-controller'])\r\n\t\t\t\tsf.controller.run(this.attributes['sf-controller'].value);\r\n\t\t\t\r\n\t\t\tif(this.attributes['sf-page']){\r\n\t\t\t\tvar name = this.attributes['sf-page'].value;\r\n\t\t\t\tbeforeEvent(name);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tinitialized = true;\r\n\t\tcurrentRouterURL = window.location.pathname;\r\n\t}\r\n\r\n\tself.enable = function(status){\r\n\t\tif(status === undefined) status = true;\r\n\t\tif(self.enabled === status) return;\r\n\t\tself.enabled = status;\r\n\r\n\t\tif(status)\r\n\t\t\tself.lazy();\r\n\t\telse{\r\n\t\t\t$('a[href][onclick]').each(function(){\r\n\t\t\t\tvar current = $(this);\r\n\t\t\t\tif(current.attr('onclick') === 'return sf.router.load(this)')\r\n\t\t\t\t\tcurrent.removeAttr('onclick');\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('popstate', function(event) {\r\n\t\t\t// Don't continue if the last routing was error\r\n\t\t\tif(routingError){\r\n\t\t\t\troutingError = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\troutingBack = true;\r\n\t\t\tself.goto(window.location.pathname);\r\n\t\t}, false);\r\n\t}\r\n\r\n\tvar before = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.before = function(name, func, index){\r\n\t\tif(!before[name])\r\n\t\t\tbefore[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(before[name].indexOf(func) === -1)\r\n\t\t\t\tbefore[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tbefore[name][index] = func;\r\n\t}\r\n\r\n\tvar after = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.after = function(name, func, index){\r\n\t\tif(!after[name])\r\n\t\t\tafter[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(after[name].indexOf(func) === -1)\r\n\t\t\t\tafter[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tafter[name][index] = func;\r\n\t}\r\n\r\n\tvar root_ = function(scope){\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.model.root[scope] = {};\r\n\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.controller.run(scope);\r\n\t\t\r\n\t\treturn sf.model.root[scope];\r\n\t}\r\n\r\n\t// Running 'before' new page going to be displayed\r\n\tvar beforeEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.push(name);\r\n\r\n\t\tif(before[name]){\r\n\t\t\tfor (var i = 0; i < before[name].length; i++) {\r\n\t\t\t\tbefore[name][i](root_);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Running 'after' old page going to be removed\r\n\tvar afterEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.splice(self.currentPage.indexOf(name), 1);\r\n\r\n\t\tif(after[name]){\r\n\t\t\tfor (var i = 0; i < after[name].length; i++) {\r\n\t\t\t\tafter[name][i](root_);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar onEvent = {\r\n\t\t'loading':[],\r\n\t\t'loaded':[],\r\n\t\t'special':[],\r\n\t\t'error':[]\r\n\t};\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\tself.lazyViewPoint = {};\r\n\t/*\r\n\t\t{\r\n\t\t\toldURlPattern:{\r\n\t\t\t\tnewURLPattern:'.viewPoint'\r\n\t\t\t}\r\n\t\t}\r\n\t*/\r\n\tself.lazy = function(){\r\n\t\tif(!self.enabled) return;\r\n\r\n\t\t$('a[href]:not([onclick])').each(function(){\r\n\t\t\tvar url = this.href;\r\n\t\t\tif(url.indexOf('#') !== -1)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(url.indexOf(window.location.origin) !== 0 && url.charAt(0) !== '/')\r\n\t\t\t\treturn; //Not current domain origin\r\n\r\n\t\t\t$(this).attr('onclick', 'return sf.router.load(this)');\r\n\t\t});\r\n\t}\r\n\r\n\tself.load = function(elem){\r\n\t\tif(!history.pushState || $(elem).attr('sf-router') == 'ignore')\r\n\t\t\treturn true;\r\n\r\n\t\treturn !self.goto(elem.href.replace(window.location.origin, ''));\r\n\t}\r\n\r\n\tvar RouterLoading = false;\r\n\tvar routingBack = false;\r\n\tvar routingError = false;\r\n\tself.goto = function(path, data, method){\r\n\t\tif(!method) method = 'GET';\r\n        else method = method.toUpperCase();\r\n\r\n\t\tfor (var i = 0; i < onEvent['loading'].length; i++) {\r\n\t\t\tif(onEvent['loading'][i](path)) return;\r\n\t\t}\r\n\t\tvar oldPath = window.location.pathname;\r\n\t\tinitialized = false;\r\n\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\t\tRouterLoading = $.ajax({\r\n\t\t\turl:window.location.origin + path,\r\n\t\t\tmethod:method,\r\n            data:Object.assign(data, {\r\n                _scarlets:'.dynamic.'\r\n            }),\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\tif(initialized) return;\r\n\t\t\t\tlazyRouting = true;\r\n\r\n\t\t\t\t// Run 'loaded' event\r\n\t\t\t\tRouterLoading = false;\r\n\r\n\t\t\t\t// Find special data\r\n\t\t\t\tvar regex = RegExp('<!-- SF-Special:(.*?)-->'+sf.regex.avoidQuotes, 'gm');\r\n\t\t\t\tvar special = regex.exec(data);\r\n\t\t\t\tif(special && special.length !== 1){\r\n\t\t\t\t\tspecial = special[1].split('--|&>').join('-->');\r\n\t\t\t\t\tspecial = JSON.parse(special);\r\n\r\n\t\t\t\t\tif(!$.isEmptyObject(special)){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['special'].length; i++) {\r\n\t\t\t\t\t\t\tif(onEvent['special'][i](special)) return;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DOMReference = false;\r\n\t\t\t\tvar foundAction = function(ref){\r\n\t\t\t\t\tDOMReference = $(ref);\r\n\r\n\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\tafterEvent($('[sf-page]', DOMReference[0]).attr('sf-page'));\r\n\r\n\t\t\t\t\t// Redefine title if exist\r\n\t\t\t\t\tif(special && special.title)\r\n\t\t\t\t\t\t$('head title').html(special.title);\r\n\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tfor(var oldURL in self.lazyViewPoint){\r\n\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\tfor(var newURL in self.lazyViewPoint[oldURL]){\r\n\t\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\t\tfoundAction(self.lazyViewPoint[oldURL][newURL]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(found) break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When the view point was not found\r\n\t\t\t\tif(!found){\r\n\t\t\t\t\t// Use fallback if exist\r\n\t\t\t\t\tif(sf.router.lazyViewPoint[\"@default\"])\r\n\t\t\t\t\t\tfoundAction(sf.router.lazyViewPoint[\"@default\"]);\r\n\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\t\t\tonEvent['error'][i]('sf.router.lazyViewPoint[\"'+oldURL+'\"][\"'+newURL+'\"] was not found');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reinit lazy router\r\n\t\t\t\tself.lazy();\r\n\r\n\t\t\t\t// Run 'before' event for new page view\r\n\t\t\t\tif(!DOMReference) DOMReference = $(document.body);\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', 'none');\r\n\r\n\t\t\t\t// Let page script running first, then update the data binding\r\n\t\t\t\tDOMReference.html(data);\r\n\r\n\t\t\t\t// Parse the DOM data binding\r\n\t\t\t\tsf.model.init(DOMReference);\r\n\r\n\t\t\t\t// Init template to model binding\r\n\t\t\t\t$('[sf-page]', DOMReference[0]).each(function(){\r\n\t\t\t\t\tif(this.attributes['sf-page'])\r\n\t\t\t\t\t\tbeforeEvent(this.attributes['sf-page'].value);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', '');\r\n\r\n\t\t\t\trouterLoaded(currentRouterURL, path, DOMReference);\r\n\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tlazyRouting = false;\r\n\r\n\t\t\t\tcurrentRouterURL = path;\r\n\t\t\t\troutingError = false;\r\n\t\t\t},\r\n\t\t\terror:function(xhr, data){\r\n\t\t\t\troutingError = true;\r\n\t\t\t\tif(xhr.aborted) return;\r\n\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\tonEvent['error'][i](xhr.status, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Back on error\r\n\t\t\t\twindow.history.back();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!routingBack)\r\n\t\t\twindow.history.pushState(null, \"\", path);\r\n\r\n\t\troutingBack = false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Trigger loaded event\r\n\tfunction routerLoaded(currentRouterURL, path, data){\r\n\t\tfor (var i = 0; i < onEvent['loaded'].length; i++) {\r\n\t\t\tonEvent['loaded'][i](currentRouterURL, path, data);\r\n\t\t}\r\n\t}\r\n};"]}