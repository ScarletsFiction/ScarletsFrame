{"version":3,"sources":["sf-a_init.js","sf-controller.js","sf-loader.js","sf-model.js","sf-router.js","sf-virtual_scroll.js"],"names":["sf","_sf","apply","this","arguments","toString","constructor","Function","loader","onFinish","internal","regex","avoidQuotes","strictVar","$","fn","jQuery","Dom7","extend","obj","func","animateCSS","animationName","callback","duration","self","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","undefined","style","css","addClass","one","setTimeout","removeClass","controller","pending","active","for","name","modelScope","element","elem","model","modelName","bindedList","attr","parents","root","bindedListIndex","prevAll","length","attributes","value","run","listenSFClick","e","target","script","eq","_modelScope","modelKeys","scopeMask","RegExp","replace","full","matched","split","method","method_","eval","shift","join","pop","console","error","root_","scope","DOMWasLoaded","init","parent","document","body","each","on","loadedContent","totalContent","whenDOMLoaded","whenProgress","indexOf","push","onProgress","f","i","removeAttribute","list","splice","temp","getElementsByTagName","innerHTML","js","ajax","url","dataType","cache","complete","everythingLoaded","setInterval","test","readyState","clearInterval","router","prototype","setAttribute","bindingEnabled","processingElement","bracketMatch","chackValidFunctionCall","allowedFunction","localEval","script_","_model_","_content_","preventExecution","check","exec","trim","_result_","log","outerHTML","_evaled_","index","tagName","modelRef","keys","Object","clearElementData","current","cleanData","dataParser","html","mask","runEval","variableList","itemMask","actual","slice","charCodeAt","uniqueDataParser","take","passVar","currentIndex","strDeclare","firstTime","key","JSON","stringify","VarPass_","VarPass","s1","obtained","forEach","val","bindArray","propertyName","targetNode","parentNode","htmlParsedData","oldArray","editProperty","refreshTimer","processElement","options","exist","getAttribute","$virtual","DOMCursor","dom","children","childElementCount","clearTimeout","refresh","item","all","first","prev","prepend","insertAfter","remove","create","insertBefore","update","currentRemoved","startRemove","propertyProxy","subject","defineProperty","enumerable","configurable","lastLength","Array","real","limit","foundChanges","compareObject","classList","contains","createElement","virtual_scroll","handle","obj1","obj2","loopParser","content","returns","items","get","set","softRefresh","bindInput","whichVar","removeAttr","keyup","bindObject","alreadyInitialized","DOMNodeRemoved","removeBinding","Node","parsePreprocess","queuePreprocess","ceiling","add","floor","append","styles","window","getComputedStyle","absHeight","parseFloat","Math","ceil","offsetHeight","after","next","before","data","MutationObserver","observe","records","a","removedNodes","nodeName","childList","subtree","addEventListener","modelNames","attrs","id","bindRef","ref","object","writable","isEmptyObject","created","dcBracket","which","Date","now","attrName","callbackFunction","getOwnPropertyDescriptor","objValue","bindElement","brackets","s2","childNodes","excludes","toUpperCase","currentNode","nodeType","concat","nodeValue","nodes","loading","enabled","pauseRenderOnTransition","currentPage","initialized","currentRouterURL","lazy","beforeEvent","location","pathname","enable","status","event","routingError","routingBack","goto","onEvent","loaded","special","lazyViewPoint","href","origin","charAt","load","history","pushState","RouterLoading","path","abort","assign","_scarlets","success","parse","DOMReference","foundAction","afterEvent","title","found","oldURL","newURL","routerLoaded","xhr","aborted","back","refreshScrollBounding","cursor","bounding","prepareCount","offsetTop","preparedLength","dCursor","scrollHeight","scrollTo","scroller","refreshVirtualSpacer","virtual","reduce","updating","scrollTop","vCursor","nextElementSibling","insertAdjacentElement","insertCount","previousElementSibling","removeUserScrollFocus","overflow","getAbsoluteHeight","el","margin","parseInt","querySelector","destroy","off","resetViewport","visibleLength","clientHeight","parentElement","firstElementChild","ceilingHeight","floorHeight","lastElementChild","refreshScrollBounding2","height","previousCeiling","nextFloor","dynamicHeight","offsetTo","force","checkCursorPosition","fromCeiling","scrollFocused","changes","vDOM","moveElementCursor","navigator","userAgent","staticHeight"],"mappings":"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","file":"scarletsframe.min.js","sourcesContent":["sf = function(){\r\n\tif(arguments[0].constructor === Function){\r\n\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\t}\r\n};\r\n\r\nsf.internal = {};\r\nsf.regex = {\r\n\t// ToDo: Need help to skip escaped quote\r\n\tavoidQuotes:'(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)',\r\n\tstrictVar:'(?=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )'\r\n};\r\n\r\nif(typeof $ === 'undefined' || !$.fn){\r\n\tif(typeof jQuery !== 'undefined')\r\n\t\t$ = jQuery;\r\n\telse if(typeof Dom7 !== 'undefined')\r\n\t\t$ = Dom7;\r\n\telse\r\n\t\tthrow \"Please load jQuery before ScarletsFrame\";\r\n}\r\n\r\nif(!$.fn.extend){\r\n\t$.fn.extend = function(obj){\r\n\t\tfor(var func in obj){\r\n\t\t\t$.fn[func] = obj[func];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Add animate.css feature on jQuery\r\n$.fn.extend({\r\n  animateCSS: function(animationName, callback, duration) {\r\n\tvar self = this;\r\n\tvar animationEnd = {\r\n\t\tanimation: 'animationend',\r\n\t\tOAnimation: 'oAnimationEnd',\r\n\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t};\r\n\r\n\tfor (var t in animationEnd)\r\n\t\tif (self[0].style[t] !== undefined){\r\n\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\tif(duration)\r\n\t\tself.css('-webkit-animation-duration', duration+'s').css('animation-duration', duration+'s');\r\n\r\n\tself.addClass('animated ' + animationName).one(animationEnd, function(){\r\n\t\tsetTimeout(function(){\r\n\t\t\t$(self).removeClass('animated ' + animationName);\r\n\t\t}, 1);\r\n\r\n\t\tif(duration)\r\n\t\t\t$(self).css('-webkit-animation-duration', '').css('animation-duration', '');\r\n\r\n\t\tif (typeof callback === 'function') callback();\r\n\t});\r\n\r\n\treturn self;\r\n  }\r\n});","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tself.pending = {};\r\n\tself.active = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tself.pending[name] = func;\r\n\t}\r\n\r\n\tself.modelScope = function(element, func){\r\n\t\tvar elem = $(element);\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = elem.attr('[sf-bind-list]');\r\n\t\tif(!bindedList)\r\n\t\t\tbindedList = elem.parents('[sf-bind-list]').attr('sf-bind-list');\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(sf.model.root[model], -1);\r\n\t\t\telse return sf.model.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = elem.parents('[sf-bind-list]').prevAll('[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(sf.model.root[model][bindedList], bindedListIndex);\r\n\t\telse return sf.model.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.modelName = function(element){\r\n\t\tvar name = undefined;\r\n\t\tif(element.attributes['sf-controller'])\r\n\t\t\tname = element.attributes['sf-controller'].value;\r\n\t\telse\r\n\t\t\tname = $(element).parents('[sf-controller]').attr('sf-controller');\r\n\r\n\t\t// Initialize it first\r\n\t\tif(name !== undefined && !self.active[name])\r\n\t\t\tself.run(name);\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = $(e.target);\r\n\t\tvar script = element.attr('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = element.parents('[sf-click]').eq(0);\r\n\t\t\tscript = element.attr('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = element.parents('[sf-controller]').attr('sf-controller');\r\n\r\n\t\tif(!sf.model.root[model])\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar _modelScope = sf.model.root[model];\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(_modelScope);\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+modelKeys+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tscript = script.replace(scopeMask, function(full, matched){\r\n\t\t\treturn '_modelScope.'+matched;\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script[0];\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(e) {\r\n\t\t\tmethod = false;\r\n\t\t}\r\n\r\n\t\tif(!method){\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot find '+method_+']\\n', e.target);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript.shift();\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0)\r\n\t\t\tscript = eval('['+script+']');\r\n\t\tif(!script)\r\n\t\t\tscript = [];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element[0], script);\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', e.target, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tvar root_ = function(scope){\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.model.root[scope] = {};\r\n\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.controller.run(scope);\r\n\t\t\r\n\t\treturn sf.model.root[scope];\r\n\t}\r\n\t// Deprecated\r\n\tself.run = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.run(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(self.pending[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\t\t\r\n\t\t\tself.pending[name](sf.model.root[name], root_);\r\n\t\t\tself.active[name] = true;\r\n\t\t\tdelete self.pending[name];\r\n\t\t}\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], root_);\r\n\t}\r\n\r\n\tself.init = function(parent){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(name);\r\n\t\t\t});\r\n\r\n\t\t$('[sf-controller]', parent ? $(parent)[0] : document.body).each(function(){\r\n\t\t\tself.run(this.attributes['sf-controller'].value);\r\n\t\t});\r\n\t}\r\n\r\n\t// Create listener for sf-click\r\n\t$(document).one('DOMContentLoaded', function(){\r\n\t\t$(document.body).on('click', '[sf-click]', listenSFClick);\r\n\t});\r\n}","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 0;\r\n\tself.DOMWasLoaded = false;\r\n\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t\tif(element && element.removeAttribute) element.removeAttribute('onload');\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length!==0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tvar temp = '';\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\ttemp += '<link onload=\"sf.loader.f(this);\" rel=\"stylesheet\" href=\"'+list[i]+'\">';\r\n\t\t}\r\n\r\n\t\t$(function(){\r\n\t\t\tdocument.getElementsByTagName('body')[0].innerHTML += temp;\r\n\t\t});\r\n\t}\r\n\r\n\tself.js = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length!==0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\t$.ajax({\r\n\t\t\t  url: list[i],\r\n\t\t\t  dataType: \"script\",\r\n\t\t\t  cache: true,\r\n\t\t\t  complete: sf.loader.f\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(function(){\r\n\t\tif(self.totalContent === 0)\r\n\t\t\tself.loadedContent = self.totalContent = 1;\r\n\t}, 10000);\r\n\tvar everythingLoaded = setInterval(function() {\r\n\tif (/loaded|complete/.test(document.readyState)) {\r\n\t\tif(self.loadedContent < self.totalContent || self.loadedContent === 0)\r\n\t\t\treturn;\r\n\r\n\t\tclearInterval(everythingLoaded);\r\n\t\tself.DOMWasLoaded = true;\r\n\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\ttry{\r\n\t\t\t\twhenDOMLoaded[i]();\r\n\t\t\t} catch(e){\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\twhenProgress.splice(0);\r\n\t\twhenDOMLoaded.splice(0);\r\n\r\n\t\t// Last init\r\n\t\tsf.controller.init();\r\n\t\tsf.model.init();\r\n\t\tsf.router.init();\r\n\t}\r\n\t}, 100);\r\n};\r\nsf.prototype.constructor = sf.loader.onFinish;\r\n\r\n// Find images\r\n$(function(){\r\n\t$('img:not(onload)[src]').each(function(){\r\n\t\tsf.loader.totalContent++;\r\n\t\tthis.setAttribute('onload', \"sf.loader.f(this)\");\r\n\t});\r\n});","// Data save and HTML content binding\r\nsf.model = function(scope){\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\tif(sf.controller.pending[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n};\r\n\r\n(function(){\r\n\tvar self = sf.model;\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\r\n\tvar processingElement = null;\r\n\r\n\tvar bracketMatch = RegExp('([\\\\w.]*?[\\\\S\\\\s])\\\\('+sf.regex.avoidQuotes, 'g');\r\n\tvar chackValidFunctionCall = /[a-zA-Z0-9 \\]\\$\\)]/;\r\n\tvar allowedFunction = [':', 'for', 'if', 'while', '_content_.take', 'console.log'];\r\n\tvar localEval = function(script_, _model_, _modelScope, _content_){\r\n\t\tvar script = script_;\r\n\t\tscript_ = script_.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*'); // ToDo: Escape\r\n\t\tscript_ = script_.split('._modelScope').join('');\r\n\t\tscript_ = script_.split('._model_').join('');\r\n\r\n\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\tvar preventExecution = false;\r\n\t\tvar check = null;\r\n\t\twhile((check = bracketMatch.exec(script_)) !== null){\r\n\t\t\tcheck[1] = check[1].trim();\r\n\r\n\t\t\tif(allowedFunction.indexOf(check[1]) === -1 &&\r\n\t\t\t\tcheck[1].split('.')[0] !== '_modelScope' &&\r\n\t\t\t\tchackValidFunctionCall.test(check[1][check[1].length-1])\r\n\t\t\t){\r\n\t\t\t\tpreventExecution = check[1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar _result_ = '';\r\n\t\tscript_ = script_.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\"); // ToDo: Unescape\r\n\t\tif(preventExecution){\r\n\t\t\tconsole.error(\"Trying to executing unrecognized function (\"+preventExecution+\")\");\r\n\t\t\tconsole.log($(processingElement.outerHTML)[0]);\r\n\t\t\tconsole.log(script_);\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\ttry{\r\n\t\t\tvar _evaled_ = eval(script_);\r\n\t\t} catch(e){\r\n\t\t\tconsole.error(e);\r\n\t\t\tconsole.log(script_);\r\n\t\t\tconsole.log($(processingElement.outerHTML)[0]);\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\tself.index = function(element){\r\n\t\treturn $(element).prevAll(element.tagName).length;\r\n\t}\r\n\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\t\t\r\n\t\tfunc(self(name), self);\r\n\t}\r\n\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys.join('|');\r\n\t}\r\n\r\n\tvar clearElementData = function(current){\r\n\t\t// Clean associated data on jQuery\r\n\t\tif($ && $.cleanData)\r\n\t\t\t$.cleanData(current.getElementsByTagName(\"*\"));\r\n\r\n\t\tcurrent.innerHTML = '';\r\n\t\tfor (var i = 0; i < current.attributes.length; i++) {\r\n\t\t\tvar name = current.attributes[i].name;\r\n\t\t\tif(name !== 'sf-bind-list')\r\n\t\t\t\tcurrent.removeAttribute(name);\r\n\t\t}\r\n\t\tcurrent.setAttribute('style', 'display:none');\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval){\r\n\t\tvar _modelScope = self.root[scope];\r\n\t\tif(!runEval) runEval = '';\r\n\t\t\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(_modelScope);\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(_modelScope[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\treturn html.replace(/{{([^@][\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = temp.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*'); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\r\n\t\t\ttemp = temp.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\"); // ToDo: Unescape\r\n\r\n\t\t\t// Evaluate\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(/[\\u00A0-\\u9999<>\\&]/gim, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\t}\r\n\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(!passVar)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Disable function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('').split(')').join('');\r\n\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\thtml = html.replace(/{\\[([\\s\\S]*?)\\]}/g, function(full, matched){\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope)+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\treturn html.replace(/{{(@[\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = temp.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*'); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\t\t\ttemp = temp.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\"); // ToDo: Unescape\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length != 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\t\t\t\r\n\t\t\t\t// If condition was meet\r\n\t\t\t\tif(localEval.apply(self.root, [check[0], _model_, _modelScope, _content_])){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\treturn check.join(':');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass_ = /(var|let)([\\w,\\s]+)(?=\\s(?==|in|of))/g;\r\n\t\t\tvar VarPass = [];\r\n\t\t\tvar s1 = null;\r\n\t\t\twhile((s1 = VarPass_.exec(temp)) !== null){\r\n\t\t\t\tVarPass.push(s1[2]);\r\n\t\t\t}\r\n\t\t\tif(VarPass.length){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/([\\n\\t\\r]|  )+/g, '').split(',').forEach(function(val){\r\n\t\t\t\t\t\tobtained.push(val);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':(typeof '+VarPass[i]+'!=\"undefined\"?'+VarPass[i]+':undefined)';\r\n\t\t\t\t}\r\n\t\t\t\tVarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\t\t\ttemp = temp.split('&VarPass&').join('{}'); \r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length != 1){\r\n\t\t\t\tcheck = check[1].split('&lt;').join('<').split('&gt;').join('>').split('&amp;').join('&');\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, [check, _model_, _modelScope, _content_]);\r\n\t\t\t\treturn temp;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\t}\r\n\r\n\tvar bindArray = function(html, list, mask, modelName, propertyName, targetNode, parentNode, htmlParsedData){\r\n\t\tvar oldArray = list.slice(0);\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'softRefresh', 'hardRefresh'];\r\n\t\tvar refreshTimer = -1;\r\n\t\tvar processElement = function(index, options){\r\n\t\t\tvar exist = $(\"[sf-controller='\"+modelName+\"']\", targetNode);\r\n\t\t\tif(exist.length === 0){\r\n\t\t\t\tif(targetNode.getAttribute('sf-controller') === modelName)\r\n\t\t\t\t\texist = targetNode;\r\n\t\t\t\telse return;\r\n\t\t\t}\r\n\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar exist = [];\r\n\r\n\t\t\t\tvar length = list.$virtual.DOMCursor;\r\n\t\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\t\texist.push(list.$virtual.dom.children[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlength = parentNode[0].childElementCount - 2;\r\n\t\t\t\tfor (var i = 1; i <= length; i++) {\r\n\t\t\t\t\texist.push(parentNode[0].children[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlength = list.length - length - list.$virtual.DOMCursor;\r\n\t\t\t\tfor (var i = list.$virtual.DOMCursor; i < length; i++) {\r\n\t\t\t\t\texist.push(list.$virtual.dom.children[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\texist = $(exist);\r\n\r\n\t\t\t\tclearTimeout(refreshTimer);\r\n\t\t\t\trefreshTimer = setTimeout(function(){\r\n\t\t\t\t\tlist.$virtual.refresh(true);\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse exist = $(\"[sf-bind-list='\"+propertyName+\"']\", exist);\r\n\r\n\t\t\tvar callback = false;\r\n\t\t\tif(self.root[modelName]['on$'+propertyName])\r\n\t\t\t\tcallback = self.root[modelName]['on$'+propertyName];\r\n\r\n\t\t\t// Hard refresh\r\n\t\t\tif(index === -1){\r\n\t\t\t\tvar item = self.root[modelName][propertyName];\r\n\t\t\t\tvar all = '';\r\n\t\t\t\tfor (var i = 0; i < item.length; i++) {\r\n\t\t\t\t\tvar temp = uniqueDataParser(html, item[i], mask, modelName);\r\n\t\t\t\t\tall += dataParser(temp, item[i], mask, modelName);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Get first element\r\n\t\t\t\tvar first = exist.eq(0).prev();\r\n\t\t\t\tif(first[0] === exist[0])\r\n\t\t\t\t\texist.parent().prepend(all);\r\n\t\t\t\telse\r\n\t\t\t\t\t$(all).insertAfter(first);\r\n\t\t\t\texist.remove();\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(options === 'remove'){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\tif(exist.length <= 1)\r\n\t\t\t\t\t\t\treturn clearElementData(exist[index]);\r\n\r\n\t\t\t\t\t\texist[index].remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(callback.remove){\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tsetTimeout(startRemove, 800);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse startRemove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Create or update\r\n\t\t\tvar item = self.root[modelName][propertyName][index];\r\n\r\n\t\t\tvar temp = uniqueDataParser(html, item, mask, modelName);\r\n\t\t\ttemp = dataParser(temp, item, mask, modelName);\r\n\t\t\ttemp = $(temp);\r\n\r\n\t\t\t// Create\r\n\t\t\tif(!exist[index] || options === 'insertAfter'){\r\n\t\t\t\tif(callback.create)\r\n\t\t\t\t\tcallback.create(temp[0]);\r\n\r\n\t\t\t\ttemp.insertAfter(exist[index !== 0 ? index - 1 : (exist.length - 1)]);\r\n\t\t\t}\r\n\r\n\t\t\telse{\r\n\t\t\t\t// Create\r\n\t\t\t\tif(options === 'insertBefore'){\r\n\t\t\t\t\tif(callback.create)\r\n\t\t\t\t\t\tcallback.create(temp[0]);\r\n\r\n\t\t\t\t\ttemp.insertBefore(exist[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(callback.update)\r\n\t\t\t\t\t\tcallback.update(temp[0]);\r\n\r\n\t\t\t\t\t// Clean associated data on jQuery\r\n\t\t\t\t\tif($ && $.cleanData){\r\n\t\t\t\t\t\t$.cleanData(exist[index].getElementsByTagName(\"*\"));\r\n\t\t\t\t\t\t$.cleanData(exist[index]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\texist[index].outerHTML = temp[0].outerHTML;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = undefined;\r\n\t\t\t\t\tvar lastLength = this.length;\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(lastLength - 1, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'push')\r\n\t\t\t\t\t\tprocessElement(lastLength, 'add');\r\n\r\n\t\t\t\t\telse if(name === 'shift')\r\n\t\t\t\t\t\tprocessElement(0, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\t// Removing data\r\n\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\tif(real < 0) real = lastLength + real;\r\n\r\n\t\t\t\t\t\tvar limit = arguments[1];\r\n\t\t\t\t\t\tif(!limit && limit !== 0) limit = oldArray.length;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor (var i = limit - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tprocessElement(real + i, 'remove');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(arguments.length >= 3){ // Inserting data\r\n\t\t\t\t\t\t\tlimit = arguments.length - 2;\r\n\t\t\t\t\t\t\tfor (var i = 0; i < limit; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(real + i, 'insertAfter');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift')\r\n\t\t\t\t\t\tprocessElement(0, 'insertBefore');\r\n\r\n\t\t\t\t\telse if(name === 'softRefresh'){\r\n\t\t\t\t\t\tif(arguments[0] || arguments[0] === 0)\r\n\t\t\t\t\t\t\tprocessElement(arguments[0], !!oldArray[arguments[0]] ? 'add':'remove');\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tvar foundChanges = false;\r\n\r\n\t\t\t\t\t\t\t// Removal\r\n\t\t\t\t\t\t\tif(oldArray.length > this.length){\r\n\t\t\t\t\t\t\t\tfor (var i = oldArray.length - 1; i >= this.length; i--) {\r\n\t\t\t\t\t\t\t\t\tif(this.indexOf(oldArray[i]) === -1){\r\n\t\t\t\t\t\t\t\t\t\tfoundChanges = true;\r\n\t\t\t\t\t\t\t\t\t\tprocessElement(i, 'remove');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Creates\r\n\t\t\t\t\t\t\tif(oldArray.length < this.length){\r\n\t\t\t\t\t\t\t\tfor (var i = oldArray.length - 1; i < this.length; i++) {\r\n\t\t\t\t\t\t\t\t\tfoundChanges = true;\r\n\t\t\t\t\t\t\t\t\tprocessElement(i, 'insertBefore');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Update\r\n\t\t\t\t\t\t\tfor (var i = 0; i < this.length; i++) {\r\n\t\t\t\t\t\t\t\tif(compareObject(oldArray[i], this[i]) === false){\r\n\t\t\t\t\t\t\t\t\tfoundChanges = true;\r\n\t\t\t\t\t\t\t\t\tprocessElement(i, 'add');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(foundChanges)\r\n\t\t\t\t\t\t\t\toldArray = this.slice(0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(name === 'hardRefresh')\r\n\t\t\t\t\t\tprocessElement(-1, 'remove');\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\toldArray = this.slice(0);\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// parentNode[0] = element, [1] = child scroll height\r\n\t\tif(parentNode && parentNode[0].classList.contains('sf-virtual-list')){\r\n\t\t\tObject.defineProperty(list, '$virtual', {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue:{}\r\n\t\t\t});\r\n\r\n\t\t\t// Parse in virtual DOM\r\n\t\t\tlist.$virtual.dom = document.createElement('div');\r\n\t\t\tlist.$virtual.dom.innerHTML = htmlParsedData;\r\n\r\n\t\t\tsf.internal.virtual_scroll.handle(list, targetNode, parentNode[0]);\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction compareObject(obj1, obj2){\r\n\t\tif(!obj1 || !obj2)\r\n\t\t\treturn false;\r\n\r\n\t\tfor(var i in obj1){\r\n\t\t\tif(typeof obj1[i] !== 'object' && obj1[i] !== obj2[i])\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tvar loopParser = function(name, content, script, targetNode, parentNode){\r\n\t\tvar returns = '';\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\r\n\t\tif(!self.root[name])\r\n\t\t\treturn console.error(\"Can't parse element because model for '\"+name+\"' was not found\", $(content)[0]);\r\n\r\n\t\tvar items = self.root[name][method[1]];\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = $(content).attr('sf-bind-list', method[1])[0];\r\n\r\n\t\tcontent = processingElement.outerHTML;\r\n\t\tcontent = content.replace(/  +|\\t+/g, '');\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tfor(var i in items){\r\n\t\t\t\tvar item = items[i];\r\n\r\n\t\t\t\ttemp = uniqueDataParser(content, item, mask, name);\r\n\t\t\t\ttemp = dataParser(temp, item, mask, name);\r\n\t\t\t\treturns += temp;\r\n\t\t\t}\r\n\t\t\tObject.defineProperty(self.root[name], method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tfor (var i = 0; i < val.length; i++) {\r\n\t\t\t\t\t\tif(items[i]){\r\n\t\t\t\t\t\t\titems[i] = val[i];\r\n\t\t\t\t\t\t\titems.softRefresh(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse items.push(val[i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(items.length > val.length)\r\n\t\t\t\t\t\titems.splice(val.length);\r\n\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tbindArray(content, items, mask, name, method[1], targetNode, parentNode, returns);\r\n\t\t}\r\n\t\treturn returns;\r\n\t}\r\n\r\n\tvar bindInput = function(targetNode){\r\n\t\t$('input[sf-bound]', targetNode).each(function(){\r\n\t\t\tvar element = $(this);\r\n\t\t\tvar model = element.parents('[sf-controller]').attr('sf-controller');\r\n\t\t\tif(!model) return;\r\n\r\n\t\t\tvar whichVar = element.attr('sf-bound');\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(typeof self.root[model][whichVar] === undefined){\r\n\t\t\t\tconsole.error('Cannot get reference for self.root[\"' + model + '\"][\"' + whichVar+'\"]');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement.attr('sf-bounded', whichVar);\r\n\t\t\telement.removeAttr('sf-bound');\r\n\r\n\t\t\t// Bound key up\r\n\t\t\telement.keyup(function(e){\r\n\t\t\t\tself.root[model][whichVar] = element.val();\r\n\t\t\t});\r\n\r\n\t\t\t// Bind value\r\n\t\t\telement.attr('value', '{{'+whichVar+'}}');\r\n\t\t\tbindObject(element, self.root[model], whichVar, 'attr');\r\n\t\t});\r\n\t}\r\n\r\n\tvar alreadyInitialized = false;\r\n\tself.init = function(targetNode){\r\n\t\tif(alreadyInitialized && !targetNode) return;\r\n\t\talreadyInitialized = true;\r\n\t\tsetTimeout(function(){\r\n\t\t\talreadyInitialized = false;\r\n\t\t}, 50);\r\n\r\n\t\tif(targetNode){\r\n\t\t\tif(!(targetNode instanceof Node))\r\n\t\t\t\ttargetNode = $(targetNode)[0];\r\n\t\t}\r\n\t\telse targetNode = document.body;\r\n\r\n\t\tself.parsePreprocess(self.queuePreprocess(targetNode));\r\n\t\tbindInput(targetNode);\r\n\r\n\t\t$('[sf-repeat-this]', targetNode).each(function(){\r\n\t\t\tvar self = $(this);\r\n\t\t\tvar parent = self.parent();\r\n\r\n\t\t\tif(this.parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\t\tvar tagName = $(this.parentNode).children('[sf-repeat-this]')[0].tagName;\r\n\t\t\t\tvar ceiling = document.createElement(tagName);\r\n\t\t\t\tceiling.classList.add('virtual-spacer');\r\n\t\t\t\tceiling.classList.add('ceiling');\r\n\t\t\t\t//ceiling.style.transform = 'scaleY(0)';\r\n\t\t\t\tthis.parentNode.prepend(ceiling);\r\n\r\n\t\t\t\tvar floor = document.createElement(tagName);\r\n\t\t\t\tfloor.classList.add('virtual-spacer');\r\n\t\t\t\tfloor.classList.add('floor');\r\n\t\t\t\t//floor.style.transform = 'scaleY(0)';\r\n\t\t\t\tthis.parentNode.append(floor);\r\n\r\n\t\t\t\t// His total scrollHeight\r\n\t\t\t\tvar styles = window.getComputedStyle(this);\r\n\t\t\t\tvar absHeight = parseFloat(styles['marginTop']) + parseFloat(styles['marginBottom']);\r\n\t\t\t\tstyles = null;\r\n\r\n\t\t\t\t// Element height + margin\r\n\t\t\t\tabsHeight = Math.ceil(this.offsetHeight + absHeight);\r\n\t\t\t}\r\n\r\n\t\t\tvar after = self.next();\r\n\t\t\tif(!after.length || self[0] === after[0])\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = self.prev();\r\n\t\t\tif(!before.length || self[0] === before[0])\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = self.attr('sf-repeat-this');\r\n\t\t\tself.removeAttr('sf-repeat-this');\r\n\t\t\tvar controller = sf.controller.modelName(this);\r\n\r\n\t\t\tvar content = this.outerHTML;\r\n\r\n\t\t\t// Check if the element was already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-id|sf-bind-list/.test(content))\r\n\t\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\t\tif(this.parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\t\tloopParser(controller, content, script, targetNode, [this.parentNode, absHeight]);\r\n\t\t\t\tself.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar data = loopParser(controller, content, script, targetNode);\r\n\t\t\tif(data){\r\n\t\t\t\tself.remove();\r\n\t\t\t\t\r\n\t\t\t\tdata = $(data);\r\n\t\t\t\tif(after)\r\n\t\t\t\t\tdata.insertBefore(after);\r\n\t\t\t\telse if(before)\r\n\t\t\t\t\tdata.insertAfter(before);\r\n\t\t\t\telse\r\n\t\t\t\t\tparent.append(data);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tself.attr('sf-bind-list', script.split(' in ')[1]);\r\n\t\t\t\tclearElementData(this);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t// Reset model properties\r\n\t// Don't call if the removed element is TEXT or #comment\r\n\tfunction DOMNodeRemoved(element){\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\t$('[sf-bind-id], [sf-bind-list], [sf-bounded], [sf-repeat-this]', element).each(function(){\r\n\t\t\tremoveBinding(this, model);\r\n\t\t});\r\n\r\n\t\tremoveBinding(element);\r\n\t}\r\n\r\n\t$(function(){\r\n\t\tif(typeof MutationObserver === 'function' && MutationObserver.prototype.observe){\r\n\t\t\tvar observer = new MutationObserver(function(records){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\r\n\t\t\t\tfor(var i in records){\r\n\t\t\t\t\tfor(var a in records[i].removedNodes){\r\n\t\t\t\t\t\tvar tagName = records[i].removedNodes[a].nodeName;\r\n\t\t\t\t\t\tif(tagName !== 'TEXT' || tagName !== '#comment') continue;\r\n\t\t\t\t\t\tDOMNodeRemoved(records[i].removedNodes[a]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tobserver.observe(document.body, { childList: true, subtree: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.body.addEventListener('DOMNodeRemoved', function(e){\r\n\t\t\t\tif(bindingEnabled){\r\n\t\t\t\t\tvar tagName = e.target.nodeName;\r\n\t\t\t\t\tif(tagName !== 'TEXT' || tagName !== '#comment') return;\r\n\t\t\t\t\tDOMNodeRemoved(e.target);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tvar removeBinding = function(element, modelNames){\r\n\t\tif(!element.attributes) return;\r\n\r\n\t\tvar attrs = element.attributes;\r\n\t\tif(attrs['sf-bind-id']){\r\n\t\t\tvar id = attrs['sf-bind-id'].value;\r\n\r\n\t\t\tif(!bindRef[id]) return;\r\n\t\t\tvar ref = bindRef[id];\r\n\r\n\t\t\tfor (var i = 0; i < ref.propertyName.length; i++) {\r\n\t\t\t\tvar value = ref.object[ref.propertyName[i]];\r\n\t\t\t\tObject.defineProperty(ref.object, ref.propertyName[i], {\r\n\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\tenumerable:true,\r\n\t\t\t\t\twritable:true,\r\n\t\t\t\t\tvalue:value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tdelete bindRef[id];\r\n\r\n\t\t\t// Remove callback left\r\n\t\t\tvar cache = bindRef.cache\r\n\t\t\tfor(var i in cache){\r\n\t\t\t\tif(cache[i].callback && cache[i].callback[id])\r\n\t\t\t\t\tdelete cache[i].callback[id];\r\n\t\t\t\tif($.isEmptyObject(cache[i].callback))\r\n\t\t\t\t\tdelete cache[i];\r\n\t\t\t}\r\n\r\n\t\t\tif(cache[id]){\r\n\t\t\t\tdelete cache[id].attrs;\r\n\t\t\t\tdelete cache[id].innerHTML;\r\n\t\t\t\tdelete cache[id].modelName;\r\n\t\t\t\tdelete cache[id].model;\r\n\t\t\t\tdelete cache[id].created;\r\n\t\t\t\tdelete cache[id].element;\r\n\t\t\t}\r\n\r\n\t\t\tbindRef.length--;\r\n\t\t\tif(bindRef.length === 0)\r\n\t\t\t\tbindRef.index = 0;\r\n\t\t}\r\n\r\n\t\tif(!modelNames) return;\r\n\r\n\t\tvar propertyName = false;\r\n\t\tif(attrs['sf-bind-list']){\r\n\t\t\tpropertyName = attrs['sf-bind-list'].value;\r\n\t\t}\r\n\r\n\t\tif(attrs['sf-repeat-this'])\r\n\t\t\tpropertyName = attrs['sf-repeat-this'].value.split(' in ')[1];\r\n\r\n\t\tif(attrs['sf-bounded'])\r\n\t\t\tpropertyName = attrs['sf-bounded'].value;\r\n\r\n\t\tfor (var i = 0; i < modelNames.length; i++) {\r\n\t\t\tvar modelRef = self.root[modelNames[i]];\r\n\t\t\tif(!modelRef[propertyName]) continue;\r\n\r\n\t\t\tvar value = modelRef[propertyName].slice(0);\r\n\t\t\tObject.defineProperty(modelRef, propertyName, {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable:true,\r\n\t\t\t\twritable:true,\r\n\t\t\t\tvalue:value\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/*{\r\n\t\tid:{\r\n\t\t\tobject,\r\n\t\t\t[propertyName]\r\n\t\t}\r\n\t}*/\r\n\t// For resetting object property it the element was removed from DOM\r\n\tvar bindRef = {length:0, index:0, cache:{}};\r\n\tself.bindRef = bindRef;\r\n\tvar dcBracket = /{{[\\s\\S]*?}}/;\r\n\tvar bindObject = function(element, object, propertyName, which){\r\n\t\tif(!(element instanceof Node))\r\n\t\t\telement = element[0];\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = element;\r\n\r\n\t\t// First initialization\r\n\t\tvar id = bindRef.index;\r\n\t\t$(element).attr('sf-bind-id', id);\r\n\r\n\t\tbindRef.index++;\r\n\t\tbindRef.length++;\r\n\t\tbindRef.cache[id] = {};\r\n\t\tvar cache = bindRef.cache[id];\r\n\r\n\t\tcache.attrs = {};\r\n\t\tcache.innerHTML = '';\r\n\t\tcache.modelName = sf.controller.modelName(element);\r\n\t\tcache.model = self.root[cache.modelName];\r\n\t\tcache.created = Date.now();\r\n\r\n\t\tif(which === 'attr' || !which){\r\n\t\t\tfor(var i in element.attributes){\r\n\t\t\t\t// Check if it has a bracket\r\n\t\t\t\tif(!dcBracket.test(element.attributes[i].value))\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tvar attrName = element.attributes[i].name;\r\n\t\t\t\tcache.attrs[attrName] = element.attributes[i].value;\r\n\r\n\t\t\t\tif(attrName === 'value')\r\n\t\t\t\t\telement.removeAttribute(attrName);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(which === 'html' || !which)\r\n\t\t\tcache.innerHTML = element.innerHTML;\r\n\r\n\t\t// Get current object reference\r\n\t\tif(!bindRef[id]) bindRef[id] = {object:object, propertyName:[]};\r\n\t\tbindRef[id].propertyName.push(propertyName);\r\n\r\n\t\tcache.element = $(element);\r\n\t\tvar callbackFunction = function(){\r\n\t\t\tif(which === 'attr' || !which){\r\n\t\t\t\tfor(var name in cache.attrs){\r\n\t\t\t\t\tif(cache.attrs[name].indexOf(propertyName) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tvar temp = dataParser(cache.attrs[name], cache.model, false, cache.modelName);\r\n\t\t\t\t\tif(name === 'value')\r\n\t\t\t\t\t\tcache.element.val(temp);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tcache.element.attr(name, temp);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(which === 'html' || !which){\r\n\t\t\t\tvar temp = uniqueDataParser(cache.innerHTML, cache.model, false, cache.modelName);\r\n\t\t\t\ttemp = dataParser(temp, cache.model, false, cache.modelName);\r\n\t\t\t\tcache.element.html(temp);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif(cache.model[propertyName] === undefined) throw \"Property '\"+propertyName+\"' was not found on '\"+cache.modelName+\"' model\";\r\n\t\tif(Object.getOwnPropertyDescriptor(cache.model, propertyName)['set']){\r\n\t\t\tfor(var i in bindRef){\r\n\t\t\t\tif(cache.model === bindRef[i].object && bindRef[i].propertyName.indexOf(propertyName) !== -1){\r\n\t\t\t\t\tbindRef.cache[i].callback[id] = callbackFunction;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tcache.callback = {};\r\n\t\tcache.callback[id] = callbackFunction;\r\n\r\n\t\tvar objValue = object[propertyName]; // Object value\r\n\t\tObject.defineProperty(object, propertyName, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\t\t\tget:function(){\r\n\t\t\t\treturn objValue;\r\n\t\t\t},\r\n\t\t\tset:function(val){\r\n\t\t\t\tobjValue = val;\r\n\r\n\t\t\t\tfor(var i in cache.callback){\r\n\t\t\t\t\tcache.callback[i]();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn objValue;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tself.bindElement = function(element, which){\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar html = element.outerHTML;\r\n\r\n\t\t// Check if the child element was already bound to prevent vulnerability\r\n\t\tif(/sf-bind-id|sf-bind-list/.test(html))\r\n\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\tif(which === 'attr')\r\n\t\t\thtml = html.replace(element.innerHTML, '');\r\n\r\n\t\tvar brackets = /{{([\\s\\S]*?)}}/g;\r\n\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(model);\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(model[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\t\tvar s1, s2 = null;\r\n\t\twhile((s1 = brackets.exec(html)) !== null){\r\n\t\t\twhile ((s2 = scopeMask.exec(s1[1])) !== null) {\r\n\t\t\t\tbindObject(element, model, s2[1], which);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.queuePreprocess = function(targetNode){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar excludes = ['html','head','style','link','meta','script','object','iframe'];\r\n\t\tfor (var i = 0; i < excludes.length; i++) {\r\n\t\t\texcludes[i] = excludes[i].toUpperCase();\r\n\t\t}\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = 0; i < childNodes.length; i++) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\t\t\tif(excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\r\n\t\t\t\t// Skip element and it's childs that already bound to prevent vulnerability\r\n\t\t\t\tif(attrs['sf-bind-id'] || attrs['sf-repeat-this'] || attrs['sf-bind-list']) continue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tcurrentNode.setAttribute('sf-preprocess', 'attronly');\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = temp.concat(self.queuePreprocess(currentNode));\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tcurrentNode.parentNode.setAttribute('sf-preprocess', '');\r\n\r\n\t\t\t\t\t// Reset Siblings\r\n\t\t\t\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\t\t\t\ttemp[a].removeAttribute('sf-preprocess');\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttemp.push(currentNode.parentNode);\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn temp;\r\n\t}\r\n\r\n\tself.parsePreprocess = function(nodes){\r\n\t\tfor (var a = 0; a < nodes.length; a++) {\r\n\t\t\tvar model = sf.controller.modelName(nodes[a]);\r\n\t\t\tnodes[a].removeAttribute('sf-preprocess');\r\n\r\n\t\t\tif(!self.root[model])\r\n\t\t\t\treturn console.error(\"Can't parse element because model for '\"+model+\"' was not found\", nodes[a]);\r\n\r\n\t\t\t// Get reference for debugging\r\n\t\t\tprocessingElement = nodes[a];\r\n\r\n\t\t\t// Double check if the child element already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-id|sf-bind-list/.test(nodes[a].innerHTML)){\r\n\t\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\t\tconsole.log($(processingElement.outerHTML)[0]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif($(nodes[a]).attr('sf-bind'))\r\n\t\t\t\tself.bindElement(nodes[a], $(nodes[a]).attr('sf-bind'));\r\n\r\n\t\t\t// Avoid editing the outerHTML because it will remove the bind\r\n\t\t\tvar temp = uniqueDataParser(nodes[a].innerHTML, self.root[model], false, model);\r\n\t\t\tnodes[a].innerHTML = dataParser(temp, self.root[model], false, model);\r\n\t\t\tfor (var i = 0; i < nodes[a].attributes.length; i++) {\r\n\t\t\t\tif(nodes[a].attributes[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\tnodes[a].attributes[i].value = dataParser(nodes[a].attributes[i].value, self.root[model], false, model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();","sf.router = new function(){\r\n\tvar self = this;\r\n\tself.loading = false;\r\n\tself.enabled = false;\r\n\tself.pauseRenderOnTransition = false;\r\n\tself.currentPage = [];\r\n\tvar initialized = false;\r\n\tvar lazyRouting = false;\r\n\tvar currentRouterURL = '';\r\n\r\n\t// Should be called if not using lazy page load\r\n\tself.init = function(targetNode){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init();\r\n\t\t\t});\r\n\r\n\t\t// Reinit lazy router\r\n\t\tself.lazy();\r\n\r\n\t\t// Run 'before' event for new page view\r\n\t\t$('[sf-controller], [sf-page]', $(targetNode)[0]).each(function(){\r\n\t\t\tif(this.attributes['sf-controller'])\r\n\t\t\t\tsf.controller.run(this.attributes['sf-controller'].value);\r\n\t\t\t\r\n\t\t\tif(this.attributes['sf-page']){\r\n\t\t\t\tvar name = this.attributes['sf-page'].value;\r\n\t\t\t\tbeforeEvent(name);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tinitialized = true;\r\n\t\tcurrentRouterURL = window.location.pathname;\r\n\t}\r\n\r\n\tself.enable = function(status){\r\n\t\tif(status === undefined) status = true;\r\n\t\tif(self.enabled === status) return;\r\n\t\tself.enabled = status;\r\n\r\n\t\tif(status)\r\n\t\t\tself.lazy();\r\n\t\telse{\r\n\t\t\t$('a[href][onclick]').each(function(){\r\n\t\t\t\tvar current = $(this);\r\n\t\t\t\tif(current.attr('onclick') === 'return sf.router.load(this)')\r\n\t\t\t\t\tcurrent.removeAttr('onclick');\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('popstate', function(event) {\r\n\t\t\t// Don't continue if the last routing was error\r\n\t\t\tif(routingError){\r\n\t\t\t\troutingError = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\troutingBack = true;\r\n\t\t\tself.goto(window.location.pathname);\r\n\t\t}, false);\r\n\t}\r\n\r\n\tvar before = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.before = function(name, func, index){\r\n\t\tif(!before[name])\r\n\t\t\tbefore[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(before[name].indexOf(func) === -1)\r\n\t\t\t\tbefore[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tbefore[name][index] = func;\r\n\t}\r\n\r\n\tvar after = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.after = function(name, func, index){\r\n\t\tif(!after[name])\r\n\t\t\tafter[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(after[name].indexOf(func) === -1)\r\n\t\t\t\tafter[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tafter[name][index] = func;\r\n\t}\r\n\r\n\tvar root_ = function(scope){\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.model.root[scope] = {};\r\n\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.controller.run(scope);\r\n\t\t\r\n\t\treturn sf.model.root[scope];\r\n\t}\r\n\r\n\t// Running 'before' new page going to be displayed\r\n\tvar beforeEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.push(name);\r\n\r\n\t\tif(before[name]){\r\n\t\t\tfor (var i = 0; i < before[name].length; i++) {\r\n\t\t\t\tbefore[name][i](root_);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Running 'after' old page going to be removed\r\n\tvar afterEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.splice(self.currentPage.indexOf(name), 1);\r\n\r\n\t\tif(after[name]){\r\n\t\t\tfor (var i = 0; i < after[name].length; i++) {\r\n\t\t\t\tafter[name][i](root_);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar onEvent = {\r\n\t\t'loading':[],\r\n\t\t'loaded':[],\r\n\t\t'special':[],\r\n\t\t'error':[]\r\n\t};\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\tself.lazyViewPoint = {};\r\n\t/*\r\n\t\t{\r\n\t\t\toldURlPattern:{\r\n\t\t\t\tnewURLPattern:'.viewPoint'\r\n\t\t\t}\r\n\t\t}\r\n\t*/\r\n\tself.lazy = function(){\r\n\t\tif(!self.enabled) return;\r\n\r\n\t\t$('a[href]:not([onclick])').each(function(){\r\n\t\t\tvar url = this.href;\r\n\t\t\tif(url.indexOf('#') !== -1)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(url.indexOf(window.location.origin) !== 0 && url.charAt(0) !== '/')\r\n\t\t\t\treturn; //Not current domain origin\r\n\r\n\t\t\t$(this).attr('onclick', 'return sf.router.load(this)');\r\n\t\t});\r\n\t}\r\n\r\n\tself.load = function(elem){\r\n\t\tif(!history.pushState || $(elem).attr('sf-router') == 'ignore')\r\n\t\t\treturn true;\r\n\r\n\t\treturn !self.goto(elem.href.replace(window.location.origin, ''));\r\n\t}\r\n\r\n\tvar RouterLoading = false;\r\n\tvar routingBack = false;\r\n\tvar routingError = false;\r\n\tself.goto = function(path, data, method){\r\n\t\tif(!method) method = 'GET';\r\n        else method = method.toUpperCase();\r\n\r\n\t\tfor (var i = 0; i < onEvent['loading'].length; i++) {\r\n\t\t\tif(onEvent['loading'][i](path)) return;\r\n\t\t}\r\n\t\tvar oldPath = window.location.pathname;\r\n\t\tinitialized = false;\r\n\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\t\tRouterLoading = $.ajax({\r\n\t\t\turl:window.location.origin + path,\r\n\t\t\tmethod:method,\r\n            data:Object.assign(data, {\r\n                _scarlets:'.dynamic.'\r\n            }),\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\tif(initialized) return;\r\n\t\t\t\tlazyRouting = true;\r\n\r\n\t\t\t\t// Run 'loaded' event\r\n\t\t\t\tRouterLoading = false;\r\n\r\n\t\t\t\t// Find special data\r\n\t\t\t\tvar regex = RegExp('<!-- SF-Special:(.*?)-->'+sf.regex.avoidQuotes, 'gm');\r\n\t\t\t\tvar special = regex.exec(data);\r\n\t\t\t\tif(special && special.length !== 1){\r\n\t\t\t\t\tspecial = special[1].split('--|&>').join('-->');\r\n\t\t\t\t\tspecial = JSON.parse(special);\r\n\r\n\t\t\t\t\tif(!$.isEmptyObject(special)){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['special'].length; i++) {\r\n\t\t\t\t\t\t\tif(onEvent['special'][i](special)) return;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DOMReference = false;\r\n\t\t\t\tvar foundAction = function(ref){\r\n\t\t\t\t\tDOMReference = $(ref);\r\n\r\n\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\tafterEvent($('[sf-page]', DOMReference[0]).attr('sf-page'));\r\n\r\n\t\t\t\t\t// Redefine title if exist\r\n\t\t\t\t\tif(special && special.title)\r\n\t\t\t\t\t\t$('head title').html(special.title);\r\n\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tfor(var oldURL in self.lazyViewPoint){\r\n\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\tfor(var newURL in self.lazyViewPoint[oldURL]){\r\n\t\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\t\tfoundAction(self.lazyViewPoint[oldURL][newURL]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(found) break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When the view point was not found\r\n\t\t\t\tif(!found){\r\n\t\t\t\t\t// Use fallback if exist\r\n\t\t\t\t\tif(sf.router.lazyViewPoint[\"@default\"])\r\n\t\t\t\t\t\tfoundAction(sf.router.lazyViewPoint[\"@default\"]);\r\n\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\t\t\tonEvent['error'][i]('sf.router.lazyViewPoint[\"'+oldURL+'\"][\"'+newURL+'\"] was not found');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reinit lazy router\r\n\t\t\t\tself.lazy();\r\n\r\n\t\t\t\t// Run 'before' event for new page view\r\n\t\t\t\tif(!DOMReference) DOMReference = $(document.body);\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', 'none');\r\n\r\n\t\t\t\t// Let page script running first, then update the data binding\r\n\t\t\t\tDOMReference.html(data);\r\n\r\n\t\t\t\t// Parse the DOM data binding\r\n\t\t\t\tsf.model.init(DOMReference);\r\n\r\n\t\t\t\t// Init template to model binding\r\n\t\t\t\t$('[sf-page]', DOMReference[0]).each(function(){\r\n\t\t\t\t\tif(this.attributes['sf-page'])\r\n\t\t\t\t\t\tbeforeEvent(this.attributes['sf-page'].value);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', '');\r\n\r\n\t\t\t\trouterLoaded(currentRouterURL, path, DOMReference);\r\n\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tlazyRouting = false;\r\n\r\n\t\t\t\tcurrentRouterURL = path;\r\n\t\t\t\troutingError = false;\r\n\t\t\t},\r\n\t\t\terror:function(xhr, data){\r\n\t\t\t\troutingError = true;\r\n\t\t\t\tif(xhr.aborted) return;\r\n\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\tonEvent['error'][i](xhr.status, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Back on error\r\n\t\t\t\twindow.history.back();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!routingBack)\r\n\t\t\twindow.history.pushState(null, \"\", path);\r\n\r\n\t\troutingBack = false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Trigger loaded event\r\n\tfunction routerLoaded(currentRouterURL, path, data){\r\n\t\tfor (var i = 0; i < onEvent['loaded'].length; i++) {\r\n\t\t\tonEvent['loaded'][i](currentRouterURL, path, data);\r\n\t\t}\r\n\t}\r\n};","sf.internal.virtual_scroll = new function(){\r\n\tvar self = this;\r\n\r\n\t// before and after\r\n\tself.prepareCount = 4; // 4, 8, 12, 16, ...\r\n\r\n\tself.handle = function(list, targetNode, parentNode){\r\n\t\tlist.$virtual.dCursor = { // DOM Cursor\r\n\t\t\tceiling:parentNode.querySelector('.virtual-spacer.ceiling'),\r\n\t\t\tfloor:parentNode.querySelector('.virtual-spacer.floor')\r\n\t\t};\r\n\r\n\t\tlist.$virtual.bounding = {\r\n\t\t\tceiling:-1,\r\n\t\t\tfloor:0\r\n\t\t}\r\n\r\n\t\tlist.$virtual.vCursor = { // Virtual Cursor\r\n\t\t\tceiling:null, // for forward direction\r\n\t\t\tfloor:null // for backward direction\r\n\t\t}\r\n\r\n\t\tlist.$virtual.targetNode = parentNode;\r\n\t\tlist.$virtual.DOMCursor = 0; // cursor of first element in DOM tree as a cursor\r\n\r\n\t\tlist.$virtual.scrollHeight = \r\n\t\t\tlist.$virtual.dCursor.floor.offsetTop - \r\n\t\t\tlist.$virtual.dCursor.ceiling.offsetTop;\r\n\r\n\t\tvar scroller = null;\r\n\t\tlist.$virtual.destroy = function(){\r\n\t\t\t$(scroller).off();\r\n\t\t\t$(parentNode).off();\r\n\t\t\tlist.$virtual.dom.innerHTML = '';\r\n\t\t\tdelete list.$virtual;\r\n\t\t}\r\n\r\n\t\tlist.$virtual.resetViewport = function(){\r\n\t\t\tlist.$virtual.visibleLength = Math.floor(scroller.clientHeight / list.$virtual.scrollHeight);\r\n\t\t\tlist.$virtual.preparedLength = list.$virtual.visibleLength + self.prepareCount * 2;\r\n\t\t}\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tif(parentNode.parentElement.classList.contains('simplebar-content'))\r\n\t\t\t\tscroller = parentNode.parentElement;\r\n\t\t\telse scroller = parentNode;\r\n\r\n\t\t\tlist.$virtual.resetViewport();\r\n\t\t\t\r\n\t\t\tif(parentNode.classList.contains('sf-list-dynamic'))\r\n\t\t\t\tdynamicHeight(list, targetNode, parentNode, scroller);\r\n\t\t\telse\r\n\t\t\t\tstaticHeight(list, targetNode, parentNode, scroller);\r\n\t\t}, 500);\r\n\t}\r\n\r\n\t// ToDo: Unfinished\r\n\t// Recommended for a list that have different element height\r\n\tfunction dynamicHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\r\n\t\t// Insert some element until reach visible height\r\n\t\tvar i = null;\r\n\t\tdo{\r\n\t\t\ti = vCursor.floor;\r\n\t\t\tif(i === null) break;\r\n\t\t\tvCursor.floor = i.nextElementSibling;\r\n\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', i);\r\n\t\t} while(floor.offsetTop < scroller.clientHeight);\r\n\r\n\t\tlist.$virtual.visibleLength = parentNode.childElementCount - 2;\r\n\t\tlist.$virtual.preparedLength = list.$virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\tvar temp = vCursor.floor;\r\n\t\t\tif(temp === null) break;\r\n\r\n\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t}\r\n\r\n\t\tvar ceilingHeight = 0;\r\n\t\tvar floorHeight = 0;\r\n\t\tfunction previousCeiling(){\r\n\t\t\tvar temp = null;\r\n\r\n\t\t\t// Add some element on the ceiling\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\ttemp = virtual.dom.lastElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.ceiling = temp.previousElementSibling;\r\n\r\n\t\t\t\tceiling.insertAdjacentElement('afterEnd', temp);\r\n\t\t\t\tceilingHeight -= getAbsoluteHeight(temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(ceilingHeight < 0)\r\n\t\t\t\tceilingHeight = 0;\r\n\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\t// Remove some element on the floor\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\ttemp = floor.previousElementSibling;\r\n\t\t\t\tfloorHeight += getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tvCursor.floor = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.ceiling = virtual.dom.lastElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tfunction nextFloor(){\r\n\t\t\tvar temp = null;\r\n\r\n\t\t\t// Insert some element until reach visible height \r\n\t\t\twhile(floor.offsetTop < scroller.clientHeight){\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\ttemp = virtual.dom.firstElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t// Add extra element based on prepare count\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\tvar temp = vCursor.floor;\r\n\t\t\t\tif(temp === null) break;\r\n\r\n\t\t\t\tif(floorHeight > 0)\r\n\t\t\t\t\tfloorHeight -= getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(floorHeight < 0)\r\n\t\t\t\tfloorHeight = 0;\r\n\r\n\t\t\t// Remove some element on the ceiling\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tvar temp = ceiling.nextElementSibling;\r\n\t\t\t\tceilingHeight += getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\telse vCursor.ceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tvCursor.ceiling = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\t\tfunction refreshScrollBounding2(){\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tbounding.ceiling = -1;\r\n\t\t\telse bounding.ceiling = parentNode.children[self.prepareCount].offsetTop;\r\n\r\n\t\t\tif(vCursor.floor === null)\r\n\t\t\t\tbounding.floor = parentNode.lastElementChild.offsetTop + 1000;\r\n\t\t\telse{\r\n\t\t\t\tvar i = parentNode.childElementCount - self.prepareCount - 2;\r\n\t\t\t\tbounding.floor = floor.offsetTop - parentNode.children[i].offsetTop;\r\n\t\t\t}\r\n\t\t}\r\n\t\trefreshScrollBounding2(0, bounding, list, parentNode);\r\n\r\n\t\tvar updating = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating) return;\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tif(scroller.scrollTop < bounding.ceiling){\r\n\t\t\t\tconsole.log('back');\r\n\t\t\t\tpreviousCeiling();\r\n\t\t\t\trefreshScrollBounding(self.prepareCount, bounding, list, parentNode);\r\n\t\t\t}\r\n\r\n\t\t\telse if(scroller.scrollTop > bounding.floor){\r\n\t\t\t\tconsole.log('front');\r\n\t\t\t\tnextFloor();\r\n\t\t\t\trefreshScrollBounding(self.prepareCount, bounding, list, parentNode);\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$(scroller).on('scroll', checkCursorPosition);\r\n\t}\r\n\r\n\t// Recommended for a list that have similar element height\r\n\tfunction staticHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\r\n\t\t// Insert visible element to dom tree\r\n\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', virtual.dom.firstElementChild);\r\n\t\t}\r\n\r\n\t\tfunction refreshVirtualSpacer(cursor){\r\n\t\t\tif(cursor >= self.prepareCount){\r\n\t\t\t\tceiling.style.height = (cursor - self.prepareCount) * virtual.scrollHeight + 'px';\r\n\t\t\t\tfloor.style.height = (list.length - virtual.preparedLength - cursor) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tceiling.style.height = cursor * virtual.scrollHeight + 'px'; //'0px';\r\n\t\t\t\tfloor.style.height = list.length * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\r\n\t\trefreshVirtualSpacer(0);\r\n\t\trefreshScrollBounding(self.prepareCount, bounding, list, parentNode);\r\n\t\tbounding.ceiling = -1;\r\n\r\n\t\tvirtual.offsetTo = function(index){\r\n\t\t\treturn index * virtual.scrollHeight + ceiling.offsetTop;\r\n\t\t}\r\n\r\n\t\tvar vCursor = list.$virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\tvar cursor = virtual.DOMCursor;\r\n\r\n\t\t\t// Force move cursor if element in the DOM tree was overloaded\r\n\t\t\tif(force || parentNode.childElementCount - 2 > virtual.preparedLength){\r\n\t\t\t\tvirtual.DOMCursor = list.length;\r\n\t\t\t\tscrollTo(cursor <= self.prepareCount ? cursor : (cursor + self.prepareCount),\r\n\t\t\t\t\tlist,\r\n\t\t\t\t\tself.prepareCount,\r\n\t\t\t\t\tparentNode,\r\n\t\t\t\t\tscroller,\r\n\t\t\t\t\trefreshVirtualSpacer\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\t\t\tcheckCursorPosition();\r\n\t\t\trefreshScrollBounding(cursor, bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tvar fromCeiling = true;\r\n\t\tvar scrollFocused = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scroller.scrollTop >= bounding.ceiling && scroller.scrollTop <= bounding.floor){\r\n\t\t\t\t// Fix chrome scroll anchoring bugs when scrolling at corner\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tif(scroller.scrollTop === 0 || scroller.scrollTop === scroller.scrollHeight - scroller.clientHeight){\r\n\t\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar cursor = Math.floor(scroller.scrollTop / virtual.scrollHeight);\r\n\t\t\tif(cursor + virtual.preparedLength > list.length)\r\n\t\t\t\tcursor = list.length - virtual.preparedLength;\r\n\r\n\t\t\tif(fromCeiling){\r\n\t\t\t\tif(cursor < self.prepareCount*2)\r\n\t\t\t\t\tcursor -= self.prepareCount;\r\n\r\n\t\t\t\t// Fix chrome scroll anchoring bugs\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t}\r\n\t\t\t\tfromCeiling = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cursor < self.prepareCount){\r\n\t\t\t\tcursor = 0;\r\n\t\t\t\tfromCeiling = true;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tvar changes = cursor - virtual.DOMCursor;\r\n\t\t\tif(cursor + changes >= list.length)\r\n\t\t\t\tchanges = cursor + changes - list.length;\r\n\r\n\t\t\tif(changes === 0){ // This should be fixed to improve performance and future bugs\r\n\t\t\t\t//console.warn(\"No changes (The scroll bounding is not correct)\");\r\n\t\t\t\tupdating = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.DOMCursor = cursor;\r\n\r\n\t\t\t//console.log(cursor, changes);\r\n\r\n\t\t\t//console.log(cursor, changes, bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\t\t\tmoveElementCursor(changes, list);\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\t\t\trefreshScrollBounding(cursor, bounding, list, parentNode);\r\n\t\t\t//console.log('a', bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$(scroller).on('scroll', checkCursorPosition);\r\n\r\n\t\t// For preventing scroll jump if scrolling over than viewport\r\n\t\tif(scroller === parentNode && navigator.userAgent.indexOf('Chrom') !== -1){\r\n\t\t\t$(parentNode).on('mousedown', function(){\r\n\t\t\t\tscrollFocused = true;\r\n\t\t\t});\r\n\t\t\t$(parentNode).on('mouseup', function(){\r\n\t\t\t\tscrollFocused = false;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction refreshScrollBounding(cursor, bounding, list, parentNode){\r\n\t\tvar temp = Math.floor(self.prepareCount / 2); // half of element preparation\r\n\t\tif(cursor < self.prepareCount){\r\n\t\t\tbounding.ceiling = -1;\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount * 2 + 1].offsetTop;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse bounding.ceiling = parentNode.children[temp + 1].offsetTop; // -2 element\r\n\r\n\t\tif(list.$virtual.preparedLength !== undefined && cursor >= list.length - list.$virtual.preparedLength)\r\n\t\t\tbounding.floor = list.$virtual.dCursor.floor.offsetTop + list.$virtual.scrollHeight*2;\r\n\t\telse\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount + 3].offsetTop; // +2 element\r\n\t}\r\n\r\n\tfunction moveElementCursor(changes, list){\r\n\t\tvar vDOM = list.$virtual.dom;\r\n\t\tvar vCursor = list.$virtual.vCursor;\r\n\t\tvar dCursor = list.$virtual.dCursor;\r\n\r\n\t\tif(changes > 0){ // forward\r\n\t\t\tvar ref = 0;\r\n\r\n\t\t\t// Select from virtual ceiling cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tref = vDOM.firstElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.ceiling.nextElementSibling;\r\n\t\t\t\tdCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the ceiling to vDom\r\n\t\t\tfor (var i = changes; i > 0; i--) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.ceiling === null){\r\n\t\t\t\t\tvCursor.ceiling = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('afterBegin', vCursor.ceiling);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t\t\tvCursor.ceiling = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\t\t}\r\n\t\telse if(changes < 0){ // backward\r\n\t\t\tvar ref = 0;\r\n\t\t\tchanges = -changes;\r\n\r\n\t\t\t// Select from virtual floor cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tref = vDOM.lastElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.floor.previousElementSibling;\r\n\t\t\t\tdCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the floor to vDom\r\n\t\t\tfor (var i = 0; i < changes; i++) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvCursor.floor = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('beforeEnd', vCursor.floor);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t\t\tvCursor.floor = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scrollTo(index, list, prepareCount, parentNode, scroller, refreshVirtualSpacer){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar reduce = 0;\r\n\r\n\t\tif(index >= list.length - virtual.preparedLength){\r\n\t\t\treduce -= prepareCount;\r\n\t\t\tindex = list.length - virtual.preparedLength;\r\n\t\t}\r\n\r\n\t\tif(index - virtual.DOMCursor === 0 || index >= list.length) return;\r\n\r\n\t\tupdating = true;\r\n\r\n\t\t// Already on DOM tree\r\n\t\tif((virtual.DOMCursor === 0 && index < prepareCount + prepareCount/2) ||\r\n\t\t\t(virtual.DOMCursor + prepareCount/2 > index\r\n\t\t\t&& virtual.DOMCursor + prepareCount < index))\r\n\t\t\tscroller.scrollTop = parentNode.children[index - virtual.DOMCursor + 1].offsetTop;\r\n\r\n\t\t// Move cursor\r\n\t\telse {\r\n\t\t\tvar temp = null;\r\n\t\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\t\tvar floor = virtual.dCursor.floor;\r\n\t\t\tvar vCursor = virtual.vCursor;\r\n\r\n\t\t\t// DOM tree to virtual DOM\r\n\t\t\tvar length = parentNode.childElementCount - 2;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\r\n\t\t\t\t\tif(i === length-1)\r\n\t\t\t\t\t\tvCursor.floor = temp;\r\n\t\t\t\t}\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(index >= prepareCount){\r\n\t\t\t\tif(index < list.length - virtual.preparedLength)\r\n\t\t\t\t\tindex -= prepareCount;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treduce = prepareCount - index;\r\n\t\t\t\tvirtual.DOMCursor = index = 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\r\n\t\t\t// Virtual DOM to DOM tree\r\n\t\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\t\ttemp = virtual.dom.children[index];\r\n\t\t\t\tif(temp === null) break;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t\tvirtual.DOMCursor = index;\r\n\r\n\t\t\tvCursor.floor = virtual.dom.children[index] || null;\r\n\t\t\tvCursor.ceiling = vCursor.floor ? vCursor.floor.previousElementSibling : null;\r\n\r\n\t\t\tif(refreshVirtualSpacer)\r\n\t\t\t\trefreshVirtualSpacer(index);\r\n\r\n\t\t\trefreshScrollBounding(index, virtual.bounding, list, parentNode);\r\n\t\t\tscroller.scrollTop = parentNode.children[prepareCount - reduce + 1].offsetTop;\r\n\t\t}\r\n\r\n\t\tupdating = false;\r\n\t}\r\n\r\n\tfunction removeUserScrollFocus(parentNode){\r\n\t\tparentNode.style.overflow = 'hidden';\r\n\t\tsetTimeout(function(){\r\n\t\t\tparentNode.style.overflow = '';\r\n\t\t}, 50);\r\n\t}\r\n\r\n\tfunction getAbsoluteHeight(el){\r\n\t  var styles = window.getComputedStyle(el);\r\n\t  var margin = parseInt(styles['marginTop']) + parseInt(styles['marginBottom']);\r\n\t  return el.offsetHeight + margin;\r\n\t}\r\n};"]}