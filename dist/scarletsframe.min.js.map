{"version":3,"sources":["sf-a_init.js","sf-controller.js","sf-loader.js","sf-model.js","sf-router.js"],"names":["sf","arguments","constructor","Function","loader","onFinish","apply","regex","avoidQuotes","setTimeout","router","init","$","fn","extend","console","clear","error","animateCSS","animationName","callback","duration","self","this","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","undefined","style","css","addClass","one","removeClass","controller","active","for","name","func","model","root","modelScope","element","elem","modelName","bindedList","attr","parents","bindedListIndex","prevAll","length","attributes","value","listenSFClick","e","target","script","eq","_modelScope","modelKeys","scopeMask","RegExp","replace","full","matched","split","method","method_","eval","shift","join","pop","run","DOMWasLoaded","each","on","loadedContent","totalContent","whenDOMLoaded","whenProgress","indexOf","push","onProgress","f","i","removeAttribute","list","splice","temp","document","getElementsByTagName","innerHTML","js","ajax","url","dataType","cache","success","everythingLoaded","setInterval","test","readyState","clearInterval","prototype","setAttribute","bindingEnabled","processingElement","bracketMatch","chackValidFunctionCall","allowedFunction","localEval","script_","_model_","_content_","preventExecution","check","exec","trim","_result_","log","outerHTML","_evaled_","modelRef","keys","Object","clearElementData","current","dataParser","html","mask","scope","runEval","itemMask","actual","slice","charCodeAt","uniqueDataParser","take","passVar","currentIndex","strDeclare","firstTime","key","JSON","stringify","VarPass","match","obtained","forEach","val","bindArray","propertyName","oldArray","editProperty","processElement","index","update","insertBefore","insertAfter","exist","find","item","all","first","before","parent","prepend","remove","create","currentRemoved","startRemove","propertyProxy","subject","defineProperty","enumerable","configurable","lastLength","Array","real","limit","foundChanges","compareObject","obj1","obj2","loopParser","content","returns","items","get","set","softRefresh","bindInput","whichVar","removeAttr","keyup","bindObject","DOMNodeInserted","DOMNodeRemoved","removeBinding","targetNode","queuePreprocess","parsePreprocess","after","next","data","append","MutationObserver","observe","records","a","addedNodes","removedNodes","tagName","nodeName","body","childList","subtree","addEventListener","modelNames","attrs","id","bindRef","ref","object","writable","isEmptyObject","created","dcBracket","which","Node","Date","now","attrName","callbackFunction","getOwnPropertyDescriptor","objValue","bindElement","brackets","bindable","childNodes","excludes","toUpperCase","currentNode","nodeType","nodeValue","parentNode","loading","enabled","currentPage","initialized","currentRouterURL","lazy","beforeEvent","window","location","pathname","enable","status","DOMReference","onEvent","loaded","special","event","lazyViewPoint","href","origin","charAt","load","history","pushState","goto","RouterLoading","routingBack","path","abort","assign","_scarlets","skipLazyView","found","parse","foundAction","afterEvent","title","oldURL","newURL","routingError","xhr","aborted","back"],"mappings":"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","file":"scarletsframe.min.js","sourcesContent":["if(typeof sf === 'undefined'){\r\n\tsf = function(){\r\n\t\tif(arguments[0].constructor === Function){\r\n\t\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\t\t}\r\n\t};\r\n\tsf.regex = {\r\n\t\t// ToDo: Need help to skip escaped quote\r\n\t\tavoidQuotes:'(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)',\r\n\t};\r\n}\r\n\r\nsetTimeout(function(){\r\n\tsf(sf.router.init);\r\n}, 10);\r\n\r\nif(typeof $ === 'undefined' || !$.fn || !$.fn.extend){\r\n\tsetTimeout(function(){\r\n\t\tconsole.clear();\r\n\t\tconsole.error(\"Please load jQuery before ScarletsFrame\");\r\n\t}, 1000);\r\n}\r\n\r\n// Add animate.css feature on jQuery\r\n$.fn.extend({\r\n  animateCSS: function(animationName, callback, duration) {\r\n\tvar self = this;\r\n\tvar animationEnd = {\r\n\t\tanimation: 'animationend',\r\n\t\tOAnimation: 'oAnimationEnd',\r\n\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t};\r\n\r\n\tfor (var t in animationEnd)\r\n\t\tif (self[0].style[t] !== undefined){\r\n\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\tif(duration)\r\n\t\tself.css('-webkit-animation-duration', duration+'s').css('animation-duration', duration+'s');\r\n\r\n\tself.addClass('animated ' + animationName).one(animationEnd, function(){\r\n\t\tsetTimeout(function(){\r\n\t\t\t$(self).removeClass('animated ' + animationName);\r\n\t\t}, 1);\r\n\r\n\t\tif(duration)\r\n\t\t\t$(self).css('-webkit-animation-duration', '').css('animation-duration', '');\r\n\r\n\t\tif (typeof callback === 'function') callback();\r\n\t});\r\n\r\n\treturn self;\r\n  }\r\n});","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tvar controller = {};\r\n\tself.active = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.model.root[name])\r\n\t\t\tsf.model.root[name] = {};\r\n\r\n\t\tcontroller[name] = func;\r\n\t}\r\n\r\n\tself.modelScope = function(element, func = false){\r\n\t\tvar elem = $(element);\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = elem.attr('[sf-bind-list]');\r\n\t\tif(!bindedList)\r\n\t\t\tbindedList = elem.parents('[sf-bind-list]').attr('sf-bind-list');\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(sf.model.root[model], -1);\r\n\t\t\telse return sf.model.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = elem.parents('[sf-bind-list]').prevAll('[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(sf.model.root[model][bindedList], bindedListIndex);\r\n\t\telse return sf.model.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.modelName = function(element){\r\n\t\tif(element.attributes['sf-controller'])\r\n\t\t\treturn element.attributes['sf-controller'].value;\r\n\t\telse\r\n\t\t\treturn $(element).parents('[sf-controller]').attr('sf-controller');\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = $(e.target);\r\n\t\tvar script = element.attr('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = element.parents('[sf-click]').eq(0);\r\n\t\t\tscript = element.attr('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = element.parents('[sf-model]').attr('sf-model');\r\n\r\n\t\tif(!sf.model.root[model])\r\n\t\t\tmodel = element.parents('[sf-controller]').attr('sf-controller');\r\n\r\n\t\tif(!sf.model.root[model])\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar _modelScope = sf.model.root[model];\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(_modelScope);\r\n\t\tvar scopeMask = RegExp('(?<=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )('+modelKeys+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tscript = script.replace(scopeMask, function(full, matched){\r\n\t\t\treturn '_modelScope.'+matched;\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script[0];\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(e) {\r\n\t\t\tmethod = false;\r\n\t\t}\r\n\r\n\t\tif(!method){\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot find '+method_+']\\n', e.target);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript.shift();\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0)\r\n\t\t\tscript = eval('['+script+']');\r\n\t\tif(!script)\r\n\t\t\tscript = [];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element[0], script);\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', e.target, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tself.run = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.run(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(controller[name]){\r\n\t\t\tif(!self.active[name]){\r\n\t\t\t\tif(controller[name])\r\n\t\t\t\t\tcontroller[name](sf.model.root[name], sf.model.root);\r\n\r\n\t\t\t\tself.active[name] = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], sf.model.root);\r\n\r\n\t\t// Mark as loaded\r\n\t\tif(controller[name])\r\n\t\t\tdelete controller[name];\r\n\t}\r\n\r\n\tself.init = function(){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(name);\r\n\t\t\t});\r\n\r\n\t\t$('[sf-controller]').each(function(){\r\n\t\t\tself.run(this.attributes['sf-controller'].value);\r\n\t\t});\r\n\t}\r\n\r\n\t$(function(){\r\n\t\t// Listen to sf-click\r\n\t\t$('body').on('click', '[sf-controller] [sf-click]', listenSFClick);\r\n\t});\r\n}","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 1;\r\n\tself.DOMWasLoaded = false;\r\n\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t\tif(element && element.removeAttribute) element.removeAttribute('onload');\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length!==0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tvar temp = '';\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\ttemp += '<link onload=\"sf.loader.f(this);\" rel=\"stylesheet\" href=\"'+list[i]+'\">';\r\n\t\t}\r\n\r\n\t\t$(function(){\r\n\t\t\tdocument.getElementsByTagName('body')[0].innerHTML += temp;\r\n\t\t});\r\n\t}\r\n\r\n\tself.js = function(list, target = 'body'){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length!==0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\t$.ajax({\r\n\t\t\t  url: list[i],\r\n\t\t\t  dataType: \"script\",\r\n\t\t\t  cache: true,\r\n\t\t\t  success: sf.loader.f\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tvar everythingLoaded = setInterval(function() {\r\n\tif (/loaded|complete/.test(document.readyState)) {\r\n\t\tclearInterval(everythingLoaded);\r\n\t\tself.DOMWasLoaded = true;\r\n\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\twhenDOMLoaded[i]();\r\n\t\t}\r\n\t\twhenProgress.splice(0);\r\n\t\twhenDOMLoaded.splice(0);\r\n\t}\r\n\t}, 100);\r\n};\r\nsf.prototype.constructor = sf.loader.onFinish;\r\n\r\n// Find images\r\n$(function(){\r\n\t$('img:not(onload)[src]').each(function(){\r\n\t\tsf.loader.totalContent++;\r\n\t\tthis.setAttribute('onload', \"sf.loader.f(this)\");\r\n\t});\r\n});","// Data save and HTML content binding\r\nsf.model = new function(){\r\n\tvar self = this;\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\r\n\tvar processingElement = null;\r\n\r\n\tvar bracketMatch = RegExp('([\\\\w.]*?[\\\\S\\\\s])\\\\('+sf.regex.avoidQuotes, 'g');\r\n\tvar chackValidFunctionCall = /[a-zA-Z0-9 \\]\\$\\)]/;\r\n\tvar allowedFunction = [':', 'for', 'if', 'while', '_content_.take', 'console.log'];\r\n\tvar localEval = function(script_, _model_, _modelScope, _content_){\r\n\t\tvar script = script_;\r\n\t\tscript_ = script_.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*'); // ToDo: Escape\r\n\r\n\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\tvar preventExecution = false;\r\n\t\tvar check = null;\r\n\t\twhile((check = bracketMatch.exec(script_)) !== null){\r\n\t\t\tcheck[1] = check[1].trim();\r\n\r\n\t\t\tif(allowedFunction.indexOf(check[1]) === -1 &&\r\n\t\t\t\tcheck[1].split('.')[0] !== '_modelScope' &&\r\n\t\t\t\tchackValidFunctionCall.test(check[1][check[1].length-1])\r\n\t\t\t){\r\n\t\t\t\tpreventExecution = check[1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar _result_ = '';\r\n\t\tscript_ = script_.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\"); // ToDo: Unescape\r\n\t\tif(preventExecution){\r\n\t\t\tconsole.error(\"Trying to executing unrecognized function (\"+preventExecution+\")\");\r\n\t\t\tconsole.log($(processingElement.outerHTML)[0]);\r\n\t\t\tconsole.log(script_);\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\tvar _evaled_ = eval(script_);\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\tself.for = function(name, func){\r\n\t\tif(!self.root[name])\r\n\t\t\tself.root[name] = {};\r\n\r\n\t\tfunc(self.root[name], self.root);\r\n\t}\r\n\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys.join('|');\r\n\t}\r\n\r\n\tvar clearElementData = function(current){\r\n\t\tcurrent.innerHTML = '';\r\n\t\tfor (var i = 0; i < current.attributes.length; i++) {\r\n\t\t\tvar name = current.attributes[i].name;\r\n\t\t\tif(name !== 'sf-bind-list')\r\n\t\t\t\tcurrent.removeAttribute(name);\r\n\t\t}\r\n\t\tcurrent.setAttribute('style', 'display:none');\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval = ''){\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp('(?<=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )('+self.modelKeys(_modelScope)+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp('(?<=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )'+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\treturn html.replace(/{{([^@].*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = temp.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*'); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\r\n\t\t\ttemp = temp.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\"); // ToDo: Unescape\r\n\r\n\t\t\t// Evaluate\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(/[\\u00A0-\\u9999<>\\&]/gim, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\t}\r\n\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(!passVar)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Disable function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('').split(')').join('');\r\n\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\thtml = html.replace(/{\\[(.*?)\\]}/gs, function(full, matched){\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp('(?<=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )('+self.modelKeys(_modelScope)+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp('(?<=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )'+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\treturn html.replace(/{{(@.*?)}}/gs, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = temp.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*'); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\t\t\ttemp = temp.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\"); // ToDo: Unescape\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length != 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\t\t\t\r\n\t\t\t\t// If condition was meet\r\n\t\t\t\tif(localEval.apply(self.root, [check[0], _model_, _modelScope, _content_])){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\treturn check.join(':');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass = temp.match(/(?<=var|let)[\\w,\\s]+(?=\\s(?==|in|of))/g);\r\n\t\t\tif(VarPass){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/([\\n\\t\\r]|  )+/g, '').split(',').forEach(function(val){\r\n\t\t\t\t\t\tobtained.push(val);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':(typeof '+VarPass[i]+'!=\"undefined\"?'+VarPass[i]+':undefined)';\r\n\t\t\t\t}\r\n\t\t\t\tVarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\t\t\ttemp = temp.split('&VarPass&').join('{}'); \r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length != 1){\r\n\t\t\t\tcheck = check[1].split('&lt;').join('<').split('&gt;').join('>').split('&amp;').join('&');\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, [check, _model_, _modelScope, _content_]);\r\n\t\t\t\treturn temp;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\t}\r\n\r\n\tvar bindArray = function(html, list, mask, modelName, propertyName){\r\n\t\tvar oldArray = list.slice(0);\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'softRefresh', 'hardRefresh'];\r\n\t\tvar processElement = function(index, update = false, insertBefore = false, insertAfter = false){\r\n\t\t\tvar exist = $(\"[sf-model='\"+modelName+\"']\");\r\n\t\t\tif(exist.length === 0)\r\n\t\t\t\texist = $(\"[sf-controller='\"+modelName+\"']\");\r\n\r\n\t\t\tif(exist.length === 0) return;\r\n\t\t\texist = exist.find(\"[sf-bind-list='\"+propertyName+\"']\");\r\n\r\n\t\t\tvar callback = false;\r\n\t\t\tif(self.root[modelName]['on$'+propertyName])\r\n\t\t\t\tcallback = self.root[modelName]['on$'+propertyName];\r\n\r\n\t\t\t// Hard refresh\r\n\t\t\tif(index === -1){\r\n\t\t\t\tvar item = self.root[modelName][propertyName];\r\n\t\t\t\tvar all = '';\r\n\t\t\t\tfor (var i = 0; i < item.length; i++) {\r\n\t\t\t\t\tvar temp = uniqueDataParser(html, item[i], mask, modelName);\r\n\t\t\t\t\tall += dataParser(temp, item[i], mask, modelName);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Get first element\r\n\t\t\t\tvar first = exist.eq(0).before();\r\n\t\t\t\tif(first[0] === exist[0])\r\n\t\t\t\t\texist.parent().prepend(all);\r\n\t\t\t\telse\r\n\t\t\t\t\t$(all).insertAfter(first);\r\n\t\t\t\texist.remove();\r\n\t\t\t\t\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(!update){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\tif(exist.length <= 1)\r\n\t\t\t\t\t\t\treturn clearElementData(exist[index]);\r\n\r\n\t\t\t\t\t\texist[index].remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(callback.remove){\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tsetTimeout(startRemove, 800);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse startRemove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Create or update\r\n\t\t\tvar item = self.root[modelName][propertyName][index];\r\n\r\n\t\t\tvar temp = uniqueDataParser(html, item, mask, modelName);\r\n\t\t\ttemp = dataParser(temp, item, mask, modelName);\r\n\t\t\ttemp = $(temp);\r\n\r\n\t\t\t// Create\r\n\t\t\tif(!exist[index] || insertAfter){\r\n\t\t\t\tif(callback.create)\r\n\t\t\t\t\tcallback.create(temp[0]);\r\n\r\n\t\t\t\ttemp.insertAfter(exist[index !== 0 ? index - 1 : (exist.length - 1)]);\r\n\t\t\t}\r\n\r\n\t\t\telse{\r\n\t\t\t\t// Create\r\n\t\t\t\tif(insertBefore){\r\n\t\t\t\t\tif(callback.create)\r\n\t\t\t\t\t\tcallback.create(temp[0]);\r\n\r\n\t\t\t\t\ttemp.insertBefore(exist[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(callback.update)\r\n\t\t\t\t\t\tcallback.update(temp[0]);\r\n\r\n\t\t\t\t\texist[index].outerHTML = temp[0].outerHTML;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = undefined;\r\n\t\t\t\t\tvar lastLength = this.length;\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(lastLength - 1);\r\n\r\n\t\t\t\t\telse if(name === 'push')\r\n\t\t\t\t\t\tprocessElement(lastLength, true);\r\n\r\n\t\t\t\t\telse if(name === 'shift')\r\n\t\t\t\t\t\tprocessElement(0);\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments.length >= 3){ // Inserting data\r\n\t\t\t\t\t\t\targuments[0] = false;\r\n\t\t\t\t\t\t\tname = 'softRefresh';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{ // Removing data\r\n\t\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\t\tif(real < 0) real = lastLength + real;\r\n\r\n\t\t\t\t\t\t\tvar limit = arguments[1];\r\n\t\t\t\t\t\t\tif(!limit) limit = oldArray.length;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfor (var i = limit - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\t\tprocessElement(real + i);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift')\r\n\t\t\t\t\t\tprocessElement(0, true, true);\r\n\r\n\t\t\t\t\tif(name === 'softRefresh'){\r\n\t\t\t\t\t\tif(arguments[0] || arguments[0] === 0)\r\n\t\t\t\t\t\t\tprocessElement(arguments[0], !!oldArray[arguments[0]]);\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tvar foundChanges = false;\r\n\r\n\t\t\t\t\t\t\t// Removal\r\n\t\t\t\t\t\t\tif(oldArray.length > this.length){\r\n\t\t\t\t\t\t\t\tfor (var i = oldArray.length - 1; i >= this.length; i--) {\r\n\t\t\t\t\t\t\t\t\tif(this.indexOf(oldArray[i]) === -1){\r\n\t\t\t\t\t\t\t\t\t\tfoundChanges = true;\r\n\t\t\t\t\t\t\t\t\t\tprocessElement(i);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Creates\r\n\t\t\t\t\t\t\tif(oldArray.length < this.length){\r\n\t\t\t\t\t\t\t\tfor (var i = oldArray.length - 1; i < this.length; i++) {\r\n\t\t\t\t\t\t\t\t\tfoundChanges = true;\r\n\t\t\t\t\t\t\t\t\tprocessElement(i, true, true);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Update\r\n\t\t\t\t\t\t\tfor (var i = 0; i < this.length; i++) {\r\n\t\t\t\t\t\t\t\tif(compareObject(oldArray[i], this[i]) === false){\r\n\t\t\t\t\t\t\t\t\tfoundChanges = true;\r\n\t\t\t\t\t\t\t\t\tprocessElement(i, true);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(foundChanges)\r\n\t\t\t\t\t\t\t\toldArray = this.slice(0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(name === 'hardRefresh'){\r\n\t\t\t\t\t\toldArray = this.slice(0);\r\n\t\t\t\t\t\tprocessElement(-1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse Array.prototype[name].apply(oldArray, arguments);\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction compareObject(obj1, obj2){\r\n\t\tif(!obj1 || !obj2)\r\n\t\t\treturn false;\r\n\r\n\t\tfor(var i in obj1){\r\n\t\t\tif(typeof obj1[i] !== 'object' && obj1[i] !== obj2[i])\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tvar loopParser = function(name, content, script){\r\n\t\tvar returns = '';\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\r\n\t\tif(!self.root[name])\r\n\t\t\treturn console.error(\"Can't parse element because model for '\"+name+\"' was not found\", $(content)[0]);\r\n\r\n\t\tvar items = self.root[name][method[1]];\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = $(content).attr('sf-bind-list', method[1])[0];\r\n\r\n\t\tcontent = processingElement.outerHTML;\r\n\t\tcontent = content.replace(/  +|\\t+/g, '');\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tfor(var i in items){\r\n\t\t\t\tvar item = items[i];\r\n\r\n\t\t\t\ttemp = uniqueDataParser(content, item, mask, name);\r\n\t\t\t\ttemp = dataParser(temp, item, mask, name);\r\n\t\t\t\treturns += temp;\r\n\t\t\t}\r\n\t\t\tObject.defineProperty(self.root[name], method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tfor (var i = 0; i < val.length; i++) {\r\n\t\t\t\t\t\tif(items[i]){\r\n\t\t\t\t\t\t\titems[i] = val[i];\r\n\t\t\t\t\t\t\titems.softRefresh(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse items.push(val[i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(items.length > val.length)\r\n\t\t\t\t\t\titems.splice(val.length);\r\n\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tbindArray(content, items, mask, name, method[1]);\r\n\t\t}\r\n\t\treturn returns;\r\n\t}\r\n\r\n\tvar bindInput = function(){\r\n\t\t$('input[sf-bound]').each(function(){\r\n\t\t\tvar element = $(this);\r\n\t\t\tvar model = element.parents('[sf-controller]').attr('sf-controller');\r\n\t\t\tif(!model) return;\r\n\r\n\t\t\tvar whichVar = element.attr('sf-bound');\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(typeof self.root[model][whichVar] === undefined){\r\n\t\t\t\tconsole.error('Cannot get reference for self.root[\"' + model + '\"][\"' + whichVar+'\"]');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement.attr('sf-bounded', whichVar);\r\n\t\t\telement.removeAttr('sf-bound');\r\n\r\n\t\t\t// Bound key up\r\n\t\t\telement.keyup(function(e){\r\n\t\t\t\tself.root[model][whichVar] = element.val();\r\n\t\t\t});\r\n\r\n\t\t\t// Bind value\r\n\t\t\telement.attr('value', '{{'+whichVar+'}}');\r\n\t\t\tbindObject(element, self.root[model], whichVar, 'attr');\r\n\t\t});\r\n\t}\r\n\r\n\tself.init = function(targetNode = false){\r\n\t\tself.queuePreprocess(targetNode);\r\n\t\tself.parsePreprocess(targetNode);\r\n\r\n\t\t$('[sf-repeat-this]').each(function(){\r\n\t\t\tvar self = $(this);\r\n\t\t\tvar parent = self.parent();\r\n\r\n\t\t\tvar after = self.next();\r\n\t\t\tif(!after.length || self[0] === after[0])\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = self.before();\r\n\t\t\tif(!before.length || self[0] === before[0])\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = self.attr('sf-repeat-this');\r\n\t\t\tself.removeAttr('sf-repeat-this');\r\n\t\t\tvar controller = self.parents('[sf-controller]').attr('sf-controller');\r\n\r\n\t\t\tvar content = this.outerHTML;\r\n\r\n\t\t\t// Check if the element was already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-id|sf-bind-list/.test(content))\r\n\t\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\t\tvar data = loopParser(controller, content, script);\r\n\t\t\tif(data){\r\n\t\t\t\tself.remove();\r\n\t\t\t\t\r\n\t\t\t\tdata = $(data);\r\n\t\t\t\tif(after)\r\n\t\t\t\t\tdata.insertBefore(after);\r\n\t\t\t\telse if(before)\r\n\t\t\t\t\tdata.insertAfter(before);\r\n\t\t\t\telse\r\n\t\t\t\t\tparent.append(data);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tself.attr('sf-bind-list', script.split(' in ')[1]);\r\n\t\t\t\tclearElementData(this);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t// Initialize the controller\r\n\t// Call only when the element has sf-controller on it's attributes\r\n\tfunction DOMNodeInserted(element){\r\n\t\tsf.controller.run(sf.controller.modelName(element));\r\n\t}\r\n\r\n\t// Reset model properties\r\n\t// Don't call if the removed element is TEXT or #comment\r\n\tfunction DOMNodeRemoved(element){\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\t$(element).find('[sf-bind-id], [sf-bind-list], [sf-bounded], [sf-repeat-this]').each(function(){\r\n\t\t\tremoveBinding(this, model);\r\n\t\t});\r\n\r\n\t\tremoveBinding(element);\r\n\t}\r\n\r\n\t$(function(){\r\n\t\tif(typeof MutationObserver === 'function' && MutationObserver.prototype.observe){\r\n\t\t\tvar observer = new MutationObserver(function(records){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\r\n\t\t\t\tfor(var i in records){\r\n\t\t\t\t\tfor(var a in records[i].addedNodes){\r\n\t\t\t\t\t\tvar attr = records[i].addedNodes[a].attributes;\r\n\t\t\t\t\t\tif(!attr || !attr['sf-controller']) continue;\r\n\t\t\t\t\t\tDOMNodeInserted(records[i].addedNodes[a]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(var a in records[i].removedNodes){\r\n\t\t\t\t\t\tvar tagName = records[i].removedNodes[a].nodeName;\r\n\t\t\t\t\t\tif(tagName !== 'TEXT' || tagName !== '#comment') continue;\r\n\t\t\t\t\t\tDOMNodeRemoved(records[i].removedNodes[a]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tobserver.observe(document.body, { childList: true, subtree: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.body.addEventListener('DOMNodeInserted', function(e){\r\n\t\t\t\tif(bindingEnabled && e.target.attributes && e.target.attributes['sf-controller']){\r\n\t\t\t\t\tDOMNodeInserted(e.target);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tdocument.body.addEventListener('DOMNodeRemoved', function(e){\r\n\t\t\t\tif(bindingEnabled){\r\n\t\t\t\t\tvar tagName = e.target.nodeName;\r\n\t\t\t\t\tif(tagName !== 'TEXT' || tagName !== '#comment') return;\r\n\t\t\t\t\tDOMNodeRemoved(e.target);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tvar removeBinding = function(element, modelNames = false){\r\n\t\tif(!element.attributes) return;\r\n\r\n\t\tvar attrs = element.attributes;\r\n\t\tif(attrs['sf-bind-id']){\r\n\t\t\tvar id = attrs['sf-bind-id'].value;\r\n\r\n\t\t\tif(!bindRef[id]) return;\r\n\t\t\tvar ref = bindRef[id];\r\n\r\n\t\t\tfor (var i = 0; i < ref.propertyName.length; i++) {\r\n\t\t\t\tvar value = ref.object[ref.propertyName[i]];\r\n\t\t\t\tObject.defineProperty(ref.object, ref.propertyName[i], {\r\n\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\tenumerable:true,\r\n\t\t\t\t\twritable:true,\r\n\t\t\t\t\tvalue:value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tdelete bindRef[id];\r\n\r\n\t\t\t// Remove callback left\r\n\t\t\tvar cache = bindRef.cache\r\n\t\t\tfor(var i in cache){\r\n\t\t\t\tif(cache[i].callback && cache[i].callback[id])\r\n\t\t\t\t\tdelete cache[i].callback[id];\r\n\t\t\t\tif($.isEmptyObject(cache[i].callback))\r\n\t\t\t\t\tdelete cache[i];\r\n\t\t\t}\r\n\r\n\t\t\tif(cache[id]){\r\n\t\t\t\tdelete cache[id].attrs;\r\n\t\t\t\tdelete cache[id].innerHTML;\r\n\t\t\t\tdelete cache[id].modelName;\r\n\t\t\t\tdelete cache[id].model;\r\n\t\t\t\tdelete cache[id].created;\r\n\t\t\t\tdelete cache[id].element;\r\n\t\t\t}\r\n\r\n\t\t\tbindRef.length--;\r\n\t\t\tif(bindRef.length === 0)\r\n\t\t\t\tbindRef.index = 0;\r\n\t\t}\r\n\r\n\t\tif(!modelNames) return;\r\n\r\n\t\tvar propertyName = false;\r\n\t\tif(attrs['sf-bind-list'])\r\n\t\t\tpropertyName = attrs['sf-bind-list'].value;\r\n\r\n\t\tif(attrs['sf-repeat-this'])\r\n\t\t\tpropertyName = attrs['sf-repeat-this'].value.split(' in ')[1];\r\n\r\n\t\tif(attrs['sf-bounded'])\r\n\t\t\tpropertyName = attrs['sf-bounded'].value;\r\n\r\n\t\tfor (var i = 0; i < modelNames.length; i++) {\r\n\t\t\tvar modelRef = self.root[modelNames[i]];\r\n\t\t\tif(!modelRef[propertyName]) continue;\r\n\r\n\t\t\tvar value = modelRef[propertyName].slice(0);\r\n\t\t\tObject.defineProperty(modelRef, propertyName, {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable:true,\r\n\t\t\t\twritable:true,\r\n\t\t\t\tvalue:value\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/*{\r\n\t\tid:{\r\n\t\t\tobject,\r\n\t\t\t[propertyName]\r\n\t\t}\r\n\t}*/\r\n\t// For resetting object property it the element was removed from DOM\r\n\tvar bindRef = {length:0, index:0, cache:{}};\r\n\tself.bindRef = bindRef;\r\n\tvar dcBracket = /{{.*?}}/;\r\n\tvar bindObject = function(element, object, propertyName, which){\r\n\t\tif(!(element instanceof Node))\r\n\t\t\telement = element[0];\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = element;\r\n\r\n\t\t// First initialization\r\n\t\tvar id = bindRef.index;\r\n\t\t$(element).attr('sf-bind-id', id);\r\n\r\n\t\tbindRef.index++;\r\n\t\tbindRef.length++;\r\n\t\tbindRef.cache[id] = {};\r\n\t\tvar cache = bindRef.cache[id];\r\n\r\n\t\tcache.attrs = {};\r\n\t\tcache.innerHTML = '';\r\n\t\tcache.modelName = sf.controller.modelName(element);\r\n\t\tcache.model = self.root[cache.modelName];\r\n\t\tcache.created = Date.now();\r\n\r\n\t\tif(which === 'attr' || !which){\r\n\t\t\tfor(var i in element.attributes){\r\n\t\t\t\t// Check if it has a bracket\r\n\t\t\t\tif(!dcBracket.test(element.attributes[i].value))\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tvar attrName = element.attributes[i].name;\r\n\t\t\t\tcache.attrs[attrName] = element.attributes[i].value;\r\n\r\n\t\t\t\tif(attrName === 'value')\r\n\t\t\t\t\telement.removeAttribute(attrName);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(which === 'html' || !which)\r\n\t\t\tcache.innerHTML = element.innerHTML;\r\n\r\n\t\t// Get current object reference\r\n\t\tif(!bindRef[id]) bindRef[id] = {object:object, propertyName:[]};\r\n\t\tbindRef[id].propertyName.push(propertyName);\r\n\r\n\t\tcache.element = $(element);\r\n\t\tvar callbackFunction = function(){\r\n\t\t\tif(which === 'attr' || !which){\r\n\t\t\t\tfor(var name in cache.attrs){\r\n\t\t\t\t\tif(cache.attrs[name].indexOf(propertyName) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tvar temp = dataParser(cache.attrs[name], cache.model, false, cache.modelName);\r\n\t\t\t\t\tif(name === 'value')\r\n\t\t\t\t\t\tcache.element.val(temp);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tcache.element.attr(name, temp);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(which === 'html' || !which){\r\n\t\t\t\tvar temp = uniqueDataParser(cache.innerHTML, cache.model, false, cache.modelName);\r\n\t\t\t\ttemp = dataParser(temp, cache.model, false, cache.modelName);\r\n\t\t\t\tcache.element.html(temp);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif(Object.getOwnPropertyDescriptor(cache.model, propertyName)['set']){\r\n\t\t\tfor(var i in bindRef){\r\n\t\t\t\tif(cache.model === bindRef[i].object && bindRef[i].propertyName.indexOf(propertyName) !== -1){\r\n\t\t\t\t\tbindRef.cache[i].callback[id] = callbackFunction;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tcache.callback = {};\r\n\t\tcache.callback[id] = callbackFunction;\r\n\r\n\t\tvar objValue = object[propertyName]; // Object value\r\n\t\tObject.defineProperty(object, propertyName, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\t\t\tget:function(){\r\n\t\t\t\treturn objValue;\r\n\t\t\t},\r\n\t\t\tset:function(val){\r\n\t\t\t\tobjValue = val;\r\n\r\n\t\t\t\tfor(var i in cache.callback){\r\n\t\t\t\t\tcache.callback[i]();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn objValue;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tself.bindElement = function(element, which = false){\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar scopeMask = RegExp('(?<=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )('+self.modelKeys(model)+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tvar html = element.outerHTML;\r\n\r\n\t\t// Check if the child element was already bound to prevent vulnerability\r\n\t\tif(/sf-bind-id|sf-bind-list/.test(html))\r\n\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\tif(which === 'attr')\r\n\t\t\thtml = html.replace(element.innerHTML, '');\r\n\r\n\t\tvar brackets = html.match(/(?<={{).*?(?=}})/gs);\r\n\t\tfor (var i = 0; i < brackets.length; i++) {\r\n\t\t\twhile ((bindable = scopeMask.exec(brackets[i])) !== null) {\r\n\t\t\t\tbindObject(element, model, bindable[i], which);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.queuePreprocess = function(targetNode = false){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar excludes = ['html','head','style','link','meta','script','object','iframe'];\r\n\t\tfor (var i = 0; i < excludes.length; i++) {\r\n\t\t\texcludes[i] = excludes[i].toUpperCase();\r\n\t\t}\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = 0; i < childNodes.length; i++) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\t\t\tif(excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\r\n\t\t\t\t// Skip element and it's childs that already bound to prevent vulnerability\r\n\t\t\t\tif(attrs['sf-bind-id'] || attrs['sf-repeat-this'] || attrs['sf-bind-list']) continue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tcurrentNode.setAttribute('sf-preprocess', 'attronly');\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tself.queuePreprocess(currentNode);\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tcurrentNode.parentNode.setAttribute('sf-preprocess', '');\r\n\r\n\t\t\t\t\t// Reset Siblings\r\n\t\t\t\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\t\t\t\ttemp[a].removeAttribute('sf-preprocess');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.parsePreprocess = function(targetNode = false){\r\n\t\t$(targetNode || document.body).find('[sf-preprocess]').each(function(){\r\n\t\t\tvar model = sf.controller.modelName(this);\r\n\t\t\tthis.removeAttribute('sf-preprocess');\r\n\r\n\t\t\tif(!self.root[model])\r\n\t\t\t\treturn console.error(\"Can't parse element because model for '\"+model+\"' was not found\", this);\r\n\r\n\t\t\t// Get reference for debugging\r\n\t\t\tprocessingElement = this;\r\n\r\n\t\t\t// Double check if the child element already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-id|sf-bind-list/.test(this.innerHTML)){\r\n\t\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\t\tconsole.log($(processingElement.outerHTML)[0]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif($(this).attr('sf-bind'))\r\n\t\t\t\tself.bindElement(this, $(this).attr('sf-bind'));\r\n\r\n\t\t\t// Avoid editing the outerHTML because it will remove the bind\r\n\t\t\tvar temp = uniqueDataParser(this.innerHTML, self.root[model], false, model);\r\n\t\t\tthis.innerHTML = dataParser(temp, self.root[model], false, model);\r\n\t\t\tfor (var i = 0; i < this.attributes.length; i++) {\r\n\t\t\t\tif(this.attributes[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\tthis.attributes[i].value = dataParser(this.attributes[i].value, self.root[model], false, model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tbindInput();\r\n\t}\r\n}","sf.router = new function(){\r\n\tvar self = this;\r\n\tself.loading = false;\r\n\tself.enabled = false;\r\n\tself.currentPage = [];\r\n\tvar initialized = false;\r\n\tvar lazyRouting = false;\r\n\tvar currentRouterURL = '';\r\n\r\n\t// Should be called if not using lazy page load\r\n\tself.init = function(){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init();\r\n\t\t\t});\r\n\r\n\t\t// Reinit lazy router\r\n\t\tself.lazy();\r\n\r\n\t\t// Run 'before' event for new page view\r\n\t\t$('[sf-page]').each(function(){\r\n\t\t\tvar name = this.attributes['sf-page'].value;\r\n\t\t\tbeforeEvent(name);\r\n\t\t});\r\n\r\n\t\tinitialized = true;\r\n\t\tcurrentRouterURL = window.location.pathname;\r\n\t}\r\n\r\n\tself.enable = function(status = true){\r\n\t\tself.enabled = status;\r\n\r\n\t\tif(status)\r\n\t\t\tself.lazy();\r\n\t\telse{\r\n\t\t\t$('a[href][onclick]').each(function(){\r\n\t\t\t\tvar current = $(this);\r\n\t\t\t\tif(current.attr('onclick') === 'return sf.router.load(this)')\r\n\t\t\t\t\tcurrent.removeAttr('onclick');\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tvar before = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.before = function(name, func, index = false){\r\n\t\tif(!before[name])\r\n\t\t\tbefore[name] = [];\r\n\r\n\t\tif(index === false){\r\n\t\t\tif(before[name].indexOf(func) === -1)\r\n\t\t\t\tbefore[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tbefore[name][index] = func;\r\n\t}\r\n\r\n\tvar after = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.after = function(name, func, index = false){\r\n\t\tif(!after[name])\r\n\t\t\tafter[name] = [];\r\n\r\n\t\tif(index === false){\r\n\t\t\tif(after[name].indexOf(func) === -1)\r\n\t\t\t\tafter[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tafter[name][index] = func;\r\n\t}\r\n\r\n\t// Running 'before' new page going to be displayed\r\n\tvar beforeEvent = function(name, DOMReference = false){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.push(name);\r\n\r\n\t\t// Init all controller\r\n\t\tsf.controller.init();\r\n\r\n\t\t// Init template to model binding\r\n\t\tsf.model.init(DOMReference);\r\n\r\n\t\tif(before[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\r\n\t\t\tfor (var i = 0; i < before[name].length; i++) {\r\n\t\t\t\tbefore[name][i](sf.model.root);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Running 'after' old page going to be removed\r\n\tvar afterEvent = function(){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.splice(self.currentPage.indexOf(name), 1);\r\n\r\n\t\tif(self.currentPage !== '' && after[self.currentPage]){\r\n\t\t\tif(!sf.model.root[self.currentPage])\r\n\t\t\t\tsf.model.root[self.currentPage] = {};\r\n\r\n\t\t\tfor (var i = 0; i < after[self.currentPage].length; i++) {\r\n\t\t\t\tafter[self.currentPage][i](sf.model.root);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar onEvent = {\r\n\t\t'loading':[],\r\n\t\t'loaded':[],\r\n\t\t'special':[],\r\n\t\t'error':[]\r\n\t};\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\tself.lazyViewPoint = {};\r\n\t/*\r\n\t\t{\r\n\t\t\toldURlPattern:{\r\n\t\t\t\tnewURLPattern:'.viewPoint'\r\n\t\t\t}\r\n\t\t}\r\n\t*/\r\n\tself.lazy = function(){\r\n\t\tif(!self.enabled) return;\r\n\r\n\t\t$('a[href]:not([onclick])').each(function(){\r\n\t\t\tvar url = this.href;\r\n\t\t\tif(url.indexOf('#') !== -1)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(url.indexOf(window.location.origin) !== 0 && url.charAt(0) !== '/')\r\n\t\t\t\treturn; //Not current domain origin\r\n\r\n\t\t\t$(this).attr('onclick', 'return sf.router.load(this)');\r\n\t\t});\r\n\t}\r\n\r\n\tself.load = function(elem){\r\n\t\tif(!history.pushState || $(elem).attr('sf-router') == 'ignore')\r\n\t\t\treturn true;\r\n\r\n\t\treturn !self.goto(elem.href.replace(window.location.origin, ''));\r\n\t}\r\n\r\n\tvar RouterLoading = false;\r\n\tvar routingBack = false;\r\n\tself.goto = function(path, data, method){\r\n\t\tif(!method) method = 'GET';\r\n        else method = method.toUpperCase();\r\n\r\n\t\tfor (var i = 0; i < onEvent['loading'].length; i++) {\r\n\t\t\tif(onEvent['loading'][i](path)) return;\r\n\t\t}\r\n\t\tvar oldPath = window.location.pathname;\r\n\t\tinitialized = false;\r\n\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\t\tRouterLoading = $.ajax({\r\n\t\t\turl:window.location.origin + path,\r\n\t\t\tmethod:method,\r\n            data:Object.assign(data, {\r\n                _scarlets:'.dynamic.'\r\n            }),\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\tif(initialized) return;\r\n\t\t\t\tlazyRouting = true;\r\n\r\n\t\t\t\t// Run 'loaded' event\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tvar skipLazyView = false;\r\n\r\n\t\t\t\t// Find special data\r\n\t\t\t\tvar regex = RegExp('<!-- SF-Special:(.*?)-->'+sf.regex.avoidQuotes, 'g');\r\n\t\t\t\tvar found = regex.exec(data);\r\n\t\t\t\tif(found && found.length !== 1){\r\n\t\t\t\t\tfound = found[1].split('--|&>').join('-->');\r\n\t\t\t\t\tfound = JSON.parse(found);\r\n\r\n\t\t\t\t\tif(!$.isEmptyObject(found)){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['special'].length; i++) {\r\n\t\t\t\t\t\t\tif(onEvent['special'][i](special)) return;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Trigger loaded event\r\n\t\t\t\tfor (var i = 0; i < onEvent['loaded'].length; i++) {\r\n\t\t\t\t\tskipLazyView = onEvent['loaded'][i](currentRouterURL, path, data) || skipLazyView;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DOMReference = false;\r\n\t\t\t\tif(!skipLazyView){\r\n\t\t\t\t\tvar foundAction = function(ref){\r\n\t\t\t\t\t\tDOMReference = $(ref);\r\n\r\n\t\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\t\tafterEvent(DOMReference.find('[sf-page]'));\r\n\t\t\t\t\t\tDOMReference.html(data);\r\n\r\n\t\t\t\t\t\t// Redefine title if exist\r\n\t\t\t\t\t\tvar title = DOMReference.find('title').eq(0).html();\r\n\t\t\t\t\t\tif(title)\r\n\t\t\t\t\t\t\t$('head title').html(title);\r\n\r\n\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tvar found = false;\r\n\t\t\t\t\tfor(var oldURL in self.lazyViewPoint){\r\n\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\tfor(var newURL in self.lazyViewPoint[oldURL]){\r\n\t\t\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\t\t\tfoundAction(self.lazyViewPoint[oldURL][newURL]);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(found) break;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// When the view point was not found\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\t// Use fallback if exist\r\n\t\t\t\t\t\tif(sf.router.lazyViewPoint[\"@default\"])\r\n\t\t\t\t\t\t\tfoundAction(sf.router.lazyViewPoint[\"@default\"]);\r\n\r\n\t\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\t\t\t\tonEvent['error'][i]('sf.router.lazyViewPoint[\"'+oldURL+'\"][\"'+newURL+'\"] was not found');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// If the init function was called\r\n\t\t\t\t\tif(initialized) return;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reinit lazy router\r\n\t\t\t\tself.lazy();\r\n\r\n\t\t\t\t// Run 'before' event for new page view\r\n\t\t\t\tif(!DOMReference) DOMReference = $('body');\r\n\t\t\t\tDOMReference.find('[sf-controller], [sf-page]').each(function(){\r\n\t\t\t\t\tif(this.attributes['sf-controller'])\r\n\t\t\t\t\t\tsf.controller.run(this.attributes['sf-controller'].value);\r\n\r\n\t\t\t\t\tif(this.attributes['sf-page'])\r\n\t\t\t\t\t\tbeforeEvent(this.attributes['sf-page'].value, DOMReference[0]);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tlazyRouting = false;\r\n\r\n\t\t\t\tcurrentRouterURL = path;\r\n\t\t\t\troutingError = false;\r\n\t\t\t},\r\n\t\t\terror:function(xhr, data){\r\n\t\t\t\troutingError = true;\r\n\t\t\t\tif(xhr.aborted) return;\r\n\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\tonEvent['error'][i](xhr.status, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Back on error\r\n\t\t\t\twindow.history.back();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!routingBack)\r\n\t\t\twindow.history.pushState(null, \"\", path);\r\n\r\n\t\troutingBack = false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tvar routingError = false;\r\n\twindow.addEventListener('popstate', function(event) {\r\n\t\t// Don't continue if the last routing was error\r\n\t\tif(routingError){\r\n\t\t\troutingError = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\troutingBack = true;\r\n\t\tself.goto(window.location.pathname);\r\n\t}, false);\r\n};"]}