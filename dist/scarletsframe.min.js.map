{"version":3,"sources":["sf-a_init.js","sf-a_polyfill.js","sf-dom.js","sf-loader.js","sf-component.js","sf-model.js","sf-controller.js","sf-e-ajax.js","sf-z_end.js","sf-router.js","sf-virtual_scroll.js"],"names":["global","factory","exports","module","sf","window","this","undefined","document","internal","arguments","constructor","Function","loader","onFinish","apply","regex","getQuotes","validFunctionCall","strictVar","escapeHTML","uniqueDataParser","dataParser","allowedFunctionEval","avoidQuotes","str","func","temp","es","replace","full","push","length","i","isEmptyObject","obj","key","compareObject","obj1","obj2","hiddenProperty","property","value","Object","defineProperty","enumerable","configurable","deepProperty","path","assign","target","varArgs","TypeError","to","index","nextSource","nextKey","prototype","hasOwnProperty","call","writable","Element","remove","CharacterData","DocumentType","forEach","item","parentNode","removeChild","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","querySelectorAll","NodeList","callback","thisArg","location","origin","protocol","hostname","port","values","res","dom","selector","context","parseElement","String","$","self","findOne","querySelector","parent","element","closest","parentElement","prevAll","isNext","result","findNodes","nextSibling","previousSibling","nextAll","on","event","once","tempCallback","ev","addEventListener","capture","sf$eventListener","off","events","split","ref","removeEventListener","splice","animateCSS","animationName","duration","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","style","webkitAnimationDuration","animationDuration","list","classList","add","setTimeout","emptyDOM","div","createElement","ul","tbody","tr","table","select","html","returnNode","tempDOM","indexOf","textContent","insertAdjacentHTML","escapeText","text","innerHTML","elements","documentElement","domReady","body","haveSymbol","getSelector","childIndexes","untilElement","names","id","test","unshift","tagName","e","join","array","substr","childNodes","loadedContent","totalContent","DOMWasLoaded","DOMReady","turnedOff","whenDOMReady","whenDOMLoaded","whenProgress","onProgress","f","css","rel","href","head","appendChild","js","type","async","src","console","warn","isQueued","domLoadEvent","model","queuePreprocess","domStateEvent","readyState","error","resourceWaitTimer","setInterval","waitResources","clearInterval","listener","controller","init","router","component","scope","registered","available","bases","for","name","extend","pending","base","outerHTML","triggerEvent","new","newElement","cloneNode","newID","setAttribute","sf$component","sf$componentFrom","newObj","root","Array","firstElementChild","destroy","DOMNodeRemoved","root_","run","bindingEnabled","processingElement","trimIndentation","indent","trim","RegExp","bracketMatch","chackValidFunctionCall","localEval","script","_model_","_modelScope","_content_","tempScript","preventExecution","check_","exec","log","_result_","_evaled_","eval","escapeEscapedQuote","unescapeEscapedQuote","elseIfHandle","else_","scopes","elseIf","elseValue","currentElement","previousElementSibling","getAttribute","modelName","$virtual","DOMCursor","modelKeys","modelRef","keys","templateParser_regex","REF_DIRECT","REF_IF","REF_EXEC","templateExec","parse","atIndex","parsed","data","if","templateParser","template","original","addresses","changesReference","pendingInsert","current","address","nodeType","refA","direct","match","cRef","dynamicFlag","parse_index","startFlag","attributes","a","refB","isValueInput","attribute","removeAttribute","sf$elementReferences","tDOM","insertBefore","syntheticCache","sf$cache","cache","modelRef_array","syntheticTemplate","changes","modelReference","newData","checkRelatedChanges","parseIndex","found","haveChanges","ref_","sf$haveChilds","sf$childRoot","reverse","currentDOM","notExist","isEqualNode","replaceChild","mask","runEval","preParsedReference","scopeMask","itemMask","preParsed","lastParsedIndex","prepared","actual","temp_","matched","slice","exist","charCodeAt","take","passVar","currentIndex","strDeclare","firstTime","JSON","stringify","check","VarPass_","VarPass","s1","obtained","val","findElse","pop","shift","condition","bindArray","propertyName","targetNode","editProperty","refreshTimer","parentChilds","children","isKeyed","contains","eventVar","processElement","options","other","count","vEndRange","preparedLength","spacer","lastElementChild","height","reset","clearTimeout","reinitScroll","overflow","vDOM","theParent","update","index_a","other_sibling","other_parent","oldChild","referenceNode","create","vCursor","floor","insertAdjacentElement","currentRemoved","startRemove","refreshVirtualSpacer","propertyProxy","subject","lastLength","from","reinitCursor","o","resetViewport","matchLeft","refresh","real","limit","callback_","var","virtual_scroll","handle","needle","elRef","getElement","process","content","parentNode_","elem","hardRefresh","softRefresh","virtualChilds","childElement","childElementCount","loopParser","method","items","extractPreprocess","sf$bindedKey","initBindingInformation","get","set","n","callInputListener","v2m","newValue1","newValue2","old","inputBoundRunning","inputTextBound","fromSFFramework","viewInputted","typeData","Number","newValue","sfModel","sfBounded","inputFilesBound","files","inputCheckBoxBound","checked","Boolean","inputSelectBound","multiple","selectedOptions","assignElementData","arrayValue","selected","checkbox","inputBoundRun","Event","dispatchEvent","triggerInputEvent","elementBoundChanges","oneWay","toLowerCase","modelToViewBinding","bindInput","modelScope","alreadyInitialized","queued","parsePreprocess","ceiling","after","nextElementSibling","before","hasAttribute","removeModelBinding","sf$componentFor","modelFrom","components","everyRemovedNodes","nodes","MutationObserver","observe","everyRecords","record","removedNodes","records","childList","subtree","bindedKey","getOwnPropertyDescriptor","elementBind","input","objValue","getAssigner","m2v","out","newValue3","dcBracket","bindElement","onChanges","properties","copy","addressed","addressAttributes","currentNode","attrs","indexes","addressStart","commentFlag","flag","createComment","textNode","createTextNode","search","extract","sort","b","checkList","full_","match_","findModelProperty","asArray","enclosedHTMLParse","excludes","extracting","nodeName","enclosing","enclosed","nodeValue","modelElement","attr","active","bindedList","parentEl","bindedListIndex","listenSFClick","script_","method_","preventDefault","globals","jsonpRequests","Request","requestOptions","globalsNoCallbacks","callbackName","defaults","url","toString","user","password","headers","xhrFields","statusCode","processData","dataType","contentType","timeout","fireCallback","globalCallbackValue","optionCallbackValue","_i","paramsPrefix","toUpperCase","stringData","serializeQuery","abortTimeout_1","callbackName_1","Date","now","callbackSplit","requestUrl","addVars","filter","el","script_1","onerror","xhr","XMLHttpRequest","requestParameters","open","xhrTimeout","postData","ArrayBuffer","Blob","Document","FormData","boundary","setRequestHeader","headerName","crossDomain","$2","host","onload","status","responseData","parseError","responseText","err","responseType","response","onabort","abort","send","RequestShortcut","args","_a","success","params","prefix","encodeURIComponent","concat","post","json","getJSON","postJSON","setup","ajax","loading","enabled","pauseRenderOnTransition","currentPage","initialized","currentRouterURL","popstateListener","routingError","routingBack","goto","pathname","beforeEvent","enable","load","onEvent","loaded","special","lazyViewPoint","history","pushState","RouterLoading","_scarlets","DOMReference","foundAction","last","afterEvent","title","oldURL","newURL","routerLoaded","aborted","back","styleInitialized","scrollingByScript","refreshScrollBounding","cursor","bounding","Math","prepareCount","offsetTop","initial","dCursor","scrollHeight","scrollTo","scroller","virtual","reduce","scrollTop","insertCount","removeUserScrollFocus","getAbsoluteHeight","styles","getComputedStyle","margin","parseInt","offsetHeight","force","checkCursorPosition","additionalScroll","moveTo","getElementById","sheet","insertRule","cssRules","initStyles","reinitOnly","elementLength","obtainElements","_onElementResize","offElementResize","visibleLength","clientHeight","ceilingHeight","floorHeight","fillViewport","updating","resetCeiling","previousCeiling","nextFloor","hitFloor","hitCeiling","_onElementResize_timer","scrollWidth","width","onElementResize","dynamicHeight","offsetTo","fromCeiling","scrollFocused","moveElementCursor","navigator","userAgent","staticHeight"],"mappings":";;;;;;;;CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,oBAAAC,OAAAA,OAAAD,QAAAD,EAAAD,GACAA,EAAAI,GAAAH,EAAAD,GAFA,CAGA,oBAAAK,OAAAA,OAAAC,KAAA,SAAAD,QAAA,kBACAE,WAAAC,WACAA,SAAAH,OAAAG,UAEA,IAAAC,SAAA,GAEAL,GAAA,WACA,GAAAM,UAAA,GAAAC,cAAAC,SACA,OAAAR,GAAAS,OAAAC,SAAAC,MAAA,KAAAL,YAIAN,GAAAK,SAAA,GACAL,GAAAY,MAAA,CACAC,UAAA,yBACAC,kBAAA,qBACAC,UAAA,gCACAC,WAAA,kCAEAC,iBAAA,2BACAC,WAAA,wBAGA,IAAAC,oBAAA,CAAA,IAAA,MAAA,KAAA,QAAA,iBAAA,eAEA,SAAAC,YAAAC,EAAAC,GACA,IAAAC,EAAA,GACAC,EAAA,QAKAH,EAAAC,EAJAD,EAAAA,EAAAI,QAAAzB,GAAAY,MAAAC,UAAA,SAAAa,GAEA,OADAH,EAAAI,KAAAD,GACAF,GAAAD,EAAAK,OAAA,GAAAJ,KAGA,IAAA,IAAAK,EAAA,EAAAA,EAAAN,EAAAK,OAAAC,IACAR,EAAAA,EAAAI,QAAAD,EAAAK,EAAAL,EAAAD,EAAAM,IAEA,OAAAR,EAGA,SAAAS,cAAAC,GACA,IAAA,IAAAC,KAAAD,EACA,OAAA,EAEA,OAAA,EAGA,SAAAE,cAAAC,EAAAC,GACA,IAAAD,IAAAC,EACA,OAAA,EAEA,IAAA,IAAAN,KAAAK,EACA,GAAA,iBAAAA,EAAAL,IAAAK,EAAAL,KAAAM,EAAAN,GACA,OAAA,EAEA,OAAA,EAGA,SAAAO,eAAAL,EAAAM,EAAAC,GACAC,OAAAC,eAAAT,EAAAM,EAAA,CACAI,YAAA,EACAC,cAAA,EACAJ,MAAAA,IAIA,SAAAK,aAAAZ,EAAAa,GACA,IAAA,IAAAf,EAAA,EAAAA,EAAAe,EAAAhB,OAAAC,IAEA,QAAA1B,KADA4B,EAAAA,EAAAa,EAAAf,KACA,OAAAE,EAEA,OAAAA,ECxEA,mBAAAQ,OAAAM,QACAN,OAAAC,eAAAD,OAAA,SAAA,CACAD,MAAA,SAAAQ,EAAAC,GAEA,GAAA,MAAAD,EACA,MAAA,IAAAE,UAAA,8CAEA,IADA,IAAAC,EAAAV,OAAAO,GACAI,EAAA,EAAAA,EAAA5C,UAAAsB,OAAAsB,IAAA,CACA,IAAAC,EAAA7C,UAAA4C,GACA,GAAA,MAAAC,EACA,IAAA,IAAAC,KAAAD,EACAZ,OAAAc,UAAAC,eAAAC,KAAAJ,EAAAC,KACAH,EAAAG,GAAAD,EAAAC,IAIA,OAAAH,GAEAO,UAAA,EACAd,cAAA,SAIAvC,IAAAsD,QAAAJ,UAAAK,aAAAvD,IAAAwD,cAAAN,UAAAK,aAAAvD,IAAAyD,aAAAP,UAAAK,QAgBA,CAAAD,QAAAJ,UAAAM,cAAAN,UAAAO,aAAAP,WAdAQ,QAAA,SAAAC,GACAA,EAAAR,eAAA,WAGAf,OAAAC,eAAAsB,EAAA,SAAA,CACApB,cAAA,EACAD,YAAA,EACAe,UAAA,EACAlB,MAAA,WACA,OAAApC,KAAA6D,YACA7D,KAAA6D,WAAAC,YAAA9D,WAOAuD,QAAAJ,UAAAY,UACAR,QAAAJ,UAAAY,QAAAR,QAAA,UAAAS,iBACAT,QAAA,UAAAU,oBAAAV,QAAA,UAAAW,mBACAX,QAAA,UAAAY,kBAAAZ,QAAA,UAAAa,uBACA,SAAAC,GAGA,IAFA,IAAAN,GAAA/D,KAAAE,UAAAF,KAAAsE,eAAAC,iBAAAF,GACA1C,EAAAoC,EAAArC,SACAC,GAAA,GAAAoC,EAAAH,KAAAjC,KAAA3B,OACA,OAAA2B,GAAA,IAIA6C,SAAArB,UAAAQ,UACAa,SAAArB,UAAAQ,QAAA,SAAAc,EAAAC,GACAA,EAAAA,GAAA3E,OACA,IAAA,IAAA4B,EAAA,EAAAA,EAAA3B,KAAA0B,OAAAC,IACA8C,EAAApB,KAAAqB,EAAA1E,KAAA2B,GAAAA,EAAA3B,QAKAD,OAAA4E,SAAAC,SACA7E,OAAA4E,SAAAC,OAAA7E,OAAA4E,SAAAE,SAAA,KAAA9E,OAAA4E,SAAAG,UAAA/E,OAAA4E,SAAAI,KAAA,IAAAhF,OAAA4E,SAAAI,KAAA,KAEA1C,OAAA2C,SACA3C,OAAA2C,OAAA,SAAAnD,GACA,IAAAoD,EAAA,GACA,IAAA,IAAAtD,KAAAE,EACAA,EAAAuB,eAAAzB,IACAsD,EAAAxD,KAAAI,EAAAF,IAGA,OAAAsD,IC3EAnF,GAAAoF,IAAA,SAAAC,EAAAC,GACA,MAAA,MAAAD,EAAA,GAAArF,GAAAoF,IAAAG,aAAAF,GACAA,EAAA9E,cAAAiF,OAAAH,EAEAC,EAAAA,EAAAb,iBAAAY,GACAjF,SAAAqE,iBAAAY,IAGA,IAAAI,EAAAzF,GAAAoF,KAEA,WACA,IAAAM,EAAA1F,GAAAoF,IAEAM,EAAAC,QAAA,SAAAN,EAAAC,GACA,YAAAnF,IAAAmF,EAAAA,EAAAM,cAAAP,GACAjF,SAAAwF,cAAAP,IAGAK,EAAAG,OAAA,SAAAC,EAAAT,GACA,GAAAS,EAAAC,QAAA,OAAAD,EAAAC,QAAAV,GAEA,EAAA,CACA,IAAA,IAAAS,EAAA7B,QAAAoB,GACA,OAAAS,EAEAA,EAAAA,EAAAE,oBACA,OAAAF,GAEA,OAAA,MAGAJ,EAAAO,QAAA,SAAAH,EAAAT,EAAAa,GACA,IAAAC,EAAA,GACAC,EAAA,OAAAf,GAAAA,EAAA9E,cAAAiF,OAIA,IADAM,EAAAI,EAAAJ,EAAAO,YAAAP,EAAAQ,gBACA,OAAAR,GAAA,CACA,IAAA,IAAAM,IAAA,IAAAN,EAAA7B,QAAAoB,GACAc,EAAAxE,KAAAmE,OACA,CACA,GAAAA,IAAAT,EACA,MACAc,EAAAxE,KAAAmE,GAIAA,EADAI,EACAJ,EAAAO,YAEAP,EAAAQ,gBAGA,OAAAH,GAIAT,EAAAa,QAAA,SAAAT,EAAAT,GACA,OAAAK,EAAAO,QAAAH,EAAAT,GAAA,IAYAK,EAAAc,GAAA,SAAAV,EAAAW,EAAApB,EAAAV,EAAA+B,GAaA,GAZA,iBAAAZ,IACAA,EAAA1F,SACAuE,EAAAU,EACAA,EAAAoB,EACAA,EAAAX,GAGA,mBAAAT,IACAV,EAAAU,EACAA,EAAA,MAGAA,EAAA,CACA,IAAAsB,EAAAhC,EACAA,EAAA,SAAAiC,GACA,OAAAlB,EAAAG,OAAAe,EAAA9D,OAAAuC,IACAsB,EAAAC,IAIAjC,EAAAU,SAAAA,EACAV,EAAA+B,KAAAA,EACAZ,EAAAe,iBAAAJ,EAAA9B,EAAA,CAAAmC,SAAA,EAAAJ,MAAA,IAAAA,SAGAvG,IAAA2F,EAAAiB,mBACAjB,EAAAiB,iBAAA,SAEA5G,IAAA2F,EAAAiB,iBAAAN,KACAX,EAAAiB,iBAAAN,GAAA,IAEAX,EAAAiB,iBAAAN,GAAA9E,KAAAgD,IAIAe,EAAAgB,KAAA,SAAAZ,EAAAW,EAAApB,EAAAV,GACAe,EAAAc,GAAAV,EAAAW,EAAApB,EAAAV,GAAA,IAUAe,EAAAsB,IAAA,SAAAlB,EAAAW,EAAApB,GAEA,QAAAlF,IAAAsG,EAAA,CAYA,GAAA,KADAQ,EAAAR,EAAAS,MAAA,MACAtF,QAQA,QAAAzB,IAAA2F,EAAAiB,iBAAA,CAGA,IAAAI,EAAArB,EAAAiB,iBACA,QAAA5G,IAAAgH,QAAAhH,IAAAgH,EAAAV,GACA,IAAA5E,EAAAsF,EAAAV,GAAA7E,OAAA,EAAAC,GAAA,EAAAA,IACAwD,GAAA8B,EAAAV,GAAA5E,GAAAwD,WAAAA,GAGAS,EAAAsB,oBAAAX,EAAAU,EAAAV,GAAAY,OAAAxF,EAAA,IAAA,SAhBA,IAAA,IAAAA,EAAA,EAAAA,EAAAoF,EAAArF,OAAAC,IACA6D,EAAAsB,IAAAlB,EAAAmB,EAAApF,QAdA,CACA,QAAA1B,IAAA2F,EAAAiB,iBACA,OAGA,IADA,IAAAE,EAAAnB,EAAAiB,iBAAAN,GACA5E,EAAA,EAAAA,EAAAoF,EAAArF,OAAAC,IACA6D,EAAAsB,IAAAlB,EAAAmB,EAAApF,MA4BA6D,EAAA4B,WAAA,SAAAxB,EAAAyB,EAAA5C,EAAA6C,GACA,IAAAC,EAAA,CACAC,UAAA,eACAC,WAAA,gBACAC,aAAA,kBACAC,gBAAA,sBAGA,IAAA,IAAAC,KAAAL,EACA,QAAAtH,IAAA2F,EAAAiC,MAAAD,GAAA,CACAL,EAAAA,EAAAK,GACA,MAIAN,IACA1B,EAAAiC,MAAAC,wBAAAR,EAAA,IACA1B,EAAAiC,MAAAE,kBAAAT,EAAA,KAGA,IAAAU,GAAA,YAAAX,GAAAL,MAAA,KACApB,EAAAqC,UAAAC,IAAAzH,MAAAmF,EAAAqC,UAAAD,GACAzC,EAAAiB,KAAAZ,EAAA2B,EAAA,WACA3B,EAAAqC,UAAAzE,OAAA/C,MAAAmF,EAAAqC,UAAAD,GAEAV,GAAAa,WAAA,WACAvC,EAAAiC,MAAAC,wBAAAR,EAAA,IACA1B,EAAAiC,MAAAE,kBAAAT,EAAA,KACA,GAEA,mBAAA7C,GAAAA,OAIA,IAAA2D,EAAA,CACAC,IAAAnI,SAAAoI,cAAA,OACAC,GAAArI,SAAAoI,cAAA,MACAE,MAAAtI,SAAAoI,cAAA,SACAG,GAAAvI,SAAAoI,cAAA,MACAI,MAAAxI,SAAAoI,cAAA,SACAK,OAAAzI,SAAAoI,cAAA,WAEA9C,EAAAH,aAAA,SAAAuD,EAAAC,GACA,IAAA5C,EAAA,GACA6C,EAAAV,EAAAC,IAEA,IAAAO,EAAAG,QAAA,SAAAD,EAAAV,EAAAG,IACA,IAAAK,EAAAG,QAAA,SAAAD,EAAAV,EAAAI,OACA,IAAAI,EAAAG,QAAA,QAAA,IAAAH,EAAAG,QAAA,SAAAD,EAAAV,EAAAK,IACA,IAAAG,EAAAG,QAAA,YAAAD,EAAAV,EAAAM,OACA,IAAAE,EAAAG,QAAA,aAAAD,EAAAV,EAAAO,QAEAG,EAAAE,YAAA,GACAF,EAAAG,mBAAA,aAAAL,GAGA,IADA,IAAA3B,EAAA6B,EAAAD,EAAA,aAAA,YACAlH,EAAA,EAAAA,EAAAsF,EAAAvF,OAAAC,IACAsE,EAAAxE,KAAAwF,EAAArD,KAAAjC,IAGA,OAAAsE,GAGAT,EAAA0D,WAAA,SAAAC,GACA,IAAAL,EAAAV,EAAAC,IAEA,OADAS,EAAAE,YAAAG,EACAL,EAAAM,WAGA5D,EAAAhC,OAAA,SAAA6F,GACA,QAAApJ,IAAAoJ,EAAA7F,OACA,OAAA6F,EAAA7F,SAEA,IAAA,IAAA7B,EAAA,EAAAA,EAAA0H,EAAA3H,OAAAC,IACA0H,EAAA1H,GAAA6B,UAIA,IAAA8F,EAAA,KACAnB,WAAA,WACArI,GAAAS,OAAAgJ,SAAA,WACAD,EAAApJ,SAAAsJ,KAAA1D,iBAEA,GAEA,IAAA2D,EAAA,uCACAjE,EAAAkE,YAAA,SAAA9D,EAAA+D,EAAAC,GACA,IAAAC,EAAA,QACA5J,IAAA2J,IAAAA,EAAAN,GAIA,IAFA,IAAAlD,EAAAuD,EAAA,kBAAA,yBAEA,OAAA/D,EAAA/B,YAAA,CACA,GAAA+B,EAAAkE,KAAAL,EAAAM,KAAAnE,EAAAkE,IAAA,CACAD,EAAAG,QAAA,IAAApE,EAAAkE,IACA,MAGA,GAAAlE,IAAAgE,OACA3J,IAAA0J,EACAE,EAAAG,QAAApE,EAAAqE,SACAJ,EAAAG,QAAA,OAEA,CAIA,IAHA,IAAAE,EAAAtE,EACAjE,EAAAgI,EAAA,EAAA,EAEAO,EAAA9D,IACA8D,EAAAA,EAAA9D,GACAzE,IAGAgI,EACAE,EAAAG,QAAArI,GAEAkI,EAAAG,QAAA,cAAArI,EAAA,KAIA,GAAA,QADAiE,EAAAA,EAAA/B,YAEA,MAIA,OAAA8F,EACAE,EACAA,EAAAM,KAAA,QAGA3E,EAAAmE,aAAA,SAAAS,EAAAhF,GACA,IAAAQ,EAAAR,GAAAkE,EACA3H,EAAA,EAEA,GAAAyI,EAAA,GAAA/J,cAAAiF,QAAAM,EAAAkE,KAAAM,EAAA,GAAAC,OAAA,GACAzE,EAAAA,EAAAF,cAAA0E,EAAA,SAEA,GAAA,IAAAA,EAAA1I,OACA,OAAAkE,EAEA,IAAAjE,EAAAA,EAAAA,EAAAyI,EAAA1I,OAAAC,IAGA,GAAA,QAFAiE,EAAAA,EAAA0E,WAAA1G,KAAAwG,EAAAzI,KAGA,OAAA,KAGA,OAAAiE,GAhSA,GCVA9F,GAAAS,OAAA,IAAA,WACA,IAAAiF,EAAAxF,KACAwF,EAAA+E,cAAA,EACA/E,EAAAgF,aAAA,EACAhF,EAAAiF,cAAA,EACAjF,EAAAkF,UAAA,EACAlF,EAAAmF,WAAA,EAEA,IAAAC,EAAA,GACAC,EAAA,GACAC,EAAA,GAEAtF,EAAAsB,IAAA,WACAtB,EAAAmF,WAAA,GAIAnF,EAAAhF,SAAA,SAAAY,GACA,GAAAoE,EAAAiF,aAAA,OAAArJ,KACA,IAAAyJ,EAAA9B,QAAA3H,IACAyJ,EAAApJ,KAAAL,IAEAoE,EAAA+D,SAAA,SAAAnI,GACA,GAAAoE,EAAAkF,SAAA,OAAAtJ,KACA,IAAAwJ,EAAA7B,QAAA3H,IACAwJ,EAAAnJ,KAAAL,IAEAoE,EAAAuF,WAAA,SAAA3J,GACA,GAAAoE,EAAAiF,aAAA,OAAArJ,EAAAoE,EAAA+E,cAAA/E,EAAAgF,eACA,IAAAM,EAAA/B,QAAA3H,IACA0J,EAAArJ,KAAAL,IAGAoE,EAAAwF,EAAA,SAAApF,GACAJ,EAAA+E,gBACA,IAAA,IAAA5I,EAAA,EAAAA,EAAAmJ,EAAApJ,OAAAC,IACAmJ,EAAAnJ,GAAA6D,EAAA+E,cAAA/E,EAAAgF,eAIAhF,EAAAyF,IAAA,SAAAjD,GACA,GAAAxC,EAAAiF,aAAA,CAEA,IAAA,IAAA9I,EAAAqG,EAAAtG,OAAA,EAAAC,GAAA,EAAAA,IACA,IAAA4D,EAAA,eAAAyC,EAAArG,GAAA,MAAAD,QACAsG,EAAAb,OAAAxF,EAAA,GAEA,GAAA,IAAAqG,EAAAtG,OAAA,OAEA8D,EAAAmF,WAAA,EAEAnF,EAAAgF,aAAAhF,EAAAgF,aAAAxC,EAAAtG,OACA,IAAAC,EAAA,EAAAA,EAAAqG,EAAAtG,OAAAC,IAAA,CACA,IAAA0C,EAAAnE,SAAAoI,cAAA,QACAjE,EAAA6G,IAAA,aACA7G,EAAA8G,KAAAnD,EAAArG,GACA0C,EAAAsC,iBAAA,OAAA7G,GAAAS,OAAAyK,EAAA,CAAAxE,MAAA,IACAnC,EAAAsC,iBAAA,QAAA7G,GAAAS,OAAAyK,EAAA,CAAAxE,MAAA,IACAtG,SAAAkL,KAAAC,YAAAhH,KAIAmB,EAAA8F,GAAA,SAAAtD,GACA,GAAAxC,EAAAiF,aAAA,CAEA,IAAA,IAAA9I,EAAAqG,EAAAtG,OAAA,EAAAC,GAAA,EAAAA,IACA,IAAA4D,EAAA,gBAAAyC,EAAArG,GAAA,MAAAD,QACAsG,EAAAb,OAAAxF,EAAA,GAEA,GAAA,IAAAqG,EAAAtG,OAAA,OAEA8D,EAAAmF,WAAA,EAEAnF,EAAAgF,aAAAhF,EAAAgF,aAAAxC,EAAAtG,OACA,IAAAC,EAAA,EAAAA,EAAAqG,EAAAtG,OAAAC,IAAA,CACA,IAAA0C,EAAAnE,SAAAoI,cAAA,UACAjE,EAAAkH,KAAA,kBACAlH,EAAAmH,OAAA,EACAnH,EAAAoH,IAAAzD,EAAArG,GACA0C,EAAAsC,iBAAA,OAAA7G,GAAAS,OAAAyK,EAAA,CAAAxE,MAAA,IACAnC,EAAAsC,iBAAA,QAAA7G,GAAAS,OAAAyK,EAAA,CAAAxE,MAAA,IACAtG,SAAAkL,KAAAC,YAAAhH,KAIA8D,WAAA,WACA,IAAA3C,EAAAgF,cAAAhF,EAAAmF,YACAnF,EAAA+E,cAAA/E,EAAAgF,aAAA,EACAkB,QAAAC,KAAA,wFAEA,KAGA,IAAAC,GAAA,EAEA1L,SAAAyG,iBAAA,OAAA,SAAAkF,EAAAtF,GAEA,IAAA,IAAAqF,GAAA1L,SAAAsJ,KAAA,CACAtJ,SAAAgH,oBAAA,OAAA2E,GAAA,GAEAD,EAAA9L,GAAAgM,MAAAC,gBAAA7L,SAAAsJ,MAEA,IAAA,IAAA7H,EAAA,EAAAA,EAAAiK,EAAAlK,OAAAC,IACAiK,EAAAjK,GAAAsG,UAAAC,IAAA,iBAGA,IAAA0D,EAAAlK,SAAAkK,GAAA,MAiBA,GAEA1L,SAAAyG,iBAAA,mBAAA,SAAAqF,IACA,GAAA,gBAAA9L,SAAA+L,YAAA,aAAA/L,SAAA+L,WAAA,CACA,IAAA,IAAAzG,EAAAkF,SAAA,CACAlF,EAAAkF,UAAA,EACA,IAAA,IAAA/I,EAAA,EAAAA,EAAAiJ,EAAAlJ,OAAAC,IACA,IACAiJ,EAAAjJ,KACA,MAAAuI,GACAwB,QAAAQ,MAAAhC,KAKA,IAAA0B,IACAA,EAAA9L,GAAAgM,MAAAC,gBAAA7L,SAAAsJ,OAEA2C,EAAAC,YAAAC,EAAA,KACAnM,SAAAgH,oBAAA,mBAAA8E,GAAA,MAEA,GAEA,IAAAG,GAAA,EACA,SAAAE,IACA,MAAA,IAAA7G,EAAAmF,WAAAnF,EAAA+E,cAAA/E,EAAAgF,cAAA,CAGA8B,cAAAH,GAGA,IADA,IAAAI,EAAAzM,GAAAoF,IAAA,qBACAvD,EAAA,EAAAA,EAAA4K,EAAA7K,OAAAC,IACA4K,EAAA5K,GAAAuF,oBAAA,QAAApH,GAAAS,OAAAyK,GACAuB,EAAA5K,GAAAuF,oBAAA,OAAApH,GAAAS,OAAAyK,GAGAxF,EAAAiF,cAAA,EACA,IAAA9I,EAAA,EAAAA,EAAAkJ,EAAAnJ,OAAAC,IACA,IACAkJ,EAAAlJ,KACA,MAAAuI,GACAwB,QAAAQ,MAAAhC,GAGAY,EAAA3D,OAAA,GACAyD,EAAAzD,OAAA,GACA0D,EAAA1D,OAAA,GACAyD,EAAAC,EAAA,KAGA/K,GAAA0M,WAAAC,OACA3M,GAAAgM,MAAAW,KAAAvM,SAAAsJ,KAAAoC,GACA9L,GAAA4M,OAAAD,OAEAb,EAAA,QAGA9L,GAAAqD,UAAA9C,YAAAP,GAAAS,OAAAC,SCpLAV,GAAA6M,UAAA,IAAA,WACA,IAAAnH,EAAAxF,KACA4M,EAAAzM,SAAAwM,UAAA,GACAnH,EAAAqH,WAAA,GACArH,EAAAsH,UAAA,GAEA,IAAAC,EAAA,GACAhG,EAAA,GAEAvB,EAAAwH,IAAA,SAAAC,EAAA7L,EAAA8L,GACA,IAAApN,GAAAS,OAAAkK,aACA,OAAA3K,GAAA,WACA0F,EAAAwH,IAAAC,EAAA7L,UAGAnB,IAAAuF,EAAAqH,WAAAI,KACAzH,EAAAqH,WAAAI,GAAA,CAAA7L,EAAAtB,GAAA0M,WAAAW,QAAAF,GAAA,GAAA,EAAAC,IACA1H,EAAAqH,WAAAI,GAAA,GAAA7L,SACAtB,GAAA0M,WAAAW,QAAAF,IAGAzH,EAAAe,MAAA,SAAA0G,EAAA7L,GACA2F,EAAAkG,GAAA7L,GAGAoE,EAAA4H,KAAA,SAAAH,EAAA7L,GACA2L,EAAAE,GAAA7L,GAGAoE,EAAAoD,KAAA,SAAAqE,EAAAI,GACA,IAAAvN,GAAAS,OAAAkK,aACA,OAAA3K,GAAA,WACA0F,EAAAoD,KAAAqE,EAAAI,UAGApN,IAAAuF,EAAAqH,WAAAI,KACAzH,EAAAqH,WAAAI,GAAA,EAAA,GAAA,EAAA,GAAA,IACAzH,EAAAqH,WAAAI,GAAA,GAAA1H,EAAAF,aAAAgI,GAAA,IAGAT,EAAAU,aAAA,SAAAL,EAAA1G,EAAA1E,QACA5B,IAAA8G,EAAAkG,SAAAhN,IAAA8G,EAAAkG,GAAA1G,IAGAQ,EAAAkG,GAAA1G,GAAA1E,EAAA0E,IAGA,IAAAuC,EAAA5I,SAAAoI,cAAA,OACA9C,EAAA+H,IAAA,SAAAN,EAAArH,GACA,IAAA4H,OAAAvN,IAAA2F,EACA,QAAA3F,IAAA2F,EAAA,CACA,IAAA,IAAAJ,EAAAqH,WAAAI,GAAA,GAEA,YADAvB,QAAAQ,MAAA,qBAAAe,EAAA,qBAGArH,EAAAJ,EAAAqH,WAAAI,GAAA,GAAAQ,WAAA,GAGA,IAAAC,EAAAT,EAAA,IAAAzH,EAAAqH,WAAAI,GAAA,KACArH,EAAA+H,aAAA,gBAAAD,GACA9H,EAAAgI,cAAA,EACAhI,EAAAiI,iBAAAZ,OAEAhN,IAAAuF,EAAAsH,UAAAG,KACAzH,EAAAsH,UAAAG,GAAA,IAEAzH,EAAAsH,UAAAG,GAAAxL,KAAAiM,GAEA,IAAAI,EAAAhO,GAAAgM,MAAAiC,KAAAL,GAAA,GACAlI,EAAAqH,WAAAI,GAAA,GAAAa,EAAAhO,GAAAgM,OAEA,IAAAoB,EAAA1H,EAAAqH,WAAAI,GAAA,GACA,QAAAhN,IAAAiN,EACA,GAAAA,EAAA7M,cAAA2N,MACA,IAAA,IAAArM,EAAA,EAAAA,EAAAuL,EAAAxL,OAAAC,IAAA,CACA,QAAA1B,IAAA8M,EAAAG,EAAAvL,IACA,OAAA+J,QAAAQ,MAAA,IAAAgB,EAAAvL,GAAA,uBACAoL,EAAAG,EAAAvL,IAAAmM,EAAAhO,GAAAgM,WAGA,CACA,QAAA7L,IAAA8M,EAAAG,GACA,OAAAxB,QAAAQ,MAAA,IAAAgB,EAAA,uBACAH,EAAAG,GAAAY,EAAAhO,GAAAgM,OASA,OALAtG,EAAAqH,WAAAI,GAAA,IACAzH,EAAAqH,WAAAI,GAAA,GAAAa,EAAAhO,GAAAgM,OAEAc,EAAAU,aAAAL,EAAA,UAAAa,GAEAN,GAEA1E,EAAAuC,YAAAzF,GACA9F,GAAAgM,MAAAW,KAAA7G,IACAA,EAAAkD,EAAAmF,mBACAzK,SAEAoC,EAAAkG,MAAAhM,GAAAgM,MAAAiC,KAAAL,GACA9H,EAAAsI,QAAA,WACA,OAAAlO,KAAA8F,cACA3F,SAAA2L,MAAAqC,eAAAnO,MACAA,KAAAwD,UAEAoC,IAGAA,EAAAkG,MAAAhM,GAAAgM,MAAAiC,KAAAL,GACAA,KC5GA5N,GAAAgM,MAAA,SAAAc,GACA,YAAA3M,IAAAH,GAAA6M,UAAAE,WAAAD,GACAwB,MAAAxB,IAEA9M,GAAAgM,MAAAiC,KAAAnB,KACA9M,GAAAgM,MAAAiC,KAAAnB,GAAA,IAEA9M,GAAA0M,WAAAW,QAAAP,IACA9M,GAAA0M,WAAA6B,IAAAzB,GAEA9M,GAAAgM,MAAAiC,KAAAnB,KAGA,WACA,IAAApH,KAAA1F,GAAAgM,MACAc,MAAAzM,SAAA2L,MAAA,GACAwC,gBAAA,EACA9I,KAAAuI,KAAA,GAEA,IAAAQ,kBAAA,KAGA,SAAAC,gBAAArF,GACA,IAAAsF,EAAAtF,EAAAnC,MAAA,KAAA,GAKA,YAAA/G,KAHAwO,EADA,MAAAA,EAAA,GAAA,IAAA,OAAAA,EAAA,GAAA,GACAA,EAAA,GACAA,EAAA,IAEAtF,EAEA,KADAsF,EAAAA,EAAA/M,OAAA+M,EAAAC,OAAAhN,QACAyH,EACAA,EAAA5H,QAAAoN,OAAA,YAAAF,EAAA,KAAA,MAAA,IAIA,IAAAG,aAAAD,OAAA,wBAAA7O,GAAAY,MAAAQ,YAAA,KACA2N,uBAAA/O,GAAAY,MAAAE,kBACAkO,UAAA,SAAAC,OAAAC,QAAAC,YAAAC,WAIA,IAAAC,WAAAJ,OAGAI,WAAAA,WAAA5N,QAAAzB,GAAAY,MAAAC,UAAA,YAKA,IAFA,IAAAyO,kBAAA,EACAC,OAAA,KACA,QAAAA,OAAAT,aAAAU,KAAAH,cAGA,GAFAE,OAAA,GAAAA,OAAA,GAAAX,QAEA,IAAAzN,oBAAA8H,QAAAsG,OAAA,KACA,gBAAAA,OAAA,GAAArI,MAAA,KAAA,IACA6H,uBAAA9E,KAAAsF,OAAA,GAAAA,OAAA,GAAA3N,OAAA,IACA,CACA0N,iBAAAC,OAAA,GACA,MAIA,GAAAD,iBAIA,OAHA1D,QAAAQ,MAAA,8CAAAkD,iBAAA,KACA1D,QAAA6D,IAAAf,gBAAAD,kBAAAlB,WAAAqB,QAEA,YAIA,IAAAc,SAAA,GACA,IACA,IAAA,IAAA,WAAAzF,KAAAgF,QAAA,CACA,IAAAU,SAAAC,KAAA,eAAAX,OAAA/H,MAAA,YAAAmD,KAAA,WAAA,QACA,OAAAqF,SAAAC,SAEA,IAAAA,SAAAC,KAAAX,QACA,MAAA7E,GAIA,OAHAwB,QAAAQ,MAAAhC,GACAwB,QAAA6D,IAAAf,gBAAAD,kBAAAlB,WAAAqB,QAEA,YAGA,MAAA,KAAAc,SAAAA,SACAC,UA8CA,SAAAE,mBAAAxG,GACA,OAAAA,EAAAnC,MAAA,OAAAmD,KAAA,SAAAnD,MAAA,OAAAmD,KAAA,SAGA,SAAAyF,qBAAAzG,GACA,OAAAA,EAAAnC,MAAA,SAAAmD,KAAA,OAAAnD,MAAA,SAAAmD,KAAA,OAGA,SAAA0F,aAAAC,EAAAC,GAIA,IAHA,IAAAC,EAAAF,EAAAE,OAGArO,EAAA,EAAAA,EAAAqO,EAAAtO,OAAAC,IAGA,GADAoO,EAAA,GAAAC,EAAArO,GAAA,GACAmN,UAAArO,MAAA+E,KAAAuI,KAAAgC,GAKA,OADAA,EAAA,GAAAC,EAAArO,GAAA,GACAmN,UAAArO,MAAA+E,KAAAuI,KAAAgC,GAIA,OAAA,OAAAD,EAAAG,UACA,IAEAF,EAAA,GAAAD,EAAAG,UACAnB,UAAArO,MAAA+E,KAAAuI,KAAAgC,IAtEAvK,KAAAxC,MAAA,SAAA4C,GAKA,IAJA,IAAAjE,GAAA,EACAsI,EAAArE,EAAAqE,QACAiG,EAAAtK,EAEA,OAAAA,GACAA,EAAAqE,UAAAA,GACAtI,IAEAiE,EAAAA,EAAAuK,uBAGA,IAAAnI,EAAAkI,EAAAE,aAAA,gBACA,IAAApI,EAAA,OAAArG,EAEA,IAAAsF,EAAAzB,KAAAuI,KAAAjO,GAAA0M,WAAA6D,UAAAH,IAAAlI,GACA,OAAAf,EAAAqJ,SAEA3O,EAAAsF,EAAAqJ,SAAAC,UAAA,EAFA5O,GAMA6D,KAAAwH,IAAA,SAAAC,EAAA7L,GACA,IAAAtB,GAAAS,OAAAkK,aACA,OAAA3K,GAAA,WACA0F,KAAAwH,IAAAC,EAAA7L,KAGAA,EAAAoE,KAAAyH,GAAAzH,OAIAA,KAAAgL,UAAA,SAAAC,GAEA,IADA,IAAAC,EAAArO,OAAAqO,KAAAD,GACA9O,EAAA+O,EAAAhP,OAAA,EAAAC,GAAA,EAAAA,KACA,IAAA+O,EAAA/O,GAAAoH,QAAA,MACA2H,EAAAvJ,OAAAxF,EAAA,GAEA,OAAA+O,GAoCA,IAAAC,qBAAA,iBACAC,WAAA,EAAAC,OAAA,EAAAC,SAAA,EACAC,aAAA,SAAAC,EAAApN,EAAAqN,GAIA,IAHA,IAAAC,EAAA,GAGAvP,EAAA,EAAAA,EAAAqP,EAAAtP,OAAAC,IACA,QAAA1B,IAAAgR,IAAA,IAAAA,EAAAlI,QAAApH,GAAA,CAGA,IAAAsF,EAAA+J,EAAArP,GAIA,GAHAsF,EAAAkK,KAAA,GAAAvN,EAGAqD,EAAAsE,OAAAqF,YAAA3J,EAAAsE,OAAAuF,SACAI,EAAAvP,GAAA,CAAA4J,KAAAtE,EAAAsE,KAAA4F,KAAArC,UAAArO,MAAA+E,KAAAuI,KAAA9G,EAAAkK,YAGA,GAAAlK,EAAAsE,OAAAsF,OAAA,CACA,IAAAd,EAAA9I,EAAAkK,KAKA,GAJAD,EAAAvP,GAAA,CAAA4J,KAAAtE,EAAAsE,KAAA4F,KAAA,IACApB,EAAA,GAAA9I,EAAAmK,GAAA,IAGAtC,UAAArO,MAAA+E,KAAAuI,KAAAgC,GAAA,CACAmB,EAAAvP,GAAAwP,KAAAtB,aAAA5I,EAAA8I,GACA,SAGAA,EAAA,GAAA9I,EAAAmK,GAAA,GACAF,EAAAvP,GAAAwP,KAAArC,UAAArO,MAAA+E,KAAAuI,KAAAgC,IAGA,OAAAmB,GAGAG,eAAA,SAAAC,EAAA1N,EAAA2N,GACA,IAAA3I,GAAA,IAAA2I,EAAAD,EAAA1I,KAAA0I,EAAA1I,KAAA6E,WAAA,GACA+D,EAAAF,EAAAE,UACAN,EAAAH,aAAAO,EAAAN,MAAApN,GAGAgF,EAAAkD,MAAAlI,EAMA,IAJA,IAAA6N,EAAA,GACAC,EAAA,GAGA/P,EAAA,EAAAA,EAAA6P,EAAA9P,OAAAC,IAAA,CACA,IAAAsF,EAAAuK,EAAA7P,GACAgQ,EAAApM,EAAAoE,aAAA1C,EAAA2K,QAAAhJ,GAGA,GAAA,IAAA3B,EAAA4K,SAAA,CAyCA,GAAA,IAAA5K,EAAA4K,SAAA,CACAC,EAAAH,EAOA,GALAF,EAAAhQ,KAAA,CACAuH,YAAA8I,EACA7K,IAAAA,SAGAhH,IAAAgH,EAAA8K,OAAA,CACAD,EAAA9I,YAAAkI,EAAAjK,EAAA8K,QAAAZ,KACA,SAIAW,EAAA9I,YAAA8I,EAAA9I,YAAAzH,QAAAoP,qBAAA,SAAAnP,EAAAwQ,GACA,OAAAd,EAAAc,GAAAb,OAKA,IAAA,IAAAlK,EAAA4K,SAAA,CACA,IAAAI,EAAA,CACAC,YAAAP,EACAI,OAAA9K,EAAAkL,YACAtO,WAAA8N,EAAA9N,WACAuO,UAAAnL,EAAAmL,WAAA7M,EAAAoE,aAAA1C,EAAAmL,UAAAxJ,IAEA6I,EAAAhQ,KAAAwQ,GAGAP,EAAAjQ,KAAAwQ,SArEA,IADA,IAAAH,EAAA7K,EAAAoL,WACAC,EAAA,EAAAA,EAAAR,EAAApQ,OAAA4Q,IAAA,CACA,IAAAC,EAAAT,EAAAQ,GAEAE,EAAA,UAAAD,EAAAtF,OAAA,aAAA0E,EAAA1H,SACA,UAAA0H,EAAA1H,UAAA,IAAA,wBAAAF,KAAA4H,EAAApG,OAQA,GALAkG,EAAAhQ,KAAA,CACAgR,WAAA,IAAAD,EAAAb,EAAAA,EAAAU,WAAAE,EAAAtF,MACAhG,IAAAsL,SAGAtS,IAAAsS,EAAAR,OAAA,CAWA,GAAA,UAAAQ,EAAAtF,OAAA,IAAAuF,EAAA,CACA,IAAAnR,EAAAsQ,EAAAvP,MACAuP,EAAAe,gBAAA,SACAf,EAAAvP,MAAAf,EACAkR,EAAAZ,OAEAY,EAAAZ,EAAAU,WAAAE,EAAAtF,MAEAsF,EAAAnQ,MAAAmQ,EAAAnQ,MAAAb,QAAAoP,qBAAA,SAAAnP,EAAAwQ,GACA,OAAAd,EAAAc,GAAAb,WApBA,CACA,GAAA,UAAAoB,EAAAtF,OAAA,IAAAuF,EAAA,CACAb,EAAAvP,MAAA8O,EAAAqB,EAAAR,QAAAZ,KACAQ,EAAAe,gBAAA,SACA,SAEAf,EAAAhE,aAAA4E,EAAAtF,KAAAiE,EAAAqB,EAAAR,QAAAZ,QAwDAvI,EAAA+J,qBAAAlB,EAIA,IAAA9P,EAAA,EAAAA,EAAA+P,EAAAhQ,OAAAC,IACA,CAAAsF,EAAAyK,EAAA/P,GAAA,IACAiR,EAAArN,EAAAF,aAAA6L,EAAAjK,EAAA8K,QAAAZ,MAAA,GACA,IAAAmB,EAAA,EAAAA,EAAAM,EAAAlR,OAAA4Q,IACArL,EAAApD,WAAAgP,aAAAD,EAAAN,GAAArL,EAAAiL,aAIA,OAAAtJ,GAGA,SAAAkK,eAAAlN,EAAA0L,EAAA1N,QACA3D,IAAA2F,EAAAmN,WACAnN,EAAAmN,SAAA,IAKA,IAHA,IAAAC,EAAApN,EAAAmN,SACAE,EAAA3B,EAAA2B,eAEAtR,EAAA,EAAAA,EAAAsR,EAAAvR,OAAAC,IAAA,CACA,IAAAsF,EAAAgM,EAAAtR,GACAqR,EAAA/L,EAAA,IAAAxE,aAAAmB,EAAAqD,EAAA,KAIA,SAAAiM,kBAAAtN,EAAA0L,EAAAnP,EAAAyB,GACA,IAAAoP,EAAApN,EAAAmN,SACAE,EAAA3B,EAAA2B,eAEA,QAAAhT,IAAAkC,EAAA,CAEA,QAAAlC,KADAkT,EAAA7B,EAAA8B,eAAAjR,KACA,IAAAgR,EAAAzR,OAEA,OADAgK,QAAAQ,MAAA,qDAAA/J,EAAA,sBACA,EAGA,GAAA6Q,EACA,IAAA,IAAArR,EAAA,EAAAA,EAAAsR,EAAAvR,OAAAC,IAAA,CAEA,IADAsF,EAAAgM,EAAAtR,IACA,KAAAQ,EAAA,CAEA,IAAAkR,EAAA5Q,aAAAmB,EAAAqD,EAAA,IAGA+L,EAAA/L,EAAA,MAAAoM,IACAL,EAAA/L,EAAA,IAAAoM,SAGA,CACA,IAAAF,EAAA,GACA,IAAAxR,EAAA,EAAAA,EAAAsR,EAAAvR,OAAAC,IAAA,CACA,IAAAsF,EAAAgM,EAAAtR,GACA,QAAA1B,IAAA+S,EAAA,CAIAK,EAAA5Q,aAAAmB,EAAAqD,EAAA,IAGA+L,EAAA/L,EAAA,MAAAoM,IACArF,MAAA7K,UAAA1B,KAAAhB,MAAA0S,EAAA7B,EAAA8B,eAAAnM,EAAA,KACA+L,EAAA/L,EAAA,IAAAoM,QARArF,MAAA7K,UAAA1B,KAAAhB,MAAA0S,EAAA7B,EAAA8B,eAAAnM,EAAA,KAYA,GAAA,IAAAkM,EAAAzR,OAAA,OAAA,EAGA,IAAAwP,EAAAH,aAAAO,EAAAN,MAAApN,EAAAuP,GACA,SAAAG,EAAAC,GAEA,IADA,IAAAC,GAAA,EACA7R,EAAA,EAAAA,EAAA4R,EAAA7R,OAAAC,IACA,IAAA,IAAAwR,EAAApK,QAAAwK,EAAA5R,IAAA,CACA6R,GAAA,EACA,MAGA,IAAA,IAAAA,EACA,OAAA,EAGAL,EAAA,GACA,IAAAxR,EAAA,EAAAA,EAAA4R,EAAA7R,OAAAC,SACA1B,IAAAiR,EAAAqC,EAAA5R,KACAwR,EAAA1R,KAAA8R,EAAA5R,IAKA,OADAU,OAAAM,OAAAuO,EAAAH,aAAAO,EAAAN,MAAApN,EAAAuP,KACA,EAGA,IAAA1B,EAAA7L,EAAA+M,qBACAc,GAAA,EACA,IAAA9R,EAAA,EAAAA,EAAA8P,EAAA/P,OAAAC,IAAA,CACA,IAAAsQ,EAAAR,EAAA9P,GAEA,QAAA1B,IAAAgS,EAAAC,aAkCA,QAAAjS,IAAAgS,EAAAjJ,YAAA,CACA,QAAA/I,IAAAgS,EAAAhL,IAAAkL,YAAA,CACA,IAAA,IAAAmB,EAAArB,EAAAhL,IAAAkL,aAAA,CACA,IAAA9Q,EAAA4Q,EAAAhL,IAAA7E,MAAAb,QAAAoP,qBAAA,SAAAnP,EAAAwQ,GACA,OAAAd,EAAAc,GAAAb,OAGA,GAAAc,EAAAjJ,YAAAA,cAAA3H,EAAA,SACA4Q,EAAAjJ,YAAAA,YAAA3H,EAEAoS,GAAA,EAEA,SAIA,GAAAvC,EAAAe,EAAAhL,IAAA8K,QAAA,CACA,IAAA3P,EAAA8O,EAAAe,EAAAhL,IAAA8K,QAAAZ,KACA,GAAAc,EAAAjJ,YAAAA,cAAA5G,EAAA,SAEA,IAAAsR,EAAAzB,EAAAjJ,YAEA,IAAA,IAAA0K,EAAAC,cACA,KAAAD,EAAAtN,iBAAAsN,EAAAtN,gBAAAwN,eAAAF,GACAA,EAAAtN,gBAAA5C,SAIAkQ,EAAA1K,YAAA5G,EACAqR,GAAA,QAGA,QAAAxT,IAAAgS,EAAAQ,UAAA,CACA,QAAAxS,IAAAgS,EAAAhL,IAAAkL,YAAA,CACA,IAAA,IAAAmB,EAAArB,EAAAhL,IAAAkL,aAAA,CACA9Q,EAAA4Q,EAAAhL,IAAA7E,MAAAb,QAAAoP,qBAAA,SAAAnP,EAAAwQ,GACA,OAAAd,EAAAc,GAAAb,OAGA,GAAAc,EAAAQ,UAAArQ,QAAAf,EAAA,SACA4Q,EAAAQ,UAAArQ,MAAAf,EAEAoS,GAAA,EAEA,SAIA,GAAAvC,EAAAe,EAAAhL,IAAA8K,QAAA,CACA3P,EAAA8O,EAAAe,EAAAhL,IAAA8K,QAAAZ,KACA,GAAAc,EAAAQ,UAAArQ,QAAAA,EAAA,SACA6P,EAAAQ,UAAArQ,MAAAA,EAEAqR,GAAA,SAtFA,QAAAxT,IAAAiR,EAAAe,EAAAF,QAAA,CAMA,IALA,IAAAa,EAAArN,EAAAF,aAAA6L,EAAAe,EAAAF,QAAAZ,MAAA,GAAA0C,UACAC,EAAAvO,EAAAQ,QAAAkM,EAAAC,YAAAD,EAAAG,WACA2B,GAAA,EAGAzB,EAAA,EAAAA,EAAAM,EAAAlR,OAAA4Q,IAAA,CACA,QAAArS,IAAA6T,EAAAxB,GAAA,CACAyB,GAAA,EACA,OAEA,IAAAD,EAAAxB,GAAA0B,YAAApB,EAAAN,KACAL,EAAApO,WAAAoQ,aAAArB,EAAAN,GAAAwB,EAAAxB,IAIA,GAAAyB,EACA,IAAAzB,EAAA,EAAAA,EAAAM,EAAAlR,OAAA4Q,IACAL,EAAApO,WAAAgP,aAAAD,EAAAN,GAAAL,EAAAC,kBAKA,IAAAI,EAAAM,EAAAlR,OAAA4Q,EAAAwB,EAAApS,OAAA4Q,IACAwB,EAAAxB,GAAA9O,SAIAiQ,GAAA,GA+DA,OAAAA,EAKA,IAAAzS,WAAA,SAAA4H,EAAAoG,EAAAkF,EAAAtH,EAAAuH,EAAAC,GACA,IAAAnF,EAAAzJ,KAAAuI,KAAAnB,GACAuH,IAAAA,EAAA,IAGA,IAAAE,EAAA1F,OAAA7O,GAAAY,MAAAG,UAAA,IAAA2E,KAAAgL,UAAAvB,GAAA9E,KAAA,KAAA,OAAA,KAEA,GAAA+J,EACA,IAAAI,EAAA3F,OAAA7O,GAAAY,MAAAG,UAAAqT,EAAA,SAAA,KAIA,GAFA5F,gBAAA,EAEA,YAAA6F,EACA,IAAAI,EAAA,GACAC,EAAAJ,EAAA1S,OAGA,IAAA+S,EAAA7L,EAAArH,QAAAzB,GAAAY,MAAAM,WAAA,SAAA0T,EAAArT,GAkBA,GAjBAA,EAAAH,YAAAG,EAAA,SAAAsT,GAWA,OATAtT,EAAAA,EAAA2F,MAAA,SAAAmD,KAAA,KAAAnD,MAAA,QAAAmD,KAAA,KAAAnD,MAAA,QAAAmD,KAAA,KAGA+J,IACAS,EAAAA,EAAApT,QAAA+S,EAAA,SAAAM,GACA,MAAA,WAAAA,EAAA,GAAAC,MAAA,MAIAF,EAAApT,QAAA8S,EAAA,SAAA7S,EAAAoT,GACA,MAAA,eAAAA,MAEA5N,MAAA,wBAAAmD,KAAA,YAGA,YAAAgK,EAAA,CACA9S,EAAAA,EAAAqN,OAGA,IAAAoG,EAAAP,EAAAxL,QAAA1H,GAEA,OAAA,IAAAyT,GACAP,EAAA9S,KAAAJ,GACA+S,EAAA3S,KAAA,CAAA8J,KAAAqF,WAAAO,KAAA,CAAA9P,EAAA2N,EAAAC,KACA,QAAAsF,EAAA7S,OAAA8S,EAAA,IAEA,QAAAM,EAAAN,GAKA,OAFAnT,EAAA,GAAAyN,UAAArO,MAAA+E,KAAAuI,KAAA,CAAAoG,EAAA9S,EAAA2N,EAAAC,KAEA1N,QAAAzB,GAAAY,MAAAI,WAAA,SAAAa,GACA,MAAA,KAAAA,EAAAoT,WAAA,GAAA,QASA,MALA,YAAAZ,IAEAI,EAAAtF,EAAAD,EAAAkF,EAAAtH,EAAAuH,EAAAE,EAAAC,EAAA1L,EAAA,KACAT,WAAA,WAAAsM,EAAA,MAAA,IAEAA,GAIA1T,iBAAA,SAAA6H,EAAAoG,EAAAkF,EAAAtH,EAAAuH,GAEA,IAAAjF,EAAA,CACAxN,OAAA,EACAsT,KAAA,SAAAC,EAAAC,GACA,GAAA,OAAAD,EACA,OAAAjU,WAAAhB,KAAAkV,GAAAlG,EAAAkF,EAAAtH,GAGA,IAAAuI,EAAA,oBACAC,GAAA,EAGA,IAAA,IAAAtT,KAAAmT,EACA,iBAAAA,EAAAnT,GACAmT,EAAAnT,GAAA,IAAAmT,EAAAnT,GAAAkF,MAAA,KAAAmD,KAAA,OAAA,IACA,iBAAA8K,EAAAnT,KACAmT,EAAAnT,GAAAuT,KAAAC,UAAAL,EAAAnT,KAEAsT,IACAD,GAAA,KAEAA,GAAArT,EAAA,MAAAmT,EAAAnT,GACAsT,GAAA,EAWA,OAPA,IAAAA,IACAD,EAAAA,EAAA5T,QAAA,OAAA,KAGA4T,EAAAA,EAAAnO,MAAA,KAAAmD,KAAA,SAAAnD,MAAA,KAAAmD,KAAA,SAGAnJ,WAAAhB,KAAAkV,GAAAlG,EAAAkF,EAAAtH,EAAAuI,EAAA,OAKAvM,EAAAA,EAAArH,QAAA,oBAAA,SAAAC,EAAAoT,GACA,OAAA,IAAA,UAAA7K,KAAA6K,GACA,gBAAAA,EAAA5N,MAAA,KAAAmD,KAAA,OAAA,KAEA+E,EAAAA,EAAAxN,QAAAkT,EACA1F,EAAAxN,SACA,0CAAAwN,EAAAxN,OAAA,GAAA,QAGA,IAAAuN,EAAAzJ,KAAAuI,KAAAnB,GAGAyH,EAAA1F,OAAA7O,GAAAY,MAAAG,UAAA,IAAA2E,KAAAgL,UAAAvB,GAAA9E,KAAA,KAAA,OAAA,KAEA,GAAA+J,EACA,IAAAI,EAAA3F,OAAA7O,GAAAY,MAAAG,UAAAqT,EAAA,SAAA,KAEA,GAAA,YAAAC,EACA,IAAAC,EAAA,GAEA,IAAAK,EAAA7L,EAAArH,QAAAzB,GAAAY,MAAAK,iBAAA,SAAA2T,EAAArT,GACAA,EAAAH,YAAAG,EAAA,SAAAsT,GAWA,OATAA,EAAAA,EAAA3N,MAAA,SAAAmD,KAAA,KAAAnD,MAAA,QAAAmD,KAAA,KAAAnD,MAAA,QAAAmD,KAAA,KAGA+J,IACAS,EAAAA,EAAApT,QAAA+S,EAAA,SAAAM,GACA,MAAA,WAAAA,EAAA,GAAAC,MAAA,MAIAF,EAAApT,QAAA8S,EAAA,SAAA7S,EAAAoT,GACA,MAAA,eAAAA,MAEA5N,MAAA,wBAAAmD,KAAA,YASA,IAPA,IACAoL,GAAA,EAGAC,EAAA,wCACAC,EAAA,GACAC,EAAA,KACA,QAAAA,EAAAF,EAAAlG,KAAAjO,KACAoU,EAAAhU,KAAAiU,EAAA,IAMA,GAHA,OAAA1G,GAAA,YAAAmF,GACAsB,EAAAhU,KAAA,WAEA,IAAAgU,EAAA/T,OAAA,CAEA,IADA,IAAAiU,EAAA,GACAhU,EAAA,EAAAA,EAAA8T,EAAA/T,OAAAC,IACA8T,EAAA9T,GAAAJ,QAAA,kBAAA,IAAAyF,MAAA,KAAArD,QAAA,SAAAiS,GACAD,EAAAlU,KAAAmU,KAGAH,EAAAE,EACA,IAAAhU,EAAA,EAAAA,EAAA8T,EAAA/T,OAAAC,IACA8T,EAAA9T,IAAA,YAAA8T,EAAA9T,GAAA,kBAAA8T,EAAA9T,GAAA,cAIA8T,EADA,IAAAA,EAAA/T,OACA,OACA,IAAA+T,EAAAtL,KAAA,KAAA,IACA9I,EAAAA,EAAA2F,MAAA,aAAAmD,KAAAsL,QAEApU,EAAAA,EAAA2F,MAAA,aAAAmD,KAAA,QAGA,GAAA,KADAoL,EAAAlU,EAAA2F,MAAA,SACAtF,OAAA,CACA6T,EAAAA,EAAA,GAAAvO,MAAA,KAGA,IAAA6O,EAAA,SAAA1M,GAEA,IAAA2G,EAAA,KAOA,KADAA,GAHA3G,GAJAA,EAAAA,EAAAgB,KAAA,MAIAnD,MAAA,aAGAmC,EAAAzH,OAAA,GAAAsF,MAAA,UACAtF,QACAyH,EAAAA,EAAAzH,OAAA,GAAAoO,EAAA,GAEAA,GADAA,EAAAA,EAAAgG,OACAzL,OAAAyF,EAAA/G,QAAA,KAAA,IAEA+G,EAAA,KASA,IAPA,IAAAjO,EAAA,CACAuP,GAAAjI,EAAA4M,QACA/F,OAAA,GACAC,UAAAH,GAIAnO,EAAA,EAAAA,EAAAwH,EAAAzH,OAAAC,IAAA,CACA,IAAAiU,EAAAzM,EAAAxH,GAAAqF,MAAA,KACAnF,EAAAmO,OAAAvO,KAAA,CAAAmU,EAAAG,QAAAH,EAAAzL,KAAA,OAGA,OAAAtI,GAGA,GAAA,YAAAsS,EAAA,CACA,IAAA6B,EAAAT,EAAAQ,QACA/F,EAAA6F,EAAAN,GACAvF,EAAAzE,KAAAsF,OACAb,EAAAmB,KAAA,CAAA,KAAAnC,EAAAC,EAAAC,GAGAc,EAAAoB,GAAA,CAAA4E,EAAAtH,OAAAsB,EAAAoB,GAAA1C,QACA,OAAAsB,EAAAC,YACAD,EAAAC,UAAAD,EAAAC,UAAAvB,QAEA,IAAA/M,EAAA,EAAAA,EAAAqO,EAAAA,OAAAtO,OAAAC,IACAqO,EAAAA,OAAArO,GAAA,GAAAqO,EAAAA,OAAArO,GAAA,GAAA+M,OACAsB,EAAAA,OAAArO,GAAA,GAAAqO,EAAAA,OAAArO,GAAA,GAAA+M,OAKA,OADA0F,EAAA3S,KAAAuO,GACA,SAAAoE,EAAA1S,OAAA,GAGA,IAAAqO,EAAA,CAAAwF,EAAA,GAAAvG,EAAAC,EAAAC,GAGA,OAAAJ,UAAArO,MAAA+E,KAAAuI,KAAAgC,IAKAwF,EAAAQ,QACAhG,EAAA,GAAAwF,EAAApL,KAAA,KAEA2E,UAAArO,MAAA+E,KAAAuI,KAAAgC,KAPAwF,EAAAQ,QACAlG,aAAAgG,EAAAN,GAAAxF,IAaA,GAAA,KADAwF,EAAAlU,EAAA2F,MAAA,UACAtF,OAAA,CACAqO,EAAA,CAAAwF,EAAA,GAAAvG,EAAAC,EAAAC,GAEA,MAAA,YAAAiF,GACAC,EAAA3S,KAAA,CAAA8J,KAAAuF,SAAAK,KAAApB,IACA,SAAAqE,EAAA1S,OAAA,IAGAL,EAAAyN,UAAArO,MAAA+E,KAAAuI,KAAAgC,GAGA,MAAA,KAGA,MAAA,YAAAoE,GAEAlF,EAAAkF,EAAAE,EAAAC,EAAA1L,EAAA,KACAT,WAAA,WAAAsM,EAAA,MAAA,GACA,CAAAA,EAAAL,EAAAlF,IAGAuF,GAGAwB,UAAA,SAAA3E,EAAAtJ,EAAAkM,EAAA7D,EAAA6F,EAAAC,EAAAtS,EAAAiF,GACA,IAAAsN,EAAA,CAAA,MAAA,OAAA,SAAA,QAAA,UAAA,OAAA,OAAA,UAAA,cAAA,eACAC,GAAA,EACAC,EAAAzS,EAAA0S,SACAC,EAAA3S,EAAAoE,UAAAwO,SAAA,iBAGAhG,EAAAjL,KAAAuI,KAAAsC,GACAqG,EAAA,MAAAR,EACAzR,EAAAgM,EAAAiG,GAEAC,EAAA,SAAA3T,EAAA4T,EAAAC,EAAAC,GAEA,GAAA9O,EAAAsI,SACA,IACAyG,EADA/O,EAAAsI,SAAAC,UACAvI,EAAAsI,SAAA0G,eAGA,GAAA,UAAAJ,EAAA,CACA,GAAA5O,EAAAsI,SACA,IAAA2G,EAAA,CAAApT,EAAAoK,kBAAApK,EAAAqT,kBAYA,OAVArT,EAAAmF,YAAA,QAEAhB,EAAAsI,WACAzM,EAAAwH,YAAA4L,EAAA,IACApT,EAAAwH,YAAA4L,EAAA,IACAjP,EAAAsI,SAAApL,IAAA8D,YAAA,GACAiO,EAAA,GAAApP,MAAAsP,OACAF,EAAA,GAAApP,MAAAsP,OAAA,EACAnP,EAAAsI,SAAA8G,OAAA,KAMA,GAAApP,EAAAsI,SAAA,CACA,IAAAwE,EAAA9M,EAAAsI,SAAAjH,WAEAgO,aAAAhB,GACAA,EAAAlO,WAAA,WACAH,EAAAsI,SAAAgH,gBACA,UAEAxC,EAAAwB,EAGA,GAAA,gBAAAM,EAAA,CA8BA,QAHA3W,IAAAwE,IACAA,EAAAgM,EAAAiG,IAEA,SAAAE,GAAA,SAAAA,EAAA,CACA,GAAA,SAAAA,EAAA,EACAW,EAAAvP,EAAAtG,OAAAsB,EAAA8T,GACA,IACAA,GAAAS,GAGA,IAAAC,EAAAtX,SAAAoI,cAAA,OACA,IAAA3G,EAAA,EAAAA,EAAAmV,EAAAnV,IACA6V,EAAAnM,YAAAyJ,EAAA9R,EAAArB,IAGA,IAAAwE,EAAA2O,EAAA+B,IAAA,KACAY,EAAAtR,GAAAA,EAAAtC,YAEA,IAAA4T,IAEAA,EADAzP,EAAAsI,UAAAtI,EAAAtG,QAAAqV,EACA/O,EAAAsI,SAAApL,IACArB,GAIA,IAAAlC,EAAA,EAAAA,EAAAmV,EAAAnV,IACA8V,EAAA5E,aAAA2E,EAAAvJ,kBAAA9H,QAEAlG,IAAAwE,GAAAA,EAAAiT,QACAjT,EAAAiT,OAAA5C,EAAA9R,EAAArB,GAAA,QAEA,OAGA,GAAAqB,EAAA6T,EAAA,CACA,IAAAc,EAAA7C,EAAA+B,GACAA,EAAA/B,EAAA9R,GACAA,EAAA2U,OAEA3U,EAAA8R,EAAA9R,GACA6T,EAAA/B,EAAA+B,GAGA,IAAAe,EAAAf,EAAA1Q,YACA0R,EAAAhB,EAAAhT,WAQA,OAPAb,EAAAa,WAAAgP,aAAAgE,EAAA7T,EAAAmD,aACA0R,EAAAhF,aAAA7P,EAAA4U,aAEA3X,IAAAwE,GAAAA,EAAAiT,SACAjT,EAAAiT,OAAA5C,EAAA+B,GAAA,QACApS,EAAAiT,OAAA5C,EAAA9R,GAAA,UAMA,GAAA,gBAAA4T,GAQA,GAAA,WAAAA,EAAA,CAuBA,GAAA,WAAAA,EAAA,CAUA,IAAAW,OATAtX,IAAA+C,GACAA,EAAA,EACA6T,EAAA7O,EAAAtG,aAEAzB,IAAA4W,EAAAA,EAAA7T,EAAA,EACA6T,EAAA,EAAAA,EAAA7O,EAAAtG,OAAAmV,EACAA,GAAA7T,GAGAuU,EAAAvP,EAAAtG,OAAAmV,GACA,IAAAA,GAAAU,GAEA,IAAA5V,EAAAqB,EAAArB,EAAAkV,EAAAlV,IAAA,CACA,IAAAmW,EAAAhD,EAAAnT,GACA,QAAA1B,IAAA6X,QAAA7X,IAAA+H,EAAArG,GACA,MAEAN,EAAAgQ,eAAAC,EAAAtJ,EAAArG,KACA,IAAA6U,GACA1D,eAAAzR,EAAAiQ,EAAAtJ,EAAArG,IAEAqG,EAAAsI,SACAwH,EAAAjU,WAAAoQ,aAAA5S,EAAAyW,IAIAjU,EAAAoQ,aAAA5S,EAAAyW,QACA7X,IAAAwE,GAAAA,EAAAiT,QACAjT,EAAAiT,OAAArW,EAAA,aAIA,IAAAuC,EAAAoE,EAAAhF,GACA,QAAA/C,IAAA2D,EAAA,CAEAvC,EAAAgQ,eAAAC,EAAA1N,GAKA,IAJA,IAAA4S,GACA1D,eAAAzR,EAAAiQ,EAAA1N,GAGA,gBAAAgT,EAAA,CACA,GAAA,IAAA9B,EAAApT,OACAmC,EAAAgP,aAAAxR,EAAAwC,EAAAqT,uBAEAa,EAAAjD,EAAA9R,EAAA,IACAa,WAAAgP,aAAAxR,EAAA0W,EAAA5R,kBAGAlG,IAAAwE,GAAAA,EAAAuT,QACAvT,EAAAuT,OAAA3W,QAEA,GAAA,YAAAuV,EAAA,CACA,IAAAmB,OACA9X,KADA8X,EAAAjD,EAAA,KAEAiD,EAAAlU,WAAAgP,aAAAxR,EAAA0W,QAEA9X,IAAAwE,GAAAA,EAAAuT,QACAvT,EAAAuT,OAAA3W,IAEAuV,EAAA,SAEA,GAAA,WAAAA,EAAA,CACA,GAAA5O,EAAAsI,SAcA,OAbA,IAAAtN,EACAa,EAAAgP,aAAAxR,EAAAwC,EAAAqT,kBACAlU,GAAA+T,GACA,OAAA/O,EAAAsI,SAAA2H,QAAAC,QACAlQ,EAAAsI,SAAA2H,QAAAC,MAAA7W,GAEA2G,EAAAsI,SAAApL,IAAAmG,YAAAhK,IAGAyT,EAAA9R,EAAA,GAAAmV,sBAAA,WAAA9W,aAEApB,IAAAwE,GAAAA,EAAAuT,QACAvT,EAAAuT,OAAA3W,IAIAwC,EAAAwH,YAAAhK,QACApB,IAAAwE,GAAAA,EAAAuT,QACAvT,EAAAuT,OAAA3W,UAxGA,GAAAyT,EAAA9R,GAAA,CACA,IAAAoV,GAAA,EACAC,EAAA,WACAD,IACAA,GAAA,EAEAtD,EAAA9R,GAAAQ,gBAGAvD,IAAAwE,GAAAA,EAAAjB,QAEAiB,EAAAjB,OAAAsR,EAAA9R,GAAAqV,IAKAA,UAxBA,IAAA1W,EAAAqB,EAAArB,EAAAkV,EAAAlV,IACAmT,EAAAnT,GAAA6B,aArFA,CAEA,IAAA,IAAA7B,EAAAqB,EAAArB,EAAAmT,EAAApT,OAAAC,IACAmT,EAAAnT,GAAA6B,SAGA,GAAAwE,EAAAsI,SACA,IAAA2H,EAAAjQ,EAAAsI,SAAA2H,QAEA,IAAA,IAAAtW,EAAAqB,EAAArB,EAAAqG,EAAAtG,OAAAC,IAAA,CACA,IAAAN,EAAAgQ,eAAAC,EAAAtJ,EAAArG,IACAqG,EAAAsI,SACA,OAAA2H,EAAAC,OAAAvW,EAAAoV,EACAlT,EAAAgP,aAAAxR,EAAAwC,EAAAqT,kBACAlP,EAAAsI,SAAApL,IAAAmG,YAAAhK,GAEAwC,EAAAwH,YAAAhK,IAEA,IAAAmV,GACA1D,eAAAzR,EAAAiQ,EAAAtJ,EAAArG,IAGAqG,EAAAsI,UAAAtI,EAAAsI,SAAAgI,sBACAtQ,EAAAsI,SAAAgI,qBAAAtQ,EAAAsI,SAAAC,aAkLAgI,EAAA,SAAAC,EAAAvL,GACA5K,OAAAC,eAAAkW,EAAAvL,EAAA,CACA1K,YAAA,EACAC,cAAA,EACAJ,MAAA,WACA,IAAAf,OAAApB,EACAwY,EAAAzY,KAAA0B,OAEA,GAAA,SAAAuL,EAAA,CACA,IAAAyL,EAAAtY,UAAA,GACA2C,EAAA3C,UAAA,GACA,GAAAsY,IAAA3V,EAAA,OACA,IAAA+T,EAAA1W,UAAA,IAAA,EAUA,OATAuW,EAAA+B,EAAA,OAAA3V,EAAA+T,IAEAzV,EAAA2M,MAAA7K,UAAAgE,OAAA1G,MAAAT,KAAA,CAAA0Y,EAAA5B,KACA9M,QAAAjH,EAAA,GACAiL,MAAA7K,UAAAgE,OAAA1G,MAAAT,KAAAqB,QAGA2G,EAAAsI,UACAtI,EAAAsI,SAAAqI,gBAIA,GAAA,SAAA1L,EAAA,CACA,IAAAtL,EAAAvB,UAAA,GACAwY,EAAAxY,UAAA,GACA,GAAAuB,IAAAiX,EAAA,OACAjC,EAAAhV,EAAA,OAAAiX,GACAvX,EAAArB,KAAA2B,GAGA,OAFA3B,KAAA2B,GAAA3B,KAAA4Y,QACA5Y,KAAA4Y,GAAAvX,GAIA,GAAA,YAAA4L,EAAA,CAKA,GAJAjF,EAAAsI,UACAtI,EAAAsI,SAAAuI,gBAGAzY,UAAA,GAAAsB,QAAA+W,GAAA,IAAAA,EAAA,CACA,IAAAK,EAAAL,EACAxR,EAAA7G,UAAA,GAEA,IAAAuB,EAAA,EAAAA,EAAA8W,GACAxR,EAAAtF,KAAA3B,KAAA2B,GADAA,IAEAmX,IAOA,GAAA,IAAAA,EAAA,CACA,GAAA7R,EAAAvF,SAAA+W,EAAA,OAKA,OAHApX,EAAAjB,UAAA,GAAAyU,MAAA4D,IACAzO,QAAAyO,EAAA,QACAzY,KAAAmH,OAAA1G,MAAAT,KAAAqB,GAKA,GAAAyX,IAAAL,EAAA,CACA,IAAA,IAAArY,UAAA,IACAiB,EAAAjB,UAAA,GAAAyU,MAAAlT,IACAqI,QAAArI,EAAA8W,EAAA9W,GACAqM,MAAA7K,UAAAgE,OAAA1G,MAAAT,KAAAqB,GAEA2G,EAAA+Q,QAAApX,EAAA8W,GAEA,QAKA,GAAA,IAAAA,EAGA,OAFAzK,MAAA7K,UAAA1B,KAAAhB,MAAAT,KAAAI,UAAA,SACAuW,EAAA,EAAA,eAKAtV,EAAA,CAAA,EAAAoX,GA2BA,OA1BAzK,MAAA7K,UAAA1B,KAAAhB,MAAAY,EAAAjB,UAAA,IACA4N,MAAA7K,UAAAgE,OAAA1G,MAAAT,KAAAqB,IAGA,IAAAjB,UAAA,IAAAoW,GACAG,EAAA,EAAA,SACAA,EAAA,EAAA,iBAMA3W,KAAA0B,OAAA+W,GACA9B,EAAA3W,KAAA0B,OAAA,cAAA+W,GAGAzQ,EAAA+Q,QAAA,EAAA/Y,KAAA0B,QAEAsG,EAAAsI,UAAAtI,EAAAsI,SAAAgI,sBACAtQ,EAAAsI,SAAAgI,qBAAAtQ,EAAAsI,SAAAC,YAIAvI,EAAAsI,UACAtI,EAAAsI,SAAA8G,QAEApX,KAGA,GAAA,WAAAiN,GAAA,IAAA7M,UAAA,SAAAH,IAAAG,UAAA,GAEA,OADAuW,EAAA,EAAA,SACA3I,MAAA7K,UAAAgE,OAAA1G,MAAAT,KAAAI,WAMA,GAHA4N,MAAA7K,UAAA8J,KACA5L,EAAA2M,MAAA7K,UAAA8J,GAAAxM,MAAAT,KAAAI,YAEA,QAAA6M,EACA0J,EAAA3W,KAAA0B,OAAA,eAEA,GAAA,SAAAuL,EACA,GAAA,IAAA7M,UAAAsB,OACAiV,EAAA8B,EAAA,eAEA,IAAA9W,EAAA,EAAAA,EAAAvB,UAAAsB,OAAAC,IACAgV,EAAA8B,EAAA9W,EAAA,eAKA,GAAA,UAAAsL,EACA0J,EAAA,EAAA,UAEA3O,EAAAsI,UAAAtI,EAAAsI,SAAAC,UAAA,IACAvI,EAAAsI,SAAAC,YACAvI,EAAAsI,SAAAqI,qBAIA,GAAA,WAAA1L,EAAA,CACA,GAAA,IAAA7M,UAAA,SAAAH,IAAAG,UAAA,GACA,OAAAiB,EAGA,IAAA2X,EAAA5Y,UAAA,GACA4Y,EAAA,IAAAA,EAAAP,EAAAO,GAEA,IAAAC,EAAA7Y,UAAA,GACA6Y,GAAA,IAAAA,IAAAA,EAAAjZ,KAAA0B,QAEA,IAAAC,EAAAsX,EAAA,EAAAtX,GAAA,EAAAA,IACAgV,EAAAqC,EAAArX,EAAA,UAMA,GAHAqG,EAAAsI,UAAAtI,EAAAsI,SAAAC,WAAAyI,IACAhR,EAAAsI,SAAAC,UAAAyI,EAAAC,GAEA7Y,UAAAsB,QAAA,EAAA,CACAuX,EAAA7Y,UAAAsB,OAAA,EAGAsX,GAAAhZ,KAAA0B,SACAsX,EAAAhZ,KAAA0B,OAAA,GAEA,IAAAC,EAAA,EAAAA,EAAAsX,EAAAtX,IACAgV,EAAAqC,EAAArX,EAAA,eAGAqG,EAAAsI,UAAAtI,EAAAsI,SAAAC,WAAAyI,IACAhR,EAAAsI,SAAAC,WAAA0I,SAIA,GAAA,YAAAhM,EAAA,CACA,GAAA,IAAA7M,UAAAsB,OACAiV,EAAA,EAAA,gBAEA,IAAAhV,EAAAvB,UAAAsB,OAAA,EAAAC,GAAA,EAAAA,IACAgV,EAAAhV,EAAA,WAIAqG,EAAAsI,UAAA,IAAAtI,EAAAsI,SAAAC,YACAvI,EAAAsI,SAAAC,WAAAnQ,UAAAsB,OACAsG,EAAAsI,SAAAqI,oBAIA,gBAAA1L,GACA0J,EAAAvW,UAAA,GAAA,SAAAA,UAAA,IAEA4H,EAAAsI,UAAAtI,EAAAsI,SAAAC,WACAvI,EAAAsI,SAAAqI,gBAGA,gBAAA1L,IACA0J,EAAAvW,UAAA,IAAA,EAAA,eAEA4H,EAAAsI,WACAtI,EAAAsI,SAAAC,UAAAnQ,UAAA,IAAA,IAGA,OAAAiB,MAKAwC,GAAAA,EAAAoE,UAAAwO,SAAA,4BACAzO,EAAAsI,SACAtI,EAAAsI,SAAA,GAGAtI,EAAAsI,SAAApL,IAAA4D,OACA7I,IAAAwE,EACAuD,EAAAsI,SAAA7L,SAAAA,EACAuD,EAAAsI,SAAA4I,UAAA,CAAAjS,IAAAwJ,EAAA0I,IAAAzC,GAEA7S,EAAAoQ,aAAA3C,EAAA1I,KAAA0N,EAAA,IACAxW,GAAAK,SAAAiZ,eAAAC,OAAArR,EAAAmO,EAAAtS,GACAyN,EAAA1I,KAAApF,UAGA,IAAA,IAAA7B,EAAA,EAAAA,EAAAyU,EAAA1U,OAAAC,IACA4W,EAAAvQ,EAAAoO,EAAAzU,IAUAO,eAAA8F,EAAA,WAAA,SAAAhF,EAAAlB,EAAAwX,EAAAlY,GACA,IAAAmY,EAAAvR,EAAAwR,WAAAxW,GAAA2P,qBACA8G,EAAAnI,EAAA8B,eAAAtR,GACA,QAAA7B,IAAAwZ,GAKA,IAAA,IAAA9X,EAAA,EAAAA,EAAA4X,EAAA7X,OAAAC,IACA,QAAA1B,IAAAsZ,EAAA5X,GAAAqH,kBAAA/I,IAAAsZ,EAAA5X,GAAAsF,IAAA8K,SAGA,IAAA0H,EAAA1Q,QAAAwQ,EAAA5X,GAAAsF,IAAA8K,QAAA,CACA,IAAA9K,EAAAsS,EAAA5X,GAAAqH,YACA0Q,EAAAnU,EAAA2D,WAAAlB,EAAAhF,GAAAlB,IAAAP,QAAA+X,EAAAlY,GAGA,GAAA4G,EAAAhF,GAAAlB,KAAA4X,EAAA,SAMA,IALAzS,EAAA+B,YAAA,GACA/B,EAAA0M,eAAA,EACA+F,EAAAnU,EAAAF,aAAAqU,GAAA,GAGAzS,EAAAb,iBAAAa,EAAAb,gBAAAwN,eAAA3M,GACAA,EAAAb,gBAAA5C,SAGA,IAAAmW,EAAA1S,EAAApD,WACA,IAAAlC,EAAA,EAAAA,EAAA+X,EAAAhY,OAAAC,IACA+X,EAAA/X,GAAAiS,aAAA3M,EACA0S,EAAA9G,aAAA6G,EAAA/X,GAAAsF,SA1BAyE,QAAAQ,MAAA,4BAAApK,EAAA,OAgCAI,eAAA8F,EAAA,UAAA,SAAAhF,EAAAtB,EAAAS,QACAlC,IAAA+C,GAAAA,EAAA3C,cAAAiF,QACAnD,EAAAa,EACAA,EAAA,EACAtB,EAAAsG,EAAAtG,aAEAzB,IAAAyB,EAAAA,EAAAsB,EAAA,EACAtB,EAAArB,cAAAiF,QACAnD,EAAAT,EACAA,EAAAsB,EAAA,GAEAtB,EAAA,EAAAA,EAAAsG,EAAAtG,OAAAA,EACAA,GAAAsB,EAGA,IAAAuU,EAAAvP,EAAAtG,OAAAA,EACA6V,EAAA,IAAA7V,GAAA6V,GAEA,IAAA,IAAA5V,EAAAqB,EAAArB,EAAAD,EAAAC,IAAA,CACA,IAAAiY,EAAA5R,EAAAwR,WAAA7X,GAGA,QAAA1B,IAAA2Z,EAAA,CACA5R,EAAA6R,YAAAlY,GACA,MAGA,IAAA,IAAA6U,EACAxO,EAAA8R,YAAAnY,QACA,IAAA,IAAAuR,kBAAA0G,EAAAtI,EAAAnP,EAAA6F,EAAArG,IACA,cAGA1B,IAAAwE,GAAAA,EAAAiT,QACAjT,EAAAiT,OAAAkC,EAAA,cAIA,IAAAG,EAAA,KACA/R,EAAAsI,WACAyJ,EAAA/R,EAAAsI,SAAApL,IAAAqR,UACArU,eAAA8F,EAAA,aAAA,SAAAhF,GACA,GAAA,OAAA+W,EAAA,CAEA,GAAA/W,EAAAgF,EAAAsI,SAAAC,UACA,OAAAwJ,EAAA/W,GAEAA,GAAAgF,EAAAsI,SAAAC,UACA,IAAAyJ,EAAAnW,EAAAoW,kBAAA,EAEA,OAAAjX,EAAAgX,EACA1D,EAAAtT,EAAA,GAEA+W,EAAA/W,EAAAgX,EAAAhS,EAAAsI,SAAAC,WAMA,OAAA+F,EAAAtT,MAIAkX,WAAA,SAAAjN,EAAAqE,EAAAvC,EAAAoH,EAAAtS,GACA,IAAAsW,EAAApL,EAAA/H,MAAA,QACAkN,EAAAiG,EAAA,GACA3D,EAAA3S,EAAAoE,UAAAwO,SAAA,iBAEA2D,EAAAhM,MAAAnB,GAAAkN,EAAA,IAUA,QATAla,IAAAma,IACAA,EAAAhM,MAAAnB,GAAAkN,EAAA,IAAA,IAEA7I,EAAA3D,aAAA,eAAAwM,EAAA,IAGA5L,kBAAA+C,EACAA,EAAA9L,KAAA6U,kBAAA/I,EAAA4C,EAAAjH,GAEA,IAAAkN,EAAAzY,OAAA,CAIA,IAHA,IAAAoH,EAAA5I,SAAAoI,cAAA,OACAmI,EAAAjL,KAAAuI,KAAAd,GAEAtL,EAAA,EAAAA,EAAAyY,EAAA1Y,OAAAC,IAAA,CACA,IAAAiY,EAAAvI,eAAAC,EAAA8I,EAAAzY,IACAmH,EAAAuC,YAAAuO,IAEA,IAAApD,GACA1D,eAAA8G,EAAAtI,EAAA8I,EAAAzY,IA0BA,QAtBA1B,IAAAwQ,EAAA6J,cACAC,uBAAA9J,QAEAxQ,IAAAwQ,EAAA6J,aAAAH,EAAA,MACA1J,EAAA6J,aAAAH,EAAA,IAAA,MAEA9X,OAAAC,eAAAmO,EAAA0J,EAAA,GAAA,CACA5X,YAAA,EACAC,cAAA,EACAgY,IAAA,WACA,OAAAJ,GAEAK,IAAA,SAAA7E,GACA,OAAA,IAAAA,EAAAlU,OACA0Y,EAAAjT,OAAA,GACAiT,EAAA7Y,QAAAqU,GAAA,MAIAK,UAAA3E,EAAA8I,EAAAlG,EAAAjH,EAAAkN,EAAA,GAAAhE,EAAAtS,EAAAiF,QAGA7I,IAAAma,EAAA9J,SAAA,CAEA,IADA,IAAAiG,EAAAzN,EAAAyN,SACAmE,GAAA/Y,EAAA,EAAA4U,EAAA7U,QAAAC,EAAA+Y,EAAA/Y,IACAkC,EAAAwH,YAAAkL,EAAA,IAGAzN,EAAAtF,SACAsF,EAAA,QAKA6R,kBAAA,SAAA7O,EAAA3J,EAAAC,GACA,IAAAqC,EAAAqH,EAAA,MAAA3J,GACAyY,EAAA9O,EAAA,OAAA3J,GACA0Y,OAAA5a,EAAA6a,OAAA7a,EACA,QAAAA,IAAAwE,QAAAxE,IAAA2a,EAAA,CACA,IAAAG,EAAAjP,EAAA3J,GACA4Y,MAAAA,GAAAA,EAAA1a,cAAA2N,QACA+M,EAAAA,EAAAlG,MAAA,IAEA,SACA5U,IAAA2a,IACAC,EAAAD,EAAAG,EAAA3Y,SAEAnC,IAAAwE,IACAqW,EAAArW,EAAAsW,EAAA3Y,IACA,MAAA8H,GAAAwB,QAAAQ,MAAAhC,IAEA,YAAAjK,IAAA6a,EAAAA,EAAAD,GAGAG,mBAAA,EACAC,eAAA,SAAA/Q,GACA,IAAA,IAAAA,EAAAgR,gBAAA,CAEAF,mBAAA,EACA,IAAA/T,EAAAiD,EAAAtH,OACAqE,EAAAkU,cAAA,EACA,IAAA/Y,EAAA6E,EAAAmU,WAAAC,OAAAA,OAAApU,EAAA7E,OAAA6E,EAAA7E,MACAkZ,EAAAX,kBAAA1T,EAAAsU,QAAAtU,EAAAuU,UAAApZ,GAEA6E,EAAAsU,QAAAtU,EAAAuU,gBADAvb,IAAAqb,EACAA,EACAlZ,IAEAqZ,gBAAA,SAAAvR,GACA,IAAA,IAAAA,EAAAgR,gBAAA,CAEA,IAAAjU,EAAAiD,EAAAtH,OACA+X,kBAAA1T,EAAAsU,QAAAtU,EAAAuU,UAAAvU,EAAAyU,OACAzU,EAAAsU,QAAAtU,EAAAuU,WAAAvU,EAAAyU,QAGAC,mBAAA,SAAAzR,GACA,IAAA,IAAAA,EAAAgR,gBAAA,CAEAF,mBAAA,EACA,IAAA/T,EAAAiD,EAAAtH,OACAqE,EAAAkU,cAAA,EACA,IAAA/Y,EAAA6E,EAAAmU,WAAAC,OAAAA,OAAApU,EAAA7E,OAAA6E,EAAA7E,MACAkZ,EAAAX,kBAAA1T,EAAAsU,QAAAtU,EAAAuU,UAAApZ,QACAnC,IAAAqb,IACAlZ,EAAAkZ,GAEA,IAAAxP,EAAA7E,EAAAsU,QACAlb,EAAAyL,EAAA7E,EAAAuU,WAEA,GAAAnb,IAAA2N,MAAA,CACA,IAAArM,EAAAmK,EAAA7E,EAAAuU,WAAAzS,QAAA3G,IAEA,IAAAT,IAAA,IAAAsF,EAAA2U,QACA9P,EAAA7E,EAAAuU,WAAA/Z,KAAAW,IACA,IAAAT,IAAA,IAAAsF,EAAA2U,SACA9P,EAAA7E,EAAAuU,WAAArU,OAAAxF,EAAA,QAEAtB,IAAAwb,SAAA5U,EAAAmU,WAAAS,QACA/P,EAAA7E,EAAAuU,WAAAvU,EAAA2U,QACA9P,EAAA7E,EAAAuU,WAAApZ,IAGA0Z,iBAAA,SAAA5R,GACA,IAAA,IAAAA,EAAAgR,gBAAA,CAEAF,mBAAA,EACA,IAAA/T,EAAAiD,EAAAtH,OACAqE,EAAAkU,cAAA,EACA,IAAAC,EAAAnU,EAAAmU,SACA,IAAA,IAAAnU,EAAA8U,SAGA,IAFA,IAAA1a,EAAA4F,EAAA+U,gBACA5Z,EAAA,GACAT,EAAA,EAAAA,EAAAN,EAAAK,OAAAC,IACAS,EAAAX,KAAA2Z,IAAAC,OAAAA,OAAAha,EAAAM,GAAAS,OAAAf,EAAAM,GAAAS,YAGAA,EAAAgZ,IAAAC,OAAAA,OAAApU,EAAA+U,gBAAA,GAAA5Z,OAAA6E,EAAA+U,gBAAA,GAAA5Z,MAEA,IAAAkZ,EAAAX,kBAAA1T,EAAAsU,QAAAtU,EAAAuU,UAAApZ,GAEA6E,EAAAsU,QAAAtU,EAAAuU,gBADAvb,IAAAqb,EACAA,EACAlZ,IAGA6Z,kBAAA,CACAtT,OAAA,SAAAmD,EAAA3J,EAAAyD,GAIA,IAHA,IAAAoC,EAAApC,EAAAgR,QACAwE,EAAAxV,EAAAwV,SACAc,EAAApQ,EAAA3J,GAAA9B,cAAA2N,OAAAlC,EAAA3J,GACAR,EAAA,EAAA+Y,EAAA1S,EAAAtG,OAAAC,EAAA+Y,EAAA/Y,KACA,IAAAua,EACAd,IAAA9V,OACA0C,EAAArG,GAAAwa,SAAAnU,EAAArG,GAAAS,QAAA0J,EAAA3J,GACA6F,EAAArG,GAAAwa,SAAAnU,EAAArG,GAAAS,OAAA0J,EAAA3J,GAEA6F,EAAArG,GAAAwa,UAAA,IAAAD,EAAAnT,QAAAqS,IAAAC,OAAAA,OAAArT,EAAArG,GAAAS,OAAA4F,EAAArG,GAAAS,QAGAga,SAAA,SAAAtQ,EAAA3J,EAAAyD,GACAkG,EAAA3J,GAAA9B,cAAA2N,MACApI,EAAAgW,SAAA,IAAA9P,EAAA3J,GAAA4G,QAAAnD,EAAAwV,WAAAC,OAAAA,OAAAzV,EAAAxD,OAAAwD,EAAAxD,OACA0J,EAAA3J,GAAA9B,cAAAwb,QACAjW,EAAAgW,QAAAC,QAAA/P,EAAA3J,IAEAyD,EAAAwV,WAAA9V,OACAM,EAAAgW,QAAAhW,EAAAxD,QAAA0J,EAAA3J,GACAyD,EAAAgW,QAAAhW,EAAAxD,OAAA0J,EAAA3J,KAKAka,cAAA,SAAAvQ,EAAA3J,EAAAkH,GACA,IAAA,IAAA2R,kBAGA,IAAA,IAAArZ,EAAA,EAAAA,EAAA0H,EAAA3H,OAAAC,IAAA,CACA,IAAA+E,EAAA,IAAA4V,MAAA,UACA5V,EAAAwU,iBAAA,EAEA,IAAA7R,EAAAkC,KACAlC,EAAA1H,GAAAS,MAAA0J,EAAA3J,GACA,IAAAkH,EAAAkC,KACA0Q,kBAAAtT,OAAAmD,EAAA3J,EAAAkH,EAAA1H,IACA,IAAA0H,EAAAkC,KACAlC,EAAA1H,GAAAia,QAAA9P,EAAA3J,IAAAkH,EAAA1H,GAAAS,MACA,IAAAiH,EAAAkC,MACA0Q,kBAAAG,SAAAtQ,EAAA3J,EAAAkH,EAAA1H,IAEA0H,EAAA1H,GAAA4a,cAAA7V,KAIA8V,kBAAA,SAAAtS,IACA,IAAAA,EAAAgR,mBACA,IAAAhR,EAAAtH,OAAAuY,aAIAjR,EAAAtH,OAAA2Z,cAAA,IAAAD,MAAA,UAHApS,EAAAtH,OAAAuY,cAAA,IAMAsB,oBAAA,SAAA3Q,EAAA3J,EAAAyD,EAAA8W,QAEAzc,IAAA6L,EAAAwO,cACAC,uBAAAzO,GAEA,IAAAP,EAAA,EACA6P,EAAA,KAYA,GAXA,OAAAtP,EAAA3J,SAAAlC,IAAA6L,EAAA3J,KACAiZ,EAAAtP,EAAA3J,GAAA9B,aAGA,YADAuF,EAAAwK,aAAA,aAAA,IAAAuM,gBAEAvB,EAAAC,QAEAzV,EAAAwV,SAAAA,EACA7V,EAAAe,GAAAV,EAAA,SAAA4W,mBAGA,aAAA5W,EAAAqE,QACA1E,EAAAe,GAAAV,EAAA,QAAAqV,gBACArV,EAAAxD,MAAA0J,EAAA3J,GACAoJ,EAAA,OAGA,QAAAtL,IAAA2F,EAAAoW,gBACAzW,EAAAe,GAAAV,EAAA,QAAAkW,kBACAvQ,EAAA,EAEA0Q,kBAAAtT,OAAAmD,EAAA3J,EAAAyD,OAGA,CAEA,GAAA,WADA2F,EAAA3F,EAAA2F,KAAAoR,eAEApX,EAAAe,GAAAV,EAAA,QAAAqV,gBACA1P,EAAA,EAEA3F,EAAAgW,QAAA9P,EAAA3J,IAAAyD,EAAAxD,WAEA,GAAA,aAAAmJ,EACAhG,EAAAe,GAAAV,EAAA,QAAA+V,oBACApQ,EAAA,EAEA0Q,kBAAAG,SAAAtQ,EAAA3J,EAAAyD,OAGA,CAAA,GAAA,SAAA2F,EAEA,YADAhG,EAAAe,GAAAV,EAAA,QAAA6V,iBAKAlW,EAAAe,GAAAV,EAAA,QAAAqV,gBACArV,EAAAxD,MAAA0J,EAAA3J,GACAoJ,EAAA,IAIA,IAAAmR,GACAE,mBAAA9Q,EAAA3J,EAAAka,cAAAzW,EAAA2F,IAGAsR,UAAA,SAAA1G,GAGA,IAFA,IAAA9U,EAAAkE,EAAA,4GAAA4Q,GAEAxU,EAAA,EAAAA,EAAAN,EAAAK,OAAAC,IAAA,CACA,IAAAiE,EAAAvE,EAAAM,GACAmK,EAAAhM,GAAA0M,WAAA6D,UAAAzK,GACA,IAAAkG,EAAA,OACA,IAAAgR,EAAAtX,KAAAuI,KAAAjC,GAEA4Q,GAAA,EACAxG,EAAAtQ,EAAAwK,aAAA,YAQA,GAPA,OAAA8F,IACAA,EAAAtQ,EAAAwK,aAAA,WACAsM,GAAA,GAEA,KAAAxG,IACAA,EAAAtQ,EAAAwK,aAAA,SAEA,OAAA8F,EAAA,CAMA,QAAAjW,IAAA6c,EAAA5G,GAEA,YADAxK,QAAAQ,MAAA,wBAAAgK,EAAA,eAAApK,EAAA,KAIAlG,EAAA4V,UAAAtF,EACAtQ,EAAA2V,QAAAuB,GACA,IAAAJ,GACA9W,EAAA+H,aAAA,aAAA,IACA/H,EAAA8M,gBAAA,cAGA9M,EAAA+H,aAAA,YAAA,IACA/H,EAAA8M,gBAAA,YAGA+J,oBAAAK,EAAA5G,EAAAtQ,EAAA8W,QArBAhR,QAAAQ,MAAA,2CAAAtG,KAyBAmX,oBAAA,EACAvX,KAAAiH,KAAA,SAAA0J,EAAA6G,GACA,IAAAD,oBAAA5G,EAAA,CACA4G,oBAAA,EACA5U,WAAA,WACA4U,oBAAA,GACA,IAEA5G,IAAAA,EAAAjW,SAAAsJ,MAEAhE,KAAAyX,gBAAAD,GAAAxX,KAAAuG,gBAAAoK,GAAA6G,GACAH,UAAA1G,GAIA,IADA,IAAA9U,EAAAkE,EAAA,mBAAA4Q,GACA7D,EAAA,EAAAA,EAAAjR,EAAAK,OAAA4Q,IAAA,CACA,IAAA1M,EAAAvE,EAAAiR,GACA3M,EAAAC,EAAAE,cAKA,QAHA7F,IAAA+c,GACApX,EAAAqC,UAAAzE,OAAA,iBAEAmC,EAAAsC,UAAAwO,SAAA,mBAAA,CACA,IAAAyG,EAAAhd,SAAAoI,cAAA1C,EAAAqE,SACAiT,EAAAjV,UAAAC,IAAA,kBACA,IAAAgQ,EAAAgF,EAAAzP,WAAA,GAEAyP,EAAAjV,UAAAC,IAAA,WACAvC,EAAAkN,aAAAqK,EAAAvX,EAAAsI,mBAEAiK,EAAAjQ,UAAAC,IAAA,SACAvC,EAAA0F,YAAA6M,GAGA,IAAAiF,EAAAvX,EAAAwX,mBACA,OAAAD,GAAAvX,IAAAuX,IACAA,GAAA,GAEA,IAAAE,EAAAzX,EAAAuK,uBACA,OAAAkN,GAAAzX,IAAAyX,IACAA,GAAA,GAEA,IAAAtO,EAAAnJ,EAAAwK,aAAA,kBAIA,GAHAxK,EAAA8M,gBAAA,kBAGA,2BAAA3I,KAAAnE,EAAAyH,WACA,KAAA,yCAEA,IAAAb,EAAA1M,GAAA0M,WAAA6D,UAAAzK,GACAsU,WAAA1N,EAAA5G,EAAAmJ,EAAAoH,EAAAxQ,GACAC,EAAApC,YAMA,IAAA2K,eAAAvB,MAAAuB,eAAA,SAAAvI,GACA,IAAA,IAAAA,EAAA0X,aAAA,iBAeA,IADA,IAAAjc,EAAAkE,EAAA,kBAAAK,GACAjE,EAAA,EAAAA,EAAAN,EAAAK,OAAAC,IAAA,CACA0O,EAAAhP,EAAAM,GAAAyO,aAAA,iBAGA,GADAmN,mBAAAlN,QACApQ,IAAA2F,EAAAgI,aAAA,CACAyC,EAAAzK,EAAA4X,gBACAC,EAAA7X,EAAAiI,kBACA6P,EAAA5d,GAAA6M,UAAAG,UAAAuD,IACAlJ,OAAAuW,EAAA3U,QAAAsH,GAAA,GACAlQ,SAAAwM,UAAAW,aAAAmQ,EAAA,UAAAjY,KAAAuI,KAAAsC,WACA7K,KAAAuI,KAAAsC,QAzBA,CACA,IAAAA,EAAAzK,EAAAwK,aAAA,iBAGA,GADAmN,mBAAAlN,QACApQ,IAAA2F,EAAAgI,aAAA,CACA,IACA8P,EADAD,EAAA7X,EAAAiI,kBACA6P,EAAA5d,GAAA6M,UAAAG,UAAA2Q,IACAtW,OAAAuW,EAAA3U,QAAAsH,GAAA,GACAlQ,SAAAwM,UAAAW,aAAAmQ,EAAA,UAAAjY,KAAAuI,KAAAsC,WACA7K,KAAAuI,KAAAsC,MAqBAvQ,GAAA,WACA,IAAA6d,EAAA,SAAAC,GACA,IAAAA,EAAA/L,UAAA,OAAA+L,EAAA3P,wBAGAhO,IAAA2d,EAAAjL,sBACAxE,eAAAyP,IAGA,GAAA,mBAAAC,kBAAAA,iBAAA1a,UAAA2a,QAAA,CACA,IAAAC,EAAA,SAAAC,GACAA,EAAAC,aAAAta,QAAAga,IAGA,IAAAE,iBAAA,SAAAK,GACA5P,gBACA4P,EAAAva,QAAAoa,KAGAD,QAAA5d,SAAAsJ,KAAA,CAAA2U,WAAA,EAAAC,SAAA,SAGAle,SAAAsJ,KAAA7C,iBAAA,iBAAA,SAAAuD,GACAoE,gBACAqP,EAAAzT,EAAAtH,YAKA,IAAA2a,mBAAA/X,KAAA4R,MAAA,SAAA/G,GACA,IAAApJ,EAAAzB,KAAAuI,KAAAsC,GACA,QAAApQ,IAAAgH,EAAA,CAGA,IAAAoX,EAAApX,EAAAqT,aACAjZ,EAAA,KACA,IAAA,IAAAS,KAAAuc,EAGA,UAFAA,EAAAvc,QAEA7B,IAAAgH,EAAAnF,IAAA,OAAAmF,EAAAnF,GAAA,CAGA,GAAAmF,EAAAnF,GAAAzB,cAAAiF,QACA2B,EAAAnF,GAAAzB,cAAAgb,QACApU,EAAAnF,GAAAzB,cAAAwb,aAGA,CAAA,GAAA5U,EAAAnF,GAAAzB,cAAA2N,MAWA,SAVA/G,EAAAnF,GAAAwO,WACArJ,EAAAnF,GAAAwO,SAAApC,iBACAjH,EAAAnF,GAAAwO,UAIAjP,EAAA4F,EAAAnF,GAAAqF,OAAA,iBACAF,EAAAnF,GACAmF,EAAAnF,GAAAT,EAIA,QAAApB,IAAAoC,OAAAic,yBAAArX,EAAAnF,GAAA,CAIAT,EAAA4F,EAAAnF,UACAmF,EAAAnF,GACAmF,EAAAnF,GAAAT,MAIA,SAAAub,mBAAA9Q,EAAAoK,EAAAzR,EAAA8Z,EAAAhT,GAMA,IAiBAtE,EAlBA,QAHAhH,IAAA6L,EAAAwO,cACAC,uBAAAzO,QAEA7L,IAAA6L,EAAAwO,aAAApE,GAYA,OAVA,KADAjP,EAAA6E,EAAAwO,aAAApE,IACAnN,QAAAtE,IACAwC,EAAAxF,KAAAgD,aAEAxE,IAAAse,SACAte,IAAAgH,EAAAuX,OACAvX,EAAAuX,MAAA,CAAAD,GACAtX,EAAAuX,MAAAjT,KAAAA,GAEAtE,EAAAuX,MAAA/c,KAAA8c,MAKAzS,EAAAwO,aAAApE,GAAA,CAAAzR,QAEAxE,IAAAse,MACAtX,EAAA6E,EAAAwO,aAAApE,IACAsI,MAAA,CAAAD,GACAtX,EAAAuX,MAAAjT,KAAAA,GAIA,QAAAtL,IAAAoC,OAAAic,yBAAAxS,EAAAoK,GAAAuE,IAAA,CAGA,IAAAgE,EAAA3S,EAAAoK,GACA7T,OAAAC,eAAAwJ,EAAAoK,EAAA,CACA3T,YAAA,EACAC,cAAA,EACAgY,IAAA,SAAAkE,GACA,OAAAD,GAEAhE,IAAA,SAAA7E,GACA,GAAA6I,IAAA7I,EAAA,CACA,IAAA+I,EAAA7S,EAAA,OAAAoK,GACA0I,GAAA,IAAA5D,kBAAAlP,EAAA,OAAAoK,QAAAjW,EACAwE,GAAA,IAAAuW,kBAAAlP,EAAA,MAAAoK,QAAAjW,EAEA,QAAAA,IAAAwE,QAAAxE,IAAA0e,QAAA1e,IAAA2e,EAAA,CACA,IAAA/D,OAAA5a,EAAA6a,OAAA7a,EAAA4e,OAAA5e,EACA,SACAA,IAAA0e,IACA9D,EAAA8D,EAAAF,EAAA7I,SAEA3V,IAAA2e,IACA9D,EAAA8D,EAAAH,EAAA7I,SAEA3V,IAAAwE,IACAoa,EAAApa,EAAAga,EAAA7I,IACA,MAAA1L,GAAAwB,QAAAQ,MAAAhC,GAEAuU,OAAAxe,IAAA4e,EAAAA,OACA5e,IAAA6a,EAAAA,OACA7a,IAAA4a,EAAAA,EAAAjF,OAGA6I,EAAA7I,EAGA,IADA,IAAA3O,EAAA6E,EAAAwO,aAAApE,GACAvU,EAAA,EAAAA,EAAAsF,EAAAvF,OAAAC,IACA0a,gBAAApV,EAAAtF,GAKAsF,EAAAtF,MAJA,IAAAqZ,mBACA/T,EAAAtF,GAAAmK,EAAAoK,EAAAjP,EAAAuX,OAQA,OADAxD,mBAAA,EACAyD,MAKA,IAAAK,UAAA,mBACAtZ,KAAAuZ,YAAA,SAAAnZ,GACA,IAAAyK,EAAAvQ,GAAA0M,WAAA6D,UAAAzK,GACAkG,EAAAtG,KAAAuI,KAAAsC,GACA,IAAAvE,EAAA,OAAAJ,QAAAQ,MAAA,aAAAmE,EAAA,gCAAAzK,GAEA,IAAAuL,EAAA3L,KAAA6U,kBAAAzU,EAAA,KAAAyK,GACAgB,eAAAF,EAAArF,GAAA,UACAqF,EAAAK,UACA5L,EAAA/B,WAAAoQ,aAAA9C,EAAAvI,KAAAhD,GACAA,EAAAuL,EAAAvI,KAQA,IANA,IAAAoW,EAAA,WACA9L,kBAAAtN,EAAAuL,OAAAlR,EAAA6L,IAIAmT,EAAA9N,EAAA8B,eACAtR,EAAA,EAAAA,EAAAsd,EAAAvd,OAAAC,IAAA,CACA,IAAAuU,EAAA+I,EAAAtd,GAAA,QAEA1B,IAAA6L,EAAAoK,KACApK,EAAAoK,GAAA,IAEA0G,mBAAA9Q,EAAAoK,EAAA8I,KAIAxZ,KAAA6U,kBAAA,SAAAlE,EAAAjC,EAAAjH,GACA,IAAAiS,EAAA/I,EAAA9I,UAGA,OAAA6G,IACAgL,EAAAA,EAAAlY,MAAA,IAAAkN,GAAA/J,KAAA,YAIA,IAAAoK,GADA2K,EAAAne,iBAAAme,EAAA,KAAAhL,EAAAjH,EAAA,YACA,GACAiC,EAAAgQ,EAAA,GACAA,EAAAle,WAAAke,EAAA,GAAA,KAAAhL,EAAAjH,EAAA,UAAAsH,GA+DA2K,EAAA3Z,EAAAF,aAAA6Z,GAAA,GACA,IAAAtB,EAAApY,KAAAuG,gBAAAmT,GAAA,GAAArL,UACAsL,EAAA,GAEA,SAAAC,EAAAC,GAIA,IAHA,IAAAC,EAAAD,EAAAhN,WACA3B,EAAA,GACA6O,EAAA,EACAjN,EAAA,EAAAA,EAAAgN,EAAA5d,OAAA4Q,IAAA,CACA,IAAAkB,EAAA8L,EAAAhN,GAAAlQ,MAAA4E,MAAA,QACA,GAAA,IAAAwM,EAAA9R,OAAA,CACA,GAAA,MAAA4d,EAAAhN,GAAArF,KAAA,GAAA,CACA,IAAAnL,EAAA,CACAmL,KAAAqS,EAAAhN,GAAArF,KAAAjG,MAAA,KAAAmD,KAAA,IACA/H,MAAAkd,EAAAhN,GAAAlQ,OAEAid,EAAA3M,gBAAA4M,EAAAhN,GAAArF,WAEAnL,EAAA,CACAmL,KAAAqS,EAAAhN,GAAArF,KACA7K,MAAAkd,EAAAhN,GAAAlQ,OAGAmd,EAAA,GAMA,MALA/L,EAAA1R,EAAAM,MAAAb,QAAA,gBAAA,SAAAC,EAAAwQ,GAEA,OADAuN,EAAA9d,KAAA4Z,OAAArJ,IACA,OAGA,IAAAuN,EAAA7d,OACAI,EAAAiQ,OAAAwN,EAAA,GAEAzd,EAAAqQ,YAAAoN,EAEA7O,EAAAjP,KAAAK,IAGA,OAAA4O,EAGA,IAAAR,EAAAkP,EAAAF,GACA,IAAAhP,EAAAxO,QACAyd,EAAA1d,KAAA,CACAoQ,SAAA,EACAD,QAAA,CAAA,GACAS,WAAAnC,IAGA,IAAA,IAAAvO,EAAA,EAAAA,EAAAic,EAAAlc,OAAAC,IAAA,CACA,IAAAN,EAAA,CACAwQ,SAAA+L,EAAAjc,GAAAkQ,UAGA,GAAA,IAAAxQ,EAAAwQ,SACAxQ,EAAAgR,WAAA+M,EAAAxB,EAAAjc,IACAN,EAAAuQ,QAAArM,EAAAmE,YAAAkU,EAAAjc,IAAA,QAGA,GAAA,IAAAN,EAAAwQ,SAAA,CACA,IAAAzI,EAAAwU,EAAAjc,GAAAqH,YACAuW,EAAA,GAOA,GALAnW,EAAA7H,QAAA,kBAAA,SAAAC,EAAAwQ,GACAuN,EAAA9d,KAAA4Z,OAAArJ,MAIA,IAAAuN,EAAA7d,OAAA,CACA0H,EAAAA,EAAApC,MAAA,iBACA,IAAA,IAAAsL,EAAA,EAAAA,EAAAlJ,EAAA1H,OAAA4Q,IACAlJ,EAAAkJ,GAAA9D,gBAAApF,EAAAkJ,IAAA5D,OAEAkP,EAAAjc,GAAAqH,YAAAI,EAAA2M,QAEA,IAAApQ,EAAAiY,EAAAjc,GAAAkC,WACAsC,EAAAyX,EAAAjc,GAAAwE,YAGAqZ,EAAA,KACA,IAAAD,EAAA7d,QAAA,IAAAkc,EAAAjc,GAAAqH,YAAAtH,OACA8d,EAAAja,EAAAmE,YAAAkU,EAAAjc,IAAA,GACA,OAAAic,EAAAjc,GAAAyE,kBACAoZ,EAAAja,EAAAmE,YAAAkU,EAAAjc,GAAAyE,iBAAA,IAGA,IAAAqZ,EAAA,GACA,IAAAnN,EAAA,EAAAA,EAAAiN,EAAA7d,OAAA4Q,IAAA,CACA,IAAAoN,EAAAxf,SAAAyf,cAAA,IASA,GARAha,EAAAkN,aAAA6M,EAAAvZ,GACAsZ,EAAAhe,KAAA,CACAoQ,UAAA,EACAM,YAAAoN,EAAAjN,GACAF,UAAAoN,EACA5N,QAAArM,EAAAmE,YAAAgW,GAAA,KAGAtW,EAAAkJ,GAAA,CACA,IAAAsN,EAAA1f,SAAA2f,eAAAzW,EAAAkJ,IACA3M,EAAAkN,aAAA+M,EAAAzZ,GAGAmM,EAAA,EAAAiN,EAAA7d,SACA8d,EAAAja,EAAAmE,YAAAkW,GAAA,KAMA,GADA5R,MAAA7K,UAAA1B,KAAAhB,MAAA0e,EAAAM,GACA,KAAA7B,EAAAjc,GAAAqH,YAAA,CACA4U,EAAAjc,GAAA6B,SACA,IAAA8O,EAAA,EAAAA,EAAAmN,EAAA/d,OAAA4Q,IAAA,CACA,IAAArL,EAAAwY,EAAAnN,GAAAV,QACA3K,EAAAA,EAAAvF,OAAA,KAEA,SAEA,IAAA,IAAAkc,EAAAjc,GAAAqH,YAAA8W,OAAA,cACA,SAIAP,EAAA,GAMA,MALAnW,EAAAwU,EAAAjc,GAAAqH,YAAAzH,QAAA,iBAAA,SAAAC,EAAAwQ,GAEA,OADAuN,EAAA9d,KAAA4Z,OAAArJ,IACA,OAGA,IAAAuN,EAAA7d,OACAL,EAAA0Q,OAAAwN,EAAA,IAEAle,EAAAe,MAAAwb,EAAAjc,GAAAqH,YACA3H,EAAA8Q,YAAAoN,GAGAle,EAAAuQ,QAAArM,EAAAmE,YAAAkU,EAAAjc,IAAA,GAGAwd,EAAA1d,KAAAJ,GAGA,IAAA+R,EAzMA,WACA,GAAA,OAAAc,EAEA,IAAA6L,EAAApR,OAAA,IAAAnJ,KAAAgL,UAAAhL,KAAAuI,KAAAd,IAAA+S,KAAA,SAAA1N,EAAA2N,GACA,OAAAA,EAAAve,OAAA4Q,EAAA5Q,SACAyI,KAAA,KAAA,IAAA,UAGA4V,EAAApR,OAAA,iBAAAuF,EAAA,wCAAA,KAGA,IAFA,IAAAV,EAAA,GAEA7R,EAAA,EAAAA,EAAA4S,EAAA7S,OAAAC,IAAA,CACA,IAAAgQ,EAAA4C,EAAA5S,GAGA,GAAA,IAAAgQ,EAAApG,KAAA,CAcA,GAAA,IAAAoG,EAAApG,KAAA,CACA,IAAA2U,EAAAvO,EAAAP,GAAAjH,KAAA,KAEA,OAAAwH,EAAA1B,YACAiQ,GAAA,IAAAvO,EAAA1B,WAEA,IAAA,IAAAqC,EAAA,EAAAA,EAAAX,EAAA3B,OAAAtO,OAAA4Q,IACA4N,GAAAvO,EAAA3B,OAAAsC,GAAAnI,KAAA,UAGA,IAAAwH,EAAApG,OACA2U,EAAAvO,EAAAR,KAAA,KAEA+O,EAAAA,EAAA3e,QAAA,kDAAA,SAAAC,EAAAwQ,GACA,OAAA9C,EAAA8C,MAGAhL,MAAA,KAAAmD,KAAA,KAAA5I,QAAAwe,EAAA,SAAAve,EAAAwQ,GACAA,EAAAA,EAAAzQ,QAAA,eAAA,SAAA4e,EAAAC,GACA,MAAA,IAAAA,SAGAngB,IAAAuT,EAAAxB,GAAAwB,EAAAxB,GAAA,CAAArQ,IACA,IAAA6R,EAAAxB,GAAAjJ,QAAApH,IACA6R,EAAAxB,GAAAvQ,KAAAE,UArCAgQ,EAAAR,KAAA,GAAAnK,MAAA,KAAAmD,KAAA,KAAA5I,QAAAwe,EAAA,SAAAve,EAAAwQ,GACAA,EAAAA,EAAAzQ,QAAA,eAAA,SAAA4e,EAAAC,GACA,MAAA,IAAAA,SAGAngB,IAAAuT,EAAAxB,GAAAwB,EAAAxB,GAAA,CAAArQ,IACA,IAAA6R,EAAAxB,GAAAjJ,QAAApH,IACA6R,EAAAxB,GAAAvQ,KAAAE,KAkCA,OAAA6R,EAgJA6M,GACA3P,EAAArO,OAAAqO,KAAA0C,GACAkN,EAAA,GACA,IAAA3e,EAAA,EAAAA,EAAA+O,EAAAhP,OAAAC,IACA2e,EAAA7e,KAAA,CAAAiP,EAAA/O,GAAA+O,EAAA/O,GAAAqF,MAAA,OAGA,MAAA,CACA4B,KAAAsW,EACAlO,MAAAuD,EACA/C,UAAA2N,EACA/L,eAAAA,EACAH,eAAAqN,IAIA,IAAAC,mBAAA,EACAC,SAAA,CAAA,OAAA,OAAA,QAAA,OAAA,OAAA,SAAA,SAAA,UAyGA,SAAAjG,uBAAA9J,QACAxQ,IAAAwQ,EAAA6J,cAIAjY,OAAAC,eAAAmO,EAAA,eAAA,CACAjO,cAAA,EACAD,YAAA,EACAe,UAAA,EACAlB,MAAA,KAjHAoD,KAAAuG,gBAAA,SAAAoK,EAAAsK,GAIA,IAHA,IAAAnW,GAAA6L,GAAAjW,SAAAsJ,MAAAc,WAEAjJ,EAAA,GACAM,EAAA2I,EAAA5I,OAAA,EAAAC,GAAA,EAAAA,IAAA,CACA,IAAA0d,EAAA/U,EAAA3I,GAEA,QAAA1B,IAAAwgB,IAAA,IAAAD,SAAAzX,QAAAsW,EAAAqB,UAGA,GAAA,IAAArB,EAAAxN,SAAA,CACA,IAAA,IAAA0O,kBAAA,SACA,IAAAjB,EAAAD,EAAAhN,WAGA,GAAAiN,EAAA,gBAAAA,EAAA,mBAAAA,EAAA,gBAAA,SAEA,IAAA,IAAAhN,EAAA,EAAAA,EAAAgN,EAAA5d,OAAA4Q,IACA,IAAA,IAAAgN,EAAAhN,GAAAlQ,MAAA2G,QAAA,MAAA,CACA1H,EAAAI,KAAA4d,GACA,MAIArR,MAAA7K,UAAA1B,KAAAhB,MAAAY,EAAAmE,KAAAuG,gBAAAsT,EAAAoB,SAGA,GAAA,IAAApB,EAAAxN,SAAA,CACA,GAAA,IAAAwN,EAAArW,YAAAtH,OAAA,CACA2d,EAAA7b,SACA,SAIA,IAAAmd,EAAAtB,EAAArW,YAAAD,QAAA,MACA,IAAA,IAAA4X,EACAJ,mBAAA,OACA,IAAA,IAAAA,kBACA,SAGA,IAAAK,EAAAvB,EAAArW,YAAAD,QAAA,MACA,IAAA,IAAA6X,KAAA,IAAAD,GAAAA,EAAAC,GAAA,CACAL,mBAAA,EACA,SAGA,IAAA,IAAAlB,EAAAwB,UAAA9X,QAAA,MAAA,CACA,QAAA9I,IAAAwgB,EAAA,CACApf,EAAAI,KAAA4d,EAAAxb,YACA,MAGAxC,EAAAI,KAAA4d,KAKA,OAAAhe,GAGAmE,KAAAyX,gBAAA,SAAAW,EAAAZ,GACA,IAAA,IAAA1K,EAAA,EAAAA,EAAAsL,EAAAlc,OAAA4Q,IAAA,CAEA,IAAAX,EAAApD,kBAAAqP,EAAAtL,GAEAwO,EAAAhhB,GAAA0M,WAAAsU,aAAAnP,GACA,GAAA,OAAAmP,EAAA,CAGA,IAAAhV,EAAAgV,EAAA1Q,aAAA,sBAEAnQ,IAAA+c,GACArL,EAAA1J,UAAAzE,OAAA,sBAGAvD,IAAAuF,KAAAuI,KAAAjC,IAAAhM,GAAA6M,UAAAE,WAAAf,KACAA,EAAAhM,GAAA6M,UAAAY,IAAAzB,EAAAgV,IAEA,IAAArQ,EAAAjL,KAAAuI,KAAAjC,IAAAsC,MAAAtC,GAGA,GAAA,2BAAA/B,KAAA4H,EAAAvI,WAGA,OAFAsC,QAAAQ,MAAA,+CACAR,QAAA6D,IAAAhB,kBAAAd,WAAA,IAIA,IAAA,IAAAkE,EAAA2L,aAAA,kBACA9X,KAAAuZ,YAAApN,OACA,CACA,IAAAtQ,EAAAN,iBAAA4Q,EAAAvI,UAAAqH,GAAA,EAAA3E,GACA6F,EAAAvI,UAAApI,WAAAK,EAAAoP,GAAA,EAAA3E,GAEA,IADA,IAAAwT,EAAA3N,EAAAU,WACA1Q,EAAA,EAAAA,EAAA2d,EAAA5d,OAAAC,IACA,IAAA,IAAA2d,EAAA3d,GAAAS,MAAA2G,QAAA,MAAA,CACA,IAAAgY,EAAAzB,EAAA3d,GACAof,EAAA3e,MAAApB,WAAA+f,EAAA3e,MAAAqO,GAAA,EAAA3E,QArsEA,GCbAhM,GAAA0M,WAAA,IAAA,WACA,IAAAhH,KAAAxF,KACAwF,KAAA2H,QAAA,GACA3H,KAAAwb,OAAA,GAEAxb,KAAAwH,IAAA,SAAAC,EAAA7L,GACAtB,GAAA6M,UAAAE,WAAAI,GACAnN,GAAA6M,UAAAE,WAAAI,GAAA,GAAA7L,EAGAoE,KAAA2H,QAAAF,GAAA7L,GAGAoE,KAAAsX,WAAA,SAAAlX,EAAAxE,GACA,IAAA0K,EAAAhM,GAAA0M,WAAA6D,UAAAzK,GAEA,IAAAkG,EACA,KAAA,oCAEA,IAAAmV,EAAArb,EAAAwK,aAAA,gBACA,GAAA6Q,EAKA,IAAAC,EAAAtb,OAHA,QADAsb,EAAA3b,EAAAI,OAAAC,EAAA,qBAEAqb,EAAAC,EAAA9Q,aAAA,iBAIA,IAAA6Q,EACA,OAAA7f,EAAAA,EAAAtB,GAAAgM,MAAAiC,KAAAjC,IAAA,GACAhM,GAAAgM,MAAAiC,KAAAjC,GAIA,IAAAqV,EAAA,EAIA,OAHAF,IACAE,EAAA5b,EAAAQ,QAAAmb,EAAA,kBAAAxf,QAEAN,EAAAA,EAAAtB,GAAAgM,MAAAiC,KAAAjC,GAAAmV,GAAAE,GACArhB,GAAAgM,MAAAiC,KAAAjC,GAAAmV,GAAAE,IAGA3b,KAAAsb,aAAA,SAAAlb,GACA,OAAA,IAAAA,EAAAiM,UAAAjM,EAAA0X,aAAA,iBACA1X,EAEAL,EAAAI,OAAAC,EAAA,oBAGAJ,KAAA6K,UAAA,SAAAzK,GACA,IAAAqH,EAAAzH,KAAAsb,aAAAlb,GACA,GAAA,OAAAqH,EAUA,YAHAhN,KAHAgN,EAAAA,EAAAmD,aAAA,mBAGA5K,KAAAwb,OAAA/T,IACAzH,KAAA6I,IAAApB,GAEAA,EATAvB,QAAAQ,MAAA,gCAAAtG,IAYA,IAAAwb,cAAA,SAAAlX,GACA,IAAAtE,QAAAsE,EAAAtH,OACAmM,OAAAnJ,QAAAwK,aAAA,YAEArB,SACAnJ,QAAAL,EAAAI,OAAAC,QAAA,cACAmJ,OAAAnJ,QAAAwK,aAAA,aAGA,IAAAtE,MAAAvG,EAAAI,OAAAC,QAAA,mBAAAwK,aAAA,iBAEA,IAAAtQ,GAAAgM,MAAAiC,KAAAjC,OACA,KAAA,2BAAAA,MAAA,iCAEA,IAAA0E,UAAA1Q,GAAAgM,MAAA0E,UAAA1Q,GAAAgM,MAAAiC,KAAAjC,QAAA3B,KAAA,KACA4E,OAAA7N,YAAA6N,OAAA,SAAAsS,GACA,OAAAA,EAAA9f,QAAAoN,OAAA7O,GAAAY,MAAAG,UAAA,IAAA2P,UAAA,OAAA,KAAA,SAAAhP,EAAAoT,GACA,MAAA,eAAAA,MAIA7F,OAAAA,OAAA/H,MAAA,KAEA,IAAAmT,OAAApL,OAAA,GACAuS,QAAAnH,OAGA,IACAA,OAAAzK,KAAAyK,QACA,MAAAjQ,GACAiQ,QAAA,EAGA,GAAAA,OAAA,CAMApL,OAAAgH,QACAhH,OAAAA,OAAA5E,KAAA,KACA4E,OAAAA,OAAA/H,MAAA,KACA+H,OAAA+G,MACA/G,OAAAA,OAAA5E,KAAA,KAGA,IAAA4E,OAAArN,SAEAqN,OAAAW,MAAA,IAAAX,OAAA,KAAAxN,QAAA,gBAAA,SAAAiS,GACA,OAAAA,EAAA,GAAA,cAGAzE,SACAA,OAAA,IAEA,IACAoL,OAAA1Z,MAAAmF,QAAAmJ,QACA7E,EAAAqX,iBACA,MAAArX,GACAwB,QAAAQ,MAAA,gCAAAJ,MAAA,KAAAlG,QAAA,KAAAsE,SAzBAwB,QAAAQ,MAAA,gCAAAJ,MAAA,kBAAAwV,QAAA,OAAA1b,UA6BAJ,KAAA6I,IAAA,SAAApB,EAAA7L,GACA,OAAAtB,GAAAS,OAAAkK,aAKA3K,GAAA6M,UAAAE,WAAAI,GACAvB,QAAAQ,MAAA,IAAAe,EAAA,mCAEAzH,KAAA2H,QAAAF,KACAnN,GAAAgM,MAAAiC,KAAAd,KACAnN,GAAAgM,MAAAiC,KAAAd,GAAA,IAEAzH,KAAA2H,QAAAF,GAAAnN,GAAAgM,MAAAiC,KAAAd,GAAAmB,OACA5I,KAAAwb,OAAA/T,IAAA,SACAzH,KAAA2H,QAAAF,SAGAhN,IAAAH,GAAAgM,MAAAiC,KAAAd,KACAnN,GAAAgM,MAAAiC,KAAAd,GAAA,SAEA7L,GACAA,EAAAtB,GAAAgM,MAAAiC,KAAAd,GAAAmB,SApBAtO,GAAA,WACA0F,KAAA6I,IAAApB,EAAA7L,MAsBAoE,KAAAiH,KAAA,SAAA9G,GACA,IAAA7F,GAAAS,OAAAkK,aACA,OAAA3K,GAAA,WACA0F,KAAAiH,KAAAQ,QAIA,IADA,IAAA5L,EAAAkE,EAAA,kBAAAI,GAAAzF,SAAAsJ,MACA7H,EAAA,EAAAA,EAAAN,EAAAK,OAAAC,IACA6D,KAAA6I,IAAAhN,EAAAM,GAAAyO,aAAA,mBAKAlQ,SAAAyG,iBAAA,mBAAA,WACApB,EAAAe,GAAApG,SAAAsJ,KAAA,QAAA,aAAA4X,gBACA,CAAAxa,SAAA,EAAAJ,MAAA,KAGA,IAAA4H,MAAA,SAAAxB,GACA,GAAA9M,GAAA6M,UAAAE,WAAAD,GAAA,CACA,IAAAE,EAAA,GACAH,EAAA7M,GAAA6M,UAAAG,UAAAF,GACA,QAAA3M,IAAA0M,EACA,IAAA,IAAAhL,EAAA,EAAAA,EAAAgL,EAAAjL,OAAAC,IACAmL,EAAArL,KAAA3B,GAAAgM,MAAAiC,KAAApB,EAAAhL,KAGA,OAAAmL,EAMA,OAHAhN,GAAAgM,MAAAiC,KAAAnB,KACA9M,GAAAgM,MAAAiC,KAAAnB,GAAA,IAEA9M,GAAAgM,MAAAiC,KAAAnB,ICpLA4U,QAAA,GACAC,cAAA,EACA,SAAAC,QAAAC,GACA,IAAAC,EAAAvf,OAAAM,OAAA,GAAA6e,SACA,uEAAAxa,MAAA,KAAArD,QAAA,SAAAke,UACAD,EAAAC,KAEA,IAAAC,EAAAzf,OAAAM,OAAA,CACAof,IAAAhiB,OAAA4E,SAAAqd,WACA7H,OAAA,MACAhJ,MAAA,EACA3F,OAAA,EACAwH,OAAA,EACAiP,KAAA,GACAC,SAAA,GACAC,QAAA,GACAC,UAAA,GACAC,WAAA,GACAC,aAAA,EACAC,SAAA,OACAC,YAAA,oCACAC,QAAA,GACAb,GACAhL,EAAAvU,OAAAM,OAAA,GAAAmf,EAAAH,GAGA,SAAAe,EAAAb,GAEA,IADA,IAcAc,EACAC,EAfAzR,EAAA,GACA0R,EAAA,EAAAA,EAAAziB,UAAAsB,OAAAmhB,IACA1R,EAAA0R,EAAA,GAAAziB,UAAAyiB,GAwBA,OAVArB,QAAAK,KACAc,EAAAnB,QAAAK,GAAAphB,MAAA+gB,QAAArQ,IAEAyF,EAAAiL,KACAe,EAAAhM,EAAAiL,GAAAphB,MAAAmW,EAAAzF,IAEA,kBAAAwR,IACAA,GAAA,GACA,kBAAAC,IACAA,GAAA,GACAD,GAAAC,EAIA,IAAA,IADAF,EAAA,eAAA9L,GACA,CAGAA,EAAArL,OACAqL,EAAAuD,OAAAvD,EAAArL,MAEA,IAAAuX,EAAAlM,EAAAmL,IAAAhZ,QAAA,MAAA,EAAA,IAAA,IAEAoR,EAAAvD,EAAAuD,OAAA4I,cAEA,IAAA,QAAA5I,GAAA,SAAAA,GAAA,YAAAA,GAAA,WAAAA,IAAAvD,EAAAzF,KAAA,CACA,IAAA6R,OAAA,GAIAA,EAHA,iBAAApM,EAAAzF,KAEAyF,EAAAzF,KAAApI,QAAA,MAAA,EACA6N,EAAAzF,KAAAnK,MAAA,KAAA,GAEA4P,EAAAzF,KAIA8R,eAAArM,EAAAzF,OAEAzP,SACAkV,EAAAmL,KAAAe,EAAAE,EACA,MAAAF,IACAA,EAAA,MAIA,GAAA,SAAAlM,EAAA2L,UAAA3L,EAAAmL,IAAAhZ,QAAA,cAAA,EAAA,CACA,IACAma,EADAC,EAAA,UAAAC,KAAAC,OAAA5B,eAAA,IAEA6B,EAAA1M,EAAAmL,IAAA/a,MAAA,aACAuc,EAAAD,EAAA,GAAA,YAAAH,EACA,GAAAG,EAAA,GAAAva,QAAA,MAAA,EAAA,CACA,IAAAya,EAAAF,EAAA,GAAAtc,MAAA,KAAAyc,OAAA,SAAAC,GAAA,OAAAA,EAAA3a,QAAA,KAAA,IAAAoB,KAAA,KACAqZ,EAAA9hB,OAAA,IACA6hB,GAAA,IAAAC,GAGA,IAAAG,EAAAzjB,SAAAoI,cAAA,UAwBA,OAvBAqb,EAAApY,KAAA,kBACAoY,EAAAC,QAAA,WACAvM,aAAA6L,GACAR,EAAA,QAAA,KAAA,eACAA,EAAA,WAAA,KAAA,gBAEAiB,EAAAlY,IAAA8X,EAEAxjB,OAAAojB,GAAA,SAAAhS,GACAkG,aAAA6L,GACAR,EAAA,UAAAvR,GACAwS,EAAA9f,WAAAC,YAAA6f,GACAA,EAAA,YACA5jB,OAAAojB,IAEAjjB,SAAAwF,cAAA,QAAA2F,YAAAsY,QACA/M,EAAA6L,QAAA,IACAS,EAAA/a,WAAA,WACAwb,EAAA9f,WAAAC,YAAA6f,GACAA,EAAA,KACAjB,EAAA,QAAA,KAAA,YACA9L,EAAA6L,WAKA,QAAAtI,GAAA,SAAAA,GAAA,YAAAA,GAAA,WAAAA,IACA,IAAAvD,EAAA5D,QACA4D,EAAAmL,KAAAe,EAAA,WAAAM,KAAAC,OAIA,IAAAQ,EAAA,IAAAC,eAMA,GAJAD,EAAAN,WAAA3M,EAAAmL,IACA8B,EAAAE,kBAAAnN,GAGA,IADA8L,EAAA,aAAAmB,EAAAjN,GAEA,OAAAiN,EAEAA,EAAAG,KAAA7J,EAAAvD,EAAAmL,IAAAnL,EAAApL,MAAAoL,EAAAqL,KAAArL,EAAAsL,UAEA,IAyDA+B,EAzDAC,EAAA,KACA,IAAA,SAAA/J,GAAA,QAAAA,GAAA,UAAAA,IAAAvD,EAAAzF,KACA,GAAAyF,EAAA0L,YAGA,GAFA,CAAA6B,YAAAC,KAAAC,SAAAC,UAEAvb,QAAA6N,EAAAzF,KAAA9Q,cAAA,EACA6jB,EAAAtN,EAAAzF,SAEA,CAEA,IAAAoT,EAAA,8BAAAnB,KAAAC,MAAArB,SAAA,IACA,wBAAApL,EAAA4L,YACAqB,EAAAW,iBAAA,eAAA,iCAAAD,GAGAV,EAAAW,iBAAA,eAAA5N,EAAA4L,aAEA0B,EAAA,GACA,IAAA/S,EAAA8R,eAAArM,EAAAzF,MACA,GAAA,wBAAAyF,EAAA4L,YAAA,CACArR,EAAAA,EAAAnK,MAAA,KAEA,IADA,IAAAqM,EAAA,GACA1R,EAAA,EAAAA,EAAAwP,EAAAzP,OAAAC,GAAA,EACA0R,EAAA5R,KAAA,yCAAA0P,EAAAxP,GAAAqF,MAAA,KAAA,GAAA,YAAAmK,EAAAxP,GAAAqF,MAAA,KAAA,GAAA,QAEAkd,EAAA,KAAAK,EAAA,OAAAlR,EAAAlJ,KAAA,KAAAoa,EAAA,QAAA,KAAAA,EAAA,cAGAL,EADA,qBAAAtN,EAAA4L,YACAnN,KAAAC,UAAAsB,EAAAzF,MAGAA,OAKA+S,EAAAtN,EAAAzF,KACA0S,EAAAW,iBAAA,eAAA5N,EAAA4L,aA8EA,OA1EA5L,EAAAuL,SACA9f,OAAAqO,KAAAkG,EAAAuL,SAAAxe,QAAA,SAAA8gB,GACAZ,EAAAW,iBAAAC,EAAA7N,EAAAuL,QAAAsC,WAIA,IAAA7N,EAAA8N,cAEA9N,EAAA8N,YAAA,0BAAA3a,KAAA6M,EAAAmL,MAAApT,OAAAgW,KAAA5kB,OAAA4E,SAAAigB,MAEAhO,EAAA8N,aACAb,EAAAW,iBAAA,mBAAA,kBAEA5N,EAAAwL,WACA/f,OAAAM,OAAAkhB,EAAAjN,EAAAwL,WAIAyB,EAAAgB,OAAA,WAGA,GAFAZ,GACA5M,aAAA4M,GACAJ,EAAAiB,QAAA,KAAAjB,EAAAiB,OAAA,KAAA,IAAAjB,EAAAiB,OAAA,CACA,IAAAC,OAAA,EACA,GAAA,SAAAnO,EAAA2L,SAAA,CACA,IAAAyC,OAAA,EACA,IACAD,EAAA1P,KAAArE,MAAA6S,EAAAoB,cAEA,MAAAC,GACAF,GAAA,EAEAA,EAIAtC,EAAA,QAAAmB,EAAA,cAHAnB,EAAA,UAAAqC,EAAAlB,EAAAiB,OAAAjB,QAQAnB,EAAA,UADAqC,EAAA,SAAAlB,EAAAsB,cAAA,KAAAtB,EAAAsB,aAAAtB,EAAAoB,aAAApB,EAAAuB,SACAvB,EAAAiB,OAAAjB,QAIAnB,EAAA,QAAAmB,EAAAA,EAAAiB,QAEAlO,EAAAyL,aACAb,QAAAa,YAAAb,QAAAa,WAAAwB,EAAAiB,SACAtD,QAAAa,WAAAwB,EAAAiB,QAAAjB,GACAjN,EAAAyL,WAAAwB,EAAAiB,SACAlO,EAAAyL,WAAAwB,EAAAiB,QAAAjB,IAEAnB,EAAA,WAAAmB,EAAAA,EAAAiB,SAEAjB,EAAAD,QAAA,WACAK,GACA5M,aAAA4M,GACAvB,EAAA,QAAAmB,EAAAA,EAAAiB,QACApC,EAAA,WAAAmB,EAAA,UAGAjN,EAAA6L,QAAA,IACAoB,EAAAwB,QAAA,WACApB,GACA5M,aAAA4M,IAEAA,EAAA9b,WAAA,WACA0b,EAAAyB,QACA5C,EAAA,QAAAmB,EAAA,WACAnB,EAAA,WAAAmB,EAAA,YACAjN,EAAA6L,WAIA,IADAC,EAAA,aAAAmB,EAAAjN,GAEAiN,GAEAA,EAAA0B,KAAArB,GAEAL,IAEA,SAAA2B,gBAAArL,GAEA,IADA,IAAAsL,EAAA,GACA5C,EAAA,EAAAA,EAAAziB,UAAAsB,OAAAmhB,IACA4C,EAAA5C,EAAA,GAAAziB,UAAAyiB,GAEA,IAAA6C,EAAA,GAAA3D,EAAA2D,EAAA,GAAAvU,EAAAuU,EAAA,GAAAC,EAAAD,EAAA,GAAAxZ,EAAAwZ,EAAA,GAAAnD,EAAAmD,EAAA,GACA,mBAAAD,EAAA,IACA1D,EAAA0D,EAAA,GAAAE,EAAAF,EAAA,GAAAvZ,EAAAuZ,EAAA,GAAAlD,EAAAkD,EAAA,KAGA1D,EAAA0D,EAAA,GAAAtU,EAAAsU,EAAA,GAAAE,EAAAF,EAAA,GAAAvZ,EAAAuZ,EAAA,GAAAlD,EAAAkD,EAAA,IAEA,CAAAE,EAAAzZ,GAAAvI,QAAA,SAAAc,GACA,iBAAAA,IACA8d,EAAA9d,EACAA,IAAAkhB,EACAA,OAAA1lB,EAEAiM,OAAAjM,KAIA,IAAA0hB,EAAA,CACAI,IAAAA,EACA5H,OAAA,SAAAA,GAAA,aAAAA,EAAA,OAAA,MACAhJ,KAAAA,EACAwU,QAAAA,EACAzZ,MAAAA,EACAqW,SAPAA,EAAAA,IAAA,SAAApI,GAAA,aAAAA,EAAA,YAAAla,IAiBA,MARA,aAAAka,GACA9X,OAAAM,OAAAgf,EAAA,CACAa,YAAA,mBACAF,aAAA,EACAoC,aAAA,EACAvT,KAAA,iBAAAA,EAAAA,EAAAkE,KAAAC,UAAAnE,KAGAuQ,QAAAC,GA6CA,SAAAsB,eAAA2C,EAAAC,GAEA,IADA,IAAA/jB,EAAAO,OAAAqO,KAAAkV,GACAjkB,EAAA,EAAAA,EAAAG,EAAAJ,OAAAC,IAAA,CACA,IAAAS,EAAAwjB,EAAA9jB,EAAAH,IACAikB,EAAAvlB,cAAA2N,MACAlM,EAAAH,IAAAkkB,EAAA,KACAD,EAAAvlB,cAAAgC,SACAP,EAAAH,GAAAkkB,EAAAA,EAAA,IAAA/jB,EAAAH,GAAA,IAAAG,EAAAH,IAGAG,EAAAH,GADA,iBAAAS,EACA6gB,eAAA7gB,EAAAN,EAAAH,IAEAG,EAAAH,GAAA,IAAAmkB,mBAAA1jB,GAEA,OAAAN,EAAAqI,KAAA,KC9WA,ODqTA9H,OAAAM,OAAA+e,QAAA,CACAlH,IAAA,WAEA,IADA,IAAAiL,EAAA,GACA5C,EAAA,EAAAA,EAAAziB,UAAAsB,OAAAmhB,IACA4C,EAAA5C,GAAAziB,UAAAyiB,GAEA,OAAA2C,gBAAA/kB,WAAA,EAAA,CAAA,OAAAslB,OAAAN,KAEAO,KAAA,WAEA,IADA,IAAAP,EAAA,GACA5C,EAAA,EAAAA,EAAAziB,UAAAsB,OAAAmhB,IACA4C,EAAA5C,GAAAziB,UAAAyiB,GAEA,OAAA2C,gBAAA/kB,WAAA,EAAA,CAAA,QAAAslB,OAAAN,KAEAQ,KAAA,WAEA,IADA,IAAAR,EAAA,GACA5C,EAAA,EAAAA,EAAAziB,UAAAsB,OAAAmhB,IACA4C,EAAA5C,GAAAziB,UAAAyiB,GAEA,OAAA2C,gBAAA/kB,WAAA,EAAA,CAAA,QAAAslB,OAAAN,KAEAS,QAAA,WAEA,IADA,IAAAT,EAAA,GACA5C,EAAA,EAAAA,EAAAziB,UAAAsB,OAAAmhB,IACA4C,EAAA5C,GAAAziB,UAAAyiB,GAEA,OAAA2C,gBAAA/kB,WAAA,EAAA,CAAA,QAAAslB,OAAAN,KAEAU,SAAA,WAEA,IADA,IAAAV,EAAA,GACA5C,EAAA,EAAAA,EAAAziB,UAAAsB,OAAAmhB,IACA4C,EAAA5C,GAAAziB,UAAAyiB,GAEA,OAAA2C,gBAAA/kB,WAAA,EAAA,CAAA,YAAAslB,OAAAN,OAGA/D,QAAA0E,MAAA,SAAAxP,GACAA,EAAArL,OAAAqL,EAAAuD,QACA9X,OAAAM,OAAAiU,EAAA,CAAAuD,OAAAvD,EAAArL,OAEAlJ,OAAAM,OAAA6e,QAAA5K,IAkBArR,EAAA8gB,KAAAvmB,GAAAumB,KAAA3E,QEhXA5hB,GAAA4M,OAAA,IAAA,WACA,IAAAlH,EAAAxF,KACAwF,EAAA8gB,SAAA,EACA9gB,EAAA+gB,SAAA,EACA/gB,EAAAghB,yBAAA,EACAhhB,EAAAihB,YAAA,GACA,IAAAC,GAAA,EAEAC,EAAA,GAyBA,SAAAC,EAAArgB,GAEAsgB,EACAA,GAAA,GAIAC,GAAA,EACAthB,EAAAuhB,KAAAhnB,OAAA4E,SAAAqiB,WA9BAxhB,EAAAiH,KAAA,SAAA0J,GACA,IAAArW,GAAAS,OAAAkK,aACA,OAAA3K,GAAA,WACA0F,EAAAiH,SAKA,IADA,IAAApL,EAAAkE,EAAA,6BAAA4Q,GACAxU,EAAA,EAAAA,EAAAN,EAAAK,OAAAC,IAIA,GAHAN,EAAAM,GAAAyO,aAAA,kBACAtQ,GAAA0M,WAAA6B,IAAAhN,EAAAM,GAAAyO,aAAA,kBAEA/O,EAAAM,GAAAyO,aAAA,WAAA,CACA,IAAAnD,EAAA5L,EAAAM,GAAAyO,aAAA,WACA6W,EAAAha,GAIAyZ,GAAA,EACAC,EAAA5mB,OAAA4E,SAAAqiB,UAcAxhB,EAAA0hB,OAAA,SAAApC,QACA7kB,IAAA6kB,IAAAA,GAAA,GACAtf,EAAA+gB,UAAAzB,IACAtf,EAAA+gB,QAAAzB,GAEA,IAAAA,GAEAvf,EAAAe,GAAApG,SAAAsJ,KAAA,QAAA,UAAAhE,EAAA2hB,MAGApnB,OAAA4G,iBAAA,WAAAigB,GAAA,KAGArhB,EAAAuB,IAAA5G,SAAAsJ,KAAA,QAAA,UAAAhE,EAAA2hB,MACApnB,OAAAmH,oBAAA,WAAA0f,GAAA,MAIA,IAAAvJ,EAAA,GAEA7X,EAAA6X,OAAA,SAAApQ,EAAA7L,EAAA4B,GACAqa,EAAApQ,KACAoQ,EAAApQ,GAAA,SAEAhN,IAAA+C,GACA,IAAAqa,EAAApQ,GAAAlE,QAAA3H,IACAic,EAAApQ,GAAAxL,KAAAL,GAGAic,EAAApQ,GAAAjK,GAAA5B,GAGA,IAAA+b,EAAA,GAEA3X,EAAA2X,MAAA,SAAAlQ,EAAA7L,EAAA4B,GACAma,EAAAlQ,KACAkQ,EAAAlQ,GAAA,SAEAhN,IAAA+C,GACA,IAAAma,EAAAlQ,GAAAlE,QAAA3H,IACA+b,EAAAlQ,GAAAxL,KAAAL,GAGA+b,EAAAlQ,GAAAjK,GAAA5B,GAIA,IAAA6lB,EAAA,SAAAha,GAIA,IAHA,IAAAzH,EAAAihB,YAAA1d,QAAAkE,IACAzH,EAAAihB,YAAAhlB,KAAAwL,GAEAoQ,EAAApQ,GACA,IAAA,IAAAtL,EAAA,EAAAA,EAAA0b,EAAApQ,GAAAvL,OAAAC,IACA0b,EAAApQ,GAAAtL,GAAA7B,GAAAgM,QAiBAsb,EAAA,CACAd,QAAA,GACAe,OAAA,GACAC,QAAA,GACApb,MAAA,IAEA1G,EAAAc,GAAA,SAAAC,EAAAnF,IACA,IAAAgmB,EAAA7gB,GAAAwC,QAAA3H,IACAgmB,EAAA7gB,GAAA9E,KAAAL,IAGAoE,EAAA+hB,cAAA,GASA/hB,EAAA2hB,KAAA,SAAAzgB,GACA,IAAA,IAAAlB,EAAA+gB,QAAA,CAEA,IAAA3M,EAAAlT,EAAA9D,OACA,GAAAgX,EAAAzO,MAEAqc,QAAAC,YAAA7N,EAAA0D,aAAA,oBAAA,CAIA,IAAA5a,EAAAkX,EAAAzO,KAAA5J,QAAAxB,OAAA4E,SAAAC,OAAA,IACA,IAAA,IAAAlC,EAAAqG,QAAA,MAIA,OADArC,EAAA6a,kBACA/b,EAAAuhB,KAAArkB,MAGA,IAAAglB,GAAA,EACAZ,GAAA,EACAD,GAAA,EACArhB,EAAAuhB,KAAA,SAAArkB,EAAAyO,EAAAgJ,GAEAA,EADAA,EACAA,EAAA4I,cADA,MAGA5R,IAAAA,EAAA,IAEA,IAAA,IAAAxP,EAAA,EAAAA,EAAAylB,EAAA,QAAA1lB,OAAAC,IACA,GAAAylB,EAAA,QAAAzlB,GAAAe,GAAA,OAEA3C,OAAA4E,SAAAqiB,SAsHA,OArHAN,GAAA,EAEAgB,GAAAA,EAAApC,QACAoC,EAAAniB,EAAA8gB,KAAA,CACAtE,IAAAhiB,OAAA4E,SAAAC,OAAAlC,EACAyX,OAAAA,EACAhJ,KAAA9O,OAAAM,OAAAwO,EAAA,CACAwW,UAAA,cAEAhC,QAAA,SAAAxU,GACA,IAAAuV,EAAA,EACA,EAGAgB,GAAA,EAGA,IACAJ,EADA3Y,OAAA,iCAAA,MACAW,KAAA6B,GACA,GAAAmW,GAAA,IAAAA,EAAA5lB,SACA4lB,EAAAA,EAAA,GAAAtgB,MAAA,SAAAmD,KAAA,WAGAvI,cAFA0lB,EAAAjS,KAAArE,MAAAsW,KAGA,IAAA,IAAA3lB,EAAA,EAAAA,EAAAylB,EAAA,QAAA1lB,OAAAC,IACA,GAAAylB,EAAA,QAAAzlB,GAAA2lB,GAAA,OAKA,IAAAM,GAAA,EACAC,EAAA,SAAA5gB,GACA2gB,EAAAriB,EAAAE,QAAAwB,GAGA,IAAA6gB,EAAAviB,EAAAE,QAAA,YAAAmiB,IAjGA,SAAA3a,GAIA,IAHA,IAAAzH,EAAAihB,YAAA1d,QAAAkE,IACAzH,EAAAihB,YAAAtf,OAAA3B,EAAAihB,YAAA1d,QAAAkE,GAAA,GAEAkQ,EAAAlQ,GACA,IAAA,IAAAtL,EAAA,EAAAA,EAAAwb,EAAAlQ,GAAAvL,OAAAC,IACAwb,EAAAlQ,GAAAtL,GAAA7B,GAAAgM,OA4FAic,CAAAD,EAAAA,EAAA1X,aAAA,WAAA,KAGAkX,GAAAA,EAAAU,QACAziB,EAAA,gBAAA6D,UAAAke,EAAAU,OAEAxU,GAAA,GAGAA,GAAA,EACA,IAAA,IAAAyU,KAAAziB,EAAA+hB,cAAA,CACA,IAAA,IAAAZ,EAAA5d,QAAAkf,GACA,IAAA,IAAAC,KAAA1iB,EAAA+hB,cAAAU,GACA,IAAA,IAAAtB,EAAA5d,QAAAkf,GAAA,CACAJ,EAAAriB,EAAA+hB,cAAAU,GAAAC,IACA,MAIA,GAAA1U,EAAA,MAIA,IAAAA,IAEA1T,GAAA4M,OAAA6a,cAAA,aACAM,EAAA/nB,GAAA4M,OAAA6a,cAAA,cAEA/T,GACA,IAAA7R,EAAA,EAAAA,EAAAylB,EAAA,MAAA1lB,OAAAC,IACAylB,EAAA,MAAAzlB,GAAA,4BAAAsmB,EAAA,OAAAC,EAAA,oBAMAN,IAAAA,EAAA1nB,SAAAsJ,MACAhE,EAAAghB,yBACAhhB,EAAAghB,wBAAAvb,IAAA,UAAA,QAGA2c,EAAAxe,UAAA+H,EAGArR,GAAAgM,MAAAW,KAAAmb,GAGA,IAAAvmB,EAAAkE,EAAA,YAAAqiB,GACA,IAAAjmB,EAAA,EAAAA,EAAAN,EAAAK,OAAAC,IACAslB,EAAA5lB,EAAAM,GAAAyO,aAAA,YAGA5K,EAAAghB,yBACAhhB,EAAAghB,wBAAAvb,IAAA,UAAA,IAgCA,SAAA0b,EAAAjkB,EAAAyO,GACA,IAAA,IAAAxP,EAAA,EAAAA,EAAAylB,EAAA,OAAA1lB,OAAAC,IACAylB,EAAA,OAAAzlB,GAAAglB,EAAAjkB,EAAAyO,GAhCAgX,CAAAxB,EAAAjkB,EAAAklB,GAEAlB,GAAA,GACA,EAEAC,EAAAjkB,EACAmkB,GAAA,IAEA3a,MAAA,SAAA2X,EAAA1S,GAEA,GADA0V,GAAA,GACAhD,EAAAuE,QAAA,CAEAV,GAAA,EACA,IAAA,IAAA/lB,EAAA,EAAAA,EAAAylB,EAAA,MAAA1lB,OAAAC,IACAylB,EAAA,MAAAzlB,GAAAkiB,EAAAiB,OAAA3T,GAIApR,OAAAynB,QAAAa,WAIAvB,GACA/mB,OAAAynB,QAAAC,UAAA,KAAA,GAAA/kB,GAEAokB,GAAA,GACA,IC1RAhnB,GAAAK,SAAAiZ,eAAA,IAAA,WACA,IAAA5T,EAAAxF,KACAsoB,GAAA,EACAC,GAAA,EAgbA,SAAAC,EAAAC,EAAAC,EAAA1gB,EAAAnE,GACA,IAAAxC,EAAAsnB,KAAAzQ,MAAA1S,EAAAojB,aAAA,GACA,GAAAH,EAAAjjB,EAAAojB,aASA,OARAF,EAAAxL,SAAA,EACAwL,EAAAxQ,MAAArU,EAAA0S,SAAA,EAAA/Q,EAAAojB,aAAA,QAEA3oB,IAAAyoB,EAAAxQ,MACAwQ,EAAAxQ,MAAAwQ,EAAAxQ,MAAA2Q,UACAH,EAAAxQ,MAAArU,EAAAqT,iBAAA2R,UAAA,SAEAH,EAAAxQ,OAAAwQ,EAAAI,cAGA7oB,IAAA4D,EAAA0S,SAAAlV,EAAA,KACAqnB,EAAAxL,QAAArZ,EAAA0S,SAAAlV,EAAA,GAAAwnB,gBAEA5oB,IAAA+H,EAAAsI,SAAA0G,gBAAAyR,GAAAzgB,EAAAtG,OAAAsG,EAAAsI,SAAA0G,eACA0R,EAAAxQ,MAAAlQ,EAAAsI,SAAAyY,QAAA7Q,MAAA2Q,UAAA,EAAA7gB,EAAAsI,SAAA0Y,cAEAN,EAAAxQ,MAAArU,EAAA0S,SAAA/Q,EAAAojB,aAAA,GAAAC,UAEAhlB,EAAAyZ,aAAA,yBACAoL,EAAAxQ,OAAArU,EAAAuM,aAAA,uBACAsY,EAAAxL,SAAArZ,EAAAuM,aAAA,yBAIAsY,EAAAxL,SAAAwL,EAAAI,QACAJ,EAAAxQ,OAAAwQ,EAAAI,QAoEA,SAAAG,EAAAjmB,EAAAgF,EAAA4gB,EAAA/kB,EAAAqlB,GACA,IAAAC,EAAAnhB,EAAAsI,SACA8Y,EAAA,EAOA,GALApmB,GAAAgF,EAAAtG,OAAAynB,EAAAnS,iBACAoS,GAAAR,EACA5lB,EAAAgF,EAAAtG,OAAAynB,EAAAnS,kBAGAhU,EAAAmmB,EAAA5Y,WAAA,GAAAvN,GAAAgF,EAAAtG,QAAA,CAKA,GAHA6mB,GAAA,EAGA,IAAAY,EAAA5Y,WAAAvN,EAAA4lB,EAAAA,EAAA,GACAO,EAAA5Y,UAAAqY,EAAA,EAAA5lB,GACAmmB,EAAA5Y,UAAAqY,EAAA5lB,EACAkmB,EAAAG,UAAAxlB,EAAA0S,SAAAvT,EAAAmmB,EAAA5Y,UAAA,GAAAsY,cAGA,CAQA,IAPA,IAAAxnB,EAAA,KACA6b,EAAAiM,EAAAJ,QAAA7L,QACAhF,EAAAiR,EAAAJ,QAAA7Q,MACAD,EAAAkR,EAAAlR,QAGAvW,EAAAmC,EAAAoW,kBAAA,EACAtY,EAAA,EAAAA,EAAAD,EAAAC,IACAN,EAAA6b,EAAAE,mBAEA,OAAAnF,EAAAC,OACAiR,EAAAjkB,IAAAiT,sBAAA,YAAA9W,GAEAM,IAAAD,EAAA,IACAuW,EAAAC,MAAA7W,IAEA4W,EAAAC,MAAAC,sBAAA,cAAA9W,GAGA2B,GAAA4lB,EACA5lB,EAAAgF,EAAAtG,OAAAynB,EAAAnS,iBACAhU,GAAA4lB,IAGAQ,EAAAR,EAAA5lB,EACAmmB,EAAA5Y,UAAAvN,EAAA,GAGA,IAAAsmB,EAAAH,EAAAnS,gBAAAhP,EAAAtG,OAAAynB,EAAAnS,eAAAhP,EAAAtG,OAGA,IAAAC,EAAA,EAAAA,EAAA2nB,QAEArpB,KADAoB,EAAA8nB,EAAAjkB,IAAAqR,SAAAvT,IADArB,IAIAuW,EAAAC,sBAAA,cAAA9W,GAEA8nB,EAAA5Y,UAAAvN,EAEAiV,EAAAC,MAAAiR,EAAAjkB,IAAAqR,SAAAvT,IAAA,KACAiV,EAAAiF,QAAAjF,EAAAC,MAAAD,EAAAC,MAAA/H,uBAAA,KAEAnI,EAAAsI,SAAAgI,sBACAtQ,EAAAsI,SAAAgI,qBAAAtV,GAEAwlB,EAAAxlB,EAAAmmB,EAAAT,SAAA1gB,EAAAnE,QAIA5D,KAFAoB,EAAAwC,EAAA0S,SAAAqS,EAAAQ,EAAA,MAGAF,EAAAG,UAAAhoB,EAAAwnB,UAAAK,EAAAL,WAGAN,GAAA,GAGA,SAAAgB,EAAA1lB,GACAA,EAAAgE,MAAA0P,SAAA,SACApP,WAAA,WACAtE,EAAAgE,MAAA0P,SAAA,IACA,IAGA,SAAAiS,EAAA9F,GACA,IAAA+F,EAAA1pB,OAAA2pB,iBAAAhG,GACAiG,EAAAC,SAAAH,EAAA,WAAAG,SAAAH,EAAA,cACA,OAAA/F,EAAAmG,aAAAF,GAAA,EAkCA,SAAA5Q,EAAA+Q,EAAA9hB,EAAA4gB,EAAA/kB,EAAAqlB,EAAAa,EAAAzR,GACA,IAAAmQ,EAAAzgB,EAAAsI,SAAAC,UACAyZ,EAAA,EAGA,GAAAF,EAAA,CACA,IAAAnoB,GAAA,EACAD,EAAAsG,EAAAsI,SAAA0G,eAEA,GACArV,UACAA,EAAAD,GAAAmC,EAAA0S,SAAA5U,GAAAknB,UAAAK,EAAAG,YAEAZ,GAAA9mB,GACA,IAAA8mB,GAAA,GAEAuB,EAAAd,EAAAG,UAAAxlB,EAAA0S,SAAA5U,GAAAknB,UAIA,GAAAiB,GAAAjmB,EAAAoW,kBAAA,EAAAjS,EAAAsI,SAAA0G,eAAA,CACAhP,EAAAsI,SAAAC,UAAAvI,EAAAtG,OACA,IAAAuoB,EAAAxB,EACAqB,IACAG,EAAAxB,GAAAG,EAAAH,EAAAA,EAAAG,GAEAK,EAAAgB,EACAjiB,EACA4gB,EACA/kB,EACAqlB,GAGAA,EAAAG,WAAAW,EAGA1R,GACAA,EAAAmQ,GAEAsB,GACAA,IAEAvB,EAAAC,EAAAzgB,EAAAsI,SAAAoY,SAAA1gB,EAAAnE,GAhrBA2B,EAAAojB,aAAA,EAEApjB,EAAA6T,OAAA,SAAArR,EAAAmO,EAAAtS,GACAykB,KA+tBA,WACA,IAAAzgB,EAAA3H,SAAAgqB,eAAA,aAEAriB,KACAA,EAAA3H,SAAAoI,cAAA,UACAwB,GAAA,YACA5J,SAAAkL,KAAAC,YAAAxD,IAGAA,EAAAsiB,MAAAC,WACA,4LAWAviB,EAAAsiB,MAAAE,SAAA3oB,QAnvBA4oB,GACAhC,GAAA,GAGA,IACAa,EAAAnhB,EAAAsI,SACA6Y,EAAA/R,MAAA,SAAAmT,GACApB,EAAA5Y,UAAA,EAEA4Y,EAAAT,SAAAxL,SAAA,EACAiM,EAAAT,SAAAxQ,MAAA,EAEAiR,EAAAlR,QAAAiF,QAAA,KACAiM,EAAAlR,QAAAC,MAAAiR,EAAAjkB,IAAA+I,kBAEAkb,EAAAT,SAAAI,QAAAK,EAAAJ,QAAA7L,QAAA2L,UACAL,EAAA,EAAAW,EAAAT,SAAA1gB,EAAAnE,IAGAslB,EAAAxQ,aAAA,WACAwQ,EAAAlR,QAAAiF,QAAAiM,EAAAjkB,IAAAqR,SAAA4S,EAAA5Y,UAAA,IAAA,KACA4Y,EAAAlR,QAAAC,MAAAiR,EAAAjkB,IAAAqR,SAAA4S,EAAA5Y,YAAA,MAGA4Y,EAAA7R,aAAA,WACAkR,EAAAW,EAAA5Y,UAAA4Y,EAAAT,SAAA1gB,EAAAnE,IAGAslB,EAAA9f,SAAA,WACA,OAskBA,SAAArB,EAAAnE,GAKA,IAJA,IAAAiR,EAAA,GACAzT,OAAApB,EAEAyB,EAAAsG,EAAAsI,SAAAC,UACA5O,EAAA,EAAAA,EAAAD,QAEAzB,KADAoB,EAAA2G,EAAAsI,SAAApL,IAAAqR,SAAA5U,IADAA,IAGAmT,EAAArT,KAAAJ,GAGAK,EAAAmC,EAAAoW,kBAAA,EACA,IAAA,IAAAtY,EAAA,EAAAA,GAAAD,QAEAzB,KADAoB,EAAAwC,EAAA0S,SAAA5U,IADAA,IAGAmT,EAAArT,KAAAJ,GAIA,IAAAmpB,EAAAxiB,EAAAsI,SAAApL,IAAA+U,kBAAAvY,EAEAA,EAAA8oB,EAAA9oB,EAAAsG,EAAAsI,SAAAC,UACA,IAAA,IAAA5O,EAAA,EAAAA,EAAAD,QAEAzB,KADAoB,EAAA2G,EAAAsI,SAAApL,IAAAqR,SAAAvO,EAAAsI,SAAAC,UAAA5O,IADAA,IAGAmT,EAAArT,KAAAJ,GAGA,OAAAyT,EAlmBA2V,CAAAziB,EAAAnE,IAGAslB,EAAAJ,QAAA,CACA7L,QAAArZ,EAAA6B,cAAA,2BACAwS,MAAArU,EAAA6B,cAAA,0BAGAyjB,EAAAT,SAAA,GACAS,EAAAlR,QAAA,GAEAkR,EAAA/R,QACA+R,EAAAhT,WAAAtS,EACAslB,EAAAH,aAAAG,EAAAJ,QAAA7Q,MAAA2Q,UAAAM,EAAAT,SAAAI,QAEA,IAAAI,EAAArlB,EACAslB,EAAAjb,QAAA,WACA3I,EAAAuB,IAAAoiB,EAAA,UACA3jB,EAAAuB,IAAAjD,EAAA,qBACAslB,EAAAjkB,IAAAkE,UAAA,GAqqBA,SAAAvF,GACA,IAAA,IAAAlC,EAAA+oB,EAAAhpB,OAAA,EAAAC,GAAA,EAAAA,IACA+oB,EAAA/oB,GAAAiE,UAAA/B,GACA6mB,EAAAvjB,OAAAxF,EAAA,GAvqBAgpB,CAAA9mB,UAEAmE,EAAAsI,UAGA6Y,EAAAtQ,cAAA,WACAsQ,EAAAyB,cAAAjC,KAAAzQ,MAAAgR,EAAA2B,aAAA1B,EAAAH,cACAG,EAAAnS,eAAAmS,EAAAyB,cAAA,EAAAplB,EAAAojB,aAEAO,EAAAnS,eAAA,KACAmS,EAAAnS,eAAA,KAGA7O,WAAA,WACA+gB,EAAArlB,EAGA,IADA,IAAAnC,EAAAmC,EAAAuM,aAAA,wBAAA,EACAzO,EAAA,EAAAA,EAAAD,EAAAC,IACAunB,EAAAA,EAAApjB,cAGAqjB,EAAAtQ,gBAEAhV,EAAAoE,UAAAwO,SAAA,qBACA,EAQA,SAAAzO,EAAAmO,EAAAtS,EAAAqlB,GACA,IAAAC,EAAAnhB,EAAAsI,SACA4M,EAAAiM,EAAAJ,QAAA7L,QACAhF,EAAAiR,EAAAJ,QAAA7Q,MACAD,EAAAkR,EAAAlR,QACAA,EAAAC,MAAAiR,EAAAjkB,IAAA+I,kBAEAkb,EAAAF,SAAA,SAAAjmB,GACAimB,EAAAjmB,EAAAgF,EAAAxC,EAAAojB,aAAA/kB,EAAAqlB,GAGA4B,EAAA,EACAC,EAAA,EACA7N,EAAArV,MAAAsP,OAAA2T,EAAA,KACA5S,EAAArQ,MAAAsP,OAAA4T,EAAA,MAGA5B,EAAApQ,QAAA,SAAA+Q,GACA/Q,EAAA+Q,EAAA9hB,EAAAxC,EAAAojB,aAAA/kB,EAAAqlB,GACA8B,KAIAA,IAEA7B,EAAAyB,cAAA/mB,EAAAoW,kBAAA,EACAkP,EAAAnS,eAAAmS,EAAAyB,cAAA,EAAAplB,EAAAojB,aAEA,IAAA,IAAAjnB,EAAA,EAAAA,EAAA6D,EAAAojB,aAAAjnB,IAAA,CACA,IAAAN,EAAA4W,EAAAC,MACA,GAAA,OAAA7W,EAAA,MAEA4W,EAAAC,MAAA7W,EAAA+b,mBACAlF,EAAAC,sBAAA,cAAA9W,GAEA8nB,EAAA5Y,UAAA,EAEA,IAAAua,EAAA,EACAC,EAAA,EAqDA,SAAAC,IAGA,IADA,IAAAtpB,EAAAynB,EAAAnS,gBAAAnT,EAAAoW,kBAAA,GACAtY,EAAA,EAAAA,EAAAD,GAMA,QAJAL,EADA,OAAA4W,EAAAiF,QACAiM,EAAAjkB,IAAA+I,kBAEAgK,EAAAiF,QAAAE,oBAJAzb,IAOAsW,EAAAC,MAAA7W,EAAA+b,mBAEAlF,EAAAC,sBAAA,cAAA9W,GAmDA,IAAAqnB,EAAAS,EAAAT,SAGA,GAFAF,EAAA,EAAAE,EAAA1gB,EAAAnE,QAEA5D,IAAAkpB,EAAAjQ,UAAA,CACA,IAAAA,EAAAiQ,EAAAjQ,iBACAiQ,EAAAjQ,UAGA,IAAA+R,GAAA,EAqCA1lB,EAAAe,GAAA4iB,EAAA,SApCA,WACA,GAAA+B,GAAA1C,EAAA,OACA0C,GAAA,EAEA/B,EAAAG,UAAAX,EAAAxL,UAhIA,WAKA,IAJA,IAAA7b,EAAA,KACA6pB,GAAA,EAGAvpB,EAAA,EAAAA,EAAA6D,EAAAojB,cAMA,QAJAvnB,EADA,OAAA4W,EAAAC,MACAiR,EAAAjkB,IAAAgS,iBAEAe,EAAAC,MAAA/H,wBAJAxO,IAOAsW,EAAAiF,QAAA7b,EAAA8O,uBACAgZ,EAAA5Y,YAEA2M,EAAA/E,sBAAA,WAAA9W,GAEAypB,EAAA,IACAA,GAAAtB,EAAAnoB,IAEA8nB,EAAA5Y,UAAA/K,EAAAojB,eAAAsC,IACAvpB,EAAA,EACAupB,GAAA,EACA7pB,EAAA,OAIAypB,EAAA,GAAA,OAAAzpB,KACAypB,EAAA,GAIA,IAFA,IAAAppB,EAAAmC,EAAAoW,kBAAA,EAAAjS,EAAAsI,SAAA0G,eAEArV,EAAA,EAAAA,EAAAD,EAAAC,IACAN,EAAA6W,EAAA/H,uBACA4a,GAAAvB,EAAAnoB,GAEA,OAAA4W,EAAAC,MACAiR,EAAAjkB,IAAAiT,sBAAA,YAAA9W,GACA4W,EAAAC,MAAAC,sBAAA,cAAA9W,GAEA4W,EAAAC,MAAA7W,EAGA,OAAA4W,EAAAC,MACAD,EAAAiF,QAAAiM,EAAAjkB,IAAAgS,iBAEAe,EAAAiF,QAAAjF,EAAAC,MAAA/H,uBAEA+M,EAAArV,MAAAsP,OAAA2T,EAAA,KACA5S,EAAArQ,MAAAsP,OAAA4T,EAAA,KAiFAI,GACA3C,EAAAW,EAAA5Y,UAAAmY,EAAA1gB,EAAAnE,IAIAqlB,EAAAG,UAAAX,EAAAxQ,SAnEA,WACA,IAAA7W,EAAA,KAGA,GAFA2pB,IAEA,OAAA/S,EAAAC,MAAA,CACA,OAAAD,EAAAiF,UACAjF,EAAAiF,QAAAjF,EAAAC,MAAA/H,wBAGA,IAAA,IAAAxO,EAAA,EAAAA,EAAA6D,EAAAojB,cAEA,QADAvnB,EAAA4W,EAAAC,OADAvW,IAIAsW,EAAAC,MAAA7W,EAAA+b,mBACAlF,EAAAC,sBAAA,cAAA9W,GAEA0pB,EAAA,IACAA,GAAAvB,EAAAnoB,KAIA0pB,EAAA,GAAA,OAAA1pB,KACA0pB,EAAA,GAIA,IADA,IAAArpB,EAAAmC,EAAAoW,kBAAA,EAAAjS,EAAAsI,SAAA0G,eACArV,EAAA,EAAAA,EAAAD,EAAAC,IACAN,EAAA6b,EAAAE,mBACA0N,GAAAtB,EAAAnoB,GACA8nB,EAAA5Y,YAEA,OAAA0H,EAAAiF,QACAiM,EAAAjkB,IAAAiT,sBAAA,aAAA9W,GACA4W,EAAAiF,QAAA/E,sBAAA,WAAA9W,GAEA4W,EAAAiF,QAAA7b,EAGA,OAAA4W,EAAAiF,QACAjF,EAAAC,MAAAiR,EAAAjkB,IAAA+I,kBAEAgK,EAAAC,MAAAD,EAAAiF,QAAAE,mBAEAF,EAAArV,MAAAsP,OAAA2T,EAAA,KACA5S,EAAArQ,MAAAsP,OAAA4T,EAAA,KAyBAK,GACA5C,EAAAW,EAAA5Y,UAAAmY,EAAA1gB,EAAAnE,SAIA5D,IAAAkpB,EAAA1kB,UAAA,IAAAuD,EAAAtG,OACAynB,EAAA1kB,SAAA4mB,UAAA,OAAAlC,EAAAlR,QAAAC,OACAgR,EAAAG,UAAAH,EAAA2B,eAAA3B,EAAAF,aAEAG,EAAA1kB,SAAA4mB,SAAAlC,EAAA5Y,WAEA4Y,EAAA1kB,SAAA6mB,YAAA,OAAAnC,EAAAlR,QAAAiF,SAAA,IAAAgM,EAAAG,WACAF,EAAA1kB,SAAA6mB,WAAAnC,EAAA5Y,WAGA2I,GAAAA,EAAAjS,IAAAiS,EAAAC,OACAgQ,EAAA1kB,SAAAyU,EAAAjS,IAAAiS,EAAAC,KACAD,EAAA,MAGA+R,GAAA,IA4ZA,SAAApnB,EAAAY,IACA,IAAA8mB,IACAA,EAAAnf,YAAA,WAEA,IADA,IAAA/K,EAAA,KACAM,EAAA+oB,EAAAhpB,OAAA,EAAAC,GAAA,EAAAA,KACAN,EAAAqpB,EAAA/oB,IAGAiE,QAAAojB,eAAA3nB,EAAA8V,QACA9V,EAAAuE,QAAA4lB,cAAAnqB,EAAAoqB,QAIA,OAAApqB,EAAAuE,QAAAE,cAKAzE,EAAAoD,WAJAimB,EAAAvjB,OAAAxF,EAAA,IAOA,IAAA+oB,EAAAhpB,SACA4K,cAAAif,GACAA,GAAA,IAEA,MAGAb,EAAAjpB,KAAA,CACAmE,QAAA/B,EACAY,SAAAA,EACA0S,OAAAtT,EAAAmlB,aACAyC,MAAA5nB,EAAA2nB,cAxbAE,CAAA7nB,EAAA,WACA2kB,EAAAW,EAAA5Y,UAAAmY,EAAA1gB,EAAAnE,KAhNA8nB,CAAA3jB,EAAAmO,EAAAtS,EAAAqlB,IAqNA,SAAAlhB,EAAAmO,EAAAtS,EAAAqlB,GAOA,IANA,IAAAC,EAAAnhB,EAAAsI,SACA4M,EAAAiM,EAAAJ,QAAA7L,QACAhF,EAAAiR,EAAAJ,QAAA7Q,MAGAoR,EAAAH,EAAAnS,gBAAAhP,EAAAtG,OAAAynB,EAAAnS,eAAAhP,EAAAtG,OACAC,EAAA,EAAAA,EAAA2nB,GACA,OAAAH,EAAAjkB,IAAA+I,kBADAtM,IAIAuW,EAAAC,sBAAA,cAAAgR,EAAAjkB,IAAA+I,mBAKA,SAAAqK,EAAAmQ,GACA,GAAAA,GAAAjjB,EAAAojB,aACA1L,EAAArV,MAAAsP,QAAAsR,EAAAjjB,EAAAojB,cAAAO,EAAAH,aAAA,KACA9Q,EAAArQ,MAAAsP,QAAAnP,EAAAtG,OAAAynB,EAAAnS,eAAAyR,GAAAU,EAAAH,aAAA,SAEA,CACA9L,EAAArV,MAAAsP,OAAAsR,EAAAU,EAAAH,aAAA,KACA,IAAAlS,EAAA9O,EAAAtG,OAAAynB,EAAAnS,eACAkB,EAAArQ,MAAAsP,QAAAL,GAAA,GAAAqS,EAAAH,aAAA,MAVAG,EAAA7Q,qBAAAA,EAcA,IAAAoQ,EAAAS,EAAAT,SAoBA,GAlBApQ,EAAA,GACAkQ,EAAAhjB,EAAAojB,aAAAF,EAAA1gB,EAAAnE,GACA6kB,EAAAxL,SAAA,EAEAiM,EAAAyC,SAAA,SAAA5oB,GACA,OAAAA,EAAAmmB,EAAAH,aAAA9L,EAAA2L,WAGAM,EAAAlR,QACAC,MAAAiR,EAAAjkB,IAAA+I,kBACAkb,EAAAF,SAAA,SAAAjmB,GACAimB,EAAAjmB,EAAAgF,EAAAxC,EAAAojB,aAAA/kB,EAAAqlB,IAGAC,EAAApQ,QAAA,SAAA+Q,GACA/Q,EAAA+Q,EAAA9hB,EAAAxC,EAAAojB,aAAA/kB,EAAAqlB,EAAAa,EAAAzR,SAGArY,IAAAkpB,EAAAjQ,UAAA,CACA,IAAAA,EAAAiQ,EAAAjQ,iBACAiQ,EAAAjQ,UAGA,IAAA+R,GAAA,EACAY,GAAA,EACAC,GAAA,EACA,SAAA/B,IACA,GAAAkB,GAAA1C,GAAAW,EAAAG,WAAAX,EAAAxL,SAAAgM,EAAAG,WAAAX,EAAAxQ,MAEA4T,IACA,IAAA5C,EAAAG,WAAAH,EAAAG,YAAAH,EAAAF,aAAAE,EAAA2B,eACAtB,EAAAL,GACA4C,GAAA,QALA,CAWA,IAAArD,EAAAE,KAAAzQ,MAAAgR,EAAAG,UAAAF,EAAAH,cACAP,EAAAU,EAAAnS,eAAAhP,EAAAtG,SACA+mB,EAAAzgB,EAAAtG,OAAAynB,EAAAnS,gBAEA6U,IACApD,EAAA,EAAAjjB,EAAAojB,eACAH,GAAAjjB,EAAAojB,cAGAkD,IACAvC,EAAAL,GACA4C,GAAA,GAEAD,GAAA,GAGApD,EAAAjjB,EAAAojB,eACAH,EAAA,EACAoD,GAAA,GAGAZ,GAAA,EAEA,IAAA9X,EAAAsV,EAAAU,EAAA5Y,UACAkY,EAAAtV,GAAAnL,EAAAtG,SACAyR,EAAAsV,EAAAtV,EAAAnL,EAAAtG,QAEA,IAAAyR,GAMAgW,EAAA5Y,UAAAkY,EAoEA,SAAAtV,EAAAnL,GACA,IAAAwP,EAAAxP,EAAAsI,SAAApL,IACA+S,EAAAjQ,EAAAsI,SAAA2H,QACA8Q,EAAA/gB,EAAAsI,SAAAyY,QAEA,GAAA5V,EAAA,EAAA,CAIA,IAHA,IAAAlM,EAAA,EAGAtF,EAAA,EAAAA,EAAAwR,GAKA,QAHAlM,EADA,OAAAgR,EAAAiF,QACA1F,EAAAvJ,kBAEAgK,EAAAiF,QAAAE,oBAJAzb,IAMAonB,EAAA7Q,MAAAC,sBAAA,cAAAlR,GAIA,IAAA,IAAAtF,EAAAwR,EAAAxR,EAAA,EAAAA,IACA,OAAAsW,EAAAiF,SACAjF,EAAAiF,QAAA6L,EAAA7L,QAAAE,mBACA5F,EAAAW,sBAAA,aAAAF,EAAAiF,WAGAjW,EAAA8hB,EAAA7L,QAAAE,mBACAnF,EAAAiF,QAAA/E,sBAAA,WAAAlR,GACAgR,EAAAiF,QAAAjW,GAIAgR,EAAAC,MAAAD,EAAAiF,QAAAE,wBAEA,GAAAjK,EAAA,EAAA,CACA,IAAAlM,EAAA,EACAkM,GAAAA,EAGA,IAAA,IAAAxR,EAAA,EAAAA,EAAAwR,GAKA,QAHAlM,EADA,OAAAgR,EAAAC,MACAV,EAAAN,iBAEAe,EAAAC,MAAA/H,wBAJAxO,IAMAonB,EAAA7L,QAAA/E,sBAAA,WAAAlR,GAIA,IAAA,IAAAtF,EAAA,EAAAA,EAAAwR,EAAAxR,IACA,OAAAsW,EAAAC,OACAD,EAAAC,MAAA6Q,EAAA7Q,MAAA/H,uBACAqH,EAAAW,sBAAA,YAAAF,EAAAC,SAIAjR,EAAA8hB,EAAA7Q,MAAA/H,uBACA8H,EAAAC,MAAAC,sBAAA,cAAAlR,GACAgR,EAAAC,MAAAjR,GAIAgR,EAAAiF,QAAAjF,EAAAC,MAAA/H,wBA9HA4b,CAAA5Y,EAAAnL,GACAsQ,EAAAmQ,GACAD,EAAAC,EAAAC,EAAA1gB,EAAAnE,QAGA5D,IAAAkpB,EAAA1kB,UAAA,IAAAuD,EAAAtG,OACAynB,EAAA1kB,SAAA4mB,UAAA,OAAAlC,EAAAlR,QAAAC,MACAiR,EAAA1kB,SAAA4mB,SAAA5C,GAEAU,EAAA1kB,SAAA6mB,YAAA,OAAAnC,EAAAlR,QAAAiF,SACAiM,EAAA1kB,SAAA6mB,WAAA7C,GAGAvP,GAAAA,EAAAjS,IAAAiS,EAAAC,OACAgQ,EAAA1kB,SAAAyU,EAAAjS,IAAAiS,EAAAC,KACAD,EAAA,MAGA+R,GAAA,GAzBAA,GAAA,GA4BA1lB,EAAAe,GAAA4iB,EAAA,SAAAa,GAGAb,IAAArlB,IAAA,IAAAmoB,UAAAC,UAAAljB,QAAA,WACAxD,EAAAe,GAAAzC,EAAA,YAAA,WACAioB,GAAA,IAEAvmB,EAAAe,GAAAzC,EAAA,UAAA,WACAioB,GAAA,KAxVAI,CAAAlkB,EAAAmO,EAAAtS,EAAAqlB,IACA,MAkmBA,IAAAwB,EAAA,GACAa,GAAA,GF1rBAzrB","file":"scarletsframe.min.js","sourcesContent":["(function(global, factory){\r\n  if(typeof exports === 'object' && typeof module !== 'undefined') module.exports = factory(global);\r\n  else global.sf = factory(global);\r\n}(typeof window !== \"undefined\" ? window : this, (function(window){'use strict';\r\nif(typeof document === undefined)\r\n\tdocument = window.document;\r\n// ===== Module Init =====\r\nvar internal = {};\r\n\r\nvar sf = function(){\r\n\tif(arguments[0].constructor === Function){\r\n\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\t}\r\n};\r\n\r\nsf.internal = {};\r\nsf.regex = {\r\n\tgetQuotes:/(['\"])[\\s\\S]*?[^\\\\]\\1/g,\r\n\tvalidFunctionCall:/[a-zA-Z0-9 \\]\\$\\)]/,\r\n\tstrictVar:'(?=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )',\r\n\tescapeHTML:/(?!&#.*?;)[\\u00A0-\\u9999<>\\&]/gm,\r\n\r\n\tuniqueDataParser:/{{((@|#[\\w])[\\s\\S]*?)}}/g,\r\n\tdataParser:/{{([^@%][\\s\\S]*?)}}/g,\r\n};\r\n\r\nvar allowedFunctionEval = [':', 'for', 'if', 'while', '_content_.take', 'console.log'];\r\n\r\nfunction avoidQuotes(str, func){\r\n\tvar temp = [];\r\n\tvar es = '<%$@>';\r\n\tstr = str.replace(sf.regex.getQuotes, function(full){\r\n\t\ttemp.push(full);\r\n\t\treturn es+(temp.length-1)+es;\r\n\t});\r\n\tstr = func(str);\r\n\tfor (var i = 0; i < temp.length; i++) {\r\n\t\tstr = str.replace(es+i+es, temp[i]);\r\n\t}\r\n\treturn str;\r\n}\r\n\r\nfunction isEmptyObject(obj){\r\n\tfor(var key in obj){\r\n\t\treturn false;\r\n\t}\r\n\treturn true\r\n}\r\n\r\nfunction compareObject(obj1, obj2){\r\n\tif(!obj1 || !obj2)\r\n\t\treturn false;\r\n\r\n\tfor(var i in obj1){\r\n\t\tif(typeof obj1[i] !== 'object' && obj1[i] !== obj2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction hiddenProperty(obj, property, value){\r\n\tObject.defineProperty(obj, property, {\r\n\t\tenumerable: false,\r\n\t\tconfigurable: true,\r\n\t\tvalue: value\r\n\t});\r\n}\r\n\r\nfunction deepProperty(obj, path){\r\n  for(var i = 0; i < path.length; i++){\r\n    obj = obj[path[i]];\r\n    if(obj === undefined) return obj;\r\n  }\r\n  return obj;\r\n}","// ==== ES5 Polyfill ====\r\nif(typeof Object.assign != 'function'){\r\n  Object.defineProperty(Object, \"assign\", {\r\n    value: function assign(target, varArgs) {\r\n      'use strict';\r\n      if (target == null)\r\n        throw new TypeError('Cannot convert undefined or null to object');\r\n      var to = Object(target);\r\n      for (var index = 1; index < arguments.length; index++) {\r\n        var nextSource = arguments[index];\r\n        if (nextSource != null) {\r\n          for (var nextKey in nextSource) {\r\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey))\r\n              to[nextKey] = nextSource[nextKey];\r\n          }\r\n        }\r\n      }\r\n      return to;\r\n    },\r\n    writable: true,\r\n    configurable: true\r\n  });\r\n}\r\n\r\nif(Element.prototype.remove === undefined || CharacterData.prototype.remove === undefined || DocumentType.prototype.remove === undefined){\r\n  (function (arr) {\r\n    arr.forEach(function (item) {\r\n      if (item.hasOwnProperty('remove')) {\r\n        return;\r\n      }\r\n      Object.defineProperty(item, 'remove', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n        value: function remove() {\r\n          if (this.parentNode !== null)\r\n            this.parentNode.removeChild(this);\r\n        }\r\n      });\r\n    });\r\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\r\n}\r\n\r\nif(!Element.prototype.matches){\r\n  Element.prototype.matches = (Element.prototype).matchesSelector ||\r\n    (Element.prototype).mozMatchesSelector || (Element.prototype).msMatchesSelector ||\r\n    (Element.prototype).oMatchesSelector || (Element.prototype).webkitMatchesSelector ||\r\n    function (s) {\r\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n      i = matches.length;\r\n      while (--i >= 0 && matches.item(i) !== this){}\r\n      return i > -1;\r\n    };\r\n}\r\n\r\nif(!NodeList.prototype.forEach){\r\n    NodeList.prototype.forEach = function (callback, thisArg) {\r\n        thisArg = thisArg || window;\r\n        for (var i = 0; i < this.length; i++) {\r\n            callback.call(thisArg, this[i], i, this);\r\n        }\r\n    };\r\n}\r\n\r\nif(!window.location.origin)\r\n  window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');\r\n\r\nif(!Object.values)\r\n  Object.values = function(obj){\r\n    var res = [];\r\n    for (var i in obj) {\r\n        if (obj.hasOwnProperty(i)) {\r\n            res.push(obj[i]);\r\n        }\r\n    }\r\n    return res;\r\n  }","sf.dom = function(selector, context){\r\n\tif(selector[0] === '<') return sf.dom.parseElement(selector);\r\n\tif(selector.constructor !== String) return selector;\r\n\r\n\tif(context) return context.querySelectorAll(selector);\r\n\treturn document.querySelectorAll(selector);\r\n}\r\n\r\nvar $ = sf.dom; // Shortcut\r\n\r\n;(function(){\r\n\tvar self = sf.dom;\r\n\r\n\tself.findOne = function(selector, context){\r\n\t\tif(context !== undefined) return context.querySelector(selector);\r\n\t\treturn document.querySelector(selector);\r\n\t}\r\n\r\n\tself.parent = function(element, selector){\r\n\t\tif(element.closest) return element.closest(selector);\r\n\r\n\t\tdo {\r\n\t\t\tif(element.matches(selector) === true)\r\n\t\t\t\treturn element;\r\n\r\n\t\t\telement = element.parentElement;\r\n\t\t} while (element !== null);\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tself.prevAll = function(element, selector, isNext){\r\n\t\tvar result = [];\r\n\t\tvar findNodes = selector === null || selector.constructor !== String ? true : false;\r\n\r\n\t\t// Skip current element\r\n\t\telement = isNext ? element.nextSibling : element.previousSibling;\r\n\t\twhile (element !== null) {\r\n\t\t\tif(findNodes === false && element.matches(selector) === true)\r\n\t\t\t\tresult.push(element);\r\n\t\t\telse{\r\n\t\t\t\tif(element === selector)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tresult.push(element);\r\n\t\t\t}\r\n\r\n\t\t\tif(isNext)\r\n\t\t\t\telement = element.nextSibling;\r\n\t\t\telse\r\n\t\t\t\telement = element.previousSibling;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.nextAll = function(element, selector){\r\n\t\treturn self.prevAll(element, selector, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen to an event\r\n\t * @param  Node \t\t\telement \tparent element\r\n\t * @param  string \t\t\tevent   \tevent name\r\n\t * @param  function|string  selector    callback function or selector\r\n\t * @param  function\t\t\tcallback    callback function\r\n\t * @param  boolean\t\t\tonce    \tcall once\r\n\t * @return null\r\n\t */\r\n\tself.on = function(element, event, selector, callback, once){\r\n\t\tif(typeof element === 'string'){\r\n\t\t\telement = document;\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = event;\r\n\t\t\tevent = element;\r\n\t\t}\r\n\r\n\t\tif(typeof selector === 'function'){\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = null;\r\n\t\t}\r\n\r\n\t\tif(selector){\r\n\t\t\tvar tempCallback = callback;\r\n\t\t\tcallback = function(ev){\r\n\t\t\t\tif(self.parent(ev.target, selector) !== null)\r\n\t\t\t\t\ttempCallback(ev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcallback.selector = selector;\r\n\t\tcallback.once = once;\r\n\t\telement.addEventListener(event, callback, {capture:true, once:once === true});\r\n\r\n\t\t// Save event listener\r\n\t\tif(element.sf$eventListener === undefined)\r\n\t\t\telement.sf$eventListener = {};\r\n\r\n\t\tif(element.sf$eventListener[event] === undefined)\r\n\t\t\telement.sf$eventListener[event] = [];\r\n\r\n\t\telement.sf$eventListener[event].push(callback);\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.once = function(element, event, selector, callback){\r\n\t\tself.on(element, event, selector, callback, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event listener\r\n\t * @param  Node \telement \tparent element\r\n\t * @param  string \tevent   \tevent name\r\n\t * @param  string  \tselector    selector\r\n\t * @return null\r\n\t */\r\n\tself.off = function(element, event, selector){\r\n\t\t// Remove all event\r\n\t\tif(event === undefined){\r\n\t\t\tif(element.sf$eventListener === undefined)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar events = element.sf$eventListener[event];\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar events = event.split(' ');\r\n\t\tif(events.length !== 1){\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove listener\r\n\t\tif(element.sf$eventListener === undefined)\r\n\t\t\treturn;\r\n\r\n\t\tvar ref = element.sf$eventListener;\r\n\t\tif(ref !== undefined && ref[event] !== undefined){\r\n\t\t\tfor (var i = ref[event].length - 1; i >= 0; i--) {\r\n\t\t\t\tif(selector && ref[event][i].selector !== selector)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\telement.removeEventListener(event, ref[event].splice(i, 1), true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.animateCSS = function(element, animationName, callback, duration) {\r\n\t\tvar animationEnd = {\r\n\t\t\tanimation: 'animationend',\r\n\t\t\tOAnimation: 'oAnimationEnd',\r\n\t\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t\t};\r\n\r\n\t\tfor (var t in animationEnd){\r\n\t\t\tif(element.style[t] !== undefined){\r\n\t\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(duration){\r\n\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t}\r\n\r\n\t\tvar list = ('animated ' + animationName).split(' ');\r\n\t\telement.classList.add.apply(element.classList, list);\r\n\t\t$.once(element, animationEnd, function(){\r\n\t\t\telement.classList.remove.apply(element.classList, list);\r\n\t\t\t\r\n\t\t\tif(duration) setTimeout(function(){\r\n\t\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t\t}, 1);\r\n\r\n\t\t\tif(typeof callback === 'function') callback();\r\n\t\t});\r\n\t}\r\n\r\n\tvar emptyDOM = {\r\n\t\tdiv:document.createElement('div'),\r\n\t\tul:document.createElement('ul'),\r\n\t\ttbody:document.createElement('tbody'),\r\n\t\ttr:document.createElement('tr'),\r\n\t\ttable:document.createElement('table'),\r\n\t\tselect:document.createElement('select'),\r\n\t};\r\n\tself.parseElement = function(html, returnNode){\r\n\t\tvar result = [];\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\r\n        if(html.indexOf('<li') === 0) tempDOM = emptyDOM.ul;\r\n        if(html.indexOf('<tr') === 0) tempDOM = emptyDOM.tbody;\r\n        if(html.indexOf('<td') === 0 || html.indexOf('<th') === 0) tempDOM = emptyDOM.tr;\r\n        if(html.indexOf('<tbody') === 0) tempDOM = emptyDOM.table;\r\n        if(html.indexOf('<option') === 0) tempDOM = emptyDOM.select;\r\n\r\n\t\ttempDOM.textContent = '';\r\n\t\ttempDOM.insertAdjacentHTML('afterBegin', html);\r\n\r\n\t\tvar ref = tempDOM[returnNode ? 'childNodes' : 'children'];\r\n\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\tresult.push(ref.item(i));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tself.escapeText = function(text){\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\t\ttempDOM.textContent = text;\r\n\t\treturn tempDOM.innerHTML;\r\n\t}\r\n\r\n\tself.remove = function(elements){\r\n\t\tif(elements.remove !== undefined)\r\n\t\t\treturn elements.remove();\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\telements[i].remove();\r\n\t\t}\r\n\t}\r\n\r\n\tvar documentElement = null;\r\n\tsetTimeout(function(){\r\n\t\tsf.loader.domReady(function(){\r\n\t\t\tdocumentElement = document.body.parentElement;\r\n\t\t});\r\n\t}, 1);\r\n\r\n\tvar haveSymbol = /[~`!@#$%^&*()+={}|[\\]\\\\:\";'<>?,./ ]/;\r\n\tself.getSelector = function(element, childIndexes, untilElement){\r\n\t\tvar names = [];\r\n\t\tif(untilElement === undefined) untilElement = documentElement;\r\n\r\n\t\tvar previousSibling = childIndexes ? 'previousSibling' : 'previousElementSibling';\r\n\r\n\t\twhile(element.parentNode !== null){\r\n\t\t\tif(element.id && !haveSymbol.test(element.id)){\r\n\t\t\t\tnames.unshift('#'+element.id);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(element === untilElement){\r\n\t\t\t\t\tif(childIndexes === undefined)\r\n\t\t\t\t\t\tnames.unshift(element.tagName);\r\n\t\t\t\t\telse names.unshift(0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar e = element;\r\n\t\t\t\t\tvar i = childIndexes ? 0 : 1;\r\n\r\n\t\t\t\t\twhile(e[previousSibling]){\r\n\t\t\t\t\t\te = e[previousSibling];\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(childIndexes)\r\n\t\t\t\t\t\tnames.unshift(i);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tnames.unshift(\":nth-child(\"+i+\")\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t\tif(element === null)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndexes)\r\n\t\t\treturn names;\r\n\t\treturn names.join(\" > \");\r\n\t}\r\n\r\n\tself.childIndexes = function(array, context){\r\n\t\tvar element = context || documentElement;\r\n\t\tvar i = 1;\r\n\r\n\t\tif(array[0].constructor === String && element.id !== array[0].substr(1))\r\n\t\t\telement = element.querySelector(array[0]);\r\n\r\n\t\telse if(array.length === 1)\r\n\t\t\treturn element;\r\n\r\n\t\tfor (i = i; i < array.length; i++) {\r\n\t\t\telement = element.childNodes.item(array[i]);\r\n\r\n\t\t\tif(element === null)\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n})();","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 0;\r\n\tself.DOMWasLoaded = false;\r\n\tself.DOMReady = false;\r\n\tself.turnedOff = true;\r\n\r\n\tvar whenDOMReady = [];\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\tself.off = function(){\r\n\t\tself.turnedOff = true;\r\n\t}\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.domReady = function(func){\r\n\t\tif(self.DOMReady) return func();\r\n\t\tif(whenDOMReady.indexOf(func) !== -1) return;\r\n\t\twhenDOMReady.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('link');\r\n\t        s.rel = 'stylesheet';\r\n\t        s.href = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tself.js = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('script');\r\n\t        s.type = \"text/javascript\";\r\n\t        s.async = true;\r\n\t        s.src = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(function(){\r\n\t\tif(self.totalContent === 0 && !self.turnedOff){\r\n\t\t\tself.loadedContent = self.totalContent = 1;\r\n\t\t\tconsole.warn(\"If you don't use content loader feature, please turn it off with `sf.loader.off()`\");\r\n\t\t}\r\n\t}, 10000);\r\n\r\n\r\n\tvar isQueued = false;\r\n\tvar lastState = '';\r\n\tdocument.addEventListener(\"load\", function domLoadEvent(event){\r\n\t\t// Add processing class to queued element\r\n\t\tif(isQueued === false && document.body){\r\n\t\t\tdocument.removeEventListener('load', domLoadEvent, true);\r\n\r\n\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tfor (var i = 0; i < isQueued.length; i++) {\r\n\t\t\t\tisQueued[i].classList.add('sf-dom-queued');\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued.length === 0) isQueued = false;\r\n\r\n\t\t\tif(lastState === 'loading'){\r\n\t\t\t\tvar repeatedList = $('[sf-repeat-this]', document.body);\r\n\t\t\t\tfor (var i = 0; i < repeatedList.length; i++) {\r\n\t\t\t\t\trepeatedList[i].classList.add('sf-dom-queued');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Find images\r\n\t\t\t\tvar temp = $('img:not(onload)[src]');\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tsf.loader.totalContent++;\r\n\t\t\t\t\ttemp[i].addEventListener('load', sf.loader.f, {once:true});\r\n\t\t\t\t\ttemp[i].addEventListener('error', sf.loader.f, {once:true});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, true);\r\n\r\n\tdocument.addEventListener('readystatechange', function domStateEvent(){\r\n\t\tif(document.readyState === 'interactive' || document.readyState === 'complete'){\r\n\t\t\tif(self.DOMReady === false){\r\n\t\t\t\tself.DOMReady = true;\r\n\t\t\t\tfor (var i = 0; i < whenDOMReady.length; i++) {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\twhenDOMReady[i]();\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued === false)\r\n\t\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tresourceWaitTimer = setInterval(waitResources, 100);\r\n\t\t\tdocument.removeEventListener('readystatechange', domStateEvent, true);\r\n\t\t}\r\n\t}, true);\r\n\r\n\tvar resourceWaitTimer = -1;\r\n\tfunction waitResources(){\r\n\t\tif(self.turnedOff === false && self.loadedContent < self.totalContent)\r\n\t\t\treturn;\r\n\r\n\t\tclearInterval(resourceWaitTimer);\r\n\r\n\t\tvar listener = sf.dom('script, link, img');\r\n\t\tfor (var i = 0; i < listener.length; i++) {\r\n\t\t\tlistener[i].removeEventListener('error', sf.loader.f);\r\n\t\t\tlistener[i].removeEventListener('load', sf.loader.f);\r\n\t\t}\r\n\r\n\t\tself.DOMWasLoaded = true;\r\n\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\ttry{\r\n\t\t\t\twhenDOMLoaded[i]();\r\n\t\t\t} catch(e){\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\twhenProgress.splice(0);\r\n\t\twhenDOMReady.splice(0);\r\n\t\twhenDOMLoaded.splice(0);\r\n\t\twhenDOMReady = whenDOMLoaded = null;\r\n\r\n\t\t// Last init\r\n\t\tsf.controller.init();\r\n\t\tsf.model.init(document.body, isQueued);\r\n\t\tsf.router.init();\r\n\r\n\t\tisQueued = null;\r\n\t}\r\n}\r\nsf.prototype.constructor = sf.loader.onFinish;","sf.component = new function(){\r\n\tvar self = this;\r\n\tvar scope = internal.component = {};\r\n\tself.registered = {};\r\n\tself.available = {};\r\n\r\n\tvar bases = {};\r\n\tvar events = {};\r\n\r\n\tself.for = function(name, func, extend){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(self.registered[name] === undefined)\r\n\t\t\tself.registered[name] = [func, sf.controller.pending[name], 0, false, extend];\r\n\t\tself.registered[name][0] = func;\r\n\t\tdelete sf.controller.pending[name];\r\n\t}\r\n\r\n\tself.event = function(name, func){\r\n\t\tevents[name] = func;\r\n\t}\r\n\r\n\tself.base = function(name, func){\r\n\t\tbases[name] = func;\r\n\t}\r\n\r\n\tself.html = function(name, outerHTML){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.html(name, outerHTML);\r\n\t\t\t});\r\n\r\n\t\tif(self.registered[name] === undefined)\r\n\t\t\tself.registered[name] = [false, false, 0, false];\r\n\t\tself.registered[name][3] = $.parseElement(outerHTML)[0];\r\n\t}\r\n\r\n\tscope.triggerEvent = function(name, event, obj){\r\n\t\tif(events[name] === undefined || events[name][event] === undefined)\r\n\t\t\treturn;\r\n\r\n\t\tevents[name][event](obj, event);\r\n\t}\r\n\r\n\tvar tempDOM = document.createElement('div');\r\n\tself.new = function(name, element){\r\n\t\tvar newElement = element === undefined;\r\n\t\tif(element === undefined){\r\n\t\t\tif(self.registered[name][3] === false){\r\n\t\t\t\tconsole.error(\"HTML content for '\"+name+\"' was not defined\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement = self.registered[name][3].cloneNode(true);\r\n\t\t}\r\n\r\n\t\tvar newID = name+'@'+(self.registered[name][2]++);\r\n\t\telement.setAttribute('sf-controller', newID);\r\n\t\telement.sf$component = true;\r\n\t\telement.sf$componentFrom = name;\r\n\r\n\t\tif(self.available[name] === undefined)\r\n\t\t\tself.available[name] = [];\r\n\r\n\t\tself.available[name].push(newID);\r\n\r\n\t\tvar newObj = sf.model.root[newID] = {};\r\n\t\tself.registered[name][0](newObj, sf.model);\r\n\r\n\t\tvar extend = self.registered[name][4];\r\n\t\tif(extend !== undefined){\r\n\t\t\tif(extend.constructor === Array){\r\n\t\t\t\tfor (var i = 0; i < extend.length; i++) {\r\n\t\t\t\t\tif(bases[extend[i]] === undefined)\r\n\t\t\t\t\t\treturn console.error(\"'\"+extend[i]+\"' base is not found\");\r\n\t\t\t\t\tbases[extend[i]](newObj, sf.model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(bases[extend] === undefined)\r\n\t\t\t\t\treturn console.error(\"'\"+extend+\"' base is not found\");\r\n\t\t\t\tbases[extend](newObj, sf.model);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(self.registered[name][1])\r\n\t\t\tself.registered[name][1](newObj, sf.model);\r\n\r\n\t\tscope.triggerEvent(name, 'created', newObj);\r\n\r\n\t\tif(newElement){\r\n\t\t\t// Wrap to temporary vDOM\r\n\t\t\ttempDOM.appendChild(element);\r\n\t\t\tsf.model.init(element);\r\n\t\t\telement = tempDOM.firstElementChild;\r\n\t\t\telement.remove();\r\n\r\n\t\t\telement.model = sf.model.root[newID];\r\n\t\t\telement.destroy = function(){\r\n\t\t\t\tif(this.parentElement === null)\r\n\t\t\t\t\tinternal.model.DOMNodeRemoved(this);\r\n\t\t\t\telse this.remove();\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\telement.model = sf.model.root[newID];\r\n\t\treturn newID;\r\n\t}\r\n};","// Data save and HTML content binding\r\nsf.model = function(scope){\r\n\tif(sf.component.registered[scope] !== undefined)\r\n\t\treturn root_(scope);\r\n\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\tif(sf.controller.pending[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n};\r\n\r\n(function(){\r\n\tvar self = sf.model;\r\n\tvar scope = internal.model = {};\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\r\n\tvar processingElement = null;\r\n\r\n\t// For debugging, normalize indentation\r\n\tfunction trimIndentation(text){\r\n\t\tvar indent = text.split(\"\\n\", 3);\r\n\t\tif(indent[0][0] !== ' ' || indent[0][0] !== \"\\t\")\r\n\t\t\tindent = indent[1];\r\n\t\telse indent = indent[0];\r\n\r\n\t\tif(indent === undefined) return text;\r\n\t\tindent = indent.length - indent.trim().length;\r\n\t\tif(indent === 0) return text;\r\n\t\treturn text.replace(RegExp('^([\\\\t ]{'+indent+'})', 'gm'), '');\r\n\t}\r\n\r\n\t// Secured evaluation\r\n\tvar bracketMatch = RegExp('([\\\\w.]*?[\\\\S\\\\s])\\\\('+sf.regex.avoidQuotes, 'g');\r\n\tvar chackValidFunctionCall = sf.regex.validFunctionCall;\r\n\tvar localEval = function(script, _model_, _modelScope, _content_){\r\n\t\t\"use strict\";\r\n\r\n\t\t// ==== Security check ====\r\n\t\tvar tempScript = script;\r\n\r\n\t\t// Remove all inner quotes\r\n\t\ttempScript = tempScript.replace(sf.regex.getQuotes, '\"Quotes\"');\r\n\r\n\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\tvar preventExecution = false;\r\n\t\tvar check_ = null;\r\n\t\twhile((check_ = bracketMatch.exec(tempScript)) !== null){\r\n\t\t\tcheck_[1] = check_[1].trim();\r\n\r\n\t\t\tif(allowedFunctionEval.indexOf(check_[1]) === -1 &&\r\n\t\t\t\tcheck_[1].split('.')[0] !== '_modelScope' &&\r\n\t\t\t\tchackValidFunctionCall.test(check_[1][check_[1].length-1])\r\n\t\t\t){\r\n\t\t\t\tpreventExecution = check_[1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(preventExecution){\r\n\t\t\tconsole.error(\"Trying to executing unrecognized function (\"+preventExecution+\")\");\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\t\t// ==== Security check ended ====\r\n\t\r\n\t\tvar _result_ = '';\r\n\t\ttry{\r\n\t\t\tif(/@return /.test(script) === true){\r\n\t\t\t\tvar _evaled_ = eval('(function(){'+script.split('@return ').join('return ')+'})()');\r\n\t\t\t\treturn _result_ + _evaled_;\r\n\t\t\t}\r\n\t\t\telse var _evaled_ = eval(script);\r\n\t\t} catch(e){\r\n\t\t\tconsole.error(e);\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\t// Find an index for the element on the list\r\n\tself.index = function(element){\r\n\t\tvar i = -1;\r\n\t\tvar tagName = element.tagName;\r\n\t\tvar currentElement = element;\r\n\r\n\t\twhile(element !== null) {\r\n\t\t\tif(element.tagName === tagName)\r\n\t\t\t\ti++;\r\n\r\n\t\t\telement = element.previousElementSibling;\r\n\t\t}\r\n\r\n\t\tvar list = currentElement.getAttribute('sf-bind-list');\r\n\t\tif(!list) return i;\r\n\r\n\t\tvar ref = self.root[sf.controller.modelName(currentElement)][list];\r\n\t\tif(!ref.$virtual) return i;\r\n\r\n\t\treturn i + ref.$virtual.DOMCursor - 1;\r\n\t}\r\n\r\n\t// Declare model for the name with a function\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\t\t\r\n\t\tfunc(self(name), self);\r\n\t}\r\n\r\n\t// Get property of the model\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys;\r\n\t}\r\n\r\n\t// Escape the escaped quote\r\n\tfunction escapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*');\r\n\t}\r\n\r\n\tfunction unescapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\");\r\n\t}\r\n\r\n\tfunction elseIfHandle(else_, scopes){\r\n\t\tvar elseIf = else_.elseIf;\r\n\r\n\t\t// Else if\r\n\t\tfor (var i = 0; i < elseIf.length; i++) {\r\n\t\t\t// Check the condition\r\n\t\t\tscopes[0] = elseIf[i][0];\r\n\t\t\tif(!localEval.apply(self.root, scopes))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Get the value\r\n\t\t\tscopes[0] = elseIf[i][1];\r\n\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t}\r\n\r\n\t\t// Else\r\n\t\tif(else_.elseValue === null)\r\n\t\t\treturn '';\r\n\r\n\t\tscopes[0] = else_.elseValue;\r\n\t\treturn localEval.apply(self.root, scopes);\r\n\t}\r\n\r\n\t// ==== Template parser ====\r\n\tvar templateParser_regex = /{{%=([0-9]+)/gm;\r\n\tvar REF_DIRECT = 0, REF_IF = 1, REF_EXEC = 2;\r\n\tvar templateExec = function(parse, item, atIndex){\r\n\t\tvar parsed = {};\r\n\r\n\t\t// Get or evaluate static or dynamic data\r\n\t\tfor (var i = 0; i < parse.length; i++) {\r\n\t\t\tif(atIndex !== undefined && atIndex.indexOf(i) === -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar ref = parse[i];\r\n\t\t\tref.data[1] = item;\r\n\r\n\t\t\t// Direct evaluation type\r\n\t\t\tif(ref.type === REF_DIRECT || ref.type === REF_EXEC)\r\n\t\t\t\tparsed[i] = {type:ref.type, data:localEval.apply(self.root, ref.data)};\r\n\r\n\t\t\t// Conditional type\r\n\t\t\telse if(ref.type === REF_IF){\r\n\t\t\t\tvar scopes = ref.data;\r\n\t\t\t\tparsed[i] = {type:ref.type, data:''};\r\n\t\t\t\tscopes[0] = ref.if[0];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tparsed[i].data = elseIfHandle(ref, scopes);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscopes[0] = ref.if[1];\r\n\t\t\t\tparsed[i].data = localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n\r\n\tvar templateParser = function(template, item, original){\r\n\t\tvar html = original === true ? template.html : template.html.cloneNode(true);\r\n\t\tvar addresses = template.addresses;\r\n\t\tvar parsed = templateExec(template.parse, item);\r\n\r\n\t\t// Save model item reference to node\r\n\t\thtml.model = item;\r\n\r\n\t\tvar changesReference = [];\r\n\t\tvar pendingInsert = [];\r\n\r\n\t\t// Find element where the data belongs to\r\n\t\tfor (var i = 0; i < addresses.length; i++) {\r\n\t\t\tvar ref = addresses[i];\r\n\t\t\tvar current = $.childIndexes(ref.address, html);\r\n\r\n\t\t\t// Modify element attributes\r\n\t\t\tif(ref.nodeType === 1){\r\n\t\t\t\tvar refA = ref.attributes;\r\n\t\t\t\tfor(var a = 0; a < refA.length; a++){\r\n\t\t\t\t\tvar refB = refA[a];\r\n\r\n\t\t\t\t\tvar isValueInput = (refB.name === 'value' && (current.tagName === 'TEXTAREA' ||\r\n\t\t\t\t\t\t(current.tagName === 'INPUT' && /checkbox|radio|hidden/.test(current.type) === false)\r\n\t\t\t\t\t));\r\n\r\n\t\t\t\t\tchangesReference.push({\r\n\t\t\t\t\t\tattribute:isValueInput === true ? current : current.attributes[refB.name],\r\n\t\t\t\t\t\tref:refB\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(refB.direct !== undefined){\r\n\t\t\t\t\t\tif(refB.name === 'value' && isValueInput === true){\r\n\t\t\t\t\t\t\tcurrent.value = parsed[refB.direct].data;\r\n\t\t\t\t\t\t\tcurrent.removeAttribute('value');\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcurrent.setAttribute(refB.name, parsed[refB.direct].data);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Below is used for multiple data\r\n\t\t\t\t\tif(refB.name === 'value' && isValueInput === true){\r\n\t\t\t\t\t\tvar temp = current.value;\r\n\t\t\t\t\t\tcurrent.removeAttribute('value');\r\n\t\t\t\t\t\tcurrent.value = temp;\r\n\t\t\t\t\t\trefB = current;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse refB = current.attributes[refB.name];\r\n\r\n\t\t\t\t\trefB.value = refB.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Replace text node\r\n\t\t\tif(ref.nodeType === 3){\r\n\t\t\t\tvar refA = current;\r\n\r\n\t\t\t\tchangesReference.push({\r\n\t\t\t\t\ttextContent:refA,\r\n\t\t\t\t\tref:ref\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(ref.direct !== undefined){\r\n\t\t\t\t\trefA.textContent = parsed[ref.direct].data;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Below is used for multiple/dynamic data\r\n\t\t\t\trefA.textContent = refA.textContent.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Replace dynamic node\r\n\t\t\tif(ref.nodeType === -1){\r\n\t\t\t\tvar cRef = {\r\n\t\t\t\t\tdynamicFlag:current,\r\n\t\t\t\t\tdirect:ref.parse_index,\r\n\t\t\t\t\tparentNode:current.parentNode,\r\n\t\t\t\t\tstartFlag:ref.startFlag && $.childIndexes(ref.startFlag, html)\r\n\t\t\t\t};\r\n\t\t\t\tchangesReference.push(cRef);\r\n\r\n\t\t\t\t// Pending element insert to take other element reference\r\n\t\t\t\tpendingInsert.push(cRef);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Save reference to element\r\n\t\thtml.sf$elementReferences = changesReference;\r\n\t\t// html.sf$modelParsed = parsed;\r\n\r\n\t\t// Run the pending element\r\n\t\tfor (var i = 0; i < pendingInsert.length; i++) {\r\n\t\t\tvar ref = pendingInsert[i];\r\n\t\t\tvar tDOM = $.parseElement(parsed[ref.direct].data, true);\r\n\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\tref.parentNode.insertBefore(tDOM[a], ref.dynamicFlag);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t}\r\n\r\n\tfunction syntheticCache(element, template, item){\r\n\t\tif(element.sf$cache === undefined)\r\n\t\t\telement.sf$cache = {};\r\n\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\tvar ref = modelRef_array[i];\r\n\t\t\tcache[ref[0]] = deepProperty(item, ref[1]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction syntheticTemplate(element, template, property, item){\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tif(property !== undefined){\r\n\t\t\tvar changes = template.modelReference[property];\r\n\t\t\tif(changes === undefined || changes.length === 0){\r\n\t\t\t\tconsole.error(\"Failed to run syntheticTemplate because property '\"+property+\"' is not observed\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cache)\r\n\t\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\t\tif(ref[0] !== property) continue;\r\n\r\n\t\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t\t// Check if data was different\r\n\t\t\t\t\tif(cache[ref[0]] !== newData)\r\n\t\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar changes = [];\r\n\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\tif(cache === undefined){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t// Check if data was different\r\n\t\t\t\tif(cache[ref[0]] !== newData){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(changes.length === 0) return false;\r\n\t\t}\r\n\r\n\t\tvar parsed = templateExec(template.parse, item, changes);\r\n\t\tfunction checkRelatedChanges(parseIndex){\r\n\t\t\tvar found = false;\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(changes.indexOf(parseIndex[i]) !== -1){\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(found === false)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t// Prepare all required data\r\n\t\t\tchanges = [];\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(parsed[parseIndex[i]] === undefined){\r\n\t\t\t\t\tchanges.push(parseIndex[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tObject.assign(parsed, templateExec(template.parse, item, changes));\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tvar changesReference = element.sf$elementReferences;\r\n\t\tvar haveChanges = false;\r\n\t\tfor (var i = 0; i < changesReference.length; i++) {\r\n\t\t\tvar cRef = changesReference[i];\r\n\r\n\t\t\tif(cRef.dynamicFlag !== undefined){ // Dynamic data\r\n\t\t\t\tif(parsed[cRef.direct] !== undefined){\r\n\t\t\t\t\tvar tDOM = $.parseElement(parsed[cRef.direct].data, true).reverse();\r\n\t\t\t\t\tvar currentDOM = $.prevAll(cRef.dynamicFlag, cRef.startFlag);\r\n\t\t\t\t\tvar notExist = false;\r\n\r\n\t\t\t\t\t// Replace if exist, skip if similar\r\n\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\t\t\tif(currentDOM[a] === undefined){\r\n\t\t\t\t\t\t\tnotExist = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(currentDOM[a].isEqualNode(tDOM[a]) === false)\r\n\t\t\t\t\t\t\tcRef.parentNode.replaceChild(tDOM[a], currentDOM[a]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Add if not exist\r\n\t\t\t\t\tif(notExist){\r\n\t\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++)\r\n\t\t\t\t\t\t\tcRef.parentNode.insertBefore(tDOM[a], cRef.dynamicFlag);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove if over index\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tfor (var a = tDOM.length; a < currentDOM.length; a++) {\r\n\t\t\t\t\t\t\tcurrentDOM[a].remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(cRef.textContent !== undefined){ // Text only\r\n\t\t\t\tif(cRef.ref.parse_index !== undefined){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.textContent.textContent === temp) continue;\r\n\t\t\t\t\t\tcRef.textContent.textContent = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.textContent.textContent === value) continue;\r\n\r\n\t\t\t\t\tvar ref_ = cRef.textContent;\r\n\t\t\t\t\t// Remove old element if exist\r\n\t\t\t\t\tif(ref_.sf$haveChilds === true){\r\n\t\t\t\t\t\twhile(ref_.previousSibling && ref_.previousSibling.sf$childRoot === ref_){\r\n\t\t\t\t\t\t\tref_.previousSibling.remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tref_.textContent = value;\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(cRef.attribute !== undefined){ // Attributes\r\n\t\t\t\tif(cRef.ref.parse_index !== undefined){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.attribute.value === temp) continue;\r\n\t\t\t\t\t\tcRef.attribute.value = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.attribute.value === value) continue;\r\n\t\t\t\t\tcRef.attribute.value = value;\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn haveChanges;\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval, preParsedReference){\r\n\t\tvar _modelScope = self.root[scope];\r\n\t\tif(!runEval) runEval = '';\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope).join('|')+')\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\tvar preParsed = [];\r\n\t\t\tvar lastParsedIndex = preParsedReference.length;\r\n\t\t}\r\n\r\n\t\tvar prepared = html.replace(sf.regex.dataParser, function(actual, temp){\r\n\t\t\ttemp = avoidQuotes(temp, function(temp_){\r\n\t\t\t\t// Unescape HTML\r\n\t\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t\t// Mask item variable\r\n\t\t\t\tif(mask)\r\n\t\t\t\t\ttemp_ = temp_.replace(itemMask, function(matched){\r\n\t\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// Mask model for variable\r\n\t\t\t\treturn temp_.replace(scopeMask, function(full, matched){\r\n\t\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t\t});\r\n\t\t\t}).split('_model_._modelScope.').join('_model_.');\r\n\r\n\t\t\t// Evaluate\r\n\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\ttemp = temp.trim();\r\n\r\n\t\t\t\t// Simplicity similar\r\n\t\t\t\tvar exist = preParsed.indexOf(temp);\r\n\r\n\t\t\t\tif(exist === -1){\r\n\t\t\t\t\tpreParsed.push(temp);\r\n\t\t\t\t\tpreParsedReference.push({type:REF_DIRECT, data:[temp, _model_, _modelScope]});\r\n\t\t\t\t\treturn '{{%=' + (preParsed.length + lastParsedIndex - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn '{{%=' + (exist + lastParsedIndex);\r\n\t\t\t}\r\n\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(sf.regex.escapeHTML, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\tpreParsed = _modelScope = _model_ = mask = scope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t}\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\t// Dynamic data parser\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope, runEval){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(passVar === null)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\t// Use strict mode and prepare for new variables\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\t// Declare new variable\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove var because no variable are being passed\r\n\t\t\t\tif(firstTime === true)\r\n\t\t\t\t\tstrDeclare = strDeclare.replace('var ', '');\r\n\r\n\t\t\t\t// Escape function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('&#40;').split(')').join('&#41;');\r\n\r\n\t\t\t\t// Pass to static data parser for another HTML data\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Build script preparation\r\n\t\thtml = html.replace(/{\\[([\\s\\S]*?)\\]}/g, function(full, matched){\r\n\t\t\tif(/{{.*?}}/.test(matched) === false)\r\n\t\t\t\treturn \"_result_ += '\"+matched.split(\"'\").join(\"\\\\'\")+\"'\";\r\n\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope).join('|')+')\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.\\\\b', 'g');\r\n\r\n\t\tif(runEval === '#noEval')\r\n\t\t\tvar preParsedReference = [];\r\n\r\n\t\tvar prepared = html.replace(sf.regex.uniqueDataParser, function(actual, temp){\r\n\t\t\ttemp = avoidQuotes(temp, function(temp_){\r\n\t\t\t\t// Unescape HTML\r\n\t\t\t\ttemp_ = temp_.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t\t// Mask item variable\r\n\t\t\t\tif(mask)\r\n\t\t\t\t\ttemp_ = temp_.replace(itemMask, function(matched){\r\n\t\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// Mask model for variable\r\n\t\t\t\treturn temp_.replace(scopeMask, function(full, matched){\r\n\t\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t\t});\r\n\t\t\t}).split('_model_._modelScope.').join('_model_.');\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass_ = /(var|let)([\\w,\\s]+)(?=\\s(?==|in|of))/g;\r\n\t\t\tvar VarPass = [];\r\n\t\t\tvar s1 = null;\r\n\t\t\twhile((s1 = VarPass_.exec(temp)) !== null){\r\n\t\t\t\tVarPass.push(s1[2]);\r\n\t\t\t}\r\n\r\n\t\t\tif(_model_ === null && runEval === '#noEval')\r\n\t\t\t\tVarPass.push('_model_');\r\n\r\n\t\t\tif(VarPass.length !== 0){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/([\\n\\t\\r]|  )+/g, '').split(',').forEach(function(val){\r\n\t\t\t\t\t\tobtained.push(val);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':(typeof '+VarPass[i]+'!==\"undefined\"?'+VarPass[i]+':undefined)';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(VarPass.length === 0)\r\n\t\t\t\t\tVarPass = 'null';\r\n\t\t\t\telse VarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\t\t\telse temp = temp.split('&VarPass&').join('null');\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\r\n\t\t\t\t// {if, elseIf:([if, value], ...), elseValue}\r\n\t\t\t\tvar findElse = function(text){\r\n\t\t\t\t\ttext = text.join(':');\r\n\t\t\t\t\tvar else_ = null;\r\n\r\n\t\t\t\t\t// Split elseIf\r\n\t\t\t\t\ttext = text.split('@elseif ');\r\n\r\n\t\t\t\t\t// Get else value\r\n\t\t\t\t\tvar else_ = text[text.length - 1].split('@else');\r\n\t\t\t\t\tif(else_.length === 2){\r\n\t\t\t\t\t\ttext[text.length - 1] = else_[0];\r\n\t\t\t\t\t\telse_ = else_.pop();\r\n\t\t\t\t\t\telse_ = else_.substr(else_.indexOf(':') + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse else_ = null;\r\n\r\n\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t\tif:text.shift(),\r\n\t\t\t\t\t\telseIf:[],\r\n\t\t\t\t\t\telseValue:else_\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Separate condition script and value\r\n\t\t\t\t\tfor (var i = 0; i < text.length; i++) {\r\n\t\t\t\t\t\tvar val = text[i].split(':');\r\n\t\t\t\t\t\tobj.elseIf.push([val.shift(), val.join(':')]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tvar condition = check.shift();\r\n\t\t\t\t\tvar elseIf = findElse(check);\r\n\t\t\t\t\telseIf.type = REF_IF;\r\n\t\t\t\t\telseIf.data = [null, _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t\t// Trim Data\r\n\t\t\t\t\telseIf.if = [condition.trim(), elseIf.if.trim()];\r\n\t\t\t\t\tif(elseIf.elseValue !== null)\r\n\t\t\t\t\t\telseIf.elseValue = elseIf.elseValue.trim();\r\n\r\n\t\t\t\t\tfor (var i = 0; i < elseIf.elseIf.length; i++) {\r\n\t\t\t\t\t\telseIf.elseIf[i][0] = elseIf.elseIf[i][0].trim();\r\n\t\t\t\t\t\telseIf.elseIf[i][1] = elseIf.elseIf[i][1].trim();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Push data\r\n\t\t\t\t\tpreParsedReference.push(elseIf);\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scopes = [check[0], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\treturn elseIfHandle(findElse(check), scopes);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcheck.shift();\r\n\t\t\t\tscopes[0] = check.join(':');\r\n\r\n\t\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tvar scopes = [check[1], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tpreParsedReference.push({type:REF_EXEC, data:scopes});\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, scopes);\r\n\t\t\t\treturn temp;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\t_modelScope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t\treturn [prepared, preParsedReference, _content_];\r\n\t\t}\r\n\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\tvar bindArray = function(template, list, mask, modelName, propertyName, targetNode, parentNode, tempDOM){\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'swap', 'move', 'replace', 'softRefresh', 'hardRefresh'];\r\n\t\tvar refreshTimer = -1;\r\n\t\tvar parentChilds = parentNode.children;\r\n\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\r\n\t\t// Update callback\r\n\t\tvar modelRef = self.root[modelName];\r\n\t\tvar eventVar = 'on$'+propertyName;\r\n\t\tvar callback = modelRef[eventVar];\r\n\r\n\t\tvar processElement = function(index, options, other, count){\r\n\t\t\t// Find boundary for inserting to virtual DOM\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar vStartRange = list.$virtual.DOMCursor;\r\n\t\t\t\tvar vEndRange = vStartRange + list.$virtual.preparedLength;\r\n\t\t\t}\r\n\r\n\t\t\tif(options === 'clear'){\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar spacer = [parentNode.firstElementChild, parentNode.lastElementChild];\r\n\r\n\t\t\t\tparentNode.textContent = '';\r\n\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tparentNode.appendChild(spacer[0]);\r\n\t\t\t\t\tparentNode.appendChild(spacer[1]);\r\n\t\t\t\t\tlist.$virtual.dom.textContent = '';\r\n\t\t\t\t\tspacer[1].style.height = \r\n\t\t\t\t\tspacer[0].style.height = 0;\r\n\t\t\t\t\tlist.$virtual.reset(true);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid multiple refresh by set a timer\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar exist = list.$virtual.elements();\r\n\r\n\t\t\t\tclearTimeout(refreshTimer);\r\n\t\t\t\trefreshTimer = setTimeout(function(){\r\n\t\t\t\t\tlist.$virtual.reinitScroll();\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse exist = parentChilds;\r\n\r\n\t\t\t// Hard refresh - Append element\r\n\t\t\tif(options === 'hardRefresh'){\r\n\t\t\t\t// Clear siblings after the index\r\n\t\t\t\tfor (var i = index; i < exist.length; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar vCursor = list.$virtual.vCursor;\r\n\r\n\t\t\t\tfor (var i = index; i < list.length; i++) {\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\tif(vCursor.floor === null && i < vEndRange)\r\n\t\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\t\telse list.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse parentNode.appendChild(temp);\r\n\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual && list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(callback === undefined)\r\n\t\t\t\tcallback = modelRef[eventVar];\r\n\r\n\t\t\tif(options === 'swap' || options === 'move'){\r\n\t\t\t\tif(options === 'move'){\r\n\t\t\t\t\tvar overflow = list.length - index - count;\r\n\t\t\t\t\tif(overflow < 0)\r\n\t\t\t\t\t\tcount += overflow;\r\n\r\n\t\t\t\t\t// Move to virtual DOM\r\n\t\t\t\t\tvar vDOM = document.createElement('div');\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tvDOM.appendChild(exist[index + i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar nextSibling = exist[other] || null;\r\n\t\t\t\t\tvar theParent = nextSibling && nextSibling.parentNode;\r\n\r\n\t\t\t\t\tif(theParent === false){\r\n\t\t\t\t\t\tif(list.$virtual && list.length >= vEndRange)\r\n\t\t\t\t\t\t\ttheParent = list.$virtual.dom;\r\n\t\t\t\t\t\telse theParent = parentNode;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Move to defined index\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\ttheParent.insertBefore(vDOM.firstElementChild, nextSibling);\r\n\r\n\t\t\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\t\t\tcallback.update(exist[index + i], 'move');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(index > other){\r\n\t\t\t\t\tvar index_a = exist[other];\r\n\t\t\t\t\tother = exist[index];\r\n\t\t\t\t\tindex = index_a;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tindex = exist[index];\r\n\t\t\t\t\tother = exist[other];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar other_sibling = other.nextSibling;\r\n\t\t\t\tvar other_parent = other.parentNode;\r\n\t            index.parentNode.insertBefore(other, index.nextSibling);\r\n\t            other_parent.insertBefore(index, other_sibling);\r\n\r\n\t\t\t\tif(callback !== undefined && callback.update){\r\n\t\t\t\t\tcallback.update(exist[other], 'swap');\r\n\t\t\t\t\tcallback.update(exist[index], 'swap');\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Clear unused element if current array < last array\r\n\t\t\tif(options === 'removeRange'){\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(options === 'remove'){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\texist[index].remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.remove){\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tstartRemove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse startRemove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update\r\n\t\t\telse if(options === 'update'){\r\n\t\t\t\tif(index === undefined){\r\n\t\t\t\t\tindex = 0;\r\n\t\t\t\t\tother = list.length;\r\n\t\t\t\t}\r\n\t\t\t\telse if(other === undefined) other = index + 1;\r\n\t\t\t\telse if(other < 0) other = list.length + other;\r\n\t\t\t\telse other += index;\r\n\r\n\t\t\t\t// Trim length\r\n\t\t\t\tvar overflow = list.length - other;\r\n\t\t\t\tif(overflow < 0) other = other + overflow;\r\n\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\tvar oldChild = exist[i];\r\n\t\t\t\t\tif(oldChild === undefined || list[i] === undefined)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\toldChild.parentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tparentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\t\tcallback.update(temp, 'replace');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar item = list[index];\r\n\t\t\tif(item === undefined) return;\r\n\r\n\t\t\tvar temp = templateParser(template, item);\r\n\t\t\tif(isKeyed === false)\r\n\t\t\t\tsyntheticCache(temp, template, item);\r\n\r\n\t\t\t// Create\r\n\t\t\tif(options === 'insertAfter'){\r\n\t\t\t\tif(exist.length === 0)\r\n\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\telse{\r\n\t\t\t\t\tvar referenceNode = exist[index - 1];\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode.nextSibling);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t\telse if(options === 'prepend'){\r\n\t\t\t\tvar referenceNode = exist[0];\r\n\t\t\t\tif(referenceNode !== undefined){\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode);\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t}\r\n\t\t\t\telse options = 'append';\r\n\t\t\t}\r\n\t\t\tif(options === 'append'){\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tif(index === 0) // Add before virtual scroller\r\n\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\telse if(index >= vEndRange){ // To virtual DOM\r\n\t\t\t\t\t\tif(list.$virtual.vCursor.floor === null)\r\n\t\t\t\t\t\t\tlist.$virtual.vCursor.floor = temp;\r\n\r\n\t\t\t\t\t\tlist.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse // To real DOM\r\n\t\t\t\t\t\texist[index-1].insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparentNode.appendChild(temp);\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar _double_zero = [0,0]; // For arguments\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = undefined;\r\n\t\t\t\t\tvar lastLength = this.length;\r\n\r\n\t\t\t\t\tif(name === 'move'){\r\n\t\t\t\t\t\tvar from = arguments[0];\r\n\t\t\t\t\t\tvar to = arguments[1];\r\n\t\t\t\t\t\tif(from === to) return;\r\n\t\t\t\t\t\tvar count = arguments[2] || 1;\r\n\t\t\t\t\t\tprocessElement(from, 'move', to, count);\r\n\r\n\t\t\t\t\t\tvar temp = Array.prototype.splice.apply(this, [from, count]);\r\n\t\t\t\t\t\ttemp.unshift(to, 0);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Reset virtual ceiling and floor\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(name === 'swap'){\r\n\t\t\t\t\t\tvar i = arguments[0];\r\n\t\t\t\t\t\tvar o = arguments[1];\r\n\t\t\t\t\t\tif(i === o) return;\r\n\t\t\t\t\t\tprocessElement(i, 'swap', o);\r\n\t\t\t\t\t\tvar temp = this[i];\r\n\t\t\t\t\t\tthis[i] = this[o];\r\n\t\t\t\t\t\tthis[o] = temp;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'replace'){\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.resetViewport();\r\n\r\n\t\t\t\t\t\t// Check if item has same reference\r\n\t\t\t\t\t\tif(arguments[0].length >= lastLength && lastLength !== 0){\r\n\t\t\t\t\t\t\tvar matchLeft = lastLength;\r\n\t\t\t\t\t\t\tvar ref = arguments[0];\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < lastLength; i++) {\r\n\t\t\t\t\t\t\t\tif(ref[i] === this[i]){\r\n\t\t\t\t\t\t\t\t\tmatchLeft--;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the end\r\n\t\t\t\t\t\t\tif(matchLeft === 0){\r\n\t\t\t\t\t\t\t\tif(ref.length === lastLength) return;\r\n\r\n\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(lastLength);\r\n\t\t\t\t\t\t\t\ttemp.unshift(lastLength, 0);\r\n\t\t\t\t\t\t\t\tthis.splice.apply(this, temp);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the middle\r\n\t\t\t\t\t\t\telse if(matchLeft !== lastLength){\r\n\t\t\t\t\t\t\t\tif(arguments[1] === true){\r\n\t\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(i);\r\n\t\t\t\t\t\t\t\t\ttemp.unshift(i, lastLength - i);\r\n\t\t\t\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t\t\t\tlist.refresh(i, lastLength);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Build from zero\r\n\t\t\t\t\t\tif(lastLength === 0){\r\n\t\t\t\t\t\t\tArray.prototype.push.apply(this, arguments[0]);\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Clear all items and merge the new one\r\n\t\t\t\t\t\tvar temp = [0, lastLength];\r\n\t\t\t\t\t\tArray.prototype.push.apply(temp, arguments[0]);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Rebuild all element\r\n\t\t\t\t\t\tif(arguments[1] !== true || isKeyed){\r\n\t\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reuse some element\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t// Clear unused element if current array < last array\r\n\t\t\t\t\t\t\tif(this.length < lastLength)\r\n\t\t\t\t\t\t\t\tprocessElement(this.length, 'removeRange', lastLength);\r\n\r\n\t\t\t\t\t\t\t// And start refreshing\r\n\t\t\t\t\t\t\tlist.refresh(0, this.length);\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual && list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reset virtual list\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reset();\r\n\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice' && arguments[0] === 0 && arguments[1] === undefined){\r\n\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\treturn Array.prototype.splice.apply(this, arguments);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(this.length, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'push'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(lastLength, 'append');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = 0; i < arguments.length; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(lastLength + i, 'append');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'shift'){\r\n\t\t\t\t\t\tprocessElement(0, 'remove');\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor > 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor--;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments[0] === 0 && arguments[1] === undefined)\r\n\t\t\t\t\t\t\treturn temp;\r\n\r\n\t\t\t\t\t\t// Removing data\r\n\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\tif(real < 0) real = lastLength + real;\r\n\r\n\t\t\t\t\t\tvar limit = arguments[1];\r\n\t\t\t\t\t\tif(!limit && limit !== 0) limit = this.length;\r\n\r\n\t\t\t\t\t\tfor (var i = limit - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tprocessElement(real + i, 'remove');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = real - limit;\r\n\r\n\t\t\t\t\t\tif(arguments.length >= 3){ // Inserting data\r\n\t\t\t\t\t\t\tlimit = arguments.length - 2;\r\n\r\n\t\t\t\t\t\t\t// Trim the index if more than length\r\n\t\t\t\t\t\t\tif(real >= this.length)\r\n\t\t\t\t\t\t\t\treal = this.length - 1;\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < limit; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(real + i, 'insertAfter');\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\t\tlist.$virtual.DOMCursor += limit;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(0, 'prepend');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = arguments.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\t\tprocessElement(i, 'prepend');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor !== 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor += arguments.length;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'softRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0], 'update', arguments[1]);\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'hardRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0] || 0, 'hardRefresh');\r\n\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = arguments[0] || 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(parentNode && parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\tdelete list.$virtual;\r\n\t\t\tlist.$virtual = {};\r\n\r\n\t\t\t// Transfer virtual DOM\r\n\t\t\tlist.$virtual.dom = tempDOM;\r\n\t\t\tif(callback !== undefined)\r\n\t\t\t\tlist.$virtual.callback = callback;\r\n\t\t\telse list.$virtual.callback_ = {ref:modelRef, var:eventVar};\r\n\r\n\t\t\tparentNode.replaceChild(template.html, parentChilds[1]);\r\n\t\t\tsf.internal.virtual_scroll.handle(list, targetNode, parentNode);\r\n\t\t\ttemplate.html.remove();\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\r\n\t\t// Todo: Enable auto item binding\r\n\t\tif(false && list.auto !== false){\r\n\t\t\t// for (var i = 0; i < list.length; i++) {\r\n\t\t\t// \tlist[i]\r\n\t\t\t// }\r\n\t\t}\r\n\r\n\t\thiddenProperty(list, '$replace', function(index, key, needle, func){\r\n\t\t\tvar elRef = list.getElement(index).sf$elementReferences;\r\n\t\t\tvar process = template.modelReference[key];\r\n\t\t\tif(process === undefined){\r\n\t\t\t\tconsole.error(\"Can't found binding for '\"+key+\"'\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < elRef.length; i++) {\r\n\t\t\t\tif(elRef[i].textContent === undefined || elRef[i].ref.direct === undefined)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tif(process.indexOf(elRef[i].ref.direct) !== -1){\r\n\t\t\t\t\tvar ref = elRef[i].textContent;\r\n\t\t\t\t\tvar content = $.escapeText(list[index][key]).replace(needle, func);\r\n\r\n\t\t\t\t\t// Skip if nothing was changed\r\n\t\t\t\t\tif(list[index][key] === content) continue;\r\n\t\t\t\t\tref.textContent = ''; // Let this empty for later referencing\r\n\t\t\t\t\tref.sf$haveChilds = true;\r\n\t\t\t\t\tcontent = $.parseElement(content, true);\r\n\r\n\t\t\t\t\t// Remove old element if exist\r\n\t\t\t\t\twhile(ref.previousSibling && ref.previousSibling.sf$childRoot === ref){\r\n\t\t\t\t\t\tref.previousSibling.remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar parentNode_ = ref.parentNode;\r\n\t\t\t\t\tfor (var i = 0; i < content.length; i++) {\r\n\t\t\t\t\t\tcontent[i].sf$childRoot = ref;\r\n\t\t\t\t\t\tparentNode_.insertBefore(content[i], ref);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\thiddenProperty(list, 'refresh', function(index, length, property){\r\n\t\t\tif(index === undefined || index.constructor === String){\r\n\t\t\t\tproperty = index;\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tlength = list.length;\r\n\t\t\t}\r\n\t\t\telse if(length === undefined) length = index + 1;\r\n\t\t\telse if(length.constructor === String){\r\n\t\t\t\tproperty = length;\r\n\t\t\t\tlength = index + 1;\r\n\t\t\t}\r\n\t\t\telse if(length < 0) length = list.length + length;\r\n\t\t\telse length += index;\r\n\r\n\t\t\t// Trim length\r\n\t\t\tvar overflow = list.length - length;\r\n\t\t\tif(overflow < 0) length = length + overflow;\r\n\r\n\t\t\tfor (var i = index; i < length; i++) {\r\n\t\t\t\tvar elem = list.getElement(i);\r\n\r\n\t\t\t\t// Create element if not exist\r\n\t\t\t\tif(elem === undefined){\r\n\t\t\t\t\tlist.hardRefresh(i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(isKeyed === true)\r\n\t\t\t\t\t\tlist.softRefresh(i);\r\n\t\t\t\t\telse if(syntheticTemplate(elem, template, property, list[i]) === false)\r\n\t\t\t\t\t\tcontinue; // Continue if no update\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\tcallback.update(elem, 'replace');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar virtualChilds = null;\r\n\t\tif(list.$virtual)\r\n\t\t\tvirtualChilds = list.$virtual.dom.children;\r\n\t\thiddenProperty(list, 'getElement', function(index){\r\n\t\t\tif(virtualChilds !== null){\r\n\t\t\t\tvar ret = undefined;\r\n\t\t\t\tif(index < list.$virtual.DOMCursor)\r\n\t\t\t\t\treturn virtualChilds[index];\r\n\t\t\t\telse {\r\n\t\t\t\t\tindex -= list.$virtual.DOMCursor;\r\n\t\t\t\t\tvar childElement = parentNode.childElementCount - 2;\r\n\r\n\t\t\t\t\tif(index < childElement)\r\n\t\t\t\t\t\treturn parentChilds[index + 1];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn virtualChilds[index - childElement + list.$virtual.DOMCursor];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t\treturn parentChilds[index];\r\n\t\t});\r\n\t}\r\n\r\n\tvar loopParser = function(name, template, script, targetNode, parentNode){\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\r\n\t\tvar items = root_(name)[method[1]];\r\n\t\tif(items === undefined)\r\n\t\t\titems = root_(name)[method[1]] = [];\r\n\r\n\t\ttemplate.setAttribute('sf-bind-list', method[1]);\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = template;\r\n\t\ttemplate = self.extractPreprocess(template, mask, name);\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tvar tempDOM = document.createElement('div');\r\n\t\t\tvar modelRef = self.root[name];\r\n\r\n\t\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\t\tvar elem = templateParser(template, items[i]);\r\n\t\t\t\ttempDOM.appendChild(elem);\r\n\r\n\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\tsyntheticCache(elem, template, items[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// Enable element binding\r\n\t\t\tif(modelRef.sf$bindedKey === undefined)\r\n\t\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\t\tif(modelRef.sf$bindedKey[method[1]] === undefined)\r\n\t\t\t\tmodelRef.sf$bindedKey[method[1]] = null;\r\n\r\n\t\t\tObject.defineProperty(modelRef, method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tif(val.length === 0)\r\n\t\t\t\t\t\treturn items.splice(0);\r\n\t\t\t\t\treturn items.replace(val, true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tbindArray(template, items, mask, name, method[1], targetNode, parentNode, tempDOM);\r\n\r\n\t\t\t// Output to real DOM if not being used for virtual list\r\n\t\t\tif(items.$virtual === undefined){\r\n\t\t\t\tvar children = tempDOM.children;\r\n\t\t\t\tfor (var i = 0, n = children.length; i < n; i++) {\r\n\t\t\t\t\tparentNode.appendChild(children[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttempDOM.remove();\r\n\t\t\t\ttempDOM = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar callInputListener = function(model, property, value){\r\n\t\tvar callback = model['on$'+property];\r\n\t\tvar v2m = model['v2m$'+property];\r\n\t\tvar newValue1 = undefined; var newValue2 = undefined;\r\n\t\tif(callback !== undefined || v2m !== undefined){\r\n\t\t\tvar old = model[property];\r\n\t\t\tif(old !== null && old !== undefined && old.constructor === Array)\r\n\t\t\t\told = old.slice(0);\r\n\r\n\t\t\ttry{\r\n\t\t\t\tif(v2m !== undefined)\r\n\t\t\t\t\tnewValue1 = v2m(old, value);\r\n\r\n\t\t\t\tif(callback !== undefined)\r\n\t\t\t\t\tnewValue2 = callback(old, value);\r\n\t\t\t}catch(e){console.error(e)}\r\n\t\t}\r\n\t\treturn newValue2 !== undefined ? newValue2 : newValue1;\r\n\t}\r\n\r\n\tvar inputBoundRunning = false;\r\n\tvar inputTextBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\r\n\t\tinputBoundRunning = true;\r\n\t\tvar ref = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar value = ref.typeData === Number ? Number(ref.value) : ref.value;\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== undefined)\r\n\t\t\tref.sfModel[ref.sfBounded] = newValue;\r\n\t\telse ref.sfModel[ref.sfBounded] = value;\r\n\t}\r\n\tvar inputFilesBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tvar ref = e.target;\r\n\t\tcallInputListener(ref.sfModel, ref.sfBounded, ref.files);\r\n\t\tref.sfModel[ref.sfBounded] = ref.files;\r\n\t}\r\n\r\n\tvar inputCheckBoxBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tinputBoundRunning = true;\r\n\t\tvar ref = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar value = ref.typeData === Number ? Number(ref.value) : ref.value;\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== undefined)\r\n\t\t\tvalue = newValue;\r\n\r\n\t\tvar model = ref.sfModel;\r\n\t\tvar constructor = model[ref.sfBounded];\r\n\r\n\t\tif(constructor === Array){\r\n\t\t\tvar i = model[ref.sfBounded].indexOf(value);\r\n\r\n\t\t\tif(i === -1 && ref.checked === true)\r\n\t\t\t\tmodel[ref.sfBounded].push(value);\r\n\t\t\telse if(i !== -1 && ref.checked === false)\r\n\t\t\t\tmodel[ref.sfBounded].splice(i, 1);\r\n\t\t}\r\n\t\telse if(constructor === Boolean || ref.typeData === Boolean)\r\n\t\t\tmodel[ref.sfBounded] = ref.checked;\r\n\t\telse model[ref.sfBounded] = value;\r\n\t}\r\n\r\n\tvar inputSelectBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tinputBoundRunning = true;\r\n\t\tvar ref = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar typeData = ref.typeData;\r\n\t\tif(ref.multiple === true){\r\n\t\t\tvar temp = ref.selectedOptions;\r\n\t\t\tvar value = [];\r\n\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\tvalue.push(typeData === Number ? Number(temp[i].value) : temp[i].value);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse value = typeData === Number ? Number(ref.selectedOptions[0].value) : ref.selectedOptions[0].value;\r\n\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== undefined)\r\n\t\t\tref.sfModel[ref.sfBounded] = newValue;\r\n\t\telse ref.sfModel[ref.sfBounded] = value;\r\n\t}\r\n\r\n\tvar assignElementData = {\r\n\t\tselect:function(model, property, element){\r\n\t\t\tvar list = element.options;\r\n\t\t\tvar typeData = element.typeData;\r\n\t\t\tvar arrayValue = model[property].constructor === Array ? model[property] : false;\r\n\t\t\tfor (var i = 0, n = list.length; i < n; i++) {\r\n\t\t\t\tif(arrayValue === false){\r\n\t\t\t\t\tif(typeData === String)\r\n\t\t\t\t\t\tlist[i].selected = list[i].value === model[property];\r\n\t\t\t\t\telse list[i].selected = list[i].value == model[property];\r\n\t\t\t\t}\r\n\t\t\t\telse list[i].selected = arrayValue.indexOf(typeData === Number ? Number(list[i].value) : list[i].value) !== -1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckbox:function(model, property, element){\r\n\t\t\tif(model[property].constructor === Array)\r\n\t\t\t\telement.checked = model[property].indexOf(element.typeData === Number ? Number(element.value) : element.value) !== -1;\r\n\t\t\telse if(model[property].constructor === Boolean)\r\n\t\t\t\telement.checked = Boolean(model[property]);\r\n\t\t\telse{\r\n\t\t\t\tif(element.typeData === String)\r\n\t\t\t\t\telement.checked = element.value === model[property];\r\n\t\t\t\telse element.checked = element.value == model[property];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar inputBoundRun = function(model, property, elements){\r\n\t\tif(inputBoundRunning === true)\r\n\t\t\treturn; // Avoid multiple assigment\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\tvar ev = new Event('change');\r\n\t\t\tev.fromSFFramework = true;\r\n\r\n\t\t\tif(elements.type === 1) // text\r\n\t\t\t\telements[i].value = model[property];\r\n\t\t\telse if(elements.type === 2) // select options\r\n\t\t\t\tassignElementData.select(model, property, elements[i]);\r\n\t\t\telse if(elements.type === 3) // radio\r\n\t\t\t\telements[i].checked = model[property] == elements[i].value;\r\n\t\t\telse if(elements.type === 4) // checkbox\r\n\t\t\t\tassignElementData.checkbox(model, property, elements[i]);\r\n\r\n\t\t\telements[i].dispatchEvent(ev);\r\n\t\t}\r\n\t}\r\n\r\n\tvar triggerInputEvent = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\tif(e.target.viewInputted === true){\r\n\t\t\te.target.viewInputted = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\te.target.dispatchEvent(new Event('input'));\r\n\t}\r\n\r\n\tvar elementBoundChanges = function(model, property, element, oneWay){\r\n\t\t// Enable multiple element binding\r\n\t\tif(model.sf$bindedKey === undefined)\r\n\t\t\tinitBindingInformation(model);\r\n\r\n\t\tvar type = 0;\r\n\t\tvar typeData = null;\r\n\t\tif(model[property] !== null && model[property] !== undefined)\r\n\t\t\ttypeData = model[property].constructor;\r\n\r\n\t\tvar assignedType = (element.getAttribute('typedata') || '').toLowerCase();\r\n\t\tif(assignedType === 'number')\r\n\t\t\ttypeData = Number;\r\n\r\n\t\telement.typeData = typeData;\r\n\t\t$.on(element, 'change', triggerInputEvent);\r\n\r\n\t\t// Bound value change\r\n\t\tif(element.tagName === 'TEXTAREA'){\r\n\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\telement.value = model[property];\r\n\t\t\ttype = 1;\r\n\t\t}\r\n\r\n\t\telse if(element.selectedOptions !== undefined){\r\n\t\t\t$.on(element, 'input', inputSelectBound);\r\n\t\t\ttype = 2;\r\n\r\n\t\t\tassignElementData.select(model, property, element);\r\n\t\t}\r\n\r\n\t\telse{\r\n\t\t\tvar type = element.type.toLowerCase();\r\n\t\t\tif(type === 'radio'){\r\n\t\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\t\ttype = 3;\r\n\r\n\t\t\t\telement.checked = model[property] == element.value;\r\n\t\t\t}\r\n\t\t\telse if(type === 'checkbox'){\r\n\t\t\t\t$.on(element, 'input', inputCheckBoxBound);\r\n\t\t\t\ttype = 4;\r\n\r\n\t\t\t\tassignElementData.checkbox(model, property, element);\r\n\t\t\t}\r\n\r\n\t\t\telse if(type === 'file'){\r\n\t\t\t\t$.on(element, 'input', inputFilesBound);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telse{\r\n\t\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\t\telement.value = model[property];\r\n\t\t\t\ttype = 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(oneWay === true) return;\r\n\t\tmodelToViewBinding(model, property, inputBoundRun, element, type);\r\n\t}\r\n\r\n\tvar bindInput = function(targetNode){\r\n\t\tvar temp = $('input[sf-bound], textarea[sf-bound], select[sf-bound], input[sf-bind], textarea[sf-bind], select[sf-bind]', targetNode);\r\n\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar model = sf.controller.modelName(element);\r\n\t\t\tif(!model) return;\r\n\t\t\tvar modelScope = self.root[model];\r\n\r\n\t\t\tvar oneWay = false;\r\n\t\t\tvar propertyName = element.getAttribute('sf-bound');\r\n\t\t\tif(propertyName === null){\r\n\t\t\t\tpropertyName = element.getAttribute('sf-bind');\r\n\t\t\t\toneWay = true;\r\n\t\t\t}\r\n\t\t\tif(propertyName === \"\")\r\n\t\t\t\tpropertyName = element.getAttribute('name');\r\n\r\n\t\t\tif(propertyName === null){\r\n\t\t\t\tconsole.error(\"Property key to be bound wasn't be found\", element);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(modelScope[propertyName] === undefined){\r\n\t\t\t\tconsole.error('Can\\'t get property \"'+propertyName+'\" on model \"' + model + '\"');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement.sfBounded = propertyName;\r\n\t\t\telement.sfModel = modelScope;\r\n\t\t\tif(oneWay === false){\r\n\t\t\t\telement.setAttribute('sf-bounded', '');\r\n\t\t\t\telement.removeAttribute('sf-bound');\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\telement.setAttribute('sf-binded', '');\r\n\t\t\t\telement.removeAttribute('sf-bind');\r\n\t\t\t}\r\n\r\n\t\t\telementBoundChanges(modelScope, propertyName, element, oneWay);\r\n\t\t}\r\n\t}\r\n\r\n\tvar alreadyInitialized = false;\r\n\tself.init = function(targetNode, queued){\r\n\t\tif(alreadyInitialized && !targetNode) return;\r\n\t\talreadyInitialized = true;\r\n\t\tsetTimeout(function(){\r\n\t\t\talreadyInitialized = false;\r\n\t\t}, 50);\r\n\r\n\t\tif(!targetNode) targetNode = document.body;\r\n\r\n\t\tself.parsePreprocess(queued || self.queuePreprocess(targetNode), queued);\r\n\t\tbindInput(targetNode);\r\n\r\n\t\t// Find element for array binding\r\n\t\tvar temp = $('[sf-repeat-this]', targetNode);\r\n\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\tvar element = temp[a];\r\n\t\t\tvar parent = element.parentElement;\r\n\r\n\t\t\tif(queued !== undefined)\r\n\t\t\t\telement.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(parent.classList.contains('sf-virtual-list')){\r\n\t\t\t\tvar ceiling = document.createElement(element.tagName);\r\n\t\t\t\tceiling.classList.add('virtual-spacer');\r\n\t\t\t\tvar floor = ceiling.cloneNode(true);\r\n\r\n\t\t\t\tceiling.classList.add('ceiling');\r\n\t\t\t\tparent.insertBefore(ceiling, parent.firstElementChild); // prepend\r\n\r\n\t\t\t\tfloor.classList.add('floor');\r\n\t\t\t\tparent.appendChild(floor); // append\r\n\t\t\t}\r\n\r\n\t\t\tvar after = element.nextElementSibling;\r\n\t\t\tif(after === null || element === after)\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = element.previousElementSibling;\r\n\t\t\tif(before === null || element === before)\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = element.getAttribute('sf-repeat-this');\r\n\t\t\telement.removeAttribute('sf-repeat-this');\r\n\r\n\t\t\t// Check if the element was already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(element.outerHTML))\r\n\t\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\t\tvar controller = sf.controller.modelName(element);\r\n\t\t\tloopParser(controller, element, script, targetNode, parent);\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t}\r\n\r\n\t// Reset model properties\r\n\t// Don't call if the removed element is TEXT or #comment\r\n\tvar DOMNodeRemoved = scope.DOMNodeRemoved = function(element){\r\n\t\tif(element.hasAttribute('sf-controller') !== false){\r\n\t\t\tvar modelName = element.getAttribute('sf-controller');\r\n\r\n\t\t\tremoveModelBinding(modelName);\r\n\t\t\tif(element.sf$component !== undefined){\r\n\t\t\t\tvar modelFrom = element.sf$componentFrom;\r\n\t\t\t\tvar components = sf.component.available[modelFrom];\r\n\t\t\t\tcomponents.splice(components.indexOf(modelName), 1);\r\n\t\t\t\tinternal.component.triggerEvent(modelFrom, 'removed', self.root[modelName]);\r\n\t\t\t\tdelete self.root[modelName];\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar temp = $('[sf-controller]', element);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar modelName = temp[i].getAttribute('sf-controller');\r\n\r\n\t\t\tremoveModelBinding(modelName);\r\n\t\t\tif(element.sf$component !== undefined){\r\n\t\t\t\tmodelName = element.sf$componentFor;\r\n\t\t\t\tvar modelFrom = element.sf$componentFrom;\r\n\t\t\t\tvar components = sf.component.available[modelName];\r\n\t\t\t\tcomponents.splice(components.indexOf(modelName), 1);\r\n\t\t\t\tinternal.component.triggerEvent(modelFrom, 'removed', self.root[modelName]);\r\n\t\t\t\tdelete self.root[modelName];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsf(function(){\r\n\t\tvar everyRemovedNodes = function(nodes){\r\n\t\t\tif(nodes.nodeType !== 1 || nodes.firstElementChild === null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(nodes.sf$elementReferences !== undefined) return;\r\n\t\t\tDOMNodeRemoved(nodes);\r\n\t\t}\r\n\r\n\t\tif(typeof MutationObserver === 'function' && MutationObserver.prototype.observe){\r\n\t\t\tvar everyRecords = function(record){\r\n\t\t\t\trecord.removedNodes.forEach(everyRemovedNodes);\r\n\t\t\t}\r\n\r\n\t\t\tvar observer = new MutationObserver(function(records){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\trecords.forEach(everyRecords);\r\n\t\t\t});\r\n\r\n\t\t\tobserver.observe(document.body, { childList: true, subtree: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.body.addEventListener('DOMNodeRemoved', function(e){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\teveryRemovedNodes(e.target);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tvar removeModelBinding = self.reset = function(modelName){\r\n\t\tvar ref = self.root[modelName];\r\n\t\tif(ref === undefined)\r\n\t\t\treturn;\r\n\r\n\t\tvar bindedKey = ref.sf$bindedKey;\r\n\t\tvar temp = null;\r\n\t\tfor(var key in bindedKey){\r\n\t\t\tdelete bindedKey[key];\r\n\r\n\t\t\tif(ref[key] === undefined || ref[key] === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(ref[key].constructor === String ||\r\n\t\t\t\tref[key].constructor === Number ||\r\n\t\t\t\tref[key].constructor === Boolean\r\n\t\t\t){/* Ok */}\r\n\r\n\t\t\telse if(ref[key].constructor === Array){\r\n\t\t\t\tif(ref[key].$virtual){\r\n\t\t\t\t\tref[key].$virtual.destroy();\r\n\t\t\t\t\tdelete ref[key].$virtual;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset property without copying the array\r\n\t\t\t\ttemp = ref[key].splice('obtain');\r\n\t\t\t\tdelete ref[key];\r\n\t\t\t\tref[key] = temp;\r\n\t\t\t}\r\n\t\t\telse continue;\r\n\r\n\t\t\tif(Object.getOwnPropertyDescriptor(ref, key) === undefined)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Reconfigure / Remove property descriptor\r\n\t\t\tvar temp = ref[key];\r\n\t\t\tdelete ref[key];\r\n\t\t\tref[key] = temp;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction modelToViewBinding(model, propertyName, callback, elementBind, type){\r\n\t\t// Enable multiple element binding\r\n\t\tif(model.sf$bindedKey === undefined)\r\n\t\t\tinitBindingInformation(model);\r\n\r\n\t\tif(model.sf$bindedKey[propertyName] !== undefined){\r\n\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\tif(ref.indexOf(callback) === -1)\r\n\t\t\t\tref.push(callback);\r\n\r\n\t\t\tif(elementBind !== undefined){\r\n\t\t\t\tif(ref.input === undefined){\r\n\t\t\t\t\tref.input = [elementBind];\r\n\t\t\t\t\tref.input.type = type;\r\n\t\t\t\t}\r\n\t\t\t\telse ref.input.push(elementBind);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tmodel.sf$bindedKey[propertyName] = [callback];\r\n\r\n\t\tif(elementBind !== undefined){\r\n\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\tref.input = [elementBind];\r\n\t\t\tref.input.type = type;\r\n\t\t}\r\n\r\n\t\t// Proxy property\r\n\t\tif(Object.getOwnPropertyDescriptor(model, propertyName).set !== undefined)\r\n\t\t\treturn;\r\n\r\n\t\tvar objValue = model[propertyName]; // Object value\r\n\t\tObject.defineProperty(model, propertyName, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\t\t\tget:function(getAssigner){\r\n\t\t\t\treturn objValue;\r\n\t\t\t},\r\n\t\t\tset:function(val){\r\n\t\t\t\tif(objValue !== val){\r\n\t\t\t\t\tvar m2v = model['m2v$'+propertyName];\r\n\t\t\t\t\tvar out = inputBoundRunning === false ? model['out$'+propertyName] : undefined;\r\n\t\t\t\t\tvar callback = inputBoundRunning === false ? model['on$'+propertyName] : undefined;\r\n\r\n\t\t\t\t\tif(callback !== undefined || m2v !== undefined || out !== undefined){\r\n\t\t\t\t\t\tvar newValue1 = undefined; var newValue2 = undefined; var newValue3 = undefined;\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tif(m2v !== undefined)\r\n\t\t\t\t\t\t\t\tnewValue1 = m2v(objValue, val);\r\n\r\n\t\t\t\t\t\t\tif(out !== undefined)\r\n\t\t\t\t\t\t\t\tnewValue2 = out(objValue, val);\r\n\r\n\t\t\t\t\t\t\tif(callback !== undefined)\r\n\t\t\t\t\t\t\t\tnewValue3 = callback(objValue, val);\r\n\t\t\t\t\t\t}catch(e){console.error(e)}\r\n\r\n\t\t\t\t\t\tobjValue = (newValue3 !== undefined ? newValue3 : \r\n\t\t\t\t\t\t\t(newValue2 !== undefined ? newValue2 : \r\n\t\t\t\t\t\t\t(newValue1 !== undefined ? newValue1 : val)\r\n\t\t\t\t\t\t));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse objValue = val;\r\n\r\n\t\t\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\t\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\t\t\t\tif(inputBoundRun === ref[i]){\r\n\t\t\t\t\t\t\tif(inputBoundRunning !== true) // Avoid multiple assigment\r\n\t\t\t\t\t\t\t\tref[i](model, propertyName, ref.input);\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tref[i]();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinputBoundRunning = false;\r\n\t\t\t\treturn objValue;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvar dcBracket = /{{[^#][\\s\\S]*?}}/;\r\n\tself.bindElement = function(element){\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar data = self.extractPreprocess(element, null, modelName);\r\n\t\ttemplateParser(data, model, true);\r\n\t\tdelete data.addresses;\r\n\t\telement.parentNode.replaceChild(data.html, element);\r\n\t\telement = data.html;\r\n\r\n\t\tvar onChanges = function(){\r\n\t\t\tif(syntheticTemplate(element, data, undefined, model) === false)\r\n\t\t\t\t0; //No update\r\n\t\t};\r\n\r\n\t\tvar properties = data.modelRef_array;\r\n\t\tfor (var i = 0; i < properties.length; i++) {\r\n\t\t\tvar propertyName = properties[i][0];\r\n\r\n\t\t\tif(model[propertyName] === undefined)\r\n\t\t\t\tmodel[propertyName] = '';\r\n\r\n\t\t\tmodelToViewBinding(model, propertyName, onChanges);\r\n\t\t}\r\n\t}\r\n\r\n\tself.extractPreprocess = function(targetNode, mask, name){\r\n\t\tvar copy = targetNode.outerHTML;\r\n\r\n\t\t// Mask the referenced item\r\n\t\tif(mask !== null)\r\n\t\t\tcopy = copy.split('#'+mask).join('_model_');\r\n\r\n\t\t// Extract data to be parsed\r\n\t\tcopy = uniqueDataParser(copy, null, mask, name, '#noEval');\r\n\t\tvar preParsed = copy[1];\r\n\t\tvar _content_ = copy[2];\r\n\t\tcopy = dataParser(copy[0], null, mask, name, '#noEval', preParsed);\r\n\r\n\t\tfunction findModelProperty(){\r\n\t\t\tif(mask === null){\r\n\t\t\t\t// Get model keys and sort by text length, make sure the longer one is from first index to avoid wrong match\r\n\t\t\t\tvar extract = RegExp('('+self.modelKeys(self.root[name]).sort(function(a, b){\r\n\t\t\t\t\treturn b.length - a.length\r\n\t\t\t\t}).join('|')+')', 'g');\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tvar extract = RegExp('\\\\b(?:_model_|'+mask+')\\\\.([a-zA-Z0-9.[\\'\\\\]]+)(?:$|[^\\'\\\\]])', 'g');\r\n\t\t\tvar found = {};\r\n\r\n\t\t\tfor (var i = 0; i < preParsed.length; i++) {\r\n\t\t\t\tvar current = preParsed[i];\r\n\r\n\t\t\t\t// Text or attribute\r\n\t\t\t\tif(current.type === 0){\r\n\t\t\t\t\tcurrent.data[0].split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(found[match] === undefined) found[match] = [i];\r\n\t\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Dynamic data\r\n\t\t\t\tif(current.type === 1){\r\n\t\t\t\t\tvar checkList = current.if.join(';');\r\n\r\n\t\t\t\t\tif(current.elseValue !== null)\r\n\t\t\t\t\t\tcheckList += ';' + current.elseValue;\r\n\r\n\t\t\t\t\tfor (var a = 0; a < current.elseIf.length; a++) {\r\n\t\t\t\t\t\tcheckList += current.elseIf[a].join(';');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(current.type === 2)\r\n\t\t\t\t\tvar checkList = current.data[0];\r\n\r\n\t\t\t\tcheckList = checkList.replace(/_result_ \\+= _content_\\.take\\(.*?, ([0-9]+)\\);/g, function(full, match){\r\n\t\t\t\t\treturn _content_[match];\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcheckList.split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found[match] === undefined) found[match] = [i];\r\n\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn found;\r\n\t\t}\r\n\r\n\t\t// Build element and start addressing\r\n\t\tcopy = $.parseElement(copy)[0];\r\n\t\tvar nodes = self.queuePreprocess(copy, true).reverse();\r\n\t\tvar addressed = [];\r\n\r\n\t\tfunction addressAttributes(currentNode){\r\n\t\t\tvar attrs = currentNode.attributes;\r\n\t\t\tvar keys = [];\r\n\t\t\tvar indexes = 0;\r\n\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\tvar found = attrs[a].value.split('{{%=');\r\n\t\t\t\tif(found.length !== 1){\r\n\t\t\t\t\tif(attrs[a].name[0] === ':'){\r\n\t\t\t\t\t\tvar key = {\r\n\t\t\t\t\t\t\tname:attrs[a].name.split(':').join(''),\r\n\t\t\t\t\t\t\tvalue:attrs[a].value\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tcurrentNode.removeAttribute(attrs[a].name);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse var key = {\r\n\t\t\t\t\t\tname:attrs[a].name,\r\n\t\t\t\t\t\tvalue:attrs[a].value\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tindexes = [];\r\n\t\t\t\t\tfound = key.value.replace(/{{%=([0-9]+)/g, function(full, match){\r\n\t\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found === '' && indexes.length === 1)\r\n\t\t\t\t\t\tkey.direct = indexes[0];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tkey.parse_index = indexes;\r\n\r\n\t\t\t\t\tkeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn keys;\r\n\t\t}\r\n\r\n\t\tvar currentElement = addressAttributes(copy);\r\n\t\tif(currentElement.length !== 0)\r\n\t\t\taddressed.push({\r\n\t\t\t\tnodeType:1,\r\n\t\t\t\taddress:[0],\r\n\t\t\t\tattributes:currentElement\r\n\t\t\t});\r\n\r\n\t\tfor (var i = 0; i < nodes.length; i++) {\r\n\t\t\tvar temp = {\r\n\t\t\t\tnodeType:nodes[i].nodeType\r\n\t\t\t};\r\n\r\n\t\t\tif(temp.nodeType === 1){ // Element\r\n\t\t\t\ttemp.attributes = addressAttributes(nodes[i]);\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\telse if(temp.nodeType === 3){ // Text node\r\n\t\t\t\tvar innerHTML = nodes[i].textContent;\r\n\t\t\t\tvar indexes = [];\r\n\r\n\t\t\t\tinnerHTML.replace(/{{%%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Check for dynamic mode\r\n\t\t\t\tif(indexes.length !== 0){\r\n\t\t\t\t\tinnerHTML = innerHTML.split(/{{%%=[0-9]+/gm);\r\n\t\t\t\t\tfor (var a = 0; a < innerHTML.length; a++) {\r\n\t\t\t\t\t\tinnerHTML[a] = trimIndentation(innerHTML[a]).trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodes[i].textContent = innerHTML.shift();\r\n\r\n\t\t\t\t\tvar parent = nodes[i].parentNode;\r\n\t\t\t\t\tvar nextSibling = nodes[i].nextSibling;\r\n\r\n\t\t\t\t\t// Dynamic boundary start\r\n\t\t\t\t\tvar addressStart = null;\r\n\t\t\t\t\tif(indexes.length !== 0 && nodes[i].textContent.length !== 0)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i], true);\r\n\t\t\t\t\telse if(nodes[i].previousSibling !== null)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i].previousSibling, true);\r\n\r\n\t\t\t\t\t// Find boundary ends\r\n\t\t\t\t\tvar commentFlag = [];\r\n\t\t\t\t\tfor(var a = 0; a < indexes.length; a++){\r\n\t\t\t\t\t\tvar flag = document.createComment('');\r\n\t\t\t\t\t\tparent.insertBefore(flag, nextSibling);\r\n\t\t\t\t\t\tcommentFlag.push({\r\n\t\t\t\t\t\t\tnodeType:-1,\r\n\t\t\t\t\t\t\tparse_index:indexes[a],\r\n\t\t\t\t\t\t\tstartFlag:addressStart,\r\n\t\t\t\t\t\t\taddress:$.getSelector(flag, true)\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(innerHTML[a]){\r\n\t\t\t\t\t\t\tvar textNode = document.createTextNode(innerHTML[a]);\r\n\t\t\t\t\t\t\tparent.insertBefore(textNode, nextSibling);\r\n\r\n\t\t\t\t\t\t\t// Get new start flag\r\n\t\t\t\t\t\t\tif(a + 1 < indexes.length)\r\n\t\t\t\t\t\t\t\taddressStart = $.getSelector(textNode, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Merge boundary address\r\n\t\t\t\t\tArray.prototype.push.apply(addressed, commentFlag);\r\n\t\t\t\t\tif(nodes[i].textContent === ''){\r\n\t\t\t\t\t\tnodes[i].remove();\r\n\t\t\t\t\t\tfor (var a = 0; a < commentFlag.length; a++) {\r\n\t\t\t\t\t\t\tvar ref = commentFlag[a].address;\r\n\t\t\t\t\t\t\tref[ref.length - 1]--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(nodes[i].textContent.search(/{{%=[0-9]+/) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if it's only model value\r\n\t\t\t\tindexes = [];\r\n\t\t\t\tinnerHTML = nodes[i].textContent.replace(/{{%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(innerHTML === '' && indexes.length === 1)\r\n\t\t\t\t\ttemp.direct = indexes[0];\r\n\t\t\t\telse{\r\n\t\t\t\t\ttemp.value = nodes[i].textContent;\r\n\t\t\t\t\ttemp.parse_index = indexes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\taddressed.push(temp);\r\n\t\t}\r\n\r\n\t\tvar modelReference = findModelProperty();\r\n\t\tvar keys = Object.keys(modelReference);\r\n\t\tvar asArray = [];\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tasArray.push([keys[i], keys[i].split('.')]);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\thtml:copy,\r\n\t\t\tparse:preParsed,\r\n\t\t\taddresses:addressed,\r\n\t\t\tmodelReference:modelReference,\r\n\t\t\tmodelRef_array:asArray\r\n\t\t};\r\n\t}\r\n\r\n\tvar enclosedHTMLParse = false;\r\n\tvar excludes = ['HTML','HEAD','STYLE','LINK','META','SCRIPT','OBJECT','IFRAME'];\r\n\tself.queuePreprocess = function(targetNode, extracting){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = childNodes.length - 1; i >= 0; i--) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\r\n\t\t\tif(extracting === undefined && excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tif(enclosedHTMLParse === true) continue;\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\r\n\t\t\t\t// Skip element and it's childs that already bound to prevent vulnerability\r\n\t\t\t\tif(attrs['sf-bind-key'] || attrs['sf-repeat-this'] || attrs['sf-bind-list']) continue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tArray.prototype.push.apply(temp, self.queuePreprocess(currentNode, extracting));\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tif(currentNode.textContent.length === 0){\r\n\t\t\t\t\tcurrentNode.remove();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// The scan is from bottom to first index\r\n\t\t\t\tvar enclosing = currentNode.textContent.indexOf('{[');\r\n\t\t\t\tif(enclosing !== -1)\r\n\t\t\t\t\tenclosedHTMLParse = false;\r\n\t\t\t\telse if(enclosedHTMLParse === true)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Start enclosed if closing pattern was found\r\n\t\t\t\tvar enclosed = currentNode.textContent.indexOf(']}');\r\n\t\t\t\tif(enclosed !== -1 && (enclosing === -1 || enclosing > enclosed)){ // avoid {[ ... ]}\r\n\t\t\t\t\tenclosedHTMLParse = true; // when ]} ... \r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tif(extracting === undefined){\r\n\t\t\t\t\t\ttemp.push(currentNode.parentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn temp;\r\n\t}\r\n\r\n\tself.parsePreprocess = function(nodes, queued){\r\n\t\tfor (var a = 0; a < nodes.length; a++) {\r\n\t\t\t// Get reference for debugging\r\n\t\t\tvar current = processingElement = nodes[a];\r\n\r\n\t\t\tvar modelElement = sf.controller.modelElement(current);\r\n\t\t\tif(modelElement === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar model = modelElement.getAttribute('sf-controller');\r\n\r\n\t\t\tif(queued !== undefined)\r\n\t\t\t\tcurrent.classList.remove('sf-dom-queued');\r\n\r\n\t\t\t// Check if it's component\r\n\t\t\tif(self.root[model] === undefined && sf.component.registered[model])\r\n\t\t\t\tmodel = sf.component.new(model, modelElement);\r\n\r\n\t\t\tvar modelRef = self.root[model] || root_(model);\r\n\r\n\t\t\t// Double check if the child element already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(current.innerHTML)){\r\n\t\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\t\tconsole.log(processingElement.cloneNode(true));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(current.hasAttribute('sf-bind-ignore') === false)\r\n\t\t\t\tself.bindElement(current);\r\n\t\t\telse{\r\n\t\t\t\tvar temp = uniqueDataParser(current.innerHTML, modelRef, false, model);\r\n\t\t\t\tcurrent.innerHTML = dataParser(temp, modelRef, false, model);\r\n\t\t\t\tvar attrs = current.attributes;\r\n\t\t\t\tfor (var i = 0; i < attrs.length; i++) {\r\n\t\t\t\t\tif(attrs[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tvar attr = attrs[i];\r\n\t\t\t\t\t\tattr.value = dataParser(attr.value, modelRef, false, model);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initBindingInformation(modelRef){\r\n\t\tif(modelRef.sf$bindedKey !== undefined)\r\n\t\t\treturn;\r\n\r\n\t\t// Element binding data\r\n\t\tObject.defineProperty(modelRef, 'sf$bindedKey', {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable:false,\r\n\t\t\twritable:true,\r\n\t\t\tvalue:{}\r\n\t\t});\r\n\t}\r\n})();","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tself.pending = {};\r\n\tself.active = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tif(sf.component.registered[name]){\r\n\t\t\tsf.component.registered[name][1] = func;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tself.pending[name] = func;\r\n\t}\r\n\r\n\tself.modelScope = function(element, func){\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = element.getAttribute('sf-bind-list');\r\n\t\tif(!bindedList){\r\n\t\t\tvar parentEl = $.parent(element, '[sf-bind-list]');\r\n\t\t\tif(parentEl !== null)\r\n\t\t\t\tbindedList = parentEl.getAttribute('sf-bind-list');\r\n\t\t}\r\n\t\telse var parentEl = element;\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(sf.model.root[model], -1);\r\n\t\t\telse return sf.model.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = $.prevAll(parentEl, '[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(sf.model.root[model][bindedList], bindedListIndex);\r\n\t\telse return sf.model.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.modelElement = function(element){\r\n\t\tif(element.nodeType === 1 && element.hasAttribute('sf-controller'))\r\n\t\t\treturn element;\r\n\r\n\t\treturn $.parent(element, '[sf-controller]');\r\n\t}\r\n\r\n\tself.modelName = function(element){\r\n\t\tvar name = self.modelElement(element);\r\n\t\tif(name === null){\r\n\t\t\tconsole.error(\"Can't find any controller for\", element);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tname = name.getAttribute('sf-controller');\r\n\r\n\t\t// Initialize it first\r\n\t\tif(name !== undefined && !self.active[name])\r\n\t\t\tself.run(name);\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = e.target;\r\n\t\tvar script = element.getAttribute('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = $.parent(element, '[sf-click]');\r\n\t\t\tscript = element.getAttribute('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = $.parent(element, '[sf-controller]').getAttribute('sf-controller');\r\n\r\n\t\tif(!sf.model.root[model])\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(sf.model.root[model]).join('|');\r\n\t\tscript = avoidQuotes(script, function(script_){\r\n\t\t\treturn script_.replace(RegExp(sf.regex.strictVar+'('+modelKeys+')\\\\b', 'g'), function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script[0];\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(e) {\r\n\t\t\tmethod = false;\r\n\t\t}\r\n\r\n\t\tif(!method){\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot call `'+method_+'`]\\n', element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript.shift();\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0){\r\n\t\t\t// Replace `this` to `element`\r\n\t\t\tscript = eval(('['+script+']').replace(/,this|\\[this/g, function(found){\r\n\t\t\t\treturn found[0] + 'element';\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif(!script)\r\n\t\t\tscript = [];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element, script);\r\n\t\t\te.preventDefault();\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', element, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tself.run = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.run(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(sf.component.registered[name])\r\n\t\t\treturn console.error(\"'\"+name+\"' is registered as a component\");\r\n\r\n\t\tif(self.pending[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\r\n\t\t\tself.pending[name](sf.model.root[name], root_);\r\n\t\t\tself.active[name] = true;\r\n\t\t\tdelete self.pending[name];\r\n\t\t}\r\n\r\n\t\tif(sf.model.root[name] === undefined)\r\n\t\t\tsf.model.root[name] = {};\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], root_);\r\n\t}\r\n\r\n\tself.init = function(parent){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(name);\r\n\t\t\t});\r\n\r\n\t\tvar temp = $('[sf-controller]', parent || document.body);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tself.run(temp[i].getAttribute('sf-controller'));\r\n\t\t}\r\n\t}\r\n\r\n\t// Create listener for sf-click\r\n\tdocument.addEventListener('DOMContentLoaded', function(){\r\n\t\t$.on(document.body, 'click', '[sf-click]', listenSFClick);\r\n\t}, {capture:true, once:true});\r\n}\r\n\r\nvar root_ = function(scope){\r\n\tif(sf.component.registered[scope]){\r\n\t\tvar available = [];\r\n\t\tvar component = sf.component.available[scope];\r\n\t\tif(component !== undefined){\r\n\t\t\tfor (var i = 0; i < component.length; i++) {\r\n\t\t\t\tavailable.push(sf.model.root[component[i]]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn available;\r\n\t}\r\n\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\treturn sf.model.root[scope];\r\n}","/*\r\n  Special Thanks to Vladimir Kharlampidi\r\n  https://github.com/nolimits4web/\r\n*/\r\n\r\nvar globals = {};\r\nvar jsonpRequests = 0;\r\nfunction Request(requestOptions) {\r\n    var globalsNoCallbacks = Object.assign({}, globals);\r\n    ('beforeCreate beforeOpen beforeSend error complete success statusCode').split(' ').forEach(function (callbackName) {\r\n        delete globalsNoCallbacks[callbackName];\r\n    });\r\n    var defaults = Object.assign({\r\n        url: window.location.toString(),\r\n        method: 'GET',\r\n        data: false,\r\n        async: true,\r\n        cache: true,\r\n        user: '',\r\n        password: '',\r\n        headers: {},\r\n        xhrFields: {},\r\n        statusCode: {},\r\n        processData: true,\r\n        dataType: 'text',\r\n        contentType: 'application/x-www-form-urlencoded',\r\n        timeout: 0,\r\n    }, globalsNoCallbacks);\r\n    var options = Object.assign({}, defaults, requestOptions);\r\n    var proceedRequest;\r\n    // Function to run XHR callbacks and events\r\n    function fireCallback(callbackName) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        /*\r\n          Callbacks:\r\n          beforeCreate (options),\r\n          beforeOpen (xhr, options),\r\n          beforeSend (xhr, options),\r\n          error (xhr, status),\r\n          complete (xhr, stautus),\r\n          success (response, status, xhr),\r\n          statusCode ()\r\n        */\r\n        var globalCallbackValue;\r\n        var optionCallbackValue;\r\n        if (globals[callbackName]) {\r\n            globalCallbackValue = globals[callbackName].apply(globals, data);\r\n        }\r\n        if (options[callbackName]) {\r\n            optionCallbackValue = options[callbackName].apply(options, data);\r\n        }\r\n        if (typeof globalCallbackValue !== 'boolean')\r\n            globalCallbackValue = true;\r\n        if (typeof optionCallbackValue !== 'boolean')\r\n            optionCallbackValue = true;\r\n        return (globalCallbackValue && optionCallbackValue);\r\n    }\r\n    // Before create callback\r\n    proceedRequest = fireCallback('beforeCreate', options);\r\n    if (proceedRequest === false)\r\n        return undefined;\r\n    // For jQuery guys\r\n    if (options.type)\r\n        options.method = options.type;\r\n    // Parameters Prefix\r\n    var paramsPrefix = options.url.indexOf('?') >= 0 ? '&' : '?';\r\n    // UC method\r\n    var method = options.method.toUpperCase();\r\n    // Data to modify GET URL\r\n    if ((method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') && options.data) {\r\n        var stringData = void 0;\r\n        if (typeof options.data === 'string') {\r\n            // Should be key=value string\r\n            if (options.data.indexOf('?') >= 0)\r\n                stringData = options.data.split('?')[1];\r\n            else\r\n                stringData = options.data;\r\n        }\r\n        else {\r\n            // Should be key=value object\r\n            stringData = serializeQuery(options.data);\r\n        }\r\n        if (stringData.length) {\r\n            options.url += paramsPrefix + stringData;\r\n            if (paramsPrefix === '?')\r\n                paramsPrefix = '&';\r\n        }\r\n    }\r\n    // JSONP\r\n    if (options.dataType === 'json' && options.url.indexOf('callback=') >= 0) {\r\n        var callbackName_1 = \"jsonp_\" + (Date.now() + ((jsonpRequests += 1)));\r\n        var abortTimeout_1;\r\n        var callbackSplit = options.url.split('callback=');\r\n        var requestUrl = callbackSplit[0] + \"callback=\" + callbackName_1;\r\n        if (callbackSplit[1].indexOf('&') >= 0) {\r\n            var addVars = callbackSplit[1].split('&').filter(function (el) { return el.indexOf('=') > 0; }).join('&');\r\n            if (addVars.length > 0)\r\n                requestUrl += \"&\" + addVars;\r\n        }\r\n        // Create script\r\n        var script_1 = document.createElement('script');\r\n        script_1.type = 'text/javascript';\r\n        script_1.onerror = function onerror() {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('error', null, 'scripterror');\r\n            fireCallback('complete', null, 'scripterror');\r\n        };\r\n        script_1.src = requestUrl;\r\n        // Handler\r\n        window[callbackName_1] = function jsonpCallback(data) {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('success', data);\r\n            script_1.parentNode.removeChild(script_1);\r\n            script_1 = null;\r\n            delete window[callbackName_1];\r\n        };\r\n        document.querySelector('head').appendChild(script_1);\r\n        if (options.timeout > 0) {\r\n            abortTimeout_1 = setTimeout(function () {\r\n                script_1.parentNode.removeChild(script_1);\r\n                script_1 = null;\r\n                fireCallback('error', null, 'timeout');\r\n            }, options.timeout);\r\n        }\r\n        return undefined;\r\n    }\r\n    // Cache for GET/HEAD requests\r\n    if (method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') {\r\n        if (options.cache === false) {\r\n            options.url += paramsPrefix + \"_nocache\" + Date.now();\r\n        }\r\n    }\r\n    // Create XHR\r\n    var xhr = new XMLHttpRequest();\r\n    // Save Request URL\r\n    xhr.requestUrl = options.url;\r\n    xhr.requestParameters = options;\r\n    // Before open callback\r\n    proceedRequest = fireCallback('beforeOpen', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Open XHR\r\n    xhr.open(method, options.url, options.async, options.user, options.password);\r\n    // Create POST Data\r\n    var postData = null;\r\n    if ((method === 'POST' || method === 'PUT' || method === 'PATCH') && options.data) {\r\n        if (options.processData) {\r\n            var postDataInstances = [ArrayBuffer, Blob, Document, FormData];\r\n            // Post Data\r\n            if (postDataInstances.indexOf(options.data.constructor) >= 0) {\r\n                postData = options.data;\r\n            }\r\n            else {\r\n                // POST Headers\r\n                var boundary = \"---------------------------\" + Date.now().toString(16);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    xhr.setRequestHeader('Content-Type', \"multipart/form-data; boundary=\" + boundary);\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader('Content-Type', options.contentType);\r\n                }\r\n                postData = '';\r\n                var data = serializeQuery(options.data);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    data = data.split('&');\r\n                    var newData = [];\r\n                    for (var i = 0; i < data.length; i += 1) {\r\n                        newData.push(\"Content-Disposition: form-data; name=\\\"\" + data[i].split('=')[0] + \"\\\"\\r\\n\\r\\n\" + data[i].split('=')[1] + \"\\r\\n\");\r\n                    }\r\n                    postData = \"--\" + boundary + \"\\r\\n\" + newData.join(\"--\" + boundary + \"\\r\\n\") + \"--\" + boundary + \"--\\r\\n\";\r\n                }\r\n                else if (options.contentType === 'application/json') {\r\n                    postData = JSON.stringify(options.data);\r\n                }\r\n                else {\r\n                    postData = data;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            postData = options.data;\r\n            xhr.setRequestHeader('Content-Type', options.contentType);\r\n        }\r\n    }\r\n    // Additional headers\r\n    if (options.headers) {\r\n        Object.keys(options.headers).forEach(function (headerName) {\r\n            xhr.setRequestHeader(headerName, options.headers[headerName]);\r\n        });\r\n    }\r\n    // Check for crossDomain\r\n    if (typeof options.crossDomain === 'undefined') {\r\n        // eslint-disable-next-line\r\n        options.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(options.url) && RegExp.$2 !== window.location.host;\r\n    }\r\n    if (!options.crossDomain) {\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    }\r\n    if (options.xhrFields) {\r\n        Object.assign(xhr, options.xhrFields);\r\n    }\r\n    var xhrTimeout;\r\n    // Handle XHR\r\n    xhr.onload = function onload() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 0) {\r\n            var responseData = void 0;\r\n            if (options.dataType === 'json') {\r\n                var parseError = void 0;\r\n                try {\r\n                    responseData = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (err) {\r\n                    parseError = true;\r\n                }\r\n                if (!parseError) {\r\n                    fireCallback('success', responseData, xhr.status, xhr);\r\n                }\r\n                else {\r\n                    fireCallback('error', xhr, 'parseerror');\r\n                }\r\n            }\r\n            else {\r\n                responseData = xhr.responseType === 'text' || xhr.responseType === '' ? xhr.responseText : xhr.response;\r\n                fireCallback('success', responseData, xhr.status, xhr);\r\n            }\r\n        }\r\n        else {\r\n            fireCallback('error', xhr, xhr.status);\r\n        }\r\n        if (options.statusCode) {\r\n            if (globals.statusCode && globals.statusCode[xhr.status])\r\n                globals.statusCode[xhr.status](xhr);\r\n            if (options.statusCode[xhr.status])\r\n                options.statusCode[xhr.status](xhr);\r\n        }\r\n        fireCallback('complete', xhr, xhr.status);\r\n    };\r\n    xhr.onerror = function onerror() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        fireCallback('error', xhr, xhr.status);\r\n        fireCallback('complete', xhr, 'error');\r\n    };\r\n    // Timeout\r\n    if (options.timeout > 0) {\r\n        xhr.onabort = function onabort() {\r\n            if (xhrTimeout)\r\n                clearTimeout(xhrTimeout);\r\n        };\r\n        xhrTimeout = setTimeout(function () {\r\n            xhr.abort();\r\n            fireCallback('error', xhr, 'timeout');\r\n            fireCallback('complete', xhr, 'timeout');\r\n        }, options.timeout);\r\n    }\r\n    // Ajax start callback\r\n    proceedRequest = fireCallback('beforeSend', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Send XHR\r\n    xhr.send(postData);\r\n    // Return XHR object\r\n    return xhr;\r\n}\r\nfunction RequestShortcut(method) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    var _a = [], url = _a[0], data = _a[1], success = _a[2], error = _a[3], dataType = _a[4];\r\n    if (typeof args[1] === 'function') {\r\n        url = args[0], success = args[1], error = args[2], dataType = args[3];\r\n    }\r\n    else {\r\n        url = args[0], data = args[1], success = args[2], error = args[3], dataType = args[4];\r\n    }\r\n    [success, error].forEach(function (callback) {\r\n        if (typeof callback === 'string') {\r\n            dataType = callback;\r\n            if (callback === success)\r\n                success = undefined;\r\n            else\r\n                error = undefined;\r\n        }\r\n    });\r\n    dataType = dataType || (method === 'json' || method === 'postJSON' ? 'json' : undefined);\r\n    var requestOptions = {\r\n        url: url,\r\n        method: method === 'post' || method === 'postJSON' ? 'POST' : 'GET',\r\n        data: data,\r\n        success: success,\r\n        error: error,\r\n        dataType: dataType,\r\n    };\r\n    if (method === 'postJSON') {\r\n        Object.assign(requestOptions, {\r\n            contentType: 'application/json',\r\n            processData: false,\r\n            crossDomain: true,\r\n            data: typeof data === 'string' ? data : JSON.stringify(data),\r\n        });\r\n    }\r\n    return Request(requestOptions);\r\n}\r\nObject.assign(Request, {\r\n    get: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['get'].concat(args));\r\n    },\r\n    post: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['post'].concat(args));\r\n    },\r\n    json: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    getJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    postJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['postJSON'].concat(args));\r\n    },\r\n});\r\nRequest.setup = function setup(options) {\r\n    if (options.type && !options.method) {\r\n        Object.assign(options, { method: options.type });\r\n    }\r\n    Object.assign(globals, options);\r\n};\r\nfunction serializeQuery(params, prefix) {\r\n    var key = Object.keys(params);\r\n    for (var i = 0; i < key.length; i++) {\r\n      var value = params[key[i]];\r\n      if (params.constructor === Array)\r\n          key[i] += prefix + \"[]\";\r\n      else if (params.constructor === Object)\r\n          key[i] = (prefix ? prefix + \"[\" + key[i] + \"]\" : key[i]);\r\n\r\n      if (typeof value === 'object')\r\n          key[i] = serializeQuery(value, key[i]);\r\n      else\r\n          key[i] = key[i] + \"=\" + encodeURIComponent(value);\r\n    }\r\n    return key.join('&');\r\n}\r\n$.ajax = sf.ajax = Request;","return sf;\r\n\r\n// ===== Module End =====\r\n})));","sf.router = new function(){\r\n\tvar self = this;\r\n\tself.loading = false;\r\n\tself.enabled = false;\r\n\tself.pauseRenderOnTransition = false;\r\n\tself.currentPage = [];\r\n\tvar initialized = false;\r\n\tvar lazyRouting = false;\r\n\tvar currentRouterURL = '';\r\n\r\n\t// Should be called if not using lazy page load\r\n\tself.init = function(targetNode){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init();\r\n\t\t\t});\r\n\r\n\t\t// Run 'before' event for new page view\r\n\t\tvar temp = $('[sf-controller], [sf-page]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tif(temp[i].getAttribute('sf-controller'))\r\n\t\t\t\tsf.controller.run(temp[i].getAttribute('sf-controller'));\r\n\t\t\t\r\n\t\t\tif(temp[i].getAttribute('sf-page')){\r\n\t\t\t\tvar name = temp[i].getAttribute('sf-page');\r\n\t\t\t\tbeforeEvent(name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinitialized = true;\r\n\t\tcurrentRouterURL = window.location.pathname;\r\n\t}\r\n\r\n\tfunction popstateListener(event) {\r\n\t\t// Don't continue if the last routing was error\r\n\t\tif(routingError){\r\n\t\t\troutingError = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\troutingBack = true;\r\n\t\tself.goto(window.location.pathname);\r\n\t}\r\n\r\n\tself.enable = function(status){\r\n\t\tif(status === undefined) status = true;\r\n\t\tif(self.enabled === status) return;\r\n\t\tself.enabled = status;\r\n\r\n\t\tif(status === true){\r\n\t\t\t// Create listener for link click\r\n\t\t\t$.on(document.body, 'click', 'a[href]', self.load);\r\n\r\n\t\t\t// Create listener when navigate backward\r\n\t\t\twindow.addEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$.off(document.body, 'click', 'a[href]', self.load);\r\n\t\t\twindow.removeEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t}\r\n\r\n\tvar before = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.before = function(name, func, index){\r\n\t\tif(!before[name])\r\n\t\t\tbefore[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(before[name].indexOf(func) === -1)\r\n\t\t\t\tbefore[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tbefore[name][index] = func;\r\n\t}\r\n\r\n\tvar after = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.after = function(name, func, index){\r\n\t\tif(!after[name])\r\n\t\t\tafter[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(after[name].indexOf(func) === -1)\r\n\t\t\t\tafter[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tafter[name][index] = func;\r\n\t}\r\n\r\n\t// Running 'before' new page going to be displayed\r\n\tvar beforeEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.push(name);\r\n\r\n\t\tif(before[name]){\r\n\t\t\tfor (var i = 0; i < before[name].length; i++) {\r\n\t\t\t\tbefore[name][i](sf.model);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Running 'after' old page going to be removed\r\n\tvar afterEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.splice(self.currentPage.indexOf(name), 1);\r\n\r\n\t\tif(after[name]){\r\n\t\t\tfor (var i = 0; i < after[name].length; i++) {\r\n\t\t\t\tafter[name][i](sf.model);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar onEvent = {\r\n\t\t'loading':[],\r\n\t\t'loaded':[],\r\n\t\t'special':[],\r\n\t\t'error':[]\r\n\t};\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\tself.lazyViewPoint = {};\r\n\t/*\r\n\t\t{\r\n\t\t\toldURlPattern:{\r\n\t\t\t\tnewURLPattern:'.viewPoint'\r\n\t\t\t}\r\n\t\t}\r\n\t*/\r\n\r\n\tself.load = function(ev){\r\n\t\tif(self.enabled !== true) return;\r\n\r\n\t\tvar elem = ev.target;\r\n\t\tif(!elem.href) return;\r\n\r\n\t\tif(!history.pushState || elem.hasAttribute('sf-router-ignore'))\r\n\t\t\treturn;\r\n\r\n\t\t// Make sure it's from current origin\r\n\t\tvar path = elem.href.replace(window.location.origin, '');\r\n\t\tif(path.indexOf('//') !== -1)\r\n\t\t\treturn;\r\n\r\n\t\tev.preventDefault()\r\n\t\treturn !self.goto(path);\r\n\t}\r\n\r\n\tvar RouterLoading = false;\r\n\tvar routingBack = false;\r\n\tvar routingError = false;\r\n\tself.goto = function(path, data, method){\r\n\t\tif(!method) method = 'GET';\r\n        else method = method.toUpperCase();\r\n\r\n\t\tif(!data) data = {};\r\n\r\n\t\tfor (var i = 0; i < onEvent['loading'].length; i++) {\r\n\t\t\tif(onEvent['loading'][i](path)) return;\r\n\t\t}\r\n\t\tvar oldPath = window.location.pathname;\r\n\t\tinitialized = false;\r\n\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\t\tRouterLoading = $.ajax({\r\n\t\t\turl:window.location.origin + path,\r\n\t\t\tmethod:method,\r\n            data:Object.assign(data, {\r\n                _scarlets:'.dynamic.'\r\n            }),\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\tif(initialized) return;\r\n\t\t\t\tlazyRouting = true;\r\n\r\n\t\t\t\t// Run 'loaded' event\r\n\t\t\t\tRouterLoading = false;\r\n\r\n\t\t\t\t// Find special data\r\n\t\t\t\tvar regex = RegExp('<!-- SF-Special:(.*?)-->', 'gm');\r\n\t\t\t\tvar special = regex.exec(data);\r\n\t\t\t\tif(special && special.length !== 1){\r\n\t\t\t\t\tspecial = special[1].split('--|&>').join('-->');\r\n\t\t\t\t\tspecial = JSON.parse(special);\r\n\r\n\t\t\t\t\tif(!isEmptyObject(special)){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['special'].length; i++) {\r\n\t\t\t\t\t\t\tif(onEvent['special'][i](special)) return;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DOMReference = false;\r\n\t\t\t\tvar foundAction = function(ref){\r\n\t\t\t\t\tDOMReference = $.findOne(ref);\r\n\r\n\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\tvar last = $.findOne('[sf-page]', DOMReference);\r\n\t\t\t\t\tafterEvent(last ? last.getAttribute('sf-page') : '/');\r\n\r\n\t\t\t\t\t// Redefine title if exist\r\n\t\t\t\t\tif(special && special.title)\r\n\t\t\t\t\t\t$('head > title').innerHTML = special.title;\r\n\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tfor(var oldURL in self.lazyViewPoint){\r\n\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\tfor(var newURL in self.lazyViewPoint[oldURL]){\r\n\t\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\t\tfoundAction(self.lazyViewPoint[oldURL][newURL]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(found) break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When the view point was not found\r\n\t\t\t\tif(!found){\r\n\t\t\t\t\t// Use fallback if exist\r\n\t\t\t\t\tif(sf.router.lazyViewPoint[\"@default\"])\r\n\t\t\t\t\t\tfoundAction(sf.router.lazyViewPoint[\"@default\"]);\r\n\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\t\t\tonEvent['error'][i]('sf.router.lazyViewPoint[\"'+oldURL+'\"][\"'+newURL+'\"] was not found');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Run 'before' event for new page view\r\n\t\t\t\tif(!DOMReference) DOMReference = document.body;\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', 'none');\r\n\r\n\t\t\t\t// Let page script running first, then update the data binding\r\n\t\t\t\tDOMReference.innerHTML = data;\r\n\r\n\t\t\t\t// Parse the DOM data binding\r\n\t\t\t\tsf.model.init(DOMReference);\r\n\r\n\t\t\t\t// Init template to model binding\r\n\t\t\t\tvar temp = $('[sf-page]', DOMReference);\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tbeforeEvent(temp[i].getAttribute('sf-page'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', '');\r\n\r\n\t\t\t\trouterLoaded(currentRouterURL, path, DOMReference);\r\n\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tlazyRouting = false;\r\n\r\n\t\t\t\tcurrentRouterURL = path;\r\n\t\t\t\troutingError = false;\r\n\t\t\t},\r\n\t\t\terror:function(xhr, data){\r\n\t\t\t\troutingError = true;\r\n\t\t\t\tif(xhr.aborted) return;\r\n\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\tonEvent['error'][i](xhr.status, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Back on error\r\n\t\t\t\twindow.history.back();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!routingBack)\r\n\t\t\twindow.history.pushState(null, \"\", path);\r\n\r\n\t\troutingBack = false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Trigger loaded event\r\n\tfunction routerLoaded(currentRouterURL, path, data){\r\n\t\tfor (var i = 0; i < onEvent['loaded'].length; i++) {\r\n\t\t\tonEvent['loaded'][i](currentRouterURL, path, data);\r\n\t\t}\r\n\t}\r\n};","sf.internal.virtual_scroll = new function(){\r\n\tvar self = this;\r\n\tvar styleInitialized = false;\r\n\tvar scrollingByScript = false;\r\n\r\n\t// before and after\r\n\tself.prepareCount = 4; // 4, 8, 12, 16, ...\r\n\r\n\tself.handle = function(list, targetNode, parentNode){\r\n\t\tif(!styleInitialized){\r\n\t\t\tinitStyles();\r\n\t\t\tstyleInitialized = true;\r\n\t\t}\r\n\r\n\t\tvar dynamicList = false;\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvirtual.reset = function(reinitOnly){\r\n\t\t\tvirtual.DOMCursor = 0; // cursor of first element in DOM tree as a cursor\r\n\r\n\t\t\tvirtual.bounding.ceiling = -1;\r\n\t\t\tvirtual.bounding.floor = 0;\r\n\r\n\t\t\tvirtual.vCursor.ceiling = null; // for forward direction\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.firstElementChild; // for backward direction\r\n\r\n\t\t\tvirtual.bounding.initial = virtual.dCursor.ceiling.offsetTop;\r\n\t\t\trefreshScrollBounding(0, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.reinitCursor = function(){\r\n\t\t\tvirtual.vCursor.ceiling = virtual.dom.children[virtual.DOMCursor - 1] || null;\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.children[virtual.DOMCursor] || null;\r\n\t\t}\r\n\r\n\t\tvirtual.reinitScroll = function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.elements = function(){\r\n\t\t\treturn obtainElements(list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.dCursor = { // DOM Cursor\r\n\t\t\tceiling:parentNode.querySelector('.virtual-spacer.ceiling'),\r\n\t\t\tfloor:parentNode.querySelector('.virtual-spacer.floor')\r\n\t\t};\r\n\r\n\t\tvirtual.bounding = {};\r\n\t\tvirtual.vCursor = {};\r\n\r\n\t\tvirtual.reset();\r\n\t\tvirtual.targetNode = parentNode;\r\n\t\tvirtual.scrollHeight = virtual.dCursor.floor.offsetTop - virtual.bounding.initial;\r\n\r\n\t\tvar scroller = parentNode;\r\n\t\tvirtual.destroy = function(){\r\n\t\t\t$.off(scroller, 'scroll');\r\n\t\t\t$.off(parentNode, 'mousedown mouseup');\r\n\t\t\tvirtual.dom.innerHTML = '';\r\n\t\t\toffElementResize(parentNode);\r\n\r\n\t\t\tdelete list.$virtual;\r\n\t\t}\r\n\r\n\t\tvirtual.resetViewport = function(){\r\n\t\t\tvirtual.visibleLength = Math.floor(scroller.clientHeight / virtual.scrollHeight);\r\n\t\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\t\tif(virtual.preparedLength < 18)\r\n\t\t\t\tvirtual.preparedLength = 18;\r\n\t\t}\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tscroller = parentNode;\r\n\r\n\t\t\tvar length = parentNode.getAttribute('scroll-parent-index') || 0;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tscroller = scroller.parentElement;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.resetViewport();\r\n\r\n\t\t\tif(parentNode.classList.contains('sf-list-dynamic')){\r\n\t\t\t\tdynamicList = true;\r\n\t\t\t\tdynamicHeight(list, targetNode, parentNode, scroller);\r\n\t\t\t}\r\n\t\t\telse staticHeight(list, targetNode, parentNode, scroller);\r\n\t\t}, 500);\r\n\t}\r\n\r\n\t// Recommended for a list that have different element height\r\n\tfunction dynamicHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\r\n\t\t\t// Reset virtual spacer height\r\n\t\t\tceilingHeight = 0;\r\n\t\t\tfloorHeight = 0;\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller);\r\n\t\t\tfillViewport();\r\n\t\t}\r\n\r\n\t\t// Insert some element until reach visible height\r\n\t\tfillViewport();\r\n\r\n\t\tvirtual.visibleLength = parentNode.childElementCount - 2;\r\n\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\tvar temp = vCursor.floor;\r\n\t\t\tif(temp === null) break;\r\n\r\n\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t}\r\n\t\tvirtual.DOMCursor = 0;\r\n\r\n\t\tvar ceilingHeight = 0;\r\n\t\tvar floorHeight = 0;\r\n\t\tfunction previousCeiling(){\r\n\t\t\tvar temp = null;\r\n\t\t\tvar resetCeiling = false;\r\n\r\n\t\t\t// Add some element on the ceiling\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\ttemp = virtual.dom.lastElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.ceiling = temp.previousElementSibling;\r\n\t\t\t\tvirtual.DOMCursor--;\r\n\r\n\t\t\t\tceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tif(ceilingHeight > 0)\r\n\t\t\t\t\tceilingHeight -= getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(virtual.DOMCursor < self.prepareCount && !resetCeiling){\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\tresetCeiling = true;\r\n\t\t\t\t\ttemp = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(ceilingHeight < 0 || temp === null)\r\n\t\t\t\tceilingHeight = 0;\r\n\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\t// Remove some element on the floor\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = floor.previousElementSibling;\r\n\t\t\t\tfloorHeight += getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tvCursor.floor = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.floor === null)\r\n\t\t\t\tvCursor.ceiling = virtual.dom.lastElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tfunction fillViewport(){\r\n\t\t\t// Insert some element depend on prepared length\r\n\t\t\tvar length = virtual.preparedLength - (parentNode.childElementCount - 2);\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\ttemp = virtual.dom.firstElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction nextFloor(){\r\n\t\t\tvar temp = null;\r\n\t\t\tfillViewport();\r\n\r\n\t\t\tif(vCursor.floor !== null){\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\t// Add extra element based on prepare count\r\n\t\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\t\ttemp = vCursor.floor;\r\n\t\t\t\t\tif(temp === null) break;\r\n\r\n\t\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\t\tif(floorHeight > 0)\r\n\t\t\t\t\t\tfloorHeight -= getAbsoluteHeight(temp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(floorHeight < 0 || temp === null)\r\n\t\t\t\tfloorHeight = 0;\r\n\r\n\t\t\t// Remove some element on the ceiling\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\t\t\t\tceilingHeight += getAbsoluteHeight(temp);\r\n\t\t\t\tvirtual.DOMCursor++;\r\n\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\telse vCursor.ceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tvCursor.ceiling = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\t\trefreshScrollBounding(0, bounding, list, parentNode);\r\n\r\n\t\tif(virtual.callback_ !== undefined){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript) return;\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tif(scroller.scrollTop < bounding.ceiling){\r\n\t\t\t\t// console.log('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tpreviousCeiling();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\telse if(scroller.scrollTop > bounding.floor){\r\n\t\t\t\t// console.log('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tnextFloor();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\tif(virtual.callback !== undefined && list.length !== 0){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null &&\r\n\t\t\t\t\tscroller.scrollTop + scroller.clientHeight === scroller.scrollHeight\r\n\t\t\t\t){\r\n\t\t\t\t\tvirtual.callback.hitFloor(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null && scroller.scrollTop === 0){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_ && callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\t\tonElementResize(parentNode, function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t});\r\n\t}\r\n\r\n\t// Recommended for a list that have similar element height\r\n\tfunction staticHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\r\n\t\t// Insert visible element to dom tree\r\n\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\tif(virtual.dom.firstElementChild === null)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', virtual.dom.firstElementChild);\r\n\t\t}\r\n\r\n\t\tvirtual.refreshVirtualSpacer = refreshVirtualSpacer;\r\n\r\n\t\tfunction refreshVirtualSpacer(cursor){\r\n\t\t\tif(cursor >= self.prepareCount){\r\n\t\t\t\tceiling.style.height = (cursor - self.prepareCount) * virtual.scrollHeight + 'px';\r\n\t\t\t\tfloor.style.height = (list.length - virtual.preparedLength - cursor) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tceiling.style.height = cursor * virtual.scrollHeight + 'px'; //'0px';\r\n\t\t\t\tvar count = (list.length - virtual.preparedLength);\r\n\t\t\t\tfloor.style.height = (count || 0) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\r\n\t\trefreshVirtualSpacer(0);\r\n\t\trefreshScrollBounding(self.prepareCount, bounding, list, parentNode);\r\n\t\tbounding.ceiling = -1;\r\n\r\n\t\tvirtual.offsetTo = function(index){\r\n\t\t\treturn index * virtual.scrollHeight + ceiling.offsetTop;\r\n\t\t}\r\n\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tif(virtual.callback_ !== undefined){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tvar fromCeiling = true;\r\n\t\tvar scrollFocused = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript || scroller.scrollTop >= bounding.ceiling && scroller.scrollTop <= bounding.floor){\r\n\t\t\t\t// Fix chrome scroll anchoring bugs when scrolling at corner\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tif(scroller.scrollTop === 0 || scroller.scrollTop === scroller.scrollHeight - scroller.clientHeight){\r\n\t\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar cursor = Math.floor(scroller.scrollTop / virtual.scrollHeight);\r\n\t\t\tif(cursor + virtual.preparedLength > list.length)\r\n\t\t\t\tcursor = list.length - virtual.preparedLength;\r\n\r\n\t\t\tif(fromCeiling){\r\n\t\t\t\tif(cursor < self.prepareCount*2)\r\n\t\t\t\t\tcursor -= self.prepareCount;\r\n\r\n\t\t\t\t// Fix chrome scroll anchoring bugs\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t}\r\n\t\t\t\tfromCeiling = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cursor < self.prepareCount){\r\n\t\t\t\tcursor = 0;\r\n\t\t\t\tfromCeiling = true;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tvar changes = cursor - virtual.DOMCursor;\r\n\t\t\tif(cursor + changes >= list.length)\r\n\t\t\t\tchanges = cursor + changes - list.length;\r\n\r\n\t\t\tif(changes === 0){ // This should be fixed to improve performance and future bugs\r\n\t\t\t\t//console.warn(\"No changes (The scroll bounding is not correct)\");\r\n\t\t\t\tupdating = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.DOMCursor = cursor;\r\n\r\n\t\t\t// console.log(cursor, changes, bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\t\t\tmoveElementCursor(changes, list);\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\t\t\trefreshScrollBounding(cursor, bounding, list, parentNode);\r\n\t\t\t// console.log('a', bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\r\n\t\t\tif(virtual.callback !== undefined && list.length !== 0){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null){\r\n\t\t\t\t\tvirtual.callback.hitFloor(cursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(cursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_ && callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\r\n\t\t// For preventing scroll jump if scrolling over than viewport\r\n\t\tif(scroller === parentNode && navigator.userAgent.indexOf('Chrom') !== -1){\r\n\t\t\t$.on(parentNode, 'mousedown', function(){\r\n\t\t\t\tscrollFocused = true;\r\n\t\t\t});\r\n\t\t\t$.on(parentNode, 'mouseup', function(){\r\n\t\t\t\tscrollFocused = false;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction refreshScrollBounding(cursor, bounding, list, parentNode){\r\n\t\tvar temp = Math.floor(self.prepareCount / 2); // half of element preparation\r\n\t\tif(cursor < self.prepareCount){\r\n\t\t\tbounding.ceiling = -1;\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount * 2 + 1];\r\n\r\n\t\t\tif(bounding.floor !== undefined)\r\n\t\t\t\tbounding.floor = bounding.floor.offsetTop;\r\n\t\t\telse bounding.floor = parentNode.lastElementChild.offsetTop + 1000;\r\n\r\n\t\t\tbounding.floor -= bounding.initial;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if(parentNode.children[temp + 1] !== undefined)\r\n\t\t\t\tbounding.ceiling = parentNode.children[temp + 1].offsetTop; // -2 element\r\n\r\n\t\tif(list.$virtual.preparedLength !== undefined && cursor >= list.length - list.$virtual.preparedLength)\r\n\t\t\tbounding.floor = list.$virtual.dCursor.floor.offsetTop + list.$virtual.scrollHeight*2;\r\n\t\telse{\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount + 3].offsetTop; // +2 element\r\n\r\n\t\t\tif(parentNode.hasAttribute('scroll-reduce-floor')){\r\n\t\t\t\tbounding.floor -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t\tbounding.ceiling -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbounding.ceiling -= bounding.initial;\r\n\t\tbounding.floor -= bounding.initial;// scrollHeight - clientHeight\r\n\t}\r\n\r\n\tfunction moveElementCursor(changes, list){\r\n\t\tvar vDOM = list.$virtual.dom;\r\n\t\tvar vCursor = list.$virtual.vCursor;\r\n\t\tvar dCursor = list.$virtual.dCursor;\r\n\r\n\t\tif(changes > 0){ // forward\r\n\t\t\tvar ref = 0;\r\n\r\n\t\t\t// Select from virtual ceiling cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tref = vDOM.firstElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.ceiling.nextElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the ceiling to vDom\r\n\t\t\tfor (var i = changes; i > 0; i--) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.ceiling === null){\r\n\t\t\t\t\tvCursor.ceiling = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('afterBegin', vCursor.ceiling);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t\t\tvCursor.ceiling = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\t\t}\r\n\t\telse if(changes < 0){ // backward\r\n\t\t\tvar ref = 0;\r\n\t\t\tchanges = -changes;\r\n\r\n\t\t\t// Select from virtual floor cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tref = vDOM.lastElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.floor.previousElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the floor to vDom\r\n\t\t\tfor (var i = 0; i < changes; i++) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvCursor.floor = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('beforeEnd', vCursor.floor);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t\t\tvCursor.floor = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scrollTo(index, list, prepareCount, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar reduce = 0;\r\n\r\n\t\tif(index >= list.length - virtual.preparedLength){\r\n\t\t\treduce -= prepareCount;\r\n\t\t\tindex = list.length - virtual.preparedLength;\r\n\t\t}\r\n\r\n\t\tif(index - virtual.DOMCursor === 0 || index >= list.length) return;\r\n\r\n\t\tscrollingByScript = true;\r\n\r\n\t\t// Already on DOM tree\r\n\t\tif((virtual.DOMCursor === 0 && index < prepareCount + prepareCount/2) ||\r\n\t\t\t(virtual.DOMCursor + prepareCount/2 > index\r\n\t\t\t&& virtual.DOMCursor + prepareCount < index))\r\n\t\t\tscroller.scrollTop = parentNode.children[index - virtual.DOMCursor + 1].offsetTop;\r\n\r\n\t\t// Move cursor\r\n\t\telse {\r\n\t\t\tvar temp = null;\r\n\t\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\t\tvar floor = virtual.dCursor.floor;\r\n\t\t\tvar vCursor = virtual.vCursor;\r\n\r\n\t\t\t// DOM tree to virtual DOM\r\n\t\t\tvar length = parentNode.childElementCount - 2;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\r\n\t\t\t\t\tif(i === length-1)\r\n\t\t\t\t\t\tvCursor.floor = temp;\r\n\t\t\t\t}\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(index >= prepareCount){\r\n\t\t\t\tif(index < list.length - virtual.preparedLength)\r\n\t\t\t\t\tindex -= prepareCount;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treduce = prepareCount - index;\r\n\t\t\t\tvirtual.DOMCursor = index = 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\r\n\t\t\t// Virtual DOM to DOM tree\r\n\t\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\t\ttemp = virtual.dom.children[index];\r\n\t\t\t\tif(temp === undefined) break;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t\tvirtual.DOMCursor = index;\r\n\r\n\t\t\tvCursor.floor = virtual.dom.children[index] || null;\r\n\t\t\tvCursor.ceiling = vCursor.floor ? vCursor.floor.previousElementSibling : null;\r\n\r\n\t\t\tif(list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\tlist.$virtual.refreshVirtualSpacer(index);\r\n\r\n\t\t\trefreshScrollBounding(index, virtual.bounding, list, parentNode);\r\n\r\n\t\t\ttemp = parentNode.children[prepareCount - reduce + 1];\r\n\t\r\n\t\t\tif(temp !== undefined)\r\n\t\t\t\tscroller.scrollTop = temp.offsetTop - scroller.offsetTop;\r\n\t\t}\r\n\r\n\t\tscrollingByScript = false;\r\n\t}\r\n\r\n\tfunction removeUserScrollFocus(parentNode){\r\n\t\tparentNode.style.overflow = 'hidden';\r\n\t\tsetTimeout(function(){\r\n\t\t\tparentNode.style.overflow = '';\r\n\t\t}, 50);\r\n\t}\r\n\r\n\tfunction getAbsoluteHeight(el){\r\n\t  var styles = window.getComputedStyle(el);\r\n\t  var margin = parseInt(styles['marginTop']) + parseInt(styles['marginBottom']);\r\n\t  return el.offsetHeight + margin || 0;\r\n\t}\r\n\r\n\tfunction obtainElements(list, parentNode){\r\n\t\tvar exist = [];\r\n\t\tvar temp = undefined;\r\n\r\n\t\tvar length = list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = parentNode.childElementCount - 2;\r\n\t\tfor (var i = 1; i <= length; i++) {\r\n\t\t\ttemp = parentNode.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\t\t\r\n\t\t// Get elements length\r\n\t\tvar elementLength = list.$virtual.dom.childElementCount + length;\r\n\r\n\t\tlength = elementLength - length - list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[list.$virtual.DOMCursor + i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\treturn exist;\r\n\t}\r\n\r\n\tfunction refresh(force, list, prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer){\r\n\t\tvar cursor = list.$virtual.DOMCursor;\r\n\t\tvar additionalScroll = 0;\r\n\r\n\t\t// Find nearest cursor for current view position\r\n\t\tif(force){\r\n\t\t\tvar i = -1;\r\n\t\t\tvar length = list.$virtual.preparedLength;\r\n\r\n\t\t\tdo{\r\n\t\t\t\ti++;\r\n\t\t\t} while(i < length && parentNode.children[i].offsetTop < scroller.scrollTop);\r\n\r\n\t\t\tcursor = cursor + i;\r\n\t\t\tif(cursor > 0) cursor -= 1;\r\n\r\n\t\t\tadditionalScroll = scroller.scrollTop - parentNode.children[i].offsetTop;\r\n\t\t}\r\n\r\n\t\t// Force move cursor if element in the DOM tree was overloaded\r\n\t\tif(force || parentNode.childElementCount - 2 > list.$virtual.preparedLength){\r\n\t\t\tlist.$virtual.DOMCursor = list.length;\r\n\t\t\tvar moveTo = cursor;\r\n\t\t\tif(!force)\r\n\t\t\t\tmoveTo = cursor <= prepareCount ? cursor : (cursor + prepareCount);\r\n\r\n\t\t\tscrollTo(moveTo,\r\n\t\t\t\tlist,\r\n\t\t\t\tprepareCount,\r\n\t\t\t\tparentNode,\r\n\t\t\t\tscroller\r\n\t\t\t);\r\n\r\n\t\t\tscroller.scrollTop += additionalScroll;\r\n\t\t}\r\n\r\n\t\tif(refreshVirtualSpacer)\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\r\n\t\tif(checkCursorPosition)\r\n\t\t\tcheckCursorPosition();\r\n\r\n\t\trefreshScrollBounding(cursor, list.$virtual.bounding, list, parentNode);\r\n\t}\r\n\r\n\tvar _onElementResize = [];\r\n\tvar _onElementResize_timer = -1;\r\n\tfunction onElementResize(parentNode, callback){\r\n\t\tif(_onElementResize_timer === -1){\r\n\t\t\t_onElementResize_timer = setInterval(function(){\r\n\t\t\t\tvar temp = null;\r\n\t\t\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\t\t\ttemp = _onElementResize[i];\r\n\r\n\t\t\t\t\t// Check resize\r\n\t\t\t\t\tif(temp.element.scrollHeight === temp.height\r\n\t\t\t\t\t\t|| temp.element.scrollWidth === temp.width)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t// Check if it's removed from DOM\r\n\t\t\t\t\tif(temp.element.parentElement === null){\r\n\t\t\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.callback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(_onElementResize.length === 0){\r\n\t\t\t\t\tclearInterval(_onElementResize_timer);\r\n\t\t\t\t\t_onElementResize_timer = -1;\r\n\t\t\t\t}\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\r\n\t\t_onElementResize.push({\r\n\t\t\telement:parentNode,\r\n\t\t\tcallback:callback,\r\n\t\t\theight:parentNode.scrollHeight,\r\n\t\t\twidth:parentNode.scrollWidth\r\n\t\t});\r\n\t}\r\n\r\n\tfunction offElementResize(parentNode){\r\n\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\tif(_onElementResize[i].element === parentNode)\r\n\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Interval will be cleared when the array is empty\r\n\t}\r\n\r\n\tfunction initStyles(){\r\n\t\tvar style = document.getElementById('sf-styles');\r\n\r\n\t\tif(!style){\r\n\t\t\tstyle = document.createElement('style');\r\n\t\t\tstyle.id = 'sf-styles';\r\n        \tdocument.head.appendChild(style);\r\n\t\t}\r\n\r\n\t\tstyle.sheet.insertRule(\r\n\t\t'.sf-virtual-list .virtual-spacer{'+\r\n            'visibility: hidden;'+\r\n            'position: relative;'+\r\n            'height: 1px;'+\r\n            'transform-origin: 0 0;'+\r\n            'width: 1px;'+\r\n            'margin: 0;'+\r\n            'padding: 0;'+\r\n            'background: none;'+\r\n            'border: none;'+\r\n            'box-shadow: none;'+\r\n         '}', style.sheet.cssRules.length);\r\n\t}\r\n};"]}