{"version":3,"sources":["sf-a_init.js","sf-a_polyfill.js","sf-dom.js","sf-loader.js","sf-component.js","sf-model.js","sf-api.js","sf-controller.js","sf-e-ajax.js","sf-url.js","sf-z_end.js","sf-events.js","sf-views.js","sf-virtual_scroll.js"],"names":["global","factory","routerEval","code","eval","exports","module","sf","window","this","document","internal","stuff","constructor","Function","loader","onFinish","apply","arguments","tagName","model","root","controller","modelName","regex","getQuotes","validFunctionCall","strictVar","escapeHTML","uniqueDataParser","dataParser","arrayItemsObserve","allowedFunctionEval","for","if","while","_content_.take","console.log","avoidQuotes","str","func","noReturn","temp","es","replace","full","push","length","i","isEmptyObject","obj","key","compareObject","obj1","obj2","hiddenProperty","property","value","Object","defineProperty","enumerable","configurable","deepProperty","path","capitalizeLetters","name","toUpperCase","slice","join","assign","target","varArgs","TypeError","to","index","nextSource","nextKey","prototype","hasOwnProperty","call","writable","console","group","groupCollapsed","groupEnd","Element","remove","CharacterData","DocumentType","forEach","item","parentNode","removeChild","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","querySelectorAll","NodeList","callback","thisArg","location","origin","protocol","hostname","port","values","res","setPrototypeOf","proto","__proto__","Reflect_Construct","Reflect","construct","Parent","args","Class","a","instance","bind","_setPrototypeOf","dom","selector","context","parseElement","String","$","self","findOne","querySelector","parent","element","closest","parentElement","prevAll","isNext","result","findNodes","nextSibling","previousSibling","nextAll","on","event","once","tempCallback","ev","addEventListener","capture","sf$eventListener","off","events","split","ref","removeEventListener","splice","animateCSS","animationName","duration","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","style","webkitAnimationDuration","animationDuration","list","classList","add","setTimeout","emptyDOM","div","createElement","ul","tbody","tr","table","select","html","returnNode","tempDOM","indexOf","textContent","insertAdjacentHTML","escapeText","text","innerHTML","elements","documentElement","domReady","body","haveSymbol","getSelector","childIndexes","untilElement","names","id","test","unshift","e","array","substr","childNodes","extends_Dom7","el","keys","n","loadedContent","totalContent","DOMWasLoaded","DOMReady","turnedOff","whenDOMReady","whenDOMLoaded","whenProgress","onProgress","f","css","rel","href","head","appendChild","js","type","async","src","warn","isQueued","domLoadEvent","queuePreprocess","domStateEvent","readyState","error","resourceWaitTimer","setInterval","waitResources","clearInterval","listener","modelPending","undefined","scope","root_","pending","init","component","registered","available","bases","extend","defineComponent","base","outerHTML","triggerEvent","componentInit","newID","from","setAttribute","sf$component","sf$componentFrom","new","$item","isCreated","retriggered","hasAttribute","newElement","cloneNode","newObj","Array","firstElementChild","destroy","DOMNodeRemoved","HTMLElement","customElements","HTMLElement_wrap","Wrapper","getPrototypeOf","create","get","connectedCallback","define","err","run","bindingEnabled","processingElement","trimIndentation","indent","trim","RegExp","bracketMatch","chackValidFunctionCall","localEval","script","_model_","_modelScope","_content_","preventExecution","tempScript","check_","exec","lastIndex","log","_result_","_evaled_","onclick","escapeEscapedQuote","unescapeEscapedQuote","elseIfHandle","else_","scopes","elseIf","elseValue","currentElement","previousElementSibling","getAttribute","$virtual","DOMCursor","modelKeys","modelRef","templateParser_regex","REF_DIRECT","REF_IF","REF_EXEC","templateExec","parse","atIndex","parsed","data","JSON","stringify","templateParser","template","original","addresses","changesReference","pendingInsert","current","address","nodeType","refA","direct","match","cRef","dynamicFlag","parse_index","startFlag","attributes","refB","isValueInput","attribute","removeAttribute","sf$elementReferences","tDOM","insertBefore","syntheticCache","sf$cache","cache","modelRef_array","syntheticTemplate","changes","modelReference","newData","checkRelatedChanges","parseIndex","found","changes_","haveChanges","ref_","sf$haveChilds","sf$childRoot","reverse","currentDOM","notExist","isEqualNode","replaceChild","mask","runEval","preParsedReference","scopeMask","itemMask","preParsed","lastParsedIndex","prepared","actual","temp_","matched","exist","charCodeAt","take","passVar","currentIndex","strDeclare","firstTime","check","VarPass_","VarPass","s1","obtained","val","findElse","pop","shift","condition","bindArray","propertyName","targetNode","editProperty","refreshTimer","parentChilds","children","isKeyed","contains","eventVar","processElement","options","other","count","vEndRange","preparedLength","spacer","lastElementChild","height","reset","clearTimeout","reinitScroll","overflow","vDOM","theParent","update","index_a","other_sibling","other_parent","oldChild","referenceNode","vCursor","floor","insertAdjacentElement","currentEl","currentRemoved","startRemove","refreshVirtualSpacer","propertyProxy","subject","lastLength","reinitCursor","o","resetViewport","matchLeft","refresh","real","limit","callback_","var","virtual_scroll","handle","scroller","findScrollerElement","addScrollerStyle","needle","elRef","getElement","process","content","parentNode_","elem","hardRefresh","softRefresh","virtualChilds","childElement","childElementCount","loopParser","method","items","extractPreprocess","sf$bindedKey","initBindingInformation","set","callInputListener","v2m","newValue1","newValue2","old","inputBoundRunning","inputTextBound","fromSFFramework","viewInputted","typeData","Number","newValue","sfModel","sfBounded","inputFilesBound","files","inputCheckBoxBound","checked","Boolean","inputSelectBound","multiple","selectedOptions","assignElementData","arrayValue","selected","checkbox","inputBoundRun","Event","dispatchEvent","triggerInputEvent","elementBoundChanges","oneWay","toLowerCase","modelToViewBinding","bindInput","modelScope","alreadyInitialized","repeatedListBinding","queued","controller_","ceiling","after","nextElementSibling","before","router","enabled","sfPage","$page","afterModelBinding","routerLocalEvent","parsePreprocess","isScan","removeModelBinding","modelFrom","components","everyRemovedNodes","nodes","MutationObserver","observe","everyRecords","record","removedNodes","records","childList","subtree","bindedKey","getOwnPropertyDescriptor","elementBind","input","objValue","getAssigner","m2v","out","newValue3","dcBracket","bindElement","onChanges","properties","backup","copy","restore","addressed","addressAttributes","currentNode","attrs","indexes","addressStart","commentFlag","flag","createComment","textNode","createTextNode","search","extract","sort","b","checkList","full_","match_","findModelProperty","asArray","enclosedHTMLParse","excludes","extracting","nodeName","enclosing","enclosed","nodeValue","modelElement","attr","API","url","success","complete","accessToken","getXHR","req","dataType","onSuccess","status","response","onError","FormData","contentType","_method","beforeSend","xhr","setRequestHeader","ajax","extendsAPI","post","delete","put","upload","formData","progress","onprogress","lengthComputable","loaded","total","active","bindedList","parentEl","bindedListIndex","listenSFClick","script_","method_","preventDefault","scope_","globals","jsonpRequests","hashes","Request","requestOptions","globalsNoCallbacks","callbackName","defaults","toString","user","password","headers","xhrFields","statusCode","processData","timeout","fireCallback","globalCallbackValue","optionCallbackValue","_i","paramsPrefix","stringData","serializeQuery","abortTimeout_1","callbackName_1","Date","now","callbackSplit","requestUrl","addVars","filter","script_1","onerror","XMLHttpRequest","requestParameters","open","xhrTimeout","postData","ArrayBuffer","Blob","Document","boundary","headerName","crossDomain","$2","host","onload","responseData","parseError","responseText","responseType","onabort","abort","send","RequestShortcut","_a","params","prefix","encodeURIComponent","concat","json","getJSON","postJSON","setup","callbacks","callbacksWhen","Events","when","hashes_","data_","paths","history","pushState","replaceState","hash","pathname","gEval","aHashes","aPaths","slash","routingError","oldPath","back","currentPath","goto","parseRoutes","obj_","selectorList","routes","pattern","knownKeys","addRoutes","addition","route","findRoute","views","rootDOM","selector_","hrefClicked","onEvent","routeStart","routeFinish","routeError","addRoute","RouterLoading","currentRoute","oldDOM","isConnected","_scarlets","display","DOMReference","dynamicScript","scripts","getElementsByTagName","routeError_","leaving","coming","aborted","scrollingByScript","refreshScrollBounding","cursor","bounding","Math","prepareCount","offsetTop","initial","dCursor","scrollHeight","scrollTo","virtual","reduce","index_","scrollTop","insertCount","removeUserScrollFocus","getAbsoluteHeight","styles","getComputedStyle","margin","parseInt","offsetHeight","force","checkCursorPosition","additionalScroll","moveTo","reinitOnly","elementLength","obtainElements","_onElementResize","offElementResize","visibleLength","clientHeight","pendingFunction","ceilingHeight","floorHeight","fillViewport","updating","resetCeiling","previousCeiling","nextFloor","hitFloor","hitCeiling","_onElementResize_timer","scrollWidth","width","onElementResize","dynamicHeight","offsetTo","fromCeiling","scrollFocused","moveElementCursor","navigator","userAgent","staticHeight","styleInitialized","getElementById","sheet","insertRule","cssRules","isScroller"],"mappings":"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","file":"scarletsframe.min.js","sourcesContent":["(function(global, factory){\r\n  // Dynamic script when using router to load template\r\n  // Feature is disabled by default\r\n  function routerEval(code){eval(code)}\r\n\r\n  if(typeof exports === 'object' && typeof module !== 'void 0') module.exports = factory(global, routerEval);\r\n  else global.sf = factory(global, routerEval);\r\n}(typeof window !== \"void 0\" ? window : this, (function(window, routerEval){'use strict';\r\nif(typeof document === void 0)\r\n\tdocument = window.document;\r\n// ===== Module Init =====\r\nvar internal = {};\r\n\r\nvar sf = function(stuff){\r\n\tif(stuff.constructor === Function)\r\n\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\r\n\t// If it's Node type\r\n\tif(stuff.tagName !== void 0)\r\n\t\treturn sf.model.root[sf.controller.modelName(stuff)];\r\n};\r\n\r\nsf.internal = {};\r\nsf.regex = {\r\n\tgetQuotes:/(['\"])(?:\\1|[\\s\\S]*?[^\\\\]\\1)/g,\r\n\tvalidFunctionCall:/[a-zA-Z0-9 \\]\\$\\)]/,\r\n\tstrictVar:'(?=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )',\r\n\tescapeHTML:/(?!&#.*?;)[\\u00A0-\\u9999<>\\&]/gm,\r\n\r\n\tuniqueDataParser:/{{((@|#[\\w])[\\s\\S]*?)}}/g,\r\n\tdataParser:/{{([^@%][\\s\\S]*?)}}/g,\r\n\r\n\tarrayItemsObserve:/\\b_model_\\.([a-zA-Z0-9.['\\]]+)(?:$|[^'\\]])/g,\r\n};\r\n\r\nvar allowedFunctionEval = {'for':true, 'if':true, 'while':true, '_content_.take':true, 'console.log':true};\r\n\r\nfunction avoidQuotes(str, func, noReturn){\r\n\tvar temp = [];\r\n\tvar es = '<%$@>';\r\n\r\n\tif(noReturn !== void 0){\r\n\t\tfunc(str.replace(sf.regex.getQuotes, '<%$@>'));\r\n\t\treturn;\r\n\t}\r\n\r\n\tstr = str.replace(sf.regex.getQuotes, function(full){\r\n\t\ttemp.push(full);\r\n\t\treturn es+(temp.length-1)+es;\r\n\t});\r\n\r\n\tstr = func(str);\r\n\r\n\tfor (var i = 0; i < temp.length; i++) {\r\n\t\tstr = str.replace(es+i+es, temp[i]);\r\n\t}\r\n\treturn str;\r\n}\r\n\r\nfunction isEmptyObject(obj){\r\n\tfor(var key in obj){\r\n\t\treturn false;\r\n\t}\r\n\treturn true\r\n}\r\n\r\nfunction compareObject(obj1, obj2){\r\n\tif(!obj1 || !obj2)\r\n\t\treturn false;\r\n\r\n\tfor(var i in obj1){\r\n\t\tif(typeof obj1[i] !== 'object' && obj1[i] !== obj2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction hiddenProperty(obj, property, value){\r\n\tObject.defineProperty(obj, property, {\r\n\t\tenumerable: false,\r\n\t\tconfigurable: true,\r\n\t\tvalue: value\r\n\t});\r\n}\r\n\r\nfunction deepProperty(obj, path){\r\n  for(var i = 0; i < path.length; i++){\r\n    obj = obj[path[i]];\r\n    if(obj === void 0) return obj;\r\n  }\r\n  return obj;\r\n}\r\n\r\nfunction capitalizeLetters(name){\r\n\tfor (var i = 0; i < name.length; i++) {\r\n\t\tname[i] = name[i][0].toUpperCase() + name[i].slice(1);\r\n\t}\r\n\treturn name.join('');\r\n}","// ==== ES5 Polyfill ====\r\nif(typeof Object.assign != 'function'){\r\n  Object.defineProperty(Object, \"assign\", {\r\n    value: function assign(target, varArgs) {\r\n      'use strict';\r\n      if (target == null)\r\n        throw new TypeError('Cannot convert void 0 or null to object');\r\n      var to = Object(target);\r\n      for (var index = 1; index < arguments.length; index++) {\r\n        var nextSource = arguments[index];\r\n        if (nextSource != null) {\r\n          for (var nextKey in nextSource) {\r\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey))\r\n              to[nextKey] = nextSource[nextKey];\r\n          }\r\n        }\r\n      }\r\n      return to;\r\n    },\r\n    writable: true,\r\n    configurable: true\r\n  });\r\n}\r\n\r\nif(console.group === void 0)\r\n  console.group = console.groupCollapsed = console.groupEnd = function(){};\r\n\r\n\r\nif(Element.prototype.remove === void 0 || CharacterData.prototype.remove === void 0 || DocumentType.prototype.remove === void 0){\r\n  (function (arr) {\r\n    arr.forEach(function (item) {\r\n      if (item.hasOwnProperty('remove')) {\r\n        return;\r\n      }\r\n      Object.defineProperty(item, 'remove', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n        value: function remove() {\r\n          if (this.parentNode !== null)\r\n            this.parentNode.removeChild(this);\r\n        }\r\n      });\r\n    });\r\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\r\n}\r\n\r\nif(!Element.prototype.matches){\r\n  Element.prototype.matches = (Element.prototype).matchesSelector ||\r\n    (Element.prototype).mozMatchesSelector || (Element.prototype).msMatchesSelector ||\r\n    (Element.prototype).oMatchesSelector || (Element.prototype).webkitMatchesSelector ||\r\n    function (s) {\r\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n      i = matches.length;\r\n      while (--i >= 0 && matches.item(i) !== this){}\r\n      return i > -1;\r\n    };\r\n}\r\n\r\nif(!NodeList.prototype.forEach){\r\n    NodeList.prototype.forEach = function (callback, thisArg) {\r\n        thisArg = thisArg || window;\r\n        for (var i = 0; i < this.length; i++) {\r\n            callback.call(thisArg, this[i], i, this);\r\n        }\r\n    };\r\n}\r\n\r\nif(!window.location.origin)\r\n  window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');\r\n\r\nif(!Object.values)\r\n  Object.values = function(obj){\r\n    var res = [];\r\n    for (var i in obj) {\r\n        if (obj.hasOwnProperty(i)) {\r\n            res.push(obj[i]);\r\n        }\r\n    }\r\n    return res;\r\n  }\r\n\r\nif(Object.setPrototypeOf === void 0)\r\n  Object.setPrototypeOf = function(obj, proto) {\r\n    obj.__proto__ = proto;\r\n    return obj; \r\n  }\r\n\r\nvar Reflect_Construct = null;\r\nif(typeof Reflect !== 'undefined')\r\n  Reflect_Construct = Reflect.construct;\r\nelse \r\n  Reflect_Construct = function(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; };","sf.dom = function(selector, context){\r\n\tif(selector[0] === '<') return sf.dom.parseElement(selector);\r\n\tif(selector.constructor !== String) return selector;\r\n\r\n\tif(context) return context.querySelectorAll(selector);\r\n\treturn document.querySelectorAll(selector);\r\n}\r\n\r\nvar $ = sf.dom; // Shortcut\r\n\r\n;(function(){\r\n\tvar self = sf.dom;\r\n\r\n\tself.findOne = function(selector, context){\r\n\t\tif(context !== void 0) return context.querySelector(selector);\r\n\t\treturn document.querySelector(selector);\r\n\t}\r\n\r\n\tself.parent = function(element, selector){\r\n\t\tif(element.closest) return element.closest(selector);\r\n\r\n\t\tdo {\r\n\t\t\tif(element.matches(selector) === true)\r\n\t\t\t\treturn element;\r\n\r\n\t\t\telement = element.parentElement;\r\n\t\t} while (element !== null);\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tself.prevAll = function(element, selector, isNext){\r\n\t\tvar result = [];\r\n\t\tvar findNodes = selector === null || selector.constructor !== String ? true : false;\r\n\r\n\t\t// Skip current element\r\n\t\telement = isNext ? element.nextSibling : element.previousSibling;\r\n\t\twhile (element !== null) {\r\n\t\t\tif(findNodes === false && element.matches(selector) === true)\r\n\t\t\t\tresult.push(element);\r\n\t\t\telse{\r\n\t\t\t\tif(element === selector)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tresult.push(element);\r\n\t\t\t}\r\n\r\n\t\t\tif(isNext)\r\n\t\t\t\telement = element.nextSibling;\r\n\t\t\telse\r\n\t\t\t\telement = element.previousSibling;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.nextAll = function(element, selector){\r\n\t\treturn self.prevAll(element, selector, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen to an event\r\n\t * @param  Node \t\t\telement \tparent element\r\n\t * @param  string \t\t\tevent   \tevent name\r\n\t * @param  function|string  selector    callback function or selector\r\n\t * @param  function\t\t\tcallback    callback function\r\n\t * @param  boolean\t\t\tonce    \tcall once\r\n\t * @return null\r\n\t */\r\n\tself.on = function(element, event, selector, callback, once){\r\n\t\tif(typeof element === 'string'){\r\n\t\t\telement = document;\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = event;\r\n\t\t\tevent = element;\r\n\t\t}\r\n\r\n\t\tif(typeof selector === 'function'){\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = null;\r\n\t\t}\r\n\r\n\t\tif(selector){\r\n\t\t\tvar tempCallback = callback;\r\n\t\t\tcallback = function(ev){\r\n\t\t\t\tif(self.parent(ev.target, selector) !== null)\r\n\t\t\t\t\ttempCallback(ev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcallback.selector = selector;\r\n\t\tcallback.once = once;\r\n\t\telement.addEventListener(event, callback, {capture:true, once:once === true});\r\n\r\n\t\t// Save event listener\r\n\t\tif(element.sf$eventListener === void 0)\r\n\t\t\telement.sf$eventListener = {};\r\n\r\n\t\tif(element.sf$eventListener[event] === void 0)\r\n\t\t\telement.sf$eventListener[event] = [];\r\n\r\n\t\telement.sf$eventListener[event].push(callback);\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.once = function(element, event, selector, callback){\r\n\t\tself.on(element, event, selector, callback, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event listener\r\n\t * @param  Node \telement \tparent element\r\n\t * @param  string \tevent   \tevent name\r\n\t * @param  string  \tselector    selector\r\n\t * @return null\r\n\t */\r\n\tself.off = function(element, event, selector){\r\n\t\t// Remove all event\r\n\t\tif(event === void 0){\r\n\t\t\tif(element.sf$eventListener === void 0)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar events = element.sf$eventListener[event];\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar events = event.split(' ');\r\n\t\tif(events.length !== 1){\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove listener\r\n\t\tif(element.sf$eventListener === void 0)\r\n\t\t\treturn;\r\n\r\n\t\tvar ref = element.sf$eventListener;\r\n\t\tif(ref !== void 0 && ref[event] !== void 0){\r\n\t\t\tfor (var i = ref[event].length - 1; i >= 0; i--) {\r\n\t\t\t\tif(selector && ref[event][i].selector !== selector)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\telement.removeEventListener(event, ref[event].splice(i, 1), true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.animateCSS = function(element, animationName, callback, duration) {\r\n\t\tvar animationEnd = {\r\n\t\t\tanimation: 'animationend',\r\n\t\t\tOAnimation: 'oAnimationEnd',\r\n\t\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t\t};\r\n\r\n\t\tfor (var t in animationEnd){\r\n\t\t\tif(element.style[t] !== void 0){\r\n\t\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(duration){\r\n\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t}\r\n\r\n\t\tvar list = ('animated ' + animationName).split(' ');\r\n\t\telement.classList.add.apply(element.classList, list);\r\n\t\t$.once(element, animationEnd, function(){\r\n\t\t\telement.classList.remove.apply(element.classList, list);\r\n\t\t\t\r\n\t\t\tif(duration) setTimeout(function(){\r\n\t\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t\t}, 1);\r\n\r\n\t\t\tif(typeof callback === 'function') callback();\r\n\t\t});\r\n\t}\r\n\r\n\tvar emptyDOM = {\r\n\t\tdiv:document.createElement('div'),\r\n\t\tul:document.createElement('ul'),\r\n\t\ttbody:document.createElement('tbody'),\r\n\t\ttr:document.createElement('tr'),\r\n\t\ttable:document.createElement('table'),\r\n\t\tselect:document.createElement('select'),\r\n\t};\r\n\tself.parseElement = function(html, returnNode){\r\n\t\tvar result = [];\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\r\n        if(html.indexOf('<li') === 0) tempDOM = emptyDOM.ul;\r\n        if(html.indexOf('<tr') === 0) tempDOM = emptyDOM.tbody;\r\n        if(html.indexOf('<td') === 0 || html.indexOf('<th') === 0) tempDOM = emptyDOM.tr;\r\n        if(html.indexOf('<tbody') === 0) tempDOM = emptyDOM.table;\r\n        if(html.indexOf('<option') === 0) tempDOM = emptyDOM.select;\r\n\r\n\t\ttempDOM.textContent = '';\r\n\t\ttempDOM.insertAdjacentHTML('afterBegin', html);\r\n\r\n\t\tvar ref = tempDOM[returnNode ? 'childNodes' : 'children'];\r\n\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\tresult.push(ref.item(i));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tself.escapeText = function(text){\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\t\ttempDOM.textContent = text;\r\n\t\treturn tempDOM.innerHTML;\r\n\t}\r\n\r\n\tself.remove = function(elements){\r\n\t\tif(elements.remove !== void 0)\r\n\t\t\treturn elements.remove();\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\telements[i].remove();\r\n\t\t}\r\n\t}\r\n\r\n\tvar documentElement = null;\r\n\tsetTimeout(function(){\r\n\t\tsf.loader.domReady(function(){\r\n\t\t\tdocumentElement = document.body.parentElement;\r\n\t\t});\r\n\t}, 1);\r\n\r\n\tvar haveSymbol = /[~`!@#$%^&*()+={}|[\\]\\\\:\";'<>?,./ ]/;\r\n\tself.getSelector = function(element, childIndexes, untilElement){\r\n\t\tvar names = [];\r\n\t\tif(untilElement === void 0) untilElement = documentElement;\r\n\r\n\t\tvar previousSibling = childIndexes ? 'previousSibling' : 'previousElementSibling';\r\n\r\n\t\twhile(element.parentNode !== null){\r\n\t\t\tif(element.id && !haveSymbol.test(element.id)){\r\n\t\t\t\tnames.unshift('#'+element.id);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(element === untilElement){\r\n\t\t\t\t\tif(childIndexes === void 0)\r\n\t\t\t\t\t\tnames.unshift(element.tagName);\r\n\t\t\t\t\telse names.unshift(0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar e = element;\r\n\t\t\t\t\tvar i = childIndexes ? 0 : 1;\r\n\r\n\t\t\t\t\twhile(e[previousSibling]){\r\n\t\t\t\t\t\te = e[previousSibling];\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(childIndexes)\r\n\t\t\t\t\t\tnames.unshift(i);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tnames.unshift(\":nth-child(\"+i+\")\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t\tif(element === null)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndexes)\r\n\t\t\treturn names;\r\n\t\treturn names.join(\" > \");\r\n\t}\r\n\r\n\tself.childIndexes = function(array, context){\r\n\t\tvar element = context || documentElement;\r\n\t\tvar i = 1;\r\n\r\n\t\tif(array[0].constructor === String && element.id !== array[0].substr(1))\r\n\t\t\telement = element.querySelector(array[0]);\r\n\r\n\t\telse if(array.length === 1)\r\n\t\t\treturn element;\r\n\r\n\t\tfor (i = i; i < array.length; i++) {\r\n\t\t\telement = element.childNodes.item(array[i]);\r\n\r\n\t\t\tif(element === null)\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\tinternal.dom = {};\r\n\tinternal.dom.extends_Dom7 = {\r\n\t\tpush:function(el){\r\n\t\t\tthis[this.length] = el;\r\n\t\t\tthis.length++;\r\n\t\t},\r\n\t\tindexOf:function(el){\r\n\t\t\tvar keys = Object.keys(this);\r\n\t\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\t\tif(this[keys[i]] === el)\r\n\t\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t},\r\n\t\tsplice:function(i){\r\n\t\t\tfor (var n = this.length - 1; i < n; i++) {\r\n\t\t\t\tthis[i] = this[i+1];\r\n\t\t\t}\r\n\t\t\tthis.length--;\r\n\t\t},\r\n\t};\r\n\r\n})();","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 0;\r\n\tself.DOMWasLoaded = false;\r\n\tself.DOMReady = false;\r\n\tself.turnedOff = true;\r\n\r\n\tvar whenDOMReady = [];\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\tself.off = function(){\r\n\t\tself.turnedOff = true;\r\n\t}\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.domReady = function(func){\r\n\t\tif(self.DOMReady) return func();\r\n\t\tif(whenDOMReady.indexOf(func) !== -1) return;\r\n\t\twhenDOMReady.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('link');\r\n\t        s.rel = 'stylesheet';\r\n\t        s.href = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tself.js = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('script');\r\n\t        s.type = \"text/javascript\";\r\n\t        s.async = true;\r\n\t        s.src = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(function(){\r\n\t\tif(self.totalContent === 0 && !self.turnedOff){\r\n\t\t\tself.loadedContent = self.totalContent = 1;\r\n\t\t\tconsole.warn(\"If you don't use content loader feature, please turn it off with `sf.loader.off()`\");\r\n\t\t}\r\n\t}, 10000);\r\n\r\n\r\n\tvar isQueued = false;\r\n\tvar lastState = '';\r\n\tdocument.addEventListener(\"load\", function domLoadEvent(event){\r\n\t\t// Add processing class to queued element\r\n\t\tif(isQueued === false && document.body){\r\n\t\t\tdocument.removeEventListener('load', domLoadEvent, true);\r\n\r\n\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\t\t\tif(isQueued.length === 0) isQueued = false;\r\n\r\n\t\t\tif(lastState === 'loading'){\r\n\t\t\t\tvar repeatedList = $('[sf-repeat-this]', document.body);\r\n\r\n\t\t\t\t// Find images\r\n\t\t\t\tvar temp = $('img:not(onload)[src]');\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tsf.loader.totalContent++;\r\n\t\t\t\t\ttemp[i].addEventListener('load', sf.loader.f, {once:true});\r\n\t\t\t\t\ttemp[i].addEventListener('error', sf.loader.f, {once:true});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, true);\r\n\r\n\tdocument.addEventListener('readystatechange', function domStateEvent(){\r\n\t\tif(document.readyState === 'interactive' || document.readyState === 'complete'){\r\n\t\t\tif(self.DOMReady === false){\r\n\t\t\t\tself.DOMReady = true;\r\n\t\t\t\tfor (var i = 0; i < whenDOMReady.length; i++) {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\twhenDOMReady[i]();\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued === false)\r\n\t\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tresourceWaitTimer = setInterval(waitResources, 100);\r\n\t\t\tdocument.removeEventListener('readystatechange', domStateEvent, true);\r\n\t\t}\r\n\t}, true);\r\n\r\n\tvar resourceWaitTimer = -1;\r\n\tfunction waitResources(){\r\n\t\tif(self.turnedOff === false && self.loadedContent < self.totalContent)\r\n\t\t\treturn;\r\n\r\n\t\tclearInterval(resourceWaitTimer);\r\n\r\n\t\tvar listener = sf.dom('script, link, img');\r\n\t\tfor (var i = 0; i < listener.length; i++) {\r\n\t\t\tlistener[i].removeEventListener('error', sf.loader.f);\r\n\t\t\tlistener[i].removeEventListener('load', sf.loader.f);\r\n\t\t}\r\n\r\n\t\tself.DOMWasLoaded = true;\r\n\r\n\t\t// Initialize all pending model\r\n\t\tvar keys = Object.keys(internal.modelPending);\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tvar ref = internal.modelPending[keys[i]];\r\n\r\n\t\t\tif(sf.model.root[keys[i]] === undefined)\r\n\t\t\t\tvar scope = sf.model.root[keys[i]] = {};\r\n\t\t\telse var scope = sf.model.root[keys[i]];\r\n\r\n\t\t\tfor (var a = 0; a < ref.length; a++) {\r\n\t\t\t\tref[a](scope, root_);\r\n\t\t\t}\r\n\r\n\t\t\tdelete internal.modelPending[keys[i]];\r\n\t\t}\r\n\r\n\t\tfor (var i = internal.controller.pending.length - 1; i >= 0; i--) {\r\n\t\t\tvar scope = sf.controller.pending[internal.controller.pending[i]];\r\n\t\t\tif(scope !== void 0){\r\n\t\t\t\tscope(root_(internal.controller.pending[i]), root_);\r\n\t\t\t\tinternal.controller.pending.splice(i, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\ttry{\r\n\t\t\t\twhenDOMLoaded[i]();\r\n\t\t\t} catch(e){\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twhenProgress.splice(0);\r\n\t\twhenDOMReady.splice(0);\r\n\t\twhenDOMLoaded.splice(0);\r\n\t\twhenDOMReady = whenDOMLoaded = null;\r\n\r\n\t\t// Last init\r\n\t\tsf.controller.init();\r\n\t\tsf.model.init(document.body, isQueued);\r\n\r\n\t\tisQueued = null;\r\n\t}\r\n}\r\nsf.prototype.constructor = sf.loader.onFinish;","sf.component = new function(){\r\n\tvar self = this;\r\n\tvar scope = internal.component = {};\r\n\tself.registered = {};\r\n\tself.available = {};\r\n\r\n\tvar bases = {};\r\n\tvar events = {};\r\n\r\n\tself.for = function(name, func, extend){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(self.registered[name] === void 0)\r\n\t\t\tself.registered[name] = [func, sf.controller.pending[name], 0, false, extend];\r\n\t\tself.registered[name][0] = func;\r\n\t\tdelete sf.controller.pending[name];\r\n\r\n\t\tdefineComponent(name);\r\n\t}\r\n\r\n\tself.event = function(name, func){\r\n\t\tevents[name] = func;\r\n\t}\r\n\r\n\tself.base = function(name, func){\r\n\t\tbases[name] = func;\r\n\t}\r\n\r\n\tself.html = function(name, outerHTML){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.html(name, outerHTML);\r\n\t\t\t});\r\n\r\n\t\tif(self.registered[name] === void 0)\r\n\t\t\tself.registered[name] = [false, false, 0, false];\r\n\r\n\t\tvar temp = $.parseElement(outerHTML);\r\n\t\tif(temp.length === 1){\r\n\t\t\tself.registered[name][3] = temp[0];\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tempDOM = document.createElement('div');\r\n\t\ttempDOM.tempDOM = true;\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\ttempDOM.appendChild(temp[i]);\r\n\t\t}\r\n\t\tself.registered[name][3] = tempDOM;\r\n\t}\r\n\r\n\tscope.triggerEvent = function(name, event, obj){\r\n\t\tif(events[name] === void 0 || events[name][event] === void 0)\r\n\t\t\treturn;\r\n\r\n\t\tevents[name][event](obj, event);\r\n\t}\r\n\r\n\tvar tempDOM = document.createElement('div');\r\n\tself.new = function(name, element, $item, isCreated, retriggered){\r\n\t\tif(isCreated === true){\r\n\t\t\tif(sf.loader.DOMWasLoaded === false)\r\n\t\t\t\treturn sf(function(){\r\n\t\t\t\t\tself.new(name, element, $item, isCreated, false);\r\n\t\t\t\t});\r\n\t\t\tif(self.registered[name][3] === false)\r\n\t\t\t\treturn setTimeout(function(){\r\n\t\t\t\t\tself.new(name, element, $item, isCreated, true);\r\n\t\t\t\t}, 0);\r\n\r\n\t\t\tif(element.hasAttribute('sf-component-ignore') === true)\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(element === void 0)\r\n\t\t\treturn new window['$'+capitalizeLetters(name.split('-'))];\r\n\r\n\t\tvar newElement = element === void 0;\r\n\t\tif(element === void 0){\r\n\t\t\tif(self.registered[name][3] === false){\r\n\t\t\t\tconsole.error(\"HTML content for '\"+name+\"' was not defined\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement = self.registered[name][3].cloneNode(true);\r\n\t\t}\r\n\r\n\t\tvar newID = name+'@'+(self.registered[name][2]++);\r\n\r\n\t\tif(self.available[name] === void 0)\r\n\t\t\tself.available[name] = [];\r\n\r\n\t\tself.available[name].push(newID);\r\n\r\n\t\tvar newObj = sf.model.root[newID] = {};\r\n\t\tself.registered[name][0](newObj, sf.model, $item, element);\r\n\r\n\t\tvar extend = self.registered[name][4];\r\n\t\tif(extend !== void 0){\r\n\t\t\tif(extend.constructor === Array){\r\n\t\t\t\tfor (var i = 0; i < extend.length; i++) {\r\n\t\t\t\t\tif(bases[extend[i]] === void 0)\r\n\t\t\t\t\t\treturn console.error(\"'\"+extend[i]+\"' base is not found\");\r\n\t\t\t\t\tbases[extend[i]](newObj, sf.model, $item, element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(bases[extend] === void 0)\r\n\t\t\t\t\treturn console.error(\"'\"+extend+\"' base is not found\");\r\n\t\t\t\tbases[extend](newObj, sf.model, $item, element);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(self.registered[name][1])\r\n\t\t\tself.registered[name][1](newObj, sf.model, $item, element);\r\n\r\n\t\tscope.triggerEvent(name, 'created', newObj);\r\n\r\n\t\tif(newElement !== true && isCreated !== true){\r\n\t\t\tcomponentInit(element, newID, name);\r\n\t\t\telement.model = sf.model.root[newID];\r\n\t\t\treturn newID;\r\n\t\t}\r\n\r\n\t\tvar temp = self.registered[name][3];\r\n\t\tif(temp.tempDOM === true){\r\n\t\t\ttemp = temp.cloneNode(true).childNodes;\r\n\t\t\tfor (var i = 0, n = temp.length; i < n; i++) {\r\n\t\t\t\telement.appendChild(temp[0]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse element.appendChild(temp.cloneNode(true));\r\n\r\n\t\tif(element.parentNode === null){\r\n\t\t\t// Wrap to temporary vDOM\r\n\t\t\ttempDOM.appendChild(element);\r\n\t\t\tcomponentInit(element, newID, name);\r\n\t\t\tsf.model.init(element);\r\n\t\t\telement = tempDOM.firstElementChild;\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t\telse if(isCreated === true){\r\n\t\t\tcomponentInit(element, newID, name);\r\n\t\t\tsf.model.init(element);\r\n\t\t}\r\n\r\n\t\telement.model = sf.model.root[newID];\r\n\t\telement.destroy = function(){\r\n\t\t\tif(this.parentElement === null)\r\n\t\t\t\tinternal.model.DOMNodeRemoved(this);\r\n\t\t\telse this.remove();\r\n\t\t}\r\n\t\treturn element;\r\n\t}\r\n\r\n\tfunction componentInit(element, newID, from){\r\n\t\telement.setAttribute('sf-controller', '');\r\n\t\telement.sf$component = newID;\r\n\t\telement.sf$componentFrom = from;\r\n\t}\r\n\r\n\tvar HTMLElement = window.HTMLElement;\r\n\tvar customElements = window.customElements;\r\n\r\n\tvar HTMLElement_wrap = (function(Class){\r\n\t\tfunction Wrapper(){\r\n\t\t\treturn Reflect_Construct(Class, arguments, Object.getPrototypeOf(this).constructor);\r\n\t\t}\r\n\t\tWrapper.prototype = Object.create(Class.prototype, {constructor:{value: Wrapper, enumerable: false, writable: true, configurable: true}}); \r\n\t\treturn Object.setPrototypeOf(Wrapper, Class);\r\n\t})(HTMLElement);\r\n\r\n\t// name = 'tag-name'\r\n\tfunction defineComponent(name){\r\n\t\tif(customElements.get(name))\r\n\t\t\treturn;\r\n\r\n\t\tname = name.replace(/[^\\w-]+/g, '');\r\n\t\tvar tagName = name;\r\n\t\tname = name.split('-');\r\n\t\tif(name.length === 1)\r\n\t\t\treturn console.error(\"Please use '-' when defining component tags\");\r\n\r\n\t\tname = capitalizeLetters(name);\r\n\t\tvar func = eval(\"function \"+name+\"($item){var he = HTMLElement_wrap.call(this);self.new(tagName, he, $item, true, false);return he}\"+name);\r\n\t\tfunc.prototype = Object.create(HTMLElement.prototype);\r\n\t\tfunc.prototype.constructor = func;\r\n\t\tfunc.__proto__ = HTMLElement;\r\n\r\n\t\tfunc.prototype.connectedCallback = function(){\r\n\t\t\tscope.triggerEvent(name, 'connected', this);\r\n\t\t};\r\n\r\n\t\ttry{\r\n\t\t  customElements.define(tagName, func);\r\n\t\t}catch(err){console.error(err)}\r\n\r\n\t\twindow['$'+name] = func;\r\n\t}\r\n};","// Data save and HTML content binding\r\nsf.model = function(scope){\r\n\t// If it's component tag\r\n\tif(sf.component.registered[scope] !== void 0)\r\n\t\treturn root_(scope);\r\n\r\n\tif(!sf.model.root[scope]){\r\n\t\tsf.model.root[scope] = {};\r\n\t\tinternal.controller.pending.push(scope);\r\n\t}\r\n\r\n\t// This usually being initialized after DOM Loaded\r\n\tvar pending = internal.modelPending[scope];\r\n\tif(pending){\r\n\t\tvar temp = sf.model.root[scope];\r\n\t\tfor (var i = 0; i < pending.length; i++) {\r\n\t\t\tpending[i](temp, sf.model);\r\n\t\t}\r\n\t\tpending = internal.modelPending[scope] = false;\r\n\t}\r\n\r\n\tfor (var i = internal.controller.pending.length - 1; i >= 0; i--) {\r\n\t\tvar scope = sf.controller.pending[internal.controller.pending[i]];\r\n\t\tif(scope !== void 0){\r\n\t\t\tscope(root_(internal.controller.pending[i]), root_);\r\n\t\t\tinternal.controller.pending.splice(i, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tif(sf.controller.pending[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n};\r\n\r\n(function(){\r\n\tvar self = sf.model;\r\n\tvar scope = internal.model = {};\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\tinternal.modelPending = {};\r\n\r\n\tvar processingElement = null;\r\n\r\n\t// For debugging, normalize indentation\r\n\tfunction trimIndentation(text){\r\n\t\tvar indent = text.split(\"\\n\", 3);\r\n\t\tif(indent[0][0] !== ' ' || indent[0][0] !== \"\\t\")\r\n\t\t\tindent = indent[1];\r\n\t\telse indent = indent[0];\r\n\r\n\t\tif(indent === void 0) return text;\r\n\t\tindent = indent.length - indent.trim().length;\r\n\t\tif(indent === 0) return text;\r\n\t\treturn text.replace(RegExp('^([\\\\t ]{'+indent+'})', 'gm'), '');\r\n\t}\r\n\r\n\t// Secured evaluation\r\n\tvar bracketMatch = /([\\w.]*?[\\S\\s])\\(/g;\r\n\tvar chackValidFunctionCall = sf.regex.validFunctionCall;\r\n\tvar localEval = function(script, _model_, _modelScope, _content_){\r\n\t\t\"use strict\";\r\n\r\n\t\t// ==== Security check ====\r\n\t\tvar preventExecution = false;\r\n\r\n\t\t// Remove all inner quotes\r\n\t\tavoidQuotes(script, function(tempScript){\r\n\t\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\t\tvar check_ = null;\r\n\t\t\twhile((check_ = bracketMatch.exec(tempScript)) !== null){\r\n\t\t\t\tcheck_[1] = check_[1].trim();\r\n\r\n\t\t\t\tif(allowedFunctionEval[check_[1]] || check_[1].split('.')[0] === '_modelScope')\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tif(tempScript.indexOf('var '+check_[1]) !== -1 || tempScript.indexOf('let '+check_[1]) !== -1)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tbracketMatch.lastIndex = 0;\r\n\t\t\t\tpreventExecution = check_[1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}, true);\r\n\r\n\t\tif(preventExecution){\r\n\t\t\tconsole.groupCollapsed(\"<-- Expand the template error\");\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\tconsole.log(trimIndentation(script).trim());\r\n\t\t\tconsole.groupEnd();\r\n\r\n\t\t\tconsole.error(\"Trying to executing unrecognized function (\"+preventExecution+\")\");\r\n\t\t\treturn '#TemplateError';\r\n\t\t}\r\n\t\t// ==== Security check ended ====\r\n\t\r\n\t\tvar _result_ = '';\r\n\t\ttry{\r\n\t\t\tif(/@return /.test(script) === true){\r\n\t\t\t\tvar _evaled_ = eval('(function(){'+script.split('@return ').join('return ')+'})()');\r\n\r\n\t\t\t\tif(_evaled_ === void 0)\r\n\t\t\t\t\treturn _result_ + 'undefined';\r\n\r\n\t\t\t\tif(_evaled_ === null)\r\n\t\t\t\t\treturn _result_ + 'null';\r\n\r\n\t\t\t\t// Check if it's an HTMLElement\r\n\t\t\t\tif(_evaled_.onclick !== void 0)\r\n\t\t\t\t\treturn _evaled_;\r\n\r\n\t\t\t\treturn _result_ + _evaled_;\r\n\t\t\t}\r\n\t\t\telse var _evaled_ = eval(script);\r\n\t\t} catch(e){\r\n\t\t\tconsole.groupCollapsed(\"<-- Expand the template error\");\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\tconsole.log(trimIndentation(script).trim());\r\n\t\t\tconsole.groupEnd();\r\n\r\n\t\t\tconsole.error(e);\r\n\t\t\treturn '#TemplateError';\r\n\t\t}\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\t// Find an index for the element on the list\r\n\tself.index = function(element){\r\n\t\tif(element.hasAttribute('sf-bind-list') === false)\r\n\t\t\telement = sf.dom.parent(element, '[sf-bind-list]');\r\n\r\n\t\tvar i = -1;\r\n\t\tvar tagName = element.tagName;\r\n\t\tvar currentElement = element;\r\n\r\n\t\twhile(element !== null) {\r\n\t\t\tif(element.tagName === tagName)\r\n\t\t\t\ti++;\r\n\r\n\t\t\telement = element.previousElementSibling;\r\n\t\t}\r\n\r\n\t\tvar list = currentElement.getAttribute('sf-bind-list');\r\n\t\tif(!list) return i;\r\n\r\n\t\tvar ref = self.root[sf.controller.modelName(currentElement)][list];\r\n\t\tif(!ref.$virtual) return i;\r\n\r\n\t\treturn i + ref.$virtual.DOMCursor - 1;\r\n\t}\r\n\r\n\t// Declare model for the name with a function\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded){\r\n\t\t\tif(internal.modelPending[name] === undefined)\r\n\t\t\t\tinternal.modelPending[name] = [];\r\n\r\n\t\t\tif(internal.modelPending[name] === false)\r\n\t\t\t\treturn func(self(name), self);\r\n\r\n\t\t\t// Initialize when DOMLoaded\r\n\t\t\treturn internal.modelPending[name].push(func);\r\n\t\t}\r\n\t\t\r\n\t\tfunc(self(name), self);\r\n\t}\r\n\r\n\t// Get property of the model\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys;\r\n\t}\r\n\r\n\t// Escape the escaped quote\r\n\tfunction escapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*');\r\n\t}\r\n\r\n\tfunction unescapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\");\r\n\t}\r\n\r\n\tfunction elseIfHandle(else_, scopes){\r\n\t\tvar elseIf = else_.elseIf;\r\n\r\n\t\t// Else if\r\n\t\tfor (var i = 0; i < elseIf.length; i++) {\r\n\t\t\t// Check the condition\r\n\t\t\tscopes[0] = elseIf[i][0];\r\n\t\t\tif(!localEval.apply(self.root, scopes))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Get the value\r\n\t\t\tscopes[0] = elseIf[i][1];\r\n\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t}\r\n\r\n\t\t// Else\r\n\t\tif(else_.elseValue === null)\r\n\t\t\treturn '';\r\n\r\n\t\tscopes[0] = else_.elseValue;\r\n\t\treturn localEval.apply(self.root, scopes);\r\n\t}\r\n\r\n\t// ==== Template parser ====\r\n\tvar templateParser_regex = /{{%=([0-9]+)/gm;\r\n\tvar REF_DIRECT = 0, REF_IF = 1, REF_EXEC = 2;\r\n\tvar templateExec = function(parse, item, atIndex){\r\n\t\tvar parsed = {};\r\n\t\tvar temp = null;\r\n\r\n\t\t// Get or evaluate static or dynamic data\r\n\t\tfor (var i = 0; i < parse.length; i++) {\r\n\t\t\tif(atIndex !== void 0 && atIndex.indexOf(i) === -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar ref = parse[i];\r\n\t\t\tref.data[1] = item;\r\n\r\n\t\t\t// Direct evaluation type\r\n\t\t\tif(ref.type === REF_DIRECT){\r\n\t\t\t\ttemp = localEval.apply(self.root, ref.data);\r\n\t\t\t\tif(temp === void 0)\r\n\t\t\t\t\tconsole.error('`'+ref.data[0]+'` was not defined');\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(temp.constructor === Object)\r\n\t\t\t\t\t\ttemp = JSON.stringify(temp);\r\n\t\t\t\t\tif(temp.constructor !== String)\r\n\t\t\t\t\t\ttemp = String(temp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparsed[i] = {type:ref.type, data:temp};\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(ref.type === REF_EXEC){\r\n\t\t\t\tparsed[i] = {type:ref.type, data:localEval.apply(self.root, ref.data)};\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Conditional type\r\n\t\t\tif(ref.type === REF_IF){\r\n\t\t\t\tvar scopes = ref.data;\r\n\t\t\t\tparsed[i] = {type:ref.type, data:''};\r\n\t\t\t\tscopes[0] = ref.if[0];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tparsed[i].data = elseIfHandle(ref, scopes);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscopes[0] = ref.if[1];\r\n\t\t\t\tparsed[i].data = localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n\r\n\tvar templateParser = function(template, item, original){\r\n\t\tif(template.component !== void 0){\r\n\t\t\tvar html = new template.component(item);\r\n\t\t\thtml.setAttribute('sf-bind-list', template.list);\r\n\t\t\treturn html;\r\n\t\t}\r\n\r\n\t\tprocessingElement = template.html;\r\n\r\n\t\tvar html = original === true ? template.html : template.html.cloneNode(true);\r\n\t\tvar addresses = template.addresses;\r\n\t\tvar parsed = templateExec(template.parse, item);\r\n\r\n\t\t// Save model item reference to node\r\n\t\thtml.model = item;\r\n\r\n\t\tvar changesReference = [];\r\n\t\tvar pendingInsert = [];\r\n\r\n\t\t// Find element where the data belongs to\r\n\t\tfor (var i = 0; i < addresses.length; i++) {\r\n\t\t\tvar ref = addresses[i];\r\n\t\t\tvar current = $.childIndexes(ref.address, html);\r\n\r\n\t\t\t// Modify element attributes\r\n\t\t\tif(ref.nodeType === 1){\r\n\t\t\t\tvar refA = ref.attributes;\r\n\t\t\t\tfor(var a = 0; a < refA.length; a++){\r\n\t\t\t\t\tvar refB = refA[a];\r\n\r\n\t\t\t\t\tvar isValueInput = (refB.name === 'value' && (current.tagName === 'TEXTAREA' ||\r\n\t\t\t\t\t\t(current.tagName === 'INPUT' && /checkbox|radio|hidden/.test(current.type) === false)\r\n\t\t\t\t\t));\r\n\r\n\t\t\t\t\tchangesReference.push({\r\n\t\t\t\t\t\tattribute:isValueInput === true ? current : current.attributes[refB.name],\r\n\t\t\t\t\t\tref:refB\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(refB.direct !== void 0){\r\n\t\t\t\t\t\tif(refB.name === 'value' && isValueInput === true){\r\n\t\t\t\t\t\t\tcurrent.value = parsed[refB.direct].data;\r\n\t\t\t\t\t\t\tcurrent.removeAttribute('value');\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcurrent.setAttribute(refB.name, parsed[refB.direct].data);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Below is used for multiple data\r\n\t\t\t\t\tif(refB.name === 'value' && isValueInput === true){\r\n\t\t\t\t\t\tvar temp = current.value;\r\n\t\t\t\t\t\tcurrent.removeAttribute('value');\r\n\t\t\t\t\t\tcurrent.value = temp;\r\n\t\t\t\t\t\tcurrent.value = current.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tcurrent.setAttribute(refB.name, (refB.value || current.value).replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Replace text node\r\n\t\t\tif(ref.nodeType === 3){\r\n\t\t\t\tvar refA = current;\r\n\r\n\t\t\t\tchangesReference.push({\r\n\t\t\t\t\ttextContent:refA,\r\n\t\t\t\t\tref:ref\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(ref.direct !== void 0){\r\n\t\t\t\t\trefA.textContent = parsed[ref.direct].data;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Below is used for multiple/dynamic data\r\n\t\t\t\trefA.textContent = refA.textContent.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Replace dynamic node\r\n\t\t\tif(ref.nodeType === -1){\r\n\t\t\t\tvar cRef = {\r\n\t\t\t\t\tdynamicFlag:current,\r\n\t\t\t\t\tdirect:ref.parse_index,\r\n\t\t\t\t\tparentNode:current.parentNode,\r\n\t\t\t\t\tstartFlag:ref.startFlag && $.childIndexes(ref.startFlag, html)\r\n\t\t\t\t};\r\n\t\t\t\tchangesReference.push(cRef);\r\n\r\n\t\t\t\t// Pending element insert to take other element reference\r\n\t\t\t\tpendingInsert.push(cRef);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Save reference to element\r\n\t\thtml.sf$elementReferences = changesReference;\r\n\t\t// html.sf$modelParsed = parsed;\r\n\r\n\t\t// Run the pending element\r\n\t\tfor (var i = 0; i < pendingInsert.length; i++) {\r\n\t\t\tvar ref = pendingInsert[i];\r\n\t\t\tvar tDOM = parsed[ref.direct].data;\r\n\r\n\t\t\t// Check if it's an HTMLElement\r\n\t\t\tif(tDOM.onclick !== void 0){\r\n\t\t\t\tref.parentNode.insertBefore(tDOM, ref.dynamicFlag);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\ttDOM = $.parseElement(parsed[ref.direct].data, true);\r\n\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\tref.parentNode.insertBefore(tDOM[a], ref.dynamicFlag);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t}\r\n\r\n\tfunction syntheticCache(element, template, item){\r\n\t\tif(element.sf$cache === void 0)\r\n\t\t\telement.sf$cache = {};\r\n\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\tvar ref = modelRef_array[i];\r\n\t\t\tcache[ref[0]] = deepProperty(item, ref[1]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction syntheticTemplate(element, template, property, item){\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tif(property !== void 0){\r\n\t\t\tvar changes = template.modelReference[property];\r\n\t\t\tif(changes === void 0 || changes.length === 0){\r\n\t\t\t\tconsole.log(element, template, property, item);\r\n\t\t\t\tconsole.error(\"Failed to run syntheticTemplate because property '\"+property+\"' is not observed\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cache)\r\n\t\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\t\tif(ref[0] !== property) continue;\r\n\r\n\t\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t\t// Check if data was different\r\n\t\t\t\t\tif(cache[ref[0]] !== newData)\r\n\t\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar changes = [];\r\n\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\tif(cache === void 0){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t// Check if data was different\r\n\t\t\t\tif(cache[ref[0]] !== newData){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(changes.length === 0) return false;\r\n\t\t}\r\n\r\n\t\tvar parsed = templateExec(template.parse, item, changes);\r\n\t\tfunction checkRelatedChanges(parseIndex){\r\n\t\t\tvar found = false;\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(changes.indexOf(parseIndex[i]) !== -1){\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(found === false)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t// Prepare all required data\r\n\t\t\tvar changes_ = [];\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(parsed[parseIndex[i]] === void 0)\r\n\t\t\t\t\tchanges_.push(parseIndex[i]);\r\n\t\t\t}\r\n\r\n\t\t\tObject.assign(parsed, templateExec(template.parse, item, changes_));\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tvar changesReference = element.sf$elementReferences;\r\n\t\tvar haveChanges = false;\r\n\t\tfor (var i = 0; i < changesReference.length; i++) {\r\n\t\t\tvar cRef = changesReference[i];\r\n\r\n\t\t\tif(cRef.dynamicFlag !== void 0){ // Dynamic data\r\n\t\t\t\tif(parsed[cRef.direct] !== void 0){\r\n\t\t\t\t\tvar tDOM = $.parseElement(parsed[cRef.direct].data, true).reverse();\r\n\t\t\t\t\tvar currentDOM = $.prevAll(cRef.dynamicFlag, cRef.startFlag);\r\n\t\t\t\t\tvar notExist = false;\r\n\r\n\t\t\t\t\t// Replace if exist, skip if similar\r\n\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\t\t\tif(currentDOM[a] === void 0){\r\n\t\t\t\t\t\t\tnotExist = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(currentDOM[a].isEqualNode(tDOM[a]) === false)\r\n\t\t\t\t\t\t\tcRef.parentNode.replaceChild(tDOM[a], currentDOM[a]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Add if not exist\r\n\t\t\t\t\tif(notExist){\r\n\t\t\t\t\t\tfor (var a = tDOM.length - 1; a >= 0; a--)\r\n\t\t\t\t\t\t\tcRef.parentNode.insertBefore(tDOM[a], cRef.dynamicFlag);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove if over index\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tfor (var a = tDOM.length; a < currentDOM.length; a++) {\r\n\t\t\t\t\t\t\tcurrentDOM[a].remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(cRef.textContent !== void 0){ // Text only\r\n\t\t\t\tif(cRef.ref.parse_index !== void 0){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.textContent.textContent === temp) continue;\r\n\t\t\t\t\t\tcRef.textContent.textContent = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\tif(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.textContent.textContent === value) continue;\r\n\r\n\t\t\t\t\tvar ref_ = cRef.textContent;\r\n\t\t\t\t\t// Remove old element if exist\r\n\t\t\t\t\tif(ref_.sf$haveChilds === true){\r\n\t\t\t\t\t\twhile(ref_.previousSibling && ref_.previousSibling.sf$childRoot === ref_){\r\n\t\t\t\t\t\t\tref_.previousSibling.remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// if(item['each$'+])\r\n\t\t\t\t\tref_.textContent = value;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(cRef.attribute !== void 0){ // Attributes\r\n\t\t\t\tif(cRef.ref.parse_index !== void 0){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.attribute.value === temp) continue;\r\n\t\t\t\t\t\tcRef.attribute.value = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\tif(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.attribute.value == value) continue;\r\n\t\t\t\t\tcRef.attribute.value = value;\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn haveChanges;\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval, preParsedReference){\r\n\t\tvar _modelScope = self.root[scope];\r\n\t\tif(!runEval) runEval = '';\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope).join('|')+')\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\tvar preParsed = [];\r\n\t\t\tvar lastParsedIndex = preParsedReference.length;\r\n\t\t}\r\n\r\n\t\tvar prepared = html.replace(sf.regex.dataParser, function(actual, temp){\r\n\t\t\ttemp = avoidQuotes(temp, function(temp_){\r\n\t\t\t\t// Unescape HTML\r\n\t\t\t\ttemp_ = temp_.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t\t// Mask item variable\r\n\t\t\t\tif(mask)\r\n\t\t\t\t\ttemp_ = temp_.replace(itemMask, function(matched){\r\n\t\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// Mask model for variable\r\n\t\t\t\treturn temp_.replace(scopeMask, function(full, matched){\r\n\t\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t\t});\r\n\t\t\t}).split('_model_._modelScope.').join('_model_.').split('._modelScope.').join('.');\r\n\r\n\t\t\t// Evaluate\r\n\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\ttemp = temp.trim();\r\n\r\n\t\t\t\t// Simplicity similar\r\n\t\t\t\tvar exist = preParsed.indexOf(temp);\r\n\r\n\t\t\t\tif(exist === -1){\r\n\t\t\t\t\tpreParsed.push(temp);\r\n\t\t\t\t\tpreParsedReference.push({type:REF_DIRECT, data:[temp, _model_, _modelScope]});\r\n\t\t\t\t\treturn '{{%=' + (preParsed.length + lastParsedIndex - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn '{{%=' + (exist + lastParsedIndex);\r\n\t\t\t}\r\n\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(sf.regex.escapeHTML, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\tpreParsed = _modelScope = _model_ = mask = scope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t}\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\t// Dynamic data parser\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope, runEval){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(passVar === null)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\t// Use strict mode and prepare for new variables\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\t// Declare new variable\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(key === '_model_'){\r\n\t\t\t\t\t\t_model_ = passVar[key];\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove var because no variable are being passed\r\n\t\t\t\tif(firstTime === true)\r\n\t\t\t\t\tstrDeclare = strDeclare.replace('var ', '');\r\n\r\n\t\t\t\t// Escape function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('&#40;').split(')').join('&#41;');\r\n\r\n\t\t\t\t// Pass to static data parser for another HTML data\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Build script preparation\r\n\t\thtml = html.replace(/{\\[([\\s\\S]*?)\\]}/g, function(full, matched){\r\n\t\t\tif(/{{.*?}}/.test(matched) === false)\r\n\t\t\t\treturn \"_result_ += '\"+matched.split(\"'\").join(\"\\\\'\")+\"'\";\r\n\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope).join('|')+')\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.\\\\b', 'g');\r\n\r\n\t\tif(runEval === '#noEval')\r\n\t\t\tvar preParsedReference = [];\r\n\r\n\t\tvar prepared = html.replace(sf.regex.uniqueDataParser, function(actual, temp){\r\n\t\t\ttemp = avoidQuotes(temp, function(temp_){\r\n\t\t\t\t// Unescape HTML\r\n\t\t\t\ttemp_ = temp_.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t\t// Mask item variable\r\n\t\t\t\tif(mask)\r\n\t\t\t\t\ttemp_ = temp_.replace(itemMask, function(matched){\r\n\t\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// Mask model for variable\r\n\t\t\t\treturn temp_.replace(scopeMask, function(full, matched){\r\n\t\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t\t});\r\n\t\t\t}).split('_model_._modelScope.').join('_model_.');\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass_ = /(var|let)([\\w,\\s]+)(?=\\s(?==|in|of))/g;\r\n\t\t\tvar VarPass = [];\r\n\t\t\tvar s1 = null;\r\n\t\t\twhile((s1 = VarPass_.exec(temp)) !== null){\r\n\t\t\t\tVarPass.push(s1[2]);\r\n\t\t\t}\r\n\r\n\t\t\tif(_model_ === null && runEval === '#noEval')\r\n\t\t\t\tVarPass.push('_model_');\r\n\r\n\t\t\tif(VarPass.length !== 0){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/([\\n\\t\\r]|  )+/g, '').split(',').forEach(function(val){\r\n\t\t\t\t\t\tobtained.push(val);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':typeof '+VarPass[i]+'!==\"undefined\"?'+VarPass[i]+':void 0';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(VarPass.length === 0)\r\n\t\t\t\t\tVarPass = 'null';\r\n\t\t\t\telse VarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\t\t\telse temp = temp.split('&VarPass&').join('null');\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\r\n\t\t\t\t// {if, elseIf:([if, value], ...), elseValue}\r\n\t\t\t\tvar findElse = function(text){\r\n\t\t\t\t\ttext = text.join(':');\r\n\t\t\t\t\tvar else_ = null;\r\n\r\n\t\t\t\t\t// Split elseIf\r\n\t\t\t\t\ttext = text.split('@elseif ');\r\n\r\n\t\t\t\t\t// Get else value\r\n\t\t\t\t\tvar else_ = text[text.length - 1].split('@else');\r\n\t\t\t\t\tif(else_.length === 2){\r\n\t\t\t\t\t\ttext[text.length - 1] = else_[0];\r\n\t\t\t\t\t\telse_ = else_.pop();\r\n\t\t\t\t\t\telse_ = else_.substr(else_.indexOf(':') + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse else_ = null;\r\n\r\n\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t\tif:text.shift(),\r\n\t\t\t\t\t\telseIf:[],\r\n\t\t\t\t\t\telseValue:else_\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Separate condition script and value\r\n\t\t\t\t\tfor (var i = 0; i < text.length; i++) {\r\n\t\t\t\t\t\tvar val = text[i].split(':');\r\n\t\t\t\t\t\tobj.elseIf.push([val.shift(), val.join(':')]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tvar condition = check.shift();\r\n\t\t\t\t\tvar elseIf = findElse(check);\r\n\t\t\t\t\telseIf.type = REF_IF;\r\n\t\t\t\t\telseIf.data = [null, _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t\t// Trim Data\r\n\t\t\t\t\telseIf.if = [condition.trim(), elseIf.if.trim()];\r\n\t\t\t\t\tif(elseIf.elseValue !== null)\r\n\t\t\t\t\t\telseIf.elseValue = elseIf.elseValue.trim();\r\n\r\n\t\t\t\t\tfor (var i = 0; i < elseIf.elseIf.length; i++) {\r\n\t\t\t\t\t\telseIf.elseIf[i][0] = elseIf.elseIf[i][0].trim();\r\n\t\t\t\t\t\telseIf.elseIf[i][1] = elseIf.elseIf[i][1].trim();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Push data\r\n\t\t\t\t\tpreParsedReference.push(elseIf);\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scopes = [check[0], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\treturn elseIfHandle(findElse(check), scopes);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcheck.shift();\r\n\t\t\t\tscopes[0] = check.join(':');\r\n\r\n\t\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tvar scopes = [check[1], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tpreParsedReference.push({type:REF_EXEC, data:scopes});\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, scopes);\r\n\t\t\t\treturn temp;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\t_modelScope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t\treturn [prepared, preParsedReference, _content_];\r\n\t\t}\r\n\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\tvar bindArray = function(template, list, mask, modelName, propertyName, targetNode, parentNode, tempDOM){\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'swap', 'move', 'replace', 'softRefresh', 'hardRefresh'];\r\n\t\tvar refreshTimer = -1;\r\n\t\tvar parentChilds = parentNode.children;\r\n\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\r\n\t\t// Update callback\r\n\t\tvar modelRef = self.root[modelName];\r\n\t\tvar eventVar = 'on$'+propertyName;\r\n\t\tvar callback = modelRef[eventVar];\r\n\r\n\t\tvar processElement = function(index, options, other, count){\r\n\t\t\t// Find boundary for inserting to virtual DOM\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar vStartRange = list.$virtual.DOMCursor;\r\n\t\t\t\tvar vEndRange = vStartRange + list.$virtual.preparedLength;\r\n\t\t\t}\r\n\r\n\t\t\tif(options === 'clear'){\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar spacer = [parentNode.firstElementChild, parentNode.lastElementChild];\r\n\r\n\t\t\t\tparentNode.textContent = '';\r\n\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tparentNode.appendChild(spacer[0]);\r\n\t\t\t\t\tparentNode.appendChild(spacer[1]);\r\n\t\t\t\t\tlist.$virtual.dom.textContent = '';\r\n\t\t\t\t\tspacer[1].style.height = \r\n\t\t\t\t\tspacer[0].style.height = 0;\r\n\t\t\t\t\tlist.$virtual.reset(true);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid multiple refresh by set a timer\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar exist = list.$virtual.elements();\r\n\r\n\t\t\t\tclearTimeout(refreshTimer);\r\n\t\t\t\trefreshTimer = setTimeout(function(){\r\n\t\t\t\t\tif(list.$virtual) // Somewhat it's uninitialized\r\n\t\t\t\t\t\tlist.$virtual.reinitScroll();\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse exist = parentChilds;\r\n\r\n\t\t\t// Hard refresh - Append element\r\n\t\t\tif(options === 'hardRefresh'){\r\n\t\t\t\t// Clear siblings after the index\r\n\t\t\t\tfor (var i = index; i < exist.length; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar vCursor = list.$virtual.vCursor;\r\n\r\n\t\t\t\tfor (var i = index; i < list.length; i++) {\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\tif(vCursor.floor === null && i < vEndRange)\r\n\t\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\t\telse list.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse parentNode.appendChild(temp);\r\n\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual && list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(callback === void 0)\r\n\t\t\t\tcallback = modelRef[eventVar];\r\n\r\n\t\t\tif(options === 'swap' || options === 'move'){\r\n\t\t\t\tif(options === 'move'){\r\n\t\t\t\t\tvar overflow = list.length - index - count;\r\n\t\t\t\t\tif(overflow < 0)\r\n\t\t\t\t\t\tcount += overflow;\r\n\r\n\t\t\t\t\t// Move to virtual DOM\r\n\t\t\t\t\tvar vDOM = document.createElement('div');\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tvDOM.appendChild(exist[index + i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar nextSibling = exist[other] || null;\r\n\t\t\t\t\tvar theParent = nextSibling && nextSibling.parentNode;\r\n\r\n\t\t\t\t\tif(theParent === false){\r\n\t\t\t\t\t\tif(list.$virtual && list.length >= vEndRange)\r\n\t\t\t\t\t\t\ttheParent = list.$virtual.dom;\r\n\t\t\t\t\t\telse theParent = parentNode;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Move to defined index\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\ttheParent.insertBefore(vDOM.firstElementChild, nextSibling);\r\n\r\n\t\t\t\t\t\tif(callback !== void 0 && callback.update)\r\n\t\t\t\t\t\t\tcallback.update(exist[index + i], 'move');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(index > other){\r\n\t\t\t\t\tvar index_a = exist[other];\r\n\t\t\t\t\tother = exist[index];\r\n\t\t\t\t\tindex = index_a;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tindex = exist[index];\r\n\t\t\t\t\tother = exist[other];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar other_sibling = other.nextSibling;\r\n\t\t\t\tvar other_parent = other.parentNode;\r\n\t            index.parentNode.insertBefore(other, index.nextSibling);\r\n\t            other_parent.insertBefore(index, other_sibling);\r\n\r\n\t\t\t\tif(callback !== void 0 && callback.update){\r\n\t\t\t\t\tcallback.update(exist[other], 'swap');\r\n\t\t\t\t\tcallback.update(exist[index], 'swap');\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Clear unused element if current array < last array\r\n\t\t\tif(options === 'removeRange'){\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(options === 'remove'){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentEl = exist[index];\r\n\r\n\t\t\t\t\tif(callback !== void 0 && callback.remove){\r\n\t\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\t\tcurrentEl.remove();\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tstartRemove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse currentEl.remove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update\r\n\t\t\telse if(options === 'update'){\r\n\t\t\t\tif(index === void 0){\r\n\t\t\t\t\tindex = 0;\r\n\t\t\t\t\tother = list.length;\r\n\t\t\t\t}\r\n\t\t\t\telse if(other === void 0) other = index + 1;\r\n\t\t\t\telse if(other < 0) other = list.length + other;\r\n\t\t\t\telse other += index;\r\n\r\n\t\t\t\t// Trim length\r\n\t\t\t\tvar overflow = list.length - other;\r\n\t\t\t\tif(overflow < 0) other = other + overflow;\r\n\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\tvar oldChild = exist[i];\r\n\t\t\t\t\tif(oldChild === void 0 || list[i] === void 0)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\toldChild.parentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tparentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\tif(callback !== void 0 && callback.update)\r\n\t\t\t\t\t\tcallback.update(temp, 'replace');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar item = list[index];\r\n\t\t\tif(item === void 0) return;\r\n\r\n\t\t\tvar temp = templateParser(template, item);\r\n\t\t\tif(isKeyed === false)\r\n\t\t\t\tsyntheticCache(temp, template, item);\r\n\r\n\t\t\t// Create\r\n\t\t\tif(options === 'insertAfter'){\r\n\t\t\t\tif(exist.length === 0)\r\n\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\telse{\r\n\t\t\t\t\tvar referenceNode = exist[index - 1];\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode.nextSibling);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t\telse if(options === 'prepend'){\r\n\t\t\t\tvar referenceNode = exist[0];\r\n\t\t\t\tif(referenceNode !== void 0){\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode);\r\n\r\n\t\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t}\r\n\t\t\t\telse options = 'append';\r\n\t\t\t}\r\n\t\t\tif(options === 'append'){\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tif(index === 0) // Add before virtual scroller\r\n\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\telse if(index >= vEndRange){ // To virtual DOM\r\n\t\t\t\t\t\tif(list.$virtual.vCursor.floor === null)\r\n\t\t\t\t\t\t\tlist.$virtual.vCursor.floor = temp;\r\n\r\n\t\t\t\t\t\tlist.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse // To real DOM\r\n\t\t\t\t\t\texist[index-1].insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparentNode.appendChild(temp);\r\n\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar _double_zero = [0,0]; // For arguments\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = void 0;\r\n\t\t\t\t\tvar lastLength = this.length;\r\n\r\n\t\t\t\t\tif(name === 'move'){\r\n\t\t\t\t\t\tvar from = arguments[0];\r\n\t\t\t\t\t\tvar to = arguments[1];\r\n\t\t\t\t\t\tif(from === to) return;\r\n\t\t\t\t\t\tvar count = arguments[2] || 1;\r\n\t\t\t\t\t\tprocessElement(from, 'move', to, count);\r\n\r\n\t\t\t\t\t\tvar temp = Array.prototype.splice.apply(this, [from, count]);\r\n\t\t\t\t\t\ttemp.unshift(to, 0);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Reset virtual ceiling and floor\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(name === 'swap'){\r\n\t\t\t\t\t\tvar i = arguments[0];\r\n\t\t\t\t\t\tvar o = arguments[1];\r\n\t\t\t\t\t\tif(i === o) return;\r\n\t\t\t\t\t\tprocessElement(i, 'swap', o);\r\n\t\t\t\t\t\tvar temp = this[i];\r\n\t\t\t\t\t\tthis[i] = this[o];\r\n\t\t\t\t\t\tthis[o] = temp;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'replace'){\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.resetViewport();\r\n\r\n\t\t\t\t\t\t// Check if item has same reference\r\n\t\t\t\t\t\tif(arguments[0].length >= lastLength && lastLength !== 0){\r\n\t\t\t\t\t\t\tvar matchLeft = lastLength;\r\n\t\t\t\t\t\t\tvar ref = arguments[0];\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < lastLength; i++) {\r\n\t\t\t\t\t\t\t\tif(ref[i] === this[i]){\r\n\t\t\t\t\t\t\t\t\tmatchLeft--;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the end\r\n\t\t\t\t\t\t\tif(matchLeft === 0){\r\n\t\t\t\t\t\t\t\tif(ref.length === lastLength) return;\r\n\r\n\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(lastLength);\r\n\t\t\t\t\t\t\t\ttemp.unshift(lastLength, 0);\r\n\t\t\t\t\t\t\t\tthis.splice.apply(this, temp);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the middle\r\n\t\t\t\t\t\t\telse if(matchLeft !== lastLength){\r\n\t\t\t\t\t\t\t\tif(arguments[1] === true){\r\n\t\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(i);\r\n\t\t\t\t\t\t\t\t\ttemp.unshift(i, lastLength - i);\r\n\t\t\t\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t\t\t\tlist.refresh(i, lastLength);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Build from zero\r\n\t\t\t\t\t\tif(lastLength === 0){\r\n\t\t\t\t\t\t\tArray.prototype.push.apply(this, arguments[0]);\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Clear all items and merge the new one\r\n\t\t\t\t\t\tvar temp = [0, lastLength];\r\n\t\t\t\t\t\tArray.prototype.push.apply(temp, arguments[0]);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Rebuild all element\r\n\t\t\t\t\t\tif(arguments[1] !== true || isKeyed){\r\n\t\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reuse some element\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t// Clear unused element if current array < last array\r\n\t\t\t\t\t\t\tif(this.length < lastLength)\r\n\t\t\t\t\t\t\t\tprocessElement(this.length, 'removeRange', lastLength);\r\n\r\n\t\t\t\t\t\t\t// And start refreshing\r\n\t\t\t\t\t\t\tlist.refresh(0, this.length);\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual && list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reset virtual list\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reset();\r\n\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice' && arguments[0] === 0 && arguments[1] === void 0){\r\n\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\treturn Array.prototype.splice.apply(this, arguments);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(this.length, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'push'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(lastLength, 'append');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = 0; i < arguments.length; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(lastLength + i, 'append');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'shift'){\r\n\t\t\t\t\t\tprocessElement(0, 'remove');\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor > 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor--;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments[0] === 0 && arguments[1] === void 0)\r\n\t\t\t\t\t\t\treturn temp;\r\n\r\n\t\t\t\t\t\t// Removing data\r\n\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\tif(real < 0) real = lastLength + real;\r\n\r\n\t\t\t\t\t\tvar limit = arguments[1];\r\n\t\t\t\t\t\tif(!limit && limit !== 0) limit = this.length;\r\n\r\n\t\t\t\t\t\tfor (var i = limit - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tprocessElement(real + i, 'remove');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = real - limit;\r\n\r\n\t\t\t\t\t\tif(arguments.length >= 3){ // Inserting data\r\n\t\t\t\t\t\t\tlimit = arguments.length - 2;\r\n\r\n\t\t\t\t\t\t\t// Trim the index if more than length\r\n\t\t\t\t\t\t\tif(real >= this.length)\r\n\t\t\t\t\t\t\t\treal = this.length - 1;\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < limit; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(real + i, 'insertAfter');\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\t\tlist.$virtual.DOMCursor += limit;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(0, 'prepend');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = arguments.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\t\tprocessElement(i, 'prepend');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor !== 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor += arguments.length;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'softRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0], 'update', arguments[1]);\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'hardRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0] || 0, 'hardRefresh');\r\n\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = arguments[0] || 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(parentNode && parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\tdelete list.$virtual;\r\n\t\t\tlist.$virtual = {};\r\n\r\n\t\t\t// Transfer virtual DOM\r\n\t\t\tlist.$virtual.dom = tempDOM;\r\n\t\t\tif(callback !== void 0)\r\n\t\t\t\tlist.$virtual.callback = callback;\r\n\t\t\telse list.$virtual.callback_ = {ref:modelRef, var:eventVar};\r\n\r\n\t\t\tparentNode.replaceChild(template.html, parentChilds[1]);\r\n\t\t\tsf.internal.virtual_scroll.handle(list, targetNode, parentNode);\r\n\t\t\ttemplate.html.remove();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tvar scroller = internal.findScrollerElement(parentNode);\r\n\t\t\t\tif(scroller === null) return;\r\n\t\t\t\tscroller.classList.add('sf-scroll-element');\r\n\t\t\t\tinternal.addScrollerStyle();\r\n\t\t\t}, 500);\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\r\n\t\t// Todo: Enable auto item binding\r\n\t\tif(false && list.auto !== false){\r\n\t\t\t// for (var i = 0; i < list.length; i++) {\r\n\t\t\t// \tlist[i]\r\n\t\t\t// }\r\n\t\t}\r\n\r\n\t\thiddenProperty(list, '$replace', function(index, key, needle, func){\r\n\t\t\tvar elRef = list.getElement(index).sf$elementReferences;\r\n\t\t\tvar process = template.modelReference[key];\r\n\t\t\tif(process === void 0){\r\n\t\t\t\tconsole.error(\"Can't found binding for '\"+key+\"'\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < elRef.length; i++) {\r\n\t\t\t\tif(elRef[i].textContent === void 0 || elRef[i].ref.direct === void 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tif(process.indexOf(elRef[i].ref.direct) !== -1){\r\n\t\t\t\t\tvar ref = elRef[i].textContent;\r\n\t\t\t\t\tvar content = $.escapeText(list[index][key]).replace(needle, func);\r\n\r\n\t\t\t\t\t// Skip if nothing was changed\r\n\t\t\t\t\tif(list[index][key] === content) continue;\r\n\t\t\t\t\tref.textContent = ''; // Let this empty for later referencing\r\n\t\t\t\t\tref.sf$haveChilds = true;\r\n\t\t\t\t\tcontent = $.parseElement(content, true);\r\n\r\n\t\t\t\t\t// Remove old element if exist\r\n\t\t\t\t\twhile(ref.previousSibling && ref.previousSibling.sf$childRoot === ref){\r\n\t\t\t\t\t\tref.previousSibling.remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar parentNode_ = ref.parentNode;\r\n\t\t\t\t\tfor (var i = 0; i < content.length; i++) {\r\n\t\t\t\t\t\tcontent[i].sf$childRoot = ref;\r\n\t\t\t\t\t\tparentNode_.insertBefore(content[i], ref);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\thiddenProperty(list, 'refresh', function(index, length, property){\r\n\t\t\tif(index === void 0 || index.constructor === String){\r\n\t\t\t\tproperty = index;\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tlength = list.length;\r\n\t\t\t}\r\n\t\t\telse if(length === void 0) length = index + 1;\r\n\t\t\telse if(length.constructor === String){\r\n\t\t\t\tproperty = length;\r\n\t\t\t\tlength = index + 1;\r\n\t\t\t}\r\n\t\t\telse if(length < 0) length = list.length + length;\r\n\t\t\telse length += index;\r\n\r\n\t\t\t// Trim length\r\n\t\t\tvar overflow = list.length - length;\r\n\t\t\tif(overflow < 0) length = length + overflow;\r\n\r\n\t\t\tfor (var i = index; i < length; i++) {\r\n\t\t\t\tvar elem = list.getElement(i);\r\n\r\n\t\t\t\t// Create element if not exist\r\n\t\t\t\tif(elem === void 0){\r\n\t\t\t\t\tlist.hardRefresh(i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(isKeyed === true)\r\n\t\t\t\t\t\tlist.softRefresh(i);\r\n\t\t\t\t\telse if(syntheticTemplate(elem, template, property, list[i]) === false)\r\n\t\t\t\t\t\tcontinue; // Continue if no update\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== void 0 && callback.update)\r\n\t\t\t\t\tcallback.update(elem, 'replace');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar virtualChilds = null;\r\n\t\tif(list.$virtual)\r\n\t\t\tvirtualChilds = list.$virtual.dom.children;\r\n\t\thiddenProperty(list, 'getElement', function(index){\r\n\t\t\tif(virtualChilds !== null){\r\n\t\t\t\tvar ret = void 0;\r\n\t\t\t\tif(index < list.$virtual.DOMCursor)\r\n\t\t\t\t\treturn virtualChilds[index];\r\n\t\t\t\telse {\r\n\t\t\t\t\tindex -= list.$virtual.DOMCursor;\r\n\t\t\t\t\tvar childElement = parentNode.childElementCount - 2;\r\n\r\n\t\t\t\t\tif(index < childElement)\r\n\t\t\t\t\t\treturn parentChilds[index + 1];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn virtualChilds[index - childElement + list.$virtual.DOMCursor];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn void 0;\r\n\t\t\t}\r\n\r\n\t\t\treturn parentChilds[index];\r\n\t\t});\r\n\t}\r\n\r\n\tvar loopParser = function(name, template, script, targetNode, parentNode){\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\r\n\t\tvar items = root_(name)[method[1]];\r\n\t\tif(items === void 0)\r\n\t\t\titems = root_(name)[method[1]] = [];\r\n\r\n\t\ttemplate.setAttribute('sf-bind-list', method[1]);\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = template;\r\n\t\ttemplate = self.extractPreprocess(template, mask, name);\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\t\t\tvar tempDOM = document.createElement('div');\r\n\t\t\tvar modelRef = self.root[name];\r\n\r\n\t\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\t\tvar elem = templateParser(template, items[i]);\r\n\t\t\t\ttempDOM.appendChild(elem);\r\n\r\n\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\tsyntheticCache(elem, template, items[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// Enable element binding\r\n\t\t\tif(modelRef.sf$bindedKey === void 0)\r\n\t\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\t\tif(modelRef.sf$bindedKey[method[1]] === void 0)\r\n\t\t\t\tmodelRef.sf$bindedKey[method[1]] = null;\r\n\r\n\t\t\tObject.defineProperty(modelRef, method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tif(val.length === 0)\r\n\t\t\t\t\t\treturn items.splice(0);\r\n\t\t\t\t\treturn items.replace(val, true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tbindArray(template, items, mask, name, method[1], targetNode, parentNode, tempDOM);\r\n\r\n\t\t\t// Output to real DOM if not being used for virtual list\r\n\t\t\tif(items.$virtual === void 0){\r\n\t\t\t\tvar children = tempDOM.children;\r\n\t\t\t\tfor (var i = 0, n = children.length; i < n; i++) {\r\n\t\t\t\t\tparentNode.appendChild(children[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttempDOM.remove();\r\n\t\t\t\ttempDOM = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar callInputListener = function(model, property, value){\r\n\t\tvar callback = model['on$'+property];\r\n\t\tvar v2m = model['v2m$'+property];\r\n\t\tvar newValue1 = void 0; var newValue2 = void 0;\r\n\t\tif(callback !== void 0 || v2m !== void 0){\r\n\t\t\tvar old = model[property];\r\n\t\t\tif(old !== null && old !== void 0 && old.constructor === Array)\r\n\t\t\t\told = old.slice(0);\r\n\r\n\t\t\ttry{\r\n\t\t\t\tif(v2m !== void 0)\r\n\t\t\t\t\tnewValue1 = v2m(old, value);\r\n\r\n\t\t\t\tif(callback !== void 0)\r\n\t\t\t\t\tnewValue2 = callback(old, value);\r\n\t\t\t}catch(e){console.error(e)}\r\n\t\t}\r\n\t\treturn newValue2 !== void 0 ? newValue2 : newValue1;\r\n\t}\r\n\r\n\tvar inputBoundRunning = false;\r\n\tvar inputTextBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\r\n\t\tinputBoundRunning = true;\r\n\t\tvar ref = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar value = ref.typeData === Number ? Number(ref.value) : ref.value;\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== void 0)\r\n\t\t\tref.sfModel[ref.sfBounded] = newValue;\r\n\t\telse ref.sfModel[ref.sfBounded] = value;\r\n\t}\r\n\tvar inputFilesBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tvar ref = e.target;\r\n\t\tcallInputListener(ref.sfModel, ref.sfBounded, ref.files);\r\n\t\tref.sfModel[ref.sfBounded] = ref.files;\r\n\t}\r\n\r\n\tvar inputCheckBoxBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tinputBoundRunning = true;\r\n\t\tvar ref = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar value = ref.typeData === Number ? Number(ref.value) : ref.value;\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== void 0)\r\n\t\t\tvalue = newValue;\r\n\r\n\t\tvar model = ref.sfModel;\r\n\t\tvar constructor = model[ref.sfBounded].constructor;\r\n\r\n\t\tif(constructor === Array){\r\n\t\t\tvar i = model[ref.sfBounded].indexOf(value);\r\n\r\n\t\t\tif(i === -1 && ref.checked === true)\r\n\t\t\t\tmodel[ref.sfBounded].push(value);\r\n\t\t\telse if(i !== -1 && ref.checked === false)\r\n\t\t\t\tmodel[ref.sfBounded].splice(i, 1);\r\n\t\t}\r\n\t\telse if(constructor === Boolean || ref.typeData === Boolean)\r\n\t\t\tmodel[ref.sfBounded] = ref.checked;\r\n\t\telse model[ref.sfBounded] = value;\r\n\t}\r\n\r\n\tvar inputSelectBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tinputBoundRunning = true;\r\n\t\tvar ref = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar typeData = ref.typeData;\r\n\t\tif(ref.multiple === true){\r\n\t\t\tvar temp = ref.selectedOptions;\r\n\t\t\tvar value = [];\r\n\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\tvalue.push(typeData === Number ? Number(temp[i].value) : temp[i].value);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse value = typeData === Number ? Number(ref.selectedOptions[0].value) : ref.selectedOptions[0].value;\r\n\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== void 0)\r\n\t\t\tref.sfModel[ref.sfBounded] = newValue;\r\n\t\telse ref.sfModel[ref.sfBounded] = value;\r\n\t}\r\n\r\n\tvar assignElementData = {\r\n\t\tselect:function(model, property, element){\r\n\t\t\tvar list = element.options;\r\n\t\t\tvar typeData = element.typeData;\r\n\t\t\tvar arrayValue = model[property].constructor === Array ? model[property] : false;\r\n\t\t\tfor (var i = 0, n = list.length; i < n; i++) {\r\n\t\t\t\tif(arrayValue === false){\r\n\t\t\t\t\tif(typeData === String)\r\n\t\t\t\t\t\tlist[i].selected = list[i].value === model[property];\r\n\t\t\t\t\telse list[i].selected = list[i].value == model[property];\r\n\t\t\t\t}\r\n\t\t\t\telse list[i].selected = arrayValue.indexOf(typeData === Number ? Number(list[i].value) : list[i].value) !== -1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckbox:function(model, property, element){\r\n\t\t\tif(model[property].constructor === Array)\r\n\t\t\t\telement.checked = model[property].indexOf(element.typeData === Number ? Number(element.value) : element.value) !== -1;\r\n\t\t\telse if(model[property].constructor === Boolean)\r\n\t\t\t\telement.checked = Boolean(model[property]);\r\n\t\t\telse{\r\n\t\t\t\tif(element.typeData === String)\r\n\t\t\t\t\telement.checked = element.value === model[property];\r\n\t\t\t\telse element.checked = element.value == model[property];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar inputBoundRun = function(model, property, elements){\r\n\t\tif(inputBoundRunning === true)\r\n\t\t\treturn; // Avoid multiple assigment\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\tvar ev = new Event('change');\r\n\t\t\tev.fromSFFramework = true;\r\n\r\n\t\t\tif(elements.type === 1) // text\r\n\t\t\t\telements[i].value = model[property];\r\n\t\t\telse if(elements.type === 2) // select options\r\n\t\t\t\tassignElementData.select(model, property, elements[i]);\r\n\t\t\telse if(elements.type === 3) // radio\r\n\t\t\t\telements[i].checked = model[property] == elements[i].value;\r\n\t\t\telse if(elements.type === 4) // checkbox\r\n\t\t\t\tassignElementData.checkbox(model, property, elements[i]);\r\n\r\n\t\t\telements[i].dispatchEvent(ev);\r\n\t\t}\r\n\t}\r\n\r\n\tvar triggerInputEvent = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\tif(e.target.viewInputted === true){\r\n\t\t\te.target.viewInputted = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\te.target.dispatchEvent(new Event('input'));\r\n\t}\r\n\r\n\tvar elementBoundChanges = function(model, property, element, oneWay){\r\n\t\t// Enable multiple element binding\r\n\t\tif(model.sf$bindedKey === void 0)\r\n\t\t\tinitBindingInformation(model);\r\n\r\n\t\tvar type = 0;\r\n\t\tvar typeData = null;\r\n\t\tif(model[property] !== null && model[property] !== void 0)\r\n\t\t\ttypeData = model[property].constructor;\r\n\r\n\t\tvar assignedType = (element.getAttribute('typedata') || '').toLowerCase();\r\n\t\tif(assignedType === 'number')\r\n\t\t\ttypeData = Number;\r\n\r\n\t\telement.typeData = typeData;\r\n\t\t$.on(element, 'change', triggerInputEvent);\r\n\r\n\t\t// Bound value change\r\n\t\tif(element.tagName === 'TEXTAREA'){\r\n\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\telement.value = model[property];\r\n\t\t\ttype = 1;\r\n\t\t}\r\n\r\n\t\telse if(element.selectedOptions !== void 0){\r\n\t\t\t$.on(element, 'input', inputSelectBound);\r\n\t\t\ttype = 2;\r\n\r\n\t\t\tassignElementData.select(model, property, element);\r\n\t\t}\r\n\r\n\t\telse{\r\n\t\t\tvar type = element.type.toLowerCase();\r\n\t\t\tif(type === 'radio'){\r\n\t\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\t\ttype = 3;\r\n\r\n\t\t\t\telement.checked = model[property] == element.value;\r\n\t\t\t}\r\n\t\t\telse if(type === 'checkbox'){\r\n\t\t\t\t$.on(element, 'input', inputCheckBoxBound);\r\n\t\t\t\ttype = 4;\r\n\r\n\t\t\t\tassignElementData.checkbox(model, property, element);\r\n\t\t\t}\r\n\r\n\t\t\telse if(type === 'file'){\r\n\t\t\t\t$.on(element, 'input', inputFilesBound);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telse{\r\n\t\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\t\telement.value = model[property];\r\n\t\t\t\ttype = 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(oneWay === true) return;\r\n\t\tmodelToViewBinding(model, property, inputBoundRun, element, type);\r\n\t}\r\n\r\n\tvar bindInput = function(targetNode){\r\n\t\tvar temp = $('input[sf-bound], textarea[sf-bound], select[sf-bound], input[sf-bind], textarea[sf-bind], select[sf-bind]', targetNode);\r\n\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar model = sf.controller.modelName(element);\r\n\t\t\tif(!model) return;\r\n\t\t\tvar modelScope = self.root[model];\r\n\r\n\t\t\tvar oneWay = false;\r\n\t\t\tvar propertyName = element.getAttribute('sf-bound');\r\n\t\t\tif(propertyName === null){\r\n\t\t\t\tpropertyName = element.getAttribute('sf-bind');\r\n\t\t\t\toneWay = true;\r\n\t\t\t}\r\n\t\t\tif(propertyName === \"\")\r\n\t\t\t\tpropertyName = element.getAttribute('name');\r\n\r\n\t\t\tif(propertyName === null){\r\n\t\t\t\tconsole.error(\"Property key to be bound wasn't be found\", element);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(modelScope[propertyName] === void 0){\r\n\t\t\t\tconsole.error('Can\\'t get property \"'+propertyName+'\" on model \"' + model + '\"');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement.sfBounded = propertyName;\r\n\t\t\telement.sfModel = modelScope;\r\n\t\t\tif(oneWay === false){\r\n\t\t\t\telement.setAttribute('sf-bounded', '');\r\n\t\t\t\telement.removeAttribute('sf-bound');\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\telement.setAttribute('sf-binded', '');\r\n\t\t\t\telement.removeAttribute('sf-bind');\r\n\t\t\t}\r\n\r\n\t\t\telementBoundChanges(modelScope, propertyName, element, oneWay);\r\n\t\t}\r\n\t}\r\n\r\n\tvar alreadyInitialized = false;\r\n\tself.init = function(targetNode, queued){\r\n\t\tif(alreadyInitialized && !targetNode) return;\r\n\t\talreadyInitialized = true;\r\n\t\tsetTimeout(function(){\r\n\t\t\talreadyInitialized = false;\r\n\t\t}, 50);\r\n\r\n\t\tif(!targetNode) targetNode = document.body;\r\n\r\n\t\t// Handle Router Start ==>\r\n\t\tif(internal.router.enabled === true){\r\n\t\t\t// Before model binding\r\n\t\t\tvar temp = $('[sf-controller]', targetNode);\r\n\t\t\tvar sfPage = [];\r\n\r\n\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\tvar modelName = temp[i].getAttribute('sf-controller');\r\n\t\t\t\tvar model = sf.model.root[modelName];\r\n\t\t\t\tif(model.$page === void 0){\r\n\t\t\t\t\tmodel.$page = window.$([]);\r\n\r\n\t\t\t\t\tif(model.$page.push === void 0)\r\n\t\t\t\t\t\tObject.assign(model.$page.__proto__, internal.dom.extends_Dom7);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmodel.$page.push(temp[i]);\r\n\r\n\t\t\t\tif(sf.controller.pending[modelName] !== void 0)\r\n\t\t\t\t\tsf.controller.run(modelName);\r\n\r\n\t\t\t\tif(model.init !== void 0)\r\n\t\t\t\t\tmodel.init(temp[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// When the model was binded with the view\r\n\t\t\tinternal.afterModelBinding = function(){\r\n\t\t\t\tfor (var i = 0; i < sfPage.length; i++) {\r\n\t\t\t\t\tinternal.routerLocalEvent('when', temp[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinternal.afterModelBinding = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// <== Handle Router End\r\n\r\n\t\tself.parsePreprocess(queued || self.queuePreprocess(targetNode), queued);\r\n\t\tbindInput(targetNode);\r\n\r\n\t\t// Find element for array binding\r\n\t\trepeatedListBinding($('[sf-repeat-this]', targetNode), targetNode, queued);\r\n\r\n\t\t// Used by router\r\n\t\tif(internal.afterModelBinding !== undefined)\r\n\t\t\tinternal.afterModelBinding();\r\n\t}\r\n\r\n\tfunction repeatedListBinding(temp, targetNode, queued, controller_){\r\n\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\tvar element = temp[a];\r\n\t\t\tvar parent = element.parentElement;\r\n\r\n\t\t\tif(queued !== void 0)\r\n\t\t\t\telement.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(parent.classList.contains('sf-virtual-list')){\r\n\t\t\t\tvar ceiling = document.createElement(element.tagName);\r\n\t\t\t\tceiling.classList.add('virtual-spacer');\r\n\t\t\t\tvar floor = ceiling.cloneNode(true);\r\n\r\n\t\t\t\tceiling.classList.add('ceiling');\r\n\t\t\t\tparent.insertBefore(ceiling, parent.firstElementChild); // prepend\r\n\r\n\t\t\t\tfloor.classList.add('floor');\r\n\t\t\t\tparent.appendChild(floor); // append\r\n\t\t\t}\r\n\r\n\t\t\tvar after = element.nextElementSibling;\r\n\t\t\tif(after === null || element === after)\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = element.previousElementSibling;\r\n\t\t\tif(before === null || element === before)\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = element.getAttribute('sf-repeat-this');\r\n\t\t\telement.removeAttribute('sf-repeat-this');\r\n\r\n\t\t\t// Check if the element was already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(element.outerHTML))\r\n\t\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\t\tif(controller_ !== void 0)\r\n\t\t\t\tvar controller = controller_;\r\n\t\t\telse{\r\n\t\t\t\tvar controller = sf.controller.modelName(element);\r\n\t\t\t\tif(controller === void 0) continue;\r\n\t\t\t}\r\n\r\n\t\t\tloopParser(controller, element, script, targetNode, parent);\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t}\r\n\r\n\t// Reset model properties\r\n\t// Don't call if the removed element is TEXT or #comment\r\n\tvar DOMNodeRemoved = scope.DOMNodeRemoved = function(element, isScan){\r\n\t\tif(isScan === void 0){\r\n\t\t\tvar temp = element.querySelectorAll('[sf-controller]');\r\n\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\tDOMNodeRemoved(temp[i], true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(element.hasAttribute('sf-controller') !== false){\r\n\t\t\tvar modelName = element.sf$component === void 0 ? element.getAttribute('sf-controller') : element.sf$component;\r\n\t\t\tvar model = sf.model.root[modelName];\r\n\r\n\t\t\tif(model.$page){\r\n\t\t\t\tvar i = model.$page.indexOf(element);\r\n\t\t\t\tif(i !== -1)\r\n\t\t\t\t\tmodel.$page.splice(i)\r\n\t\t\t}\r\n\r\n\t\t\tif(model.destroy)\r\n\t\t\t\tmodel.destroy(element);\r\n\r\n\t\t\tremoveModelBinding(modelName);\r\n\t\t\tif(element.sf$component !== void 0){\r\n\t\t\t\tvar modelFrom = element.sf$componentFrom;\r\n\t\t\t\tvar components = sf.component.available[modelFrom];\r\n\t\t\t\tcomponents.splice(components.indexOf(modelName), 1);\r\n\t\t\t\tinternal.component.triggerEvent(modelFrom, 'removed', self.root[modelName]);\r\n\t\t\t\tdelete self.root[modelName];\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tsf(function(){\r\n\t\tvar everyRemovedNodes = function(nodes){\r\n\t\t\tif(nodes.nodeType !== 1 || nodes.firstElementChild === null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(nodes.sf$elementReferences !== void 0) return;\r\n\t\t\tDOMNodeRemoved(nodes);\r\n\t\t}\r\n\r\n\t\tif(typeof MutationObserver === 'function' && MutationObserver.prototype.observe){\r\n\t\t\tvar everyRecords = function(record){\r\n\t\t\t\trecord.removedNodes.forEach(everyRemovedNodes);\r\n\t\t\t}\r\n\r\n\t\t\tvar observer = new MutationObserver(function(records){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\trecords.forEach(everyRecords);\r\n\t\t\t});\r\n\r\n\t\t\tobserver.observe(document.body, { childList: true, subtree: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.body.addEventListener('DOMNodeRemoved', function(e){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\teveryRemovedNodes(e.target);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tvar removeModelBinding = self.reset = function(modelName){\r\n\t\tvar ref = self.root[modelName];\r\n\t\tif(ref === void 0)\r\n\t\t\treturn;\r\n\r\n\t\tvar bindedKey = ref.sf$bindedKey;\r\n\t\tvar temp = null;\r\n\t\tfor(var key in bindedKey){\r\n\t\t\tdelete bindedKey[key];\r\n\r\n\t\t\tif(ref[key] === void 0 || ref[key] === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(ref[key].constructor === String ||\r\n\t\t\t\tref[key].constructor === Number ||\r\n\t\t\t\tref[key].constructor === Boolean\r\n\t\t\t){/* Ok */}\r\n\r\n\t\t\telse if(ref[key].constructor === Array){\r\n\t\t\t\tif(ref[key].$virtual){\r\n\t\t\t\t\tref[key].$virtual.destroy();\r\n\t\t\t\t\tdelete ref[key].$virtual;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset property without copying the array\r\n\t\t\t\ttemp = ref[key].splice('obtain');\r\n\t\t\t\tdelete ref[key];\r\n\t\t\t\tref[key] = temp;\r\n\t\t\t}\r\n\t\t\telse continue;\r\n\r\n\t\t\tif(Object.getOwnPropertyDescriptor(ref, key) === void 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Reconfigure / Remove property descriptor\r\n\t\t\tvar temp = ref[key];\r\n\t\t\tdelete ref[key];\r\n\t\t\tref[key] = temp;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction modelToViewBinding(model, propertyName, callback, elementBind, type){\r\n\t\t// Enable multiple element binding\r\n\t\tif(model.sf$bindedKey === void 0)\r\n\t\t\tinitBindingInformation(model);\r\n\r\n\t\tif(model.sf$bindedKey[propertyName] !== void 0){\r\n\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\tif(ref.indexOf(callback) === -1)\r\n\t\t\t\tref.push(callback);\r\n\r\n\t\t\tif(elementBind !== void 0){\r\n\t\t\t\tif(ref.input === void 0){\r\n\t\t\t\t\tref.input = [elementBind];\r\n\t\t\t\t\tref.input.type = type;\r\n\t\t\t\t}\r\n\t\t\t\telse ref.input.push(elementBind);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tmodel.sf$bindedKey[propertyName] = [callback];\r\n\r\n\t\tif(elementBind !== void 0){\r\n\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\tref.input = [elementBind];\r\n\t\t\tref.input.type = type;\r\n\t\t}\r\n\r\n\t\t// Proxy property\r\n\t\tif(Object.getOwnPropertyDescriptor(model, propertyName).set !== void 0)\r\n\t\t\treturn;\r\n\r\n\t\tvar objValue = model[propertyName]; // Object value\r\n\t\tObject.defineProperty(model, propertyName, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\t\t\tget:function(getAssigner){\r\n\t\t\t\treturn objValue;\r\n\t\t\t},\r\n\t\t\tset:function(val){\r\n\t\t\t\tif(objValue !== val){\r\n\t\t\t\t\tvar m2v = model['m2v$'+propertyName];\r\n\t\t\t\t\tvar out = inputBoundRunning === false ? model['out$'+propertyName] : void 0;\r\n\t\t\t\t\tvar callback = inputBoundRunning === false ? model['on$'+propertyName] : void 0;\r\n\r\n\t\t\t\t\tif(callback !== void 0 || m2v !== void 0 || out !== void 0){\r\n\t\t\t\t\t\tvar newValue1 = void 0; var newValue2 = void 0; var newValue3 = void 0;\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tif(m2v !== void 0)\r\n\t\t\t\t\t\t\t\tnewValue1 = m2v(objValue, val);\r\n\r\n\t\t\t\t\t\t\tif(out !== void 0)\r\n\t\t\t\t\t\t\t\tnewValue2 = out(objValue, val);\r\n\r\n\t\t\t\t\t\t\tif(callback !== void 0)\r\n\t\t\t\t\t\t\t\tnewValue3 = callback(objValue, val);\r\n\t\t\t\t\t\t}catch(e){console.error(e)}\r\n\r\n\t\t\t\t\t\tobjValue = (newValue3 !== void 0 ? newValue3 : \r\n\t\t\t\t\t\t\t(newValue2 !== void 0 ? newValue2 : \r\n\t\t\t\t\t\t\t(newValue1 !== void 0 ? newValue1 : val)\r\n\t\t\t\t\t\t));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse objValue = val;\r\n\r\n\t\t\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\t\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\t\t\t\tif(inputBoundRun === ref[i]){\r\n\t\t\t\t\t\t\tif(inputBoundRunning !== true) // Avoid multiple assigment\r\n\t\t\t\t\t\t\t\tref[i](model, propertyName, ref.input);\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tref[i]();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinputBoundRunning = false;\r\n\t\t\t\treturn objValue;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvar dcBracket = /{{[^#][\\s\\S]*?}}/;\r\n\tself.bindElement = function(element){\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar data = self.extractPreprocess(element, null, modelName);\r\n\t\ttemplateParser(data, model, true);\r\n\t\tdelete data.addresses;\r\n\t\telement.parentNode.replaceChild(data.html, element);\r\n\r\n\t\telement = data.html;\r\n\r\n\t\tvar onChanges = function(){\r\n\t\t\tif(syntheticTemplate(element, data, void 0, model) === false)\r\n\t\t\t\t0; //No update\r\n\t\t};\r\n\r\n\t\tvar properties = data.modelRef_array;\r\n\t\tfor (var i = 0; i < properties.length; i++) {\r\n\t\t\tvar propertyName = properties[i][0];\r\n\r\n\t\t\tif(model[propertyName] === void 0)\r\n\t\t\t\tmodel[propertyName] = '';\r\n\r\n\t\t\tmodelToViewBinding(model, propertyName, onChanges);\r\n\t\t}\r\n\t}\r\n\r\n\tself.extractPreprocess = function(targetNode, mask, name){\r\n\t\t// Check if it's component\r\n\t\tvar tagName = targetNode.tagName.toLowerCase();\r\n\t\tif(sf.component.registered[tagName] !== void 0){\r\n\t\t\ttargetNode.parentNode.classList.add('sf-keyed-list');\r\n\t\t\ttargetNode.textContent = '';\r\n\t\t\ttargetNode.remove();\r\n\t\t\ttargetNode.setAttribute('sf-component-ignore', '');\r\n\t\t\treturn {\r\n\t\t\t\tcomponent:window['$'+capitalizeLetters(tagName.split('-'))],\r\n\t\t\t\tlist:targetNode.getAttribute('sf-bind-list')\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Remove repeated list from further process\r\n\t\tvar backup = targetNode.querySelectorAll('[sf-repeat-this]');\r\n\t\tfor (var i = 0; i < backup.length; i++) {\r\n\t\t\tvar current = backup[i];\r\n\t\t\tcurrent.insertAdjacentHTML('afterEnd', '<sfrepeat-this id=\"'+i+'\"></sfrepeat-this>');\r\n\t\t\tcurrent.remove();\r\n\t\t}\r\n\r\n\t\tvar copy = targetNode.outerHTML;\r\n\r\n\t\t// Mask the referenced item\r\n\t\tif(mask !== null)\r\n\t\t\tcopy = copy.split('#'+mask).join('_model_');\r\n\t\telse{ // Replace all masked item\r\n\t\t\tcopy.replace(/sf-repeat-this=\"(?:\\W+|)(\\w+)/g, function(full, match){\r\n\t\t\t\tcopy = copy.split('#'+match).join('_model_');\r\n\t\t\t\tcopy = copy.replace(RegExp(sf.regex.strictVar+\"(\"+match+\")\\\\b\", 'g'), '_model_');\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Extract data to be parsed\r\n\t\tcopy = uniqueDataParser(copy, null, mask, name, '#noEval');\r\n\t\tvar preParsed = copy[1];\r\n\t\tvar _content_ = copy[2];\r\n\t\tcopy = dataParser(copy[0], null, mask, name, '#noEval', preParsed);\r\n\r\n\t\tfunction findModelProperty(){\r\n\t\t\tif(mask === null){ // For model items\r\n\t\t\t\t// Get model keys and sort by text length, make sure the longer one is from first index to avoid wrong match\r\n\t\t\t\tvar extract = RegExp('(?:{{.*?\\\\b|_modelScope\\\\.)('+self.modelKeys(self.root[name]).sort(function(a, b){\r\n\t\t\t\t\treturn b.length - a.length\r\n\t\t\t\t}).join('|')+')(\\\\b.*?}}|)', 'g');\r\n\t\t\t}\r\n\t\t\telse var extract = sf.regex.arrayItemsObserve; // For array items\r\n\t\t\tvar found = {};\r\n\r\n\t\t\tfor (var i = 0; i < preParsed.length; i++) {\r\n\t\t\t\tvar current = preParsed[i];\r\n\r\n\t\t\t\t// Text or attribute\r\n\t\t\t\tif(current.type === 0){\r\n\t\t\t\t\tcurrent.data[0].split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(found[match] === void 0) found[match] = [i];\r\n\t\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Dynamic data\r\n\t\t\t\tif(current.type === 1){\r\n\t\t\t\t\tvar checkList = current.if.join(';');\r\n\r\n\t\t\t\t\tif(current.elseValue !== null)\r\n\t\t\t\t\t\tcheckList += ';' + current.elseValue;\r\n\r\n\t\t\t\t\tfor (var a = 0; a < current.elseIf.length; a++) {\r\n\t\t\t\t\t\tcheckList += current.elseIf[a].join(';');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(current.type === 2)\r\n\t\t\t\t\tvar checkList = current.data[0];\r\n\r\n\t\t\t\tcheckList = checkList.replace(/_result_ \\+= _content_\\.take\\(.*?, ([0-9]+)\\);/g, function(full, match){\r\n\t\t\t\t\treturn _content_[match];\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// console.log(99, checkList);\r\n\t\t\t\tcheckList.split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found[match] === void 0) found[match] = [i];\r\n\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn found;\r\n\t\t}\r\n\r\n\t\t// Rebuild element\r\n\t\tcopy = $.parseElement(copy)[0];\r\n\r\n\t\t// Restore element repeated list\r\n\t\tvar restore = copy.querySelectorAll('sfrepeat-this');\r\n\t\tfor (var i = 0; i < restore.length; i++) {\r\n\t\t\tvar current = restore[i];\r\n\t\t\tcurrent.parentNode.replaceChild(backup[current.id], current);\r\n\t\t}\r\n\r\n\t\t// Start addressing\r\n\t\tvar nodes = self.queuePreprocess(copy, true).reverse();\r\n\t\tvar addressed = [];\r\n\r\n\t\tfunction addressAttributes(currentNode){\r\n\t\t\tvar attrs = currentNode.attributes;\r\n\t\t\tvar keys = [];\r\n\t\t\tvar indexes = 0;\r\n\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\tvar found = attrs[a].value.split('{{%=');\r\n\t\t\t\tif(found.length !== 1){\r\n\t\t\t\t\tif(attrs[a].name[0] === ':'){\r\n\t\t\t\t\t\tvar key = {\r\n\t\t\t\t\t\t\tname:attrs[a].name.slice(1),\r\n\t\t\t\t\t\t\tvalue:attrs[a].value\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tcurrentNode.removeAttribute(attrs[a].name);\r\n\t\t\t\t\t\tcurrentNode.setAttribute(key.name, '');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse var key = {\r\n\t\t\t\t\t\tname:attrs[a].name,\r\n\t\t\t\t\t\tvalue:attrs[a].value\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tindexes = [];\r\n\t\t\t\t\tfound = key.value.replace(/{{%=([0-9]+)/g, function(full, match){\r\n\t\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found === '' && indexes.length === 1)\r\n\t\t\t\t\t\tkey.direct = indexes[0];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tkey.parse_index = indexes;\r\n\r\n\t\t\t\t\tkeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn keys;\r\n\t\t}\r\n\r\n\t\tvar currentElement = addressAttributes(copy);\r\n\t\tif(currentElement.length !== 0)\r\n\t\t\taddressed.push({\r\n\t\t\t\tnodeType:1,\r\n\t\t\t\taddress:[0],\r\n\t\t\t\tattributes:currentElement\r\n\t\t\t});\r\n\r\n\t\tfor (var i = 0; i < nodes.length; i++) {\r\n\t\t\tvar temp = {\r\n\t\t\t\tnodeType:nodes[i].nodeType\r\n\t\t\t};\r\n\r\n\t\t\tif(temp.nodeType === 1){ // Element\r\n\t\t\t\ttemp.attributes = addressAttributes(nodes[i]);\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\telse if(temp.nodeType === 3){ // Text node\r\n\t\t\t\tvar innerHTML = nodes[i].textContent;\r\n\t\t\t\tvar indexes = [];\r\n\r\n\t\t\t\tinnerHTML.replace(/{{%%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Check for dynamic mode\r\n\t\t\t\tif(indexes.length !== 0){\r\n\t\t\t\t\tinnerHTML = innerHTML.split(/{{%%=[0-9]+/gm);\r\n\t\t\t\t\tfor (var a = 0; a < innerHTML.length; a++) {\r\n\t\t\t\t\t\tinnerHTML[a] = trimIndentation(innerHTML[a]).trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodes[i].textContent = innerHTML.shift();\r\n\r\n\t\t\t\t\tvar parent = nodes[i].parentNode;\r\n\t\t\t\t\tvar nextSibling = nodes[i].nextSibling;\r\n\r\n\t\t\t\t\t// Dynamic boundary start\r\n\t\t\t\t\tvar addressStart = null;\r\n\t\t\t\t\tif(indexes.length !== 0 && nodes[i].textContent.length !== 0)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i], true);\r\n\t\t\t\t\telse if(nodes[i].previousSibling !== null)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i].previousSibling, true);\r\n\r\n\t\t\t\t\t// Find boundary ends\r\n\t\t\t\t\tvar commentFlag = [];\r\n\t\t\t\t\tfor(var a = 0; a < indexes.length; a++){\r\n\t\t\t\t\t\tvar flag = document.createComment('');\r\n\t\t\t\t\t\tparent.insertBefore(flag, nextSibling);\r\n\t\t\t\t\t\tcommentFlag.push({\r\n\t\t\t\t\t\t\tnodeType:-1,\r\n\t\t\t\t\t\t\tparse_index:indexes[a],\r\n\t\t\t\t\t\t\tstartFlag:addressStart,\r\n\t\t\t\t\t\t\taddress:$.getSelector(flag, true)\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(innerHTML[a]){\r\n\t\t\t\t\t\t\tvar textNode = document.createTextNode(innerHTML[a]);\r\n\t\t\t\t\t\t\tparent.insertBefore(textNode, nextSibling);\r\n\r\n\t\t\t\t\t\t\t// Get new start flag\r\n\t\t\t\t\t\t\tif(a + 1 < indexes.length)\r\n\t\t\t\t\t\t\t\taddressStart = $.getSelector(textNode, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Merge boundary address\r\n\t\t\t\t\tArray.prototype.push.apply(addressed, commentFlag);\r\n\t\t\t\t\tif(nodes[i].textContent === ''){\r\n\t\t\t\t\t\tnodes[i].remove();\r\n\t\t\t\t\t\tfor (var a = 0; a < commentFlag.length; a++) {\r\n\t\t\t\t\t\t\tvar ref = commentFlag[a].address;\r\n\t\t\t\t\t\t\tref[ref.length - 1]--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(nodes[i].textContent.search(/{{%=[0-9]+/) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if it's only model value\r\n\t\t\t\tindexes = [];\r\n\t\t\t\tinnerHTML = nodes[i].textContent.replace(/{{%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(innerHTML === '' && indexes.length === 1)\r\n\t\t\t\t\ttemp.direct = indexes[0];\r\n\t\t\t\telse{\r\n\t\t\t\t\ttemp.value = nodes[i].textContent;\r\n\t\t\t\t\ttemp.parse_index = indexes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\taddressed.push(temp);\r\n\t\t}\r\n\r\n\t\tvar modelReference = findModelProperty();\r\n\t\tvar keys = Object.keys(modelReference);\r\n\t\tvar asArray = [];\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tasArray.push([keys[i], keys[i].split('.')]);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\thtml:copy,\r\n\t\t\tparse:preParsed,\r\n\t\t\taddresses:addressed,\r\n\t\t\tmodelReference:modelReference,\r\n\t\t\tmodelRef_array:asArray\r\n\t\t};\r\n\t}\r\n\r\n\tvar enclosedHTMLParse = false;\r\n\tvar excludes = ['HTML','HEAD','STYLE','LINK','META','SCRIPT','OBJECT','IFRAME'];\r\n\tself.queuePreprocess = function(targetNode, extracting){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = childNodes.length - 1; i >= 0; i--) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\r\n\t\t\tif(extracting === void 0 && excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tif(enclosedHTMLParse === true) continue;\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\r\n\t\t\t\t// Skip element and it's childs that already bound to prevent vulnerability\r\n\t\t\t\tif(attrs['sf-bind-key'] || attrs['sf-repeat-this'] || attrs['sf-bind-list'] || currentNode.sf$elementReferences !== void 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tArray.prototype.push.apply(temp, self.queuePreprocess(currentNode, extracting));\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tif(currentNode.textContent.length === 0){\r\n\t\t\t\t\tcurrentNode.remove();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// The scan is from bottom to first index\r\n\t\t\t\tvar enclosing = currentNode.textContent.indexOf('{[');\r\n\t\t\t\tif(enclosing !== -1)\r\n\t\t\t\t\tenclosedHTMLParse = false;\r\n\t\t\t\telse if(enclosedHTMLParse === true)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Start enclosed if closing pattern was found\r\n\t\t\t\tvar enclosed = currentNode.textContent.indexOf(']}');\r\n\t\t\t\tif(enclosed !== -1 && (enclosing === -1 || enclosing > enclosed)){ // avoid {[ ... ]}\r\n\t\t\t\t\tenclosedHTMLParse = true; // when ]} ... \r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tif(extracting === void 0){\r\n\t\t\t\t\t\ttemp.push(currentNode.parentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn temp;\r\n\t}\r\n\r\n\tself.parsePreprocess = function(nodes, queued){\r\n\t\tfor (var a = 0; a < nodes.length; a++) {\r\n\t\t\t// Get reference for debugging\r\n\t\t\tvar current = processingElement = nodes[a];\r\n\r\n\t\t\tvar modelElement = sf.controller.modelElement(current);\r\n\t\t\tif(modelElement === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar model = modelElement.sf$component === void 0 ? modelElement.getAttribute('sf-controller') : modelElement.sf$component;\r\n\r\n\t\t\tif(queued !== void 0)\r\n\t\t\t\tcurrent.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(internal.modelPending[model] || self.root[model] === undefined)\r\n\t\t\t\tself(model);\r\n\r\n\t\t\tvar modelRef = self.root[model];\r\n\r\n\t\t\t// Double check if the child element already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(current.innerHTML)){\r\n\t\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\t\tconsole.log(processingElement.cloneNode(true));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(current.hasAttribute('sf-bind-ignore') === false)\r\n\t\t\t\tself.bindElement(current);\r\n\t\t\telse{\r\n\t\t\t\tvar temp = uniqueDataParser(current.innerHTML, modelRef, false, model);\r\n\t\t\t\tcurrent.innerHTML = dataParser(temp, modelRef, false, model);\r\n\t\t\t\tvar attrs = current.attributes;\r\n\t\t\t\tfor (var i = 0; i < attrs.length; i++) {\r\n\t\t\t\t\tif(attrs[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tvar attr = attrs[i];\r\n\t\t\t\t\t\tattr.value = dataParser(attr.value, modelRef, false, model);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initBindingInformation(modelRef){\r\n\t\tif(modelRef.sf$bindedKey !== void 0)\r\n\t\t\treturn;\r\n\r\n\t\t// Element binding data\r\n\t\tObject.defineProperty(modelRef, 'sf$bindedKey', {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable:false,\r\n\t\t\twritable:true,\r\n\t\t\tvalue:{}\r\n\t\t});\r\n\t}\r\n})();","sf.API = function(method, url, data, success, complete, accessToken, getXHR){\r\n\tif(typeof data !== 'object')\r\n\t\tdata = {};\r\n\r\n\tvar req = {\r\n\t\turl:url,\r\n\t\tdataType:'json',\r\n\t\tmethod:'POST',\r\n\t\tsuccess:function(obj){\r\n\t\t\tif(!sf.API.onSuccess(obj) && success)\r\n\t\t\t\tsuccess(obj, url);\r\n\r\n\t\t\tif(complete) complete(200);\r\n\t\t},\r\n\t\terror:function(data, status){\r\n\t\t\ttry{\r\n\t\t\t\tdata = JSON.parse(data.response);\r\n\t\t\t}catch(e){}\r\n\r\n\t\t\tsf.API.onError(status, data)\r\n\t\t\tif(complete) complete(status, data);\r\n\t\t},\r\n\t};\r\n\r\n\tif(data.constructor !== FormData)\r\n\t\treq.contentType = \"application/json\";\r\n\r\n\tdata._method = method.toUpperCase();\r\n\r\n\tif(accessToken){\r\n\t\treq.beforeSend = function(xhr){\r\n\t\t    xhr.setRequestHeader('X-Authorization', 'Bearer '+accessToken);\r\n\t\t    getXHR && getXHR(xhr);\r\n\t\t}\r\n\t}\r\n\telse if(getXHR !== void 0)\r\n\t\treq.beforeSend = getXHR;\r\n\t\r\n\treq.data = data;\r\n\treturn sf.ajax(req);\r\n}\r\n\r\nsf.API.onError = function(status, data){};\r\nsf.API.onSuccess = function(obj){};\r\n\r\nvar extendsAPI = {\r\n\tget:function(url, data, success, complete){\r\n\t\treturn sf.API('get', this.url+url, data, success, complete, this.accessToken);\r\n\t},\r\n\tpost:function(url, data, success, complete){\r\n\t\treturn sf.API('post', this.url+url, data, success, complete, this.accessToken);\r\n\t},\r\n\tdelete:function(url, data, success, complete){\r\n\t\treturn sf.API('delete', this.url+url, data, success, complete, this.accessToken);\r\n\t},\r\n\tput:function(url, data, success, complete){\r\n\t\treturn sf.API('put', this.url+url, data, success, complete, this.accessToken);\r\n\t},\r\n\tupload:function(url, formData, success, complete, progress){\r\n\t\tif(formData.constructor !== FormData)\r\n\t\t\treturn console.error(\"Parameter 2 must be a FormData\");\r\n\r\n\t\tvar getXHR = void 0;\r\n\t\tif(progress !== void 0){\r\n\t\t\tgetXHR = function(xhr){\r\n\t\t\t\txhr.upload.onprogress = function(ev){\r\n\t            \tif(ev.lengthComputable)\r\n\t            \t    progress(ev.loaded, ev.total);\r\n\t            }\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn sf.API('post', this.url+url, formData, success, complete, this.accessToken, getXHR);\r\n\t},\r\n};\r\n\r\nsf.API.instance = function(url){\r\n\tvar self = this;\r\n\tself.url = url;\r\n\tself.accessToken = false;\r\n\r\n\tObject.assign(this, extendsAPI);\r\n}","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tself.pending = {};\r\n\tself.active = {};\r\n\r\n\tinternal.controller = {\r\n\t\tpending:[]\r\n\t};\r\n\r\n\tself.for = function(name, func){\r\n\t\tif(sf.component.registered[name]){\r\n\t\t\tsf.component.registered[name][1] = func;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(self.active[name])\r\n\t\t\treturn func();\r\n\r\n\t\tself.pending[name] = func;\r\n\t}\r\n\r\n\tself.modelScope = function(element, func){\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = element.getAttribute('sf-bind-list');\r\n\t\tif(!bindedList){\r\n\t\t\tvar parentEl = $.parent(element, '[sf-bind-list]');\r\n\t\t\tif(parentEl !== null)\r\n\t\t\t\tbindedList = parentEl.getAttribute('sf-bind-list');\r\n\t\t}\r\n\t\telse var parentEl = element;\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(sf.model.root[model], -1);\r\n\t\t\telse return sf.model.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = $.prevAll(parentEl, '[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(sf.model.root[model][bindedList], bindedListIndex);\r\n\t\telse return sf.model.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.modelElement = function(element){\r\n\t\tif(element.nodeType === 1 && element.hasAttribute('sf-controller') === true)\r\n\t\t\treturn element;\r\n\r\n\t\treturn $.parent(element, '[sf-controller]');\r\n\t}\r\n\r\n\tself.modelName = function(element){\r\n\t\tvar name = self.modelElement(element);\r\n\t\tif(name === null){\r\n\t\t\tconsole.error(\"Can't find any controller for\", element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tname = name.sf$component === void 0? name.getAttribute('sf-controller') : name.sf$component;\r\n\r\n\t\t// Initialize it first\r\n\t\tif(name !== void 0 && !self.active[name])\r\n\t\t\tself.run(name);\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = e.target;\r\n\t\tvar script = element.getAttribute('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = $.parent(element, '[sf-click]');\r\n\t\t\tscript = element.getAttribute('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = $.parent(element, '[sf-controller]');\r\n\t\tmodel = model.sf$component === void 0 ? model.getAttribute('sf-controller') : model.sf$component;\r\n\t\tvar _modelScope = sf.model.root[model];\r\n\r\n\t\tif(_modelScope === void 0)\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(_modelScope).join('|');\r\n\t\tscript = avoidQuotes(script, function(script_){\r\n\t\t\treturn script_.replace(RegExp(sf.regex.strictVar+'('+modelKeys+')\\\\b', 'g'), function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script.shift();\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(err) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot call `'+method_+'`]\\n', element, err);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0){\r\n\t\t\t// Replace `this` to `element`\r\n\t\t\tscript = eval(('['+script+']').replace(/,this|\\[this/g, function(found){\r\n\t\t\t\treturn found[0] + 'element';\r\n\t\t\t}));\r\n\t\t}\r\n\t\telse script = [e];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element, script);\r\n\t\t\te.preventDefault();\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', element, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tself.run = function(name, func){\r\n\t\tif(sf.component.registered[name])\r\n\t\t\treturn console.error(\"'\"+name+\"' is registered as a component\");\r\n\r\n\t\tif(self.pending[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\r\n\t\t\tself.pending[name](sf.model.root[name], root_);\r\n\t\t\tself.active[name] = true;\r\n\t\t\tdelete self.pending[name];\r\n\r\n\t\t\tvar i = internal.controller.pending.indexOf(name);\r\n\t\t\tif(i !== -1)\r\n\t\t\t\tinternal.controller.pending.splice(i, 1);\r\n\t\t}\r\n\r\n\t\tif(sf.model.root[name] === void 0)\r\n\t\t\tsf.model.root[name] = {};\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], root_);\r\n\t}\r\n\r\n\tself.init = function(parent){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(parent);\r\n\t\t\t});\r\n\r\n\t\tvar temp = $('[sf-controller]', parent || document.body);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tself.run(temp[i].sf$component === void 0? temp[i].getAttribute('sf-controller') : temp[i].sf$component);\r\n\t\t}\r\n\t}\r\n\r\n\t// Create listener for sf-click\r\n\tdocument.addEventListener('DOMContentLoaded', function(){\r\n\t\t$.on(document.body, 'click', '[sf-click]', listenSFClick);\r\n\t\tself.init();\r\n\t}, {capture:true, once:true});\r\n}\r\n\r\nvar root_ = function(scope){\r\n\tif(sf.component.registered[scope]){\r\n\t\tvar available = [];\r\n\t\tvar component = sf.component.available[scope];\r\n\t\tif(component !== void 0){\r\n\t\t\tfor (var i = 0; i < component.length; i++) {\r\n\t\t\t\tavailable.push(sf.model.root[component[i]]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn available;\r\n\t}\r\n\r\n\tif(!sf.model.root[scope]){\r\n\t\tvar scope_ = sf.model.root[scope] = {};\r\n\r\n\t\tif(internal.modelPending[scope] !== void 0){\r\n\t\t\tvar ref = internal.modelPending[scope];\r\n\t\t\tfor (var a = 0; a < ref.length; a++) {\r\n\t\t\t\tref[a](scope_, root_);\r\n\t\t\t}\r\n\r\n\t\t\tdelete internal.modelPending[scope];\r\n\t\t}\r\n\t}\r\n\r\n\treturn sf.model.root[scope];\r\n}","/*\r\n  Special Thanks to Vladimir Kharlampidi\r\n  https://github.com/nolimits4web/\r\n*/\r\n\r\nvar globals = {};\r\nvar jsonpRequests = 0;\r\nfunction Request(requestOptions) {\r\n    var globalsNoCallbacks = Object.assign({}, globals);\r\n    ('beforeCreate beforeOpen beforeSend error complete success statusCode').split(' ').forEach(function (callbackName) {\r\n        delete globalsNoCallbacks[callbackName];\r\n    });\r\n    var defaults = Object.assign({\r\n        url: window.location.toString(),\r\n        method: 'GET',\r\n        data: false,\r\n        async: true,\r\n        cache: true,\r\n        user: '',\r\n        password: '',\r\n        headers: {},\r\n        xhrFields: {},\r\n        statusCode: {},\r\n        processData: true,\r\n        dataType: 'text',\r\n        contentType: 'application/x-www-form-urlencoded',\r\n        timeout: 0,\r\n    }, globalsNoCallbacks);\r\n    var options = Object.assign({}, defaults, requestOptions);\r\n    var proceedRequest;\r\n    // Function to run XHR callbacks and events\r\n    function fireCallback(callbackName) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        /*\r\n          Callbacks:\r\n          beforeCreate (options),\r\n          beforeOpen (xhr, options),\r\n          beforeSend (xhr, options),\r\n          error (xhr, status),\r\n          complete (xhr, stautus),\r\n          success (response, status, xhr),\r\n          statusCode ()\r\n        */\r\n        var globalCallbackValue;\r\n        var optionCallbackValue;\r\n        if (globals[callbackName]) {\r\n            globalCallbackValue = globals[callbackName].apply(globals, data);\r\n        }\r\n        if (options[callbackName]) {\r\n            optionCallbackValue = options[callbackName].apply(options, data);\r\n        }\r\n        if (typeof globalCallbackValue !== 'boolean')\r\n            globalCallbackValue = true;\r\n        if (typeof optionCallbackValue !== 'boolean')\r\n            optionCallbackValue = true;\r\n        return (globalCallbackValue && optionCallbackValue);\r\n    }\r\n    // Before create callback\r\n    proceedRequest = fireCallback('beforeCreate', options);\r\n    if (proceedRequest === false)\r\n        return void 0;\r\n    // For jQuery guys\r\n    if (options.type)\r\n        options.method = options.type;\r\n    // Parameters Prefix\r\n    var paramsPrefix = options.url.indexOf('?') >= 0 ? '&' : '?';\r\n    // UC method\r\n    var method = options.method.toUpperCase();\r\n    // Data to modify GET URL\r\n    if ((method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') && options.data) {\r\n        var stringData = void 0;\r\n        if (typeof options.data === 'string') {\r\n            // Should be key=value string\r\n            if (options.data.indexOf('?') >= 0)\r\n                stringData = options.data.split('?')[1];\r\n            else\r\n                stringData = options.data;\r\n        }\r\n        else {\r\n            // Should be key=value object\r\n            stringData = serializeQuery(options.data);\r\n        }\r\n        if (stringData.length) {\r\n            options.url += paramsPrefix + stringData;\r\n            if (paramsPrefix === '?')\r\n                paramsPrefix = '&';\r\n        }\r\n    }\r\n    // JSONP\r\n    if (options.dataType === 'json' && options.url.indexOf('callback=') >= 0) {\r\n        var callbackName_1 = \"jsonp_\" + (Date.now() + ((jsonpRequests += 1)));\r\n        var abortTimeout_1;\r\n        var callbackSplit = options.url.split('callback=');\r\n        var requestUrl = callbackSplit[0] + \"callback=\" + callbackName_1;\r\n        if (callbackSplit[1].indexOf('&') >= 0) {\r\n            var addVars = callbackSplit[1].split('&').filter(function (el) { return el.indexOf('=') > 0; }).join('&');\r\n            if (addVars.length > 0)\r\n                requestUrl += \"&\" + addVars;\r\n        }\r\n        // Create script\r\n        var script_1 = document.createElement('script');\r\n        script_1.type = 'text/javascript';\r\n        script_1.onerror = function onerror() {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('error', null, 'scripterror');\r\n            fireCallback('complete', null, 'scripterror');\r\n        };\r\n        script_1.src = requestUrl;\r\n        // Handler\r\n        window[callbackName_1] = function jsonpCallback(data) {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('success', data);\r\n            script_1.parentNode.removeChild(script_1);\r\n            script_1 = null;\r\n            delete window[callbackName_1];\r\n        };\r\n        document.querySelector('head').appendChild(script_1);\r\n        if (options.timeout > 0) {\r\n            abortTimeout_1 = setTimeout(function () {\r\n                script_1.parentNode.removeChild(script_1);\r\n                script_1 = null;\r\n                fireCallback('error', null, 'timeout');\r\n            }, options.timeout);\r\n        }\r\n        return void 0;\r\n    }\r\n    // Cache for GET/HEAD requests\r\n    if (method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') {\r\n        if (options.cache === false) {\r\n            options.url += paramsPrefix + \"_nocache\" + Date.now();\r\n        }\r\n    }\r\n    // Create XHR\r\n    var xhr = new XMLHttpRequest();\r\n    // Save Request URL\r\n    xhr.requestUrl = options.url;\r\n    xhr.requestParameters = options;\r\n    // Before open callback\r\n    proceedRequest = fireCallback('beforeOpen', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Open XHR\r\n    xhr.open(method, options.url, options.async, options.user, options.password);\r\n    // Create POST Data\r\n    var postData = null;\r\n    if ((method === 'POST' || method === 'PUT' || method === 'PATCH') && options.data) {\r\n        if (options.processData) {\r\n            var postDataInstances = [ArrayBuffer, Blob, Document, FormData];\r\n            // Post Data\r\n            if (postDataInstances.indexOf(options.data.constructor) >= 0) {\r\n                postData = options.data;\r\n            }\r\n            else {\r\n                // POST Headers\r\n                var boundary = \"---------------------------\" + Date.now().toString(16);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    xhr.setRequestHeader('Content-Type', \"multipart/form-data; boundary=\" + boundary);\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader('Content-Type', options.contentType);\r\n                }\r\n                postData = '';\r\n                var data = serializeQuery(options.data);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    data = data.split('&');\r\n                    var newData = [];\r\n                    for (var i = 0; i < data.length; i += 1) {\r\n                        newData.push(\"Content-Disposition: form-data; name=\\\"\" + data[i].split('=')[0] + \"\\\"\\r\\n\\r\\n\" + data[i].split('=')[1] + \"\\r\\n\");\r\n                    }\r\n                    postData = \"--\" + boundary + \"\\r\\n\" + newData.join(\"--\" + boundary + \"\\r\\n\") + \"--\" + boundary + \"--\\r\\n\";\r\n                }\r\n                else if (options.contentType === 'application/json') {\r\n                    postData = JSON.stringify(options.data);\r\n                }\r\n                else {\r\n                    postData = data;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            postData = options.data;\r\n            xhr.setRequestHeader('Content-Type', options.contentType);\r\n        }\r\n    }\r\n    // Additional headers\r\n    if (options.headers) {\r\n        Object.keys(options.headers).forEach(function (headerName) {\r\n            xhr.setRequestHeader(headerName, options.headers[headerName]);\r\n        });\r\n    }\r\n    // Check for crossDomain\r\n    if (typeof options.crossDomain === 'void 0') {\r\n        // eslint-disable-next-line\r\n        options.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(options.url) && RegExp.$2 !== window.location.host;\r\n    }\r\n    if (!options.crossDomain) {\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    }\r\n    if (options.xhrFields) {\r\n        Object.assign(xhr, options.xhrFields);\r\n    }\r\n    var xhrTimeout;\r\n    // Handle XHR\r\n    xhr.onload = function onload() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 0) {\r\n            var responseData = void 0;\r\n            if (options.dataType === 'json') {\r\n                var parseError = void 0;\r\n                try {\r\n                    responseData = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (err) {\r\n                    parseError = true;\r\n                }\r\n                if (!parseError) {\r\n                    fireCallback('success', responseData, xhr.status, xhr);\r\n                }\r\n                else {\r\n                    fireCallback('error', xhr, 'parseerror');\r\n                }\r\n            }\r\n            else {\r\n                responseData = xhr.responseType === 'text' || xhr.responseType === '' ? xhr.responseText : xhr.response;\r\n                fireCallback('success', responseData, xhr.status, xhr);\r\n            }\r\n        }\r\n        else {\r\n            fireCallback('error', xhr, xhr.status);\r\n        }\r\n        if (options.statusCode) {\r\n            if (globals.statusCode && globals.statusCode[xhr.status])\r\n                globals.statusCode[xhr.status](xhr);\r\n            if (options.statusCode[xhr.status])\r\n                options.statusCode[xhr.status](xhr);\r\n        }\r\n        fireCallback('complete', xhr, xhr.status);\r\n    };\r\n    xhr.onerror = function onerror() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        fireCallback('error', xhr, xhr.status);\r\n        fireCallback('complete', xhr, 'error');\r\n    };\r\n    // Timeout\r\n    if (options.timeout > 0) {\r\n        xhr.onabort = function onabort() {\r\n            if (xhrTimeout)\r\n                clearTimeout(xhrTimeout);\r\n        };\r\n        xhrTimeout = setTimeout(function () {\r\n            xhr.abort();\r\n            fireCallback('error', xhr, 'timeout');\r\n            fireCallback('complete', xhr, 'timeout');\r\n        }, options.timeout);\r\n    }\r\n    // Ajax start callback\r\n    proceedRequest = fireCallback('beforeSend', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Send XHR\r\n    xhr.send(postData);\r\n    // Return XHR object\r\n    return xhr;\r\n}\r\nfunction RequestShortcut(method) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    var _a = [], url = _a[0], data = _a[1], success = _a[2], error = _a[3], dataType = _a[4];\r\n    if (typeof args[1] === 'function') {\r\n        url = args[0], success = args[1], error = args[2], dataType = args[3];\r\n    }\r\n    else {\r\n        url = args[0], data = args[1], success = args[2], error = args[3], dataType = args[4];\r\n    }\r\n    [success, error].forEach(function (callback) {\r\n        if (typeof callback === 'string') {\r\n            dataType = callback;\r\n            if (callback === success)\r\n                success = void 0;\r\n            else\r\n                error = void 0;\r\n        }\r\n    });\r\n    dataType = dataType || (method === 'json' || method === 'postJSON' ? 'json' : void 0);\r\n    var requestOptions = {\r\n        url: url,\r\n        method: method === 'post' || method === 'postJSON' ? 'POST' : 'GET',\r\n        data: data,\r\n        success: success,\r\n        error: error,\r\n        dataType: dataType,\r\n    };\r\n    if (method === 'postJSON') {\r\n        Object.assign(requestOptions, {\r\n            contentType: 'application/json',\r\n            processData: false,\r\n            crossDomain: true,\r\n            data: typeof data === 'string' ? data : JSON.stringify(data),\r\n        });\r\n    }\r\n    return Request(requestOptions);\r\n}\r\nObject.assign(Request, {\r\n    get: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['get'].concat(args));\r\n    },\r\n    post: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['post'].concat(args));\r\n    },\r\n    json: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    getJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    postJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['postJSON'].concat(args));\r\n    },\r\n});\r\nRequest.setup = function setup(options) {\r\n    if (options.type && !options.method) {\r\n        Object.assign(options, { method: options.type });\r\n    }\r\n    Object.assign(globals, options);\r\n};\r\nfunction serializeQuery(params, prefix) {\r\n    var key = Object.keys(params);\r\n    for (var i = 0; i < key.length; i++) {\r\n      var value = params[key[i]];\r\n      if (params.constructor === Array)\r\n          key[i] += prefix + \"[]\";\r\n      else if (params.constructor === Object)\r\n          key[i] = (prefix ? prefix + \"[\" + key[i] + \"]\" : key[i]);\r\n\r\n      if (typeof value === 'object')\r\n          key[i] = serializeQuery(value, key[i]);\r\n      else\r\n          key[i] = key[i] + \"=\" + encodeURIComponent(value);\r\n    }\r\n    return key.join('&');\r\n}\r\n$.ajax = sf.ajax = Request;",";(function(){\r\nvar self = sf.url = function(){\r\n\t// Hashes\r\n\tvar hashes_ = '';\r\n\tfor(var keys in hashes)\r\n\t\thashes_ += '#'+keys+hashes[keys];\r\n\r\n\tvar data_ = '|'+self.data.join('|');\r\n\r\n\treturn self.paths + hashes_ + (data_.length !== 1 ? data_ : '');\r\n}\r\n\r\nvar hashes = self.hashes = {};\r\nself.data = {};\r\nself.paths = [];\r\n\r\n// Push into latest history\r\nself.push = function(){\r\n\twindow.history.pushState(null, '', self());\r\n}\r\n\r\n// Remove next history and change current history\r\nself.replace = function(){\r\n\twindow.history.replaceState(null, '', self());\r\n}\r\n\r\nself.parse = function(){\r\n\tself.data = window.location.hash.slice(1).split('|');\r\n\tvar hashes_ = self.data.shift().split('#');\r\n\r\n\tfor (var i = 1; i < hashes_.length; i++) {\r\n\t\tvar temp = hashes_[i].split('/');\r\n\t\thashes[temp.shift()] = '/'+temp.join('/');\r\n\t}\r\n\r\n\t// Paths\r\n\tself.paths = window.location.pathname;\r\n}\r\n\r\nself.parse();\r\n\r\n})();","return sf;\r\n\r\n// ===== Module End =====\r\n})));","sf.events = (function(){\r\n\tvar callbacks = {};\r\n\tvar callbacksWhen = {};\r\n\r\n\tfunction Events(name, run){\r\n\t\tif(name.constructor === Array){\r\n\t\t\tfor (var i = 0; i < name.length; i++)\r\n\t\t\t\tEvents(name[i], run);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(Events[name] === void 0){\r\n\t\t\tvar active = void 0;\r\n\r\n\t\t\tif(run !== undefined && run.constructor === Boolean)\r\n\t\t\t\tactive = run;\r\n\r\n\t\t\tif(active !== void 0){\r\n\t\t\t\tObject.defineProperty(Events, name, {\r\n\t\t\t\t\tenumerable:false,\r\n\t\t\t\t\tconfigurable:true,\r\n\t\t\t\t\tget:function(){return active},\r\n\t\t\t\t\tset:function(val){\r\n\t\t\t\t\t\tif(active === val)\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\tvar ref = callbacksWhen[name];\r\n\t\t\t\t\t\tif(ref !== void 0){\r\n\t\t\t\t\t\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\t\tref[i].apply(null, arguments);\r\n\t\t\t\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tdelete callbacksWhen[name];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reset to default\r\n\t\t\t\t\t\tObject.defineProperty(Events, name, {\r\n\t\t\t\t\t\t\tenumerable:false,\r\n\t\t\t\t\t\t\tconfigurable:true,\r\n\t\t\t\t\t\t\twritable:true,\r\n\t\t\t\t\t\t\tvalue:val\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tEvents[name] = function(){\r\n\t\t\t\t\tfor (var i = 0; i < callback.length; i++) {\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tcallback[i].apply(null, arguments);\r\n\t\t\t\t\t\t\tif(callback[i].once === true)\r\n\t\t\t\t\t\t\t\tcallback[i].splice(i--, 1);\r\n\t\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callbacks[name] === void 0)\r\n\t\t\t\t\tcallbacks[name] = [];\r\n\r\n\t\t\t\tvar callback = callbacks[name];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(run && run.constructor === Function){\r\n\t\t\trun(Events[name]);\r\n\t\t\trun = null;\r\n\t\t}\r\n\t}\r\n\r\n\tEvents.when = function(name, callback){\r\n\t\tif(Events[name] === true)\r\n\t\t\treturn callback();\r\n\r\n\t\tif(callbacksWhen[name] === void 0)\r\n\t\t\tcallbacksWhen[name] = [];\r\n\r\n\t\tcallbacksWhen[name].push(callback);\r\n\t}\r\n\r\n\tEvents.once = function(name, callback){\r\n\t\tcallback.once = true;\r\n\t\tcallbacks[name].push(callback);\r\n\t}\r\n\r\n\tEvents.on = function(name, callback){\r\n\t\tif(callbacks[name] === void 0)\r\n\t\t\tcallbacks[name] = [];\r\n\r\n\t\tif(callbacks[name].length >= 10)\r\n\t\t\tconsole.warn(\"Events have more than 10 callback, there may possible memory leak.\");\r\n\r\n\t\tcallbacks[name].push(callback);\r\n\t}\r\n\r\n\tEvents.off = function(name, callback){\r\n\t\tif(callbacks[name] === void 0)\r\n\t\t\treturn callbacks[name].length = 0;\r\n\r\n\t\tvar i = callbacks[name].indexOf(callback);\r\n\t\tif(i === -1) return;\r\n\t\tcallbacks[name].splice(i, 1);\r\n\t}\r\n\r\n\treturn Events;\r\n})();",";(function(){\r\nvar gEval = routerEval;\r\nrouterEval = void 0; // Avoid this function being invoked out of scope\r\n\r\n// Save reference\r\nvar aHashes = sf.url.hashes;\r\nvar aPaths = sf.url.paths;\r\nvar slash = '/';\r\n\r\nvar lastURL = sf.url();\r\nvar routingError = false;\r\n\r\nwindow.addEventListener('popstate', function(ev){\r\n\t// Don't continue if the last routing was error\r\n\t// Because the router was trying to getting back\r\n\tif(routingError){\r\n\t\troutingError = false;\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Reparse URL\r\n\tsf.url.parse();\r\n\tvar list = self.list;\r\n\r\n\t// Every views only backup one old history\r\n\r\n\t// For root path\r\n\tvar temp = list[slash];\r\n\r\n\tif(temp.oldPath === aPaths)\r\n\t\ttemp.back();\r\n\telse if(temp.currentPath !== aPaths)\r\n\t\ttemp.goto(aPaths);\r\n\r\n\r\n\t// For hash path\r\n\tvar keys = Object.keys(aHashes);\r\n\tfor (var i = 0; i < keys.length; i++) {\r\n\t\tvar temp = list[keys[i]];\r\n\t\tif(temp === void 0) continue;\r\n\r\n\t\tif(temp.oldPath === aHashes[keys[i]])\r\n\t\t\ttemp.back();\r\n\t\telse if(temp.currentPath !== aHashes[keys[i]])\r\n\t\t\ttemp.goto(aHashes[keys[i]]);\r\n\t}\r\n}, false);\r\n\r\ninternal.router = {};\r\ninternal.router.parseRoutes = function(obj_, selectorList){\r\n\tvar routes = [];\r\n\tvar pattern = /\\/:[^/]+/;\r\n\tvar sep = /\\-/;\r\n    var knownKeys = /path|url|on|routes/;\r\n\r\n\tfunction addRoutes(obj, addition, selector, parent){\r\n\t\tif(selector !== false)\r\n\t\t\tselector += ' ';\r\n\r\n\t\tfor(var i = 0; i < obj.length; i++){\r\n            var ref = obj[i];\r\n\t\t\tvar current = addition+ref.path;\r\n\r\n\t\t\tif(ref.routes !== void 0){\r\n\t\t\t\taddRoutes(ref.routes, current, selector, parent);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tvar route = RegExp('^' + current.replace(pattern, '/([^/]+)') + '$');\r\n\t\t\troute.url = ref.url;\r\n\r\n\t\t\tif(selector !== false){\r\n\t\t\t\troute.selector = selectorList.indexOf(selector);\r\n\r\n\t\t\t\tif(route.selector === -1){\r\n\t\t\t\t\troute.selector = selectorList.length;\r\n\t\t\t\t\tselectorList.push(selector);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(parent !== void 0)\r\n\t\t\t\troute.parent = parent;\r\n\r\n\t\t\tif(ref.on !== void 0)\r\n\t\t\t\troute.on = ref.on;\r\n\r\n            var keys = Object.keys(ref);\r\n            for(var a = 0; a < keys.length; a++){\r\n                if(knownKeys.test(keys[a]))\r\n                  continue;\r\n\r\n\t\t\t\taddRoutes(ref[keys[a]], current, selector + keys[a], route);\r\n                break;\r\n            }\r\n\r\n\t\t\troutes.push(route);\r\n\t\t}\r\n\t}\r\n\r\n    addRoutes(obj_, '', false);\r\n\treturn routes;\r\n}\r\n\r\ninternal.router.findRoute = function(url){\r\n\tfor(var i=0; i<this.length; i++){\r\n\t\tvar found = url.match(this[i]);\r\n\t\tif(found !== null){\r\n\t\t\tthis[i].data = found;\r\n\t\t\treturn this[i];\r\n\t\t}\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\nvar self = sf.views = function View(selector, name){\r\n\tif(name === void 0)\r\n\t\tname = slash;\r\n\r\n\tvar self = sf.views.list[name] = this;\r\n\tself.currentPath = '';\r\n\tself.oldPath = '';\r\n\r\n\tvar rootDOM = {};\r\n\tself.selector = function(selector_){\r\n\t\trootDOM = document.querySelector(selector_ || selector);\r\n\r\n\t\t// Create listener for link click\r\n\t\tif(rootDOM){\r\n\t\t\tselector = selector_;\r\n\t\t\t$.on(rootDOM, 'click', 'a[href]', hrefClicked);\r\n\t\t}\r\n\t}\r\n\r\n\tself.selector();\r\n\r\n    var selectorList = [selector];\r\n\tvar routes = [];\r\n\troutes.findRoute = internal.router.findRoute;\r\n\r\n\tinternal.router.enabled = true;\r\n\r\n\tvar onEvent = {\r\n\t\t'routeStart':[],\r\n\t\t'routeFinish':[],\r\n\t\t'routeError':[]\r\n\t};\r\n\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event] === void 0)\r\n\t\t\treturn console.error(\"Event '\"+event+\"' was not exist\");\r\n\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\tself.addRoute = function(obj){\r\n\t\troutes.push(...internal.router.parseRoutes(obj, selectorList));\r\n\t}\r\n\r\n\tfunction hrefClicked(ev){\r\n\t\tvar elem = ev.target;\r\n\t\tvar attr = elem.getAttribute('href');\r\n\r\n\t\tif(attr[0] === '@'){ // ignore\r\n\t\t\tvar target = elem.getAttribute('target');\r\n\t\t\tif(target)\r\n\t\t\t\twindow.open(attr.slice(1), target);\r\n\t\t\telse window.location = attr.slice(1);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(attr[0] === '#'){\r\n\t\t\tev.preventDefault();\r\n\t\t\tvar keys = attr.slice(1).split('#');\r\n\t\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\t\tvar key = keys[i].split(slash);\r\n\t\t\t\tvar ref = sf.views.list[key.shift()];\r\n\r\n\t\t\t\tif(ref !== void 0){\r\n\t\t\t\t\tkey = key.join(slash);\r\n\t\t\t\t\tif(ref.currentPath !== key)\r\n\t\t\t\t\t\tref.goto(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Make sure it's from current origin\r\n\t\tvar path = elem.href.replace(window.location.origin, '');\r\n\t\tif(path.indexOf('//') !== -1)\r\n\t\t\treturn;\r\n\r\n\t\tev.preventDefault();\r\n\t\tif(!self.goto(path))\r\n\t\t\tconsole.error(\"Couldn't navigate to\", path, \"because path not found\");\r\n\t}\r\n\r\n\tvar RouterLoading = false; // xhr reference if the router still loading\r\n\tvar currentRoute = {};\r\n\r\n\tvar oldDOM = null;\r\n\tvar nextDOM = null;\r\n\tvar currentDOM = null;\r\n\r\n\tself.goto = function(path, data, method){\r\n\t\tif(self.currentPath === path)\r\n\t\t\treturn;\r\n\r\n\t\t// Get template URL\r\n\t\tvar url = routes.findRoute(path);\r\n\t\tif(!url) return;\r\n\r\n\t\tif(name === slash)\r\n\t\t\tsf.url.paths = path;\r\n\t\telse\r\n\t\t\taHashes[name] = path;\r\n\r\n\t\tsf.url.push();\r\n\r\n\t\t// Check if view was exist\r\n\t\tif(!rootDOM.isConnected){\r\n\t\t\tif(rootDOM.nodeType !== void 0)\r\n\t\t\t\trootDOM = {};\r\n\r\n\t\t\treturn console.error(name, \"can't route to\", path, \"because element with selector '\"+selector+\"' was not found\");\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < onEvent['routeStart'].length; i++) {\r\n\t\t\tif(onEvent['routeStart'][i](self.oldPath, path)) return;\r\n\t\t}\r\n\r\n\t\tfunction routeError_(xhr, data){\r\n\t\t\tif(xhr.aborted) return;\r\n\t\t\troutingError = true;\r\n\r\n\t\t\tRouterLoading = false;\r\n\t\t\tfor (var i = 0; i < onEvent['routeError'].length; i++) {\r\n\t\t\t\tonEvent['routeError'][i](xhr.status, data);\r\n\t\t\t}\r\n\r\n\t\t\twindow.history.back();\r\n\t\t}\r\n\r\n\t\t// Abort other router loading if exist\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\r\n\t\tRouterLoading = sf.ajax({\r\n\t\t\turl:window.location.origin + url.url,\r\n\t\t\tmethod:method || 'GET',\r\n\t\t    data:Object.assign(data || {}, {\r\n\t\t        _scarlets:'.dynamic.'\r\n\t\t    }),\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\t// Create new element\r\n\t\t\t\tvar dom = document.createElement('sf-page-view');\r\n\t\t\t\tdom.innerHTML = data;\r\n\t\t\t\tdom.classList.add('page-prepare');\r\n\t\t\t\tdom.style.display = 'none';\r\n\r\n\t\t\t\tif(url.selector === void 0)\r\n\t\t\t\t\tvar DOMReference = rootDOM;\r\n\r\n\t\t\t\telse // Get element from selector\r\n\t\t\t\t\tvar DOMReference = rootDOM.querySelector(selectorList[url.selector]);\r\n\r\n\t\t\t\t// Let page script running first\r\n\t\t\t\tDOMReference.insertAdjacentElement('beforeend', dom);\r\n\r\n\t\t\t\ttry{\r\n\t\t\t\t\tif(self.dynamicScript !== false){\r\n\t\t\t\t\t\tvar scripts = dom.getElementsByTagName('script');\r\n\t\t\t\t\t\tfor (var i = 0; i < scripts.length; i++) {\r\n\t\t\t\t\t\t    gEval(scripts[i].text);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Parse the DOM data binding\r\n\t\t\t\t\tsf.model.init(dom);\r\n\r\n\t\t\t\t\t// Trigger loaded event\r\n\t\t\t\t\tfor (var i = 0; i < onEvent['routeFinish'].length; i++) {\r\n\t\t\t\t\t\tif(onEvent['routeFinish'][i](self.currentPath, path, url.data)) return;\r\n\t\t\t\t\t}\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\tdom.remove();\r\n\t\t\t\t\treturn routeError_({status:0});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdom.style.display = '';\r\n\r\n\t\t\t\tif(currentRoute.on !== void 0 && currentRoute.on.leaving)\r\n\t\t\t\t\tcurrentRoute.on.leaving(url.data);\r\n\r\n\t\t\t\tif(currentRoute.on !== void 0 && currentRoute.on.coming)\r\n\t\t\t\t\tcurrentRoute.on.coming(url.data);\r\n\r\n\t\t\t\tif(currentDOM !== null){\r\n\t\t\t\t\tcurrentDOM.classList.add('page-previous');\r\n\t\t\t\t\tcurrentDOM.classList.remove('page-current');\r\n\t\t\t\t\tself.oldPath = self.currentPath;\r\n\t\t\t\t\toldDOM = currentDOM;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Save current URL\r\n\t\t\t\tself.currentPath = path;\r\n\t\t\t\tcurrentRoute = url;\r\n\r\n\t\t\t\tdom.classList.remove('page-prepare');\r\n\t\t\t\tdom.classList.add('page-current');\r\n\r\n\t\t\t\tcurrentDOM = dom;\r\n\t\t\t\troutingError = false;\r\n\t\t\t},\r\n\t\t\terror:routeError_\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\tself.back = function(){\r\n\t\tif(oldDOM === null)\r\n\t\t\treturn self.goto(window.location.pathname);\r\n\r\n\t\t// Restore hidden DOM\r\n\t\toldDOM.classList.remove('page-previous');\r\n\t\toldDOM.classList.add('page-current');\r\n\r\n\t\tcurrentDOM.classList.remove('page-current');\r\n\t\tcurrentDOM.classList.add('page-next');\r\n\r\n\t\tself.currentPath = self.oldPath;\r\n\t\tself.oldPath = false;\r\n\r\n\t\tnextDOM = currentDOM;\r\n\t\toldDOM = null;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn self;\r\n}\r\n\r\nsf.views.list = {};\r\n\r\n})();","sf.internal.virtual_scroll = new function(){\r\n\tvar self = this;\r\n\tvar scrollingByScript = false;\r\n\r\n\t// before and after\r\n\tself.prepareCount = 4; // 4, 8, 12, 16, ...\r\n\r\n\tself.handle = function(list, targetNode, parentNode){\r\n\t\tvar dynamicList = false;\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvirtual.reset = function(reinitOnly){\r\n\t\t\tvirtual.DOMCursor = 0; // cursor of first element in DOM tree as a cursor\r\n\r\n\t\t\tvirtual.bounding.ceiling = -1;\r\n\t\t\tvirtual.bounding.floor = 0;\r\n\r\n\t\t\tvirtual.vCursor.ceiling = null; // for forward direction\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.firstElementChild; // for backward direction\r\n\r\n\t\t\tvirtual.bounding.initial = virtual.dCursor.ceiling.offsetTop;\r\n\t\t\trefreshScrollBounding(0, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.reinitCursor = function(){\r\n\t\t\tvirtual.vCursor.ceiling = virtual.dom.children[virtual.DOMCursor - 1] || null;\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.children[virtual.DOMCursor] || null;\r\n\t\t}\r\n\r\n\t\tvirtual.reinitScroll = function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.elements = function(){\r\n\t\t\treturn obtainElements(list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.dCursor = { // DOM Cursor\r\n\t\t\tceiling:parentNode.querySelector('.virtual-spacer.ceiling'),\r\n\t\t\tfloor:parentNode.querySelector('.virtual-spacer.floor')\r\n\t\t};\r\n\r\n\t\tvirtual.bounding = {};\r\n\t\tvirtual.vCursor = {};\r\n\r\n\t\tvirtual.reset();\r\n\t\tvirtual.targetNode = parentNode;\r\n\t\tvirtual.scrollHeight = virtual.dCursor.ceiling.nextElementSibling.offsetHeight;\r\n\r\n\t\tvar scroller = parentNode;\r\n\t\tvirtual.destroy = function(){\r\n\t\t\t$.off(scroller, 'scroll');\r\n\t\t\t$.off(parentNode, 'mousedown mouseup');\r\n\t\t\tvirtual.dom.innerHTML = '';\r\n\t\t\toffElementResize(parentNode);\r\n\r\n\t\t\tdelete list.$virtual;\r\n\t\t}\r\n\r\n\t\tvirtual.resetViewport = function(){\r\n\t\t\tvirtual.visibleLength = Math.floor(scroller.clientHeight / virtual.scrollHeight);\r\n\t\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\t\tif(virtual.preparedLength < 18)\r\n\t\t\t\tvirtual.preparedLength = 18;\r\n\t\t}\r\n\r\n\t\tvar pendingFunction = internal.afterModelBinding;\r\n\t\tinternal.afterModelBinding = undefined;\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tif(list.$virtual === undefined) return; // Somewhat it's uninitialized\r\n\r\n\t\t\tscroller = internal.findScrollerElement(parentNode);\r\n\t\t\tscroller.classList.add('sf-scroll-element');\r\n\t\t\tinternal.addScrollerStyle();\r\n\r\n\t\t\tvirtual.resetViewport();\r\n\r\n\t\t\tif(parentNode.classList.contains('sf-list-dynamic')){\r\n\t\t\t\tdynamicList = true;\r\n\t\t\t\tdynamicHeight(list, targetNode, parentNode, scroller);\r\n\t\t\t}\r\n\t\t\telse staticHeight(list, targetNode, parentNode, scroller);\r\n\r\n\t\t\tif(pendingFunction !== undefined){\r\n\t\t\t\tpendingFunction();\r\n\t\t\t\tpendingFunction = undefined;\r\n\t\t\t}\r\n\t\t}, 500);\r\n\t}\r\n\r\n\t// Recommended for a list that have different element height\r\n\tfunction dynamicHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\r\n\t\t\t// Reset virtual spacer height\r\n\t\t\tceilingHeight = 0;\r\n\t\t\tfloorHeight = 0;\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller);\r\n\t\t\tfillViewport();\r\n\t\t}\r\n\r\n\t\t// Insert some element until reach visible height\r\n\t\tfillViewport();\r\n\r\n\t\tvirtual.visibleLength = parentNode.childElementCount - 2;\r\n\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\tif(virtual.preparedLength < 18)\r\n\t\t\tvirtual.preparedLength = 18;\r\n\r\n\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\tvar temp = vCursor.floor;\r\n\t\t\tif(temp === null) break;\r\n\r\n\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t}\r\n\t\tvirtual.DOMCursor = 0;\r\n\r\n\t\tvar ceilingHeight = 0;\r\n\t\tvar floorHeight = 0;\r\n\t\tfunction previousCeiling(){\r\n\t\t\tvar temp = null;\r\n\t\t\tvar resetCeiling = false;\r\n\r\n\t\t\t// Add some element on the ceiling\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\ttemp = virtual.dom.lastElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.ceiling = temp.previousElementSibling;\r\n\t\t\t\tvirtual.DOMCursor--;\r\n\r\n\t\t\t\tceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tif(ceilingHeight > 0)\r\n\t\t\t\t\tceilingHeight -= getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(virtual.DOMCursor < self.prepareCount && !resetCeiling){\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\tresetCeiling = true;\r\n\t\t\t\t\ttemp = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(ceilingHeight < 0 || temp === null)\r\n\t\t\t\tceilingHeight = 0;\r\n\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\t// Remove some element on the floor\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = floor.previousElementSibling;\r\n\t\t\t\tfloorHeight += getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tvCursor.floor = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.floor === null)\r\n\t\t\t\tvCursor.ceiling = virtual.dom.lastElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tfunction fillViewport(){\r\n\t\t\t// Insert some element depend on prepared length\r\n\t\t\tvar length = virtual.preparedLength - (parentNode.childElementCount - 2);\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\ttemp = virtual.dom.firstElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction nextFloor(){\r\n\t\t\tvar temp = null;\r\n\t\t\tfillViewport();\r\n\r\n\t\t\tif(vCursor.floor !== null){\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\t// Add extra element based on prepare count\r\n\t\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\t\ttemp = vCursor.floor;\r\n\t\t\t\t\tif(temp === null) break;\r\n\r\n\t\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\t\tif(floorHeight > 0)\r\n\t\t\t\t\t\tfloorHeight -= getAbsoluteHeight(temp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(floorHeight < 0 || temp === null)\r\n\t\t\t\tfloorHeight = 0;\r\n\r\n\t\t\t// Remove some element on the ceiling\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\t\t\t\tceilingHeight += getAbsoluteHeight(temp);\r\n\t\t\t\tvirtual.DOMCursor++;\r\n\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\telse vCursor.ceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tvCursor.ceiling = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\t\trefreshScrollBounding(0, bounding, list, parentNode);\r\n\r\n\t\tif(virtual.callback_ !== void 0){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript) return;\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tif(scroller.scrollTop < bounding.ceiling){\r\n\t\t\t\t// console.log('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tpreviousCeiling();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\telse if(scroller.scrollTop > bounding.floor){\r\n\t\t\t\t// console.log('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tnextFloor();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\tif(virtual.callback !== void 0 && list.length !== 0){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null &&\r\n\t\t\t\t\tscroller.scrollTop + scroller.clientHeight === scroller.scrollHeight\r\n\t\t\t\t){\r\n\t\t\t\t\tvirtual.callback.hitFloor(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null && scroller.scrollTop === 0){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_ && callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t\tif(scroller.scrollTop === 0 && ceiling.offsetHeight > 10)\r\n\t\t\t\tvirtual.scrollTo(0);\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\t\tonElementResize(parentNode, function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t});\r\n\t}\r\n\r\n\t// Recommended for a list that have similar element height\r\n\tfunction staticHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\r\n\t\t// Insert visible element to dom tree\r\n\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\tif(virtual.dom.firstElementChild === null)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', virtual.dom.firstElementChild);\r\n\t\t}\r\n\r\n\t\tvirtual.refreshVirtualSpacer = refreshVirtualSpacer;\r\n\r\n\t\tfunction refreshVirtualSpacer(cursor){\r\n\t\t\tif(cursor >= self.prepareCount){\r\n\t\t\t\tceiling.style.height = (cursor - self.prepareCount) * virtual.scrollHeight + 'px';\r\n\t\t\t\tfloor.style.height = (list.length - virtual.preparedLength - cursor) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tceiling.style.height = cursor * virtual.scrollHeight + 'px'; //'0px';\r\n\t\t\t\tvar count = (list.length - virtual.preparedLength);\r\n\t\t\t\tfloor.style.height = (count || 0) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\r\n\t\trefreshVirtualSpacer(0);\r\n\t\trefreshScrollBounding(self.prepareCount, bounding, list, parentNode);\r\n\t\tbounding.ceiling = -1;\r\n\r\n\t\tvirtual.offsetTo = function(index){\r\n\t\t\treturn index * virtual.scrollHeight + ceiling.offsetTop;\r\n\t\t}\r\n\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tif(virtual.callback_ !== void 0){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tvar fromCeiling = true;\r\n\t\tvar scrollFocused = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript || scroller.scrollTop >= bounding.ceiling && scroller.scrollTop <= bounding.floor){\r\n\t\t\t\t// Fix chrome scroll anchoring bugs when scrolling at corner\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tif(scroller.scrollTop === 0 || scroller.scrollTop === scroller.scrollHeight - scroller.clientHeight){\r\n\t\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar cursor = Math.floor(scroller.scrollTop / virtual.scrollHeight);\r\n\t\t\tif(cursor + virtual.preparedLength > list.length)\r\n\t\t\t\tcursor = list.length - virtual.preparedLength;\r\n\r\n\t\t\tif(fromCeiling){\r\n\t\t\t\tif(cursor < self.prepareCount*2)\r\n\t\t\t\t\tcursor -= self.prepareCount;\r\n\r\n\t\t\t\t// Fix chrome scroll anchoring bugs\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t}\r\n\t\t\t\tfromCeiling = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cursor < self.prepareCount){\r\n\t\t\t\tcursor = 0;\r\n\t\t\t\tfromCeiling = true;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tvar changes = cursor - virtual.DOMCursor;\r\n\t\t\tif(cursor + changes >= list.length)\r\n\t\t\t\tchanges = cursor + changes - list.length;\r\n\r\n\t\t\tif(changes === 0){ // This should be fixed to improve performance and future bugs\r\n\t\t\t\t//console.warn(\"No changes (The scroll bounding is not correct)\");\r\n\t\t\t\tupdating = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.DOMCursor = cursor;\r\n\r\n\t\t\t// console.log(cursor, changes, bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\t\t\tmoveElementCursor(changes, list);\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\t\t\trefreshScrollBounding(cursor, bounding, list, parentNode);\r\n\t\t\t// console.log('a', bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\r\n\t\t\tif(virtual.callback !== void 0 && list.length !== 0){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null){\r\n\t\t\t\t\tvirtual.callback.hitFloor(cursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(cursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_ && callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\r\n\t\t// For preventing scroll jump if scrolling over than viewport\r\n\t\tif(scroller === parentNode && navigator.userAgent.indexOf('Chrom') !== -1){\r\n\t\t\t$.on(parentNode, 'mousedown', function(){\r\n\t\t\t\tscrollFocused = true;\r\n\t\t\t});\r\n\t\t\t$.on(parentNode, 'mouseup', function(){\r\n\t\t\t\tscrollFocused = false;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction refreshScrollBounding(cursor, bounding, list, parentNode){\r\n\t\tvar temp = Math.floor(self.prepareCount / 2); // half of element preparation\r\n\t\tif(cursor < self.prepareCount){\r\n\t\t\tbounding.ceiling = -1;\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount * 2 + 1];\r\n\r\n\t\t\tif(bounding.floor !== void 0)\r\n\t\t\t\tbounding.floor = bounding.floor.offsetTop;\r\n\t\t\telse bounding.floor = parentNode.lastElementChild.offsetTop + 1000;\r\n\r\n\t\t\tbounding.floor -= bounding.initial;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if(parentNode.children[temp + 1] !== void 0)\r\n\t\t\t\tbounding.ceiling = parentNode.children[temp + 1].offsetTop; // -2 element\r\n\r\n\t\tif(list.$virtual.preparedLength !== void 0 && cursor >= list.length - list.$virtual.preparedLength)\r\n\t\t\tbounding.floor = list.$virtual.dCursor.floor.offsetTop + list.$virtual.scrollHeight*2;\r\n\t\telse{\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount + 3].offsetTop; // +2 element\r\n\r\n\t\t\tif(parentNode.hasAttribute('scroll-reduce-floor')){\r\n\t\t\t\tbounding.floor -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t\tbounding.ceiling -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbounding.ceiling -= bounding.initial;\r\n\t\tbounding.floor -= bounding.initial;// scrollHeight - clientHeight\r\n\t}\r\n\r\n\tfunction moveElementCursor(changes, list){\r\n\t\tvar vDOM = list.$virtual.dom;\r\n\t\tvar vCursor = list.$virtual.vCursor;\r\n\t\tvar dCursor = list.$virtual.dCursor;\r\n\r\n\t\tif(changes > 0){ // forward\r\n\t\t\tvar ref = 0;\r\n\r\n\t\t\t// Select from virtual ceiling cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tref = vDOM.firstElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.ceiling.nextElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the ceiling to vDom\r\n\t\t\tfor (var i = changes; i > 0; i--) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.ceiling === null){\r\n\t\t\t\t\tvCursor.ceiling = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('afterBegin', vCursor.ceiling);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t\t\tvCursor.ceiling = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\t\t}\r\n\t\telse if(changes < 0){ // backward\r\n\t\t\tvar ref = 0;\r\n\t\t\tchanges = -changes;\r\n\r\n\t\t\t// Select from virtual floor cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tref = vDOM.lastElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.floor.previousElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the floor to vDom\r\n\t\t\tfor (var i = 0; i < changes; i++) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvCursor.floor = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('beforeEnd', vCursor.floor);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t\t\tvCursor.floor = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scrollTo(index, list, prepareCount, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar reduce = 0;\r\n\t\tvar index_ = index;\r\n\r\n\t\tif(index >= list.length - virtual.preparedLength){\r\n\t\t\treduce -= prepareCount;\r\n\t\t\tindex = list.length - virtual.preparedLength;\r\n\t\t}\r\n\r\n\t\tif(index - virtual.DOMCursor === 0 || index >= list.length) return;\r\n\r\n\t\tscrollingByScript = true;\r\n\r\n\t\t// Already on DOM tree\r\n\t\tif((virtual.DOMCursor === 0 && index < prepareCount + prepareCount/2) ||\r\n\t\t\t(virtual.DOMCursor + prepareCount/2 > index\r\n\t\t\t&& virtual.DOMCursor + prepareCount < index))\r\n\t\t\t\tscroller.scrollTop = list.getElement(index_).offsetTop;\r\n\r\n\t\t// Move cursor\r\n\t\telse {\r\n\t\t\tvar temp = null;\r\n\t\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\t\tvar floor = virtual.dCursor.floor;\r\n\t\t\tvar vCursor = virtual.vCursor;\r\n\r\n\t\t\t// DOM tree to virtual DOM\r\n\t\t\tvar length = parentNode.childElementCount - 2;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\r\n\t\t\t\t\tif(i === length-1)\r\n\t\t\t\t\t\tvCursor.floor = temp;\r\n\t\t\t\t}\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(index >= prepareCount){\r\n\t\t\t\tif(index < list.length - virtual.preparedLength)\r\n\t\t\t\t\tindex -= prepareCount;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treduce = prepareCount - index;\r\n\t\t\t\tvirtual.DOMCursor = index = 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\r\n\t\t\t// Virtual DOM to DOM tree\r\n\t\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\t\ttemp = virtual.dom.children[index];\r\n\t\t\t\tif(temp === void 0) break;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t\tvirtual.DOMCursor = index;\r\n\r\n\t\t\tvCursor.floor = virtual.dom.children[index] || null;\r\n\t\t\tvCursor.ceiling = vCursor.floor ? vCursor.floor.previousElementSibling : null;\r\n\r\n\t\t\tif(list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\tlist.$virtual.refreshVirtualSpacer(index);\r\n\r\n\t\t\trefreshScrollBounding(index, virtual.bounding, list, parentNode);\r\n\r\n\t\t\ttemp = parentNode.children[prepareCount - reduce + 1];\r\n\t\r\n\t\t\tif(temp !== void 0)\r\n\t\t\t\tscroller.scrollTop = temp.offsetTop - scroller.offsetTop;\r\n\t\t}\r\n\r\n\t\tscrollingByScript = false;\r\n\t}\r\n\r\n\tfunction removeUserScrollFocus(parentNode){\r\n\t\tparentNode.style.overflow = 'hidden';\r\n\t\tsetTimeout(function(){\r\n\t\t\tparentNode.style.overflow = '';\r\n\t\t}, 50);\r\n\t}\r\n\r\n\tfunction getAbsoluteHeight(el){\r\n\t  var styles = window.getComputedStyle(el);\r\n\t  var margin = parseInt(styles['marginTop']) + parseInt(styles['marginBottom']);\r\n\t  return el.offsetHeight + margin || 0;\r\n\t}\r\n\r\n\tfunction obtainElements(list, parentNode){\r\n\t\tvar exist = [];\r\n\t\tvar temp = void 0;\r\n\r\n\t\tvar length = list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[i];\r\n\t\t\tif(temp === void 0) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = parentNode.childElementCount - 2;\r\n\t\tfor (var i = 1; i <= length; i++) {\r\n\t\t\ttemp = parentNode.children[i];\r\n\t\t\tif(temp === void 0) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\t\t\r\n\t\t// Get elements length\r\n\t\tvar elementLength = list.$virtual.dom.childElementCount + length;\r\n\r\n\t\tlength = elementLength - length - list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[list.$virtual.DOMCursor + i];\r\n\t\t\tif(temp === void 0) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\treturn exist;\r\n\t}\r\n\r\n\tfunction refresh(force, list, prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer){\r\n\t\tvar cursor = list.$virtual.DOMCursor;\r\n\t\tvar additionalScroll = 0;\r\n\r\n\t\t// Find nearest cursor for current view position\r\n\t\tif(force){\r\n\t\t\tvar i = -1;\r\n\t\t\tvar length = list.$virtual.preparedLength;\r\n\r\n\t\t\tdo{\r\n\t\t\t\ti++;\r\n\t\t\t} while(i < length && parentNode.children[i].offsetTop < scroller.scrollTop);\r\n\r\n\t\t\tcursor = cursor + i;\r\n\t\t\tif(cursor > 0) cursor -= 1;\r\n\r\n\t\t\tadditionalScroll = scroller.scrollTop - parentNode.children[i].offsetTop;\r\n\t\t}\r\n\r\n\t\t// Force move cursor if element in the DOM tree was overloaded\r\n\t\tif(force || parentNode.childElementCount - 2 > list.$virtual.preparedLength){\r\n\t\t\tlist.$virtual.DOMCursor = list.length;\r\n\t\t\tvar moveTo = cursor;\r\n\t\t\tif(!force)\r\n\t\t\t\tmoveTo = cursor <= prepareCount ? cursor : (cursor + prepareCount);\r\n\r\n\t\t\tscrollTo(moveTo,\r\n\t\t\t\tlist,\r\n\t\t\t\tprepareCount,\r\n\t\t\t\tparentNode,\r\n\t\t\t\tscroller\r\n\t\t\t);\r\n\r\n\t\t\tscroller.scrollTop += additionalScroll;\r\n\t\t}\r\n\r\n\t\tif(refreshVirtualSpacer)\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\r\n\t\tif(checkCursorPosition)\r\n\t\t\tcheckCursorPosition();\r\n\r\n\t\trefreshScrollBounding(cursor, list.$virtual.bounding, list, parentNode);\r\n\t}\r\n\r\n\tvar _onElementResize = [];\r\n\tvar _onElementResize_timer = -1;\r\n\tfunction onElementResize(parentNode, callback){\r\n\t\tif(_onElementResize_timer === -1){\r\n\t\t\t_onElementResize_timer = setInterval(function(){\r\n\t\t\t\tvar temp = null;\r\n\t\t\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\t\t\ttemp = _onElementResize[i];\r\n\r\n\t\t\t\t\t// Check resize\r\n\t\t\t\t\tif(temp.element.scrollHeight === temp.height\r\n\t\t\t\t\t\t|| temp.element.scrollWidth === temp.width)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t// Check if it's removed from DOM\r\n\t\t\t\t\tif(temp.element.parentElement === null){\r\n\t\t\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.callback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(_onElementResize.length === 0){\r\n\t\t\t\t\tclearInterval(_onElementResize_timer);\r\n\t\t\t\t\t_onElementResize_timer = -1;\r\n\t\t\t\t}\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\r\n\t\t_onElementResize.push({\r\n\t\t\telement:parentNode,\r\n\t\t\tcallback:callback,\r\n\t\t\theight:parentNode.scrollHeight,\r\n\t\t\twidth:parentNode.scrollWidth\r\n\t\t});\r\n\t}\r\n\r\n\tfunction offElementResize(parentNode){\r\n\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\tif(_onElementResize[i].element === parentNode)\r\n\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Interval will be cleared when the array is empty\r\n\t}\r\n\r\n\tfunction initStyles(){\r\n\t}\r\n\r\n\tvar styleInitialized = false;\r\n\tinternal.addScrollerStyle = function(){\r\n\t\tif(!styleInitialized){\r\n\t\t\tvar style = document.getElementById('sf-styles');\r\n\r\n\t\t\tif(!style){\r\n\t\t\t\tstyle = document.createElement('style');\r\n\t\t\t\tstyle.id = 'sf-styles';\r\n\t\t\t\tdocument.head.appendChild(style);\r\n\t\t\t}\r\n\r\n\t\t\tstyle.sheet.insertRule(\r\n\t\t\t'.sf-virtual-list .virtual-spacer{'+\r\n\t\t\t    'visibility: hidden !important;'+\r\n\t\t\t    'position: relative !important;'+\r\n\t\t\t    'transform-origin: 0 0 !important;'+\r\n\t\t\t    'width: 0 !important;'+\r\n\t\t\t    'margin: 0 !important;'+\r\n\t\t\t    'padding: 0 !important;'+\r\n\t\t\t    'background: none !important;'+\r\n\t\t\t    'border: none !important;'+\r\n\t\t\t    'box-shadow: none !important;'+\r\n\t\t\t    'transition: none !important;'+\r\n\t\t\t '}', style.sheet.cssRules.length);\r\n\r\n\t\t\tstyle.sheet.insertRule(\r\n\t\t\t'.sf-scroll-element {'+\r\n\t\t\t \t'backface-visibility: hidden;'+\r\n\t\t\t '}', style.sheet.cssRules.length);\r\n\t\t\tstyleInitialized = true;\r\n\t\t}\r\n\t}\r\n\r\n\tvar isScroller = /auto|scroll|overlay|hidden/;\r\n\tinternal.findScrollerElement = function(el){\r\n\t\twhile(el !== null && isScroller.test(getComputedStyle(el).overflow) === false){\r\n\t\t\tel = el.parentElement;\r\n\t\t\tif(el === document.body)\r\n\t\t\t\treturn null;\r\n\t\t};\r\n\r\n\t\treturn el;\r\n\t}\r\n};"]}