{"version":3,"sources":["sf-a_init.js","sf-dom.js","sf-loader.js","sf-model.js","sf-a_polyfill.js","sf-controller.js","sf-e-ajax.js","sf-z_end.js","sf-router.js","sf-virtual_scroll.js"],"names":["global","factory","exports","module","sf","window","this","undefined","document","arguments","constructor","Function","loader","onFinish","apply","isEmptyObject","obj","key","compareObject","obj1","obj2","i","hiddenProperty","property","value","Object","defineProperty","enumerable","configurable","deepProperty","path","length","internal","regex","getQuotes","avoidQuotes","strictVar","dom","selector","context","parseElement","String","querySelectorAll","$","self","findOne","querySelector","parent","element","closest","matches","parentElement","prevAll","isNext","result","findNodes","nextSibling","previousSibling","push","nextAll","on","event","callback","once","tempCallback","ev","target","addEventListener","capture","off","events","split","ref","getEventListeners","removeEventListener","splice","animateCSS","animationName","duration","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","style","webkitAnimationDuration","animationDuration","list","classList","add","remove","setTimeout","emptyDOM","div","createElement","ul","tbody","tr","table","select","html","returnNode","tempDOM","indexOf","textContent","insertAdjacentHTML","item","elements","documentElement","domReady","body","getSelector","childIndexes","untilElement","names","parentNode","id","unshift","tagName","e","join","array","childNodes","loadedContent","totalContent","DOMWasLoaded","DOMReady","turnedOff","whenDOMReady","whenDOMLoaded","whenProgress","func","onProgress","f","css","s","rel","href","head","appendChild","js","type","async","src","console","warn","isQueued","model","queuePreprocess","nodeType","repeatedList","temp","onReadyState","test","readyState","clearInterval","onReadyState_timer","error","listener","controller","init","router","setInterval","prototype","scope","root","pending","run","bindingEnabled","processingElement","trimIndentation","text","indent","trim","replace","RegExp","bracketMatch","chackValidFunctionCall","allowedFunction","localEval","script","_model_","_modelScope","_content_","tempScript","preventExecution","check_","exec","log","outerHTML","_result_","_evaled_","eval","escapeEscapedQuote","unescapeEscapedQuote","elseIfHandle","else_","scopes","elseIf","elseValue","index","currentElement","previousElementSibling","getAttribute","modelName","$virtual","DOMCursor","for","name","modelKeys","modelRef","keys","templateParser_regex","REF_DIRECT","REF_IF","REF_EXEC","templateExec","parse","atIndex","parsed","data","if","templateParser","template","cloneNode","addresses","changesReference","pendingInsert","current","address","refA","direct","full","match","cRef","dynamicFlag","parse_index","startFlag","attributes","a","refB","attribute","setAttribute","sf$elementReferences","tDOM","insertBefore","syntheticCache","sf$cache","cache","modelRef_array","syntheticTemplate","changes","modelReference","newData","Array","checkRelatedChanges","parseIndex","found","assign","haveChanges","currentDOM","notExist","isEqualNode","replaceChild","dataParser","mask","runEval","preParsedReference","variableList","scopeMask","itemMask","preParsed","lastParsedIndex","prepared","actual","matched","slice","exist","charCodeAt","uniqueDataParser","take","passVar","currentIndex","strDeclare","firstTime","JSON","stringify","check","VarPass_","VarPass","s1","obtained","forEach","val","findElse","pop","shift","condition","bindArray","propertyName","targetNode","editProperty","refreshTimer","parentChilds","children","processElement","options","other","count","spacer","firstElementChild","lastElementChild","overflow","vDOM","update","insertAdjacentElement","clearTimeout","refresh","oldChild","referenceNode","create","currentRemoved","startRemove","n","contains","propertyProxy","subject","lastLength","from","to","o","matchLeft","currentLength","reset","resetViewport","real","limit","virtual_scroll","handle","elem","getElement","hardRefresh","virtualChilds","floorBound","dCursor","floor","ret","childElement","childElementCount","loopParser","method","items","extractPreprocess","sf$bindedKey","initBindingInformation","get","set","inputBoundFunction","bindInput","whichVar","removeAttribute","alreadyInitialized","DOMNodeRemoved","removeModelBinding","hasAttribute","queued","parsePreprocess","ceiling","styles","getComputedStyle","absHeight","parseFloat","Math","ceil","offsetHeight","after","nextElementSibling","before","everyRemovedNodes","nodes","nodeName","MutationObserver","observe","everyRecords","record","removedNodes","records","childList","subtree","bindedKey","Number","Boolean","destroy","getOwnPropertyDescriptor","dcBracket","bindObject","which","Node","attrs","attr","htmlClone","innerHTML","onChanges","objValue","bindElement","brackets","s2","copy","reverse","addressed","addressAttributes","currentNode","indexes","addressStart","commentFlag","flag","createComment","textNode","createTextNode","search","extract","checkList","full_","match_","findModelProperty","asArray","excludes","writable","extracting","nodeValue","varArgs","TypeError","nextSource","nextKey","hasOwnProperty","call","Element","CharacterData","DocumentType","removeChild","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","ownerDocument","NodeList","thisArg","location","origin","protocol","hostname","port","active","modelScope","bindedList","parentEl","bindedListIndex","listenSFClick","method_","preventDefault","root_","globals","jsonpRequests","Request","requestOptions","globalsNoCallbacks","callbackName","defaults","url","toString","user","password","headers","xhrFields","statusCode","processData","dataType","contentType","timeout","fireCallback","globalCallbackValue","optionCallbackValue","_i","paramsPrefix","toUpperCase","stringData","serializeQuery","abortTimeout_1","callbackName_1","Date","now","callbackSplit","requestUrl","addVars","filter","el","script_1","onerror","xhr","XMLHttpRequest","requestParameters","open","xhrTimeout","postData","ArrayBuffer","Blob","Document","FormData","boundary","setRequestHeader","headerName","crossDomain","$2","host","onload","status","responseData","parseError","responseText","err","responseType","response","onabort","abort","send","RequestShortcut","args","_a","success","params","prefix","encodeURIComponent","concat","post","json","getJSON","postJSON","setup","ajax","loading","enabled","pauseRenderOnTransition","currentPage","initialized","currentRouterURL","popstateListener","routingError","routingBack","goto","pathname","beforeEvent","enable","load","onEvent","loaded","special","lazyViewPoint","history","pushState","RouterLoading","_scarlets","DOMReference","foundAction","last","afterEvent","title","oldURL","newURL","routerLoaded","aborted","back","styleInitialized","scrollingByScript","refreshScrollBounding","cursor","bounding","prepareCount","offsetTop","preparedLength","scrollHeight","scrollTo","scroller","refreshVirtualSpacer","virtual","reduce","scrollTop","vCursor","insertCount","removeUserScrollFocus","getAbsoluteHeight","margin","parseInt","force","checkCursorPosition","additionalScroll","moveTo","getElementById","sheet","insertRule","cssRules","initStyles","obtainElements","_onElementResize","offElementResize","visibleLength","clientHeight","fillViewport","ceilingHeight","floorHeight","updating","resetCeiling","height","previousCeiling","nextFloor","_onElementResize_timer","scrollWidth","width","onElementResize","dynamicHeight","offsetTo","fromCeiling","scrollFocused","moveElementCursor","navigator","userAgent","staticHeight"],"mappings":"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","file":"scarletsframe.min.js","sourcesContent":["(function(global, factory){\r\n  if(typeof exports === 'object' && typeof module !== 'undefined') module.exports = factory(global);\r\n  else global.sf = factory(global);\r\n}(typeof window !== \"undefined\" ? window : this, (function(window){'use strict';\r\nif(typeof document === undefined)\r\n\tdocument = window.document;\r\n// ===== Module Init =====\r\n\r\nvar sf = function(){\r\n\tif(arguments[0].constructor === Function){\r\n\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\t}\r\n};\r\n\r\nsf.internal = {};\r\nsf.regex = {\r\n\t// ToDo: Need help to skip escaped quote\r\n\tgetQuotes:/(['\"])[\\s\\S]*?[^\\\\]\\1/g,\r\n\tavoidQuotes:'(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)',\r\n\tstrictVar:'(?=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )'\r\n};\r\n\r\nfunction isEmptyObject(obj){\r\n\tfor(var key in obj){\r\n\t\treturn false;\r\n\t}\r\n\treturn true\r\n}\r\n\r\nfunction compareObject(obj1, obj2){\r\n\tif(!obj1 || !obj2)\r\n\t\treturn false;\r\n\r\n\tfor(var i in obj1){\r\n\t\tif(typeof obj1[i] !== 'object' && obj1[i] !== obj2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction hiddenProperty(obj, property, value){\r\n\tObject.defineProperty(obj, property, {\r\n\t\tenumerable: false,\r\n\t\tconfigurable: true,\r\n\t\tvalue: value\r\n\t});\r\n}\r\n\r\nfunction deepProperty(obj, path){\r\n  for(var i = 0; i < path.length; i++){\r\n    obj = obj[path[i]];\r\n    if(obj === undefined) return obj;\r\n  }\r\n  return obj;\r\n}","sf.dom = function(selector, context){\r\n\tif(selector[0] === '<') return sf.dom.parseElement(selector);\r\n\tif(selector.constructor !== String) return selector;\r\n\r\n\tif(context) return context.querySelectorAll(selector);\r\n\treturn document.querySelectorAll(selector);\r\n}\r\n\r\nvar $ = sf.dom; // Shortcut\r\n\r\n;(function(){\r\n\tvar self = sf.dom;\r\n\r\n\tself.findOne = function(selector, context){\r\n\t\tif(context !== undefined) return context.querySelector(selector);\r\n\t\treturn document.querySelector(selector);\r\n\t}\r\n\r\n\tself.parent = function(element, selector){\r\n\t\tif(element.closest) return element.closest(selector);\r\n\r\n\t\tdo {\r\n\t\t\tif(element.matches(selector) === true)\r\n\t\t\t\treturn element;\r\n\r\n\t\t\telement = element.parentElement;\r\n\t\t} while (element !== null);\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tself.prevAll = function(element, selector, isNext){\r\n\t\tvar result = [];\r\n\t\tvar findNodes = selector === null || selector.constructor !== String ? true : false;\r\n\r\n\t\t// Skip current element\r\n\t\telement = isNext ? element.nextSibling : element.previousSibling;\r\n\t\twhile (element !== null) {\r\n\t\t\tif(findNodes === false && element.matches(selector) === true)\r\n\t\t\t\tresult.push(element);\r\n\t\t\telse{\r\n\t\t\t\tif(element === selector)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tresult.push(element);\r\n\t\t\t}\r\n\r\n\t\t\tif(isNext)\r\n\t\t\t\telement = element.nextSibling;\r\n\t\t\telse\r\n\t\t\t\telement = element.previousSibling;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.nextAll = function(element, selector){\r\n\t\treturn self.prevAll(element, selector, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen to an event\r\n\t * @param  Node \t\t\telement \tparent element\r\n\t * @param  string \t\t\tevent   \tevent name\r\n\t * @param  function|string  selector    callback function or selector\r\n\t * @param  function\t\t\tcallback    callback function\r\n\t * @param  boolean\t\t\tonce    \tcall once\r\n\t * @return null\r\n\t */\r\n\tself.on = function(element, event, selector, callback, once){\r\n\t\tif(typeof element === 'string'){\r\n\t\t\telement = document;\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = event;\r\n\t\t\tevent = element;\r\n\t\t}\r\n\r\n\t\tif(typeof selector === 'function'){\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = null;\r\n\t\t}\r\n\r\n\t\tif(selector){\r\n\t\t\tvar tempCallback = callback;\r\n\t\t\tcallback = function(ev){\r\n\t\t\t\tif(self.parent(ev.target, selector) !== null)\r\n\t\t\t\t\ttempCallback(ev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcallback.selector = selector;\r\n\t\telement.addEventListener(event, callback, {capture:true, once:once === true});\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.once = function(element, event, selector, callback){\r\n\t\tself.on(element, event, selector, callback, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event listener\r\n\t * @param  Node \telement \tparent element\r\n\t * @param  string \tevent   \tevent name\r\n\t * @param  string  \tselector    selector\r\n\t * @return null\r\n\t */\r\n\tself.off = function(element, event, selector){\r\n\t\t// Remove all event\r\n\t\tif(event === undefined){\r\n\t\t\tvar events = getEventListeners(element);\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar events = event.split(' ');\r\n\t\tif(events.length !== 0){\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove listener\r\n\t\tvar ref = getEventListeners(element);\r\n\t\tif(ref !== undefined && ref[event] !== undefined){\r\n\t\t\tfor (var i = ref[event].length - 1; i >= 0; i--) {\r\n\t\t\t\tif(selector && ref[event][i].selector !== selector)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\telement.removeEventListener(event, ref[event].splice(i, 1), true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.animateCSS = function(element, animationName, callback, duration) {\r\n\t\tvar animationEnd = {\r\n\t\t\tanimation: 'animationend',\r\n\t\t\tOAnimation: 'oAnimationEnd',\r\n\t\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t\t};\r\n\r\n\t\tfor (var t in animationEnd){\r\n\t\t\tif(element.style[t] !== undefined){\r\n\t\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(duration){\r\n\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t}\r\n\r\n\t\tvar list = ('animated ' + animationName).split(' ');\r\n\t\telement.classList.add.apply(element.classList, list);\r\n\t\t$.once(element, animationEnd, function(){\r\n\t\t\telement.classList.remove.apply(element.classList, list);\r\n\t\t\t\r\n\t\t\tif(duration) setTimeout(function(){\r\n\t\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t\t}, 1);\r\n\r\n\t\t\tif(typeof callback === 'function') callback();\r\n\t\t});\r\n\t}\r\n\r\n\tvar emptyDOM = {\r\n\t\tdiv:document.createElement('div'),\r\n\t\tul:document.createElement('ul'),\r\n\t\ttbody:document.createElement('tbody'),\r\n\t\ttr:document.createElement('tr'),\r\n\t\ttable:document.createElement('table'),\r\n\t\tselect:document.createElement('select'),\r\n\t};\r\n\tself.parseElement = function(html, returnNode){\r\n\t\tvar result = [];\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\r\n        if(html.indexOf('<li') === 0) tempDOM = emptyDOM.ul;\r\n        if(html.indexOf('<tr') === 0) tempDOM = emptyDOM.tbody;\r\n        if(html.indexOf('<td') === 0 || html.indexOf('<th') === 0) tempDOM = emptyDOM.tr;\r\n        if(html.indexOf('<tbody') === 0) tempDOM = emptyDOM.table;\r\n        if(html.indexOf('<option') === 0) tempDOM = emptyDOM.select;\r\n\r\n\t\ttempDOM.textContent = '';\r\n\t\ttempDOM.insertAdjacentHTML('afterBegin', html);\r\n\r\n\t\tvar ref = tempDOM[returnNode ? 'childNodes' : 'children'];\r\n\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\tresult.push(ref.item(i));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tself.remove = function(elements){\r\n\t\tif(elements.remove !== undefined)\r\n\t\t\treturn elements.remove();\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\telements[i].remove();\r\n\t\t}\r\n\t}\r\n\r\n\tvar documentElement = null;\r\n\tsetTimeout(function(){\r\n\t\tsf.loader.domReady(function(){\r\n\t\t\tdocumentElement = document.body.parentElement;\r\n\t\t});\r\n\t}, 1);\r\n\r\n\tself.getSelector = function(element, childIndexes, untilElement){\r\n\t\tvar names = [];\r\n\t\tif(untilElement === undefined) untilElement = documentElement;\r\n\r\n\t\tvar previousSibling = childIndexes ? 'previousSibling' : 'previousElementSibling';\r\n\r\n\t\twhile(element.parentNode !== null){\r\n\t\t\tif(element.id){\r\n\t\t\t\tnames.unshift('#'+element.id);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(element === untilElement){\r\n\t\t\t\t\tif(childIndexes === undefined)\r\n\t\t\t\t\t\tnames.unshift(element.tagName);\r\n\t\t\t\t\telse names.unshift(0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar e = element;\r\n\t\t\t\t\tvar i = childIndexes ? 0 : 1;\r\n\r\n\t\t\t\t\twhile(e[previousSibling]){\r\n\t\t\t\t\t\te = e[previousSibling];\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(childIndexes)\r\n\t\t\t\t\t\tnames.unshift(i);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tnames.unshift(\":nth-child(\"+i+\")\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t\tif(element === null)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndexes)\r\n\t\t\treturn names;\r\n\t\treturn names.join(\" > \");\r\n\t}\r\n\r\n\tself.childIndexes = function(array, context){\r\n\t\tvar element = context || documentElement;\r\n\t\tvar i = 1;\r\n\r\n\t\tif(array[0].constructor === String)\r\n\t\t\telement = element.querySelector(array[0]);\r\n\r\n\t\telse if(array.length === 1)\r\n\t\t\treturn element;\r\n\r\n\t\tfor (i = i; i < array.length; i++) {\r\n\t\t\telement = element.childNodes.item(array[i]);\r\n\r\n\t\t\tif(element === null)\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n})();","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 0;\r\n\tself.DOMWasLoaded = false;\r\n\tself.DOMReady = false;\r\n\tself.turnedOff = true;\r\n\r\n\tvar whenDOMReady = [];\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\tself.off = function(){\r\n\t\tself.turnedOff = true;\r\n\t}\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.domReady = function(func){\r\n\t\tif(self.DOMReady) return func();\r\n\t\tif(whenDOMReady.indexOf(func) !== -1) return;\r\n\t\twhenDOMReady.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('link');\r\n\t        s.rel = 'stylesheet';\r\n\t        s.href = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tself.js = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('script');\r\n\t        s.type = \"text/javascript\";\r\n\t        s.async = true;\r\n\t        s.src = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(function(){\r\n\t\tif(self.totalContent === 0 && !self.turnedOff){\r\n\t\t\tself.loadedContent = self.totalContent = 1;\r\n\t\t\tconsole.warn(\"If you don't use content loader feature, please turn it off with `sf.loader.off()`\");\r\n\t\t}\r\n\t}, 10000);\r\n\r\n\tvar isQueued = false;\r\n\tdocument.addEventListener(\"DOMContentLoaded\", function(event){\r\n\t\t// Add processing class to queued element\r\n\t\tif(isQueued === false && document.body){\r\n\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\t\t\tfor (var i = 0; i < isQueued.length; i++) {\r\n\t\t\t\tif(isQueued[i].nodeType === 1)\r\n\t\t\t\t\tisQueued[i].classList.add('sf-dom-queued');\r\n\t\t\t}\r\n\r\n\t\t\tvar repeatedList = $('[sf-repeat-this]', document.body);\r\n\t\t\tfor (var i = 0; i < repeatedList.length; i++) {\r\n\t\t\t\trepeatedList[i].classList.add('sf-dom-queued');\r\n\t\t\t}\r\n\r\n\t\t\t// Find images\r\n\t\t\tvar temp = $('img:not(onload)[src]');\r\n\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\tsf.loader.totalContent++;\r\n\t\t\t\ttemp[i].addEventListener('load', sf.loader.f, {once:true});\r\n\t\t\t\ttemp[i].addEventListener('error', sf.loader.f, {once:true});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction onReadyState(){\r\n\t\t\tif(isQueued === null){\r\n\t\t\t\tclearInterval(onReadyState_timer);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(self.turnedOff === false && self.loadedContent < self.totalContent)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(/loaded|complete/.test(document.readyState) === false)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tclearInterval(onReadyState_timer);\r\n\r\n\t\t\tif(self.DOMReady === false){\r\n\t\t\t\tself.DOMReady = true;\r\n\t\t\t\tfor (var i = 0; i < whenDOMReady.length; i++) {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\twhenDOMReady[i]();\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar listener = sf.dom('script, link, img');\r\n\t\t\tfor (var i = 0; i < listener.length; i++) {\r\n\t\t\t\tlistener[i].removeEventListener('error', sf.loader.f);\r\n\t\t\t\tlistener[i].removeEventListener('load', sf.loader.f);\r\n\t\t\t}\r\n\r\n\t\t\tself.DOMWasLoaded = true;\r\n\t\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\t\ttry{\r\n\t\t\t\t\twhenDOMLoaded[i]();\r\n\t\t\t\t} catch(e){\r\n\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhenProgress.splice(0);\r\n\t\t\twhenDOMReady.splice(0);\r\n\t\t\twhenDOMLoaded.splice(0);\r\n\t\t\twhenDOMReady = whenDOMLoaded = null;\r\n\r\n\t\t\t// Last init\r\n\t\t\tsf.controller.init();\r\n\t\t\tsf.model.init(document.body, isQueued);\r\n\t\t\tsf.router.init();\r\n\r\n\t\t\tisQueued = null;\r\n\t\t}\r\n\r\n\t\tvar onReadyState_timer = setInterval(onReadyState, 100);\r\n\t\tonReadyState();\r\n\t});\r\n}\r\nsf.prototype.constructor = sf.loader.onFinish;","// Data save and HTML content binding\r\nsf.model = function(scope){\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\tif(sf.controller.pending[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n};\r\n\r\n(function(){\r\n\tvar self = sf.model;\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\r\n\tvar processingElement = null;\r\n\r\n\t// For debugging, normalize indentation\r\n\tfunction trimIndentation(text){\r\n\t\tvar indent = text.split(\"\\n\", 3);\r\n\t\tif(indent[0][0] !== ' ' || indent[0][0] !== \"\\t\")\r\n\t\t\tindent = indent[1];\r\n\t\telse indent = indent[0];\r\n\r\n\t\tif(indent === undefined) return text;\r\n\t\tindent = indent.length - indent.trim().length;\r\n\t\tif(indent === 0) return text;\r\n\t\treturn text.replace(RegExp('^([\\\\t ]{'+indent+'})', 'gm'), '');\r\n\t}\r\n\r\n\t// Secured evaluation\r\n\tvar bracketMatch = RegExp('([\\\\w.]*?[\\\\S\\\\s])\\\\('+sf.regex.avoidQuotes, 'g');\r\n\tvar chackValidFunctionCall = /[a-zA-Z0-9 \\]\\$\\)]/;\r\n\tvar allowedFunction = [':', 'for', 'if', 'while', '_content_.take', 'console.log'];\r\n\tvar localEval = function(script, _model_, _modelScope, _content_){\r\n\t\t\"use strict\";\r\n\r\n\t\t// ==== Security check ====\r\n\t\tvar tempScript = script;\r\n\r\n\t\t// Remove quotes\r\n\t\ttempScript = tempScript.replace(sf.regex.getQuotes, '\"Quotes\"');\r\n\r\n\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\tvar preventExecution = false;\r\n\t\tvar check_ = null;\r\n\t\twhile((check_ = bracketMatch.exec(tempScript)) !== null){\r\n\t\t\tcheck_[1] = check_[1].trim();\r\n\r\n\t\t\tif(allowedFunction.indexOf(check_[1]) === -1 &&\r\n\t\t\t\tcheck_[1].split('.')[0] !== '_modelScope' &&\r\n\t\t\t\tchackValidFunctionCall.test(check_[1][check_[1].length-1])\r\n\t\t\t){\r\n\t\t\t\tpreventExecution = check_[1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(preventExecution){\r\n\t\t\tconsole.error(\"Trying to executing unrecognized function (\"+preventExecution+\")\");\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\t\t// ==== Security check ended ====\r\n\t\r\n\t\tvar _result_ = '';\r\n\t\ttry{\r\n\t\t\tif(/@return /.test(script) === true){\r\n\t\t\t\tvar _evaled_ = eval('(function(){'+script.split('@return ').join('return ')+'})()');\r\n\t\t\t\treturn _result_ + _evaled_;\r\n\t\t\t}\r\n\t\t\telse var _evaled_ = eval(script);\r\n\t\t} catch(e){\r\n\t\t\tconsole.error(e);\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\t// Find an index for the element on the list\r\n\tself.index = function(element){\r\n\t\tvar i = -1;\r\n\t\tvar tagName = element.tagName;\r\n\t\tvar currentElement = element;\r\n\r\n\t\twhile(element !== null) {\r\n\t\t\tif(element.tagName === tagName)\r\n\t\t\t\ti++;\r\n\r\n\t\t\telement = element.previousElementSibling;\r\n\t\t}\r\n\r\n\t\tvar list = currentElement.getAttribute('sf-bind-list');\r\n\t\tif(!list) return i;\r\n\r\n\t\tvar ref = sf.model.root[sf.controller.modelName(currentElement)][list];\r\n\t\tif(!ref.$virtual) return i;\r\n\r\n\t\treturn i + ref.$virtual.DOMCursor - 1;\r\n\t}\r\n\r\n\t// Declare model for the name with a function\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\t\t\r\n\t\tfunc(self(name), self);\r\n\t}\r\n\r\n\t// Get property of the model\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys.join('|');\r\n\t}\r\n\r\n\t// Escape the escaped quote\r\n\tfunction escapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*');\r\n\t}\r\n\r\n\tfunction unescapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\");\r\n\t}\r\n\r\n\tfunction elseIfHandle(else_, scopes){\r\n\t\tvar elseIf = else_.elseIf;\r\n\r\n\t\t// Else if\r\n\t\tfor (var i = 0; i < elseIf.length; i++) {\r\n\t\t\t// Check the condition\r\n\t\t\tscopes[0] = elseIf[i][0];\r\n\t\t\tif(!localEval.apply(self.root, scopes))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Get the value\r\n\t\t\tscopes[0] = elseIf[i][1];\r\n\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t}\r\n\r\n\t\t// Else\r\n\t\tif(else_.elseValue === null)\r\n\t\t\treturn '';\r\n\r\n\t\tscopes[0] = else_.elseValue;\r\n\t\treturn localEval.apply(self.root, scopes);\r\n\t}\r\n\r\n\t// ==== Template parser ====\r\n\tvar templateParser_regex = /{{%=([0-9]+)/gm;\r\n\tvar REF_DIRECT = 0, REF_IF = 1, REF_EXEC = 2;\r\n\tvar templateExec = function(parse, item, atIndex){\r\n\t\tvar parsed = {};\r\n\r\n\t\t// Get or evaluate static or dynamic data\r\n\t\tfor (var i = 0; i < parse.length; i++) {\r\n\t\t\tif(atIndex !== undefined && atIndex.indexOf(i) === -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar ref = parse[i];\r\n\t\t\tref.data[1] = item;\r\n\r\n\t\t\t// Direct evaluation type\r\n\t\t\tif(ref.type === REF_DIRECT || ref.type === REF_EXEC)\r\n\t\t\t\tparsed[i] = {type:ref.type, data:localEval.apply(self.root, ref.data)};\r\n\r\n\t\t\t// Conditional type\r\n\t\t\telse if(ref.type === REF_IF){\r\n\t\t\t\tvar scopes = ref.data;\r\n\t\t\t\tparsed[i] = {type:ref.type, data:''};\r\n\t\t\t\tscopes[0] = ref.if[0];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tparsed[i].data = elseIfHandle(ref, scopes);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscopes[0] = ref.if[1];\r\n\t\t\t\tparsed[i].data = localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n\r\n\tvar templateParser = function(template, item){\r\n\t\tvar html = template.html.cloneNode(true);\r\n\t\tvar addresses = template.addresses;\r\n\t\tvar parsed = templateExec(template.parse, item);\r\n\r\n\t\t// Save model item reference to node\r\n\t\thtml.model = item;\r\n\r\n\t\tvar changesReference = [];\r\n\t\tvar pendingInsert = [];\r\n\r\n\t\t// Find element where the data belongs to\r\n\t\tfor (var i = 0; i < addresses.length; i++) {\r\n\t\t\tvar ref = addresses[i];\r\n\t\t\tvar current = $.childIndexes(ref.address, html);\r\n\r\n\t\t\t// Modify element attributes\r\n\t\t\tif(ref.nodeType === 1){\r\n\t\t\t\tvar refA = ref.attributes;\r\n\t\t\t\tfor(var a = 0; a < refA.length; a++){\r\n\t\t\t\t\tvar refB = refA[a];\r\n\r\n\t\t\t\t\tchangesReference.push({\r\n\t\t\t\t\t\tattribute:current.attributes[refB.name],\r\n\t\t\t\t\t\tref:refB\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(refB.direct !== undefined){\r\n\t\t\t\t\t\tcurrent.setAttribute(refB.name, parsed[refB.direct].data);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Below is used for multiple data\r\n\t\t\t\t\trefB = current.attributes[refB.name];\r\n\r\n\t\t\t\t\trefB.value = refB.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Replace text node\r\n\t\t\tif(ref.nodeType === 3){\r\n\t\t\t\tvar refA = current;\r\n\r\n\t\t\t\tchangesReference.push({\r\n\t\t\t\t\ttextContent:refA,\r\n\t\t\t\t\tref:ref\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(ref.direct !== undefined){\r\n\t\t\t\t\trefA.textContent = parsed[ref.direct].data;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Below is used for multiple/dynamic data\r\n\t\t\t\trefA.textContent = refA.textContent.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Replace dynamic node\r\n\t\t\tif(ref.nodeType === -1){\r\n\t\t\t\tvar cRef = {\r\n\t\t\t\t\tdynamicFlag:current,\r\n\t\t\t\t\tdirect:ref.parse_index,\r\n\t\t\t\t\tparentNode:current.parentNode,\r\n\t\t\t\t\tstartFlag:ref.startFlag && $.childIndexes(ref.startFlag, html)\r\n\t\t\t\t};\r\n\t\t\t\tchangesReference.push(cRef);\r\n\r\n\t\t\t\t// Pending element insert to take other element reference\r\n\t\t\t\tpendingInsert.push(cRef);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Save reference to element\r\n\t\thtml.sf$elementReferences = changesReference;\r\n\t\t// html.sf$modelParsed = parsed;\r\n\r\n\t\t// Run the pending element\r\n\t\tfor (var i = 0; i < pendingInsert.length; i++) {\r\n\t\t\tvar ref = pendingInsert[i];\r\n\t\t\tvar tDOM = $.parseElement(parsed[ref.direct].data, true);\r\n\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\tref.parentNode.insertBefore(tDOM[a], ref.dynamicFlag);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t}\r\n\r\n\tfunction syntheticCache(element, template, item){\r\n\t\tif(element.sf$cache === undefined)\r\n\t\t\telement.sf$cache = {};\r\n\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\tvar ref = modelRef_array[i];\r\n\t\t\tcache[ref[0]] = deepProperty(item, ref[1]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction syntheticTemplate(element, template, property, item){\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tif(property !== undefined){\r\n\t\t\tvar changes = template.modelReference[property];\r\n\t\t\tif(changes === undefined || changes.length === 0){\r\n\t\t\t\tconsole.error(\"Failed to run syntheticTemplate because property '\"+property+\"' is not observed\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\tif(ref[0] !== property) continue;\r\n\r\n\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t// Check if data was different\r\n\t\t\t\tif(cache[ref[0]] !== newData)\r\n\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar changes = [];\r\n\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t// Check if data was different\r\n\t\t\t\tif(cache[ref[0]] !== newData){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(changes.length === 0) return false;\r\n\t\t}\r\n\r\n\t\tvar parsed = templateExec(template.parse, item, changes);\r\n\t\tfunction checkRelatedChanges(parseIndex){\r\n\t\t\tvar found = false;\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(changes.indexOf(parseIndex[i]) !== -1){\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(found === false)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t// Prepare all required data\r\n\t\t\tchanges = [];\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(parsed[parseIndex[i]] === undefined){\r\n\t\t\t\t\tchanges.push(parseIndex[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tObject.assign(parsed, templateExec(template.parse, item, changes));\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tvar changesReference = element.sf$elementReferences;\r\n\t\tvar haveChanges = false;\r\n\t\tfor (var i = 0; i < changesReference.length; i++) {\r\n\t\t\tvar cRef = changesReference[i];\r\n\r\n\t\t\tif(cRef.dynamicFlag !== undefined){ // Dynamic data\r\n\t\t\t\tif(parsed[cRef.direct] !== undefined){\r\n\t\t\t\t\tvar tDOM = $.parseElement(parsed[cRef.direct].data, true);\r\n\t\t\t\t\tvar currentDOM = $.prevAll(cRef.dynamicFlag, cRef.startFlag);\r\n\t\t\t\t\tvar notExist = false;\r\n\r\n\t\t\t\t\t// Replace if exist, skip if similar\r\n\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\t\t\tif(currentDOM[a] === undefined){\r\n\t\t\t\t\t\t\tnotExist = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(currentDOM[a].isEqualNode(tDOM[a]) === false)\r\n\t\t\t\t\t\t\tcRef.parentNode.replaceChild(tDOM[a], currentDOM[a]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Add if not exist\r\n\t\t\t\t\tif(notExist){\r\n\t\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++)\r\n\t\t\t\t\t\t\tcRef.parentNode.insertBefore(tDOM[a], cRef.dynamicFlag);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove if over index\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tfor (var a = tDOM.length; a < currentDOM.length; a++) {\r\n\t\t\t\t\t\t\tcurrentDOM[a].remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(cRef.textContent !== undefined){ // Text only\r\n\t\t\t\tif(cRef.ref.parse_index !== undefined){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.textContent.textContent === temp) continue;\r\n\t\t\t\t\t\tcRef.textContent.textContent = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.textContent.textContent === value) continue;\r\n\t\t\t\t\tcRef.textContent.textContent = value;\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(cRef.attribute !== undefined){ // Attributes\r\n\t\t\t\tif(cRef.ref.parse_index !== undefined){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.attribute.value === temp) continue;\r\n\t\t\t\t\t\tcRef.attribute.value = temp;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.attribute.value === value) continue;\r\n\t\t\t\t\tcRef.attribute.value = value;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn haveChanges;\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval, preParsedReference){\r\n\t\tvar _modelScope = self.root[scope];\r\n\t\tif(!runEval) runEval = '';\r\n\t\t\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(_modelScope);\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(_modelScope[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\tvar preParsed = [];\r\n\t\t\tvar lastParsedIndex = preParsedReference.length;\r\n\t\t}\r\n\r\n\t\tvar prepared = html.replace(/{{([^@%][\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = escapeEscapedQuote(temp); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\r\n\t\t\ttemp = unescapeEscapedQuote(temp); // ToDo: Unescape\r\n\r\n\t\t\t// Unescape HTML\r\n\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t// Evaluate\r\n\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\ttemp = temp.trim();\r\n\r\n\t\t\t\t// Simplicity similar\r\n\t\t\t\tvar exist = preParsed.indexOf(temp);\r\n\r\n\t\t\t\tif(exist === -1){\r\n\t\t\t\t\tpreParsed.push(temp);\r\n\t\t\t\t\tpreParsedReference.push({type:REF_DIRECT, data:[temp, _model_, _modelScope]});\r\n\t\t\t\t\treturn '{{%=' + (preParsed.length + lastParsedIndex - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn '{{%=' + (exist + lastParsedIndex);\r\n\t\t\t}\r\n\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(/(?!&#.*?;)[\\u00A0-\\u9999<>\\&]/gm, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\tpreParsed = variableList = _modelScope = _model_ = mask = scope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t}\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\t// Dynamic data parser\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope, runEval){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(passVar === null)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\t// Use strict mode and prepare for new variables\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\t// Declare new variable\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove var because no variable are being passed\r\n\t\t\t\tif(firstTime === true)\r\n\t\t\t\t\tstrDeclare = strDeclare.replace('var ', '');\r\n\r\n\t\t\t\t// Escape function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('&#40;').split(')').join('&#41;');\r\n\r\n\t\t\t\t// Pass to static data parser for another HTML data\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Build script preparation\r\n\t\thtml = html.replace(/{\\[([\\s\\S]*?)\\]}/g, function(full, matched){\r\n\t\t\tif(/{{.*?}}/.test(matched) === false)\r\n\t\t\t\treturn \"_result_ += '\"+matched.split(\"'\").join(\"\\\\'\")+\"'\";\r\n\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope)+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(runEval === '#noEval')\r\n\t\t\tvar preParsedReference = [];\r\n\r\n\t\tvar prepared = html.replace(/{{(@[\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = escapeEscapedQuote(temp); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\t\t\ttemp = unescapeEscapedQuote(temp); // ToDo: Unescape\r\n\r\n\t\t\t// Unescape HTML\r\n\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass_ = /(var|let)([\\w,\\s]+)(?=\\s(?==|in|of))/g;\r\n\t\t\tvar VarPass = [];\r\n\t\t\tvar s1 = null;\r\n\t\t\twhile((s1 = VarPass_.exec(temp)) !== null){\r\n\t\t\t\tVarPass.push(s1[2]);\r\n\t\t\t}\r\n\r\n\t\t\tif(_model_ === null && runEval === '#noEval')\r\n\t\t\t\tVarPass.push('_model_');\r\n\r\n\t\t\tif(VarPass.length !== 0){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/([\\n\\t\\r]|  )+/g, '').split(',').forEach(function(val){\r\n\t\t\t\t\t\tobtained.push(val);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':(typeof '+VarPass[i]+'!==\"undefined\"?'+VarPass[i]+':undefined)';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(VarPass.length === 0)\r\n\t\t\t\t\tVarPass = 'null';\r\n\t\t\t\telse VarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\t\t\telse temp = temp.split('&VarPass&').join('null');\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\r\n\t\t\t\t// {if, elseIf:([if, value], ...), elseValue}\r\n\t\t\t\tvar findElse = function(text){\r\n\t\t\t\t\ttext = text.join(':');\r\n\t\t\t\t\tvar else_ = null;\r\n\r\n\t\t\t\t\t// Get else value\r\n\t\t\t\t\tvar text = text.split('@else' + (text.indexOf(':') !== -1 ? ':' : ' :'));\r\n\t\t\t\t\tif(text.length === 2)\r\n\t\t\t\t\t\telse_ = text.pop();\r\n\t\t\t\t\telse text = text[0];\r\n\r\n\t\t\t\t\t// Split elseIf\r\n\t\t\t\t\ttext = text.split('@elseif ');\r\n\r\n\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t\tif:text.shift(),\r\n\t\t\t\t\t\telseIf:[],\r\n\t\t\t\t\t\telseValue:else_\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Separate condition script and value\r\n\t\t\t\t\tfor (var i = 0; i < text.length; i++) {\r\n\t\t\t\t\t\tvar val = text[i].split(':');\r\n\t\t\t\t\t\tobj.elseIf.push([val.shift(), val.join(':')]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tvar condition = check.shift();\r\n\t\t\t\t\tvar elseIf = findElse(check);\r\n\t\t\t\t\telseIf.type = REF_IF;\r\n\t\t\t\t\telseIf.data = [null, _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t\t// Trim Data\r\n\t\t\t\t\telseIf.if = [condition.trim(), elseIf.if.trim()];\r\n\t\t\t\t\tif(elseIf.elseValue !== null)\r\n\t\t\t\t\t\telseIf.elseValue = elseIf.elseValue.trim();\r\n\r\n\t\t\t\t\tfor (var i = 0; i < elseIf.elseIf.length; i++) {\r\n\t\t\t\t\t\telseIf.elseIf[i][0] = elseIf.elseIf[i][0].trim();\r\n\t\t\t\t\t\telseIf.elseIf[i][1] = elseIf.elseIf[i][1].trim();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Push data\r\n\t\t\t\t\tpreParsedReference.push(elseIf);\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scopes = [check[0], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\treturn elseIfHandle(findElse(check), scopes);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcheck.shift();\r\n\t\t\t\tscopes[0] = check.join(':');\r\n\r\n\t\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tvar scopes = [check[1], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tpreParsedReference.push({type:REF_EXEC, data:scopes});\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, scopes);\r\n\t\t\t\treturn temp;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\t_modelScope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t\treturn [prepared, preParsedReference, _content_];\r\n\t\t}\r\n\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\tvar bindArray = function(template, list, mask, modelName, propertyName, targetNode, parentNode, tempDOM){\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'swap', 'move', 'replace', 'softRefresh', 'hardRefresh'];\r\n\t\tvar refreshTimer = -1;\r\n\t\tvar parentChilds = parentNode.children;\r\n\r\n\t\t// Update callback\r\n\t\tvar callback = self.root[modelName]['on$'+propertyName];\r\n\r\n\t\tvar processElement = function(index, options, other, count){\r\n\t\t\tif(options === 'clear'){\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar spacer = [parentNode.firstElementChild, parentNode.lastElementChild];\r\n\r\n\t\t\t\tparentNode.textContent = '';\r\n\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tparentNode.appendChild(spacer[0]);\r\n\t\t\t\t\tparentNode.appendChild(spacer[1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Hard refresh\r\n\t\t\tif(options === 'hardRefresh'){\r\n\t\t\t\tvar item = list;\r\n\r\n\t\t\t\t// Clear childs if exist\r\n\t\t\t\tvar n = parentChilds.length;\r\n\t\t\t\tif(parentChilds[n] !== undefined && parentChilds[n].classList.contains('virtual-spacer') === false){\r\n\t\t\t\t\twhile(parentChilds.length >= index){\r\n\t\t\t\t\t\tparentChilds[n].remove();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (var i = index; i < item.length; i++) {\r\n\t\t\t\t\tvar temp = templateParser(template, item[i]);\r\n\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tparentNode.appendChild(temp);\r\n\r\n\t\t\t\t\tsyntheticCache(temp, template, item[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(options === 'swap' || options === 'move'){\r\n\t\t\t\tvar ref = parentChilds;\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t\tother++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(options === 'move'){\r\n\t\t\t\t\tvar overflow = list.length - index - count;\r\n\t\t\t\t\tif(overflow < 0)\r\n\t\t\t\t\t\tcount += overflow;\r\n\r\n\t\t\t\t\t// Move to virtual DOM\r\n\t\t\t\t\tvar vDOM = document.createElement('div');\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tvDOM.appendChild(ref[index]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar nextSibling = ref[other] || null;\r\n\r\n\t\t\t\t\t// Move to defined index\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tparentNode.insertBefore(vDOM.firstElementChild, nextSibling);\r\n\r\n\t\t\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\t\t\tcallback.update(\r\n\t\t\t\t\t\t\t\t(nextSibling !== null && nextSibling.previousElementSibling)\r\n\t\t\t\t\t\t\t\t|| parentNode.lastElementChild, 'move');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(index >= other){\r\n\t\t\t\t\tvar temp = index;\r\n\t\t\t\t\tindex = other;\r\n\t\t\t\t\tother = temp;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tref[index].insertAdjacentElement('afterEnd', ref[other]);\r\n\t\t\t\tref[other].insertAdjacentElement('afterEnd', ref[index]);\r\n\r\n\t\t\t\tif(callback !== undefined && callback.update){\r\n\t\t\t\t\tcallback.update(ref[other], 'swap');\r\n\t\t\t\t\tcallback.update(ref[index], 'swap');\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar exist = list.$virtual.elements();\r\n\r\n\t\t\t\tclearTimeout(refreshTimer);\r\n\t\t\t\trefreshTimer = setTimeout(function(){\r\n\t\t\t\t\tlist.$virtual.refresh(true);\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse exist = parentChilds;\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(options === 'remove'){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\texist[index].remove();\r\n\t\t\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.remove){\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tsetTimeout(startRemove, 800);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse startRemove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update\r\n\t\t\telse if(options === 'update'){\r\n\t\t\t\tif(index === undefined){\r\n\t\t\t\t\tindex = 0;\r\n\t\t\t\t\tother = list.length;\r\n\t\t\t\t}\r\n\t\t\t\telse if(other === undefined) other = index + 1;\r\n\t\t\t\telse if(other < 0) other = list.length + other;\r\n\t\t\t\telse other += index;\r\n\r\n\t\t\t\t// Trim length\r\n\t\t\t\tvar overflow = list.length - other;\r\n\t\t\t\tif(overflow < 0) other = other + overflow;\r\n\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\tvar oldChild = exist[i];\r\n\t\t\t\t\tif(oldChild === undefined || list[i] === undefined)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\toldChild.parentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tparentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\t\tcallback.update(temp, 'replace');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar item = list[index];\r\n\t\t\tif(item === undefined) return;\r\n\r\n\t\t\tvar temp = templateParser(template, item);\r\n\t\t\tsyntheticCache(temp, template, item);\r\n\r\n\t\t\tvar referenceNode = exist[index];\r\n\r\n\t\t\t// Create\r\n\t\t\tif(options === 'insertAfter'){\r\n\t\t\t\tvar index = index !== 0 ? index - 1 : (exist.length - 1);\r\n\t\t\t\tvar referenceNode = exist[index];\r\n\r\n\t\t\t\tif(!referenceNode){\r\n\t\t\t\t\tif(!list.$virtual || list.length === 0){\r\n\t\t\t\t\t\tparentNode.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treferenceNode.insertAdjacentElement('afterEnd', temp);\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\r\n\t\t\t\t// Refresh virtual scroll\r\n\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t}\r\n\t\t\telse if(options === 'append'){\r\n\t\t\t\tif(list.$virtual && list.length !== 0){\r\n\t\t\t\t\texist[index-1].insertAdjacentElement('afterEnd', temp);\r\n\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\r\n\t\t\t\t\t// Refresh virtual scroll\r\n\t\t\t\t\tlist.$virtual.refresh();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparentNode.appendChild(temp);\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t\telse if(options === 'insertBefore'){\r\n\t\t\t\texist[0].insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\r\n\t\t\t\t// Refresh virtual scroll\r\n\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar _double_zero = [0,0]; // For arguments\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = undefined;\r\n\t\t\t\t\tvar lastLength = this.length;\r\n\r\n\t\t\t\t\tif(name === 'move'){\r\n\t\t\t\t\t\tvar from = arguments[0];\r\n\t\t\t\t\t\tvar to = arguments[1];\r\n\t\t\t\t\t\tif(from === to) return;\r\n\t\t\t\t\t\tvar count = arguments[2] || 1;\r\n\t\t\t\t\t\tprocessElement(from, 'move', to, count);\r\n\r\n\t\t\t\t\t\tvar temp = Array.prototype.splice.apply(this, [from, count]);\r\n\t\t\t\t\t\ttemp.unshift(to, 0);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(name === 'swap'){\r\n\t\t\t\t\t\tvar i = arguments[0];\r\n\t\t\t\t\t\tvar o = arguments[1];\r\n\t\t\t\t\t\tif(i === o) return;\r\n\t\t\t\t\t\tprocessElement(i, 'swap', o);\r\n\t\t\t\t\t\tvar temp = this[i];\r\n\t\t\t\t\t\tthis[i] = this[o];\r\n\t\t\t\t\t\tthis[o] = temp;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'replace'){\r\n\t\t\t\t\t\t// Check if item has same reference\r\n\t\t\t\t\t\tif(arguments[0].length >= lastLength && lastLength !== 0){\r\n\t\t\t\t\t\t\tvar matchLeft = lastLength;\r\n\t\t\t\t\t\t\tvar ref = arguments[0];\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < lastLength; i++) {\r\n\t\t\t\t\t\t\t\tif(ref[i] === this[i]){\r\n\t\t\t\t\t\t\t\t\tmatchLeft--;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the end\r\n\t\t\t\t\t\t\tif(matchLeft === 0){\r\n\t\t\t\t\t\t\t\tif(ref.length === lastLength) return;\r\n\r\n\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(lastLength);\r\n\t\t\t\t\t\t\t\ttemp.unshift(lastLength, 0);\r\n\t\t\t\t\t\t\t\tthis.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the middle\r\n\t\t\t\t\t\t\telse if(matchLeft !== lastLength){\r\n\t\t\t\t\t\t\t\tif(arguments[1] === true){\r\n\t\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(i);\r\n\t\t\t\t\t\t\t\t\ttemp.unshift(i, lastLength - i);\r\n\t\t\t\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t\t\t\tlist.refresh(i, lastLength); // Reuse element if exist\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Build from zero\r\n\t\t\t\t\t\tif(lastLength === 0){\r\n\t\t\t\t\t\t\tArray.prototype.push.apply(this, arguments[0]);\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Clear all items and merge the new one\r\n\t\t\t\t\t\tvar temp = [0, lastLength];\r\n\t\t\t\t\t\tArray.prototype.push.apply(temp, arguments[0]);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Rebuild all element\r\n\t\t\t\t\t\tif(arguments[1] !== true){\r\n\t\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reuse some element\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tvar currentLength = this.length;\r\n\r\n\t\t\t\t\t\t\t// Clear unused element if current array < last array\r\n\t\t\t\t\t\t\tif(this.length < lastLength){\r\n\t\t\t\t\t\t\t\tfor (var i = currentLength; i < lastLength; i++) {\r\n\t\t\t\t\t\t\t\t\tparentChilds[currentLength].remove();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// And start refreshing\r\n\t\t\t\t\t\t\tlist.refresh(0, currentLength);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reset virtual list\r\n\t\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\t\tlist.$virtual.reset();\r\n\t\t\t\t\t\t\tlist.$virtual.resetViewport();\r\n\t\t\t\t\t\t\tlist.$virtual.refresh();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice' && arguments[0] === 0 && arguments[1] === undefined){\r\n\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\treturn Array.prototype.splice.apply(this, arguments);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(this.length, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'push')\r\n\t\t\t\t\t\tprocessElement(lastLength, 'append');\r\n\r\n\t\t\t\t\telse if(name === 'shift')\r\n\t\t\t\t\t\tprocessElement(0, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments[0] === 0 && arguments[1] === undefined)\r\n\t\t\t\t\t\t\treturn temp;\r\n\r\n\t\t\t\t\t\t// Removing data\r\n\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\tif(real < 0) real = lastLength + real;\r\n\r\n\t\t\t\t\t\tvar limit = arguments[1];\r\n\t\t\t\t\t\tif(!limit && limit !== 0) limit = this.length;\r\n\r\n\t\t\t\t\t\tfor (var i = limit - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tprocessElement(real + i, 'remove');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(arguments.length >= 3){ // Inserting data\r\n\t\t\t\t\t\t\tlimit = arguments.length - 2;\r\n\t\t\t\t\t\t\tfor (var i = 0; i < limit; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(real + i, 'insertAfter');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift')\r\n\t\t\t\t\t\tprocessElement(0, 'insertBefore');\r\n\r\n\t\t\t\t\telse if(name === 'softRefresh')\r\n\t\t\t\t\t\tprocessElement(arguments[0], 'update', arguments[1]);\r\n\r\n\t\t\t\t\telse if(name === 'hardRefresh')\r\n\t\t\t\t\t\tprocessElement(arguments[0] || 0, 'hardRefresh');\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(parentNode && parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\tdelete list.$virtual;\r\n\t\t\tlist.$virtual = {};\r\n\r\n\t\t\t// Transfer virtual DOM\r\n\t\t\tlist.$virtual.dom = tempDOM;\r\n\r\n\t\t\tparentNode.replaceChild(template.html, parentChilds[1]);\r\n\t\t\tsf.internal.virtual_scroll.handle(list, targetNode, parentNode);\r\n\t\t\ttemplate.html.remove();\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\r\n\t\t// Todo: Enable auto item binding\r\n\t\tif(false && list.auto !== false){\r\n\t\t\t// for (var i = 0; i < list.length; i++) {\r\n\t\t\t// \tlist[i]\r\n\t\t\t// }\r\n\t\t}\r\n\r\n\t\thiddenProperty(list, 'refresh', function(index, length, property){\r\n\t\t\tif(index === undefined || index.constructor === String){\r\n\t\t\t\tproperty = index;\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tlength = list.length;\r\n\t\t\t}\r\n\t\t\telse if(length === undefined) length = index + 1;\r\n\t\t\telse if(length.constructor === String){\r\n\t\t\t\tproperty = length;\r\n\t\t\t\tlength = index + 1;\r\n\t\t\t}\r\n\t\t\telse if(length < 0) length = list.length + length;\r\n\t\t\telse length += index;\r\n\r\n\t\t\t// Trim length\r\n\t\t\tvar overflow = list.length - length;\r\n\t\t\tif(overflow < 0) length = length + overflow;\r\n\r\n\t\t\tfor (var i = index; i < length; i++) {\r\n\t\t\t\tvar elem = list.getElement(i);\r\n\r\n\t\t\t\t// Create element if not exist\r\n\t\t\t\tif(elem === undefined){\r\n\t\t\t\t\tlist.hardRefresh(i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(syntheticTemplate(elem, template, property, list[i]) === false)\r\n\t\t\t\t\tcontinue; // Continue if no update\r\n\r\n\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\tcallback.update(elem, 'replace');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar virtualChilds = null;\r\n\t\tif(list.$virtual){\r\n\t\t\tvirtualChilds = list.$virtual.dom.children;\r\n\t\t\tvar floorBound = list.$virtual.dCursor.floor;\r\n\t\t}\r\n\t\thiddenProperty(list, 'getElement', function(index){\r\n\t\t\tif(virtualChilds !== null){\r\n\t\t\t\tvar ret = undefined;\r\n\t\t\t\tif(index < list.$virtual.DOMCursor)\r\n\t\t\t\t\tret = virtualChilds[index];\r\n\t\t\t\telse {\r\n\t\t\t\t\tindex -= list.$virtual.DOMCursor;\r\n\t\t\t\t\tvar childElement = parentNode.childElementCount - 2;\r\n\r\n\t\t\t\t\tif(index <= childElement)\r\n\t\t\t\t\t\tret = parentChilds[index + 1];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tret = virtualChilds[index - childElement + list.$virtual.DOMCursor];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(ret !== floorBound)\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t\treturn parentChilds[index];\r\n\t\t});\r\n\t}\r\n\r\n\tvar loopParser = function(name, template, script, targetNode, parentNode){\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\r\n\t\tif(!self.root[name])\r\n\t\t\treturn console.error(\"Can't parse element because model for '\"+name+\"' was not found\", template);\r\n\r\n\t\tvar items = self.root[name][method[1]];\r\n\t\tif(items === undefined){\r\n\t\t\tconsole.error(\"Can't bind array to `\"+method[1]+\"` because undefined property in model `\"+name+\"`\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttemplate.setAttribute('sf-bind-list', method[1]);\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = template;\r\n\t\ttemplate = self.extractPreprocess(template, mask, name);\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tvar tempDOM = document.createElement('div');\r\n\t\t\tvar modelRef = self.root[name];\r\n\t\t\t\r\n\t\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\t\tvar elem = templateParser(template, items[i]);\r\n\t\t\t\ttempDOM.appendChild(elem);\r\n\t\t\t\tsyntheticCache(elem, template, items[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// Enable element binding\r\n\t\t\tif(modelRef.sf$bindedKey === undefined)\r\n\t\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\t\tif(modelRef.sf$bindedKey[method[1]] === undefined)\r\n\t\t\t\tmodelRef.sf$bindedKey[method[1]] = null;\r\n\r\n\t\t\tObject.defineProperty(modelRef, method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tif(val.length === 0)\r\n\t\t\t\t\t\treturn items.splice(0);\r\n\t\t\t\t\treturn items.replace(val, true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tbindArray(template, items, mask, name, method[1], targetNode, parentNode, tempDOM);\r\n\r\n\t\t\t// Output to real DOM if not being used for virtual list\r\n\t\t\tif(items.$virtual === undefined){\r\n\t\t\t\tvar children = tempDOM.children;\r\n\t\t\t\tfor (var i = 0; i < children.length; i++) {\r\n\t\t\t\t\tparentNode.appendChild(children[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttempDOM.remove();\r\n\t\t\t\ttempDOM = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar inputBoundFunction = function(e){\r\n\t\tself.root[e.target['sf-model']][e.target['sf-bounded']] = e.target.value;\r\n\t};\r\n\r\n\tvar bindInput = function(targetNode){\r\n\t\tvar temp = $('input[sf-bound]', targetNode);\r\n\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar model = sf.controller.modelName(element);\r\n\t\t\tif(!model) return;\r\n\r\n\t\t\tvar whichVar = element.getAttribute('sf-bound');\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(typeof self.root[model][whichVar] === undefined){\r\n\t\t\t\tconsole.error('Cannot get reference for self.root[\"' + model + '\"][\"' + whichVar+'\"]');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement['sf-bounded'] = whichVar;\r\n\t\t\telement['sf-model'] = model;\r\n\t\t\telement.setAttribute('sf-bounded', '');\r\n\t\t\telement.removeAttribute('sf-bound');\r\n\r\n\t\t\t// Bound value change\r\n\t\t\tif(element.tagName === 'INPUT' || element.tagName === 'TEXTAREA')\r\n\t\t\t\t$.on(element, 'keyup', inputBoundFunction);\r\n\r\n\t\t\telse\r\n\t\t\t\t$.on(element, 'change', inputBoundFunction);\r\n\t\t}\r\n\t}\r\n\r\n\tvar alreadyInitialized = false;\r\n\tself.init = function(targetNode, queued){\r\n\t\tif(alreadyInitialized && !targetNode) return;\r\n\t\talreadyInitialized = true;\r\n\t\tsetTimeout(function(){\r\n\t\t\talreadyInitialized = false;\r\n\t\t}, 50);\r\n\r\n\t\tif(!targetNode) targetNode = document.body;\r\n\t\tself.parsePreprocess(queued || self.queuePreprocess(targetNode), queued);\r\n\t\tbindInput(targetNode);\r\n\r\n\t\tvar temp = $('[sf-repeat-this]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar parent = element.parentElement;\r\n\r\n\t\t\tif(queued !== undefined)\r\n\t\t\t\telement.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(element.parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\t\tvar ceiling = document.createElement(element.tagName);\r\n\t\t\t\tceiling.classList.add('virtual-spacer');\r\n\t\t\t\tvar floor = ceiling.cloneNode(true);\r\n\r\n\t\t\t\tceiling.classList.add('ceiling');\r\n\t\t\t\t//ceiling.style.transform = 'scaleY(0)';\r\n\t\t\t\telement.parentNode.insertAdjacentElement('afterBegin', ceiling); // prepend\r\n\r\n\t\t\t\tfloor.classList.add('floor');\r\n\t\t\t\t//floor.style.transform = 'scaleY(0)';\r\n\t\t\t\telement.parentNode.insertAdjacentElement('beforeEnd', floor); // append\r\n\r\n\t\t\t\t// His total scrollHeight\r\n\t\t\t\tvar styles = window.getComputedStyle(element);\r\n\t\t\t\tvar absHeight = parseFloat(styles['marginTop']) + parseFloat(styles['marginBottom']);\r\n\t\t\t\tstyles = null;\r\n\r\n\t\t\t\t// Element height + margin\r\n\t\t\t\tabsHeight = Math.ceil(element.offsetHeight + absHeight);\r\n\t\t\t}\r\n\r\n\t\t\tvar after = element.nextElementSibling;\r\n\t\t\tif(after === null || element === after)\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = element.previousElementSibling;\r\n\t\t\tif(before === null || element === before)\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = element.getAttribute('sf-repeat-this');\r\n\t\t\telement.removeAttribute('sf-repeat-this');\r\n\t\t\tvar controller = sf.controller.modelName(element);\r\n\r\n\t\t\t// Check if the element was already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(element.outerHTML))\r\n\t\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\t\tloopParser(controller, element, script, targetNode, element.parentNode);\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t}\r\n\r\n\t// Reset model properties\r\n\t// Don't call if the removed element is TEXT or #comment\r\n\tfunction DOMNodeRemoved(element){\r\n\t\tvar temp = $('[sf-controller]', element);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tremoveModelBinding(temp[i].getAttribute('sf-controller'));\r\n\t\t}\r\n\r\n\t\tif(element.hasAttribute('sf-controller') === false)\r\n\t\t\treturn;\r\n\r\n\t\tremoveModelBinding(element.getAttribute('sf-controller'));\r\n\t}\r\n\r\n\tsf(function(){\r\n\t\tvar everyRemovedNodes = function(nodes){\r\n\t\t\tvar tagName = nodes.nodeName;\r\n\t\t\tif(tagName === 'TEXT' || tagName === '#text' || tagName === '#comment') return;\r\n\r\n\t\t\tDOMNodeRemoved(nodes);\r\n\t\t}\r\n\r\n\t\tif(typeof MutationObserver === 'function' && MutationObserver.prototype.observe){\r\n\t\t\tvar everyRecords = function(record){\r\n\t\t\t\trecord.removedNodes.forEach(everyRemovedNodes);\r\n\t\t\t}\r\n\r\n\t\t\tvar observer = new MutationObserver(function(records){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\trecords.forEach(everyRecords);\r\n\t\t\t});\r\n\r\n\t\t\tobserver.observe(document.body, { childList: true, subtree: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.body.addEventListener('DOMNodeRemoved', function(e){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\teveryRemovedNodes(e.target);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tvar removeModelBinding = function(modelName){\r\n\t\tvar ref = self.root[modelName];\r\n\t\tif(ref === undefined)\r\n\t\t\treturn;\r\n\r\n\t\tvar bindedKey = ref.sf$bindedKey;\r\n\t\tvar temp = null;\r\n\t\tfor(var key in bindedKey){\r\n\t\t\tdelete bindedKey[key];\r\n\r\n\t\t\tif(ref[key] === undefined || ref[key] === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(ref[key].constructor === String ||\r\n\t\t\t\tref[key].constructor === Number ||\r\n\t\t\t\tref[key].constructor === Boolean\r\n\t\t\t){/* Ok */}\r\n\r\n\t\t\telse if(ref[key].constructor === Array){\r\n\t\t\t\tif(ref[key].$virtual){\r\n\t\t\t\t\tref[key].$virtual.destroy();\r\n\t\t\t\t\tdelete ref[key].$virtual;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset property without copying the array\r\n\t\t\t\ttemp = ref[key].splice('obtain');\r\n\t\t\t\tdelete ref[key];\r\n\t\t\t\tref[key] = temp;\r\n\t\t\t}\r\n\t\t\telse continue;\r\n\r\n\t\t\tif(Object.getOwnPropertyDescriptor(ref, key) === undefined)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Reconfigure / Remove property descriptor\r\n\t\t\tvar temp = ref[key];\r\n\t\t\tdelete ref[key];\r\n\t\t\tref[key] = temp;\r\n\t\t}\r\n\t}\r\n\r\n\tvar dcBracket = /{{[\\s\\S]*?}}/;\r\n\tvar bindObject = function(element, modelRef, propertyName, which){\r\n\t\tif(!(element instanceof Node))\r\n\t\t\telement = element[0];\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = element;\r\n\r\n\t\t// First initialization\r\n\t\telement.setAttribute('sf-bind-key', propertyName);\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\r\n\t\t// Cache attribute content\r\n\t\tif(which === 'attr' || !which){\r\n\t\t\tvar attrs = {};\r\n\r\n\t\t\tfor (var i = 0; i < element.attributes.length; i++) {\r\n\t\t\t\tvar attr = element.attributes[i].name;\r\n\r\n\t\t\t\t// Check if it has a bracket\r\n\t\t\t\tif(dcBracket.test(element.getAttribute(attr)) === false)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tattrs[attr] = element.getAttribute(attr);\r\n\t\t\t\telement.removeAttribute(attr);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Cache html content\r\n\t\tif(which === 'html' || !which)\r\n\t\t\tvar htmlClone = element.cloneNode(true).innerHTML;\r\n\r\n\t\tvar onChanges = function(){\r\n\t\t\tif(which === 'attr' || !which){\r\n\t\t\t\tfor(var name in attrs){\r\n\t\t\t\t\tif(attrs[name].indexOf(propertyName) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tvar temp = dataParser(attrs[name], modelRef, false, modelName);\r\n\t\t\t\t\tif(name === 'value')\r\n\t\t\t\t\t\telement.value = temp;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\telement.setAttribute(name, temp);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(which === 'html' || !which){\r\n\t\t\t\tvar temp = uniqueDataParser(htmlClone, modelRef, false, modelName);\r\n\t\t\t\ttemp = dataParser(temp, modelRef, false, modelName);\r\n\t\t\t\telement.textContent = '';\r\n\t\t\t\telement.insertAdjacentHTML('afterBegin', temp);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif(modelRef[propertyName] === undefined)\r\n\t\t\tthrow \"Property '\"+propertyName+\"' was not found on '\"+modelName+\"' model\";\r\n\r\n\t\t// Enable multiple element binding\r\n\t\tif(modelRef.sf$bindedKey === undefined)\r\n\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\tif(modelRef.sf$bindedKey[propertyName] !== undefined){\r\n\t\t\tmodelRef.sf$bindedKey[propertyName].push(onChanges);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar objValue = modelRef[propertyName]; // Object value\r\n\t\tObject.defineProperty(modelRef, propertyName, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\t\t\tget:function(){\r\n\t\t\t\treturn objValue;\r\n\t\t\t},\r\n\t\t\tset:function(val){\r\n\t\t\t\tobjValue = val;\r\n\r\n\t\t\t\tvar ref = modelRef.sf$bindedKey[propertyName];\r\n\t\t\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\t\t\tref[i]();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn objValue;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tmodelRef.sf$bindedKey[propertyName] = [onChanges];\r\n\t}\r\n\r\n\tself.bindElement = function(element, which){\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar html = element.outerHTML;\r\n\r\n\t\t// Check if the child element was already bound to prevent vulnerability\r\n\t\tif(/sf-bind-key|sf-bind-list/.test(html)){\r\n\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(which === 'attr')\r\n\t\t\thtml = html.replace(element.innerHTML, '');\r\n\r\n\t\tvar brackets = /{{([\\s\\S]*?)}}/g;\r\n\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(model);\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(model[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\t\tvar s1, s2 = null;\r\n\t\twhile((s1 = brackets.exec(html)) !== null){\r\n\t\t\twhile ((s2 = scopeMask.exec(s1[1])) !== null) {\r\n\t\t\t\tbindObject(element, model, s2[1], which);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.extractPreprocess = function(targetNode, mask, name){\r\n\t\tvar copy = targetNode.outerHTML;\r\n\r\n\t\t// Mask the referenced item\r\n\t\tcopy = copy.split('#'+mask).join('_model_');\r\n\r\n\t\t// Extract data to be parsed\r\n\t\tcopy = uniqueDataParser(copy, null, mask, name, '#noEval');\r\n\t\tvar preParsed = copy[1];\r\n\t\tvar _content_ = copy[2];\r\n\t\tcopy = dataParser(copy[0], null, mask, name, '#noEval', preParsed);\r\n\r\n\t\tfunction findModelProperty(){\r\n\t\t\tvar extract = RegExp('\\\\b(?:_model_|'+mask+')\\\\.([a-zA-Z0-9.[\\'\\\\]]+)(?:$|[^\\'\\\\]])', 'g');\r\n\t\t\tvar found = {};\r\n\r\n\t\t\tfor (var i = 0; i < preParsed.length; i++) {\r\n\t\t\t\tvar current = preParsed[i];\r\n\r\n\t\t\t\t// Text or attribute\r\n\t\t\t\tif(current.type === 0){\r\n\t\t\t\t\tcurrent.data[0].split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(found[match] === undefined) found[match] = [i];\r\n\t\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Dynamic data\r\n\t\t\t\tif(current.type === 1){\r\n\t\t\t\t\tvar checkList = current.if.join(';');\r\n\r\n\t\t\t\t\tif(current.elseValue !== null)\r\n\t\t\t\t\t\tcheckList += ';' + current.elseValue;\r\n\r\n\t\t\t\t\tfor (var a = 0; a < current.elseIf.length; a++) {\r\n\t\t\t\t\t\tcheckList += current.elseIf[a].join(';');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(current.type === 2)\r\n\t\t\t\t\tvar checkList = current.data[0];\r\n\r\n\t\t\t\tcheckList = checkList.replace(/_result_ \\+= _content_\\.take\\(.*?, ([0-9]+)\\);/g, function(full, match){\r\n\t\t\t\t\treturn _content_[match];\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcheckList.split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found[match] === undefined) found[match] = [i];\r\n\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn found;\r\n\t\t}\r\n\r\n\t\t// Build element and start addressing\r\n\t\tcopy = $.parseElement(copy)[0];\r\n\t\tvar nodes = self.queuePreprocess(copy, true).reverse();\r\n\t\tvar addressed = [];\r\n\r\n\t\tfunction addressAttributes(currentNode){\r\n\t\t\tvar attrs = currentNode.attributes;\r\n\t\t\tvar keys = [];\r\n\t\t\tvar indexes = 0;\r\n\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\tvar found = attrs[a].value.split('{{%=');\r\n\t\t\t\tif(found.length !== 1){\r\n\t\t\t\t\tvar key = {\r\n\t\t\t\t\t\tname:attrs[a].name,\r\n\t\t\t\t\t\tvalue:attrs[a].value\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tindexes = [];\r\n\t\t\t\t\tfound = attrs[a].value.replace(/{{%=([0-9]+)/g, function(full, match){\r\n\t\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found === '' && indexes.length === 1)\r\n\t\t\t\t\t\tkey.direct = indexes[0];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tkey.parse_index = indexes;\r\n\r\n\t\t\t\t\tkeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn keys;\r\n\t\t}\r\n\r\n\t\tvar currentElement = addressAttributes(copy);\r\n\t\tif(currentElement.length !== 0)\r\n\t\t\taddressed.push({\r\n\t\t\t\tnodeType:1,\r\n\t\t\t\taddress:[0],\r\n\t\t\t\tattributes:currentElement\r\n\t\t\t});\r\n\r\n\t\tfor (var i = 0; i < nodes.length; i++) {\r\n\t\t\tvar temp = {\r\n\t\t\t\tnodeType:nodes[i].nodeType\r\n\t\t\t};\r\n\r\n\t\t\tif(temp.nodeType === 1){ // Element\r\n\t\t\t\ttemp.attributes = addressAttributes(nodes[i]);\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\telse if(temp.nodeType === 3){ // Text node\r\n\t\t\t\tvar innerHTML = nodes[i].textContent;\r\n\t\t\t\tvar indexes = [];\r\n\r\n\t\t\t\tinnerHTML.replace(/{{%%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Check for dynamic mode\r\n\t\t\t\tif(indexes.length !== 0){\r\n\t\t\t\t\tinnerHTML = innerHTML.split(/{{%%=[0-9]+/gm);\r\n\t\t\t\t\tfor (var a = 0; a < innerHTML.length; a++) {\r\n\t\t\t\t\t\tinnerHTML[a] = trimIndentation(innerHTML[a]).trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodes[i].textContent = innerHTML.shift();\r\n\r\n\t\t\t\t\tvar parent = nodes[i].parentNode;\r\n\t\t\t\t\tvar nextSibling = nodes[i].nextSibling;\r\n\r\n\t\t\t\t\t// Dynamic boundary start\r\n\t\t\t\t\tvar addressStart = null;\r\n\t\t\t\t\tif(indexes.length !== 0 && nodes[i].textContent.length !== 0)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i], true);\r\n\t\t\t\t\telse if(nodes[i].previousSibling !== null)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i].previousSibling, true);\r\n\r\n\t\t\t\t\t// Find boundary ends\r\n\t\t\t\t\tvar commentFlag = [];\r\n\t\t\t\t\tfor(var a = 0; a < indexes.length; a++){\r\n\t\t\t\t\t\tvar flag = document.createComment('');\r\n\t\t\t\t\t\tparent.insertBefore(flag, nextSibling);\r\n\t\t\t\t\t\tcommentFlag.push({\r\n\t\t\t\t\t\t\tnodeType:-1,\r\n\t\t\t\t\t\t\tparse_index:indexes[a],\r\n\t\t\t\t\t\t\tstartFlag:addressStart,\r\n\t\t\t\t\t\t\taddress:$.getSelector(flag, true)\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(innerHTML[a]){\r\n\t\t\t\t\t\t\tvar textNode = document.createTextNode(innerHTML[a]);\r\n\t\t\t\t\t\t\tparent.insertBefore(textNode, nextSibling);\r\n\r\n\t\t\t\t\t\t\t// Get new start flag\r\n\t\t\t\t\t\t\tif(a + 1 < indexes.length)\r\n\t\t\t\t\t\t\t\taddressStart = $.getSelector(textNode, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Merge boundary address\r\n\t\t\t\t\tArray.prototype.push.apply(addressed, commentFlag);\r\n\t\t\t\t\tif(nodes[i].textContent === ''){\r\n\t\t\t\t\t\tnodes[i].remove();\r\n\t\t\t\t\t\tfor (var a = 0; a < commentFlag.length; a++) {\r\n\t\t\t\t\t\t\tvar ref = commentFlag[a].address;\r\n\t\t\t\t\t\t\tref[ref.length - 1]--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(nodes[i].textContent.search(/{{%=[0-9]+/) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if it's only model value\r\n\t\t\t\tindexes = [];\r\n\t\t\t\tinnerHTML = nodes[i].textContent.replace(/{{%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(innerHTML === '' && indexes.length === 1)\r\n\t\t\t\t\ttemp.direct = indexes[0];\r\n\t\t\t\telse{\r\n\t\t\t\t\ttemp.value = nodes[i].textContent;\r\n\t\t\t\t\ttemp.parse_index = indexes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\taddressed.push(temp);\r\n\t\t}\r\n\r\n\t\tvar modelReference = findModelProperty();\r\n\t\tvar keys = Object.keys(modelReference);\r\n\t\tvar asArray = [];\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tasArray.push([keys[i], keys[i].split('.')]);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\thtml:copy,\r\n\t\t\tparse:preParsed,\r\n\t\t\taddresses:addressed,\r\n\t\t\tmodelReference:modelReference,\r\n\t\t\tmodelRef_array:asArray\r\n\t\t}\r\n\t}\r\n\r\n\tvar excludes = ['HTML','HEAD','STYLE','LINK','META','SCRIPT','OBJECT','IFRAME'];\r\n\tself.queuePreprocess = function(targetNode, extracting){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = childNodes.length - 1; i >= 0; i--) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\r\n\t\t\tif(extracting === undefined && excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\r\n\t\t\t\t// Skip element and it's childs that already bound to prevent vulnerability\r\n\t\t\t\tif(attrs['sf-bind-key'] || attrs['sf-repeat-this'] || attrs['sf-bind-list']) continue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tif(extracting === undefined)\r\n\t\t\t\t\t\t\tcurrentNode.setAttribute('sf-preprocess', 'attronly');\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tArray.prototype.push.apply(temp, self.queuePreprocess(currentNode, extracting));\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tcurrentNode.textContent = currentNode.textContent;\r\n\r\n\t\t\t\tif(currentNode.textContent.length === 0){\r\n\t\t\t\t\tcurrentNode.remove();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tif(extracting === undefined){\r\n\t\t\t\t\t\tcurrentNode.parentNode.setAttribute('sf-preprocess', '');\r\n\r\n\t\t\t\t\t\t// Reset Siblings\r\n\t\t\t\t\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\t\t\t\t\ttemp[a].removeAttribute('sf-preprocess');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttemp.push(currentNode.parentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn temp;\r\n\t}\r\n\r\n\tself.parsePreprocess = function(nodes, queued){\r\n\t\tfor (var a = 0; a < nodes.length; a++) {\r\n\t\t\t// Get reference for debugging\r\n\t\t\tvar current = processingElement = nodes[a];\r\n\r\n\t\t\tvar model = sf.controller.modelName(current);\r\n\t\t\tcurrent.removeAttribute('sf-preprocess');\r\n\r\n\t\t\tif(queued !== undefined)\r\n\t\t\t\tcurrent.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(!self.root[model])\r\n\t\t\t\treturn console.error(\"Can't parse element because model for '\"+model+\"' was not found\", current);\r\n\r\n\t\t\tvar modelRef = self.root[model];\r\n\r\n\t\t\t// Double check if the child element already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(current.innerHTML)){\r\n\t\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\t\tconsole.log(processingElement.cloneNode(true));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(current.hasAttribute('sf-bind'))\r\n\t\t\t\tself.bindElement(current, current.getAttribute('sf-bind'));\r\n\r\n\t\t\t// Avoid editing the outerHTML because it will remove the bind\r\n\t\t\tvar temp = uniqueDataParser(current.innerHTML, self.root[model], false, model);\r\n\t\t\tcurrent.innerHTML = dataParser(temp, self.root[model], false, model);\r\n\r\n\t\t\tvar attrs = nodes[a].attributes;\r\n\t\t\tfor (var i = 0; i < attrs.length; i++) {\r\n\t\t\t\tif(attrs[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\tvar attr = attrs[i];\r\n\t\t\t\t\tattr.value = dataParser(attr.value, self.root[model], false, model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initBindingInformation(modelRef){\r\n\t\tif(modelRef.sf$bindedKey !== undefined)\r\n\t\t\treturn;\r\n\r\n\t\t// Element binding data\r\n\t\tObject.defineProperty(modelRef, 'sf$bindedKey', {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable:false,\r\n\t\t\twritable:true,\r\n\t\t\tvalue:{}\r\n\t\t});\r\n\t}\r\n})();","// ==== ES5 Polyfill ====\r\nif(typeof Object.assign != 'function'){\r\n  Object.defineProperty(Object, \"assign\", {\r\n    value: function assign(target, varArgs) {\r\n      'use strict';\r\n      if (target == null)\r\n        throw new TypeError('Cannot convert undefined or null to object');\r\n      var to = Object(target);\r\n      for (var index = 1; index < arguments.length; index++) {\r\n        var nextSource = arguments[index];\r\n        if (nextSource != null) {\r\n          for (var nextKey in nextSource) {\r\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey))\r\n              to[nextKey] = nextSource[nextKey];\r\n          }\r\n        }\r\n      }\r\n      return to;\r\n    },\r\n    writable: true,\r\n    configurable: true\r\n  });\r\n}\r\n\r\nif(Element.prototype.remove === undefined || CharacterData.prototype.remove === undefined || DocumentType.prototype.remove === undefined){\r\n  (function (arr) {\r\n    arr.forEach(function (item) {\r\n      if (item.hasOwnProperty('remove')) {\r\n        return;\r\n      }\r\n      Object.defineProperty(item, 'remove', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n        value: function remove() {\r\n          if (this.parentNode !== null)\r\n            this.parentNode.removeChild(this);\r\n        }\r\n      });\r\n    });\r\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\r\n}\r\n\r\nif(!Element.prototype.matches){\r\n  Element.prototype.matches = (Element.prototype).matchesSelector ||\r\n    (Element.prototype).mozMatchesSelector || (Element.prototype).msMatchesSelector ||\r\n    (Element.prototype).oMatchesSelector || (Element.prototype).webkitMatchesSelector ||\r\n    function (s) {\r\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n      i = matches.length;\r\n      while (--i >= 0 && matches.item(i) !== this){}\r\n      return i > -1;\r\n    };\r\n}\r\n\r\nif(!NodeList.prototype.forEach){\r\n    NodeList.prototype.forEach = function (callback, thisArg) {\r\n        thisArg = thisArg || window;\r\n        for (var i = 0; i < this.length; i++) {\r\n            callback.call(thisArg, this[i], i, this);\r\n        }\r\n    };\r\n}\r\n\r\nif(!window.location.origin){\r\n  window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');\r\n}","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tself.pending = {};\r\n\tself.active = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tself.pending[name] = func;\r\n\t}\r\n\r\n\tself.modelScope = function(element, func){\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = element.getAttribute('sf-bind-list');\r\n\t\tif(!bindedList){\r\n\t\t\tvar parentEl = $.parent(element, '[sf-bind-list]');\r\n\t\t\tif(parentEl !== null)\r\n\t\t\t\tbindedList = parentEl.getAttribute('sf-bind-list');\r\n\t\t}\r\n\t\telse var parentEl = element;\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(sf.model.root[model], -1);\r\n\t\t\telse return sf.model.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = $.prevAll(parentEl, '[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(sf.model.root[model][bindedList], bindedListIndex);\r\n\t\telse return sf.model.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.modelName = function(element){\r\n\t\tvar name = undefined;\r\n\t\tif(element.hasAttribute('sf-controller'))\r\n\t\t\tname = element.getAttribute('sf-controller');\r\n\t\telse\r\n\t\t\tname = $.parent(element, '[sf-controller]').getAttribute('sf-controller');\r\n\r\n\t\t// Initialize it first\r\n\t\tif(name !== undefined && !self.active[name])\r\n\t\t\tself.run(name);\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = e.target;\r\n\t\tvar script = element.getAttribute('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = $.parent(element, '[sf-click]');\r\n\t\t\tscript = element.getAttribute('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = $.parent(element, '[sf-controller]').getAttribute('sf-controller');\r\n\r\n\t\tif(!sf.model.root[model])\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar _modelScope = sf.model.root[model];\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(_modelScope);\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+modelKeys+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tscript = script.replace(scopeMask, function(full, matched){\r\n\t\t\treturn '_modelScope.'+matched;\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script[0];\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(e) {\r\n\t\t\tmethod = false;\r\n\t\t}\r\n\r\n\t\tif(!method){\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot call `'+method_+'`]\\n', element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript.shift();\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0){\r\n\t\t\t// Replace `this` to `element`\r\n\t\t\tscript = eval(('['+script+']').replace(/,this|\\[this/g, function(found){\r\n\t\t\t\treturn found[0] + 'element';\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif(!script)\r\n\t\t\tscript = [];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element, script);\r\n\t\t\te.preventDefault();\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', element, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tvar root_ = function(scope){\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.model.root[scope] = {};\r\n\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.controller.run(scope);\r\n\r\n\t\treturn sf.model.root[scope];\r\n\t}\r\n\r\n\tself.run = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.run(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(self.pending[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\r\n\t\t\tself.pending[name](sf.model.root[name], root_);\r\n\t\t\tself.active[name] = true;\r\n\t\t\tdelete self.pending[name];\r\n\t\t}\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], root_);\r\n\t}\r\n\r\n\tself.init = function(parent){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(name);\r\n\t\t\t});\r\n\r\n\t\tvar temp = $('[sf-controller]', parent || document.body);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tself.run(temp[i].getAttribute('sf-controller'));\r\n\t\t}\r\n\t}\r\n\r\n\t// Create listener for sf-click\r\n\tdocument.addEventListener('DOMContentLoaded', function(){\r\n\t\t$.on(document.body, 'click', '[sf-click]', listenSFClick);\r\n\t}, {capture:true, once:true});\r\n}","/*\r\n  Special Thanks to Vladimir Kharlampidi\r\n  https://github.com/nolimits4web/\r\n*/\r\n\r\nvar globals = {};\r\nvar jsonpRequests = 0;\r\nfunction Request(requestOptions) {\r\n    var globalsNoCallbacks = Object.assign({}, globals);\r\n    ('beforeCreate beforeOpen beforeSend error complete success statusCode').split(' ').forEach(function (callbackName) {\r\n        delete globalsNoCallbacks[callbackName];\r\n    });\r\n    var defaults = Object.assign({\r\n        url: window.location.toString(),\r\n        method: 'GET',\r\n        data: false,\r\n        async: true,\r\n        cache: true,\r\n        user: '',\r\n        password: '',\r\n        headers: {},\r\n        xhrFields: {},\r\n        statusCode: {},\r\n        processData: true,\r\n        dataType: 'text',\r\n        contentType: 'application/x-www-form-urlencoded',\r\n        timeout: 0,\r\n    }, globalsNoCallbacks);\r\n    var options = Object.assign({}, defaults, requestOptions);\r\n    var proceedRequest;\r\n    // Function to run XHR callbacks and events\r\n    function fireCallback(callbackName) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        /*\r\n          Callbacks:\r\n          beforeCreate (options),\r\n          beforeOpen (xhr, options),\r\n          beforeSend (xhr, options),\r\n          error (xhr, status),\r\n          complete (xhr, stautus),\r\n          success (response, status, xhr),\r\n          statusCode ()\r\n        */\r\n        var globalCallbackValue;\r\n        var optionCallbackValue;\r\n        if (globals[callbackName]) {\r\n            globalCallbackValue = globals[callbackName].apply(globals, data);\r\n        }\r\n        if (options[callbackName]) {\r\n            optionCallbackValue = options[callbackName].apply(options, data);\r\n        }\r\n        if (typeof globalCallbackValue !== 'boolean')\r\n            globalCallbackValue = true;\r\n        if (typeof optionCallbackValue !== 'boolean')\r\n            optionCallbackValue = true;\r\n        return (globalCallbackValue && optionCallbackValue);\r\n    }\r\n    // Before create callback\r\n    proceedRequest = fireCallback('beforeCreate', options);\r\n    if (proceedRequest === false)\r\n        return undefined;\r\n    // For jQuery guys\r\n    if (options.type)\r\n        options.method = options.type;\r\n    // Parameters Prefix\r\n    var paramsPrefix = options.url.indexOf('?') >= 0 ? '&' : '?';\r\n    // UC method\r\n    var method = options.method.toUpperCase();\r\n    // Data to modify GET URL\r\n    if ((method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') && options.data) {\r\n        var stringData = void 0;\r\n        if (typeof options.data === 'string') {\r\n            // Should be key=value string\r\n            if (options.data.indexOf('?') >= 0)\r\n                stringData = options.data.split('?')[1];\r\n            else\r\n                stringData = options.data;\r\n        }\r\n        else {\r\n            // Should be key=value object\r\n            stringData = serializeQuery(options.data);\r\n        }\r\n        if (stringData.length) {\r\n            options.url += paramsPrefix + stringData;\r\n            if (paramsPrefix === '?')\r\n                paramsPrefix = '&';\r\n        }\r\n    }\r\n    // JSONP\r\n    if (options.dataType === 'json' && options.url.indexOf('callback=') >= 0) {\r\n        var callbackName_1 = \"jsonp_\" + (Date.now() + ((jsonpRequests += 1)));\r\n        var abortTimeout_1;\r\n        var callbackSplit = options.url.split('callback=');\r\n        var requestUrl = callbackSplit[0] + \"callback=\" + callbackName_1;\r\n        if (callbackSplit[1].indexOf('&') >= 0) {\r\n            var addVars = callbackSplit[1].split('&').filter(function (el) { return el.indexOf('=') > 0; }).join('&');\r\n            if (addVars.length > 0)\r\n                requestUrl += \"&\" + addVars;\r\n        }\r\n        // Create script\r\n        var script_1 = document.createElement('script');\r\n        script_1.type = 'text/javascript';\r\n        script_1.onerror = function onerror() {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('error', null, 'scripterror');\r\n            fireCallback('complete', null, 'scripterror');\r\n        };\r\n        script_1.src = requestUrl;\r\n        // Handler\r\n        window[callbackName_1] = function jsonpCallback(data) {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('success', data);\r\n            script_1.parentNode.removeChild(script_1);\r\n            script_1 = null;\r\n            delete window[callbackName_1];\r\n        };\r\n        document.querySelector('head').appendChild(script_1);\r\n        if (options.timeout > 0) {\r\n            abortTimeout_1 = setTimeout(function () {\r\n                script_1.parentNode.removeChild(script_1);\r\n                script_1 = null;\r\n                fireCallback('error', null, 'timeout');\r\n            }, options.timeout);\r\n        }\r\n        return undefined;\r\n    }\r\n    // Cache for GET/HEAD requests\r\n    if (method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') {\r\n        if (options.cache === false) {\r\n            options.url += paramsPrefix + \"_nocache\" + Date.now();\r\n        }\r\n    }\r\n    // Create XHR\r\n    var xhr = new XMLHttpRequest();\r\n    // Save Request URL\r\n    xhr.requestUrl = options.url;\r\n    xhr.requestParameters = options;\r\n    // Before open callback\r\n    proceedRequest = fireCallback('beforeOpen', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Open XHR\r\n    xhr.open(method, options.url, options.async, options.user, options.password);\r\n    // Create POST Data\r\n    var postData = null;\r\n    if ((method === 'POST' || method === 'PUT' || method === 'PATCH') && options.data) {\r\n        if (options.processData) {\r\n            var postDataInstances = [ArrayBuffer, Blob, Document, FormData];\r\n            // Post Data\r\n            if (postDataInstances.indexOf(options.data.constructor) >= 0) {\r\n                postData = options.data;\r\n            }\r\n            else {\r\n                // POST Headers\r\n                var boundary = \"---------------------------\" + Date.now().toString(16);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    xhr.setRequestHeader('Content-Type', \"multipart/form-data; boundary=\" + boundary);\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader('Content-Type', options.contentType);\r\n                }\r\n                postData = '';\r\n                var data = serializeQuery(options.data);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    data = data.split('&');\r\n                    var newData = [];\r\n                    for (var i = 0; i < data.length; i += 1) {\r\n                        newData.push(\"Content-Disposition: form-data; name=\\\"\" + data[i].split('=')[0] + \"\\\"\\r\\n\\r\\n\" + data[i].split('=')[1] + \"\\r\\n\");\r\n                    }\r\n                    postData = \"--\" + boundary + \"\\r\\n\" + newData.join(\"--\" + boundary + \"\\r\\n\") + \"--\" + boundary + \"--\\r\\n\";\r\n                }\r\n                else if (options.contentType === 'application/json') {\r\n                    postData = JSON.stringify(options.data);\r\n                }\r\n                else {\r\n                    postData = data;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            postData = options.data;\r\n            xhr.setRequestHeader('Content-Type', options.contentType);\r\n        }\r\n    }\r\n    // Additional headers\r\n    if (options.headers) {\r\n        Object.keys(options.headers).forEach(function (headerName) {\r\n            xhr.setRequestHeader(headerName, options.headers[headerName]);\r\n        });\r\n    }\r\n    // Check for crossDomain\r\n    if (typeof options.crossDomain === 'undefined') {\r\n        // eslint-disable-next-line\r\n        options.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(options.url) && RegExp.$2 !== window.location.host;\r\n    }\r\n    if (!options.crossDomain) {\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    }\r\n    if (options.xhrFields) {\r\n        Object.assign(xhr, options.xhrFields);\r\n    }\r\n    var xhrTimeout;\r\n    // Handle XHR\r\n    xhr.onload = function onload() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 0) {\r\n            var responseData = void 0;\r\n            if (options.dataType === 'json') {\r\n                var parseError = void 0;\r\n                try {\r\n                    responseData = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (err) {\r\n                    parseError = true;\r\n                }\r\n                if (!parseError) {\r\n                    fireCallback('success', responseData, xhr.status, xhr);\r\n                }\r\n                else {\r\n                    fireCallback('error', xhr, 'parseerror');\r\n                }\r\n            }\r\n            else {\r\n                responseData = xhr.responseType === 'text' || xhr.responseType === '' ? xhr.responseText : xhr.response;\r\n                fireCallback('success', responseData, xhr.status, xhr);\r\n            }\r\n        }\r\n        else {\r\n            fireCallback('error', xhr, xhr.status);\r\n        }\r\n        if (options.statusCode) {\r\n            if (globals.statusCode && globals.statusCode[xhr.status])\r\n                globals.statusCode[xhr.status](xhr);\r\n            if (options.statusCode[xhr.status])\r\n                options.statusCode[xhr.status](xhr);\r\n        }\r\n        fireCallback('complete', xhr, xhr.status);\r\n    };\r\n    xhr.onerror = function onerror() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        fireCallback('error', xhr, xhr.status);\r\n        fireCallback('complete', xhr, 'error');\r\n    };\r\n    // Timeout\r\n    if (options.timeout > 0) {\r\n        xhr.onabort = function onabort() {\r\n            if (xhrTimeout)\r\n                clearTimeout(xhrTimeout);\r\n        };\r\n        xhrTimeout = setTimeout(function () {\r\n            xhr.abort();\r\n            fireCallback('error', xhr, 'timeout');\r\n            fireCallback('complete', xhr, 'timeout');\r\n        }, options.timeout);\r\n    }\r\n    // Ajax start callback\r\n    proceedRequest = fireCallback('beforeSend', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Send XHR\r\n    xhr.send(postData);\r\n    // Return XHR object\r\n    return xhr;\r\n}\r\nfunction RequestShortcut(method) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    var _a = [], url = _a[0], data = _a[1], success = _a[2], error = _a[3], dataType = _a[4];\r\n    if (typeof args[1] === 'function') {\r\n        url = args[0], success = args[1], error = args[2], dataType = args[3];\r\n    }\r\n    else {\r\n        url = args[0], data = args[1], success = args[2], error = args[3], dataType = args[4];\r\n    }\r\n    [success, error].forEach(function (callback) {\r\n        if (typeof callback === 'string') {\r\n            dataType = callback;\r\n            if (callback === success)\r\n                success = undefined;\r\n            else\r\n                error = undefined;\r\n        }\r\n    });\r\n    dataType = dataType || (method === 'json' || method === 'postJSON' ? 'json' : undefined);\r\n    var requestOptions = {\r\n        url: url,\r\n        method: method === 'post' || method === 'postJSON' ? 'POST' : 'GET',\r\n        data: data,\r\n        success: success,\r\n        error: error,\r\n        dataType: dataType,\r\n    };\r\n    if (method === 'postJSON') {\r\n        Object.assign(requestOptions, {\r\n            contentType: 'application/json',\r\n            processData: false,\r\n            crossDomain: true,\r\n            data: typeof data === 'string' ? data : JSON.stringify(data),\r\n        });\r\n    }\r\n    return Request(requestOptions);\r\n}\r\nObject.assign(Request, {\r\n    get: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['get'].concat(args));\r\n    },\r\n    post: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['post'].concat(args));\r\n    },\r\n    json: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    getJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    postJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['postJSON'].concat(args));\r\n    },\r\n});\r\nRequest.setup = function setup(options) {\r\n    if (options.type && !options.method) {\r\n        Object.assign(options, { method: options.type });\r\n    }\r\n    Object.assign(globals, options);\r\n};\r\nfunction serializeQuery(params, prefix) {\r\n    var key = Object.keys(params);\r\n    for (var i = 0; i < key.length; i++) {\r\n      var value = params[key[i]];\r\n      if (params.constructor === Array)\r\n          key[i] += prefix + \"[]\";\r\n      else if (params.constructor === Object)\r\n          key[i] = (prefix ? prefix + \"[\" + key[i] + \"]\" : key[i]);\r\n\r\n      if (typeof value === 'object')\r\n          key[i] = serializeQuery(value, key[i]);\r\n      else\r\n          key[i] = key[i] + \"=\" + encodeURIComponent(value);\r\n    }\r\n    return key.join('&');\r\n}\r\n$.ajax = sf.ajax = Request;","return sf;\r\n\r\n// ===== Module End =====\r\n})));","sf.router = new function(){\r\n\tvar self = this;\r\n\tself.loading = false;\r\n\tself.enabled = false;\r\n\tself.pauseRenderOnTransition = false;\r\n\tself.currentPage = [];\r\n\tvar initialized = false;\r\n\tvar lazyRouting = false;\r\n\tvar currentRouterURL = '';\r\n\r\n\t// Should be called if not using lazy page load\r\n\tself.init = function(targetNode){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init();\r\n\t\t\t});\r\n\r\n\t\t// Run 'before' event for new page view\r\n\t\tvar temp = $('[sf-controller], [sf-page]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tif(temp[i].getAttribute('sf-controller'))\r\n\t\t\t\tsf.controller.run(temp[i].getAttribute('sf-controller'));\r\n\t\t\t\r\n\t\t\tif(temp[i].getAttribute('sf-page')){\r\n\t\t\t\tvar name = temp[i].getAttribute('sf-page');\r\n\t\t\t\tbeforeEvent(name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinitialized = true;\r\n\t\tcurrentRouterURL = window.location.pathname;\r\n\t}\r\n\r\n\tfunction popstateListener(event) {\r\n\t\t// Don't continue if the last routing was error\r\n\t\tif(routingError){\r\n\t\t\troutingError = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\troutingBack = true;\r\n\t\tself.goto(window.location.pathname);\r\n\t}\r\n\r\n\tself.enable = function(status){\r\n\t\tif(status === undefined) status = true;\r\n\t\tif(self.enabled === status) return;\r\n\t\tself.enabled = status;\r\n\r\n\t\tif(status === true){\r\n\t\t\t// Create listener for link click\r\n\t\t\t$.on(document.body, 'click', 'a[href]', self.load);\r\n\r\n\t\t\t// Create listener when navigate backward\r\n\t\t\twindow.addEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$.off(document.body, 'click', 'a[href]', self.load);\r\n\t\t\twindow.removeEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t}\r\n\r\n\tvar before = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.before = function(name, func, index){\r\n\t\tif(!before[name])\r\n\t\t\tbefore[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(before[name].indexOf(func) === -1)\r\n\t\t\t\tbefore[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tbefore[name][index] = func;\r\n\t}\r\n\r\n\tvar after = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.after = function(name, func, index){\r\n\t\tif(!after[name])\r\n\t\t\tafter[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(after[name].indexOf(func) === -1)\r\n\t\t\t\tafter[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tafter[name][index] = func;\r\n\t}\r\n\r\n\tvar root_ = function(scope){\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.model.root[scope] = {};\r\n\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.controller.run(scope);\r\n\t\t\r\n\t\treturn sf.model.root[scope];\r\n\t}\r\n\r\n\t// Running 'before' new page going to be displayed\r\n\tvar beforeEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.push(name);\r\n\r\n\t\tif(before[name]){\r\n\t\t\tfor (var i = 0; i < before[name].length; i++) {\r\n\t\t\t\tbefore[name][i](root_);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Running 'after' old page going to be removed\r\n\tvar afterEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.splice(self.currentPage.indexOf(name), 1);\r\n\r\n\t\tif(after[name]){\r\n\t\t\tfor (var i = 0; i < after[name].length; i++) {\r\n\t\t\t\tafter[name][i](root_);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar onEvent = {\r\n\t\t'loading':[],\r\n\t\t'loaded':[],\r\n\t\t'special':[],\r\n\t\t'error':[]\r\n\t};\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\tself.lazyViewPoint = {};\r\n\t/*\r\n\t\t{\r\n\t\t\toldURlPattern:{\r\n\t\t\t\tnewURLPattern:'.viewPoint'\r\n\t\t\t}\r\n\t\t}\r\n\t*/\r\n\r\n\tself.load = function(ev){\r\n\t\tif(self.enabled !== true) return;\r\n\r\n\t\tvar elem = ev.target;\r\n\t\tif(!elem.href) return;\r\n\r\n\t\tif(!history.pushState || elem.hasAttribute('sf-router-ignore'))\r\n\t\t\treturn;\r\n\r\n\t\t// Make sure it's from current origin\r\n\t\tvar path = elem.href.replace(window.location.origin, '');\r\n\t\tif(path.indexOf('//') !== -1)\r\n\t\t\treturn;\r\n\r\n\t\tev.preventDefault()\r\n\t\treturn !self.goto(path);\r\n\t}\r\n\r\n\tvar RouterLoading = false;\r\n\tvar routingBack = false;\r\n\tvar routingError = false;\r\n\tself.goto = function(path, data, method){\r\n\t\tif(!method) method = 'GET';\r\n        else method = method.toUpperCase();\r\n\r\n\t\tif(!data) data = {};\r\n\r\n\t\tfor (var i = 0; i < onEvent['loading'].length; i++) {\r\n\t\t\tif(onEvent['loading'][i](path)) return;\r\n\t\t}\r\n\t\tvar oldPath = window.location.pathname;\r\n\t\tinitialized = false;\r\n\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\t\tRouterLoading = $.ajax({\r\n\t\t\turl:window.location.origin + path,\r\n\t\t\tmethod:method,\r\n            data:Object.assign(data, {\r\n                _scarlets:'.dynamic.'\r\n            }),\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\tif(initialized) return;\r\n\t\t\t\tlazyRouting = true;\r\n\r\n\t\t\t\t// Run 'loaded' event\r\n\t\t\t\tRouterLoading = false;\r\n\r\n\t\t\t\t// Find special data\r\n\t\t\t\tvar regex = RegExp('<!-- SF-Special:(.*?)-->'+sf.regex.avoidQuotes, 'gm');\r\n\t\t\t\tvar special = regex.exec(data);\r\n\t\t\t\tif(special && special.length !== 1){\r\n\t\t\t\t\tspecial = special[1].split('--|&>').join('-->');\r\n\t\t\t\t\tspecial = JSON.parse(special);\r\n\r\n\t\t\t\t\tif(!isEmptyObject(special)){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['special'].length; i++) {\r\n\t\t\t\t\t\t\tif(onEvent['special'][i](special)) return;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DOMReference = false;\r\n\t\t\t\tvar foundAction = function(ref){\r\n\t\t\t\t\tDOMReference = $.findOne(ref);\r\n\r\n\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\tvar last = $.findOne('[sf-page]', DOMReference);\r\n\t\t\t\t\tafterEvent(last ? last.getAttribute('sf-page') : '/');\r\n\r\n\t\t\t\t\t// Redefine title if exist\r\n\t\t\t\t\tif(special && special.title)\r\n\t\t\t\t\t\t$('head > title').innerHTML = special.title;\r\n\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tfor(var oldURL in self.lazyViewPoint){\r\n\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\tfor(var newURL in self.lazyViewPoint[oldURL]){\r\n\t\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\t\tfoundAction(self.lazyViewPoint[oldURL][newURL]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(found) break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When the view point was not found\r\n\t\t\t\tif(!found){\r\n\t\t\t\t\t// Use fallback if exist\r\n\t\t\t\t\tif(sf.router.lazyViewPoint[\"@default\"])\r\n\t\t\t\t\t\tfoundAction(sf.router.lazyViewPoint[\"@default\"]);\r\n\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\t\t\tonEvent['error'][i]('sf.router.lazyViewPoint[\"'+oldURL+'\"][\"'+newURL+'\"] was not found');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Run 'before' event for new page view\r\n\t\t\t\tif(!DOMReference) DOMReference = document.body;\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', 'none');\r\n\r\n\t\t\t\t// Let page script running first, then update the data binding\r\n\t\t\t\tDOMReference.innerHTML = data;\r\n\r\n\t\t\t\t// Parse the DOM data binding\r\n\t\t\t\tsf.model.init(DOMReference);\r\n\r\n\t\t\t\t// Init template to model binding\r\n\t\t\t\tvar temp = $('[sf-page]', DOMReference);\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tbeforeEvent(temp[i].getAttribute('sf-page'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', '');\r\n\r\n\t\t\t\trouterLoaded(currentRouterURL, path, DOMReference);\r\n\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tlazyRouting = false;\r\n\r\n\t\t\t\tcurrentRouterURL = path;\r\n\t\t\t\troutingError = false;\r\n\t\t\t},\r\n\t\t\terror:function(xhr, data){\r\n\t\t\t\troutingError = true;\r\n\t\t\t\tif(xhr.aborted) return;\r\n\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\tonEvent['error'][i](xhr.status, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Back on error\r\n\t\t\t\twindow.history.back();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!routingBack)\r\n\t\t\twindow.history.pushState(null, \"\", path);\r\n\r\n\t\troutingBack = false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Trigger loaded event\r\n\tfunction routerLoaded(currentRouterURL, path, data){\r\n\t\tfor (var i = 0; i < onEvent['loaded'].length; i++) {\r\n\t\t\tonEvent['loaded'][i](currentRouterURL, path, data);\r\n\t\t}\r\n\t}\r\n};","sf.internal.virtual_scroll = new function(){\r\n\tvar self = this;\r\n\tvar styleInitialized = false;\r\n\tvar scrollingByScript = false;\r\n\r\n\t// before and after\r\n\tself.prepareCount = 4; // 4, 8, 12, 16, ...\r\n\r\n\tself.handle = function(list, targetNode, parentNode){\r\n\t\tif(!styleInitialized){\r\n\t\t\tinitStyles();\r\n\t\t\tstyleInitialized = true;\r\n\t\t}\r\n\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvirtual.reset = function(){\r\n\t\t\tvirtual.DOMCursor = 0; // cursor of first element in DOM tree as a cursor\r\n\r\n\t\t\tvirtual.bounding = {\r\n\t\t\t\tceiling:-1,\r\n\t\t\t\tfloor:0\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.vCursor = { // Virtual Cursor\r\n\t\t\t\tceiling:null, // for forward direction\r\n\t\t\t\tfloor:virtual.dom.firstElementChild // for backward direction\r\n\t\t\t}\r\n\r\n\t\t\trefreshScrollBounding(0, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\t\tvirtual.reset();\r\n\r\n\t\tvirtual.elements = function(){\r\n\t\t\treturn obtainElements(list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.dCursor = { // DOM Cursor\r\n\t\t\tceiling:parentNode.querySelector('.virtual-spacer.ceiling'),\r\n\t\t\tfloor:parentNode.querySelector('.virtual-spacer.floor')\r\n\t\t};\r\n\r\n\t\tvirtual.targetNode = parentNode;\r\n\r\n\t\tvirtual.scrollHeight = \r\n\t\t\tvirtual.dCursor.floor.offsetTop - \r\n\t\t\tvirtual.dCursor.ceiling.offsetTop;\r\n\r\n\t\tvar scroller = null;\r\n\t\tvirtual.destroy = function(){\r\n\t\t\t$.off(scroller, 'scroll');\r\n\t\t\t$.off(parentNode, 'mousedown mouseup');\r\n\t\t\tvirtual.dom.innerHTML = '';\r\n\t\t\toffElementResize(parentNode);\r\n\r\n\t\t\tdelete list.$virtual;\r\n\t\t}\r\n\r\n\t\tvirtual.resetViewport = function(){\r\n\t\t\tvirtual.visibleLength = Math.floor(scroller.clientHeight / virtual.scrollHeight);\r\n\t\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\t\t}\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tscroller = parentNode;\r\n\r\n\t\t\tvar length = parentNode.getAttribute('scroll-parent-index') || 0;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tscroller = scroller.parentElement;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.resetViewport();\r\n\r\n\t\t\tif(parentNode.classList.contains('sf-list-dynamic'))\r\n\t\t\t\tdynamicHeight(list, targetNode, parentNode, scroller);\r\n\t\t\telse\r\n\t\t\t\tstaticHeight(list, targetNode, parentNode, scroller);\r\n\t\t}, 500);\r\n\t}\r\n\r\n\t// Recommended for a list that have different element height\r\n\tfunction dynamicHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller);\r\n\t\t\tfillViewport();\r\n\t\t}\r\n\r\n\t\t// Insert some element until reach visible height\r\n\t\tfillViewport();\r\n\r\n\t\tvirtual.visibleLength = parentNode.childElementCount - 2;\r\n\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\tvar temp = vCursor.floor;\r\n\t\t\tif(temp === null) break;\r\n\r\n\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t}\r\n\t\tvirtual.DOMCursor = 0;\r\n\r\n\t\tvar ceilingHeight = 0;\r\n\t\tvar floorHeight = 0;\r\n\t\tfunction previousCeiling(){\r\n\t\t\tvar temp = null;\r\n\t\t\tvar resetCeiling = false;\r\n\r\n\t\t\t// Add some element on the ceiling\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\ttemp = virtual.dom.lastElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.ceiling = temp.previousElementSibling;\r\n\t\t\t\tvirtual.DOMCursor--;\r\n\r\n\t\t\t\tceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tif(ceilingHeight > 0)\r\n\t\t\t\t\tceilingHeight -= getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(virtual.DOMCursor < self.prepareCount && !resetCeiling){\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\tresetCeiling = true;\r\n\t\t\t\t\ttemp = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(ceilingHeight < 0 || temp === null)\r\n\t\t\t\tceilingHeight = 0;\r\n\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\t// Remove some element on the floor\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = floor.previousElementSibling;\r\n\t\t\t\tfloorHeight += getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tvCursor.floor = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.floor === null)\r\n\t\t\t\tvCursor.ceiling = virtual.dom.lastElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tfunction fillViewport(){\r\n\t\t\t// Insert some element depend on prepared length\r\n\t\t\tvar length = virtual.preparedLength - (parentNode.childElementCount - 2);\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\ttemp = virtual.dom.firstElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction nextFloor(){\r\n\t\t\tvar temp = null;\r\n\t\t\tfillViewport();\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t// Add extra element based on prepare count\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\ttemp = vCursor.floor;\r\n\t\t\t\tif(temp === null) break;\r\n\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tif(floorHeight > 0)\r\n\t\t\t\t\tfloorHeight -= getAbsoluteHeight(temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(floorHeight < 0 || temp === null)\r\n\t\t\t\tfloorHeight = 0;\r\n\r\n\t\t\t// Remove some element on the ceiling\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\t\t\t\tceilingHeight += getAbsoluteHeight(temp);\r\n\t\t\t\tvirtual.DOMCursor++;\r\n\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\telse vCursor.ceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tvCursor.ceiling = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\t\trefreshScrollBounding(0, bounding, list, parentNode);\r\n\r\n\t\tvar updating = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript) return;\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tif(scroller.scrollTop < bounding.ceiling){\r\n\t\t\t\t// console.log('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tpreviousCeiling();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\telse if(scroller.scrollTop > bounding.floor){\r\n\t\t\t\t// console.log('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tnextFloor();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\t\tonElementResize(parentNode, function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t});\r\n\t}\r\n\r\n\t// Recommended for a list that have similar element height\r\n\tfunction staticHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\r\n\t\t// Insert visible element to dom tree\r\n\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\tif(virtual.dom.firstElementChild === null)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', virtual.dom.firstElementChild);\r\n\t\t}\r\n\r\n\t\tfunction refreshVirtualSpacer(cursor){\r\n\t\t\tif(cursor >= self.prepareCount){\r\n\t\t\t\tceiling.style.height = (cursor - self.prepareCount) * virtual.scrollHeight + 'px';\r\n\t\t\t\tfloor.style.height = (list.length - virtual.preparedLength - cursor) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tceiling.style.height = cursor * virtual.scrollHeight + 'px'; //'0px';\r\n\t\t\t\tvar count = (list.length - virtual.preparedLength);\r\n\t\t\t\tfloor.style.height = (count || 0) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\r\n\t\trefreshVirtualSpacer(0);\r\n\t\trefreshScrollBounding(self.prepareCount, bounding, list, parentNode);\r\n\t\tbounding.ceiling = -1;\r\n\r\n\t\tvirtual.offsetTo = function(index){\r\n\t\t\treturn index * virtual.scrollHeight + ceiling.offsetTop;\r\n\t\t}\r\n\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tvar fromCeiling = true;\r\n\t\tvar scrollFocused = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript || scroller.scrollTop >= bounding.ceiling && scroller.scrollTop <= bounding.floor){\r\n\t\t\t\t// Fix chrome scroll anchoring bugs when scrolling at corner\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tif(scroller.scrollTop === 0 || scroller.scrollTop === scroller.scrollHeight - scroller.clientHeight){\r\n\t\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar cursor = Math.floor(scroller.scrollTop / virtual.scrollHeight);\r\n\t\t\tif(cursor + virtual.preparedLength > list.length)\r\n\t\t\t\tcursor = list.length - virtual.preparedLength;\r\n\r\n\t\t\tif(fromCeiling){\r\n\t\t\t\tif(cursor < self.prepareCount*2)\r\n\t\t\t\t\tcursor -= self.prepareCount;\r\n\r\n\t\t\t\t// Fix chrome scroll anchoring bugs\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t}\r\n\t\t\t\tfromCeiling = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cursor < self.prepareCount){\r\n\t\t\t\tcursor = 0;\r\n\t\t\t\tfromCeiling = true;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tvar changes = cursor - virtual.DOMCursor;\r\n\t\t\tif(cursor + changes >= list.length)\r\n\t\t\t\tchanges = cursor + changes - list.length;\r\n\r\n\t\t\tif(changes === 0){ // This should be fixed to improve performance and future bugs\r\n\t\t\t\t//console.warn(\"No changes (The scroll bounding is not correct)\");\r\n\t\t\t\tupdating = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.DOMCursor = cursor;\r\n\r\n\t\t\t//console.log(cursor, changes);\r\n\r\n\t\t\t//console.log(cursor, changes, bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\t\t\tmoveElementCursor(changes, list);\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\t\t\trefreshScrollBounding(cursor, bounding, list, parentNode);\r\n\t\t\t//console.log('a', bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\r\n\t\t// For preventing scroll jump if scrolling over than viewport\r\n\t\tif(scroller === parentNode && navigator.userAgent.indexOf('Chrom') !== -1){\r\n\t\t\t$.on(parentNode, 'mousedown', function(){\r\n\t\t\t\tscrollFocused = true;\r\n\t\t\t});\r\n\t\t\t$.on(parentNode, 'mouseup', function(){\r\n\t\t\t\tscrollFocused = false;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction refreshScrollBounding(cursor, bounding, list, parentNode){\r\n\t\tvar temp = Math.floor(self.prepareCount / 2); // half of element preparation\r\n\t\tif(cursor < self.prepareCount){\r\n\t\t\tbounding.ceiling = -1;\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount * 2 + 1];\r\n\r\n\t\t\tif(bounding.floor !== undefined)\r\n\t\t\t\tbounding.floor = bounding.floor.offsetTop;\r\n\t\t\telse bounding.floor = parentNode.lastElementChild.offsetTop + 1000;\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if(parentNode.children[temp + 1] !== undefined)\r\n\t\t\t\tbounding.ceiling = parentNode.children[temp + 1].offsetTop; // -2 element\r\n\r\n\t\tif(list.$virtual.preparedLength !== undefined && cursor >= list.length - list.$virtual.preparedLength)\r\n\t\t\tbounding.floor = list.$virtual.dCursor.floor.offsetTop + list.$virtual.scrollHeight*2;\r\n\t\telse{\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount + 3].offsetTop; // +2 element\r\n\r\n\t\t\tif(parentNode.hasAttribute('scroll-reduce-floor')){\r\n\t\t\t\tbounding.floor -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t\tbounding.ceiling -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction moveElementCursor(changes, list){\r\n\t\tvar vDOM = list.$virtual.dom;\r\n\t\tvar vCursor = list.$virtual.vCursor;\r\n\t\tvar dCursor = list.$virtual.dCursor;\r\n\r\n\t\tif(changes > 0){ // forward\r\n\t\t\tvar ref = 0;\r\n\r\n\t\t\t// Select from virtual ceiling cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tref = vDOM.firstElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.ceiling.nextElementSibling;\r\n\t\t\t\tdCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the ceiling to vDom\r\n\t\t\tfor (var i = changes; i > 0; i--) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.ceiling === null){\r\n\t\t\t\t\tvCursor.ceiling = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('afterBegin', vCursor.ceiling);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t\t\tvCursor.ceiling = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\t\t}\r\n\t\telse if(changes < 0){ // backward\r\n\t\t\tvar ref = 0;\r\n\t\t\tchanges = -changes;\r\n\r\n\t\t\t// Select from virtual floor cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tref = vDOM.lastElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.floor.previousElementSibling;\r\n\t\t\t\tdCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the floor to vDom\r\n\t\t\tfor (var i = 0; i < changes; i++) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvCursor.floor = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('beforeEnd', vCursor.floor);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t\t\tvCursor.floor = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scrollTo(index, list, prepareCount, parentNode, scroller, refreshVirtualSpacer){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar reduce = 0;\r\n\r\n\t\tif(index >= list.length - virtual.preparedLength){\r\n\t\t\treduce -= prepareCount;\r\n\t\t\tindex = list.length - virtual.preparedLength;\r\n\t\t}\r\n\r\n\t\tif(index - virtual.DOMCursor === 0 || index >= list.length) return;\r\n\r\n\t\tscrollingByScript = true;\r\n\r\n\t\t// Already on DOM tree\r\n\t\tif((virtual.DOMCursor === 0 && index < prepareCount + prepareCount/2) ||\r\n\t\t\t(virtual.DOMCursor + prepareCount/2 > index\r\n\t\t\t&& virtual.DOMCursor + prepareCount < index))\r\n\t\t\tscroller.scrollTop = parentNode.children[index - virtual.DOMCursor + 1].offsetTop;\r\n\r\n\t\t// Move cursor\r\n\t\telse {\r\n\t\t\tvar temp = null;\r\n\t\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\t\tvar floor = virtual.dCursor.floor;\r\n\t\t\tvar vCursor = virtual.vCursor;\r\n\r\n\t\t\t// DOM tree to virtual DOM\r\n\t\t\tvar length = parentNode.childElementCount - 2;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\r\n\t\t\t\t\tif(i === length-1)\r\n\t\t\t\t\t\tvCursor.floor = temp;\r\n\t\t\t\t}\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(index >= prepareCount){\r\n\t\t\t\tif(index < list.length - virtual.preparedLength)\r\n\t\t\t\t\tindex -= prepareCount;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treduce = prepareCount - index;\r\n\t\t\t\tvirtual.DOMCursor = index = 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\r\n\t\t\t// Virtual DOM to DOM tree\r\n\t\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\t\ttemp = virtual.dom.children[index];\r\n\t\t\t\tif(temp === undefined) break;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t\tvirtual.DOMCursor = index;\r\n\r\n\t\t\tvCursor.floor = virtual.dom.children[index] || null;\r\n\t\t\tvCursor.ceiling = vCursor.floor ? vCursor.floor.previousElementSibling : null;\r\n\r\n\t\t\tif(refreshVirtualSpacer)\r\n\t\t\t\trefreshVirtualSpacer(index);\r\n\r\n\t\t\trefreshScrollBounding(index, virtual.bounding, list, parentNode);\r\n\r\n\t\t\ttemp = parentNode.children[prepareCount - reduce + 1];\r\n\t\r\n\t\t\tif(temp !== undefined)\r\n\t\t\t\tscroller.scrollTop = temp.offsetTop - scroller.offsetTop;\r\n\t\t}\r\n\r\n\t\tscrollingByScript = false;\r\n\t}\r\n\r\n\tfunction removeUserScrollFocus(parentNode){\r\n\t\tparentNode.style.overflow = 'hidden';\r\n\t\tsetTimeout(function(){\r\n\t\t\tparentNode.style.overflow = '';\r\n\t\t}, 50);\r\n\t}\r\n\r\n\tfunction getAbsoluteHeight(el){\r\n\t  var styles = window.getComputedStyle(el);\r\n\t  var margin = parseInt(styles['marginTop']) + parseInt(styles['marginBottom']);\r\n\t  return el.offsetHeight + margin || 0;\r\n\t}\r\n\r\n\tfunction obtainElements(list, parentNode){\r\n\t\tvar exist = [];\r\n\t\tvar temp = undefined;\r\n\r\n\t\tvar length = list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = parentNode.childElementCount - 2;\r\n\t\tfor (var i = 1; i <= length; i++) {\r\n\t\t\ttemp = parentNode.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = list.length - length - list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[list.$virtual.DOMCursor + i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\treturn exist;\r\n\t}\r\n\r\n\tfunction refresh(force, list, prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer){\r\n\t\tvar cursor = list.$virtual.DOMCursor;\r\n\t\tvar additionalScroll = 0;\r\n\r\n\t\t// Find nearest cursor for current view position\r\n\t\tif(force){\r\n\t\t\tvar i = -1;\r\n\t\t\tvar length = list.$virtual.preparedLength;\r\n\r\n\t\t\tdo{\r\n\t\t\t\ti++;\r\n\t\t\t} while(i < length && parentNode.children[i].offsetTop < scroller.scrollTop);\r\n\r\n\t\t\tcursor = cursor + i;\r\n\t\t\tif(cursor > 0) cursor -= 1;\r\n\r\n\t\t\tadditionalScroll = scroller.scrollTop - parentNode.children[i].offsetTop;\r\n\t\t}\r\n\r\n\t\t// Force move cursor if element in the DOM tree was overloaded\r\n\t\tif(force || parentNode.childElementCount - 2 > list.$virtual.preparedLength){\r\n\t\t\tlist.$virtual.DOMCursor = list.length;\r\n\t\t\tvar moveTo = cursor;\r\n\t\t\tif(!force)\r\n\t\t\t\tmoveTo = cursor <= prepareCount ? cursor : (cursor + prepareCount);\r\n\r\n\t\t\tscrollTo(moveTo,\r\n\t\t\t\tlist,\r\n\t\t\t\tprepareCount,\r\n\t\t\t\tparentNode,\r\n\t\t\t\tscroller,\r\n\t\t\t\trefreshVirtualSpacer\r\n\t\t\t);\r\n\r\n\t\t\tscroller.scrollTop += additionalScroll;\r\n\t\t}\r\n\r\n\t\tif(refreshVirtualSpacer)\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\r\n\t\tif(checkCursorPosition)\r\n\t\t\tcheckCursorPosition();\r\n\r\n\t\trefreshScrollBounding(cursor, list.$virtual.bounding, list, parentNode);\r\n\t}\r\n\r\n\tvar _onElementResize = [];\r\n\tvar _onElementResize_timer = -1;\r\n\tfunction onElementResize(parentNode, callback){\r\n\t\tif(_onElementResize_timer === -1){\r\n\t\t\t_onElementResize_timer = setInterval(function(){\r\n\t\t\t\tvar temp = null;\r\n\t\t\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\t\t\ttemp = _onElementResize[i];\r\n\r\n\t\t\t\t\t// Check resize\r\n\t\t\t\t\tif(temp.element.scrollHeight === temp.height\r\n\t\t\t\t\t\t|| temp.element.scrollWidth === temp.width)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t// Check if it's removed from DOM\r\n\t\t\t\t\tif(temp.element.parentElement === null){\r\n\t\t\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.callback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(_onElementResize.length === 0){\r\n\t\t\t\t\tclearInterval(_onElementResize_timer);\r\n\t\t\t\t\t_onElementResize_timer = -1;\r\n\t\t\t\t}\r\n\t\t\t}, 200);\r\n\t\t}\r\n\r\n\t\t_onElementResize.push({\r\n\t\t\telement:parentNode,\r\n\t\t\tcallback:callback,\r\n\t\t\theight:parentNode.scrollHeight,\r\n\t\t\twidth:parentNode.scrollWidth\r\n\t\t});\r\n\t}\r\n\r\n\tfunction offElementResize(parentNode){\r\n\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\tif(_onElementResize[i].element === parentNode)\r\n\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Interval will be cleared when the array is empty\r\n\t}\r\n\r\n\tfunction initStyles(){\r\n\t\tvar style = document.getElementById('sf-styles');\r\n\r\n\t\tif(!style){\r\n\t\t\tstyle = document.createElement('style');\r\n\t\t\tstyle.id = 'sf-styles';\r\n        \tdocument.head.appendChild(style);\r\n\t\t}\r\n\r\n\t\tstyle.sheet.insertRule(\r\n\t\t'.sf-virtual-list .virtual-spacer{'+\r\n            'visibility: hidden;'+\r\n            'position: relative;'+\r\n            'height: 1px;'+\r\n            'transform-origin: 0 0;'+\r\n            'width: 1px;'+\r\n            'margin: 0;'+\r\n            'padding: 0;'+\r\n            'background: none;'+\r\n            'border: none;'+\r\n            'box-shadow: none;'+\r\n         '}', style.sheet.cssRules.length);\r\n\t}\r\n};"]}