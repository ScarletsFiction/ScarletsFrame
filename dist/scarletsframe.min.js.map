{"version":3,"sources":["sf-a_init.js","sf-dom.js","sf-loader.js","sf-model.js","sf-a_polyfill.js","sf-controller.js","sf-e-ajax.js","sf-z_end.js","sf-router.js","sf-virtual_scroll.js"],"names":["global","factory","exports","module","sf","window","this","undefined","document","arguments","constructor","Function","loader","onFinish","apply","isEmptyObject","obj","key","compareObject","obj1","obj2","i","hiddenProperty","property","value","Object","defineProperty","enumerable","configurable","deepProperty","path","length","internal","regex","getQuotes","avoidQuotes","strictVar","dom","selector","context","parseElement","String","querySelectorAll","$","self","findOne","querySelector","parent","element","closest","matches","parentElement","prevAll","isNext","result","findNodes","nextSibling","previousSibling","push","nextAll","on","event","callback","once","tempCallback","ev","target","addEventListener","capture","off","events","split","ref","getEventListeners","removeEventListener","splice","animateCSS","animationName","duration","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","style","webkitAnimationDuration","animationDuration","list","classList","add","remove","setTimeout","emptyDOM","div","createElement","ul","tbody","tr","table","select","html","returnNode","tempDOM","indexOf","textContent","insertAdjacentHTML","item","elements","documentElement","domReady","body","getSelector","childIndexes","untilElement","names","parentNode","id","unshift","tagName","e","join","array","childNodes","loadedContent","totalContent","DOMWasLoaded","DOMReady","turnedOff","whenDOMReady","whenDOMLoaded","whenProgress","func","onProgress","f","css","s","rel","href","head","appendChild","js","type","async","src","console","warn","isQueued","domLoadEvent","model","queuePreprocess","domStateEvent","readyState","error","resourceWaitTimer","setInterval","waitResources","clearInterval","listener","controller","init","router","prototype","scope","root","pending","run","bindingEnabled","processingElement","trimIndentation","text","indent","trim","replace","RegExp","bracketMatch","chackValidFunctionCall","allowedFunction","localEval","script","_model_","_modelScope","_content_","tempScript","preventExecution","check_","exec","test","log","outerHTML","_result_","_evaled_","eval","escapeEscapedQuote","unescapeEscapedQuote","elseIfHandle","else_","scopes","elseIf","elseValue","index","currentElement","previousElementSibling","getAttribute","modelName","$virtual","DOMCursor","for","name","modelKeys","modelRef","keys","templateParser_regex","REF_DIRECT","REF_IF","REF_EXEC","templateExec","parse","atIndex","parsed","data","if","templateParser","template","cloneNode","addresses","changesReference","pendingInsert","current","address","nodeType","refA","direct","full","match","cRef","dynamicFlag","parse_index","startFlag","attributes","a","refB","attribute","setAttribute","sf$elementReferences","tDOM","insertBefore","syntheticCache","sf$cache","cache","modelRef_array","syntheticTemplate","changes","modelReference","newData","Array","checkRelatedChanges","parseIndex","found","assign","haveChanges","temp","currentDOM","notExist","isEqualNode","replaceChild","dataParser","mask","runEval","preParsedReference","variableList","scopeMask","itemMask","preParsed","lastParsedIndex","prepared","actual","matched","slice","exist","charCodeAt","uniqueDataParser","take","passVar","currentIndex","strDeclare","firstTime","JSON","stringify","check","VarPass_","VarPass","s1","obtained","forEach","val","findElse","pop","shift","condition","bindArray","propertyName","targetNode","editProperty","refreshTimer","parentChilds","children","isKeyed","contains","processElement","options","other","count","vEndRange","preparedLength","spacer","firstElementChild","lastElementChild","clearTimeout","refresh","overflow","vDOM","theParent","update","index_a","other_sibling","other_parent","oldChild","referenceNode","create","insertAdjacentElement","currentRemoved","startRemove","vCursor","floor","propertyProxy","subject","lastLength","from","to","o","resetViewport","matchLeft","reset","real","limit","virtual_scroll","handle","elem","getElement","hardRefresh","softRefresh","virtualChilds","floorBound","dCursor","ret","childElement","childElementCount","loopParser","method","items","extractPreprocess","sf$bindedKey","initBindingInformation","get","set","n","inputBoundFunction","bindInput","whichVar","removeAttribute","alreadyInitialized","DOMNodeRemoved","removeModelBinding","hasAttribute","queued","parsePreprocess","ceiling","styles","getComputedStyle","absHeight","parseFloat","Math","ceil","offsetHeight","after","nextElementSibling","before","everyRemovedNodes","nodes","nodeName","MutationObserver","observe","everyRecords","record","removedNodes","records","childList","subtree","bindedKey","Number","Boolean","destroy","getOwnPropertyDescriptor","dcBracket","bindObject","which","Node","attrs","attr","htmlClone","innerHTML","onChanges","objValue","bindElement","brackets","s2","copy","reverse","addressed","addressAttributes","currentNode","indexes","addressStart","commentFlag","flag","createComment","textNode","createTextNode","search","extract","checkList","full_","match_","findModelProperty","asArray","excludes","writable","extracting","nodeValue","root_","varArgs","TypeError","nextSource","nextKey","hasOwnProperty","call","Element","CharacterData","DocumentType","removeChild","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","ownerDocument","NodeList","thisArg","location","origin","protocol","hostname","port","active","modelScope","bindedList","parentEl","bindedListIndex","listenSFClick","method_","preventDefault","globals","jsonpRequests","Request","requestOptions","globalsNoCallbacks","callbackName","defaults","url","toString","user","password","headers","xhrFields","statusCode","processData","dataType","contentType","timeout","fireCallback","globalCallbackValue","optionCallbackValue","_i","paramsPrefix","toUpperCase","stringData","serializeQuery","abortTimeout_1","callbackName_1","Date","now","callbackSplit","requestUrl","addVars","filter","el","script_1","onerror","xhr","XMLHttpRequest","requestParameters","open","xhrTimeout","postData","ArrayBuffer","Blob","Document","FormData","boundary","setRequestHeader","headerName","crossDomain","$2","host","onload","status","responseData","parseError","responseText","err","responseType","response","onabort","abort","send","RequestShortcut","args","_a","success","params","prefix","encodeURIComponent","concat","post","json","getJSON","postJSON","setup","ajax","loading","enabled","pauseRenderOnTransition","currentPage","initialized","currentRouterURL","popstateListener","routingError","routingBack","goto","pathname","beforeEvent","enable","load","onEvent","loaded","special","lazyViewPoint","history","pushState","RouterLoading","_scarlets","DOMReference","foundAction","last","afterEvent","title","oldURL","newURL","routerLoaded","aborted","back","styleInitialized","scrollingByScript","refreshScrollBounding","cursor","bounding","prepareCount","offsetTop","scrollHeight","scrollTo","scroller","refreshVirtualSpacer","virtual","reduce","scrollTop","insertCount","removeUserScrollFocus","getAbsoluteHeight","margin","parseInt","force","checkCursorPosition","additionalScroll","moveTo","getElementById","sheet","insertRule","cssRules","initStyles","obtainElements","_onElementResize","offElementResize","visibleLength","clientHeight","fillViewport","ceilingHeight","floorHeight","updating","resetCeiling","height","previousCeiling","nextFloor","_onElementResize_timer","scrollWidth","width","onElementResize","dynamicHeight","offsetTo","fromCeiling","scrollFocused","moveElementCursor","navigator","userAgent","staticHeight"],"mappings":";;;;;;;;CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,oBAAAC,OAAAA,OAAAD,QAAAD,EAAAD,GACAA,EAAAI,GAAAH,EAAAD,GAFA,CAGA,oBAAAK,OAAAA,OAAAC,KAAA,SAAAD,QAAA,kBACAE,WAAAC,WACAA,SAAAH,OAAAG,UAGA,IAAAJ,GAAA,WACA,GAAAK,UAAA,GAAAC,cAAAC,SACA,OAAAP,GAAAQ,OAAAC,SAAAC,MAAA,KAAAL,YAYA,SAAAM,cAAAC,GACA,IAAA,IAAAC,KAAAD,EACA,OAAA,EAEA,OAAA,EAGA,SAAAE,cAAAC,EAAAC,GACA,IAAAD,IAAAC,EACA,OAAA,EAEA,IAAA,IAAAC,KAAAF,EACA,GAAA,iBAAAA,EAAAE,IAAAF,EAAAE,KAAAD,EAAAC,GACA,OAAA,EAEA,OAAA,EAGA,SAAAC,eAAAN,EAAAO,EAAAC,GACAC,OAAAC,eAAAV,EAAAO,EAAA,CACAI,YAAA,EACAC,cAAA,EACAJ,MAAAA,IAIA,SAAAK,aAAAb,EAAAc,GACA,IAAA,IAAAT,EAAA,EAAAA,EAAAS,EAAAC,OAAAV,IAEA,QAAAd,KADAS,EAAAA,EAAAc,EAAAT,KACA,OAAAL,EAEA,OAAAA,EAvCAZ,GAAA4B,SAAA,GACA5B,GAAA6B,MAAA,CAEAC,UAAA,yBACAC,YAAA,kDACAC,UAAA,iCCnBAhC,GAAAiC,IAAA,SAAAC,EAAAC,GACA,MAAA,MAAAD,EAAA,GAAAlC,GAAAiC,IAAAG,aAAAF,GACAA,EAAA5B,cAAA+B,OAAAH,EAEAC,EAAAA,EAAAG,iBAAAJ,GACA9B,SAAAkC,iBAAAJ,IAGA,IAAAK,EAAAvC,GAAAiC,KAEA,WACA,IAAAO,EAAAxC,GAAAiC,IAEAO,EAAAC,QAAA,SAAAP,EAAAC,GACA,YAAAhC,IAAAgC,EAAAA,EAAAO,cAAAR,GACA9B,SAAAsC,cAAAR,IAGAM,EAAAG,OAAA,SAAAC,EAAAV,GACA,GAAAU,EAAAC,QAAA,OAAAD,EAAAC,QAAAX,GAEA,EAAA,CACA,IAAA,IAAAU,EAAAE,QAAAZ,GACA,OAAAU,EAEAA,EAAAA,EAAAG,oBACA,OAAAH,GAEA,OAAA,MAGAJ,EAAAQ,QAAA,SAAAJ,EAAAV,EAAAe,GACA,IAAAC,EAAA,GACAC,EAAA,OAAAjB,GAAAA,EAAA5B,cAAA+B,OAIA,IADAO,EAAAK,EAAAL,EAAAQ,YAAAR,EAAAS,gBACA,OAAAT,GAAA,CACA,IAAA,IAAAO,IAAA,IAAAP,EAAAE,QAAAZ,GACAgB,EAAAI,KAAAV,OACA,CACA,GAAAA,IAAAV,EACA,MACAgB,EAAAI,KAAAV,GAIAA,EADAK,EACAL,EAAAQ,YAEAR,EAAAS,gBAGA,OAAAH,GAIAV,EAAAe,QAAA,SAAAX,EAAAV,GACA,OAAAM,EAAAQ,QAAAJ,EAAAV,GAAA,IAYAM,EAAAgB,GAAA,SAAAZ,EAAAa,EAAAvB,EAAAwB,EAAAC,GAaA,GAZA,iBAAAf,IACAA,EAAAxC,SACAsD,EAAAxB,EACAA,EAAAuB,EACAA,EAAAb,GAGA,mBAAAV,IACAwB,EAAAxB,EACAA,EAAA,MAGAA,EAAA,CACA,IAAA0B,EAAAF,EACAA,EAAA,SAAAG,GACA,OAAArB,EAAAG,OAAAkB,EAAAC,OAAA5B,IACA0B,EAAAC,IAIAH,EAAAxB,SAAAA,EACAU,EAAAmB,iBAAAN,EAAAC,EAAA,CAAAM,SAAA,EAAAL,MAAA,IAAAA,KAIAnB,EAAAmB,KAAA,SAAAf,EAAAa,EAAAvB,EAAAwB,GACAlB,EAAAgB,GAAAZ,EAAAa,EAAAvB,EAAAwB,GAAA,IAUAlB,EAAAyB,IAAA,SAAArB,EAAAa,EAAAvB,GAEA,QAAA/B,IAAAsD,EASA,GAAA,KADAS,EAAAT,EAAAU,MAAA,MACAxC,OAAA,CAQA,IAAAyC,EAAAC,kBAAAzB,GACA,QAAAzC,IAAAiE,QAAAjE,IAAAiE,EAAAX,GACA,IAAAxC,EAAAmD,EAAAX,GAAA9B,OAAA,EAAAV,GAAA,EAAAA,IACAiB,GAAAkC,EAAAX,GAAAxC,GAAAiB,WAAAA,GAGAU,EAAA0B,oBAAAb,EAAAW,EAAAX,GAAAc,OAAAtD,EAAA,IAAA,QAbA,IAAA,IAAAA,EAAA,EAAAA,EAAAiD,EAAAvC,OAAAV,IACAuB,EAAAyB,IAAArB,EAAAsB,EAAAjD,SATA,IADA,IAAAiD,EAAAG,kBAAAzB,GACA3B,EAAA,EAAAA,EAAAiD,EAAAvC,OAAAV,IACAuB,EAAAyB,IAAArB,EAAAsB,EAAAjD,KAyBAuB,EAAAgC,WAAA,SAAA5B,EAAA6B,EAAAf,EAAAgB,GACA,IAAAC,EAAA,CACAC,UAAA,eACAC,WAAA,gBACAC,aAAA,kBACAC,gBAAA,sBAGA,IAAA,IAAAC,KAAAL,EACA,QAAAxE,IAAAyC,EAAAqC,MAAAD,GAAA,CACAL,EAAAA,EAAAK,GACA,MAIAN,IACA9B,EAAAqC,MAAAC,wBAAAR,EAAA,IACA9B,EAAAqC,MAAAE,kBAAAT,EAAA,KAGA,IAAAU,GAAA,YAAAX,GAAAN,MAAA,KACAvB,EAAAyC,UAAAC,IAAA5E,MAAAkC,EAAAyC,UAAAD,GACA7C,EAAAoB,KAAAf,EAAA+B,EAAA,WACA/B,EAAAyC,UAAAE,OAAA7E,MAAAkC,EAAAyC,UAAAD,GAEAV,GAAAc,WAAA,WACA5C,EAAAqC,MAAAC,wBAAAR,EAAA,IACA9B,EAAAqC,MAAAE,kBAAAT,EAAA,KACA,GAEA,mBAAAhB,GAAAA,OAIA,IAAA+B,EAAA,CACAC,IAAAtF,SAAAuF,cAAA,OACAC,GAAAxF,SAAAuF,cAAA,MACAE,MAAAzF,SAAAuF,cAAA,SACAG,GAAA1F,SAAAuF,cAAA,MACAI,MAAA3F,SAAAuF,cAAA,SACAK,OAAA5F,SAAAuF,cAAA,WAEAnD,EAAAJ,aAAA,SAAA6D,EAAAC,GACA,IAAAhD,EAAA,GACAiD,EAAAV,EAAAC,IAEA,IAAAO,EAAAG,QAAA,SAAAD,EAAAV,EAAAG,IACA,IAAAK,EAAAG,QAAA,SAAAD,EAAAV,EAAAI,OACA,IAAAI,EAAAG,QAAA,QAAA,IAAAH,EAAAG,QAAA,SAAAD,EAAAV,EAAAK,IACA,IAAAG,EAAAG,QAAA,YAAAD,EAAAV,EAAAM,OACA,IAAAE,EAAAG,QAAA,aAAAD,EAAAV,EAAAO,QAEAG,EAAAE,YAAA,GACAF,EAAAG,mBAAA,aAAAL,GAGA,IADA,IAAA7B,EAAA+B,EAAAD,EAAA,aAAA,YACAjF,EAAA,EAAAA,EAAAmD,EAAAzC,OAAAV,IACAiC,EAAAI,KAAAc,EAAAmC,KAAAtF,IAGA,OAAAiC,GAGAV,EAAA+C,OAAA,SAAAiB,GACA,QAAArG,IAAAqG,EAAAjB,OACA,OAAAiB,EAAAjB,SAEA,IAAA,IAAAtE,EAAA,EAAAA,EAAAuF,EAAA7E,OAAAV,IACAuF,EAAAvF,GAAAsE,UAIA,IAAAkB,EAAA,KACAjB,WAAA,WACAxF,GAAAQ,OAAAkG,SAAA,WACAD,EAAArG,SAAAuG,KAAA5D,iBAEA,GAEAP,EAAAoE,YAAA,SAAAhE,EAAAiE,EAAAC,GACA,IAAAC,EAAA,QACA5G,IAAA2G,IAAAA,EAAAL,GAIA,IAFA,IAAApD,EAAAwD,EAAA,kBAAA,yBAEA,OAAAjE,EAAAoE,YAAA,CACA,GAAApE,EAAAqE,GAAA,CACAF,EAAAG,QAAA,IAAAtE,EAAAqE,IACA,MAGA,GAAArE,IAAAkE,OACA3G,IAAA0G,EACAE,EAAAG,QAAAtE,EAAAuE,SACAJ,EAAAG,QAAA,OAEA,CAIA,IAHA,IAAAE,EAAAxE,EACA3B,EAAA4F,EAAA,EAAA,EAEAO,EAAA/D,IACA+D,EAAAA,EAAA/D,GACApC,IAGA4F,EACAE,EAAAG,QAAAjG,GAEA8F,EAAAG,QAAA,cAAAjG,EAAA,KAIA,GAAA,QADA2B,EAAAA,EAAAoE,YAEA,MAIA,OAAAH,EACAE,EACAA,EAAAM,KAAA,QAGA7E,EAAAqE,aAAA,SAAAS,EAAAnF,GACA,IAAAS,EAAAT,GAAAsE,EACAxF,EAAA,EAEA,GAAAqG,EAAA,GAAAhH,cAAA+B,OACAO,EAAAA,EAAAF,cAAA4E,EAAA,SAEA,GAAA,IAAAA,EAAA3F,OACA,OAAAiB,EAEA,IAAA3B,EAAAA,EAAAA,EAAAqG,EAAA3F,OAAAV,IAGA,GAAA,QAFA2B,EAAAA,EAAA2E,WAAAhB,KAAAe,EAAArG,KAGA,OAAA,KAGA,OAAA2B,GAzQA,GCVA5C,GAAAQ,OAAA,IAAA,WACA,IAAAgC,EAAAtC,KACAsC,EAAAgF,cAAA,EACAhF,EAAAiF,aAAA,EACAjF,EAAAkF,cAAA,EACAlF,EAAAmF,UAAA,EACAnF,EAAAoF,WAAA,EAEA,IAAAC,EAAA,GACAC,EAAA,GACAC,EAAA,GAEAvF,EAAAyB,IAAA,WACAzB,EAAAoF,WAAA,GAIApF,EAAA/B,SAAA,SAAAuH,GACA,GAAAxF,EAAAkF,aAAA,OAAAM,KACA,IAAAF,EAAA1B,QAAA4B,IACAF,EAAAxE,KAAA0E,IAEAxF,EAAAkE,SAAA,SAAAsB,GACA,GAAAxF,EAAAmF,SAAA,OAAAK,KACA,IAAAH,EAAAzB,QAAA4B,IACAH,EAAAvE,KAAA0E,IAEAxF,EAAAyF,WAAA,SAAAD,GACA,GAAAxF,EAAAkF,aAAA,OAAAM,EAAAxF,EAAAgF,cAAAhF,EAAAiF,eACA,IAAAM,EAAA3B,QAAA4B,IACAD,EAAAzE,KAAA0E,IAGAxF,EAAA0F,EAAA,SAAAtF,GACAJ,EAAAgF,gBACA,IAAA,IAAAvG,EAAA,EAAAA,EAAA8G,EAAApG,OAAAV,IACA8G,EAAA9G,GAAAuB,EAAAgF,cAAAhF,EAAAiF,eAIAjF,EAAA2F,IAAA,SAAA/C,GACA,GAAA5C,EAAAkF,aAAA,CAEA,IAAA,IAAAzG,EAAAmE,EAAAzD,OAAA,EAAAV,GAAA,EAAAA,IACA,IAAAsB,EAAA,eAAA6C,EAAAnE,GAAA,MAAAU,QACAyD,EAAAb,OAAAtD,EAAA,GAEA,GAAA,IAAAmE,EAAAzD,OAAA,OAEAa,EAAAoF,WAAA,EAEApF,EAAAiF,aAAAjF,EAAAiF,aAAArC,EAAAzD,OACA,IAAAV,EAAA,EAAAA,EAAAmE,EAAAzD,OAAAV,IAAA,CACA,IAAAmH,EAAAhI,SAAAuF,cAAA,QACAyC,EAAAC,IAAA,aACAD,EAAAE,KAAAlD,EAAAnE,GACAmH,EAAArE,iBAAA,OAAA/D,GAAAQ,OAAA0H,EAAA,CAAAvE,MAAA,IACAyE,EAAArE,iBAAA,QAAA/D,GAAAQ,OAAA0H,EAAA,CAAAvE,MAAA,IACAvD,SAAAmI,KAAAC,YAAAJ,KAIA5F,EAAAiG,GAAA,SAAArD,GACA,GAAA5C,EAAAkF,aAAA,CAEA,IAAA,IAAAzG,EAAAmE,EAAAzD,OAAA,EAAAV,GAAA,EAAAA,IACA,IAAAsB,EAAA,gBAAA6C,EAAAnE,GAAA,MAAAU,QACAyD,EAAAb,OAAAtD,EAAA,GAEA,GAAA,IAAAmE,EAAAzD,OAAA,OAEAa,EAAAoF,WAAA,EAEApF,EAAAiF,aAAAjF,EAAAiF,aAAArC,EAAAzD,OACA,IAAAV,EAAA,EAAAA,EAAAmE,EAAAzD,OAAAV,IAAA,CACA,IAAAmH,EAAAhI,SAAAuF,cAAA,UACAyC,EAAAM,KAAA,kBACAN,EAAAO,OAAA,EACAP,EAAAQ,IAAAxD,EAAAnE,GACAmH,EAAArE,iBAAA,OAAA/D,GAAAQ,OAAA0H,EAAA,CAAAvE,MAAA,IACAyE,EAAArE,iBAAA,QAAA/D,GAAAQ,OAAA0H,EAAA,CAAAvE,MAAA,IACAvD,SAAAmI,KAAAC,YAAAJ,KAIA5C,WAAA,WACA,IAAAhD,EAAAiF,cAAAjF,EAAAoF,YACApF,EAAAgF,cAAAhF,EAAAiF,aAAA,EACAoB,QAAAC,KAAA,wFAEA,KAGA,IAAAC,GAAA,EAEA3I,SAAA2D,iBAAA,OAAA,SAAAiF,EAAAvF,GAEA,IAAA,IAAAsF,GAAA3I,SAAAuG,KAAA,CACAvG,SAAAkE,oBAAA,OAAA0E,GAAA,GAEAD,EAAA/I,GAAAiJ,MAAAC,gBAAA9I,SAAAuG,MAEA,IAAA,IAAA1F,EAAA,EAAAA,EAAA8H,EAAApH,OAAAV,IACA8H,EAAA9H,GAAAoE,UAAAC,IAAA,iBAGA,IAAAyD,EAAApH,SAAAoH,GAAA,MAiBA,GAEA3I,SAAA2D,iBAAA,mBAAA,SAAAoF,IACA,GAAA,gBAAA/I,SAAAgJ,YAAA,aAAAhJ,SAAAgJ,WAAA,CACA,IAAA,IAAA5G,EAAAmF,SAAA,CACAnF,EAAAmF,UAAA,EACA,IAAA,IAAA1G,EAAA,EAAAA,EAAA4G,EAAAlG,OAAAV,IACA,IACA4G,EAAA5G,KACA,MAAAmG,GACAyB,QAAAQ,MAAAjC,KAKA,IAAA2B,IACAA,EAAA/I,GAAAiJ,MAAAC,gBAAA9I,SAAAuG,OAEA2C,EAAAC,YAAAC,EAAA,KACApJ,SAAAkE,oBAAA,mBAAA6E,GAAA,MAEA,GAEA,IAAAG,GAAA,EACA,SAAAE,IACA,MAAA,IAAAhH,EAAAoF,WAAApF,EAAAgF,cAAAhF,EAAAiF,cAAA,CAGAgC,cAAAH,GAGA,IADA,IAAAI,EAAA1J,GAAAiC,IAAA,qBACAhB,EAAA,EAAAA,EAAAyI,EAAA/H,OAAAV,IACAyI,EAAAzI,GAAAqD,oBAAA,QAAAtE,GAAAQ,OAAA0H,GACAwB,EAAAzI,GAAAqD,oBAAA,OAAAtE,GAAAQ,OAAA0H,GAGA1F,EAAAkF,cAAA,EACA,IAAAzG,EAAA,EAAAA,EAAA6G,EAAAnG,OAAAV,IACA,IACA6G,EAAA7G,KACA,MAAAmG,GACAyB,QAAAQ,MAAAjC,GAGAW,EAAAxD,OAAA,GACAsD,EAAAtD,OAAA,GACAuD,EAAAvD,OAAA,GACAsD,EAAAC,EAAA,KAGA9H,GAAA2J,WAAAC,OACA5J,GAAAiJ,MAAAW,KAAAxJ,SAAAuG,KAAAoC,GACA/I,GAAA6J,OAAAD,OAEAb,EAAA,QAGA/I,GAAA8J,UAAAxJ,YAAAN,GAAAQ,OAAAC,SCnLAT,GAAAiJ,MAAA,SAAAc,GAOA,OANA/J,GAAAiJ,MAAAe,KAAAD,KACA/J,GAAAiJ,MAAAe,KAAAD,GAAA,IAEA/J,GAAA2J,WAAAM,QAAAF,IACA/J,GAAA2J,WAAAO,IAAAH,GAEA/J,GAAAiJ,MAAAe,KAAAD,IAGA,WACA,IAAAvH,KAAAxC,GAAAiJ,MACAkB,gBAAA,EACA3H,KAAAwH,KAAA,GAEA,IAAAI,kBAAA,KAGA,SAAAC,gBAAAC,GACA,IAAAC,EAAAD,EAAAnG,MAAA,KAAA,GAKA,YAAAhE,KAHAoK,EADA,MAAAA,EAAA,GAAA,IAAA,OAAAA,EAAA,GAAA,GACAA,EAAA,GACAA,EAAA,IAEAD,EAEA,KADAC,EAAAA,EAAA5I,OAAA4I,EAAAC,OAAA7I,QACA2I,EACAA,EAAAG,QAAAC,OAAA,YAAAH,EAAA,KAAA,MAAA,IAIA,IAAAI,aAAAD,OAAA,wBAAA1K,GAAA6B,MAAAE,YAAA,KACA6I,uBAAA,qBACAC,gBAAA,CAAA,IAAA,MAAA,KAAA,QAAA,iBAAA,eACAC,UAAA,SAAAC,OAAAC,QAAAC,YAAAC,WAIA,IAAAC,WAAAJ,OAGAI,WAAAA,WAAAV,QAAAzK,GAAA6B,MAAAC,UAAA,YAKA,IAFA,IAAAsJ,kBAAA,EACAC,OAAA,KACA,QAAAA,OAAAV,aAAAW,KAAAH,cAGA,GAFAE,OAAA,GAAAA,OAAA,GAAAb,QAEA,IAAAK,gBAAAzE,QAAAiF,OAAA,KACA,gBAAAA,OAAA,GAAAlH,MAAA,KAAA,IACAyG,uBAAAW,KAAAF,OAAA,GAAAA,OAAA,GAAA1J,OAAA,IACA,CACAyJ,iBAAAC,OAAA,GACA,MAIA,GAAAD,iBAIA,OAHAvC,QAAAQ,MAAA,8CAAA+B,iBAAA,KACAvC,QAAA2C,IAAAnB,gBAAAD,kBAAAqB,WAAAjB,QAEA,YAIA,IAAAkB,SAAA,GACA,IACA,IAAA,IAAA,WAAAH,KAAAR,QAAA,CACA,IAAAY,SAAAC,KAAA,eAAAb,OAAA5G,MAAA,YAAAkD,KAAA,WAAA,QACA,OAAAqE,SAAAC,SAEA,IAAAA,SAAAC,KAAAb,QACA,MAAA3D,GAIA,OAHAyB,QAAAQ,MAAAjC,GACAyB,QAAA2C,IAAAnB,gBAAAD,kBAAAqB,WAAAjB,QAEA,YAGA,MAAA,KAAAkB,SAAAA,SACAC,UA8CA,SAAAE,mBAAAvB,GACA,OAAAA,EAAAnG,MAAA,OAAAkD,KAAA,SAAAlD,MAAA,OAAAkD,KAAA,SAGA,SAAAyE,qBAAAxB,GACA,OAAAA,EAAAnG,MAAA,SAAAkD,KAAA,OAAAlD,MAAA,SAAAkD,KAAA,OAGA,SAAA0E,aAAAC,EAAAC,GAIA,IAHA,IAAAC,EAAAF,EAAAE,OAGAjL,EAAA,EAAAA,EAAAiL,EAAAvK,OAAAV,IAGA,GADAgL,EAAA,GAAAC,EAAAjL,GAAA,GACA6J,UAAApK,MAAA8B,KAAAwH,KAAAiC,GAKA,OADAA,EAAA,GAAAC,EAAAjL,GAAA,GACA6J,UAAApK,MAAA8B,KAAAwH,KAAAiC,GAIA,OAAA,OAAAD,EAAAG,UACA,IAEAF,EAAA,GAAAD,EAAAG,UACArB,UAAApK,MAAA8B,KAAAwH,KAAAiC,IAtEAzJ,KAAA4J,MAAA,SAAAxJ,GAKA,IAJA,IAAA3B,GAAA,EACAkG,EAAAvE,EAAAuE,QACAkF,EAAAzJ,EAEA,OAAAA,GACAA,EAAAuE,UAAAA,GACAlG,IAEA2B,EAAAA,EAAA0J,uBAGA,IAAAlH,EAAAiH,EAAAE,aAAA,gBACA,IAAAnH,EAAA,OAAAnE,EAEA,IAAAmD,EAAApE,GAAAiJ,MAAAe,KAAAhK,GAAA2J,WAAA6C,UAAAH,IAAAjH,GACA,OAAAhB,EAAAqI,SAEAxL,EAAAmD,EAAAqI,SAAAC,UAAA,EAFAzL,GAMAuB,KAAAmK,IAAA,SAAAC,EAAA5E,GACA,IAAAhI,GAAAQ,OAAAkH,aACA,OAAA1H,GAAA,WACAwC,KAAAmK,IAAAC,EAAA5E,KAGAA,EAAAxF,KAAAoK,GAAApK,OAIAA,KAAAqK,UAAA,SAAAC,GAEA,IADA,IAAAC,EAAA1L,OAAA0L,KAAAD,GACA7L,EAAA8L,EAAApL,OAAA,EAAAV,GAAA,EAAAA,KACA,IAAA8L,EAAA9L,GAAAmF,QAAA,MACA2G,EAAAxI,OAAAtD,EAAA,GAEA,OAAA8L,EAAA1F,KAAA,MAoCA,IAAA2F,qBAAA,iBACAC,WAAA,EAAAC,OAAA,EAAAC,SAAA,EACAC,aAAA,SAAAC,EAAA9G,EAAA+G,GAIA,IAHA,IAAAC,EAAA,GAGAtM,EAAA,EAAAA,EAAAoM,EAAA1L,OAAAV,IACA,QAAAd,IAAAmN,IAAA,IAAAA,EAAAlH,QAAAnF,GAAA,CAGA,IAAAmD,EAAAiJ,EAAApM,GAIA,GAHAmD,EAAAoJ,KAAA,GAAAjH,EAGAnC,EAAAsE,OAAAuE,YAAA7I,EAAAsE,OAAAyE,SACAI,EAAAtM,GAAA,CAAAyH,KAAAtE,EAAAsE,KAAA8E,KAAA1C,UAAApK,MAAA8B,KAAAwH,KAAA5F,EAAAoJ,YAGA,GAAApJ,EAAAsE,OAAAwE,OAAA,CACA,IAAAjB,EAAA7H,EAAAoJ,KAKA,GAJAD,EAAAtM,GAAA,CAAAyH,KAAAtE,EAAAsE,KAAA8E,KAAA,IACAvB,EAAA,GAAA7H,EAAAqJ,GAAA,IAGA3C,UAAApK,MAAA8B,KAAAwH,KAAAiC,GAAA,CACAsB,EAAAtM,GAAAuM,KAAAzB,aAAA3H,EAAA6H,GACA,SAGAA,EAAA,GAAA7H,EAAAqJ,GAAA,GACAF,EAAAtM,GAAAuM,KAAA1C,UAAApK,MAAA8B,KAAAwH,KAAAiC,IAGA,OAAAsB,GAGAG,eAAA,SAAAC,EAAApH,GACA,IAAAN,EAAA0H,EAAA1H,KAAA2H,WAAA,GACAC,EAAAF,EAAAE,UACAN,EAAAH,aAAAO,EAAAN,MAAA9G,GAGAN,EAAAgD,MAAA1C,EAMA,IAJA,IAAAuH,EAAA,GACAC,EAAA,GAGA9M,EAAA,EAAAA,EAAA4M,EAAAlM,OAAAV,IAAA,CACA,IAAAmD,EAAAyJ,EAAA5M,GACA+M,EAAAzL,EAAAsE,aAAAzC,EAAA6J,QAAAhI,GAGA,GAAA,IAAA7B,EAAA8J,SAAA,CA0BA,GAAA,IAAA9J,EAAA8J,SAAA,CACAC,EAAAH,EAOA,GALAF,EAAAxK,KAAA,CACA+C,YAAA8H,EACA/J,IAAAA,SAGAjE,IAAAiE,EAAAgK,OAAA,CACAD,EAAA9H,YAAAkH,EAAAnJ,EAAAgK,QAAAZ,KACA,SAIAW,EAAA9H,YAAA8H,EAAA9H,YAAAoE,QAAAuC,qBAAA,SAAAqB,EAAAC,GACA,OAAAf,EAAAe,GAAAd,OAKA,IAAA,IAAApJ,EAAA8J,SAAA,CACA,IAAAK,EAAA,CACAC,YAAAR,EACAI,OAAAhK,EAAAqK,YACAzH,WAAAgH,EAAAhH,WACA0H,UAAAtK,EAAAsK,WAAAnM,EAAAsE,aAAAzC,EAAAsK,UAAAzI,IAEA6H,EAAAxK,KAAAiL,GAGAR,EAAAzK,KAAAiL,SAtDA,IADA,IAAAJ,EAAA/J,EAAAuK,WACAC,EAAA,EAAAA,EAAAT,EAAAxM,OAAAiN,IAAA,CACA,IAAAC,EAAAV,EAAAS,GAEAd,EAAAxK,KAAA,CACAwL,UAAAd,EAAAW,WAAAE,EAAAjC,MACAxI,IAAAyK,SAGA1O,IAAA0O,EAAAT,QAMAS,EAAAb,EAAAW,WAAAE,EAAAjC,OAEAxL,MAAAyN,EAAAzN,MAAAqJ,QAAAuC,qBAAA,SAAAqB,EAAAC,GACA,OAAAf,EAAAe,GAAAd,OARAQ,EAAAe,aAAAF,EAAAjC,KAAAW,EAAAsB,EAAAT,QAAAZ,OAkDAvH,EAAA+I,qBAAAlB,EAIA,IAAA7M,EAAA,EAAAA,EAAA8M,EAAApM,OAAAV,IACA,CAAAmD,EAAA2J,EAAA9M,GAAA,IACAgO,EAAA1M,EAAAH,aAAAmL,EAAAnJ,EAAAgK,QAAAZ,MAAA,GACA,IAAAoB,EAAA,EAAAA,EAAAK,EAAAtN,OAAAiN,IACAxK,EAAA4C,WAAAkI,aAAAD,EAAAL,GAAAxK,EAAAoK,aAIA,OAAAvI,GAGA,SAAAkJ,eAAAvM,EAAA+K,EAAApH,QACApG,IAAAyC,EAAAwM,WACAxM,EAAAwM,SAAA,IAKA,IAHA,IAAAC,EAAAzM,EAAAwM,SACAE,EAAA3B,EAAA2B,eAEArO,EAAA,EAAAA,EAAAqO,EAAA3N,OAAAV,IAAA,CACA,IAAAmD,EAAAkL,EAAArO,GACAoO,EAAAjL,EAAA,IAAA3C,aAAA8E,EAAAnC,EAAA,KAIA,SAAAmL,kBAAA3M,EAAA+K,EAAAxM,EAAAoF,GACA,IAAA8I,EAAAzM,EAAAwM,SACAE,EAAA3B,EAAA2B,eAEA,QAAAnP,IAAAgB,EAAA,CAEA,QAAAhB,KADAqP,EAAA7B,EAAA8B,eAAAtO,KACA,IAAAqO,EAAA7N,OAEA,OADAkH,QAAAQ,MAAA,qDAAAlI,EAAA,sBACA,EAGA,IAAA,IAAAF,EAAA,EAAAA,EAAAqO,EAAA3N,OAAAV,IAAA,CAEA,IADAmD,EAAAkL,EAAArO,IACA,KAAAE,EAAA,CAEA,IAAAuO,EAAAjO,aAAA8E,EAAAnC,EAAA,IAGAiL,EAAAjL,EAAA,MAAAsL,IACAL,EAAAjL,EAAA,IAAAsL,SAGA,CACA,IAAAF,EAAA,GACA,IAAAvO,EAAA,EAAAA,EAAAqO,EAAA3N,OAAAV,IAAA,CACA,IAAAmD,EAAAkL,EAAArO,GACAyO,EAAAjO,aAAA8E,EAAAnC,EAAA,IAGAiL,EAAAjL,EAAA,MAAAsL,IACAC,MAAA7F,UAAAxG,KAAA5C,MAAA8O,EAAA7B,EAAA8B,eAAArL,EAAA,KACAiL,EAAAjL,EAAA,IAAAsL,GAIA,GAAA,IAAAF,EAAA7N,OAAA,OAAA,EAGA,IAAA4L,EAAAH,aAAAO,EAAAN,MAAA9G,EAAAiJ,GACA,SAAAI,EAAAC,GAEA,IADA,IAAAC,GAAA,EACA7O,EAAA,EAAAA,EAAA4O,EAAAlO,OAAAV,IACA,IAAA,IAAAuO,EAAApJ,QAAAyJ,EAAA5O,IAAA,CACA6O,GAAA,EACA,MAGA,IAAA,IAAAA,EACA,OAAA,EAGAN,EAAA,GACA,IAAAvO,EAAA,EAAAA,EAAA4O,EAAAlO,OAAAV,SACAd,IAAAoN,EAAAsC,EAAA5O,KACAuO,EAAAlM,KAAAuM,EAAA5O,IAKA,OADAI,OAAA0O,OAAAxC,EAAAH,aAAAO,EAAAN,MAAA9G,EAAAiJ,KACA,EAGA,IAAA1B,EAAAlL,EAAAoM,qBACAgB,GAAA,EACA,IAAA/O,EAAA,EAAAA,EAAA6M,EAAAnM,OAAAV,IAAA,CACA,IAAAsN,EAAAT,EAAA7M,GAEA,QAAAd,IAAAoO,EAAAC,aAkCA,QAAArO,IAAAoO,EAAAlI,YAAA,CACA,QAAAlG,IAAAoO,EAAAnK,IAAAqK,YAAA,CACA,IAAA,IAAAmB,EAAArB,EAAAnK,IAAAqK,aAAA,CACA,IAAAwB,EAAA1B,EAAAnK,IAAAhD,MAAAqJ,QAAAuC,qBAAA,SAAAqB,EAAAC,GACA,OAAAf,EAAAe,GAAAd,OAGA,GAAAe,EAAAlI,YAAAA,cAAA4J,EAAA,SACA1B,EAAAlI,YAAAA,YAAA4J,EAEAD,GAAA,EAEA,SAIA,GAAAzC,EAAAgB,EAAAnK,IAAAgK,QAAA,CACA,IAAAhN,EAAAmM,EAAAgB,EAAAnK,IAAAgK,QAAAZ,KACA,GAAAe,EAAAlI,YAAAA,cAAAjF,EAAA,SACAmN,EAAAlI,YAAAA,YAAAjF,EAEA4O,GAAA,QAGA,QAAA7P,IAAAoO,EAAAO,UAAA,CACA,QAAA3O,IAAAoO,EAAAnK,IAAAqK,YAAA,CACA,IAAA,IAAAmB,EAAArB,EAAAnK,IAAAqK,aAAA,CACAwB,EAAA1B,EAAAnK,IAAAhD,MAAAqJ,QAAAuC,qBAAA,SAAAqB,EAAAC,GACA,OAAAf,EAAAe,GAAAd,OAGA,GAAAe,EAAAO,UAAA1N,QAAA6O,EAAA,SACA1B,EAAAO,UAAA1N,MAAA6O,EAEAD,GAAA,EAEA,SAIA,GAAAzC,EAAAgB,EAAAnK,IAAAgK,QAAA,CACAhN,EAAAmM,EAAAgB,EAAAnK,IAAAgK,QAAAZ,KACA,GAAAe,EAAAO,UAAA1N,QAAAA,EAAA,SACAmN,EAAAO,UAAA1N,MAAAA,EAEA4O,GAAA,SA9EA,QAAA7P,IAAAoN,EAAAgB,EAAAH,QAAA,CAMA,IALA,IAAAa,EAAA1M,EAAAH,aAAAmL,EAAAgB,EAAAH,QAAAZ,MAAA,GACA0C,EAAA3N,EAAAS,QAAAuL,EAAAC,YAAAD,EAAAG,WACAyB,GAAA,EAGAvB,EAAA,EAAAA,EAAAK,EAAAtN,OAAAiN,IAAA,CACA,QAAAzO,IAAA+P,EAAAtB,GAAA,CACAuB,GAAA,EACA,OAEA,IAAAD,EAAAtB,GAAAwB,YAAAnB,EAAAL,KACAL,EAAAvH,WAAAqJ,aAAApB,EAAAL,GAAAsB,EAAAtB,IAIA,GAAAuB,EACA,IAAAvB,EAAA,EAAAA,EAAAK,EAAAtN,OAAAiN,IACAL,EAAAvH,WAAAkI,aAAAD,EAAAL,GAAAL,EAAAC,kBAKA,IAAAI,EAAAK,EAAAtN,OAAAiN,EAAAsB,EAAAvO,OAAAiN,IACAsB,EAAAtB,GAAArJ,SAIAyK,GAAA,GAuDA,OAAAA,EAKA,IAAAM,WAAA,SAAArK,EAAA+E,EAAAuF,EAAAxG,EAAAyG,EAAAC,GACA,IAAAxF,EAAAzI,KAAAwH,KAAAD,GACAyG,IAAAA,EAAA,IAIA,IADA,IAAAE,EAAAlO,KAAAqK,UAAA5B,GACAhK,EAAAyP,EAAA/O,OAAA,EAAAV,GAAA,EAAAA,IACAgK,EAAAyF,EAAAzP,cAAAV,UACAmQ,EAAAnM,OAAAtD,EAAA,GAIA,IAAA0P,EAAAjG,OAAA1K,GAAA6B,MAAAG,UAAA,IAAA0O,EAAA,IAAA1Q,GAAA6B,MAAAE,YAAA,MAAA,KAEA,GAAAwO,EACA,IAAAK,EAAAlG,OAAA1K,GAAA6B,MAAAG,UAAAuO,EAAA,MAAAvQ,GAAA6B,MAAAE,YAAA,MAAA,KAIA,GAFAoI,gBAAA,EAEA,YAAAqG,EACA,IAAAK,EAAA,GACAC,EAAAL,EAAA9O,OAGA,IAAAoP,EAAA9K,EAAAwE,QAAA,uBAAA,SAAAuG,EAAAf,GAqBA,GAnBAA,EAAApE,mBAAAoE,GAGAM,IACAN,EAAAA,EAAAxF,QAAAmG,EAAA,SAAAK,GACA,MAAA,WAAAA,EAAA,GAAAC,MAAA,MAWAjB,GAHAA,EAAAnE,qBAJAmE,EAAAA,EAAAxF,QAAAkG,EAAA,SAAAtC,EAAA4C,GACA,MAAA,eAAAA,MAMA9M,MAAA,SAAAkD,KAAA,KAAAlD,MAAA,QAAAkD,KAAA,KAAAlD,MAAA,QAAAkD,KAAA,KAGA,YAAAmJ,EAAA,CACAP,EAAAA,EAAAzF,OAGA,IAAA2G,EAAAN,EAAAzK,QAAA6J,GAEA,OAAA,IAAAkB,GACAN,EAAAvN,KAAA2M,GACAQ,EAAAnN,KAAA,CAAAoF,KAAAuE,WAAAO,KAAA,CAAAyC,EAAAjF,EAAAC,KACA,QAAA4F,EAAAlP,OAAAmP,EAAA,IAEA,QAAAK,EAAAL,GAKA,OAFAb,EAAA,GAAAnF,UAAApK,MAAA8B,KAAAwH,KAAA,CAAAwG,EAAAP,EAAAjF,EAAAC,KAEAR,QAAA,kCAAA,SAAAxJ,GACA,MAAA,KAAAA,EAAAmQ,WAAA,GAAA,QASA,MALA,YAAAZ,IAEAK,EAAAH,EAAAzF,EAAAD,EAAAuF,EAAAxG,EAAAyG,EAAAG,EAAAC,EAAA3K,EAAA,KACAT,WAAA,WAAAuL,EAAA,MAAA,IAEAA,GAIAM,iBAAA,SAAApL,EAAA+E,EAAAuF,EAAAxG,EAAAyG,GAEA,IAAAtF,EAAA,CACAvJ,OAAA,EACA2P,KAAA,SAAAC,EAAAC,GACA,GAAA,OAAAD,EACA,OAAAjB,WAAApQ,KAAAsR,GAAAxG,EAAAuF,EAAAxG,GAGA,IAAA0H,EAAA,oBACAC,GAAA,EAGA,IAAA,IAAA7Q,KAAA0Q,EACA,iBAAAA,EAAA1Q,GACA0Q,EAAA1Q,GAAA,IAAA0Q,EAAA1Q,GAAAsD,MAAA,KAAAkD,KAAA,OAAA,IACA,iBAAAkK,EAAA1Q,KACA0Q,EAAA1Q,GAAA8Q,KAAAC,UAAAL,EAAA1Q,KAEA6Q,IACAD,GAAA,KAEAA,GAAA5Q,EAAA,MAAA0Q,EAAA1Q,GACA6Q,GAAA,EAWA,OAPA,IAAAA,IACAD,EAAAA,EAAAhH,QAAA,OAAA,KAGAgH,EAAAA,EAAAtN,MAAA,KAAAkD,KAAA,SAAAlD,MAAA,KAAAkD,KAAA,SAGAiJ,WAAApQ,KAAAsR,GAAAxG,EAAAuF,EAAAxG,EAAA0H,EAAA,OAKAxL,EAAAA,EAAAwE,QAAA,oBAAA,SAAA4D,EAAA4C,GACA,OAAA,IAAA,UAAA1F,KAAA0F,GACA,gBAAAA,EAAA9M,MAAA,KAAAkD,KAAA,OAAA,KAEA6D,EAAAA,EAAAvJ,QAAAsP,EACA/F,EAAAvJ,SACA,0CAAAuJ,EAAAvJ,OAAA,GAAA,QAGA,IAAAsJ,EAAAzI,KAAAwH,KAAAD,GAGA4G,EAAAjG,OAAA1K,GAAA6B,MAAAG,UAAA,IAAAQ,KAAAqK,UAAA5B,GAAA,IAAAjL,GAAA6B,MAAAE,YAAA,MAAA,KAEA,GAAAwO,EACA,IAAAK,EAAAlG,OAAA1K,GAAA6B,MAAAG,UAAAuO,EAAA,MAAAvQ,GAAA6B,MAAAE,YAAA,MAAA,KAEA,GAAA,YAAAyO,EACA,IAAAC,EAAA,GAEA,IAAAM,EAAA9K,EAAAwE,QAAA,mBAAA,SAAAuG,EAAAf,GAEAA,EAAApE,mBAAAoE,GAGAM,IACAN,EAAAA,EAAAxF,QAAAmG,EAAA,SAAAK,GACA,MAAA,WAAAA,EAAA,GAAAC,MAAA,MAUAjB,GAHAA,EAAAnE,qBAHAmE,EAAAA,EAAAxF,QAAAkG,EAAA,SAAAtC,EAAA4C,GACA,MAAA,eAAAA,MAKA9M,MAAA,SAAAkD,KAAA,KAAAlD,MAAA,QAAAkD,KAAA,KAAAlD,MAAA,QAAAkD,KAAA,KASA,IAPA,IACAwK,GAAA,EAGAC,EAAA,wCACAC,EAAA,GACAC,EAAA,KACA,QAAAA,EAAAF,EAAAxG,KAAA2E,KACA8B,EAAAzO,KAAA0O,EAAA,IAMA,GAHA,OAAAhH,GAAA,YAAAwF,GACAuB,EAAAzO,KAAA,WAEA,IAAAyO,EAAApQ,OAAA,CAEA,IADA,IAAAsQ,EAAA,GACAhR,EAAA,EAAAA,EAAA8Q,EAAApQ,OAAAV,IACA8Q,EAAA9Q,GAAAwJ,QAAA,kBAAA,IAAAtG,MAAA,KAAA+N,QAAA,SAAAC,GACAF,EAAA3O,KAAA6O,KAGAJ,EAAAE,EACA,IAAAhR,EAAA,EAAAA,EAAA8Q,EAAApQ,OAAAV,IACA8Q,EAAA9Q,IAAA,YAAA8Q,EAAA9Q,GAAA,kBAAA8Q,EAAA9Q,GAAA,cAIA8Q,EADA,IAAAA,EAAApQ,OACA,OACA,IAAAoQ,EAAA1K,KAAA,KAAA,IACA4I,EAAAA,EAAA9L,MAAA,aAAAkD,KAAA0K,QAEA9B,EAAAA,EAAA9L,MAAA,aAAAkD,KAAA,QAGA,GAAA,KADAwK,EAAA5B,EAAA9L,MAAA,SACAxC,OAAA,CACAkQ,EAAAA,EAAA,GAAA1N,MAAA,KAGA,IAAAiO,EAAA,SAAA9H,GAEA,IAAA0B,EAAA,KAIA,KADA1B,GAJAA,EAAAA,EAAAjD,KAAA,MAIAlD,MAAA,UAAA,IAAAmG,EAAAlE,QAAA,KAAA,IAAA,QACAzE,OACAqK,EAAA1B,EAAA+H,MACA/H,EAAAA,EAAA,GAYA,IAPA,IAAA1J,EAAA,CACA6M,IAHAnD,EAAAA,EAAAnG,MAAA,aAGAmO,QACApG,OAAA,GACAC,UAAAH,GAIA/K,EAAA,EAAAA,EAAAqJ,EAAA3I,OAAAV,IAAA,CACA,IAAAkR,EAAA7H,EAAArJ,GAAAkD,MAAA,KACAvD,EAAAsL,OAAA5I,KAAA,CAAA6O,EAAAG,QAAAH,EAAA9K,KAAA,OAGA,OAAAzG,GAGA,GAAA,YAAA4P,EAAA,CACA,IAAA+B,EAAAV,EAAAS,QACApG,EAAAkG,EAAAP,GACA3F,EAAAxD,KAAAwE,OACAhB,EAAAsB,KAAA,CAAA,KAAAxC,EAAAC,EAAAC,GAGAgB,EAAAuB,GAAA,CAAA8E,EAAA/H,OAAA0B,EAAAuB,GAAAjD,QACA,OAAA0B,EAAAC,YACAD,EAAAC,UAAAD,EAAAC,UAAA3B,QAEA,IAAAvJ,EAAA,EAAAA,EAAAiL,EAAAA,OAAAvK,OAAAV,IACAiL,EAAAA,OAAAjL,GAAA,GAAAiL,EAAAA,OAAAjL,GAAA,GAAAuJ,OACA0B,EAAAA,OAAAjL,GAAA,GAAAiL,EAAAA,OAAAjL,GAAA,GAAAuJ,OAKA,OADAiG,EAAAnN,KAAA4I,GACA,SAAAuE,EAAA9O,OAAA,GAGA,IAAAsK,EAAA,CAAA4F,EAAA,GAAA7G,EAAAC,EAAAC,GAGA,OAAAJ,UAAApK,MAAA8B,KAAAwH,KAAAiC,IAKA4F,EAAAS,QACArG,EAAA,GAAA4F,EAAAxK,KAAA,KAEAyD,UAAApK,MAAA8B,KAAAwH,KAAAiC,KAPA4F,EAAAS,QACAvG,aAAAqG,EAAAP,GAAA5F,IAaA,GAAA,KADA4F,EAAA5B,EAAA9L,MAAA,UACAxC,OAAA,CACAsK,EAAA,CAAA4F,EAAA,GAAA7G,EAAAC,EAAAC,GAEA,MAAA,YAAAsF,GACAC,EAAAnN,KAAA,CAAAoF,KAAAyE,SAAAK,KAAAvB,IACA,SAAAwE,EAAA9O,OAAA,IAGAsO,EAAAnF,UAAApK,MAAA8B,KAAAwH,KAAAiC,GAGA,MAAA,KAGA,MAAA,YAAAuE,GAEAvF,EAAAuF,EAAAG,EAAAC,EAAA3K,EAAA,KACAT,WAAA,WAAAuL,EAAA,MAAA,GACA,CAAAA,EAAAN,EAAAvF,IAGA6F,GAGAyB,UAAA,SAAA7E,EAAAvI,EAAAmL,EAAA/D,EAAAiG,EAAAC,EAAA1L,EAAAb,GACA,IAAAwM,EAAA,CAAA,MAAA,OAAA,SAAA,QAAA,UAAA,OAAA,OAAA,UAAA,cAAA,eACAC,GAAA,EACAC,EAAA7L,EAAA8L,SACAC,EAAA/L,EAAA3B,UAAA2N,SAAA,iBAGAtP,EAAAlB,KAAAwH,KAAAwC,GAAA,MAAAiG,GAEAQ,EAAA,SAAA7G,EAAA8G,EAAAC,EAAAC,GAEA,GAAAhO,EAAAqH,SACA,IACA4G,EADAjO,EAAAqH,SAAAC,UACAtH,EAAAqH,SAAA6G,eAGA,GAAA,UAAAJ,EAAA,CACA,GAAA9N,EAAAqH,SACA,IAAA8G,EAAA,CAAAvM,EAAAwM,kBAAAxM,EAAAyM,kBASA,OAPAzM,EAAAX,YAAA,QAEAjB,EAAAqH,WACAzF,EAAAwB,YAAA+K,EAAA,IACAvM,EAAAwB,YAAA+K,EAAA,IACAnO,EAAAqH,SAAAxK,IAAAoE,YAAA,KAMA,GAAAjB,EAAAqH,SAAA,CACA,IAAA0E,EAAA/L,EAAAqH,SAAAjG,WAEAkN,aAAAd,GACAA,EAAApN,WAAA,WACAJ,EAAAqH,SAAAkH,SAAA,IACA,UAEAxC,EAAA0B,EAGA,GAAA,gBAAAK,EAAA,CA0BA,GAAA,SAAAA,GAAA,SAAAA,EAAA,CACA,GAAA,SAAAA,EAAA,EACAU,EAAAxO,EAAAzD,OAAAyK,EAAAgH,GACA,IACAA,GAAAQ,GAGA,IAAAC,EAAAzT,SAAAuF,cAAA,OACA,IAAA1E,EAAA,EAAAA,EAAAmS,EAAAnS,IACA4S,EAAArL,YAAA2I,EAAA/E,EAAAnL,IAGA,IAAAmC,EAAA+N,EAAAgC,IAAA,KACAW,EAAA1Q,GAAAA,EAAA4D,YAEA,IAAA8M,IAEAA,EADA1O,EAAAqH,UAAArH,EAAAzD,QAAA0R,EACAjO,EAAAqH,SAAAxK,IACA+E,GAIA,IAAA/F,EAAA,EAAAA,EAAAmS,EAAAnS,IACA6S,EAAA5E,aAAA2E,EAAAL,kBAAApQ,QAEAjD,IAAAuD,GAAAA,EAAAqQ,QACArQ,EAAAqQ,OAAA5C,EAAA/E,EAAAnL,GAAA,QAEA,OAGA,GAAAmL,EAAA+G,EAAA,CACA,IAAAa,EAAA7C,EAAAgC,GACAA,EAAAhC,EAAA/E,GACAA,EAAA4H,OAEA5H,EAAA+E,EAAA/E,GACA+G,EAAAhC,EAAAgC,GAGA,IAAAc,EAAAd,EAAA/P,YACA8Q,EAAAf,EAAAnM,WAQA,OAPAoF,EAAApF,WAAAkI,aAAAiE,EAAA/G,EAAAhJ,aACA8Q,EAAAhF,aAAA9C,EAAA6H,aAEA9T,IAAAuD,GAAAA,EAAAqQ,SACArQ,EAAAqQ,OAAA5C,EAAAgC,GAAA,QACAzP,EAAAqQ,OAAA5C,EAAA/E,GAAA,UAMA,GAAA,gBAAA8G,EACA,IAAAjS,EAAAmL,EAAAnL,EAAAkS,EAAAlS,IACAkQ,EAAA/E,GAAA7G,SAKA,GAAA,WAAA2N,EAAA,CAwBA,GAAA,WAAAA,EAAA,CAUA,IAAAU,OATAzT,IAAAiM,GACAA,EAAA,EACA+G,EAAA/N,EAAAzD,aAEAxB,IAAAgT,EAAAA,EAAA/G,EAAA,EACA+G,EAAA,EAAAA,EAAA/N,EAAAzD,OAAAwR,EACAA,GAAA/G,GAGAwH,EAAAxO,EAAAzD,OAAAwR,GACA,IAAAA,GAAAS,GAEA,IAAA3S,EAAAmL,EAAAnL,EAAAkS,EAAAlS,IAAA,CACA,IAAAkT,EAAAhD,EAAAlQ,GACA,QAAAd,IAAAgU,QAAAhU,IAAAiF,EAAAnE,GACA,MAEAgP,EAAAvC,eAAAC,EAAAvI,EAAAnE,KACA,IAAA8R,GACA5D,eAAAc,EAAAtC,EAAAvI,EAAAnE,IAEAmE,EAAAqH,SACA0H,EAAAnN,WAAAqJ,aAAAJ,EAAAkE,IAIAnN,EAAAqJ,aAAAJ,EAAAkE,QACAhU,IAAAuD,GAAAA,EAAAqQ,QACArQ,EAAAqQ,OAAA9D,EAAA,aAIA,IAAA1J,EAAAnB,EAAAgH,GACA,QAAAjM,IAAAoG,EAAA,CAEA0J,EAAAvC,eAAAC,EAAApH,GAKA,IAJA,IAAAwM,GACA5D,eAAAc,EAAAtC,EAAApH,GAGA,gBAAA2M,EAAA,CACA9G,EAAA,IAAAA,EAAAA,EAAA,EAAA+E,EAAAxP,OAAA,EAGA,QAAAxB,KAFAiU,EAAAjD,EAAA/E,IAQA,YALAhH,EAAAqH,UAAA,IAAArH,EAAAzD,SACAqF,EAAAkI,aAAAe,EAAAjJ,EAAAwM,wBACArT,IAAAuD,GAAAA,EAAA2Q,QACA3Q,EAAA2Q,OAAApE,KAKAmE,EAAAE,sBAAA,WAAArE,QACA9P,IAAAuD,GAAAA,EAAA2Q,QACA3Q,EAAA2Q,OAAApE,GAGA7K,EAAAqH,UAAArH,EAAAqH,SAAAkH,eAEA,GAAA,YAAAT,EAAA,CACA,IAAAkB,OACAjU,KADAiU,EAAAjD,EAAA,KAEAiD,EAAApN,WAAAkI,aAAAe,EAAAmE,QAEAjU,IAAAuD,GAAAA,EAAA2Q,QACA3Q,EAAA2Q,OAAApE,GAGA7K,EAAAqH,UAAArH,EAAAqH,SAAAkH,WAEAT,EAAA,SAEA,GAAA,WAAAA,EAAA,CACA,GAAA9N,EAAAqH,SAWA,OAVA,IAAAL,EACApF,EAAAkI,aAAAe,EAAAjJ,EAAAyM,kBAEAtC,EAAA/E,EAAA,GAAAkI,sBAAA,WAAArE,QAEA9P,IAAAuD,GAAAA,EAAA2Q,QACA3Q,EAAA2Q,OAAApE,QAGA7K,EAAAqH,SAAAkH,UAIA3M,EAAAwB,YAAAyH,QACA9P,IAAAuD,GAAAA,EAAA2Q,QACA3Q,EAAA2Q,OAAApE,UAlHA,GAAAkB,EAAA/E,GAAA,CACA,IAAAmI,GAAA,EACAC,EAAA,WACAD,IACAA,GAAA,EAEApD,EAAA/E,GAAA7G,SACAH,EAAAqH,UAAArH,EAAAqH,SAAAkH,iBAGAxT,IAAAuD,GAAAA,EAAA6B,OAEA7B,EAAA6B,OAAA4L,EAAA/E,GAAAoI,IACAhP,WAAAgP,EAAA,KAIAA,SAxGA,CAEA,IAAA,IAAAvT,EAAAmL,EAAAnL,EAAAkQ,EAAAxP,OAAAV,IACAkQ,EAAAlQ,GAAAsE,SAGA,GAAAH,EAAAqH,SACA,IAAAgI,EAAArP,EAAAqH,SAAAgI,QAEA,IAAA,IAAAxT,EAAAmL,EAAAnL,EAAAmE,EAAAzD,OAAAV,IAAA,CACA,IAAAgP,EAAAvC,eAAAC,EAAAvI,EAAAnE,IACAmE,EAAAqH,SACA,OAAAgI,EAAAC,MACA1N,EAAAkI,aAAAe,EAAAjJ,EAAAyM,kBACArO,EAAAqH,SAAAxK,IAAAuG,YAAAyH,GAEAjJ,EAAAwB,YAAAyH,IAEA,IAAA8C,GACA5D,eAAAc,EAAAtC,EAAAvI,EAAAnE,IAGAmE,EAAAqH,UAAArH,EAAAqH,SAAAkH,YAwLAgB,EAAA,SAAAC,EAAAhI,GACAvL,OAAAC,eAAAsT,EAAAhI,EAAA,CACArL,YAAA,EACAC,cAAA,EACAJ,MAAA,WACA,IAAA6O,OAAA9P,EACA0U,EAAA3U,KAAAyB,OAEA,GAAA,SAAAiL,EAAA,CACA,IAAAkI,EAAAzU,UAAA,GACA0U,EAAA1U,UAAA,GACA,GAAAyU,IAAAC,EAAA,OACA,IAAA3B,EAAA/S,UAAA,IAAA,EAMA,OALA4S,EAAA6B,EAAA,OAAAC,EAAA3B,IAEAnD,EAAAN,MAAA7F,UAAAvF,OAAA7D,MAAAR,KAAA,CAAA4U,EAAA1B,KACAlM,QAAA6N,EAAA,QACApF,MAAA7F,UAAAvF,OAAA7D,MAAAR,KAAA+P,GAIA,GAAA,SAAArD,EAAA,CACA,IAAA3L,EAAAZ,UAAA,GACA2U,EAAA3U,UAAA,GACA,GAAAY,IAAA+T,EAAA,OACA/B,EAAAhS,EAAA,OAAA+T,GACA/E,EAAA/P,KAAAe,GAGA,OAFAf,KAAAe,GAAAf,KAAA8U,QACA9U,KAAA8U,GAAA/E,GAIA,GAAA,YAAArD,EAAA,CAKA,GAJAxH,EAAAqH,UACArH,EAAAqH,SAAAwI,gBAGA5U,UAAA,GAAAsB,QAAAkT,GAAA,IAAAA,EAAA,CACA,IAAAK,EAAAL,EACAzQ,EAAA/D,UAAA,GAEA,IAAAY,EAAA,EAAAA,EAAA4T,GACAzQ,EAAAnD,KAAAf,KAAAe,GADAA,IAEAiU,IAOA,GAAA,IAAAA,EAAA,CACA,GAAA9Q,EAAAzC,SAAAkT,EAAA,OAOA,OALA5E,EAAA5P,UAAA,GAAA6Q,MAAA2D,IACA3N,QAAA2N,EAAA,GACA3U,KAAAqE,OAAA7D,MAAAR,KAAA+P,QAEA7K,EAAAqH,UAAArH,EAAAqH,SAAAkH,WAKA,GAAAuB,IAAAL,EAAA,CACA,IAAA,IAAAxU,UAAA,IACA4P,EAAA5P,UAAA,GAAA6Q,MAAAjQ,IACAiG,QAAAjG,EAAA4T,EAAA5T,GACA0O,MAAA7F,UAAAvF,OAAA7D,MAAAR,KAAA+P,GAEA7K,EAAAuO,QAAA1S,EAAA4T,GAEA,QAKA,GAAA,IAAAA,EAGA,OAFAlF,MAAA7F,UAAAxG,KAAA5C,MAAAR,KAAAG,UAAA,SACA4S,EAAA,EAAA,eAKAhD,EAAA,CAAA,EAAA4E,GAwBA,OAvBAlF,MAAA7F,UAAAxG,KAAA5C,MAAAuP,EAAA5P,UAAA,IACAsP,MAAA7F,UAAAvF,OAAA7D,MAAAR,KAAA+P,IAGA,IAAA5P,UAAA,IAAA0S,GACAE,EAAA,EAAA,SACAA,EAAA,EAAA,iBAMA/S,KAAAyB,OAAAkT,GACA5B,EAAA/S,KAAAyB,OAAA,cAAAkT,GAGAzP,EAAAuO,QAAA,EAAAzT,KAAAyB,SAIAyD,EAAAqH,UACArH,EAAAqH,SAAA0I,QAEAjV,KAGA,GAAA,WAAA0M,GAAA,IAAAvM,UAAA,SAAAF,IAAAE,UAAA,GAEA,OADA4S,EAAA,EAAA,SACAtD,MAAA7F,UAAAvF,OAAA7D,MAAAR,KAAAG,WAMA,GAHAsP,MAAA7F,UAAA8C,KACAqD,EAAAN,MAAA7F,UAAA8C,GAAAlM,MAAAR,KAAAG,YAEA,QAAAuM,EACAqG,EAAA/S,KAAAyB,OAAA,eAEA,GAAA,SAAAiL,EACAqG,EAAA4B,EAAA,eAEA,GAAA,UAAAjI,EACAqG,EAAA,EAAA,eAEA,GAAA,WAAArG,EAAA,CACA,GAAA,IAAAvM,UAAA,SAAAF,IAAAE,UAAA,GACA,OAAA4P,EAGA,IAAAmF,EAAA/U,UAAA,GACA+U,EAAA,IAAAA,EAAAP,EAAAO,GAEA,IAAAC,EAAAhV,UAAA,GACAgV,GAAA,IAAAA,IAAAA,EAAAnV,KAAAyB,QAEA,IAAAV,EAAAoU,EAAA,EAAApU,GAAA,EAAAA,IACAgS,EAAAmC,EAAAnU,EAAA,UAGA,GAAAZ,UAAAsB,QAAA,EAAA,CACA0T,EAAAhV,UAAAsB,OAAA,EAGAyT,GAAAlV,KAAAyB,SACAyT,EAAAlV,KAAAyB,OAAA,GAEA,IAAAV,EAAA,EAAAA,EAAAoU,EAAApU,IACAgS,EAAAmC,EAAAnU,EAAA,oBAKA,YAAA2L,EACAqG,EAAA,EAAA,WAEA,gBAAArG,EACAqG,EAAA5S,UAAA,GAAA,SAAAA,UAAA,IAEA,gBAAAuM,GACAqG,EAAA5S,UAAA,IAAA,EAAA,eAEA,OAAA4P,MAKAjJ,GAAAA,EAAA3B,UAAA2N,SAAA,4BACA5N,EAAAqH,SACArH,EAAAqH,SAAA,GAGArH,EAAAqH,SAAAxK,IAAAkE,EAEAa,EAAAqJ,aAAA1C,EAAA1H,KAAA4M,EAAA,IACA7S,GAAA4B,SAAA0T,eAAAC,OAAAnQ,EAAAsN,EAAA1L,GACA2G,EAAA1H,KAAAV,UAGA,IAAA,IAAAtE,EAAA,EAAAA,EAAA0R,EAAAhR,OAAAV,IACA0T,EAAAvP,EAAAuN,EAAA1R,IAUAC,eAAAkE,EAAA,UAAA,SAAAgH,EAAAzK,EAAAR,QACAhB,IAAAiM,GAAAA,EAAA9L,cAAA+B,QACAlB,EAAAiL,EACAA,EAAA,EACAzK,EAAAyD,EAAAzD,aAEAxB,IAAAwB,EAAAA,EAAAyK,EAAA,EACAzK,EAAArB,cAAA+B,QACAlB,EAAAQ,EACAA,EAAAyK,EAAA,GAEAzK,EAAA,EAAAA,EAAAyD,EAAAzD,OAAAA,EACAA,GAAAyK,EAGA,IAAAwH,EAAAxO,EAAAzD,OAAAA,EACAiS,EAAA,IAAAjS,GAAAiS,GAEA,IAAA,IAAA3S,EAAAmL,EAAAnL,EAAAU,EAAAV,IAAA,CACA,IAAAuU,EAAApQ,EAAAqQ,WAAAxU,GAGA,QAAAd,IAAAqV,EAAA,CACApQ,EAAAsQ,YAAAzU,GACA,MAGA,IAAA,IAAA8R,EACA3N,EAAAuQ,YAAA1U,QACA,IAAA,IAAAsO,kBAAAiG,EAAA7H,EAAAxM,EAAAiE,EAAAnE,IACA,cAGAd,IAAAuD,GAAAA,EAAAqQ,QACArQ,EAAAqQ,OAAAyB,EAAA,cAIA,IAAAI,EAAA,KACA,GAAAxQ,EAAAqH,SAAA,CACAmJ,EAAAxQ,EAAAqH,SAAAxK,IAAA6Q,SACA,IAAA+C,EAAAzQ,EAAAqH,SAAAqJ,QAAApB,MAEAxT,eAAAkE,EAAA,aAAA,SAAAgH,GACA,GAAA,OAAAwJ,EAAA,CACA,IAAAG,OAAA5V,EACA,GAAAiM,EAAAhH,EAAAqH,SAAAC,UACAqJ,EAAAH,EAAAxJ,OACA,CACAA,GAAAhH,EAAAqH,SAAAC,UACA,IAAAsJ,EAAAhP,EAAAiP,kBAAA,EAGAF,EADA3J,GAAA4J,EACAnD,EAAAzG,EAAA,GAEAwJ,EAAAxJ,EAAA4J,EAAA5Q,EAAAqH,SAAAC,WAGA,OAAAqJ,IAAAF,EACAE,OACA,EAGA,OAAAlD,EAAAzG,MAIA8J,WAAA,SAAAtJ,EAAAe,EAAA5C,EAAA2H,EAAA1L,GACA,IAAAmP,EAAApL,EAAA5G,MAAA,QACAoM,EAAA4F,EAAA,GACApD,EAAA/L,EAAA3B,UAAA2N,SAAA,iBAEA,IAAAxQ,KAAAwH,KAAA4C,GACA,OAAA/D,QAAAQ,MAAA,0CAAAuD,EAAA,kBAAAe,GAEA,IAAAyI,EAAA5T,KAAAwH,KAAA4C,GAAAuJ,EAAA,IACA,QAAAhW,IAAAiW,GAWA,GANAzI,EAAAoB,aAAA,eAAAoH,EAAA,IAGA/L,kBAAAuD,EACAA,EAAAnL,KAAA6T,kBAAA1I,EAAA4C,EAAA3D,GAEA,IAAAuJ,EAAAxU,OAAA,CAIA,IAHA,IAAAwE,EAAA/F,SAAAuF,cAAA,OACAmH,EAAAtK,KAAAwH,KAAA4C,GAEA3L,EAAA,EAAAA,EAAAmV,EAAAzU,OAAAV,IAAA,CACA,IAAAuU,EAAA9H,eAAAC,EAAAyI,EAAAnV,IACAkF,EAAAqC,YAAAgN,IAEA,IAAAzC,GACA5D,eAAAqG,EAAA7H,EAAAyI,EAAAnV,IA0BA,QAtBAd,IAAA2M,EAAAwJ,cACAC,uBAAAzJ,QAEA3M,IAAA2M,EAAAwJ,aAAAH,EAAA,MACArJ,EAAAwJ,aAAAH,EAAA,IAAA,MAEA9U,OAAAC,eAAAwL,EAAAqJ,EAAA,GAAA,CACA5U,YAAA,EACAC,cAAA,EACAgV,IAAA,WACA,OAAAJ,GAEAK,IAAA,SAAAtE,GACA,OAAA,IAAAA,EAAAxQ,OACAyU,EAAA7R,OAAA,GACA6R,EAAA3L,QAAA0H,GAAA,MAIAK,UAAA7E,EAAAyI,EAAA7F,EAAA3D,EAAAuJ,EAAA,GAAAzD,EAAA1L,EAAAb,QAGAhG,IAAAiW,EAAA3J,SAAA,CAEA,IADA,IAAAqG,EAAA3M,EAAA2M,SACA4D,GAAAzV,EAAA,EAAA6R,EAAAnR,QAAAV,EAAAyV,EAAAzV,IACA+F,EAAAwB,YAAAsK,EAAA,IAGA3M,EAAAZ,SACAY,EAAA,YApDA0C,QAAAQ,MAAA,wBAAA8M,EAAA,GAAA,0CAAAvJ,EAAA,MAyDA+J,mBAAA,SAAAvP,GACA5E,KAAAwH,KAAA5C,EAAAtD,OAAA,aAAAsD,EAAAtD,OAAA,eAAAsD,EAAAtD,OAAA1C,OAGAwV,UAAA,SAAAlE,GAGA,IAFA,IAAAzC,EAAA1N,EAAA,kBAAAmQ,GAEAzR,EAAA,EAAAA,EAAAgP,EAAAtO,OAAAV,IAAA,CACA,IAAA2B,EAAAqN,EAAAhP,GACAgI,EAAAjJ,GAAA2J,WAAA6C,UAAA5J,GACA,IAAAqG,EAAA,OAEA,IAAA4N,EAAAjU,EAAA2J,aAAA,YAGA,QAAApM,WAAAqC,KAAAwH,KAAAf,GAAA4N,GAEA,YADAhO,QAAAQ,MAAA,uCAAAJ,EAAA,OAAA4N,EAAA,MAIAjU,EAAA,cAAAiU,EACAjU,EAAA,YAAAqG,EACArG,EAAAmM,aAAA,aAAA,IACAnM,EAAAkU,gBAAA,YAGA,UAAAlU,EAAAuE,SAAA,aAAAvE,EAAAuE,QACA5E,EAAAiB,GAAAZ,EAAA,QAAA+T,oBAGApU,EAAAiB,GAAAZ,EAAA,SAAA+T,sBAIAI,oBAAA,EAiEA,SAAAC,eAAApU,GAEA,IADA,IAAAqN,EAAA1N,EAAA,kBAAAK,GACA3B,EAAA,EAAAA,EAAAgP,EAAAtO,OAAAV,IACAgW,mBAAAhH,EAAAhP,GAAAsL,aAAA,mBAGA,IAAA3J,EAAAsU,aAAA,kBAGAD,mBAAArU,EAAA2J,aAAA,kBAzEA/J,KAAAoH,KAAA,SAAA8I,EAAAyE,GACA,IAAAJ,oBAAArE,EAAA,CACAqE,oBAAA,EACAvR,WAAA,WACAuR,oBAAA,GACA,IAEArE,IAAAA,EAAAtS,SAAAuG,MACAnE,KAAA4U,gBAAAD,GAAA3U,KAAA0G,gBAAAwJ,GAAAyE,GACAP,UAAAlE,GAGA,IADA,IAAAzC,EAAA1N,EAAA,mBAAAmQ,GACAzR,EAAA,EAAAA,EAAAgP,EAAAtO,OAAAV,IAAA,CACA,IAAA2B,EAAAqN,EAAAhP,GACA2B,EAAAG,cAKA,QAHA5C,IAAAgX,GACAvU,EAAAyC,UAAAE,OAAA,iBAEA3C,EAAAoE,WAAA3B,UAAA2N,SAAA,mBAAA,CACA,IAAAqE,EAAAjX,SAAAuF,cAAA/C,EAAAuE,SACAkQ,EAAAhS,UAAAC,IAAA,kBACA,IAAAoP,EAAA2C,EAAAzJ,WAAA,GAEAyJ,EAAAhS,UAAAC,IAAA,WAEA1C,EAAAoE,WAAAsN,sBAAA,aAAA+C,GAEA3C,EAAArP,UAAAC,IAAA,SAEA1C,EAAAoE,WAAAsN,sBAAA,YAAAI,GAGA,IAAA4C,EAAArX,OAAAsX,iBAAA3U,GACA4U,EAAAC,WAAAH,EAAA,WAAAG,WAAAH,EAAA,cACAA,EAAA,KAGAE,EAAAE,KAAAC,KAAA/U,EAAAgV,aAAAJ,GAGA,IAAAK,EAAAjV,EAAAkV,mBACA,OAAAD,GAAAjV,IAAAiV,IACAA,GAAA,GAEA,IAAAE,EAAAnV,EAAA0J,uBACA,OAAAyL,GAAAnV,IAAAmV,IACAA,GAAA,GAEA,IAAAhN,EAAAnI,EAAA2J,aAAA,kBACA3J,EAAAkU,gBAAA,kBACA,IAAAnN,EAAA3J,GAAA2J,WAAA6C,UAAA5J,GAGA,GAAA,2BAAA2I,KAAA3I,EAAA6I,WACA,KAAA,yCAEAyK,WAAAvM,EAAA/G,EAAAmI,EAAA2H,EAAA9P,EAAAoE,YACApE,EAAA2C,YAkBAvF,GAAA,WACA,IAAAgY,EAAA,SAAAC,GACA,IAAA9Q,EAAA8Q,EAAAC,SACA,SAAA/Q,GAAA,UAAAA,GAAA,aAAAA,GAEA6P,eAAAiB,IAGA,GAAA,mBAAAE,kBAAAA,iBAAArO,UAAAsO,QAAA,CACA,IAAAC,EAAA,SAAAC,GACAA,EAAAC,aAAArG,QAAA8F,IAGA,IAAAG,iBAAA,SAAAK,GACArO,gBACAqO,EAAAtG,QAAAmG,KAGAD,QAAAhY,SAAAuG,KAAA,CAAA8R,WAAA,EAAAC,SAAA,SAGAtY,SAAAuG,KAAA5C,iBAAA,iBAAA,SAAAqD,GACA+C,gBACA6N,EAAA5Q,EAAAtD,YAKA,IAAAmT,mBAAA,SAAAzK,GACA,IAAApI,EAAA5B,KAAAwH,KAAAwC,GACA,QAAArM,IAAAiE,EAAA,CAGA,IAAAuU,EAAAvU,EAAAkS,aACArG,EAAA,KACA,IAAA,IAAApP,KAAA8X,EAGA,UAFAA,EAAA9X,QAEAV,IAAAiE,EAAAvD,IAAA,OAAAuD,EAAAvD,GAAA,CAGA,GAAAuD,EAAAvD,GAAAP,cAAA+B,QACA+B,EAAAvD,GAAAP,cAAAsY,QACAxU,EAAAvD,GAAAP,cAAAuY,aAGA,CAAA,GAAAzU,EAAAvD,GAAAP,cAAAqP,MAWA,SAVAvL,EAAAvD,GAAA4L,WACArI,EAAAvD,GAAA4L,SAAAqM,iBACA1U,EAAAvD,GAAA4L,UAIAwD,EAAA7L,EAAAvD,GAAA0D,OAAA,iBACAH,EAAAvD,GACAuD,EAAAvD,GAAAoP,EAIA,QAAA9P,IAAAkB,OAAA0X,yBAAA3U,EAAAvD,GAAA,CAIAoP,EAAA7L,EAAAvD,UACAuD,EAAAvD,GACAuD,EAAAvD,GAAAoP,MAIA+I,UAAA,eACAC,WAAA,SAAArW,EAAAkK,EAAA2F,EAAAyG,GACAtW,aAAAuW,OACAvW,EAAAA,EAAA,IAGAwH,kBAAAxH,EAGAA,EAAAmM,aAAA,cAAA0D,GACA,IAAAjG,EAAAxM,GAAA2J,WAAA6C,UAAA5J,GAGA,GAAA,SAAAsW,IAAAA,EAGA,IAFA,IAAAE,EAAA,GAEAnY,EAAA,EAAAA,EAAA2B,EAAA+L,WAAAhN,OAAAV,IAAA,CACA,IAAAoY,EAAAzW,EAAA+L,WAAA1N,GAAA2L,MAGA,IAAAoM,UAAAzN,KAAA3I,EAAA2J,aAAA8M,MAGAD,EAAAC,GAAAzW,EAAA2J,aAAA8M,GACAzW,EAAAkU,gBAAAuC,IAKA,GAAA,SAAAH,IAAAA,EACA,IAAAI,EAAA1W,EAAAgL,WAAA,GAAA2L,UAEA,IAAAC,EAAA,WACA,GAAA,SAAAN,IAAAA,EACA,IAAA,IAAAtM,KAAAwM,EACA,IAAA,IAAAA,EAAAxM,GAAAxG,QAAAqM,GAAA,CAGA,IAAAxC,EAAAK,WAAA8I,EAAAxM,GAAAE,GAAA,EAAAN,GACA,UAAAI,EACAhK,EAAAxB,MAAA6O,EAEArN,EAAAmM,aAAAnC,EAAAqD,GACA,MAIA,GAAA,SAAAiJ,IAAAA,EAAA,CACAjJ,EAAAoB,iBAAAiI,EAAAxM,GAAA,EAAAN,GACAyD,EAAAK,WAAAL,EAAAnD,GAAA,EAAAN,GACA5J,EAAAyD,YAAA,GACAzD,EAAA0D,mBAAA,aAAA2J,KAIA,QAAA9P,IAAA2M,EAAA2F,GACA,KAAA,aAAAA,EAAA,uBAAAjG,EAAA,UAMA,QAHArM,IAAA2M,EAAAwJ,cACAC,uBAAAzJ,QAEA3M,IAAA2M,EAAAwJ,aAAA7D,GAAA,CAKA,IAAAgH,EAAA3M,EAAA2F,GACApR,OAAAC,eAAAwL,EAAA2F,EAAA,CACAlR,YAAA,EACAC,cAAA,EACAgV,IAAA,WACA,OAAAiD,GAEAhD,IAAA,SAAAtE,GACAsH,EAAAtH,EAGA,IADA,IAAA/N,EAAA0I,EAAAwJ,aAAA7D,GACAxR,EAAA,EAAAA,EAAAmD,EAAAzC,OAAAV,IACAmD,EAAAnD,KAGA,OAAAwY,KAIA3M,EAAAwJ,aAAA7D,GAAA,CAAA+G,QAvBA1M,EAAAwJ,aAAA7D,GAAAnP,KAAAkW,IA0BAhX,KAAAkX,YAAA,SAAA9W,EAAAsW,GACA,IAAA1M,EAAAxM,GAAA2J,WAAA6C,UAAA5J,GACAqG,EAAAzG,KAAAwH,KAAAwC,GACA,IAAAvD,EAAA,OAAAJ,QAAAQ,MAAA,aAAAmD,EAAA,gCAAA5J,GAEA,IAAAqD,EAAArD,EAAA6I,UAGA,GAAA,2BAAAF,KAAAtF,GACA4C,QAAAQ,MAAA,8CADA,CAKA,SAAA6P,IACAjT,EAAAA,EAAAwE,QAAA7H,EAAA2W,UAAA,KAMA,IAJA,IAAAI,EAAA,kBAGAjJ,EAAAlO,KAAAqK,UAAA5D,GACAhI,EAAAyP,EAAA/O,OAAA,EAAAV,GAAA,EAAAA,IACAgI,EAAAyH,EAAAzP,cAAAV,UACAmQ,EAAAnM,OAAAtD,EAAA,GAKA,IAFA,IACA+Q,EADArB,EAAAjG,OAAA1K,GAAA6B,MAAAG,UAAA,IAAA0O,EAAA,IAAA1Q,GAAA6B,MAAAE,YAAA,MAAA,KACA6X,EAAA,KACA,QAAA5H,EAAA2H,EAAArO,KAAArF,KACA,KAAA,QAAA2T,EAAAjJ,EAAArF,KAAA0G,EAAA,MACAiH,WAAArW,EAAAqG,EAAA2Q,EAAA,GAAAV,KAKA1W,KAAA6T,kBAAA,SAAA3D,EAAAnC,EAAA3D,GACA,IAAAiN,EAAAnH,EAAAjH,UAGAoO,EAAAA,EAAA1V,MAAA,IAAAoM,GAAAlJ,KAAA,WAIA,IAAAwJ,GADAgJ,EAAAxI,iBAAAwI,EAAA,KAAAtJ,EAAA3D,EAAA,YACA,GACA1B,EAAA2O,EAAA,GACAA,EAAAvJ,WAAAuJ,EAAA,GAAA,KAAAtJ,EAAA3D,EAAA,UAAAiE,GAwDAgJ,EAAAtX,EAAAH,aAAAyX,GAAA,GACA,IAAA5B,EAAAzV,KAAA0G,gBAAA2Q,GAAA,GAAAC,UACAC,EAAA,GAEA,SAAAC,EAAAC,GAIA,IAHA,IAAAb,EAAAa,EAAAtL,WACA5B,EAAA,GACAmN,EAAA,EACAtL,EAAA,EAAAA,EAAAwK,EAAAzX,OAAAiN,IAAA,CACA,IAAAkB,EAAAsJ,EAAAxK,GAAAxN,MAAA+C,MAAA,QACA,GAAA,IAAA2L,EAAAnO,OAAA,CACA,IAAAd,EAAA,CACA+L,KAAAwM,EAAAxK,GAAAhC,KACAxL,MAAAgY,EAAAxK,GAAAxN,OAGA8Y,EAAA,GAMA,MALApK,EAAAsJ,EAAAxK,GAAAxN,MAAAqJ,QAAA,gBAAA,SAAA4D,EAAAC,GAEA,OADA4L,EAAA5W,KAAAsV,OAAAtK,IACA,OAGA,IAAA4L,EAAAvY,OACAd,EAAAuN,OAAA8L,EAAA,GAEArZ,EAAA4N,YAAAyL,EAEAnN,EAAAzJ,KAAAzC,IAGA,OAAAkM,EAGA,IAAAV,EAAA2N,EAAAH,GACA,IAAAxN,EAAA1K,QACAoY,EAAAzW,KAAA,CACA4K,SAAA,EACAD,QAAA,CAAA,GACAU,WAAAtC,IAGA,IAAA,IAAApL,EAAA,EAAAA,EAAAgX,EAAAtW,OAAAV,IAAA,CACA,IAAAgP,EAAA,CACA/B,SAAA+J,EAAAhX,GAAAiN,UAGA,GAAA,IAAA+B,EAAA/B,SACA+B,EAAAtB,WAAAqL,EAAA/B,EAAAhX,IACAgP,EAAAhC,QAAA1L,EAAAqE,YAAAqR,EAAAhX,IAAA,QAGA,GAAA,IAAAgP,EAAA/B,SAAA,CACA,IAAAqL,EAAAtB,EAAAhX,GAAAoF,YACA6T,EAAA,GAOA,GALAX,EAAA9O,QAAA,kBAAA,SAAA4D,EAAAC,GACA4L,EAAA5W,KAAAsV,OAAAtK,MAIA,IAAA4L,EAAAvY,OAAA,CACA4X,EAAAA,EAAApV,MAAA,iBACA,IAAA,IAAAyK,EAAA,EAAAA,EAAA2K,EAAA5X,OAAAiN,IACA2K,EAAA3K,GAAAvE,gBAAAkP,EAAA3K,IAAApE,OAEAyN,EAAAhX,GAAAoF,YAAAkT,EAAAjH,QAEA,IAAA3P,EAAAsV,EAAAhX,GAAA+F,WACA5D,EAAA6U,EAAAhX,GAAAmC,YAGA+W,EAAA,KACA,IAAAD,EAAAvY,QAAA,IAAAsW,EAAAhX,GAAAoF,YAAA1E,OACAwY,EAAA5X,EAAAqE,YAAAqR,EAAAhX,IAAA,GACA,OAAAgX,EAAAhX,GAAAoC,kBACA8W,EAAA5X,EAAAqE,YAAAqR,EAAAhX,GAAAoC,iBAAA,IAGA,IAAA+W,EAAA,GACA,IAAAxL,EAAA,EAAAA,EAAAsL,EAAAvY,OAAAiN,IAAA,CACA,IAAAyL,EAAAja,SAAAka,cAAA,IASA,GARA3X,EAAAuM,aAAAmL,EAAAjX,GACAgX,EAAA9W,KAAA,CACA4K,UAAA,EACAO,YAAAyL,EAAAtL,GACAF,UAAAyL,EACAlM,QAAA1L,EAAAqE,YAAAyT,GAAA,KAGAd,EAAA3K,GAAA,CACA,IAAA2L,EAAAna,SAAAoa,eAAAjB,EAAA3K,IACAjM,EAAAuM,aAAAqL,EAAAnX,GAGAwL,EAAA,EAAAsL,EAAAvY,SACAwY,EAAA5X,EAAAqE,YAAA2T,GAAA,KAMA,GADA5K,MAAA7F,UAAAxG,KAAA5C,MAAAqZ,EAAAK,GACA,KAAAnC,EAAAhX,GAAAoF,YAAA,CACA4R,EAAAhX,GAAAsE,SACA,IAAAqJ,EAAA,EAAAA,EAAAwL,EAAAzY,OAAAiN,IAAA,CACA,IAAAxK,EAAAgW,EAAAxL,GAAAX,QACA7J,EAAAA,EAAAzC,OAAA,KAEA,SAEA,IAAA,IAAAsW,EAAAhX,GAAAoF,YAAAoU,OAAA,cACA,SAIAP,EAAA,GAMA,MALAX,EAAAtB,EAAAhX,GAAAoF,YAAAoE,QAAA,iBAAA,SAAA4D,EAAAC,GAEA,OADA4L,EAAA5W,KAAAsV,OAAAtK,IACA,OAGA,IAAA4L,EAAAvY,OACAsO,EAAA7B,OAAA8L,EAAA,IAEAjK,EAAA7O,MAAA6W,EAAAhX,GAAAoF,YACA4J,EAAAxB,YAAAyL,GAGAjK,EAAAhC,QAAA1L,EAAAqE,YAAAqR,EAAAhX,IAAA,GAGA8Y,EAAAzW,KAAA2M,GAGA,IAAAR,EA3LA,WAIA,IAHA,IAAAiL,EAAAhQ,OAAA,iBAAA6F,EAAA,wCAAA,KACAT,EAAA,GAEA7O,EAAA,EAAAA,EAAA4P,EAAAlP,OAAAV,IAAA,CACA,IAAA+M,EAAA6C,EAAA5P,GAGA,GAAA,IAAA+M,EAAAtF,KAAA,CAcA,GAAA,IAAAsF,EAAAtF,KAAA,CACA,IAAAiS,EAAA3M,EAAAP,GAAApG,KAAA,KAEA,OAAA2G,EAAA7B,YACAwO,GAAA,IAAA3M,EAAA7B,WAEA,IAAA,IAAAyC,EAAA,EAAAA,EAAAZ,EAAA9B,OAAAvK,OAAAiN,IACA+L,GAAA3M,EAAA9B,OAAA0C,GAAAvH,KAAA,UAGA,IAAA2G,EAAAtF,OACAiS,EAAA3M,EAAAR,KAAA,KAEAmN,EAAAA,EAAAlQ,QAAA,kDAAA,SAAA4D,EAAAC,GACA,OAAApD,EAAAoD,MAGAnK,MAAA,KAAAkD,KAAA,KAAAoD,QAAAiQ,EAAA,SAAArM,EAAAC,GACAA,EAAAA,EAAA7D,QAAA,eAAA,SAAAmQ,EAAAC,GACA,MAAA,IAAAA,SAGA1a,IAAA2P,EAAAxB,GAAAwB,EAAAxB,GAAA,CAAArN,IACA,IAAA6O,EAAAxB,GAAAlI,QAAAnF,IACA6O,EAAAxB,GAAAhL,KAAArC,UArCA+M,EAAAR,KAAA,GAAArJ,MAAA,KAAAkD,KAAA,KAAAoD,QAAAiQ,EAAA,SAAArM,EAAAC,GACAA,EAAAA,EAAA7D,QAAA,eAAA,SAAAmQ,EAAAC,GACA,MAAA,IAAAA,SAGA1a,IAAA2P,EAAAxB,GAAAwB,EAAAxB,GAAA,CAAArN,IACA,IAAA6O,EAAAxB,GAAAlI,QAAAnF,IACA6O,EAAAxB,GAAAhL,KAAArC,KAkCA,OAAA6O,EAyIAgL,GACA/N,EAAA1L,OAAA0L,KAAA0C,GACAsL,EAAA,GACA,IAAA9Z,EAAA,EAAAA,EAAA8L,EAAApL,OAAAV,IACA8Z,EAAAzX,KAAA,CAAAyJ,EAAA9L,GAAA8L,EAAA9L,GAAAkD,MAAA,OAGA,MAAA,CACA8B,KAAA4T,EACAxM,MAAAwD,EACAhD,UAAAkM,EACAtK,eAAAA,EACAH,eAAAyL,IAIA,IAAAC,SAAA,CAAA,OAAA,OAAA,QAAA,OAAA,OAAA,SAAA,SAAA,UAmGA,SAAAzE,uBAAAzJ,QACA3M,IAAA2M,EAAAwJ,cAIAjV,OAAAC,eAAAwL,EAAA,eAAA,CACAtL,cAAA,EACAD,YAAA,EACA0Z,UAAA,EACA7Z,MAAA,KA3GAoB,KAAA0G,gBAAA,SAAAwJ,EAAAwI,GAIA,IAHA,IAAA3T,GAAAmL,GAAAtS,SAAAuG,MAAAY,WAEA0I,EAAA,GACAhP,EAAAsG,EAAA5F,OAAA,EAAAV,GAAA,EAAAA,IAAA,CACA,IAAAgZ,EAAA1S,EAAAtG,GAEA,QAAAd,IAAA+a,IAAA,IAAAF,SAAA5U,QAAA6T,EAAA/B,UAGA,GAAA,IAAA+B,EAAA/L,SAAA,CACA,IAAAkL,EAAAa,EAAAtL,WAGA,GAAAyK,EAAA,gBAAAA,EAAA,mBAAAA,EAAA,gBAAA,SAEA,IAAA,IAAAxK,EAAA,EAAAA,EAAAwK,EAAAzX,OAAAiN,KACA,IAAAwK,EAAAxK,GAAAxN,MAAAgF,QAAA,aACAjG,IAAA+a,GACAjB,EAAAlL,aAAA,gBAAA,YACAkB,EAAA3M,KAAA2W,IAIAtK,MAAA7F,UAAAxG,KAAA5C,MAAAuP,EAAAzN,KAAA0G,gBAAA+Q,EAAAiB,SAGA,GAAA,IAAAjB,EAAA/L,SAAA,CAGA,GAFA+L,EAAA5T,YAAA4T,EAAA5T,YAEA,IAAA4T,EAAA5T,YAAA1E,OAAA,CACAsY,EAAA1U,SACA,SAGA,IAAA,IAAA0U,EAAAkB,UAAA/U,QAAA,MAAA,CACA,QAAAjG,IAAA+a,EAAA,CACAjB,EAAAjT,WAAA+H,aAAA,gBAAA,IAGA,IAAAH,EAAA,EAAAA,EAAAqB,EAAAtO,OAAAiN,IACAqB,EAAArB,GAAAkI,gBAAA,iBAGA7G,EAAA3M,KAAA2W,EAAAjT,YACA,MAGAiJ,EAAA3M,KAAA2W,KAKA,OAAAhK,GAGAzN,KAAA4U,gBAAA,SAAAa,EAAAd,GACA,IAAA,IAAAvI,EAAA,EAAAA,EAAAqJ,EAAAtW,OAAAiN,IAAA,CAEA,IAAAZ,EAAA5D,kBAAA6N,EAAArJ,GAEA3F,EAAAjJ,GAAA2J,WAAA6C,UAAAwB,GACAA,EAAA8I,gBAAA,sBAEA3W,IAAAgX,GACAnJ,EAAA3I,UAAAE,OAAA,iBAEA,IAAAuH,EAAAtK,KAAAwH,KAAAf,GAQA,GANA6D,IACAA,EAAAsO,MAAAnS,IAKA,2BAAAsC,KAAAyC,EAAAuL,WAGA,OAFA1Q,QAAAQ,MAAA,+CACAR,QAAA2C,IAAApB,kBAAAwD,WAAA,IAIAI,EAAAkJ,aAAA,YACA1U,KAAAkX,YAAA1L,EAAAA,EAAAzB,aAAA,YAGA,IAAA0D,EAAAoB,iBAAArD,EAAAuL,UAAAzM,GAAA,EAAA7D,GACA+E,EAAAuL,UAAAjJ,WAAAL,EAAAnD,GAAA,EAAA7D,GAGA,IADA,IAAAmQ,EAAAnB,EAAArJ,GAAAD,WACA1N,EAAA,EAAAA,EAAAmY,EAAAzX,OAAAV,IACA,IAAA,IAAAmY,EAAAnY,GAAAG,MAAAgF,QAAA,MAAA,CACA,IAAAiT,EAAAD,EAAAnY,GACAoY,EAAAjY,MAAAkP,WAAA+I,EAAAjY,MAAA0L,GAAA,EAAA7D,MAz3DA,GCVA,mBAAA5H,OAAA0O,QACA1O,OAAAC,eAAAD,OAAA,SAAA,CACAD,MAAA,SAAA0C,EAAAuX,GAEA,GAAA,MAAAvX,EACA,MAAA,IAAAwX,UAAA,8CAEA,IADA,IAAAvG,EAAA1T,OAAAyC,GACAsI,EAAA,EAAAA,EAAA/L,UAAAsB,OAAAyK,IAAA,CACA,IAAAmP,EAAAlb,UAAA+L,GACA,GAAA,MAAAmP,EACA,IAAA,IAAAC,KAAAD,EACAla,OAAAyI,UAAA2R,eAAAC,KAAAH,EAAAC,KACAzG,EAAAyG,GAAAD,EAAAC,IAIA,OAAAzG,GAEAkG,UAAA,EACAzZ,cAAA,SAIArB,IAAAwb,QAAA7R,UAAAvE,aAAApF,IAAAyb,cAAA9R,UAAAvE,aAAApF,IAAA0b,aAAA/R,UAAAvE,QAgBA,CAAAoW,QAAA7R,UAAA8R,cAAA9R,UAAA+R,aAAA/R,WAdAoI,QAAA,SAAA3L,GACAA,EAAAkV,eAAA,WAGApa,OAAAC,eAAAiF,EAAA,SAAA,CACA/E,cAAA,EACAD,YAAA,EACA0Z,UAAA,EACA7Z,MAAA,WACA,OAAAlB,KAAA8G,YACA9G,KAAA8G,WAAA8U,YAAA5b,WAOAyb,QAAA7R,UAAAhH,UACA6Y,QAAA7R,UAAAhH,QAAA6Y,QAAA,UAAAI,iBACAJ,QAAA,UAAAK,oBAAAL,QAAA,UAAAM,mBACAN,QAAA,UAAAO,kBAAAP,QAAA,UAAAQ,uBACA,SAAA/T,GAGA,IAFA,IAAAtF,GAAA5C,KAAAE,UAAAF,KAAAkc,eAAA9Z,iBAAA8F,GACAnH,EAAA6B,EAAAnB,SACAV,GAAA,GAAA6B,EAAAyD,KAAAtF,KAAAf,OACA,OAAAe,GAAA,IAIAob,SAAAvS,UAAAoI,UACAmK,SAAAvS,UAAAoI,QAAA,SAAAxO,EAAA4Y,GACAA,EAAAA,GAAArc,OACA,IAAA,IAAAgB,EAAA,EAAAA,EAAAf,KAAAyB,OAAAV,IACAyC,EAAAgY,KAAAY,EAAApc,KAAAe,GAAAA,EAAAf,QAKAD,OAAAsc,SAAAC,SACAvc,OAAAsc,SAAAC,OAAAvc,OAAAsc,SAAAE,SAAA,KAAAxc,OAAAsc,SAAAG,UAAAzc,OAAAsc,SAAAI,KAAA,IAAA1c,OAAAsc,SAAAI,KAAA,KChEA3c,GAAA2J,WAAA,IAAA,WACA,IAAAnH,KAAAtC,KACAsC,KAAAyH,QAAA,GACAzH,KAAAoa,OAAA,GAEApa,KAAAmK,IAAA,SAAAC,EAAA5E,GACAxF,KAAAyH,QAAA2C,GAAA5E,GAGAxF,KAAAqa,WAAA,SAAAja,EAAAoF,GACA,IAAAiB,EAAAjJ,GAAA2J,WAAA6C,UAAA5J,GAEA,IAAAqG,EACA,KAAA,oCAEA,IAAA6T,EAAAla,EAAA2J,aAAA,gBACA,GAAAuQ,EAKA,IAAAC,EAAAna,OAHA,QADAma,EAAAxa,EAAAI,OAAAC,EAAA,qBAEAka,EAAAC,EAAAxQ,aAAA,iBAIA,IAAAuQ,EACA,OAAA9U,EAAAA,EAAAhI,GAAAiJ,MAAAe,KAAAf,IAAA,GACAjJ,GAAAiJ,MAAAe,KAAAf,GAIA,IAAA+T,EAAA,EAIA,OAHAF,IACAE,EAAAza,EAAAS,QAAA+Z,EAAA,kBAAApb,QAEAqG,EAAAA,EAAAhI,GAAAiJ,MAAAe,KAAAf,GAAA6T,GAAAE,GACAhd,GAAAiJ,MAAAe,KAAAf,GAAA6T,GAAAE,IAGAxa,KAAAgK,UAAA,SAAA5J,GACA,IAAAgK,OAAAzM,EAUA,YAHAA,KALAyM,EADAhK,EAAAsU,aAAA,iBACAtU,EAAA2J,aAAA,iBAEAhK,EAAAI,OAAAC,EAAA,mBAAA2J,aAAA,mBAGA/J,KAAAoa,OAAAhQ,IACApK,KAAA0H,IAAA0C,GAEAA,GAGA,IAAAqQ,cAAA,SAAA7V,GACA,IAAAxE,QAAAwE,EAAAtD,OACAiH,OAAAnI,QAAA2J,aAAA,YAEAxB,SACAnI,QAAAL,EAAAI,OAAAC,QAAA,cACAmI,OAAAnI,QAAA2J,aAAA,aAGA,IAAAtD,MAAA1G,EAAAI,OAAAC,QAAA,mBAAA2J,aAAA,iBAEA,IAAAvM,GAAAiJ,MAAAe,KAAAf,OACA,KAAA,2BAAAA,MAAA,iCAEA,IAAAgC,YAAAjL,GAAAiJ,MAAAe,KAAAf,OAEA4D,UAAA7M,GAAAiJ,MAAA4D,UAAA5B,aACA0F,UAAAjG,OAAA1K,GAAA6B,MAAAG,UAAA,IAAA6K,UAAA,IAAA7M,GAAA6B,MAAAE,YAAA,MAAA,KAEAgJ,OAAAA,OAAAN,QAAAkG,UAAA,SAAAtC,EAAA4C,GACA,MAAA,eAAAA,IAGAlG,OAAAA,OAAA5G,MAAA,KAEA,IAAAgS,OAAApL,OAAA,GACAmS,QAAA/G,OAGA,IACAA,OAAAvK,KAAAuK,QACA,MAAA/O,GACA+O,QAAA,EAGA,GAAAA,OAAA,CAMApL,OAAAuH,QACAvH,OAAAA,OAAA1D,KAAA,KACA0D,OAAAA,OAAA5G,MAAA,KACA4G,OAAAsH,MACAtH,OAAAA,OAAA1D,KAAA,KAGA,IAAA0D,OAAApJ,SAEAoJ,OAAAa,MAAA,IAAAb,OAAA,KAAAN,QAAA,gBAAA,SAAAqF,GACA,OAAAA,EAAA,GAAA,cAGA/E,SACAA,OAAA,IAEA,IACAoL,OAAAzV,MAAAkC,QAAAmI,QACA3D,EAAA+V,iBACA,MAAA/V,GACAyB,QAAAQ,MAAA,gCAAAJ,MAAA,KAAArG,QAAA,KAAAwE,SAzBAyB,QAAAQ,MAAA,gCAAAJ,MAAA,kBAAAiU,QAAA,OAAAta,UA6BAJ,KAAA0H,IAAA,SAAA0C,EAAA5E,GACA,IAAAhI,GAAAQ,OAAAkH,aACA,OAAA1H,GAAA,WACAwC,KAAA0H,IAAA0C,EAAA5E,KAGAxF,KAAAyH,QAAA2C,KACA5M,GAAAiJ,MAAAe,KAAA4C,KACA5M,GAAAiJ,MAAAe,KAAA4C,GAAA,IAEApK,KAAAyH,QAAA2C,GAAA5M,GAAAiJ,MAAAe,KAAA4C,GAAAwO,OACA5Y,KAAAoa,OAAAhQ,IAAA,SACApK,KAAAyH,QAAA2C,IAGA5E,GACAA,EAAAhI,GAAAiJ,MAAAe,KAAA4C,GAAAwO,QAGA5Y,KAAAoH,KAAA,SAAAjH,GACA,IAAA3C,GAAAQ,OAAAkH,aACA,OAAA1H,GAAA,WACAwC,KAAAoH,KAAAgD,QAIA,IADA,IAAAqD,EAAA1N,EAAA,kBAAAI,GAAAvC,SAAAuG,MACA1F,EAAA,EAAAA,EAAAgP,EAAAtO,OAAAV,IACAuB,KAAA0H,IAAA+F,EAAAhP,GAAAsL,aAAA,mBAKAnM,SAAA2D,iBAAA,mBAAA,WACAxB,EAAAiB,GAAApD,SAAAuG,KAAA,QAAA,aAAAsW,gBACA,CAAAjZ,SAAA,EAAAL,MAAA,KAGA,IAAAyX,MAAA,SAAArR,GAOA,OANA/J,GAAAiJ,MAAAe,KAAAD,KACA/J,GAAAiJ,MAAAe,KAAAD,GAAA,IAEA/J,GAAAiJ,MAAAe,KAAAD,IACA/J,GAAA2J,WAAAO,IAAAH,GAEA/J,GAAAiJ,MAAAe,KAAAD,IC5JAqT,QAAA,GACAC,cAAA,EACA,SAAAC,QAAAC,GACA,IAAAC,EAAAnc,OAAA0O,OAAA,GAAAqN,SACA,uEAAAjZ,MAAA,KAAA+N,QAAA,SAAAuL,UACAD,EAAAC,KAEA,IAAAC,EAAArc,OAAA0O,OAAA,CACA4N,IAAA1d,OAAAsc,SAAAqB,WACAzH,OAAA,MACA3I,MAAA,EACA7E,OAAA,EACA0G,OAAA,EACAwO,KAAA,GACAC,SAAA,GACAC,QAAA,GACAC,UAAA,GACAC,WAAA,GACAC,aAAA,EACAC,SAAA,OACAC,YAAA,oCACAC,QAAA,GACAb,GACAtK,EAAA7R,OAAA0O,OAAA,GAAA2N,EAAAH,GAGA,SAAAe,EAAAb,GAEA,IADA,IAcAc,EACAC,EAfAhR,EAAA,GACAiR,EAAA,EAAAA,EAAApe,UAAAsB,OAAA8c,IACAjR,EAAAiR,EAAA,GAAApe,UAAAoe,GAwBA,OAVArB,QAAAK,KACAc,EAAAnB,QAAAK,GAAA/c,MAAA0c,QAAA5P,IAEA0F,EAAAuK,KACAe,EAAAtL,EAAAuK,GAAA/c,MAAAwS,EAAA1F,IAEA,kBAAA+Q,IACAA,GAAA,GACA,kBAAAC,IACAA,GAAA,GACAD,GAAAC,EAIA,IAAA,IADAF,EAAA,eAAApL,GACA,CAGAA,EAAAxK,OACAwK,EAAAiD,OAAAjD,EAAAxK,MAEA,IAAAgW,EAAAxL,EAAAyK,IAAAvX,QAAA,MAAA,EAAA,IAAA,IAEA+P,EAAAjD,EAAAiD,OAAAwI,cAEA,IAAA,QAAAxI,GAAA,SAAAA,GAAA,YAAAA,GAAA,WAAAA,IAAAjD,EAAA1F,KAAA,CACA,IAAAoR,OAAA,GAIAA,EAHA,iBAAA1L,EAAA1F,KAEA0F,EAAA1F,KAAApH,QAAA,MAAA,EACA8M,EAAA1F,KAAArJ,MAAA,KAAA,GAEA+O,EAAA1F,KAIAqR,eAAA3L,EAAA1F,OAEA7L,SACAuR,EAAAyK,KAAAe,EAAAE,EACA,MAAAF,IACAA,EAAA,MAIA,GAAA,SAAAxL,EAAAiL,UAAAjL,EAAAyK,IAAAvX,QAAA,cAAA,EAAA,CACA,IACA0Y,EADAC,EAAA,UAAAC,KAAAC,OAAA5B,eAAA,IAEA6B,EAAAhM,EAAAyK,IAAAxZ,MAAA,aACAgb,EAAAD,EAAA,GAAA,YAAAH,EACA,GAAAG,EAAA,GAAA9Y,QAAA,MAAA,EAAA,CACA,IAAAgZ,EAAAF,EAAA,GAAA/a,MAAA,KAAAkb,OAAA,SAAAC,GAAA,OAAAA,EAAAlZ,QAAA,KAAA,IAAAiB,KAAA,KACA+X,EAAAzd,OAAA,IACAwd,GAAA,IAAAC,GAGA,IAAAG,EAAAnf,SAAAuF,cAAA,UAwBA,OAvBA4Z,EAAA7W,KAAA,kBACA6W,EAAAC,QAAA,WACA9L,aAAAoL,GACAR,EAAA,QAAA,KAAA,eACAA,EAAA,WAAA,KAAA,gBAEAiB,EAAA3W,IAAAuW,EAEAlf,OAAA8e,GAAA,SAAAvR,GACAkG,aAAAoL,GACAR,EAAA,UAAA9Q,GACA+R,EAAAvY,WAAA8U,YAAAyD,GACAA,EAAA,YACAtf,OAAA8e,IAEA3e,SAAAsC,cAAA,QAAA8F,YAAA+W,QACArM,EAAAmL,QAAA,IACAS,EAAAtZ,WAAA,WACA+Z,EAAAvY,WAAA8U,YAAAyD,GACAA,EAAA,KACAjB,EAAA,QAAA,KAAA,YACApL,EAAAmL,WAKA,QAAAlI,GAAA,SAAAA,GAAA,YAAAA,GAAA,WAAAA,IACA,IAAAjD,EAAA7D,QACA6D,EAAAyK,KAAAe,EAAA,WAAAM,KAAAC,OAIA,IAAAQ,EAAA,IAAAC,eAMA,GAJAD,EAAAN,WAAAjM,EAAAyK,IACA8B,EAAAE,kBAAAzM,GAGA,IADAoL,EAAA,aAAAmB,EAAAvM,GAEA,OAAAuM,EAEAA,EAAAG,KAAAzJ,EAAAjD,EAAAyK,IAAAzK,EAAAvK,MAAAuK,EAAA2K,KAAA3K,EAAA4K,UAEA,IAyDA+B,EAzDAC,EAAA,KACA,IAAA,SAAA3J,GAAA,QAAAA,GAAA,UAAAA,IAAAjD,EAAA1F,KACA,GAAA0F,EAAAgL,YAGA,GAFA,CAAA6B,YAAAC,KAAAC,SAAAC,UAEA9Z,QAAA8M,EAAA1F,KAAAlN,cAAA,EACAwf,EAAA5M,EAAA1F,SAEA,CAEA,IAAA2S,EAAA,8BAAAnB,KAAAC,MAAArB,SAAA,IACA,wBAAA1K,EAAAkL,YACAqB,EAAAW,iBAAA,eAAA,iCAAAD,GAGAV,EAAAW,iBAAA,eAAAlN,EAAAkL,aAEA0B,EAAA,GACA,IAAAtS,EAAAqR,eAAA3L,EAAA1F,MACA,GAAA,wBAAA0F,EAAAkL,YAAA,CACA5Q,EAAAA,EAAArJ,MAAA,KAEA,IADA,IAAAuL,EAAA,GACAzO,EAAA,EAAAA,EAAAuM,EAAA7L,OAAAV,GAAA,EACAyO,EAAApM,KAAA,yCAAAkK,EAAAvM,GAAAkD,MAAA,KAAA,GAAA,YAAAqJ,EAAAvM,GAAAkD,MAAA,KAAA,GAAA,QAEA2b,EAAA,KAAAK,EAAA,OAAAzQ,EAAArI,KAAA,KAAA8Y,EAAA,QAAA,KAAAA,EAAA,cAGAL,EADA,qBAAA5M,EAAAkL,YACAzM,KAAAC,UAAAsB,EAAA1F,MAGAA,OAKAsS,EAAA5M,EAAA1F,KACAiS,EAAAW,iBAAA,eAAAlN,EAAAkL,aA8EA,OA1EAlL,EAAA6K,SACA1c,OAAA0L,KAAAmG,EAAA6K,SAAA7L,QAAA,SAAAmO,GACAZ,EAAAW,iBAAAC,EAAAnN,EAAA6K,QAAAsC,WAIA,IAAAnN,EAAAoN,cAEApN,EAAAoN,YAAA,0BAAA/U,KAAA2H,EAAAyK,MAAAjT,OAAA6V,KAAAtgB,OAAAsc,SAAAiE,MAEAtN,EAAAoN,aACAb,EAAAW,iBAAA,mBAAA,kBAEAlN,EAAA8K,WACA3c,OAAA0O,OAAA0P,EAAAvM,EAAA8K,WAIAyB,EAAAgB,OAAA,WAGA,GAFAZ,GACAnM,aAAAmM,GACAJ,EAAAiB,QAAA,KAAAjB,EAAAiB,OAAA,KAAA,IAAAjB,EAAAiB,OAAA,CACA,IAAAC,OAAA,EACA,GAAA,SAAAzN,EAAAiL,SAAA,CACA,IAAAyC,OAAA,EACA,IACAD,EAAAhP,KAAAtE,MAAAoS,EAAAoB,cAEA,MAAAC,GACAF,GAAA,EAEAA,EAIAtC,EAAA,QAAAmB,EAAA,cAHAnB,EAAA,UAAAqC,EAAAlB,EAAAiB,OAAAjB,QAQAnB,EAAA,UADAqC,EAAA,SAAAlB,EAAAsB,cAAA,KAAAtB,EAAAsB,aAAAtB,EAAAoB,aAAApB,EAAAuB,SACAvB,EAAAiB,OAAAjB,QAIAnB,EAAA,QAAAmB,EAAAA,EAAAiB,QAEAxN,EAAA+K,aACAb,QAAAa,YAAAb,QAAAa,WAAAwB,EAAAiB,SACAtD,QAAAa,WAAAwB,EAAAiB,QAAAjB,GACAvM,EAAA+K,WAAAwB,EAAAiB,SACAxN,EAAA+K,WAAAwB,EAAAiB,QAAAjB,IAEAnB,EAAA,WAAAmB,EAAAA,EAAAiB,SAEAjB,EAAAD,QAAA,WACAK,GACAnM,aAAAmM,GACAvB,EAAA,QAAAmB,EAAAA,EAAAiB,QACApC,EAAA,WAAAmB,EAAA,UAGAvM,EAAAmL,QAAA,IACAoB,EAAAwB,QAAA,WACApB,GACAnM,aAAAmM,IAEAA,EAAAra,WAAA,WACAia,EAAAyB,QACA5C,EAAA,QAAAmB,EAAA,WACAnB,EAAA,WAAAmB,EAAA,YACAvM,EAAAmL,WAIA,IADAC,EAAA,aAAAmB,EAAAvM,GAEAuM,GAEAA,EAAA0B,KAAArB,GAEAL,IAEA,SAAA2B,gBAAAjL,GAEA,IADA,IAAAkL,EAAA,GACA5C,EAAA,EAAAA,EAAApe,UAAAsB,OAAA8c,IACA4C,EAAA5C,EAAA,GAAApe,UAAAoe,GAEA,IAAA6C,EAAA,GAAA3D,EAAA2D,EAAA,GAAA9T,EAAA8T,EAAA,GAAAC,EAAAD,EAAA,GAAAjY,EAAAiY,EAAA,GAAAnD,EAAAmD,EAAA,GACA,mBAAAD,EAAA,IACA1D,EAAA0D,EAAA,GAAAE,EAAAF,EAAA,GAAAhY,EAAAgY,EAAA,GAAAlD,EAAAkD,EAAA,KAGA1D,EAAA0D,EAAA,GAAA7T,EAAA6T,EAAA,GAAAE,EAAAF,EAAA,GAAAhY,EAAAgY,EAAA,GAAAlD,EAAAkD,EAAA,IAEA,CAAAE,EAAAlY,GAAA6I,QAAA,SAAAxO,GACA,iBAAAA,IACAya,EAAAza,EACAA,IAAA6d,EACAA,OAAAphB,EAEAkJ,OAAAlJ,KAIA,IAAAod,EAAA,CACAI,IAAAA,EACAxH,OAAA,SAAAA,GAAA,aAAAA,EAAA,OAAA,MACA3I,KAAAA,EACA+T,QAAAA,EACAlY,MAAAA,EACA8U,SAPAA,EAAAA,IAAA,SAAAhI,GAAA,aAAAA,EAAA,YAAAhW,IAiBA,MARA,aAAAgW,GACA9U,OAAA0O,OAAAwN,EAAA,CACAa,YAAA,mBACAF,aAAA,EACAoC,aAAA,EACA9S,KAAA,iBAAAA,EAAAA,EAAAmE,KAAAC,UAAApE,KAGA8P,QAAAC,GA6CA,SAAAsB,eAAA2C,EAAAC,GAEA,IADA,IAAA5gB,EAAAQ,OAAA0L,KAAAyU,GACAvgB,EAAA,EAAAA,EAAAJ,EAAAc,OAAAV,IAAA,CACA,IAAAG,EAAAogB,EAAA3gB,EAAAI,IACAugB,EAAAlhB,cAAAqP,MACA9O,EAAAI,IAAAwgB,EAAA,KACAD,EAAAlhB,cAAAe,SACAR,EAAAI,GAAAwgB,EAAAA,EAAA,IAAA5gB,EAAAI,GAAA,IAAAJ,EAAAI,IAGAJ,EAAAI,GADA,iBAAAG,EACAyd,eAAAzd,EAAAP,EAAAI,IAEAJ,EAAAI,GAAA,IAAAygB,mBAAAtgB,GAEA,OAAAP,EAAAwG,KAAA,KC9WA,ODqTAhG,OAAA0O,OAAAuN,QAAA,CACA9G,IAAA,WAEA,IADA,IAAA6K,EAAA,GACA5C,EAAA,EAAAA,EAAApe,UAAAsB,OAAA8c,IACA4C,EAAA5C,GAAApe,UAAAoe,GAEA,OAAA2C,gBAAA1gB,WAAA,EAAA,CAAA,OAAAihB,OAAAN,KAEAO,KAAA,WAEA,IADA,IAAAP,EAAA,GACA5C,EAAA,EAAAA,EAAApe,UAAAsB,OAAA8c,IACA4C,EAAA5C,GAAApe,UAAAoe,GAEA,OAAA2C,gBAAA1gB,WAAA,EAAA,CAAA,QAAAihB,OAAAN,KAEAQ,KAAA,WAEA,IADA,IAAAR,EAAA,GACA5C,EAAA,EAAAA,EAAApe,UAAAsB,OAAA8c,IACA4C,EAAA5C,GAAApe,UAAAoe,GAEA,OAAA2C,gBAAA1gB,WAAA,EAAA,CAAA,QAAAihB,OAAAN,KAEAS,QAAA,WAEA,IADA,IAAAT,EAAA,GACA5C,EAAA,EAAAA,EAAApe,UAAAsB,OAAA8c,IACA4C,EAAA5C,GAAApe,UAAAoe,GAEA,OAAA2C,gBAAA1gB,WAAA,EAAA,CAAA,QAAAihB,OAAAN,KAEAU,SAAA,WAEA,IADA,IAAAV,EAAA,GACA5C,EAAA,EAAAA,EAAApe,UAAAsB,OAAA8c,IACA4C,EAAA5C,GAAApe,UAAAoe,GAEA,OAAA2C,gBAAA1gB,WAAA,EAAA,CAAA,YAAAihB,OAAAN,OAGA/D,QAAA0E,MAAA,SAAA9O,GACAA,EAAAxK,OAAAwK,EAAAiD,QACA9U,OAAA0O,OAAAmD,EAAA,CAAAiD,OAAAjD,EAAAxK,OAEArH,OAAA0O,OAAAqN,QAAAlK,IAkBA3Q,EAAA0f,KAAAjiB,GAAAiiB,KAAA3E,QEhXAtd,GAAA6J,OAAA,IAAA,WACA,IAAArH,EAAAtC,KACAsC,EAAA0f,SAAA,EACA1f,EAAA2f,SAAA,EACA3f,EAAA4f,yBAAA,EACA5f,EAAA6f,YAAA,GACA,IAAAC,GAAA,EAEAC,EAAA,GAyBA,SAAAC,EAAA/e,GAEAgf,EACAA,GAAA,GAIAC,GAAA,EACAlgB,EAAAmgB,KAAA1iB,OAAAsc,SAAAqG,WA9BApgB,EAAAoH,KAAA,SAAA8I,GACA,IAAA1S,GAAAQ,OAAAkH,aACA,OAAA1H,GAAA,WACAwC,EAAAoH,SAKA,IADA,IAAAqG,EAAA1N,EAAA,6BAAAmQ,GACAzR,EAAA,EAAAA,EAAAgP,EAAAtO,OAAAV,IAIA,GAHAgP,EAAAhP,GAAAsL,aAAA,kBACAvM,GAAA2J,WAAAO,IAAA+F,EAAAhP,GAAAsL,aAAA,kBAEA0D,EAAAhP,GAAAsL,aAAA,WAAA,CACA,IAAAK,EAAAqD,EAAAhP,GAAAsL,aAAA,WACAsW,EAAAjW,GAIA0V,GAAA,EACAC,EAAAtiB,OAAAsc,SAAAqG,UAcApgB,EAAAsgB,OAAA,SAAApC,QACAvgB,IAAAugB,IAAAA,GAAA,GACAle,EAAA2f,UAAAzB,IACAle,EAAA2f,QAAAzB,GAEA,IAAAA,GAEAne,EAAAiB,GAAApD,SAAAuG,KAAA,QAAA,UAAAnE,EAAAugB,MAGA9iB,OAAA8D,iBAAA,WAAAye,GAAA,KAGAjgB,EAAA0B,IAAA7D,SAAAuG,KAAA,QAAA,UAAAnE,EAAAugB,MACA9iB,OAAAqE,oBAAA,WAAAke,GAAA,MAIA,IAAAzK,EAAA,GAEAvV,EAAAuV,OAAA,SAAAnL,EAAA5E,EAAAoE,GACA2L,EAAAnL,KACAmL,EAAAnL,GAAA,SAEAzM,IAAAiM,GACA,IAAA2L,EAAAnL,GAAAxG,QAAA4B,IACA+P,EAAAnL,GAAAtJ,KAAA0E,GAGA+P,EAAAnL,GAAAR,GAAApE,GAGA,IAAA6P,EAAA,GAEArV,EAAAqV,MAAA,SAAAjL,EAAA5E,EAAAoE,GACAyL,EAAAjL,KACAiL,EAAAjL,GAAA,SAEAzM,IAAAiM,GACA,IAAAyL,EAAAjL,GAAAxG,QAAA4B,IACA6P,EAAAjL,GAAAtJ,KAAA0E,GAGA6P,EAAAjL,GAAAR,GAAApE,GAGA,IAAAoT,EAAA,SAAArR,GAOA,OANA/J,GAAAiJ,MAAAe,KAAAD,KACA/J,GAAAiJ,MAAAe,KAAAD,GAAA,IAEA/J,GAAAiJ,MAAAe,KAAAD,IACA/J,GAAA2J,WAAAO,IAAAH,GAEA/J,GAAAiJ,MAAAe,KAAAD,IAIA8Y,EAAA,SAAAjW,GAIA,IAHA,IAAApK,EAAA6f,YAAAjc,QAAAwG,IACApK,EAAA6f,YAAA/e,KAAAsJ,GAEAmL,EAAAnL,GACA,IAAA,IAAA3L,EAAA,EAAAA,EAAA8W,EAAAnL,GAAAjL,OAAAV,IACA8W,EAAAnL,GAAA3L,GAAAma,IAiBA4H,EAAA,CACAd,QAAA,GACAe,OAAA,GACAC,QAAA,GACA7Z,MAAA,IAEA7G,EAAAgB,GAAA,SAAAC,EAAAuE,IACA,IAAAgb,EAAAvf,GAAA2C,QAAA4B,IACAgb,EAAAvf,GAAAH,KAAA0E,IAGAxF,EAAA2gB,cAAA,GASA3gB,EAAAugB,KAAA,SAAAlf,GACA,IAAA,IAAArB,EAAA2f,QAAA,CAEA,IAAA3M,EAAA3R,EAAAC,OACA,GAAA0R,EAAAlN,MAEA8a,QAAAC,YAAA7N,EAAA0B,aAAA,oBAAA,CAIA,IAAAxV,EAAA8T,EAAAlN,KAAAmC,QAAAxK,OAAAsc,SAAAC,OAAA,IACA,IAAA,IAAA9a,EAAA0E,QAAA,MAIA,OADAvC,EAAAsZ,kBACA3a,EAAAmgB,KAAAjhB,MAGA,IAAA4hB,GAAA,EACAZ,GAAA,EACAD,GAAA,EACAjgB,EAAAmgB,KAAA,SAAAjhB,EAAA8L,EAAA2I,GAEAA,EADAA,EACAA,EAAAwI,cADA,MAGAnR,IAAAA,EAAA,IAEA,IAAA,IAAAvM,EAAA,EAAAA,EAAA+hB,EAAA,QAAArhB,OAAAV,IACA,GAAA+hB,EAAA,QAAA/hB,GAAAS,GAAA,OAEAzB,OAAAsc,SAAAqG,SAsHA,OArHAN,GAAA,EAEAgB,GAAAA,EAAApC,QACAoC,EAAA/gB,EAAA0f,KAAA,CACAtE,IAAA1d,OAAAsc,SAAAC,OAAA9a,EACAyU,OAAAA,EACA3I,KAAAnM,OAAA0O,OAAAvC,EAAA,CACA+V,UAAA,cAEAhC,QAAA,SAAA/T,GACA,IAAA8U,EAAA,EACA,EAGAgB,GAAA,EAGA,IACAJ,EADAxY,OAAA,iCAAA1K,GAAA6B,MAAAE,YAAA,MACAuJ,KAAAkC,GACA,GAAA0V,GAAA,IAAAA,EAAAvhB,SACAuhB,EAAAA,EAAA,GAAA/e,MAAA,SAAAkD,KAAA,WAGA1G,cAFAuiB,EAAAvR,KAAAtE,MAAA6V,KAGA,IAAA,IAAAjiB,EAAA,EAAAA,EAAA+hB,EAAA,QAAArhB,OAAAV,IACA,GAAA+hB,EAAA,QAAA/hB,GAAAiiB,GAAA,OAKA,IAAAM,GAAA,EACAC,EAAA,SAAArf,GACAof,EAAAjhB,EAAAE,QAAA2B,GAGA,IAAAsf,EAAAnhB,EAAAE,QAAA,YAAA+gB,IAjGA,SAAA5W,GAIA,IAHA,IAAApK,EAAA6f,YAAAjc,QAAAwG,IACApK,EAAA6f,YAAA9d,OAAA/B,EAAA6f,YAAAjc,QAAAwG,GAAA,GAEAiL,EAAAjL,GACA,IAAA,IAAA3L,EAAA,EAAAA,EAAA4W,EAAAjL,GAAAjL,OAAAV,IACA4W,EAAAjL,GAAA3L,GAAAma,GA4FAuI,CAAAD,EAAAA,EAAAnX,aAAA,WAAA,KAGA2W,GAAAA,EAAAU,QACArhB,EAAA,gBAAAgX,UAAA2J,EAAAU,OAEA9T,GAAA,GAGAA,GAAA,EACA,IAAA,IAAA+T,KAAArhB,EAAA2gB,cAAA,CACA,IAAA,IAAAZ,EAAAnc,QAAAyd,GACA,IAAA,IAAAC,KAAAthB,EAAA2gB,cAAAU,GACA,IAAA,IAAAtB,EAAAnc,QAAAyd,GAAA,CACAJ,EAAAjhB,EAAA2gB,cAAAU,GAAAC,IACA,MAIA,GAAAhU,EAAA,MAIA,IAAAA,IAEA9P,GAAA6J,OAAAsZ,cAAA,aACAM,EAAAzjB,GAAA6J,OAAAsZ,cAAA,cAEArT,GACA,IAAA7O,EAAA,EAAAA,EAAA+hB,EAAA,MAAArhB,OAAAV,IACA+hB,EAAA,MAAA/hB,GAAA,4BAAA4iB,EAAA,OAAAC,EAAA,oBAMAN,IAAAA,EAAApjB,SAAAuG,MACAnE,EAAA4f,yBACA5f,EAAA4f,wBAAAja,IAAA,UAAA,QAGAqb,EAAAjK,UAAA/L,EAGAxN,GAAAiJ,MAAAW,KAAA4Z,GAGA,IAAAvT,EAAA1N,EAAA,YAAAihB,GACA,IAAAviB,EAAA,EAAAA,EAAAgP,EAAAtO,OAAAV,IACA4hB,EAAA5S,EAAAhP,GAAAsL,aAAA,YAGA/J,EAAA4f,yBACA5f,EAAA4f,wBAAAja,IAAA,UAAA,IAgCA,SAAAoa,EAAA7gB,EAAA8L,GACA,IAAA,IAAAvM,EAAA,EAAAA,EAAA+hB,EAAA,OAAArhB,OAAAV,IACA+hB,EAAA,OAAA/hB,GAAAshB,EAAA7gB,EAAA8L,GAhCAuW,CAAAxB,EAAA7gB,EAAA8hB,GAEAlB,GAAA,GACA,EAEAC,EAAA7gB,EACA+gB,GAAA,IAEApZ,MAAA,SAAAoW,EAAAjS,GAEA,GADAiV,GAAA,GACAhD,EAAAuE,QAAA,CAEAV,GAAA,EACA,IAAA,IAAAriB,EAAA,EAAAA,EAAA+hB,EAAA,MAAArhB,OAAAV,IACA+hB,EAAA,MAAA/hB,GAAAwe,EAAAiB,OAAAlT,GAIAvN,OAAAmjB,QAAAa,WAIAvB,GACAziB,OAAAmjB,QAAAC,UAAA,KAAA,GAAA3hB,GAEAghB,GAAA,GACA,ICpSA1iB,GAAA4B,SAAA0T,eAAA,IAAA,WACA,IAAA9S,EAAAtC,KACAgkB,GAAA,EACAC,GAAA,EAuXA,SAAAC,EAAAC,EAAAC,EAAAlf,EAAA4B,GACA,IAAAiJ,EAAAyH,KAAAhD,MAAAlS,EAAA+hB,aAAA,GACA,GAAAF,EAAA7hB,EAAA+hB,aAQA,OAPAD,EAAAjN,SAAA,EACAiN,EAAA5P,MAAA1N,EAAA8L,SAAA,EAAAtQ,EAAA+hB,aAAA,aAEApkB,IAAAmkB,EAAA5P,MACA4P,EAAA5P,MAAA4P,EAAA5P,MAAA8P,UACAF,EAAA5P,MAAA1N,EAAAyM,iBAAA+Q,UAAA,UAIArkB,IAAA6G,EAAA8L,SAAA7C,EAAA,KACAqU,EAAAjN,QAAArQ,EAAA8L,SAAA7C,EAAA,GAAAuU,gBAEArkB,IAAAiF,EAAAqH,SAAA6G,gBAAA+Q,GAAAjf,EAAAzD,OAAAyD,EAAAqH,SAAA6G,eACAgR,EAAA5P,MAAAtP,EAAAqH,SAAAqJ,QAAApB,MAAA8P,UAAA,EAAApf,EAAAqH,SAAAgY,cAEAH,EAAA5P,MAAA1N,EAAA8L,SAAAtQ,EAAA+hB,aAAA,GAAAC,UAEAxd,EAAAkQ,aAAA,yBACAoN,EAAA5P,OAAA1N,EAAAuF,aAAA,uBACA+X,EAAAjN,SAAArQ,EAAAuF,aAAA,yBAoEA,SAAAmY,EAAAtY,EAAAhH,EAAAmf,EAAAvd,EAAA2d,EAAAC,GACA,IAAAC,EAAAzf,EAAAqH,SACAqY,EAAA,EAOA,GALA1Y,GAAAhH,EAAAzD,OAAAkjB,EAAAvR,iBACAwR,GAAAP,EACAnY,EAAAhH,EAAAzD,OAAAkjB,EAAAvR,kBAGAlH,EAAAyY,EAAAnY,WAAA,GAAAN,GAAAhH,EAAAzD,QAAA,CAKA,GAHAwiB,GAAA,EAGA,IAAAU,EAAAnY,WAAAN,EAAAmY,EAAAA,EAAA,GACAM,EAAAnY,UAAA6X,EAAA,EAAAnY,GACAyY,EAAAnY,UAAA6X,EAAAnY,EACAuY,EAAAI,UAAA/d,EAAA8L,SAAA1G,EAAAyY,EAAAnY,UAAA,GAAA8X,cAGA,CAQA,IAPA,IAAAvU,EAAA,KACAoH,EAAAwN,EAAA/O,QAAAuB,QACA3C,EAAAmQ,EAAA/O,QAAApB,MACAD,EAAAoQ,EAAApQ,QAGA9S,EAAAqF,EAAAiP,kBAAA,EACAhV,EAAA,EAAAA,EAAAU,EAAAV,IACAgP,EAAAoH,EAAAS,mBAEA,OAAArD,EAAAC,OACAmQ,EAAA5iB,IAAAqS,sBAAA,YAAArE,GAEAhP,IAAAU,EAAA,IACA8S,EAAAC,MAAAzE,IAEAwE,EAAAC,MAAAJ,sBAAA,cAAArE,GAGA7D,GAAAmY,EACAnY,EAAAhH,EAAAzD,OAAAkjB,EAAAvR,iBACAlH,GAAAmY,IAGAO,EAAAP,EAAAnY,EACAyY,EAAAnY,UAAAN,EAAA,GAGA,IAAA4Y,EAAAH,EAAAvR,gBAAAlO,EAAAzD,OAAAkjB,EAAAvR,eAAAlO,EAAAzD,OAGA,IAAAV,EAAA,EAAAA,EAAA+jB,QAEA7kB,KADA8P,EAAA4U,EAAA5iB,IAAA6Q,SAAA1G,IADAnL,IAIAyT,EAAAJ,sBAAA,cAAArE,GAEA4U,EAAAnY,UAAAN,EAEAqI,EAAAC,MAAAmQ,EAAA5iB,IAAA6Q,SAAA1G,IAAA,KACAqI,EAAA4C,QAAA5C,EAAAC,MAAAD,EAAAC,MAAApI,uBAAA,KAEAsY,GACAA,EAAAxY,GAEAgY,EAAAhY,EAAAyY,EAAAP,SAAAlf,EAAA4B,QAIA7G,KAFA8P,EAAAjJ,EAAA8L,SAAAyR,EAAAO,EAAA,MAGAH,EAAAI,UAAA9U,EAAAuU,UAAAG,EAAAH,WAGAL,GAAA,GAGA,SAAAc,EAAAje,GACAA,EAAA/B,MAAA2O,SAAA,SACApO,WAAA,WACAwB,EAAA/B,MAAA2O,SAAA,IACA,IAGA,SAAAsR,EAAA5F,GACA,IAAAhI,EAAArX,OAAAsX,iBAAA+H,GACA6F,EAAAC,SAAA9N,EAAA,WAAA8N,SAAA9N,EAAA,cACA,OAAAgI,EAAA1H,aAAAuN,GAAA,EA+BA,SAAAxR,EAAA0R,EAAAjgB,EAAAmf,EAAAvd,EAAA2d,EAAAW,EAAAV,GACA,IAAAP,EAAAjf,EAAAqH,SAAAC,UACA6Y,EAAA,EAGA,GAAAF,EAAA,CACA,IAAApkB,GAAA,EACAU,EAAAyD,EAAAqH,SAAA6G,eAEA,GACArS,UACAA,EAAAU,GAAAqF,EAAA8L,SAAA7R,GAAAujB,UAAAG,EAAAI,YAEAV,GAAApjB,GACA,IAAAojB,GAAA,GAEAkB,EAAAZ,EAAAI,UAAA/d,EAAA8L,SAAA7R,GAAAujB,UAIA,GAAAa,GAAAre,EAAAiP,kBAAA,EAAA7Q,EAAAqH,SAAA6G,eAAA,CACAlO,EAAAqH,SAAAC,UAAAtH,EAAAzD,OACA,IAAA6jB,EAAAnB,EACAgB,IACAG,EAAAnB,GAAAE,EAAAF,EAAAA,EAAAE,GAEAG,EAAAc,EACApgB,EACAmf,EACAvd,EACA2d,EACAC,GAGAD,EAAAI,WAAAQ,EAGAX,GACAA,EAAAP,GAEAiB,GACAA,IAEAlB,EAAAC,EAAAjf,EAAAqH,SAAA6X,SAAAlf,EAAA4B,GA/mBAxE,EAAA+hB,aAAA,EAEA/hB,EAAA+S,OAAA,SAAAnQ,EAAAsN,EAAA1L,GACAkd,KA8pBA,WACA,IAAAjf,EAAA7E,SAAAqlB,eAAA,aAEAxgB,KACAA,EAAA7E,SAAAuF,cAAA,UACAsB,GAAA,YACA7G,SAAAmI,KAAAC,YAAAvD,IAGAA,EAAAygB,MAAAC,WACA,4LAWA1gB,EAAAygB,MAAAE,SAAAjkB,QAlrBAkkB,GACA3B,GAAA,GAGA,IAAAW,EAAAzf,EAAAqH,SACAoY,EAAA1P,MAAA,WACA0P,EAAAnY,UAAA,EAEAmY,EAAAP,SAAA,CACAjN,SAAA,EACA3C,MAAA,GAGAmQ,EAAApQ,QAAA,CACA4C,QAAA,KACA3C,MAAAmQ,EAAA5iB,IAAAuR,mBAGA4Q,EAAA,EAAAS,EAAAP,SAAAlf,EAAA4B,IAEA6d,EAAA1P,QAEA0P,EAAAre,SAAA,WACA,OA6gBA,SAAApB,EAAA4B,GAKA,IAJA,IAAAmK,EAAA,GACAlB,OAAA9P,EAEAwB,EAAAyD,EAAAqH,SAAAC,UACAzL,EAAA,EAAAA,EAAAU,QAEAxB,KADA8P,EAAA7K,EAAAqH,SAAAxK,IAAA6Q,SAAA7R,IADAA,IAGAkQ,EAAA7N,KAAA2M,GAGAtO,EAAAqF,EAAAiP,kBAAA,EACA,IAAA,IAAAhV,EAAA,EAAAA,GAAAU,QAEAxB,KADA8P,EAAAjJ,EAAA8L,SAAA7R,IADAA,IAGAkQ,EAAA7N,KAAA2M,GAGAtO,EAAAyD,EAAAzD,OAAAA,EAAAyD,EAAAqH,SAAAC,UACA,IAAA,IAAAzL,EAAA,EAAAA,EAAAU,QAEAxB,KADA8P,EAAA7K,EAAAqH,SAAAxK,IAAA6Q,SAAA1N,EAAAqH,SAAAC,UAAAzL,IADAA,IAGAkQ,EAAA7N,KAAA2M,GAGA,OAAAkB,EAtiBA2U,CAAA1gB,EAAA4B,IAGA6d,EAAA/O,QAAA,CACAuB,QAAArQ,EAAAtE,cAAA,2BACAgS,MAAA1N,EAAAtE,cAAA,0BAGAmiB,EAAAnS,WAAA1L,EAEA6d,EAAAJ,aACAI,EAAA/O,QAAApB,MAAA8P,UACAK,EAAA/O,QAAAuB,QAAAmN,UAEA,IAAAG,EAAA,KACAE,EAAA/L,QAAA,WACAvW,EAAA0B,IAAA0gB,EAAA,UACApiB,EAAA0B,IAAA+C,EAAA,qBACA6d,EAAA5iB,IAAAsX,UAAA,GA2mBA,SAAAvS,GACA,IAAA,IAAA/F,EAAA8kB,EAAApkB,OAAA,EAAAV,GAAA,EAAAA,IACA8kB,EAAA9kB,GAAA2B,UAAAoE,GACA+e,EAAAxhB,OAAAtD,EAAA,GA7mBA+kB,CAAAhf,UAEA5B,EAAAqH,UAGAoY,EAAA5P,cAAA,WACA4P,EAAAoB,cAAAvO,KAAAhD,MAAAiQ,EAAAuB,aAAArB,EAAAJ,cACAI,EAAAvR,eAAAuR,EAAAoB,cAAA,EAAAzjB,EAAA+hB,cAGA/e,WAAA,WACAmf,EAAA3d,EAGA,IADA,IAAArF,EAAAqF,EAAAuF,aAAA,wBAAA,EACAtL,EAAA,EAAAA,EAAAU,EAAAV,IACA0jB,EAAAA,EAAA5hB,cAGA8hB,EAAA5P,gBAEAjO,EAAA3B,UAAA2N,SAAA,mBAQA,SAAA5N,EAAAsN,EAAA1L,EAAA2d,GACA,IAAAE,EAAAzf,EAAAqH,SACA4K,EAAAwN,EAAA/O,QAAAuB,QACA3C,EAAAmQ,EAAA/O,QAAApB,MACAD,EAAAoQ,EAAApQ,QACAA,EAAAC,MAAAmQ,EAAA5iB,IAAAuR,kBAEAqR,EAAAH,SAAA,SAAAtY,GACAsY,EAAAtY,EAAAhH,EAAA5C,EAAA+hB,aAAAvd,EAAA2d,IAGAE,EAAAlR,QAAA,SAAA0R,GACA1R,EAAA0R,EAAAjgB,EAAA5C,EAAA+hB,aAAAvd,EAAA2d,GACAwB,KAIAA,IAEAtB,EAAAoB,cAAAjf,EAAAiP,kBAAA,EACA4O,EAAAvR,eAAAuR,EAAAoB,cAAA,EAAAzjB,EAAA+hB,aAEA,IAAA,IAAAtjB,EAAA,EAAAA,EAAAuB,EAAA+hB,aAAAtjB,IAAA,CACA,IAAAgP,EAAAwE,EAAAC,MACA,GAAA,OAAAzE,EAAA,MAEAwE,EAAAC,MAAAzE,EAAA6H,mBACApD,EAAAJ,sBAAA,cAAArE,GAEA4U,EAAAnY,UAAA,EAEA,IAAA0Z,EAAA,EACAC,EAAA,EAqDA,SAAAF,IAGA,IADA,IAAAxkB,EAAAkjB,EAAAvR,gBAAAtM,EAAAiP,kBAAA,GACAhV,EAAA,EAAAA,EAAAU,GAMA,QAJAsO,EADA,OAAAwE,EAAA4C,QACAwN,EAAA5iB,IAAAuR,kBAEAiB,EAAA4C,QAAAS,oBAJA7W,IAOAwT,EAAAC,MAAAzE,EAAA6H,mBAEApD,EAAAJ,sBAAA,cAAArE,GAiDA,IAAAqU,EAAAO,EAAAP,SACAF,EAAA,EAAAE,EAAAlf,EAAA4B,GAEA,IAAAsf,GAAA,EAsBA/jB,EAAAiB,GAAAmhB,EAAA,SArBA,WACA,GAAA2B,GAAAnC,EAAA,OACAmC,GAAA,EAEA3B,EAAAI,UAAAT,EAAAjN,UAzHA,WAKA,IAJA,IAAApH,EAAA,KACAsW,GAAA,EAGAtlB,EAAA,EAAAA,EAAAuB,EAAA+hB,cAMA,QAJAtU,EADA,OAAAwE,EAAAC,MACAmQ,EAAA5iB,IAAAwR,iBAEAgB,EAAAC,MAAApI,wBAJArL,IAOAwT,EAAA4C,QAAApH,EAAA3D,uBACAuY,EAAAnY,YAEA2K,EAAA/C,sBAAA,WAAArE,GAEAmW,EAAA,IACAA,GAAAlB,EAAAjV,IAEA4U,EAAAnY,UAAAlK,EAAA+hB,eAAAgC,IACAtlB,EAAA,EACAslB,GAAA,EACAtW,EAAA,OAIAmW,EAAA,GAAA,OAAAnW,KACAmW,EAAA,GAIA,IAFA,IAAAzkB,EAAAqF,EAAAiP,kBAAA,EAAA7Q,EAAAqH,SAAA6G,eAEArS,EAAA,EAAAA,EAAAU,EAAAV,IACAgP,EAAAyE,EAAApI,uBACA+Z,GAAAnB,EAAAjV,GAEA,OAAAwE,EAAAC,MACAmQ,EAAA5iB,IAAAqS,sBAAA,YAAArE,GACAwE,EAAAC,MAAAJ,sBAAA,cAAArE,GAEAwE,EAAAC,MAAAzE,EAGA,OAAAwE,EAAAC,MACAD,EAAA4C,QAAAwN,EAAA5iB,IAAAwR,iBAEAgB,EAAA4C,QAAA5C,EAAAC,MAAApI,uBAEA+K,EAAApS,MAAAuhB,OAAAJ,EAAA,KACA1R,EAAAzP,MAAAuhB,OAAAH,EAAA,KA0EAI,GACArC,EAAAS,EAAAnY,UAAA4X,EAAAlf,EAAA4B,IAIA2d,EAAAI,UAAAT,EAAA5P,SA5DA,WACA,IAAAzE,EAAA,KACAkW,IAEA,OAAA1R,EAAA4C,UACA5C,EAAA4C,QAAA5C,EAAAC,MAAApI,wBAGA,IAAA,IAAArL,EAAA,EAAAA,EAAAuB,EAAA+hB,cAEA,QADAtU,EAAAwE,EAAAC,OADAzT,IAIAwT,EAAAC,MAAAzE,EAAA6H,mBACApD,EAAAJ,sBAAA,cAAArE,GAEAoW,EAAA,IACAA,GAAAnB,EAAAjV,KAGAoW,EAAA,GAAA,OAAApW,KACAoW,EAAA,GAIA,IADA,IAAA1kB,EAAAqF,EAAAiP,kBAAA,EAAA7Q,EAAAqH,SAAA6G,eACArS,EAAA,EAAAA,EAAAU,EAAAV,IACAgP,EAAAoH,EAAAS,mBACAsO,GAAAlB,EAAAjV,GACA4U,EAAAnY,YAEA,OAAA+H,EAAA4C,QACAwN,EAAA5iB,IAAAqS,sBAAA,aAAArE,GACAwE,EAAA4C,QAAA/C,sBAAA,WAAArE,GAEAwE,EAAA4C,QAAApH,EAGA,OAAAwE,EAAA4C,QACA5C,EAAAC,MAAAmQ,EAAA5iB,IAAAuR,kBAEAiB,EAAAC,MAAAD,EAAA4C,QAAAS,mBAEAT,EAAApS,MAAAuhB,OAAAJ,EAAA,KACA1R,EAAAzP,MAAAuhB,OAAAH,EAAA,KAoBAK,GACAtC,EAAAS,EAAAnY,UAAA4X,EAAAlf,EAAA4B,IAIAsf,GAAA,IAkYA,SAAAtf,EAAAtD,IACA,IAAAijB,IACAA,EAAApd,YAAA,WAEA,IADA,IAAA0G,EAAA,KACAhP,EAAA8kB,EAAApkB,OAAA,EAAAV,GAAA,EAAAA,KACAgP,EAAA8V,EAAA9kB,IAGA2B,QAAA6hB,eAAAxU,EAAAuW,QACAvW,EAAArN,QAAAgkB,cAAA3W,EAAA4W,QAIA,OAAA5W,EAAArN,QAAAG,cAKAkN,EAAAvM,WAJAqiB,EAAAxhB,OAAAtD,EAAA,IAOA,IAAA8kB,EAAApkB,SACA8H,cAAAkd,GACAA,GAAA,IAEA,MAGAZ,EAAAziB,KAAA,CACAV,QAAAoE,EACAtD,SAAAA,EACA8iB,OAAAxf,EAAAyd,aACAoC,MAAA7f,EAAA4f,cA9ZAE,CAAA9f,EAAA,WACAod,EAAAS,EAAAnY,UAAA4X,EAAAlf,EAAA4B,KApLA+f,CAAA3hB,EAAAsN,EAAA1L,EAAA2d,GAyLA,SAAAvf,EAAAsN,EAAA1L,EAAA2d,GAOA,IANA,IAAAE,EAAAzf,EAAAqH,SACA4K,EAAAwN,EAAA/O,QAAAuB,QACA3C,EAAAmQ,EAAA/O,QAAApB,MAGAsQ,EAAAH,EAAAvR,gBAAAlO,EAAAzD,OAAAkjB,EAAAvR,eAAAlO,EAAAzD,OACAV,EAAA,EAAAA,EAAA+jB,GACA,OAAAH,EAAA5iB,IAAAuR,kBADAvS,IAIAyT,EAAAJ,sBAAA,cAAAuQ,EAAA5iB,IAAAuR,mBAGA,SAAAoR,EAAAP,GACA,GAAAA,GAAA7hB,EAAA+hB,aACAlN,EAAApS,MAAAuhB,QAAAnC,EAAA7hB,EAAA+hB,cAAAM,EAAAJ,aAAA,KACA/P,EAAAzP,MAAAuhB,QAAAphB,EAAAzD,OAAAkjB,EAAAvR,eAAA+Q,GAAAQ,EAAAJ,aAAA,SAEA,CACApN,EAAApS,MAAAuhB,OAAAnC,EAAAQ,EAAAJ,aAAA,KACA,IAAArR,EAAAhO,EAAAzD,OAAAkjB,EAAAvR,eACAoB,EAAAzP,MAAAuhB,QAAApT,GAAA,GAAAyR,EAAAJ,aAAA,MAIA,IAAAH,EAAAO,EAAAP,SAEAM,EAAA,GACAR,EAAA5hB,EAAA+hB,aAAAD,EAAAlf,EAAA4B,GACAsd,EAAAjN,SAAA,EAEAwN,EAAAmC,SAAA,SAAA5a,GACA,OAAAA,EAAAyY,EAAAJ,aAAApN,EAAAmN,WAGAK,EAAApQ,QACAC,MAAAmQ,EAAA5iB,IAAAuR,kBACAqR,EAAAH,SAAA,SAAAtY,GACAsY,EAAAtY,EAAAhH,EAAA5C,EAAA+hB,aAAAvd,EAAA2d,EAAAC,IAGAC,EAAAlR,QAAA,SAAA0R,GACA1R,EAAA0R,EAAAjgB,EAAA5C,EAAA+hB,aAAAvd,EAAA2d,EAAAW,EAAAV,IAGA,IAAA0B,GAAA,EACAW,GAAA,EACAC,GAAA,EACA,SAAA5B,IACA,GAAAgB,GAAAnC,GAAAQ,EAAAI,WAAAT,EAAAjN,SAAAsN,EAAAI,WAAAT,EAAA5P,MAEAwS,IACA,IAAAvC,EAAAI,WAAAJ,EAAAI,YAAAJ,EAAAF,aAAAE,EAAAuB,eACAjB,EAAAN,GACAuC,GAAA,QALA,CAWA,IAAA7C,EAAA3M,KAAAhD,MAAAiQ,EAAAI,UAAAF,EAAAJ,cACAJ,EAAAQ,EAAAvR,eAAAlO,EAAAzD,SACA0iB,EAAAjf,EAAAzD,OAAAkjB,EAAAvR,gBAEA2T,IACA5C,EAAA,EAAA7hB,EAAA+hB,eACAF,GAAA7hB,EAAA+hB,cAGA2C,IACAjC,EAAAN,GACAuC,GAAA,GAEAD,GAAA,GAGA5C,EAAA7hB,EAAA+hB,eACAF,EAAA,EACA4C,GAAA,GAGAX,GAAA,EAEA,IAAA9W,EAAA6U,EAAAQ,EAAAnY,UACA2X,EAAA7U,GAAApK,EAAAzD,SACA6N,EAAA6U,EAAA7U,EAAApK,EAAAzD,QAEA,IAAA6N,GAMAqV,EAAAnY,UAAA2X,EAqDA,SAAA7U,EAAApK,GACA,IAAAyO,EAAAzO,EAAAqH,SAAAxK,IACAwS,EAAArP,EAAAqH,SAAAgI,QACAqB,EAAA1Q,EAAAqH,SAAAqJ,QAEA,GAAAtG,EAAA,EAAA,CAIA,IAHA,IAAApL,EAAA,EAGAnD,EAAA,EAAAA,EAAAuO,EAAAvO,IAEAmD,EADA,OAAAqQ,EAAA4C,QACAxD,EAAAL,kBAEAiB,EAAA4C,QAAAS,mBACAhC,EAAApB,MAAAJ,sBAAA,cAAAlQ,GAIA,IAAA,IAAAnD,EAAAuO,EAAAvO,EAAA,EAAAA,IACA,OAAAwT,EAAA4C,SACA5C,EAAA4C,QAAAvB,EAAAuB,QAAAS,mBACAjE,EAAAS,sBAAA,aAAAG,EAAA4C,WAGAjT,EAAA0R,EAAAuB,QAAAS,mBACArD,EAAA4C,QAAA/C,sBAAA,WAAAlQ,GACAqQ,EAAA4C,QAAAjT,GAIAqQ,EAAAC,MAAAD,EAAA4C,QAAAS,wBAEA,GAAAtI,EAAA,EAAA,CACA,IAAApL,EAAA,EACAoL,GAAAA,EAGA,IAAA,IAAAvO,EAAA,EAAAA,EAAAuO,EAAAvO,IAEAmD,EADA,OAAAqQ,EAAAC,MACAb,EAAAJ,iBAEAgB,EAAAC,MAAApI,uBACAwJ,EAAAuB,QAAA/C,sBAAA,WAAAlQ,GAIA,IAAA,IAAAnD,EAAA,EAAAA,EAAAuO,EAAAvO,IACA,OAAAwT,EAAAC,OACAD,EAAAC,MAAAoB,EAAApB,MAAApI,uBACAuH,EAAAS,sBAAA,YAAAG,EAAAC,SAIAtQ,EAAA0R,EAAApB,MAAApI,uBACAmI,EAAAC,MAAAJ,sBAAA,cAAAlQ,GACAqQ,EAAAC,MAAAtQ,GAIAqQ,EAAA4C,QAAA5C,EAAAC,MAAApI,wBA3GA6a,CAAA3X,EAAApK,GACAwf,EAAAP,GACAD,EAAAC,EAAAC,EAAAlf,EAAA4B,GAGAsf,GAAA,GAdAA,GAAA,GAiBA/jB,EAAAiB,GAAAmhB,EAAA,SAAAW,GAGAX,IAAA3d,IAAA,IAAAogB,UAAAC,UAAAjhB,QAAA,WACA7D,EAAAiB,GAAAwD,EAAA,YAAA,WACAkgB,GAAA,IAEA3kB,EAAAiB,GAAAwD,EAAA,UAAA,WACAkgB,GAAA,KA1SAI,CAAAliB,EAAAsN,EAAA1L,EAAA2d,IACA,MA4iBA,IAAAoB,EAAA,GACAY,GAAA,GFznBA3mB","file":"scarletsframe.min.js","sourcesContent":["(function(global, factory){\r\n  if(typeof exports === 'object' && typeof module !== 'undefined') module.exports = factory(global);\r\n  else global.sf = factory(global);\r\n}(typeof window !== \"undefined\" ? window : this, (function(window){'use strict';\r\nif(typeof document === undefined)\r\n\tdocument = window.document;\r\n// ===== Module Init =====\r\n\r\nvar sf = function(){\r\n\tif(arguments[0].constructor === Function){\r\n\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\t}\r\n};\r\n\r\nsf.internal = {};\r\nsf.regex = {\r\n\t// ToDo: Need help to skip escaped quote\r\n\tgetQuotes:/(['\"])[\\s\\S]*?[^\\\\]\\1/g,\r\n\tavoidQuotes:'(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)',\r\n\tstrictVar:'(?=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )'\r\n};\r\n\r\nfunction isEmptyObject(obj){\r\n\tfor(var key in obj){\r\n\t\treturn false;\r\n\t}\r\n\treturn true\r\n}\r\n\r\nfunction compareObject(obj1, obj2){\r\n\tif(!obj1 || !obj2)\r\n\t\treturn false;\r\n\r\n\tfor(var i in obj1){\r\n\t\tif(typeof obj1[i] !== 'object' && obj1[i] !== obj2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction hiddenProperty(obj, property, value){\r\n\tObject.defineProperty(obj, property, {\r\n\t\tenumerable: false,\r\n\t\tconfigurable: true,\r\n\t\tvalue: value\r\n\t});\r\n}\r\n\r\nfunction deepProperty(obj, path){\r\n  for(var i = 0; i < path.length; i++){\r\n    obj = obj[path[i]];\r\n    if(obj === undefined) return obj;\r\n  }\r\n  return obj;\r\n}","sf.dom = function(selector, context){\r\n\tif(selector[0] === '<') return sf.dom.parseElement(selector);\r\n\tif(selector.constructor !== String) return selector;\r\n\r\n\tif(context) return context.querySelectorAll(selector);\r\n\treturn document.querySelectorAll(selector);\r\n}\r\n\r\nvar $ = sf.dom; // Shortcut\r\n\r\n;(function(){\r\n\tvar self = sf.dom;\r\n\r\n\tself.findOne = function(selector, context){\r\n\t\tif(context !== undefined) return context.querySelector(selector);\r\n\t\treturn document.querySelector(selector);\r\n\t}\r\n\r\n\tself.parent = function(element, selector){\r\n\t\tif(element.closest) return element.closest(selector);\r\n\r\n\t\tdo {\r\n\t\t\tif(element.matches(selector) === true)\r\n\t\t\t\treturn element;\r\n\r\n\t\t\telement = element.parentElement;\r\n\t\t} while (element !== null);\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tself.prevAll = function(element, selector, isNext){\r\n\t\tvar result = [];\r\n\t\tvar findNodes = selector === null || selector.constructor !== String ? true : false;\r\n\r\n\t\t// Skip current element\r\n\t\telement = isNext ? element.nextSibling : element.previousSibling;\r\n\t\twhile (element !== null) {\r\n\t\t\tif(findNodes === false && element.matches(selector) === true)\r\n\t\t\t\tresult.push(element);\r\n\t\t\telse{\r\n\t\t\t\tif(element === selector)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tresult.push(element);\r\n\t\t\t}\r\n\r\n\t\t\tif(isNext)\r\n\t\t\t\telement = element.nextSibling;\r\n\t\t\telse\r\n\t\t\t\telement = element.previousSibling;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.nextAll = function(element, selector){\r\n\t\treturn self.prevAll(element, selector, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen to an event\r\n\t * @param  Node \t\t\telement \tparent element\r\n\t * @param  string \t\t\tevent   \tevent name\r\n\t * @param  function|string  selector    callback function or selector\r\n\t * @param  function\t\t\tcallback    callback function\r\n\t * @param  boolean\t\t\tonce    \tcall once\r\n\t * @return null\r\n\t */\r\n\tself.on = function(element, event, selector, callback, once){\r\n\t\tif(typeof element === 'string'){\r\n\t\t\telement = document;\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = event;\r\n\t\t\tevent = element;\r\n\t\t}\r\n\r\n\t\tif(typeof selector === 'function'){\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = null;\r\n\t\t}\r\n\r\n\t\tif(selector){\r\n\t\t\tvar tempCallback = callback;\r\n\t\t\tcallback = function(ev){\r\n\t\t\t\tif(self.parent(ev.target, selector) !== null)\r\n\t\t\t\t\ttempCallback(ev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcallback.selector = selector;\r\n\t\telement.addEventListener(event, callback, {capture:true, once:once === true});\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.once = function(element, event, selector, callback){\r\n\t\tself.on(element, event, selector, callback, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event listener\r\n\t * @param  Node \telement \tparent element\r\n\t * @param  string \tevent   \tevent name\r\n\t * @param  string  \tselector    selector\r\n\t * @return null\r\n\t */\r\n\tself.off = function(element, event, selector){\r\n\t\t// Remove all event\r\n\t\tif(event === undefined){\r\n\t\t\tvar events = getEventListeners(element);\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar events = event.split(' ');\r\n\t\tif(events.length !== 1){\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove listener\r\n\t\tvar ref = getEventListeners(element);\r\n\t\tif(ref !== undefined && ref[event] !== undefined){\r\n\t\t\tfor (var i = ref[event].length - 1; i >= 0; i--) {\r\n\t\t\t\tif(selector && ref[event][i].selector !== selector)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\telement.removeEventListener(event, ref[event].splice(i, 1), true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.animateCSS = function(element, animationName, callback, duration) {\r\n\t\tvar animationEnd = {\r\n\t\t\tanimation: 'animationend',\r\n\t\t\tOAnimation: 'oAnimationEnd',\r\n\t\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t\t};\r\n\r\n\t\tfor (var t in animationEnd){\r\n\t\t\tif(element.style[t] !== undefined){\r\n\t\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(duration){\r\n\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t}\r\n\r\n\t\tvar list = ('animated ' + animationName).split(' ');\r\n\t\telement.classList.add.apply(element.classList, list);\r\n\t\t$.once(element, animationEnd, function(){\r\n\t\t\telement.classList.remove.apply(element.classList, list);\r\n\t\t\t\r\n\t\t\tif(duration) setTimeout(function(){\r\n\t\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t\t}, 1);\r\n\r\n\t\t\tif(typeof callback === 'function') callback();\r\n\t\t});\r\n\t}\r\n\r\n\tvar emptyDOM = {\r\n\t\tdiv:document.createElement('div'),\r\n\t\tul:document.createElement('ul'),\r\n\t\ttbody:document.createElement('tbody'),\r\n\t\ttr:document.createElement('tr'),\r\n\t\ttable:document.createElement('table'),\r\n\t\tselect:document.createElement('select'),\r\n\t};\r\n\tself.parseElement = function(html, returnNode){\r\n\t\tvar result = [];\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\r\n        if(html.indexOf('<li') === 0) tempDOM = emptyDOM.ul;\r\n        if(html.indexOf('<tr') === 0) tempDOM = emptyDOM.tbody;\r\n        if(html.indexOf('<td') === 0 || html.indexOf('<th') === 0) tempDOM = emptyDOM.tr;\r\n        if(html.indexOf('<tbody') === 0) tempDOM = emptyDOM.table;\r\n        if(html.indexOf('<option') === 0) tempDOM = emptyDOM.select;\r\n\r\n\t\ttempDOM.textContent = '';\r\n\t\ttempDOM.insertAdjacentHTML('afterBegin', html);\r\n\r\n\t\tvar ref = tempDOM[returnNode ? 'childNodes' : 'children'];\r\n\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\tresult.push(ref.item(i));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tself.remove = function(elements){\r\n\t\tif(elements.remove !== undefined)\r\n\t\t\treturn elements.remove();\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\telements[i].remove();\r\n\t\t}\r\n\t}\r\n\r\n\tvar documentElement = null;\r\n\tsetTimeout(function(){\r\n\t\tsf.loader.domReady(function(){\r\n\t\t\tdocumentElement = document.body.parentElement;\r\n\t\t});\r\n\t}, 1);\r\n\r\n\tself.getSelector = function(element, childIndexes, untilElement){\r\n\t\tvar names = [];\r\n\t\tif(untilElement === undefined) untilElement = documentElement;\r\n\r\n\t\tvar previousSibling = childIndexes ? 'previousSibling' : 'previousElementSibling';\r\n\r\n\t\twhile(element.parentNode !== null){\r\n\t\t\tif(element.id){\r\n\t\t\t\tnames.unshift('#'+element.id);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(element === untilElement){\r\n\t\t\t\t\tif(childIndexes === undefined)\r\n\t\t\t\t\t\tnames.unshift(element.tagName);\r\n\t\t\t\t\telse names.unshift(0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar e = element;\r\n\t\t\t\t\tvar i = childIndexes ? 0 : 1;\r\n\r\n\t\t\t\t\twhile(e[previousSibling]){\r\n\t\t\t\t\t\te = e[previousSibling];\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(childIndexes)\r\n\t\t\t\t\t\tnames.unshift(i);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tnames.unshift(\":nth-child(\"+i+\")\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t\tif(element === null)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndexes)\r\n\t\t\treturn names;\r\n\t\treturn names.join(\" > \");\r\n\t}\r\n\r\n\tself.childIndexes = function(array, context){\r\n\t\tvar element = context || documentElement;\r\n\t\tvar i = 1;\r\n\r\n\t\tif(array[0].constructor === String)\r\n\t\t\telement = element.querySelector(array[0]);\r\n\r\n\t\telse if(array.length === 1)\r\n\t\t\treturn element;\r\n\r\n\t\tfor (i = i; i < array.length; i++) {\r\n\t\t\telement = element.childNodes.item(array[i]);\r\n\r\n\t\t\tif(element === null)\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n})();","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 0;\r\n\tself.DOMWasLoaded = false;\r\n\tself.DOMReady = false;\r\n\tself.turnedOff = true;\r\n\r\n\tvar whenDOMReady = [];\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\tself.off = function(){\r\n\t\tself.turnedOff = true;\r\n\t}\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.domReady = function(func){\r\n\t\tif(self.DOMReady) return func();\r\n\t\tif(whenDOMReady.indexOf(func) !== -1) return;\r\n\t\twhenDOMReady.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('link');\r\n\t        s.rel = 'stylesheet';\r\n\t        s.href = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tself.js = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('script');\r\n\t        s.type = \"text/javascript\";\r\n\t        s.async = true;\r\n\t        s.src = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(function(){\r\n\t\tif(self.totalContent === 0 && !self.turnedOff){\r\n\t\t\tself.loadedContent = self.totalContent = 1;\r\n\t\t\tconsole.warn(\"If you don't use content loader feature, please turn it off with `sf.loader.off()`\");\r\n\t\t}\r\n\t}, 10000);\r\n\r\n\r\n\tvar isQueued = false;\r\n\tvar lastState = '';\r\n\tdocument.addEventListener(\"load\", function domLoadEvent(event){\r\n\t\t// Add processing class to queued element\r\n\t\tif(isQueued === false && document.body){\r\n\t\t\tdocument.removeEventListener('load', domLoadEvent, true);\r\n\r\n\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tfor (var i = 0; i < isQueued.length; i++) {\r\n\t\t\t\tisQueued[i].classList.add('sf-dom-queued');\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued.length === 0) isQueued = false;\r\n\r\n\t\t\tif(lastState === 'loading'){\r\n\t\t\t\tvar repeatedList = $('[sf-repeat-this]', document.body);\r\n\t\t\t\tfor (var i = 0; i < repeatedList.length; i++) {\r\n\t\t\t\t\trepeatedList[i].classList.add('sf-dom-queued');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Find images\r\n\t\t\t\tvar temp = $('img:not(onload)[src]');\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tsf.loader.totalContent++;\r\n\t\t\t\t\ttemp[i].addEventListener('load', sf.loader.f, {once:true});\r\n\t\t\t\t\ttemp[i].addEventListener('error', sf.loader.f, {once:true});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, true);\r\n\r\n\tdocument.addEventListener('readystatechange', function domStateEvent(){\r\n\t\tif(document.readyState === 'interactive' || document.readyState === 'complete'){\r\n\t\t\tif(self.DOMReady === false){\r\n\t\t\t\tself.DOMReady = true;\r\n\t\t\t\tfor (var i = 0; i < whenDOMReady.length; i++) {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\twhenDOMReady[i]();\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued === false)\r\n\t\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tresourceWaitTimer = setInterval(waitResources, 100);\r\n\t\t\tdocument.removeEventListener('readystatechange', domStateEvent, true);\r\n\t\t}\r\n\t}, true);\r\n\r\n\tvar resourceWaitTimer = -1;\r\n\tfunction waitResources(){\r\n\t\tif(self.turnedOff === false && self.loadedContent < self.totalContent)\r\n\t\t\treturn;\r\n\r\n\t\tclearInterval(resourceWaitTimer);\r\n\r\n\t\tvar listener = sf.dom('script, link, img');\r\n\t\tfor (var i = 0; i < listener.length; i++) {\r\n\t\t\tlistener[i].removeEventListener('error', sf.loader.f);\r\n\t\t\tlistener[i].removeEventListener('load', sf.loader.f);\r\n\t\t}\r\n\r\n\t\tself.DOMWasLoaded = true;\r\n\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\ttry{\r\n\t\t\t\twhenDOMLoaded[i]();\r\n\t\t\t} catch(e){\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\twhenProgress.splice(0);\r\n\t\twhenDOMReady.splice(0);\r\n\t\twhenDOMLoaded.splice(0);\r\n\t\twhenDOMReady = whenDOMLoaded = null;\r\n\r\n\t\t// Last init\r\n\t\tsf.controller.init();\r\n\t\tsf.model.init(document.body, isQueued);\r\n\t\tsf.router.init();\r\n\r\n\t\tisQueued = null;\r\n\t}\r\n}\r\nsf.prototype.constructor = sf.loader.onFinish;","// Data save and HTML content binding\r\nsf.model = function(scope){\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\tif(sf.controller.pending[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n};\r\n\r\n(function(){\r\n\tvar self = sf.model;\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\r\n\tvar processingElement = null;\r\n\r\n\t// For debugging, normalize indentation\r\n\tfunction trimIndentation(text){\r\n\t\tvar indent = text.split(\"\\n\", 3);\r\n\t\tif(indent[0][0] !== ' ' || indent[0][0] !== \"\\t\")\r\n\t\t\tindent = indent[1];\r\n\t\telse indent = indent[0];\r\n\r\n\t\tif(indent === undefined) return text;\r\n\t\tindent = indent.length - indent.trim().length;\r\n\t\tif(indent === 0) return text;\r\n\t\treturn text.replace(RegExp('^([\\\\t ]{'+indent+'})', 'gm'), '');\r\n\t}\r\n\r\n\t// Secured evaluation\r\n\tvar bracketMatch = RegExp('([\\\\w.]*?[\\\\S\\\\s])\\\\('+sf.regex.avoidQuotes, 'g');\r\n\tvar chackValidFunctionCall = /[a-zA-Z0-9 \\]\\$\\)]/;\r\n\tvar allowedFunction = [':', 'for', 'if', 'while', '_content_.take', 'console.log'];\r\n\tvar localEval = function(script, _model_, _modelScope, _content_){\r\n\t\t\"use strict\";\r\n\r\n\t\t// ==== Security check ====\r\n\t\tvar tempScript = script;\r\n\r\n\t\t// Remove quotes\r\n\t\ttempScript = tempScript.replace(sf.regex.getQuotes, '\"Quotes\"');\r\n\r\n\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\tvar preventExecution = false;\r\n\t\tvar check_ = null;\r\n\t\twhile((check_ = bracketMatch.exec(tempScript)) !== null){\r\n\t\t\tcheck_[1] = check_[1].trim();\r\n\r\n\t\t\tif(allowedFunction.indexOf(check_[1]) === -1 &&\r\n\t\t\t\tcheck_[1].split('.')[0] !== '_modelScope' &&\r\n\t\t\t\tchackValidFunctionCall.test(check_[1][check_[1].length-1])\r\n\t\t\t){\r\n\t\t\t\tpreventExecution = check_[1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(preventExecution){\r\n\t\t\tconsole.error(\"Trying to executing unrecognized function (\"+preventExecution+\")\");\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\t\t// ==== Security check ended ====\r\n\t\r\n\t\tvar _result_ = '';\r\n\t\ttry{\r\n\t\t\tif(/@return /.test(script) === true){\r\n\t\t\t\tvar _evaled_ = eval('(function(){'+script.split('@return ').join('return ')+'})()');\r\n\t\t\t\treturn _result_ + _evaled_;\r\n\t\t\t}\r\n\t\t\telse var _evaled_ = eval(script);\r\n\t\t} catch(e){\r\n\t\t\tconsole.error(e);\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\t// Find an index for the element on the list\r\n\tself.index = function(element){\r\n\t\tvar i = -1;\r\n\t\tvar tagName = element.tagName;\r\n\t\tvar currentElement = element;\r\n\r\n\t\twhile(element !== null) {\r\n\t\t\tif(element.tagName === tagName)\r\n\t\t\t\ti++;\r\n\r\n\t\t\telement = element.previousElementSibling;\r\n\t\t}\r\n\r\n\t\tvar list = currentElement.getAttribute('sf-bind-list');\r\n\t\tif(!list) return i;\r\n\r\n\t\tvar ref = sf.model.root[sf.controller.modelName(currentElement)][list];\r\n\t\tif(!ref.$virtual) return i;\r\n\r\n\t\treturn i + ref.$virtual.DOMCursor - 1;\r\n\t}\r\n\r\n\t// Declare model for the name with a function\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\t\t\r\n\t\tfunc(self(name), self);\r\n\t}\r\n\r\n\t// Get property of the model\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys.join('|');\r\n\t}\r\n\r\n\t// Escape the escaped quote\r\n\tfunction escapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*');\r\n\t}\r\n\r\n\tfunction unescapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\");\r\n\t}\r\n\r\n\tfunction elseIfHandle(else_, scopes){\r\n\t\tvar elseIf = else_.elseIf;\r\n\r\n\t\t// Else if\r\n\t\tfor (var i = 0; i < elseIf.length; i++) {\r\n\t\t\t// Check the condition\r\n\t\t\tscopes[0] = elseIf[i][0];\r\n\t\t\tif(!localEval.apply(self.root, scopes))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Get the value\r\n\t\t\tscopes[0] = elseIf[i][1];\r\n\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t}\r\n\r\n\t\t// Else\r\n\t\tif(else_.elseValue === null)\r\n\t\t\treturn '';\r\n\r\n\t\tscopes[0] = else_.elseValue;\r\n\t\treturn localEval.apply(self.root, scopes);\r\n\t}\r\n\r\n\t// ==== Template parser ====\r\n\tvar templateParser_regex = /{{%=([0-9]+)/gm;\r\n\tvar REF_DIRECT = 0, REF_IF = 1, REF_EXEC = 2;\r\n\tvar templateExec = function(parse, item, atIndex){\r\n\t\tvar parsed = {};\r\n\r\n\t\t// Get or evaluate static or dynamic data\r\n\t\tfor (var i = 0; i < parse.length; i++) {\r\n\t\t\tif(atIndex !== undefined && atIndex.indexOf(i) === -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar ref = parse[i];\r\n\t\t\tref.data[1] = item;\r\n\r\n\t\t\t// Direct evaluation type\r\n\t\t\tif(ref.type === REF_DIRECT || ref.type === REF_EXEC)\r\n\t\t\t\tparsed[i] = {type:ref.type, data:localEval.apply(self.root, ref.data)};\r\n\r\n\t\t\t// Conditional type\r\n\t\t\telse if(ref.type === REF_IF){\r\n\t\t\t\tvar scopes = ref.data;\r\n\t\t\t\tparsed[i] = {type:ref.type, data:''};\r\n\t\t\t\tscopes[0] = ref.if[0];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tparsed[i].data = elseIfHandle(ref, scopes);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscopes[0] = ref.if[1];\r\n\t\t\t\tparsed[i].data = localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n\r\n\tvar templateParser = function(template, item){\r\n\t\tvar html = template.html.cloneNode(true);\r\n\t\tvar addresses = template.addresses;\r\n\t\tvar parsed = templateExec(template.parse, item);\r\n\r\n\t\t// Save model item reference to node\r\n\t\thtml.model = item;\r\n\r\n\t\tvar changesReference = [];\r\n\t\tvar pendingInsert = [];\r\n\r\n\t\t// Find element where the data belongs to\r\n\t\tfor (var i = 0; i < addresses.length; i++) {\r\n\t\t\tvar ref = addresses[i];\r\n\t\t\tvar current = $.childIndexes(ref.address, html);\r\n\r\n\t\t\t// Modify element attributes\r\n\t\t\tif(ref.nodeType === 1){\r\n\t\t\t\tvar refA = ref.attributes;\r\n\t\t\t\tfor(var a = 0; a < refA.length; a++){\r\n\t\t\t\t\tvar refB = refA[a];\r\n\r\n\t\t\t\t\tchangesReference.push({\r\n\t\t\t\t\t\tattribute:current.attributes[refB.name],\r\n\t\t\t\t\t\tref:refB\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(refB.direct !== undefined){\r\n\t\t\t\t\t\tcurrent.setAttribute(refB.name, parsed[refB.direct].data);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Below is used for multiple data\r\n\t\t\t\t\trefB = current.attributes[refB.name];\r\n\r\n\t\t\t\t\trefB.value = refB.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Replace text node\r\n\t\t\tif(ref.nodeType === 3){\r\n\t\t\t\tvar refA = current;\r\n\r\n\t\t\t\tchangesReference.push({\r\n\t\t\t\t\ttextContent:refA,\r\n\t\t\t\t\tref:ref\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(ref.direct !== undefined){\r\n\t\t\t\t\trefA.textContent = parsed[ref.direct].data;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Below is used for multiple/dynamic data\r\n\t\t\t\trefA.textContent = refA.textContent.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Replace dynamic node\r\n\t\t\tif(ref.nodeType === -1){\r\n\t\t\t\tvar cRef = {\r\n\t\t\t\t\tdynamicFlag:current,\r\n\t\t\t\t\tdirect:ref.parse_index,\r\n\t\t\t\t\tparentNode:current.parentNode,\r\n\t\t\t\t\tstartFlag:ref.startFlag && $.childIndexes(ref.startFlag, html)\r\n\t\t\t\t};\r\n\t\t\t\tchangesReference.push(cRef);\r\n\r\n\t\t\t\t// Pending element insert to take other element reference\r\n\t\t\t\tpendingInsert.push(cRef);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Save reference to element\r\n\t\thtml.sf$elementReferences = changesReference;\r\n\t\t// html.sf$modelParsed = parsed;\r\n\r\n\t\t// Run the pending element\r\n\t\tfor (var i = 0; i < pendingInsert.length; i++) {\r\n\t\t\tvar ref = pendingInsert[i];\r\n\t\t\tvar tDOM = $.parseElement(parsed[ref.direct].data, true);\r\n\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\tref.parentNode.insertBefore(tDOM[a], ref.dynamicFlag);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t}\r\n\r\n\tfunction syntheticCache(element, template, item){\r\n\t\tif(element.sf$cache === undefined)\r\n\t\t\telement.sf$cache = {};\r\n\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\tvar ref = modelRef_array[i];\r\n\t\t\tcache[ref[0]] = deepProperty(item, ref[1]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction syntheticTemplate(element, template, property, item){\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tif(property !== undefined){\r\n\t\t\tvar changes = template.modelReference[property];\r\n\t\t\tif(changes === undefined || changes.length === 0){\r\n\t\t\t\tconsole.error(\"Failed to run syntheticTemplate because property '\"+property+\"' is not observed\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\tif(ref[0] !== property) continue;\r\n\r\n\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t// Check if data was different\r\n\t\t\t\tif(cache[ref[0]] !== newData)\r\n\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar changes = [];\r\n\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t// Check if data was different\r\n\t\t\t\tif(cache[ref[0]] !== newData){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(changes.length === 0) return false;\r\n\t\t}\r\n\r\n\t\tvar parsed = templateExec(template.parse, item, changes);\r\n\t\tfunction checkRelatedChanges(parseIndex){\r\n\t\t\tvar found = false;\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(changes.indexOf(parseIndex[i]) !== -1){\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(found === false)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t// Prepare all required data\r\n\t\t\tchanges = [];\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(parsed[parseIndex[i]] === undefined){\r\n\t\t\t\t\tchanges.push(parseIndex[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tObject.assign(parsed, templateExec(template.parse, item, changes));\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tvar changesReference = element.sf$elementReferences;\r\n\t\tvar haveChanges = false;\r\n\t\tfor (var i = 0; i < changesReference.length; i++) {\r\n\t\t\tvar cRef = changesReference[i];\r\n\r\n\t\t\tif(cRef.dynamicFlag !== undefined){ // Dynamic data\r\n\t\t\t\tif(parsed[cRef.direct] !== undefined){\r\n\t\t\t\t\tvar tDOM = $.parseElement(parsed[cRef.direct].data, true);\r\n\t\t\t\t\tvar currentDOM = $.prevAll(cRef.dynamicFlag, cRef.startFlag);\r\n\t\t\t\t\tvar notExist = false;\r\n\r\n\t\t\t\t\t// Replace if exist, skip if similar\r\n\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\t\t\tif(currentDOM[a] === undefined){\r\n\t\t\t\t\t\t\tnotExist = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(currentDOM[a].isEqualNode(tDOM[a]) === false)\r\n\t\t\t\t\t\t\tcRef.parentNode.replaceChild(tDOM[a], currentDOM[a]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Add if not exist\r\n\t\t\t\t\tif(notExist){\r\n\t\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++)\r\n\t\t\t\t\t\t\tcRef.parentNode.insertBefore(tDOM[a], cRef.dynamicFlag);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove if over index\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tfor (var a = tDOM.length; a < currentDOM.length; a++) {\r\n\t\t\t\t\t\t\tcurrentDOM[a].remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(cRef.textContent !== undefined){ // Text only\r\n\t\t\t\tif(cRef.ref.parse_index !== undefined){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.textContent.textContent === temp) continue;\r\n\t\t\t\t\t\tcRef.textContent.textContent = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.textContent.textContent === value) continue;\r\n\t\t\t\t\tcRef.textContent.textContent = value;\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(cRef.attribute !== undefined){ // Attributes\r\n\t\t\t\tif(cRef.ref.parse_index !== undefined){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.attribute.value === temp) continue;\r\n\t\t\t\t\t\tcRef.attribute.value = temp;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.attribute.value === value) continue;\r\n\t\t\t\t\tcRef.attribute.value = value;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn haveChanges;\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval, preParsedReference){\r\n\t\tvar _modelScope = self.root[scope];\r\n\t\tif(!runEval) runEval = '';\r\n\t\t\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(_modelScope);\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(_modelScope[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\tvar preParsed = [];\r\n\t\t\tvar lastParsedIndex = preParsedReference.length;\r\n\t\t}\r\n\r\n\t\tvar prepared = html.replace(/{{([^@%][\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = escapeEscapedQuote(temp); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\r\n\t\t\ttemp = unescapeEscapedQuote(temp); // ToDo: Unescape\r\n\r\n\t\t\t// Unescape HTML\r\n\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t// Evaluate\r\n\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\ttemp = temp.trim();\r\n\r\n\t\t\t\t// Simplicity similar\r\n\t\t\t\tvar exist = preParsed.indexOf(temp);\r\n\r\n\t\t\t\tif(exist === -1){\r\n\t\t\t\t\tpreParsed.push(temp);\r\n\t\t\t\t\tpreParsedReference.push({type:REF_DIRECT, data:[temp, _model_, _modelScope]});\r\n\t\t\t\t\treturn '{{%=' + (preParsed.length + lastParsedIndex - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn '{{%=' + (exist + lastParsedIndex);\r\n\t\t\t}\r\n\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(/(?!&#.*?;)[\\u00A0-\\u9999<>\\&]/gm, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\tpreParsed = variableList = _modelScope = _model_ = mask = scope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t}\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\t// Dynamic data parser\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope, runEval){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(passVar === null)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\t// Use strict mode and prepare for new variables\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\t// Declare new variable\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove var because no variable are being passed\r\n\t\t\t\tif(firstTime === true)\r\n\t\t\t\t\tstrDeclare = strDeclare.replace('var ', '');\r\n\r\n\t\t\t\t// Escape function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('&#40;').split(')').join('&#41;');\r\n\r\n\t\t\t\t// Pass to static data parser for another HTML data\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Build script preparation\r\n\t\thtml = html.replace(/{\\[([\\s\\S]*?)\\]}/g, function(full, matched){\r\n\t\t\tif(/{{.*?}}/.test(matched) === false)\r\n\t\t\t\treturn \"_result_ += '\"+matched.split(\"'\").join(\"\\\\'\")+\"'\";\r\n\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope)+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(runEval === '#noEval')\r\n\t\t\tvar preParsedReference = [];\r\n\r\n\t\tvar prepared = html.replace(/{{(@[\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = escapeEscapedQuote(temp); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\t\t\ttemp = unescapeEscapedQuote(temp); // ToDo: Unescape\r\n\r\n\t\t\t// Unescape HTML\r\n\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass_ = /(var|let)([\\w,\\s]+)(?=\\s(?==|in|of))/g;\r\n\t\t\tvar VarPass = [];\r\n\t\t\tvar s1 = null;\r\n\t\t\twhile((s1 = VarPass_.exec(temp)) !== null){\r\n\t\t\t\tVarPass.push(s1[2]);\r\n\t\t\t}\r\n\r\n\t\t\tif(_model_ === null && runEval === '#noEval')\r\n\t\t\t\tVarPass.push('_model_');\r\n\r\n\t\t\tif(VarPass.length !== 0){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/([\\n\\t\\r]|  )+/g, '').split(',').forEach(function(val){\r\n\t\t\t\t\t\tobtained.push(val);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':(typeof '+VarPass[i]+'!==\"undefined\"?'+VarPass[i]+':undefined)';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(VarPass.length === 0)\r\n\t\t\t\t\tVarPass = 'null';\r\n\t\t\t\telse VarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\t\t\telse temp = temp.split('&VarPass&').join('null');\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\r\n\t\t\t\t// {if, elseIf:([if, value], ...), elseValue}\r\n\t\t\t\tvar findElse = function(text){\r\n\t\t\t\t\ttext = text.join(':');\r\n\t\t\t\t\tvar else_ = null;\r\n\r\n\t\t\t\t\t// Get else value\r\n\t\t\t\t\tvar text = text.split('@else' + (text.indexOf(':') !== -1 ? ':' : ' :'));\r\n\t\t\t\t\tif(text.length === 2)\r\n\t\t\t\t\t\telse_ = text.pop();\r\n\t\t\t\t\telse text = text[0];\r\n\r\n\t\t\t\t\t// Split elseIf\r\n\t\t\t\t\ttext = text.split('@elseif ');\r\n\r\n\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t\tif:text.shift(),\r\n\t\t\t\t\t\telseIf:[],\r\n\t\t\t\t\t\telseValue:else_\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Separate condition script and value\r\n\t\t\t\t\tfor (var i = 0; i < text.length; i++) {\r\n\t\t\t\t\t\tvar val = text[i].split(':');\r\n\t\t\t\t\t\tobj.elseIf.push([val.shift(), val.join(':')]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tvar condition = check.shift();\r\n\t\t\t\t\tvar elseIf = findElse(check);\r\n\t\t\t\t\telseIf.type = REF_IF;\r\n\t\t\t\t\telseIf.data = [null, _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t\t// Trim Data\r\n\t\t\t\t\telseIf.if = [condition.trim(), elseIf.if.trim()];\r\n\t\t\t\t\tif(elseIf.elseValue !== null)\r\n\t\t\t\t\t\telseIf.elseValue = elseIf.elseValue.trim();\r\n\r\n\t\t\t\t\tfor (var i = 0; i < elseIf.elseIf.length; i++) {\r\n\t\t\t\t\t\telseIf.elseIf[i][0] = elseIf.elseIf[i][0].trim();\r\n\t\t\t\t\t\telseIf.elseIf[i][1] = elseIf.elseIf[i][1].trim();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Push data\r\n\t\t\t\t\tpreParsedReference.push(elseIf);\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scopes = [check[0], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\treturn elseIfHandle(findElse(check), scopes);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcheck.shift();\r\n\t\t\t\tscopes[0] = check.join(':');\r\n\r\n\t\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tvar scopes = [check[1], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tpreParsedReference.push({type:REF_EXEC, data:scopes});\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, scopes);\r\n\t\t\t\treturn temp;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\t_modelScope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t\treturn [prepared, preParsedReference, _content_];\r\n\t\t}\r\n\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\tvar bindArray = function(template, list, mask, modelName, propertyName, targetNode, parentNode, tempDOM){\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'swap', 'move', 'replace', 'softRefresh', 'hardRefresh'];\r\n\t\tvar refreshTimer = -1;\r\n\t\tvar parentChilds = parentNode.children;\r\n\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\r\n\t\t// Update callback\r\n\t\tvar callback = self.root[modelName]['on$'+propertyName];\r\n\r\n\t\tvar processElement = function(index, options, other, count){\r\n\t\t\t// Find boundary for inserting to virtual DOM\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar vStartRange = list.$virtual.DOMCursor;\r\n\t\t\t\tvar vEndRange = vStartRange + list.$virtual.preparedLength;\r\n\t\t\t}\r\n\r\n\t\t\tif(options === 'clear'){\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar spacer = [parentNode.firstElementChild, parentNode.lastElementChild];\r\n\r\n\t\t\t\tparentNode.textContent = '';\r\n\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tparentNode.appendChild(spacer[0]);\r\n\t\t\t\t\tparentNode.appendChild(spacer[1]);\r\n\t\t\t\t\tlist.$virtual.dom.textContent = '';\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid multiple refresh by set a timer\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar exist = list.$virtual.elements();\r\n\r\n\t\t\t\tclearTimeout(refreshTimer);\r\n\t\t\t\trefreshTimer = setTimeout(function(){\r\n\t\t\t\t\tlist.$virtual.refresh(true);\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse exist = parentChilds;\r\n\r\n\t\t\t// Hard refresh - Append element\r\n\t\t\tif(options === 'hardRefresh'){\r\n\t\t\t\t// Clear siblings after the index\r\n\t\t\t\tfor (var i = index; i < exist.length; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar vCursor = list.$virtual.vCursor;\r\n\r\n\t\t\t\tfor (var i = index; i < list.length; i++) {\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\t\telse list.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse parentNode.appendChild(temp);\r\n\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(options === 'swap' || options === 'move'){\r\n\t\t\t\tif(options === 'move'){\r\n\t\t\t\t\tvar overflow = list.length - index - count;\r\n\t\t\t\t\tif(overflow < 0)\r\n\t\t\t\t\t\tcount += overflow;\r\n\r\n\t\t\t\t\t// Move to virtual DOM\r\n\t\t\t\t\tvar vDOM = document.createElement('div');\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tvDOM.appendChild(exist[index + i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar nextSibling = exist[other] || null;\r\n\t\t\t\t\tvar theParent = nextSibling && nextSibling.parentNode;\r\n\r\n\t\t\t\t\tif(theParent === false){\r\n\t\t\t\t\t\tif(list.$virtual && list.length >= vEndRange)\r\n\t\t\t\t\t\t\ttheParent = list.$virtual.dom;\r\n\t\t\t\t\t\telse theParent = parentNode;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Move to defined index\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\ttheParent.insertBefore(vDOM.firstElementChild, nextSibling);\r\n\r\n\t\t\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\t\t\tcallback.update(exist[index + i], 'move');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(index > other){\r\n\t\t\t\t\tvar index_a = exist[other];\r\n\t\t\t\t\tother = exist[index];\r\n\t\t\t\t\tindex = index_a;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tindex = exist[index];\r\n\t\t\t\t\tother = exist[other];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar other_sibling = other.nextSibling;\r\n\t\t\t\tvar other_parent = other.parentNode;\r\n\t            index.parentNode.insertBefore(other, index.nextSibling);\r\n\t            other_parent.insertBefore(index, other_sibling);\r\n\r\n\t\t\t\tif(callback !== undefined && callback.update){\r\n\t\t\t\t\tcallback.update(exist[other], 'swap');\r\n\t\t\t\t\tcallback.update(exist[index], 'swap');\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Clear unused element if current array < last array\r\n\t\t\tif(options === 'removeRange'){\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\texist[index].remove();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(options === 'remove'){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\texist[index].remove();\r\n\t\t\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.remove){\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tsetTimeout(startRemove, 800);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse startRemove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update\r\n\t\t\telse if(options === 'update'){\r\n\t\t\t\tif(index === undefined){\r\n\t\t\t\t\tindex = 0;\r\n\t\t\t\t\tother = list.length;\r\n\t\t\t\t}\r\n\t\t\t\telse if(other === undefined) other = index + 1;\r\n\t\t\t\telse if(other < 0) other = list.length + other;\r\n\t\t\t\telse other += index;\r\n\r\n\t\t\t\t// Trim length\r\n\t\t\t\tvar overflow = list.length - other;\r\n\t\t\t\tif(overflow < 0) other = other + overflow;\r\n\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\tvar oldChild = exist[i];\r\n\t\t\t\t\tif(oldChild === undefined || list[i] === undefined)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\toldChild.parentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tparentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\t\tcallback.update(temp, 'replace');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar item = list[index];\r\n\t\t\tif(item === undefined) return;\r\n\r\n\t\t\tvar temp = templateParser(template, item);\r\n\t\t\tif(isKeyed === false)\r\n\t\t\t\tsyntheticCache(temp, template, item);\r\n\r\n\t\t\t// Create\r\n\t\t\tif(options === 'insertAfter'){\r\n\t\t\t\tvar index = index !== 0 ? index - 1 : (exist.length - 1);\r\n\t\t\t\tvar referenceNode = exist[index];\r\n\r\n\t\t\t\tif(referenceNode === undefined){\r\n\t\t\t\t\tif(!list.$virtual || list.length === 0){\r\n\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.firstElementChild); // prepend\r\n\t\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treferenceNode.insertAdjacentElement('afterEnd', temp);\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\r\n\t\t\t\t// Refresh virtual scroll\r\n\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t}\r\n\t\t\telse if(options === 'prepend'){\r\n\t\t\t\tvar referenceNode = exist[0];\r\n\t\t\t\tif(referenceNode !== undefined){\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode);\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\r\n\t\t\t\t\t// Refresh virtual scroll\r\n\t\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t\t}\r\n\t\t\t\telse options = 'append';\r\n\t\t\t}\r\n\t\t\tif(options === 'append'){\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tif(index === 0)\r\n\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\telse \r\n\t\t\t\t\t\texist[index-1].insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\r\n\t\t\t\t\t// Refresh virtual scroll\r\n\t\t\t\t\tlist.$virtual.refresh();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparentNode.appendChild(temp);\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar _double_zero = [0,0]; // For arguments\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = undefined;\r\n\t\t\t\t\tvar lastLength = this.length;\r\n\r\n\t\t\t\t\tif(name === 'move'){\r\n\t\t\t\t\t\tvar from = arguments[0];\r\n\t\t\t\t\t\tvar to = arguments[1];\r\n\t\t\t\t\t\tif(from === to) return;\r\n\t\t\t\t\t\tvar count = arguments[2] || 1;\r\n\t\t\t\t\t\tprocessElement(from, 'move', to, count);\r\n\r\n\t\t\t\t\t\tvar temp = Array.prototype.splice.apply(this, [from, count]);\r\n\t\t\t\t\t\ttemp.unshift(to, 0);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(name === 'swap'){\r\n\t\t\t\t\t\tvar i = arguments[0];\r\n\t\t\t\t\t\tvar o = arguments[1];\r\n\t\t\t\t\t\tif(i === o) return;\r\n\t\t\t\t\t\tprocessElement(i, 'swap', o);\r\n\t\t\t\t\t\tvar temp = this[i];\r\n\t\t\t\t\t\tthis[i] = this[o];\r\n\t\t\t\t\t\tthis[o] = temp;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'replace'){\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.resetViewport();\r\n\r\n\t\t\t\t\t\t// Check if item has same reference\r\n\t\t\t\t\t\tif(arguments[0].length >= lastLength && lastLength !== 0){\r\n\t\t\t\t\t\t\tvar matchLeft = lastLength;\r\n\t\t\t\t\t\t\tvar ref = arguments[0];\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < lastLength; i++) {\r\n\t\t\t\t\t\t\t\tif(ref[i] === this[i]){\r\n\t\t\t\t\t\t\t\t\tmatchLeft--;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the end\r\n\t\t\t\t\t\t\tif(matchLeft === 0){\r\n\t\t\t\t\t\t\t\tif(ref.length === lastLength) return;\r\n\r\n\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(lastLength);\r\n\t\t\t\t\t\t\t\ttemp.unshift(lastLength, 0);\r\n\t\t\t\t\t\t\t\tthis.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the middle\r\n\t\t\t\t\t\t\telse if(matchLeft !== lastLength){\r\n\t\t\t\t\t\t\t\tif(arguments[1] === true){\r\n\t\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(i);\r\n\t\t\t\t\t\t\t\t\ttemp.unshift(i, lastLength - i);\r\n\t\t\t\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t\t\t\tlist.refresh(i, lastLength);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Build from zero\r\n\t\t\t\t\t\tif(lastLength === 0){\r\n\t\t\t\t\t\t\tArray.prototype.push.apply(this, arguments[0]);\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Clear all items and merge the new one\r\n\t\t\t\t\t\tvar temp = [0, lastLength];\r\n\t\t\t\t\t\tArray.prototype.push.apply(temp, arguments[0]);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Rebuild all element\r\n\t\t\t\t\t\tif(arguments[1] !== true || isKeyed){\r\n\t\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reuse some element\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t// Clear unused element if current array < last array\r\n\t\t\t\t\t\t\tif(this.length < lastLength)\r\n\t\t\t\t\t\t\t\tprocessElement(this.length, 'removeRange', lastLength);\r\n\r\n\t\t\t\t\t\t\t// And start refreshing\r\n\t\t\t\t\t\t\tlist.refresh(0, this.length);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reset virtual list\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reset();\r\n\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice' && arguments[0] === 0 && arguments[1] === undefined){\r\n\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\treturn Array.prototype.splice.apply(this, arguments);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(this.length, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'push')\r\n\t\t\t\t\t\tprocessElement(lastLength, 'append');\r\n\r\n\t\t\t\t\telse if(name === 'shift')\r\n\t\t\t\t\t\tprocessElement(0, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments[0] === 0 && arguments[1] === undefined)\r\n\t\t\t\t\t\t\treturn temp;\r\n\r\n\t\t\t\t\t\t// Removing data\r\n\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\tif(real < 0) real = lastLength + real;\r\n\r\n\t\t\t\t\t\tvar limit = arguments[1];\r\n\t\t\t\t\t\tif(!limit && limit !== 0) limit = this.length;\r\n\r\n\t\t\t\t\t\tfor (var i = limit - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tprocessElement(real + i, 'remove');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(arguments.length >= 3){ // Inserting data\r\n\t\t\t\t\t\t\tlimit = arguments.length - 2;\r\n\r\n\t\t\t\t\t\t\t// Trim the index if more than length\r\n\t\t\t\t\t\t\tif(real >= this.length)\r\n\t\t\t\t\t\t\t\treal = this.length - 1;\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < limit; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(real + i, 'insertAfter');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift')\r\n\t\t\t\t\t\tprocessElement(0, 'prepend');\r\n\r\n\t\t\t\t\telse if(name === 'softRefresh')\r\n\t\t\t\t\t\tprocessElement(arguments[0], 'update', arguments[1]);\r\n\r\n\t\t\t\t\telse if(name === 'hardRefresh')\r\n\t\t\t\t\t\tprocessElement(arguments[0] || 0, 'hardRefresh');\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(parentNode && parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\tdelete list.$virtual;\r\n\t\t\tlist.$virtual = {};\r\n\r\n\t\t\t// Transfer virtual DOM\r\n\t\t\tlist.$virtual.dom = tempDOM;\r\n\r\n\t\t\tparentNode.replaceChild(template.html, parentChilds[1]);\r\n\t\t\tsf.internal.virtual_scroll.handle(list, targetNode, parentNode);\r\n\t\t\ttemplate.html.remove();\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\r\n\t\t// Todo: Enable auto item binding\r\n\t\tif(false && list.auto !== false){\r\n\t\t\t// for (var i = 0; i < list.length; i++) {\r\n\t\t\t// \tlist[i]\r\n\t\t\t// }\r\n\t\t}\r\n\r\n\t\thiddenProperty(list, 'refresh', function(index, length, property){\r\n\t\t\tif(index === undefined || index.constructor === String){\r\n\t\t\t\tproperty = index;\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tlength = list.length;\r\n\t\t\t}\r\n\t\t\telse if(length === undefined) length = index + 1;\r\n\t\t\telse if(length.constructor === String){\r\n\t\t\t\tproperty = length;\r\n\t\t\t\tlength = index + 1;\r\n\t\t\t}\r\n\t\t\telse if(length < 0) length = list.length + length;\r\n\t\t\telse length += index;\r\n\r\n\t\t\t// Trim length\r\n\t\t\tvar overflow = list.length - length;\r\n\t\t\tif(overflow < 0) length = length + overflow;\r\n\r\n\t\t\tfor (var i = index; i < length; i++) {\r\n\t\t\t\tvar elem = list.getElement(i);\r\n\r\n\t\t\t\t// Create element if not exist\r\n\t\t\t\tif(elem === undefined){\r\n\t\t\t\t\tlist.hardRefresh(i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(isKeyed === true)\r\n\t\t\t\t\t\tlist.softRefresh(i);\r\n\t\t\t\t\telse if(syntheticTemplate(elem, template, property, list[i]) === false)\r\n\t\t\t\t\t\tcontinue; // Continue if no update\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\tcallback.update(elem, 'replace');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar virtualChilds = null;\r\n\t\tif(list.$virtual){\r\n\t\t\tvirtualChilds = list.$virtual.dom.children;\r\n\t\t\tvar floorBound = list.$virtual.dCursor.floor;\r\n\t\t}\r\n\t\thiddenProperty(list, 'getElement', function(index){\r\n\t\t\tif(virtualChilds !== null){\r\n\t\t\t\tvar ret = undefined;\r\n\t\t\t\tif(index < list.$virtual.DOMCursor)\r\n\t\t\t\t\tret = virtualChilds[index];\r\n\t\t\t\telse {\r\n\t\t\t\t\tindex -= list.$virtual.DOMCursor;\r\n\t\t\t\t\tvar childElement = parentNode.childElementCount - 2;\r\n\r\n\t\t\t\t\tif(index <= childElement)\r\n\t\t\t\t\t\tret = parentChilds[index + 1];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tret = virtualChilds[index - childElement + list.$virtual.DOMCursor];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(ret !== floorBound)\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t\treturn parentChilds[index];\r\n\t\t});\r\n\t}\r\n\r\n\tvar loopParser = function(name, template, script, targetNode, parentNode){\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\r\n\t\tif(!self.root[name])\r\n\t\t\treturn console.error(\"Can't parse element because model for '\"+name+\"' was not found\", template);\r\n\r\n\t\tvar items = self.root[name][method[1]];\r\n\t\tif(items === undefined){\r\n\t\t\tconsole.error(\"Can't bind array to `\"+method[1]+\"` because undefined property in model `\"+name+\"`\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttemplate.setAttribute('sf-bind-list', method[1]);\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = template;\r\n\t\ttemplate = self.extractPreprocess(template, mask, name);\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tvar tempDOM = document.createElement('div');\r\n\t\t\tvar modelRef = self.root[name];\r\n\r\n\t\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\t\tvar elem = templateParser(template, items[i]);\r\n\t\t\t\ttempDOM.appendChild(elem);\r\n\r\n\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\tsyntheticCache(elem, template, items[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// Enable element binding\r\n\t\t\tif(modelRef.sf$bindedKey === undefined)\r\n\t\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\t\tif(modelRef.sf$bindedKey[method[1]] === undefined)\r\n\t\t\t\tmodelRef.sf$bindedKey[method[1]] = null;\r\n\r\n\t\t\tObject.defineProperty(modelRef, method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tif(val.length === 0)\r\n\t\t\t\t\t\treturn items.splice(0);\r\n\t\t\t\t\treturn items.replace(val, true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tbindArray(template, items, mask, name, method[1], targetNode, parentNode, tempDOM);\r\n\r\n\t\t\t// Output to real DOM if not being used for virtual list\r\n\t\t\tif(items.$virtual === undefined){\r\n\t\t\t\tvar children = tempDOM.children;\r\n\t\t\t\tfor (var i = 0, n = children.length; i < n; i++) {\r\n\t\t\t\t\tparentNode.appendChild(children[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttempDOM.remove();\r\n\t\t\t\ttempDOM = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar inputBoundFunction = function(e){\r\n\t\tself.root[e.target['sf-model']][e.target['sf-bounded']] = e.target.value;\r\n\t};\r\n\r\n\tvar bindInput = function(targetNode){\r\n\t\tvar temp = $('input[sf-bound]', targetNode);\r\n\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar model = sf.controller.modelName(element);\r\n\t\t\tif(!model) return;\r\n\r\n\t\t\tvar whichVar = element.getAttribute('sf-bound');\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(typeof self.root[model][whichVar] === undefined){\r\n\t\t\t\tconsole.error('Cannot get reference for self.root[\"' + model + '\"][\"' + whichVar+'\"]');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement['sf-bounded'] = whichVar;\r\n\t\t\telement['sf-model'] = model;\r\n\t\t\telement.setAttribute('sf-bounded', '');\r\n\t\t\telement.removeAttribute('sf-bound');\r\n\r\n\t\t\t// Bound value change\r\n\t\t\tif(element.tagName === 'INPUT' || element.tagName === 'TEXTAREA')\r\n\t\t\t\t$.on(element, 'keyup', inputBoundFunction);\r\n\r\n\t\t\telse\r\n\t\t\t\t$.on(element, 'change', inputBoundFunction);\r\n\t\t}\r\n\t}\r\n\r\n\tvar alreadyInitialized = false;\r\n\tself.init = function(targetNode, queued){\r\n\t\tif(alreadyInitialized && !targetNode) return;\r\n\t\talreadyInitialized = true;\r\n\t\tsetTimeout(function(){\r\n\t\t\talreadyInitialized = false;\r\n\t\t}, 50);\r\n\r\n\t\tif(!targetNode) targetNode = document.body;\r\n\t\tself.parsePreprocess(queued || self.queuePreprocess(targetNode), queued);\r\n\t\tbindInput(targetNode);\r\n\r\n\t\tvar temp = $('[sf-repeat-this]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar parent = element.parentElement;\r\n\r\n\t\t\tif(queued !== undefined)\r\n\t\t\t\telement.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(element.parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\t\tvar ceiling = document.createElement(element.tagName);\r\n\t\t\t\tceiling.classList.add('virtual-spacer');\r\n\t\t\t\tvar floor = ceiling.cloneNode(true);\r\n\r\n\t\t\t\tceiling.classList.add('ceiling');\r\n\t\t\t\t//ceiling.style.transform = 'scaleY(0)';\r\n\t\t\t\telement.parentNode.insertAdjacentElement('afterBegin', ceiling); // prepend\r\n\r\n\t\t\t\tfloor.classList.add('floor');\r\n\t\t\t\t//floor.style.transform = 'scaleY(0)';\r\n\t\t\t\telement.parentNode.insertAdjacentElement('beforeEnd', floor); // append\r\n\r\n\t\t\t\t// His total scrollHeight\r\n\t\t\t\tvar styles = window.getComputedStyle(element);\r\n\t\t\t\tvar absHeight = parseFloat(styles['marginTop']) + parseFloat(styles['marginBottom']);\r\n\t\t\t\tstyles = null;\r\n\r\n\t\t\t\t// Element height + margin\r\n\t\t\t\tabsHeight = Math.ceil(element.offsetHeight + absHeight);\r\n\t\t\t}\r\n\r\n\t\t\tvar after = element.nextElementSibling;\r\n\t\t\tif(after === null || element === after)\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = element.previousElementSibling;\r\n\t\t\tif(before === null || element === before)\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = element.getAttribute('sf-repeat-this');\r\n\t\t\telement.removeAttribute('sf-repeat-this');\r\n\t\t\tvar controller = sf.controller.modelName(element);\r\n\r\n\t\t\t// Check if the element was already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(element.outerHTML))\r\n\t\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\t\tloopParser(controller, element, script, targetNode, element.parentNode);\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t}\r\n\r\n\t// Reset model properties\r\n\t// Don't call if the removed element is TEXT or #comment\r\n\tfunction DOMNodeRemoved(element){\r\n\t\tvar temp = $('[sf-controller]', element);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tremoveModelBinding(temp[i].getAttribute('sf-controller'));\r\n\t\t}\r\n\r\n\t\tif(element.hasAttribute('sf-controller') === false)\r\n\t\t\treturn;\r\n\r\n\t\tremoveModelBinding(element.getAttribute('sf-controller'));\r\n\t}\r\n\r\n\tsf(function(){\r\n\t\tvar everyRemovedNodes = function(nodes){\r\n\t\t\tvar tagName = nodes.nodeName;\r\n\t\t\tif(tagName === 'TEXT' || tagName === '#text' || tagName === '#comment') return;\r\n\r\n\t\t\tDOMNodeRemoved(nodes);\r\n\t\t}\r\n\r\n\t\tif(typeof MutationObserver === 'function' && MutationObserver.prototype.observe){\r\n\t\t\tvar everyRecords = function(record){\r\n\t\t\t\trecord.removedNodes.forEach(everyRemovedNodes);\r\n\t\t\t}\r\n\r\n\t\t\tvar observer = new MutationObserver(function(records){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\trecords.forEach(everyRecords);\r\n\t\t\t});\r\n\r\n\t\t\tobserver.observe(document.body, { childList: true, subtree: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.body.addEventListener('DOMNodeRemoved', function(e){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\teveryRemovedNodes(e.target);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tvar removeModelBinding = function(modelName){\r\n\t\tvar ref = self.root[modelName];\r\n\t\tif(ref === undefined)\r\n\t\t\treturn;\r\n\r\n\t\tvar bindedKey = ref.sf$bindedKey;\r\n\t\tvar temp = null;\r\n\t\tfor(var key in bindedKey){\r\n\t\t\tdelete bindedKey[key];\r\n\r\n\t\t\tif(ref[key] === undefined || ref[key] === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(ref[key].constructor === String ||\r\n\t\t\t\tref[key].constructor === Number ||\r\n\t\t\t\tref[key].constructor === Boolean\r\n\t\t\t){/* Ok */}\r\n\r\n\t\t\telse if(ref[key].constructor === Array){\r\n\t\t\t\tif(ref[key].$virtual){\r\n\t\t\t\t\tref[key].$virtual.destroy();\r\n\t\t\t\t\tdelete ref[key].$virtual;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset property without copying the array\r\n\t\t\t\ttemp = ref[key].splice('obtain');\r\n\t\t\t\tdelete ref[key];\r\n\t\t\t\tref[key] = temp;\r\n\t\t\t}\r\n\t\t\telse continue;\r\n\r\n\t\t\tif(Object.getOwnPropertyDescriptor(ref, key) === undefined)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Reconfigure / Remove property descriptor\r\n\t\t\tvar temp = ref[key];\r\n\t\t\tdelete ref[key];\r\n\t\t\tref[key] = temp;\r\n\t\t}\r\n\t}\r\n\r\n\tvar dcBracket = /{{[\\s\\S]*?}}/;\r\n\tvar bindObject = function(element, modelRef, propertyName, which){\r\n\t\tif(!(element instanceof Node))\r\n\t\t\telement = element[0];\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = element;\r\n\r\n\t\t// First initialization\r\n\t\telement.setAttribute('sf-bind-key', propertyName);\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\r\n\t\t// Cache attribute content\r\n\t\tif(which === 'attr' || !which){\r\n\t\t\tvar attrs = {};\r\n\r\n\t\t\tfor (var i = 0; i < element.attributes.length; i++) {\r\n\t\t\t\tvar attr = element.attributes[i].name;\r\n\r\n\t\t\t\t// Check if it has a bracket\r\n\t\t\t\tif(dcBracket.test(element.getAttribute(attr)) === false)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tattrs[attr] = element.getAttribute(attr);\r\n\t\t\t\telement.removeAttribute(attr);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Cache html content\r\n\t\tif(which === 'html' || !which)\r\n\t\t\tvar htmlClone = element.cloneNode(true).innerHTML;\r\n\r\n\t\tvar onChanges = function(){\r\n\t\t\tif(which === 'attr' || !which){\r\n\t\t\t\tfor(var name in attrs){\r\n\t\t\t\t\tif(attrs[name].indexOf(propertyName) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tvar temp = dataParser(attrs[name], modelRef, false, modelName);\r\n\t\t\t\t\tif(name === 'value')\r\n\t\t\t\t\t\telement.value = temp;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\telement.setAttribute(name, temp);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(which === 'html' || !which){\r\n\t\t\t\tvar temp = uniqueDataParser(htmlClone, modelRef, false, modelName);\r\n\t\t\t\ttemp = dataParser(temp, modelRef, false, modelName);\r\n\t\t\t\telement.textContent = '';\r\n\t\t\t\telement.insertAdjacentHTML('afterBegin', temp);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif(modelRef[propertyName] === undefined)\r\n\t\t\tthrow \"Property '\"+propertyName+\"' was not found on '\"+modelName+\"' model\";\r\n\r\n\t\t// Enable multiple element binding\r\n\t\tif(modelRef.sf$bindedKey === undefined)\r\n\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\tif(modelRef.sf$bindedKey[propertyName] !== undefined){\r\n\t\t\tmodelRef.sf$bindedKey[propertyName].push(onChanges);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar objValue = modelRef[propertyName]; // Object value\r\n\t\tObject.defineProperty(modelRef, propertyName, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\t\t\tget:function(){\r\n\t\t\t\treturn objValue;\r\n\t\t\t},\r\n\t\t\tset:function(val){\r\n\t\t\t\tobjValue = val;\r\n\r\n\t\t\t\tvar ref = modelRef.sf$bindedKey[propertyName];\r\n\t\t\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\t\t\tref[i]();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn objValue;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tmodelRef.sf$bindedKey[propertyName] = [onChanges];\r\n\t}\r\n\r\n\tself.bindElement = function(element, which){\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar html = element.outerHTML;\r\n\r\n\t\t// Check if the child element was already bound to prevent vulnerability\r\n\t\tif(/sf-bind-key|sf-bind-list/.test(html)){\r\n\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(which === 'attr')\r\n\t\t\thtml = html.replace(element.innerHTML, '');\r\n\r\n\t\tvar brackets = /{{([\\s\\S]*?)}}/g;\r\n\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(model);\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(model[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\t\tvar s1, s2 = null;\r\n\t\twhile((s1 = brackets.exec(html)) !== null){\r\n\t\t\twhile ((s2 = scopeMask.exec(s1[1])) !== null) {\r\n\t\t\t\tbindObject(element, model, s2[1], which);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.extractPreprocess = function(targetNode, mask, name){\r\n\t\tvar copy = targetNode.outerHTML;\r\n\r\n\t\t// Mask the referenced item\r\n\t\tcopy = copy.split('#'+mask).join('_model_');\r\n\r\n\t\t// Extract data to be parsed\r\n\t\tcopy = uniqueDataParser(copy, null, mask, name, '#noEval');\r\n\t\tvar preParsed = copy[1];\r\n\t\tvar _content_ = copy[2];\r\n\t\tcopy = dataParser(copy[0], null, mask, name, '#noEval', preParsed);\r\n\r\n\t\tfunction findModelProperty(){\r\n\t\t\tvar extract = RegExp('\\\\b(?:_model_|'+mask+')\\\\.([a-zA-Z0-9.[\\'\\\\]]+)(?:$|[^\\'\\\\]])', 'g');\r\n\t\t\tvar found = {};\r\n\r\n\t\t\tfor (var i = 0; i < preParsed.length; i++) {\r\n\t\t\t\tvar current = preParsed[i];\r\n\r\n\t\t\t\t// Text or attribute\r\n\t\t\t\tif(current.type === 0){\r\n\t\t\t\t\tcurrent.data[0].split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(found[match] === undefined) found[match] = [i];\r\n\t\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Dynamic data\r\n\t\t\t\tif(current.type === 1){\r\n\t\t\t\t\tvar checkList = current.if.join(';');\r\n\r\n\t\t\t\t\tif(current.elseValue !== null)\r\n\t\t\t\t\t\tcheckList += ';' + current.elseValue;\r\n\r\n\t\t\t\t\tfor (var a = 0; a < current.elseIf.length; a++) {\r\n\t\t\t\t\t\tcheckList += current.elseIf[a].join(';');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(current.type === 2)\r\n\t\t\t\t\tvar checkList = current.data[0];\r\n\r\n\t\t\t\tcheckList = checkList.replace(/_result_ \\+= _content_\\.take\\(.*?, ([0-9]+)\\);/g, function(full, match){\r\n\t\t\t\t\treturn _content_[match];\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcheckList.split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found[match] === undefined) found[match] = [i];\r\n\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn found;\r\n\t\t}\r\n\r\n\t\t// Build element and start addressing\r\n\t\tcopy = $.parseElement(copy)[0];\r\n\t\tvar nodes = self.queuePreprocess(copy, true).reverse();\r\n\t\tvar addressed = [];\r\n\r\n\t\tfunction addressAttributes(currentNode){\r\n\t\t\tvar attrs = currentNode.attributes;\r\n\t\t\tvar keys = [];\r\n\t\t\tvar indexes = 0;\r\n\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\tvar found = attrs[a].value.split('{{%=');\r\n\t\t\t\tif(found.length !== 1){\r\n\t\t\t\t\tvar key = {\r\n\t\t\t\t\t\tname:attrs[a].name,\r\n\t\t\t\t\t\tvalue:attrs[a].value\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tindexes = [];\r\n\t\t\t\t\tfound = attrs[a].value.replace(/{{%=([0-9]+)/g, function(full, match){\r\n\t\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found === '' && indexes.length === 1)\r\n\t\t\t\t\t\tkey.direct = indexes[0];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tkey.parse_index = indexes;\r\n\r\n\t\t\t\t\tkeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn keys;\r\n\t\t}\r\n\r\n\t\tvar currentElement = addressAttributes(copy);\r\n\t\tif(currentElement.length !== 0)\r\n\t\t\taddressed.push({\r\n\t\t\t\tnodeType:1,\r\n\t\t\t\taddress:[0],\r\n\t\t\t\tattributes:currentElement\r\n\t\t\t});\r\n\r\n\t\tfor (var i = 0; i < nodes.length; i++) {\r\n\t\t\tvar temp = {\r\n\t\t\t\tnodeType:nodes[i].nodeType\r\n\t\t\t};\r\n\r\n\t\t\tif(temp.nodeType === 1){ // Element\r\n\t\t\t\ttemp.attributes = addressAttributes(nodes[i]);\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\telse if(temp.nodeType === 3){ // Text node\r\n\t\t\t\tvar innerHTML = nodes[i].textContent;\r\n\t\t\t\tvar indexes = [];\r\n\r\n\t\t\t\tinnerHTML.replace(/{{%%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Check for dynamic mode\r\n\t\t\t\tif(indexes.length !== 0){\r\n\t\t\t\t\tinnerHTML = innerHTML.split(/{{%%=[0-9]+/gm);\r\n\t\t\t\t\tfor (var a = 0; a < innerHTML.length; a++) {\r\n\t\t\t\t\t\tinnerHTML[a] = trimIndentation(innerHTML[a]).trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodes[i].textContent = innerHTML.shift();\r\n\r\n\t\t\t\t\tvar parent = nodes[i].parentNode;\r\n\t\t\t\t\tvar nextSibling = nodes[i].nextSibling;\r\n\r\n\t\t\t\t\t// Dynamic boundary start\r\n\t\t\t\t\tvar addressStart = null;\r\n\t\t\t\t\tif(indexes.length !== 0 && nodes[i].textContent.length !== 0)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i], true);\r\n\t\t\t\t\telse if(nodes[i].previousSibling !== null)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i].previousSibling, true);\r\n\r\n\t\t\t\t\t// Find boundary ends\r\n\t\t\t\t\tvar commentFlag = [];\r\n\t\t\t\t\tfor(var a = 0; a < indexes.length; a++){\r\n\t\t\t\t\t\tvar flag = document.createComment('');\r\n\t\t\t\t\t\tparent.insertBefore(flag, nextSibling);\r\n\t\t\t\t\t\tcommentFlag.push({\r\n\t\t\t\t\t\t\tnodeType:-1,\r\n\t\t\t\t\t\t\tparse_index:indexes[a],\r\n\t\t\t\t\t\t\tstartFlag:addressStart,\r\n\t\t\t\t\t\t\taddress:$.getSelector(flag, true)\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(innerHTML[a]){\r\n\t\t\t\t\t\t\tvar textNode = document.createTextNode(innerHTML[a]);\r\n\t\t\t\t\t\t\tparent.insertBefore(textNode, nextSibling);\r\n\r\n\t\t\t\t\t\t\t// Get new start flag\r\n\t\t\t\t\t\t\tif(a + 1 < indexes.length)\r\n\t\t\t\t\t\t\t\taddressStart = $.getSelector(textNode, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Merge boundary address\r\n\t\t\t\t\tArray.prototype.push.apply(addressed, commentFlag);\r\n\t\t\t\t\tif(nodes[i].textContent === ''){\r\n\t\t\t\t\t\tnodes[i].remove();\r\n\t\t\t\t\t\tfor (var a = 0; a < commentFlag.length; a++) {\r\n\t\t\t\t\t\t\tvar ref = commentFlag[a].address;\r\n\t\t\t\t\t\t\tref[ref.length - 1]--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(nodes[i].textContent.search(/{{%=[0-9]+/) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if it's only model value\r\n\t\t\t\tindexes = [];\r\n\t\t\t\tinnerHTML = nodes[i].textContent.replace(/{{%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(innerHTML === '' && indexes.length === 1)\r\n\t\t\t\t\ttemp.direct = indexes[0];\r\n\t\t\t\telse{\r\n\t\t\t\t\ttemp.value = nodes[i].textContent;\r\n\t\t\t\t\ttemp.parse_index = indexes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\taddressed.push(temp);\r\n\t\t}\r\n\r\n\t\tvar modelReference = findModelProperty();\r\n\t\tvar keys = Object.keys(modelReference);\r\n\t\tvar asArray = [];\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tasArray.push([keys[i], keys[i].split('.')]);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\thtml:copy,\r\n\t\t\tparse:preParsed,\r\n\t\t\taddresses:addressed,\r\n\t\t\tmodelReference:modelReference,\r\n\t\t\tmodelRef_array:asArray\r\n\t\t}\r\n\t}\r\n\r\n\tvar excludes = ['HTML','HEAD','STYLE','LINK','META','SCRIPT','OBJECT','IFRAME'];\r\n\tself.queuePreprocess = function(targetNode, extracting){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = childNodes.length - 1; i >= 0; i--) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\r\n\t\t\tif(extracting === undefined && excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\r\n\t\t\t\t// Skip element and it's childs that already bound to prevent vulnerability\r\n\t\t\t\tif(attrs['sf-bind-key'] || attrs['sf-repeat-this'] || attrs['sf-bind-list']) continue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tif(extracting === undefined)\r\n\t\t\t\t\t\t\tcurrentNode.setAttribute('sf-preprocess', 'attronly');\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tArray.prototype.push.apply(temp, self.queuePreprocess(currentNode, extracting));\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tcurrentNode.textContent = currentNode.textContent;\r\n\r\n\t\t\t\tif(currentNode.textContent.length === 0){\r\n\t\t\t\t\tcurrentNode.remove();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tif(extracting === undefined){\r\n\t\t\t\t\t\tcurrentNode.parentNode.setAttribute('sf-preprocess', '');\r\n\r\n\t\t\t\t\t\t// Reset Siblings\r\n\t\t\t\t\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\t\t\t\t\ttemp[a].removeAttribute('sf-preprocess');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttemp.push(currentNode.parentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn temp;\r\n\t}\r\n\r\n\tself.parsePreprocess = function(nodes, queued){\r\n\t\tfor (var a = 0; a < nodes.length; a++) {\r\n\t\t\t// Get reference for debugging\r\n\t\t\tvar current = processingElement = nodes[a];\r\n\r\n\t\t\tvar model = sf.controller.modelName(current);\r\n\t\t\tcurrent.removeAttribute('sf-preprocess');\r\n\r\n\t\t\tif(queued !== undefined)\r\n\t\t\t\tcurrent.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tvar modelRef = self.root[model];\r\n\r\n\t\t\tif(!modelRef){\r\n\t\t\t\tmodelRef = root_(model);\r\n\t\t\t\t//return console.error(\"Can't parse element because model for '\"+model+\"' was not found\", current);\r\n\t\t\t}\r\n\r\n\t\t\t// Double check if the child element already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(current.innerHTML)){\r\n\t\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\t\tconsole.log(processingElement.cloneNode(true));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(current.hasAttribute('sf-bind'))\r\n\t\t\t\tself.bindElement(current, current.getAttribute('sf-bind'));\r\n\r\n\t\t\t// Avoid editing the outerHTML because it will remove the bind\r\n\t\t\tvar temp = uniqueDataParser(current.innerHTML, modelRef, false, model);\r\n\t\t\tcurrent.innerHTML = dataParser(temp, modelRef, false, model);\r\n\r\n\t\t\tvar attrs = nodes[a].attributes;\r\n\t\t\tfor (var i = 0; i < attrs.length; i++) {\r\n\t\t\t\tif(attrs[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\tvar attr = attrs[i];\r\n\t\t\t\t\tattr.value = dataParser(attr.value, modelRef, false, model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initBindingInformation(modelRef){\r\n\t\tif(modelRef.sf$bindedKey !== undefined)\r\n\t\t\treturn;\r\n\r\n\t\t// Element binding data\r\n\t\tObject.defineProperty(modelRef, 'sf$bindedKey', {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable:false,\r\n\t\t\twritable:true,\r\n\t\t\tvalue:{}\r\n\t\t});\r\n\t}\r\n})();","// ==== ES5 Polyfill ====\r\nif(typeof Object.assign != 'function'){\r\n  Object.defineProperty(Object, \"assign\", {\r\n    value: function assign(target, varArgs) {\r\n      'use strict';\r\n      if (target == null)\r\n        throw new TypeError('Cannot convert undefined or null to object');\r\n      var to = Object(target);\r\n      for (var index = 1; index < arguments.length; index++) {\r\n        var nextSource = arguments[index];\r\n        if (nextSource != null) {\r\n          for (var nextKey in nextSource) {\r\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey))\r\n              to[nextKey] = nextSource[nextKey];\r\n          }\r\n        }\r\n      }\r\n      return to;\r\n    },\r\n    writable: true,\r\n    configurable: true\r\n  });\r\n}\r\n\r\nif(Element.prototype.remove === undefined || CharacterData.prototype.remove === undefined || DocumentType.prototype.remove === undefined){\r\n  (function (arr) {\r\n    arr.forEach(function (item) {\r\n      if (item.hasOwnProperty('remove')) {\r\n        return;\r\n      }\r\n      Object.defineProperty(item, 'remove', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n        value: function remove() {\r\n          if (this.parentNode !== null)\r\n            this.parentNode.removeChild(this);\r\n        }\r\n      });\r\n    });\r\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\r\n}\r\n\r\nif(!Element.prototype.matches){\r\n  Element.prototype.matches = (Element.prototype).matchesSelector ||\r\n    (Element.prototype).mozMatchesSelector || (Element.prototype).msMatchesSelector ||\r\n    (Element.prototype).oMatchesSelector || (Element.prototype).webkitMatchesSelector ||\r\n    function (s) {\r\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n      i = matches.length;\r\n      while (--i >= 0 && matches.item(i) !== this){}\r\n      return i > -1;\r\n    };\r\n}\r\n\r\nif(!NodeList.prototype.forEach){\r\n    NodeList.prototype.forEach = function (callback, thisArg) {\r\n        thisArg = thisArg || window;\r\n        for (var i = 0; i < this.length; i++) {\r\n            callback.call(thisArg, this[i], i, this);\r\n        }\r\n    };\r\n}\r\n\r\nif(!window.location.origin){\r\n  window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');\r\n}","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tself.pending = {};\r\n\tself.active = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tself.pending[name] = func;\r\n\t}\r\n\r\n\tself.modelScope = function(element, func){\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = element.getAttribute('sf-bind-list');\r\n\t\tif(!bindedList){\r\n\t\t\tvar parentEl = $.parent(element, '[sf-bind-list]');\r\n\t\t\tif(parentEl !== null)\r\n\t\t\t\tbindedList = parentEl.getAttribute('sf-bind-list');\r\n\t\t}\r\n\t\telse var parentEl = element;\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(sf.model.root[model], -1);\r\n\t\t\telse return sf.model.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = $.prevAll(parentEl, '[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(sf.model.root[model][bindedList], bindedListIndex);\r\n\t\telse return sf.model.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.modelName = function(element){\r\n\t\tvar name = undefined;\r\n\t\tif(element.hasAttribute('sf-controller'))\r\n\t\t\tname = element.getAttribute('sf-controller');\r\n\t\telse\r\n\t\t\tname = $.parent(element, '[sf-controller]').getAttribute('sf-controller');\r\n\r\n\t\t// Initialize it first\r\n\t\tif(name !== undefined && !self.active[name])\r\n\t\t\tself.run(name);\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = e.target;\r\n\t\tvar script = element.getAttribute('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = $.parent(element, '[sf-click]');\r\n\t\t\tscript = element.getAttribute('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = $.parent(element, '[sf-controller]').getAttribute('sf-controller');\r\n\r\n\t\tif(!sf.model.root[model])\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar _modelScope = sf.model.root[model];\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(_modelScope);\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+modelKeys+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tscript = script.replace(scopeMask, function(full, matched){\r\n\t\t\treturn '_modelScope.'+matched;\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script[0];\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(e) {\r\n\t\t\tmethod = false;\r\n\t\t}\r\n\r\n\t\tif(!method){\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot call `'+method_+'`]\\n', element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript.shift();\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0){\r\n\t\t\t// Replace `this` to `element`\r\n\t\t\tscript = eval(('['+script+']').replace(/,this|\\[this/g, function(found){\r\n\t\t\t\treturn found[0] + 'element';\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif(!script)\r\n\t\t\tscript = [];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element, script);\r\n\t\t\te.preventDefault();\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', element, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tself.run = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.run(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(self.pending[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\r\n\t\t\tself.pending[name](sf.model.root[name], root_);\r\n\t\t\tself.active[name] = true;\r\n\t\t\tdelete self.pending[name];\r\n\t\t}\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], root_);\r\n\t}\r\n\r\n\tself.init = function(parent){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(name);\r\n\t\t\t});\r\n\r\n\t\tvar temp = $('[sf-controller]', parent || document.body);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tself.run(temp[i].getAttribute('sf-controller'));\r\n\t\t}\r\n\t}\r\n\r\n\t// Create listener for sf-click\r\n\tdocument.addEventListener('DOMContentLoaded', function(){\r\n\t\t$.on(document.body, 'click', '[sf-click]', listenSFClick);\r\n\t}, {capture:true, once:true});\r\n}\r\n\r\nvar root_ = function(scope){\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n}","/*\r\n  Special Thanks to Vladimir Kharlampidi\r\n  https://github.com/nolimits4web/\r\n*/\r\n\r\nvar globals = {};\r\nvar jsonpRequests = 0;\r\nfunction Request(requestOptions) {\r\n    var globalsNoCallbacks = Object.assign({}, globals);\r\n    ('beforeCreate beforeOpen beforeSend error complete success statusCode').split(' ').forEach(function (callbackName) {\r\n        delete globalsNoCallbacks[callbackName];\r\n    });\r\n    var defaults = Object.assign({\r\n        url: window.location.toString(),\r\n        method: 'GET',\r\n        data: false,\r\n        async: true,\r\n        cache: true,\r\n        user: '',\r\n        password: '',\r\n        headers: {},\r\n        xhrFields: {},\r\n        statusCode: {},\r\n        processData: true,\r\n        dataType: 'text',\r\n        contentType: 'application/x-www-form-urlencoded',\r\n        timeout: 0,\r\n    }, globalsNoCallbacks);\r\n    var options = Object.assign({}, defaults, requestOptions);\r\n    var proceedRequest;\r\n    // Function to run XHR callbacks and events\r\n    function fireCallback(callbackName) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        /*\r\n          Callbacks:\r\n          beforeCreate (options),\r\n          beforeOpen (xhr, options),\r\n          beforeSend (xhr, options),\r\n          error (xhr, status),\r\n          complete (xhr, stautus),\r\n          success (response, status, xhr),\r\n          statusCode ()\r\n        */\r\n        var globalCallbackValue;\r\n        var optionCallbackValue;\r\n        if (globals[callbackName]) {\r\n            globalCallbackValue = globals[callbackName].apply(globals, data);\r\n        }\r\n        if (options[callbackName]) {\r\n            optionCallbackValue = options[callbackName].apply(options, data);\r\n        }\r\n        if (typeof globalCallbackValue !== 'boolean')\r\n            globalCallbackValue = true;\r\n        if (typeof optionCallbackValue !== 'boolean')\r\n            optionCallbackValue = true;\r\n        return (globalCallbackValue && optionCallbackValue);\r\n    }\r\n    // Before create callback\r\n    proceedRequest = fireCallback('beforeCreate', options);\r\n    if (proceedRequest === false)\r\n        return undefined;\r\n    // For jQuery guys\r\n    if (options.type)\r\n        options.method = options.type;\r\n    // Parameters Prefix\r\n    var paramsPrefix = options.url.indexOf('?') >= 0 ? '&' : '?';\r\n    // UC method\r\n    var method = options.method.toUpperCase();\r\n    // Data to modify GET URL\r\n    if ((method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') && options.data) {\r\n        var stringData = void 0;\r\n        if (typeof options.data === 'string') {\r\n            // Should be key=value string\r\n            if (options.data.indexOf('?') >= 0)\r\n                stringData = options.data.split('?')[1];\r\n            else\r\n                stringData = options.data;\r\n        }\r\n        else {\r\n            // Should be key=value object\r\n            stringData = serializeQuery(options.data);\r\n        }\r\n        if (stringData.length) {\r\n            options.url += paramsPrefix + stringData;\r\n            if (paramsPrefix === '?')\r\n                paramsPrefix = '&';\r\n        }\r\n    }\r\n    // JSONP\r\n    if (options.dataType === 'json' && options.url.indexOf('callback=') >= 0) {\r\n        var callbackName_1 = \"jsonp_\" + (Date.now() + ((jsonpRequests += 1)));\r\n        var abortTimeout_1;\r\n        var callbackSplit = options.url.split('callback=');\r\n        var requestUrl = callbackSplit[0] + \"callback=\" + callbackName_1;\r\n        if (callbackSplit[1].indexOf('&') >= 0) {\r\n            var addVars = callbackSplit[1].split('&').filter(function (el) { return el.indexOf('=') > 0; }).join('&');\r\n            if (addVars.length > 0)\r\n                requestUrl += \"&\" + addVars;\r\n        }\r\n        // Create script\r\n        var script_1 = document.createElement('script');\r\n        script_1.type = 'text/javascript';\r\n        script_1.onerror = function onerror() {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('error', null, 'scripterror');\r\n            fireCallback('complete', null, 'scripterror');\r\n        };\r\n        script_1.src = requestUrl;\r\n        // Handler\r\n        window[callbackName_1] = function jsonpCallback(data) {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('success', data);\r\n            script_1.parentNode.removeChild(script_1);\r\n            script_1 = null;\r\n            delete window[callbackName_1];\r\n        };\r\n        document.querySelector('head').appendChild(script_1);\r\n        if (options.timeout > 0) {\r\n            abortTimeout_1 = setTimeout(function () {\r\n                script_1.parentNode.removeChild(script_1);\r\n                script_1 = null;\r\n                fireCallback('error', null, 'timeout');\r\n            }, options.timeout);\r\n        }\r\n        return undefined;\r\n    }\r\n    // Cache for GET/HEAD requests\r\n    if (method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') {\r\n        if (options.cache === false) {\r\n            options.url += paramsPrefix + \"_nocache\" + Date.now();\r\n        }\r\n    }\r\n    // Create XHR\r\n    var xhr = new XMLHttpRequest();\r\n    // Save Request URL\r\n    xhr.requestUrl = options.url;\r\n    xhr.requestParameters = options;\r\n    // Before open callback\r\n    proceedRequest = fireCallback('beforeOpen', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Open XHR\r\n    xhr.open(method, options.url, options.async, options.user, options.password);\r\n    // Create POST Data\r\n    var postData = null;\r\n    if ((method === 'POST' || method === 'PUT' || method === 'PATCH') && options.data) {\r\n        if (options.processData) {\r\n            var postDataInstances = [ArrayBuffer, Blob, Document, FormData];\r\n            // Post Data\r\n            if (postDataInstances.indexOf(options.data.constructor) >= 0) {\r\n                postData = options.data;\r\n            }\r\n            else {\r\n                // POST Headers\r\n                var boundary = \"---------------------------\" + Date.now().toString(16);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    xhr.setRequestHeader('Content-Type', \"multipart/form-data; boundary=\" + boundary);\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader('Content-Type', options.contentType);\r\n                }\r\n                postData = '';\r\n                var data = serializeQuery(options.data);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    data = data.split('&');\r\n                    var newData = [];\r\n                    for (var i = 0; i < data.length; i += 1) {\r\n                        newData.push(\"Content-Disposition: form-data; name=\\\"\" + data[i].split('=')[0] + \"\\\"\\r\\n\\r\\n\" + data[i].split('=')[1] + \"\\r\\n\");\r\n                    }\r\n                    postData = \"--\" + boundary + \"\\r\\n\" + newData.join(\"--\" + boundary + \"\\r\\n\") + \"--\" + boundary + \"--\\r\\n\";\r\n                }\r\n                else if (options.contentType === 'application/json') {\r\n                    postData = JSON.stringify(options.data);\r\n                }\r\n                else {\r\n                    postData = data;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            postData = options.data;\r\n            xhr.setRequestHeader('Content-Type', options.contentType);\r\n        }\r\n    }\r\n    // Additional headers\r\n    if (options.headers) {\r\n        Object.keys(options.headers).forEach(function (headerName) {\r\n            xhr.setRequestHeader(headerName, options.headers[headerName]);\r\n        });\r\n    }\r\n    // Check for crossDomain\r\n    if (typeof options.crossDomain === 'undefined') {\r\n        // eslint-disable-next-line\r\n        options.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(options.url) && RegExp.$2 !== window.location.host;\r\n    }\r\n    if (!options.crossDomain) {\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    }\r\n    if (options.xhrFields) {\r\n        Object.assign(xhr, options.xhrFields);\r\n    }\r\n    var xhrTimeout;\r\n    // Handle XHR\r\n    xhr.onload = function onload() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 0) {\r\n            var responseData = void 0;\r\n            if (options.dataType === 'json') {\r\n                var parseError = void 0;\r\n                try {\r\n                    responseData = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (err) {\r\n                    parseError = true;\r\n                }\r\n                if (!parseError) {\r\n                    fireCallback('success', responseData, xhr.status, xhr);\r\n                }\r\n                else {\r\n                    fireCallback('error', xhr, 'parseerror');\r\n                }\r\n            }\r\n            else {\r\n                responseData = xhr.responseType === 'text' || xhr.responseType === '' ? xhr.responseText : xhr.response;\r\n                fireCallback('success', responseData, xhr.status, xhr);\r\n            }\r\n        }\r\n        else {\r\n            fireCallback('error', xhr, xhr.status);\r\n        }\r\n        if (options.statusCode) {\r\n            if (globals.statusCode && globals.statusCode[xhr.status])\r\n                globals.statusCode[xhr.status](xhr);\r\n            if (options.statusCode[xhr.status])\r\n                options.statusCode[xhr.status](xhr);\r\n        }\r\n        fireCallback('complete', xhr, xhr.status);\r\n    };\r\n    xhr.onerror = function onerror() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        fireCallback('error', xhr, xhr.status);\r\n        fireCallback('complete', xhr, 'error');\r\n    };\r\n    // Timeout\r\n    if (options.timeout > 0) {\r\n        xhr.onabort = function onabort() {\r\n            if (xhrTimeout)\r\n                clearTimeout(xhrTimeout);\r\n        };\r\n        xhrTimeout = setTimeout(function () {\r\n            xhr.abort();\r\n            fireCallback('error', xhr, 'timeout');\r\n            fireCallback('complete', xhr, 'timeout');\r\n        }, options.timeout);\r\n    }\r\n    // Ajax start callback\r\n    proceedRequest = fireCallback('beforeSend', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Send XHR\r\n    xhr.send(postData);\r\n    // Return XHR object\r\n    return xhr;\r\n}\r\nfunction RequestShortcut(method) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    var _a = [], url = _a[0], data = _a[1], success = _a[2], error = _a[3], dataType = _a[4];\r\n    if (typeof args[1] === 'function') {\r\n        url = args[0], success = args[1], error = args[2], dataType = args[3];\r\n    }\r\n    else {\r\n        url = args[0], data = args[1], success = args[2], error = args[3], dataType = args[4];\r\n    }\r\n    [success, error].forEach(function (callback) {\r\n        if (typeof callback === 'string') {\r\n            dataType = callback;\r\n            if (callback === success)\r\n                success = undefined;\r\n            else\r\n                error = undefined;\r\n        }\r\n    });\r\n    dataType = dataType || (method === 'json' || method === 'postJSON' ? 'json' : undefined);\r\n    var requestOptions = {\r\n        url: url,\r\n        method: method === 'post' || method === 'postJSON' ? 'POST' : 'GET',\r\n        data: data,\r\n        success: success,\r\n        error: error,\r\n        dataType: dataType,\r\n    };\r\n    if (method === 'postJSON') {\r\n        Object.assign(requestOptions, {\r\n            contentType: 'application/json',\r\n            processData: false,\r\n            crossDomain: true,\r\n            data: typeof data === 'string' ? data : JSON.stringify(data),\r\n        });\r\n    }\r\n    return Request(requestOptions);\r\n}\r\nObject.assign(Request, {\r\n    get: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['get'].concat(args));\r\n    },\r\n    post: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['post'].concat(args));\r\n    },\r\n    json: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    getJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    postJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['postJSON'].concat(args));\r\n    },\r\n});\r\nRequest.setup = function setup(options) {\r\n    if (options.type && !options.method) {\r\n        Object.assign(options, { method: options.type });\r\n    }\r\n    Object.assign(globals, options);\r\n};\r\nfunction serializeQuery(params, prefix) {\r\n    var key = Object.keys(params);\r\n    for (var i = 0; i < key.length; i++) {\r\n      var value = params[key[i]];\r\n      if (params.constructor === Array)\r\n          key[i] += prefix + \"[]\";\r\n      else if (params.constructor === Object)\r\n          key[i] = (prefix ? prefix + \"[\" + key[i] + \"]\" : key[i]);\r\n\r\n      if (typeof value === 'object')\r\n          key[i] = serializeQuery(value, key[i]);\r\n      else\r\n          key[i] = key[i] + \"=\" + encodeURIComponent(value);\r\n    }\r\n    return key.join('&');\r\n}\r\n$.ajax = sf.ajax = Request;","return sf;\r\n\r\n// ===== Module End =====\r\n})));","sf.router = new function(){\r\n\tvar self = this;\r\n\tself.loading = false;\r\n\tself.enabled = false;\r\n\tself.pauseRenderOnTransition = false;\r\n\tself.currentPage = [];\r\n\tvar initialized = false;\r\n\tvar lazyRouting = false;\r\n\tvar currentRouterURL = '';\r\n\r\n\t// Should be called if not using lazy page load\r\n\tself.init = function(targetNode){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init();\r\n\t\t\t});\r\n\r\n\t\t// Run 'before' event for new page view\r\n\t\tvar temp = $('[sf-controller], [sf-page]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tif(temp[i].getAttribute('sf-controller'))\r\n\t\t\t\tsf.controller.run(temp[i].getAttribute('sf-controller'));\r\n\t\t\t\r\n\t\t\tif(temp[i].getAttribute('sf-page')){\r\n\t\t\t\tvar name = temp[i].getAttribute('sf-page');\r\n\t\t\t\tbeforeEvent(name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinitialized = true;\r\n\t\tcurrentRouterURL = window.location.pathname;\r\n\t}\r\n\r\n\tfunction popstateListener(event) {\r\n\t\t// Don't continue if the last routing was error\r\n\t\tif(routingError){\r\n\t\t\troutingError = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\troutingBack = true;\r\n\t\tself.goto(window.location.pathname);\r\n\t}\r\n\r\n\tself.enable = function(status){\r\n\t\tif(status === undefined) status = true;\r\n\t\tif(self.enabled === status) return;\r\n\t\tself.enabled = status;\r\n\r\n\t\tif(status === true){\r\n\t\t\t// Create listener for link click\r\n\t\t\t$.on(document.body, 'click', 'a[href]', self.load);\r\n\r\n\t\t\t// Create listener when navigate backward\r\n\t\t\twindow.addEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$.off(document.body, 'click', 'a[href]', self.load);\r\n\t\t\twindow.removeEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t}\r\n\r\n\tvar before = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.before = function(name, func, index){\r\n\t\tif(!before[name])\r\n\t\t\tbefore[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(before[name].indexOf(func) === -1)\r\n\t\t\t\tbefore[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tbefore[name][index] = func;\r\n\t}\r\n\r\n\tvar after = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.after = function(name, func, index){\r\n\t\tif(!after[name])\r\n\t\t\tafter[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(after[name].indexOf(func) === -1)\r\n\t\t\t\tafter[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tafter[name][index] = func;\r\n\t}\r\n\r\n\tvar root_ = function(scope){\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.model.root[scope] = {};\r\n\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.controller.run(scope);\r\n\t\t\r\n\t\treturn sf.model.root[scope];\r\n\t}\r\n\r\n\t// Running 'before' new page going to be displayed\r\n\tvar beforeEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.push(name);\r\n\r\n\t\tif(before[name]){\r\n\t\t\tfor (var i = 0; i < before[name].length; i++) {\r\n\t\t\t\tbefore[name][i](root_);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Running 'after' old page going to be removed\r\n\tvar afterEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.splice(self.currentPage.indexOf(name), 1);\r\n\r\n\t\tif(after[name]){\r\n\t\t\tfor (var i = 0; i < after[name].length; i++) {\r\n\t\t\t\tafter[name][i](root_);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar onEvent = {\r\n\t\t'loading':[],\r\n\t\t'loaded':[],\r\n\t\t'special':[],\r\n\t\t'error':[]\r\n\t};\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\tself.lazyViewPoint = {};\r\n\t/*\r\n\t\t{\r\n\t\t\toldURlPattern:{\r\n\t\t\t\tnewURLPattern:'.viewPoint'\r\n\t\t\t}\r\n\t\t}\r\n\t*/\r\n\r\n\tself.load = function(ev){\r\n\t\tif(self.enabled !== true) return;\r\n\r\n\t\tvar elem = ev.target;\r\n\t\tif(!elem.href) return;\r\n\r\n\t\tif(!history.pushState || elem.hasAttribute('sf-router-ignore'))\r\n\t\t\treturn;\r\n\r\n\t\t// Make sure it's from current origin\r\n\t\tvar path = elem.href.replace(window.location.origin, '');\r\n\t\tif(path.indexOf('//') !== -1)\r\n\t\t\treturn;\r\n\r\n\t\tev.preventDefault()\r\n\t\treturn !self.goto(path);\r\n\t}\r\n\r\n\tvar RouterLoading = false;\r\n\tvar routingBack = false;\r\n\tvar routingError = false;\r\n\tself.goto = function(path, data, method){\r\n\t\tif(!method) method = 'GET';\r\n        else method = method.toUpperCase();\r\n\r\n\t\tif(!data) data = {};\r\n\r\n\t\tfor (var i = 0; i < onEvent['loading'].length; i++) {\r\n\t\t\tif(onEvent['loading'][i](path)) return;\r\n\t\t}\r\n\t\tvar oldPath = window.location.pathname;\r\n\t\tinitialized = false;\r\n\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\t\tRouterLoading = $.ajax({\r\n\t\t\turl:window.location.origin + path,\r\n\t\t\tmethod:method,\r\n            data:Object.assign(data, {\r\n                _scarlets:'.dynamic.'\r\n            }),\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\tif(initialized) return;\r\n\t\t\t\tlazyRouting = true;\r\n\r\n\t\t\t\t// Run 'loaded' event\r\n\t\t\t\tRouterLoading = false;\r\n\r\n\t\t\t\t// Find special data\r\n\t\t\t\tvar regex = RegExp('<!-- SF-Special:(.*?)-->'+sf.regex.avoidQuotes, 'gm');\r\n\t\t\t\tvar special = regex.exec(data);\r\n\t\t\t\tif(special && special.length !== 1){\r\n\t\t\t\t\tspecial = special[1].split('--|&>').join('-->');\r\n\t\t\t\t\tspecial = JSON.parse(special);\r\n\r\n\t\t\t\t\tif(!isEmptyObject(special)){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['special'].length; i++) {\r\n\t\t\t\t\t\t\tif(onEvent['special'][i](special)) return;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DOMReference = false;\r\n\t\t\t\tvar foundAction = function(ref){\r\n\t\t\t\t\tDOMReference = $.findOne(ref);\r\n\r\n\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\tvar last = $.findOne('[sf-page]', DOMReference);\r\n\t\t\t\t\tafterEvent(last ? last.getAttribute('sf-page') : '/');\r\n\r\n\t\t\t\t\t// Redefine title if exist\r\n\t\t\t\t\tif(special && special.title)\r\n\t\t\t\t\t\t$('head > title').innerHTML = special.title;\r\n\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tfor(var oldURL in self.lazyViewPoint){\r\n\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\tfor(var newURL in self.lazyViewPoint[oldURL]){\r\n\t\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\t\tfoundAction(self.lazyViewPoint[oldURL][newURL]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(found) break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When the view point was not found\r\n\t\t\t\tif(!found){\r\n\t\t\t\t\t// Use fallback if exist\r\n\t\t\t\t\tif(sf.router.lazyViewPoint[\"@default\"])\r\n\t\t\t\t\t\tfoundAction(sf.router.lazyViewPoint[\"@default\"]);\r\n\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\t\t\tonEvent['error'][i]('sf.router.lazyViewPoint[\"'+oldURL+'\"][\"'+newURL+'\"] was not found');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Run 'before' event for new page view\r\n\t\t\t\tif(!DOMReference) DOMReference = document.body;\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', 'none');\r\n\r\n\t\t\t\t// Let page script running first, then update the data binding\r\n\t\t\t\tDOMReference.innerHTML = data;\r\n\r\n\t\t\t\t// Parse the DOM data binding\r\n\t\t\t\tsf.model.init(DOMReference);\r\n\r\n\t\t\t\t// Init template to model binding\r\n\t\t\t\tvar temp = $('[sf-page]', DOMReference);\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tbeforeEvent(temp[i].getAttribute('sf-page'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', '');\r\n\r\n\t\t\t\trouterLoaded(currentRouterURL, path, DOMReference);\r\n\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tlazyRouting = false;\r\n\r\n\t\t\t\tcurrentRouterURL = path;\r\n\t\t\t\troutingError = false;\r\n\t\t\t},\r\n\t\t\terror:function(xhr, data){\r\n\t\t\t\troutingError = true;\r\n\t\t\t\tif(xhr.aborted) return;\r\n\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\tonEvent['error'][i](xhr.status, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Back on error\r\n\t\t\t\twindow.history.back();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!routingBack)\r\n\t\t\twindow.history.pushState(null, \"\", path);\r\n\r\n\t\troutingBack = false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Trigger loaded event\r\n\tfunction routerLoaded(currentRouterURL, path, data){\r\n\t\tfor (var i = 0; i < onEvent['loaded'].length; i++) {\r\n\t\t\tonEvent['loaded'][i](currentRouterURL, path, data);\r\n\t\t}\r\n\t}\r\n};","sf.internal.virtual_scroll = new function(){\r\n\tvar self = this;\r\n\tvar styleInitialized = false;\r\n\tvar scrollingByScript = false;\r\n\r\n\t// before and after\r\n\tself.prepareCount = 4; // 4, 8, 12, 16, ...\r\n\r\n\tself.handle = function(list, targetNode, parentNode){\r\n\t\tif(!styleInitialized){\r\n\t\t\tinitStyles();\r\n\t\t\tstyleInitialized = true;\r\n\t\t}\r\n\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvirtual.reset = function(){\r\n\t\t\tvirtual.DOMCursor = 0; // cursor of first element in DOM tree as a cursor\r\n\r\n\t\t\tvirtual.bounding = {\r\n\t\t\t\tceiling:-1,\r\n\t\t\t\tfloor:0\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.vCursor = { // Virtual Cursor\r\n\t\t\t\tceiling:null, // for forward direction\r\n\t\t\t\tfloor:virtual.dom.firstElementChild // for backward direction\r\n\t\t\t}\r\n\r\n\t\t\trefreshScrollBounding(0, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\t\tvirtual.reset();\r\n\r\n\t\tvirtual.elements = function(){\r\n\t\t\treturn obtainElements(list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.dCursor = { // DOM Cursor\r\n\t\t\tceiling:parentNode.querySelector('.virtual-spacer.ceiling'),\r\n\t\t\tfloor:parentNode.querySelector('.virtual-spacer.floor')\r\n\t\t};\r\n\r\n\t\tvirtual.targetNode = parentNode;\r\n\r\n\t\tvirtual.scrollHeight = \r\n\t\t\tvirtual.dCursor.floor.offsetTop - \r\n\t\t\tvirtual.dCursor.ceiling.offsetTop;\r\n\r\n\t\tvar scroller = null;\r\n\t\tvirtual.destroy = function(){\r\n\t\t\t$.off(scroller, 'scroll');\r\n\t\t\t$.off(parentNode, 'mousedown mouseup');\r\n\t\t\tvirtual.dom.innerHTML = '';\r\n\t\t\toffElementResize(parentNode);\r\n\r\n\t\t\tdelete list.$virtual;\r\n\t\t}\r\n\r\n\t\tvirtual.resetViewport = function(){\r\n\t\t\tvirtual.visibleLength = Math.floor(scroller.clientHeight / virtual.scrollHeight);\r\n\t\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\t\t}\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tscroller = parentNode;\r\n\r\n\t\t\tvar length = parentNode.getAttribute('scroll-parent-index') || 0;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tscroller = scroller.parentElement;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.resetViewport();\r\n\r\n\t\t\tif(parentNode.classList.contains('sf-list-dynamic'))\r\n\t\t\t\tdynamicHeight(list, targetNode, parentNode, scroller);\r\n\t\t\telse\r\n\t\t\t\tstaticHeight(list, targetNode, parentNode, scroller);\r\n\t\t}, 500);\r\n\t}\r\n\r\n\t// Recommended for a list that have different element height\r\n\tfunction dynamicHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller);\r\n\t\t\tfillViewport();\r\n\t\t}\r\n\r\n\t\t// Insert some element until reach visible height\r\n\t\tfillViewport();\r\n\r\n\t\tvirtual.visibleLength = parentNode.childElementCount - 2;\r\n\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\tvar temp = vCursor.floor;\r\n\t\t\tif(temp === null) break;\r\n\r\n\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t}\r\n\t\tvirtual.DOMCursor = 0;\r\n\r\n\t\tvar ceilingHeight = 0;\r\n\t\tvar floorHeight = 0;\r\n\t\tfunction previousCeiling(){\r\n\t\t\tvar temp = null;\r\n\t\t\tvar resetCeiling = false;\r\n\r\n\t\t\t// Add some element on the ceiling\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\ttemp = virtual.dom.lastElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.ceiling = temp.previousElementSibling;\r\n\t\t\t\tvirtual.DOMCursor--;\r\n\r\n\t\t\t\tceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tif(ceilingHeight > 0)\r\n\t\t\t\t\tceilingHeight -= getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(virtual.DOMCursor < self.prepareCount && !resetCeiling){\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\tresetCeiling = true;\r\n\t\t\t\t\ttemp = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(ceilingHeight < 0 || temp === null)\r\n\t\t\t\tceilingHeight = 0;\r\n\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\t// Remove some element on the floor\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = floor.previousElementSibling;\r\n\t\t\t\tfloorHeight += getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tvCursor.floor = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.floor === null)\r\n\t\t\t\tvCursor.ceiling = virtual.dom.lastElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tfunction fillViewport(){\r\n\t\t\t// Insert some element depend on prepared length\r\n\t\t\tvar length = virtual.preparedLength - (parentNode.childElementCount - 2);\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\ttemp = virtual.dom.firstElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction nextFloor(){\r\n\t\t\tvar temp = null;\r\n\t\t\tfillViewport();\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t// Add extra element based on prepare count\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\ttemp = vCursor.floor;\r\n\t\t\t\tif(temp === null) break;\r\n\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tif(floorHeight > 0)\r\n\t\t\t\t\tfloorHeight -= getAbsoluteHeight(temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(floorHeight < 0 || temp === null)\r\n\t\t\t\tfloorHeight = 0;\r\n\r\n\t\t\t// Remove some element on the ceiling\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\t\t\t\tceilingHeight += getAbsoluteHeight(temp);\r\n\t\t\t\tvirtual.DOMCursor++;\r\n\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\telse vCursor.ceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tvCursor.ceiling = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\t\trefreshScrollBounding(0, bounding, list, parentNode);\r\n\r\n\t\tvar updating = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript) return;\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tif(scroller.scrollTop < bounding.ceiling){\r\n\t\t\t\t// console.log('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tpreviousCeiling();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\telse if(scroller.scrollTop > bounding.floor){\r\n\t\t\t\t// console.log('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tnextFloor();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\t\tonElementResize(parentNode, function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t});\r\n\t}\r\n\r\n\t// Recommended for a list that have similar element height\r\n\tfunction staticHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\r\n\t\t// Insert visible element to dom tree\r\n\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\tif(virtual.dom.firstElementChild === null)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', virtual.dom.firstElementChild);\r\n\t\t}\r\n\r\n\t\tfunction refreshVirtualSpacer(cursor){\r\n\t\t\tif(cursor >= self.prepareCount){\r\n\t\t\t\tceiling.style.height = (cursor - self.prepareCount) * virtual.scrollHeight + 'px';\r\n\t\t\t\tfloor.style.height = (list.length - virtual.preparedLength - cursor) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tceiling.style.height = cursor * virtual.scrollHeight + 'px'; //'0px';\r\n\t\t\t\tvar count = (list.length - virtual.preparedLength);\r\n\t\t\t\tfloor.style.height = (count || 0) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\r\n\t\trefreshVirtualSpacer(0);\r\n\t\trefreshScrollBounding(self.prepareCount, bounding, list, parentNode);\r\n\t\tbounding.ceiling = -1;\r\n\r\n\t\tvirtual.offsetTo = function(index){\r\n\t\t\treturn index * virtual.scrollHeight + ceiling.offsetTop;\r\n\t\t}\r\n\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tvar fromCeiling = true;\r\n\t\tvar scrollFocused = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript || scroller.scrollTop >= bounding.ceiling && scroller.scrollTop <= bounding.floor){\r\n\t\t\t\t// Fix chrome scroll anchoring bugs when scrolling at corner\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tif(scroller.scrollTop === 0 || scroller.scrollTop === scroller.scrollHeight - scroller.clientHeight){\r\n\t\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar cursor = Math.floor(scroller.scrollTop / virtual.scrollHeight);\r\n\t\t\tif(cursor + virtual.preparedLength > list.length)\r\n\t\t\t\tcursor = list.length - virtual.preparedLength;\r\n\r\n\t\t\tif(fromCeiling){\r\n\t\t\t\tif(cursor < self.prepareCount*2)\r\n\t\t\t\t\tcursor -= self.prepareCount;\r\n\r\n\t\t\t\t// Fix chrome scroll anchoring bugs\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t}\r\n\t\t\t\tfromCeiling = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cursor < self.prepareCount){\r\n\t\t\t\tcursor = 0;\r\n\t\t\t\tfromCeiling = true;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tvar changes = cursor - virtual.DOMCursor;\r\n\t\t\tif(cursor + changes >= list.length)\r\n\t\t\t\tchanges = cursor + changes - list.length;\r\n\r\n\t\t\tif(changes === 0){ // This should be fixed to improve performance and future bugs\r\n\t\t\t\t//console.warn(\"No changes (The scroll bounding is not correct)\");\r\n\t\t\t\tupdating = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.DOMCursor = cursor;\r\n\r\n\t\t\t//console.log(cursor, changes);\r\n\r\n\t\t\t//console.log(cursor, changes, bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\t\t\tmoveElementCursor(changes, list);\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\t\t\trefreshScrollBounding(cursor, bounding, list, parentNode);\r\n\t\t\t//console.log('a', bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\r\n\t\t// For preventing scroll jump if scrolling over than viewport\r\n\t\tif(scroller === parentNode && navigator.userAgent.indexOf('Chrom') !== -1){\r\n\t\t\t$.on(parentNode, 'mousedown', function(){\r\n\t\t\t\tscrollFocused = true;\r\n\t\t\t});\r\n\t\t\t$.on(parentNode, 'mouseup', function(){\r\n\t\t\t\tscrollFocused = false;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction refreshScrollBounding(cursor, bounding, list, parentNode){\r\n\t\tvar temp = Math.floor(self.prepareCount / 2); // half of element preparation\r\n\t\tif(cursor < self.prepareCount){\r\n\t\t\tbounding.ceiling = -1;\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount * 2 + 1];\r\n\r\n\t\t\tif(bounding.floor !== undefined)\r\n\t\t\t\tbounding.floor = bounding.floor.offsetTop;\r\n\t\t\telse bounding.floor = parentNode.lastElementChild.offsetTop + 1000;\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if(parentNode.children[temp + 1] !== undefined)\r\n\t\t\t\tbounding.ceiling = parentNode.children[temp + 1].offsetTop; // -2 element\r\n\r\n\t\tif(list.$virtual.preparedLength !== undefined && cursor >= list.length - list.$virtual.preparedLength)\r\n\t\t\tbounding.floor = list.$virtual.dCursor.floor.offsetTop + list.$virtual.scrollHeight*2;\r\n\t\telse{\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount + 3].offsetTop; // +2 element\r\n\r\n\t\t\tif(parentNode.hasAttribute('scroll-reduce-floor')){\r\n\t\t\t\tbounding.floor -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t\tbounding.ceiling -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction moveElementCursor(changes, list){\r\n\t\tvar vDOM = list.$virtual.dom;\r\n\t\tvar vCursor = list.$virtual.vCursor;\r\n\t\tvar dCursor = list.$virtual.dCursor;\r\n\r\n\t\tif(changes > 0){ // forward\r\n\t\t\tvar ref = 0;\r\n\r\n\t\t\t// Select from virtual ceiling cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tref = vDOM.firstElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.ceiling.nextElementSibling;\r\n\t\t\t\tdCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the ceiling to vDom\r\n\t\t\tfor (var i = changes; i > 0; i--) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.ceiling === null){\r\n\t\t\t\t\tvCursor.ceiling = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('afterBegin', vCursor.ceiling);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t\t\tvCursor.ceiling = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\t\t}\r\n\t\telse if(changes < 0){ // backward\r\n\t\t\tvar ref = 0;\r\n\t\t\tchanges = -changes;\r\n\r\n\t\t\t// Select from virtual floor cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tref = vDOM.lastElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.floor.previousElementSibling;\r\n\t\t\t\tdCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the floor to vDom\r\n\t\t\tfor (var i = 0; i < changes; i++) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvCursor.floor = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('beforeEnd', vCursor.floor);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t\t\tvCursor.floor = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scrollTo(index, list, prepareCount, parentNode, scroller, refreshVirtualSpacer){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar reduce = 0;\r\n\r\n\t\tif(index >= list.length - virtual.preparedLength){\r\n\t\t\treduce -= prepareCount;\r\n\t\t\tindex = list.length - virtual.preparedLength;\r\n\t\t}\r\n\r\n\t\tif(index - virtual.DOMCursor === 0 || index >= list.length) return;\r\n\r\n\t\tscrollingByScript = true;\r\n\r\n\t\t// Already on DOM tree\r\n\t\tif((virtual.DOMCursor === 0 && index < prepareCount + prepareCount/2) ||\r\n\t\t\t(virtual.DOMCursor + prepareCount/2 > index\r\n\t\t\t&& virtual.DOMCursor + prepareCount < index))\r\n\t\t\tscroller.scrollTop = parentNode.children[index - virtual.DOMCursor + 1].offsetTop;\r\n\r\n\t\t// Move cursor\r\n\t\telse {\r\n\t\t\tvar temp = null;\r\n\t\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\t\tvar floor = virtual.dCursor.floor;\r\n\t\t\tvar vCursor = virtual.vCursor;\r\n\r\n\t\t\t// DOM tree to virtual DOM\r\n\t\t\tvar length = parentNode.childElementCount - 2;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\r\n\t\t\t\t\tif(i === length-1)\r\n\t\t\t\t\t\tvCursor.floor = temp;\r\n\t\t\t\t}\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(index >= prepareCount){\r\n\t\t\t\tif(index < list.length - virtual.preparedLength)\r\n\t\t\t\t\tindex -= prepareCount;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treduce = prepareCount - index;\r\n\t\t\t\tvirtual.DOMCursor = index = 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\r\n\t\t\t// Virtual DOM to DOM tree\r\n\t\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\t\ttemp = virtual.dom.children[index];\r\n\t\t\t\tif(temp === undefined) break;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t\tvirtual.DOMCursor = index;\r\n\r\n\t\t\tvCursor.floor = virtual.dom.children[index] || null;\r\n\t\t\tvCursor.ceiling = vCursor.floor ? vCursor.floor.previousElementSibling : null;\r\n\r\n\t\t\tif(refreshVirtualSpacer)\r\n\t\t\t\trefreshVirtualSpacer(index);\r\n\r\n\t\t\trefreshScrollBounding(index, virtual.bounding, list, parentNode);\r\n\r\n\t\t\ttemp = parentNode.children[prepareCount - reduce + 1];\r\n\t\r\n\t\t\tif(temp !== undefined)\r\n\t\t\t\tscroller.scrollTop = temp.offsetTop - scroller.offsetTop;\r\n\t\t}\r\n\r\n\t\tscrollingByScript = false;\r\n\t}\r\n\r\n\tfunction removeUserScrollFocus(parentNode){\r\n\t\tparentNode.style.overflow = 'hidden';\r\n\t\tsetTimeout(function(){\r\n\t\t\tparentNode.style.overflow = '';\r\n\t\t}, 50);\r\n\t}\r\n\r\n\tfunction getAbsoluteHeight(el){\r\n\t  var styles = window.getComputedStyle(el);\r\n\t  var margin = parseInt(styles['marginTop']) + parseInt(styles['marginBottom']);\r\n\t  return el.offsetHeight + margin || 0;\r\n\t}\r\n\r\n\tfunction obtainElements(list, parentNode){\r\n\t\tvar exist = [];\r\n\t\tvar temp = undefined;\r\n\r\n\t\tvar length = list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = parentNode.childElementCount - 2;\r\n\t\tfor (var i = 1; i <= length; i++) {\r\n\t\t\ttemp = parentNode.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = list.length - length - list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[list.$virtual.DOMCursor + i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\treturn exist;\r\n\t}\r\n\r\n\tfunction refresh(force, list, prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer){\r\n\t\tvar cursor = list.$virtual.DOMCursor;\r\n\t\tvar additionalScroll = 0;\r\n\r\n\t\t// Find nearest cursor for current view position\r\n\t\tif(force){\r\n\t\t\tvar i = -1;\r\n\t\t\tvar length = list.$virtual.preparedLength;\r\n\r\n\t\t\tdo{\r\n\t\t\t\ti++;\r\n\t\t\t} while(i < length && parentNode.children[i].offsetTop < scroller.scrollTop);\r\n\r\n\t\t\tcursor = cursor + i;\r\n\t\t\tif(cursor > 0) cursor -= 1;\r\n\r\n\t\t\tadditionalScroll = scroller.scrollTop - parentNode.children[i].offsetTop;\r\n\t\t}\r\n\r\n\t\t// Force move cursor if element in the DOM tree was overloaded\r\n\t\tif(force || parentNode.childElementCount - 2 > list.$virtual.preparedLength){\r\n\t\t\tlist.$virtual.DOMCursor = list.length;\r\n\t\t\tvar moveTo = cursor;\r\n\t\t\tif(!force)\r\n\t\t\t\tmoveTo = cursor <= prepareCount ? cursor : (cursor + prepareCount);\r\n\r\n\t\t\tscrollTo(moveTo,\r\n\t\t\t\tlist,\r\n\t\t\t\tprepareCount,\r\n\t\t\t\tparentNode,\r\n\t\t\t\tscroller,\r\n\t\t\t\trefreshVirtualSpacer\r\n\t\t\t);\r\n\r\n\t\t\tscroller.scrollTop += additionalScroll;\r\n\t\t}\r\n\r\n\t\tif(refreshVirtualSpacer)\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\r\n\t\tif(checkCursorPosition)\r\n\t\t\tcheckCursorPosition();\r\n\r\n\t\trefreshScrollBounding(cursor, list.$virtual.bounding, list, parentNode);\r\n\t}\r\n\r\n\tvar _onElementResize = [];\r\n\tvar _onElementResize_timer = -1;\r\n\tfunction onElementResize(parentNode, callback){\r\n\t\tif(_onElementResize_timer === -1){\r\n\t\t\t_onElementResize_timer = setInterval(function(){\r\n\t\t\t\tvar temp = null;\r\n\t\t\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\t\t\ttemp = _onElementResize[i];\r\n\r\n\t\t\t\t\t// Check resize\r\n\t\t\t\t\tif(temp.element.scrollHeight === temp.height\r\n\t\t\t\t\t\t|| temp.element.scrollWidth === temp.width)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t// Check if it's removed from DOM\r\n\t\t\t\t\tif(temp.element.parentElement === null){\r\n\t\t\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.callback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(_onElementResize.length === 0){\r\n\t\t\t\t\tclearInterval(_onElementResize_timer);\r\n\t\t\t\t\t_onElementResize_timer = -1;\r\n\t\t\t\t}\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\r\n\t\t_onElementResize.push({\r\n\t\t\telement:parentNode,\r\n\t\t\tcallback:callback,\r\n\t\t\theight:parentNode.scrollHeight,\r\n\t\t\twidth:parentNode.scrollWidth\r\n\t\t});\r\n\t}\r\n\r\n\tfunction offElementResize(parentNode){\r\n\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\tif(_onElementResize[i].element === parentNode)\r\n\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Interval will be cleared when the array is empty\r\n\t}\r\n\r\n\tfunction initStyles(){\r\n\t\tvar style = document.getElementById('sf-styles');\r\n\r\n\t\tif(!style){\r\n\t\t\tstyle = document.createElement('style');\r\n\t\t\tstyle.id = 'sf-styles';\r\n        \tdocument.head.appendChild(style);\r\n\t\t}\r\n\r\n\t\tstyle.sheet.insertRule(\r\n\t\t'.sf-virtual-list .virtual-spacer{'+\r\n            'visibility: hidden;'+\r\n            'position: relative;'+\r\n            'height: 1px;'+\r\n            'transform-origin: 0 0;'+\r\n            'width: 1px;'+\r\n            'margin: 0;'+\r\n            'padding: 0;'+\r\n            'background: none;'+\r\n            'border: none;'+\r\n            'box-shadow: none;'+\r\n         '}', style.sheet.cssRules.length);\r\n\t}\r\n};"]}