{"version":3,"sources":["sf-a_init.js","sf-a_polyfill.js","sf-dom.js","sf-loader.js","sf-component.js","sf-model.js","sf-api.js","sf-controller.js","sf-e-ajax.js","sf-url.js","sf-z_end.js","sf-events.js","sf-language.js","sf-views.js","sf-virtual_scroll.js"],"names":["global","factory","routerEval","code","eval","exports","module","sf","window","this","document","internal","stuff","constructor","Function","loader","onFinish","apply","arguments","tagName","model","root","controller","modelName","regex","getQuotes","validFunctionCall","strictVar","escapeHTML","uniqueDataParser","dataParser","arrayItemsObserve","allowedFunctionEval","for","if","while","_content_.take","console.log","avoidQuotes","str","func","noReturn","temp","es","replace","full","push","length","i","isEmptyObject","obj","key","compareObject","obj1","obj2","hiddenProperty","property","value","Object","defineProperty","enumerable","configurable","deepProperty","path","capitalizeLetters","name","toUpperCase","slice","join","assign","target","varArgs","TypeError","to","index","nextSource","nextKey","prototype","hasOwnProperty","call","writable","console","group","groupCollapsed","groupEnd","Element","remove","CharacterData","DocumentType","forEach","item","parentNode","removeChild","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","querySelectorAll","NodeList","callback","thisArg","location","origin","protocol","hostname","port","values","res","setPrototypeOf","proto","__proto__","Reflect_Construct","Reflect","construct","Parent","args","Class","a","instance","bind","_setPrototypeOf","dom","selector","context","parseElement","String","$","self","findOne","querySelector","parent","element","closest","parentElement","prevAll","isNext","result","findNodes","nextSibling","previousSibling","nextAll","on","event","once","tempCallback","ev","addEventListener","capture","sf$eventListener","off","events","split","ref","removeEventListener","splice","animateCSS","animationName","duration","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","style","webkitAnimationDuration","animationDuration","list","classList","add","setTimeout","emptyDOM","div","createElement","ul","tbody","tr","table","select","html","returnNode","tempDOM","indexOf","textContent","insertAdjacentHTML","escapeText","text","innerHTML","elements","documentElement","domReady","body","haveSymbol","getSelector","childIndexes","untilElement","names","id","test","unshift","e","array","substr","childNodes","extends_Dom7","el","keys","n","loadedContent","totalContent","DOMWasLoaded","DOMReady","turnedOff","whenDOMReady","whenDOMLoaded","whenProgress","onProgress","f","css","rel","href","head","appendChild","js","type","async","src","warn","isQueued","domLoadEvent","queuePreprocess","domStateEvent","readyState","error","resourceWaitTimer","setInterval","waitResources","clearInterval","listener","modelPending","undefined","scope","root_","pending","init","component","registered","available","bases","extend","defineComponent","base","outerHTML","triggerEvent","componentInit","newID","from","setAttribute","sf$component","sf$componentFrom","new","$item","isCreated","retriggered","childElementCount","hasAttribute","avoid","attr","attributes","nodeName","newElement","cloneNode","newObj","Array","firstElementChild","destroy","DOMNodeRemoved","HTMLElement","customElements","HTMLElement_wrap","Wrapper","getPrototypeOf","create","get","connectedCallback","define","err","run","bindingEnabled","processingElement","trimIndentation","indent","trim","RegExp","bracketMatch","chackValidFunctionCall","localEval","script","_model_","_modelScope","_content_","preventExecution","tempScript","check_","exec","lastIndex","log","_result_","_evaled_","onclick","escapeEscapedQuote","unescapeEscapedQuote","elseIfHandle","else_","scopes","elseIf","elseValue","currentElement","previousElementSibling","getAttribute","$virtual","DOMCursor","modelKeys","modelRef","templateParser_regex","REF_DIRECT","REF_IF","REF_EXEC","templateExec","parse","atIndex","parsed","data","JSON","stringify","templateParser","template","original","addresses","changesReference","pendingInsert","current","address","nodeType","refA","direct","match","cRef","dynamicFlag","parse_index","startFlag","refB","isValueInput","attribute","removeAttribute","sf$elementReferences","tDOM","insertBefore","syntheticCache","sf$cache","cache","modelRef_array","syntheticTemplate","changes","modelReference","newData","checkRelatedChanges","parseIndex","found","changes_","haveChanges","ref_","sf$haveChilds","sf$childRoot","reverse","currentDOM","notExist","isEqualNode","replaceChild","mask","runEval","preParsedReference","scopeMask","itemMask","preParsed","lastParsedIndex","prepared","actual","temp_","matched","exist","charCodeAt","take","passVar","currentIndex","strDeclare","firstTime","check","VarPass_","VarPass","s1","obtained","val","findElse","pop","shift","condition","bindArray","propertyName","targetNode","editProperty","refreshTimer","parentChilds","children","isKeyed","contains","eventVar","processElement","options","other","count","vEndRange","preparedLength","spacer","lastElementChild","height","reset","clearTimeout","reinitScroll","overflow","vDOM","theParent","update","index_a","other_sibling","other_parent","oldChild","referenceNode","vCursor","floor","insertAdjacentElement","currentEl","currentRemoved","startRemove","refreshVirtualSpacer","propertyProxy","subject","lastLength","reinitCursor","o","resetViewport","matchLeft","refresh","real","limit","callback_","var","virtual_scroll","handle","scroller","findScrollerElement","computed","getComputedStyle","backfaceVisibility","addScrollerStyle","needle","elRef","getElement","process","content","parentNode_","elem","hardRefresh","softRefresh","virtualChilds","childElement","loopParser","method","items","extractPreprocess","sf$bindedKey","initBindingInformation","set","callInputListener","v2m","newValue1","newValue2","old","inputBoundRunning","inputTextBound","fromSFFramework","viewInputted","typeData","Number","newValue","sfModel","sfBounded","inputFilesBound","files","inputCheckBoxBound","checked","Boolean","inputSelectBound","multiple","selectedOptions","assignElementData","arrayValue","selected","checkbox","inputBoundRun","Event","dispatchEvent","triggerInputEvent","elementBoundChanges","oneWay","toLowerCase","modelToViewBinding","bindInput","modelScope","alreadyInitialized","repeatedListBinding","queued","controller_","ceiling","after","nextElementSibling","before","router","enabled","sfPage","$page","afterModelBinding","routerLocalEvent","parsePreprocess","isScan","removeModelBinding","modelFrom","components","everyRemovedNodes","nodes","MutationObserver","observe","everyRecords","record","removedNodes","records","childList","subtree","bindedKey","getOwnPropertyDescriptor","elementBind","input","objValue","getAssigner","m2v","out","newValue3","dcBracket","bindElement","onChanges","properties","backup","copy","restore","addressed","addressAttributes","currentNode","attrs","indexes","addressStart","commentFlag","flag","createComment","textNode","createTextNode","search","extract","sort","b","checkList","full_","match_","findModelProperty","asArray","enclosedHTMLParse","excludes","extracting","enclosing","enclosed","nodeValue","modelElement","API","url","success","complete","accessToken","getXHR","req","dataType","onSuccess","status","response","onError","FormData","contentType","_method","beforeSend","xhr","setRequestHeader","ajax","extendsAPI","post","delete","put","upload","formData","progress","onprogress","lengthComputable","loaded","total","active","bindedList","parentEl","bindedListIndex","listenSFClick","script_","method_","preventDefault","scope_","globals","jsonpRequests","hashes","Request","requestOptions","globalsNoCallbacks","callbackName","defaults","toString","user","password","headers","xhrFields","statusCode","processData","timeout","fireCallback","globalCallbackValue","optionCallbackValue","_i","paramsPrefix","stringData","serializeQuery","abortTimeout_1","callbackName_1","Date","now","callbackSplit","requestUrl","addVars","filter","script_1","onerror","XMLHttpRequest","requestParameters","open","xhrTimeout","postData","ArrayBuffer","Blob","Document","boundary","headerName","crossDomain","$2","host","onload","responseData","parseError","responseText","responseType","onabort","abort","send","RequestShortcut","_a","params","prefix","encodeURIComponent","concat","json","getJSON","postJSON","setup","callbacks","callbacksWhen","Events","when","lang","default","serverURL","interpolate","diveFill","interpolate_","waiting","pendingCallback","diveObject","activeRequest","paths","defaultLang","pendingElement","setValue","parts","refreshLang","noPending","sf_lang","placeholder","hashes_","data_","history","pushState","state","replaceState","hash","pathname","gEval","rejectResponse","aHashes","routingError","routeDirection","historyIndex","disableHistoryPush","goto","cachedURL","parseRoutes","obj_","selectorList","routes","pattern","knownKeys","addRoutes","addition","route","templateURL","display","beforeRoute","defaultData","hasChild","forChild","findRoute","views","pendingAutoRoute","currentPath","initialized","selectorElement","lastPath","lastDOM","relatedDOM","maxCache","rootDOM","selector_","isChild","DOM","isConnected","viewInitialized","firstChild","routePath","routeCached","onEvent","routeStart","routeFinish","routeError","addRoute","RouterLoading","routeError_","aborted","go","pageViewNodeName","toBeShowed","relatedPage","lastSibling","parentSimilarity","showedSibling","_callback","cachedDOM","findDOM","childs","leaving","coming","reinitList","models","reinit","tryCache","afterDOMLoaded","DOMReference","newPath","insertLoadedElement","pendingShowed","tempPageView","_sf_view","html_content","parentPageElement","routerData","dynamicScript","scripts","getElementsByTagName","view","scrollingByScript","refreshScrollBounding","cursor","bounding","Math","prepareCount","offsetTop","initial","dCursor","scrollHeight","scrollTo","virtual","reduce","index_","scrollTop","insertCount","removeUserScrollFocus","getAbsoluteHeight","styles","margin","parseInt","offsetHeight","force","checkCursorPosition","additionalScroll","moveTo","reinitOnly","elementLength","obtainElements","_onElementResize","offElementResize","visibleLength","clientHeight","pendingFunction","ceilingHeight","floorHeight","fillViewport","updating","resetCeiling","previousCeiling","nextFloor","hitFloor","hitCeiling","_onElementResize_timer","scrollWidth","width","onElementResize","dynamicHeight","offsetTo","fromCeiling","scrollFocused","moveElementCursor","navigator","userAgent","staticHeight","styleInitialized","getElementById","sheet","insertRule","cssRules","isScroller"],"mappings":"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","file":"scarletsframe.min.js","sourcesContent":["(function(global, factory){\r\n  // Dynamic script when using router to load template\r\n  // Feature is disabled by default\r\n  function routerEval(code){eval(code)}\r\n\r\n  if(typeof exports === 'object' && typeof module !== 'void 0') module.exports = factory(global, routerEval);\r\n  else global.sf = factory(global, routerEval);\r\n}(typeof window !== \"void 0\" ? window : this, (function(window, routerEval){'use strict';\r\nif(typeof document === void 0)\r\n\tdocument = window.document;\r\n// ===== Module Init =====\r\nvar internal = {};\r\n\r\nvar sf = function(stuff){\r\n\tif(stuff.constructor === Function)\r\n\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\r\n\t// If it's Node type\r\n\tif(stuff.tagName !== void 0)\r\n\t\treturn sf.model.root[sf.controller.modelName(stuff)];\r\n};\r\n\r\nsf.internal = {};\r\nsf.regex = {\r\n\tgetQuotes:/(['\"])(?:\\1|[\\s\\S]*?[^\\\\]\\1)/g,\r\n\tvalidFunctionCall:/[a-zA-Z0-9 \\]\\$\\)]/,\r\n\tstrictVar:'(?=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )',\r\n\tescapeHTML:/(?!&#.*?;)[\\u00A0-\\u9999<>\\&]/gm,\r\n\r\n\tuniqueDataParser:/{{((@|#[\\w])[\\s\\S]*?)}}/g,\r\n\tdataParser:/{{([^@%][\\s\\S]*?)}}/g,\r\n\r\n\tarrayItemsObserve:/\\b_model_\\.([a-zA-Z0-9.['\\]]+)(?:$|[^'\\]])/g,\r\n};\r\n\r\nvar allowedFunctionEval = {'for':true, 'if':true, 'while':true, '_content_.take':true, 'console.log':true};\r\n\r\nfunction avoidQuotes(str, func, noReturn){\r\n\tvar temp = [];\r\n\tvar es = '<%$@>';\r\n\r\n\tif(noReturn !== void 0){\r\n\t\tfunc(str.replace(sf.regex.getQuotes, '<%$@>'));\r\n\t\treturn;\r\n\t}\r\n\r\n\tstr = str.replace(sf.regex.getQuotes, function(full){\r\n\t\ttemp.push(full);\r\n\t\treturn es+(temp.length-1)+es;\r\n\t});\r\n\r\n\tstr = func(str);\r\n\r\n\tfor (var i = 0; i < temp.length; i++) {\r\n\t\tstr = str.replace(es+i+es, temp[i]);\r\n\t}\r\n\treturn str;\r\n}\r\n\r\nfunction isEmptyObject(obj){\r\n\tfor(var key in obj){\r\n\t\treturn false;\r\n\t}\r\n\treturn true\r\n}\r\n\r\nfunction compareObject(obj1, obj2){\r\n\tif(!obj1 || !obj2)\r\n\t\treturn false;\r\n\r\n\tfor(var i in obj1){\r\n\t\tif(typeof obj1[i] !== 'object' && obj1[i] !== obj2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction hiddenProperty(obj, property, value){\r\n\tObject.defineProperty(obj, property, {\r\n\t\tenumerable: false,\r\n\t\tconfigurable: true,\r\n\t\tvalue: value\r\n\t});\r\n}\r\n\r\nfunction deepProperty(obj, path){\r\n  for(var i = 0; i < path.length; i++){\r\n    obj = obj[path[i]];\r\n    if(obj === void 0) return obj;\r\n  }\r\n  return obj;\r\n}\r\n\r\nfunction capitalizeLetters(name){\r\n\tfor (var i = 0; i < name.length; i++) {\r\n\t\tname[i] = name[i][0].toUpperCase() + name[i].slice(1);\r\n\t}\r\n\treturn name.join('');\r\n}","// ==== ES5 Polyfill ====\r\nif(typeof Object.assign != 'function'){\r\n  Object.defineProperty(Object, \"assign\", {\r\n    value: function assign(target, varArgs) {\r\n      'use strict';\r\n      if (target == null)\r\n        throw new TypeError('Cannot convert void 0 or null to object');\r\n      var to = Object(target);\r\n      for (var index = 1; index < arguments.length; index++) {\r\n        var nextSource = arguments[index];\r\n        if (nextSource != null) {\r\n          for (var nextKey in nextSource) {\r\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey))\r\n              to[nextKey] = nextSource[nextKey];\r\n          }\r\n        }\r\n      }\r\n      return to;\r\n    },\r\n    writable: true,\r\n    configurable: true\r\n  });\r\n}\r\n\r\nif(console.group === void 0)\r\n  console.group = console.groupCollapsed = console.groupEnd = function(){};\r\n\r\n\r\nif(Element.prototype.remove === void 0 || CharacterData.prototype.remove === void 0 || DocumentType.prototype.remove === void 0){\r\n  (function (arr) {\r\n    arr.forEach(function (item) {\r\n      if (item.hasOwnProperty('remove')) {\r\n        return;\r\n      }\r\n      Object.defineProperty(item, 'remove', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n        value: function remove() {\r\n          if (this.parentNode !== null)\r\n            this.parentNode.removeChild(this);\r\n        }\r\n      });\r\n    });\r\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\r\n}\r\n\r\nif(!Element.prototype.matches){\r\n  Element.prototype.matches = (Element.prototype).matchesSelector ||\r\n    (Element.prototype).mozMatchesSelector || (Element.prototype).msMatchesSelector ||\r\n    (Element.prototype).oMatchesSelector || (Element.prototype).webkitMatchesSelector ||\r\n    function (s) {\r\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n      i = matches.length;\r\n      while (--i >= 0 && matches.item(i) !== this){}\r\n      return i > -1;\r\n    };\r\n}\r\n\r\nif(!NodeList.prototype.forEach){\r\n    NodeList.prototype.forEach = function (callback, thisArg) {\r\n        thisArg = thisArg || window;\r\n        for (var i = 0; i < this.length; i++) {\r\n            callback.call(thisArg, this[i], i, this);\r\n        }\r\n    };\r\n}\r\n\r\nif(!window.location.origin)\r\n  window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');\r\n\r\nif(!Object.values)\r\n  Object.values = function(obj){\r\n    var res = [];\r\n    for (var i in obj) {\r\n        if (obj.hasOwnProperty(i)) {\r\n            res.push(obj[i]);\r\n        }\r\n    }\r\n    return res;\r\n  }\r\n\r\nif(Object.setPrototypeOf === void 0)\r\n  Object.setPrototypeOf = function(obj, proto) {\r\n    obj.__proto__ = proto;\r\n    return obj; \r\n  }\r\n\r\nvar Reflect_Construct = null;\r\nif(typeof Reflect !== 'undefined')\r\n  Reflect_Construct = Reflect.construct;\r\nelse \r\n  Reflect_Construct = function(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; };","sf.dom = function(selector, context){\r\n\tif(selector[0] === '<') return sf.dom.parseElement(selector);\r\n\tif(selector.constructor !== String) return selector;\r\n\r\n\tif(context) return context.querySelectorAll(selector);\r\n\treturn document.querySelectorAll(selector);\r\n}\r\n\r\nvar $ = sf.dom; // Shortcut\r\n\r\n;(function(){\r\n\tvar self = sf.dom;\r\n\r\n\tself.findOne = function(selector, context){\r\n\t\tif(context !== void 0) return context.querySelector(selector);\r\n\t\treturn document.querySelector(selector);\r\n\t}\r\n\r\n\tself.parent = function(element, selector){\r\n\t\tif(element.closest) return element.closest(selector);\r\n\r\n\t\tdo {\r\n\t\t\tif(element.matches(selector) === true)\r\n\t\t\t\treturn element;\r\n\r\n\t\t\telement = element.parentElement;\r\n\t\t} while (element !== null);\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tself.prevAll = function(element, selector, isNext){\r\n\t\tvar result = [];\r\n\t\tvar findNodes = !selector || selector.constructor !== String ? true : false;\r\n\r\n\t\t// Skip current element\r\n\t\telement = isNext ? element.nextSibling : element.previousSibling;\r\n\t\twhile (element !== null) {\r\n\t\t\tif(findNodes === false && element.matches(selector) === true)\r\n\t\t\t\tresult.push(element);\r\n\t\t\telse{\r\n\t\t\t\tif(element === selector)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tresult.push(element);\r\n\t\t\t}\r\n\r\n\t\t\tif(isNext)\r\n\t\t\t\telement = element.nextSibling;\r\n\t\t\telse\r\n\t\t\t\telement = element.previousSibling;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.nextAll = function(element, selector){\r\n\t\treturn self.prevAll(element, selector, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen to an event\r\n\t * @param  Node \t\t\telement \tparent element\r\n\t * @param  string \t\t\tevent   \tevent name\r\n\t * @param  function|string  selector    callback function or selector\r\n\t * @param  function\t\t\tcallback    callback function\r\n\t * @param  boolean\t\t\tonce    \tcall once\r\n\t * @return null\r\n\t */\r\n\tself.on = function(element, event, selector, callback, once){\r\n\t\tif(typeof element === 'string'){\r\n\t\t\telement = document;\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = event;\r\n\t\t\tevent = element;\r\n\t\t}\r\n\r\n\t\tif(typeof selector === 'function'){\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = null;\r\n\t\t}\r\n\r\n\t\tif(selector){\r\n\t\t\tvar tempCallback = callback;\r\n\t\t\tcallback = function(ev){\r\n\t\t\t\tif(self.parent(ev.target, selector) !== null)\r\n\t\t\t\t\ttempCallback(ev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcallback.selector = selector;\r\n\t\tcallback.once = once;\r\n\t\telement.addEventListener(event, callback, {capture:true, once:once === true});\r\n\r\n\t\t// Save event listener\r\n\t\tif(element.sf$eventListener === void 0)\r\n\t\t\telement.sf$eventListener = {};\r\n\r\n\t\tif(element.sf$eventListener[event] === void 0)\r\n\t\t\telement.sf$eventListener[event] = [];\r\n\r\n\t\telement.sf$eventListener[event].push(callback);\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.once = function(element, event, selector, callback){\r\n\t\tself.on(element, event, selector, callback, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event listener\r\n\t * @param  Node \telement \tparent element\r\n\t * @param  string \tevent   \tevent name\r\n\t * @param  string  \tselector    selector\r\n\t * @return null\r\n\t */\r\n\tself.off = function(element, event, selector){\r\n\t\t// Remove all event\r\n\t\tif(event === void 0){\r\n\t\t\tif(element.sf$eventListener === void 0)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar events = element.sf$eventListener[event];\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar events = event.split(' ');\r\n\t\tif(events.length !== 1){\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove listener\r\n\t\tif(element.sf$eventListener === void 0)\r\n\t\t\treturn;\r\n\r\n\t\tvar ref = element.sf$eventListener;\r\n\t\tif(ref !== void 0 && ref[event] !== void 0){\r\n\t\t\tfor (var i = ref[event].length - 1; i >= 0; i--) {\r\n\t\t\t\tif(selector && ref[event][i].selector !== selector)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\telement.removeEventListener(event, ref[event].splice(i, 1), true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.animateCSS = function(element, animationName, callback, duration) {\r\n\t\tvar animationEnd = {\r\n\t\t\tanimation: 'animationend',\r\n\t\t\tOAnimation: 'oAnimationEnd',\r\n\t\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t\t};\r\n\r\n\t\tfor (var t in animationEnd){\r\n\t\t\tif(element.style[t] !== void 0){\r\n\t\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(duration){\r\n\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t}\r\n\r\n\t\tvar list = ('animated ' + animationName).split(' ');\r\n\t\telement.classList.add.apply(element.classList, list);\r\n\t\t$.once(element, animationEnd, function(){\r\n\t\t\telement.classList.remove.apply(element.classList, list);\r\n\t\t\t\r\n\t\t\tif(duration) setTimeout(function(){\r\n\t\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t\t}, 1);\r\n\r\n\t\t\tif(typeof callback === 'function') callback();\r\n\t\t});\r\n\t}\r\n\r\n\tvar emptyDOM = {\r\n\t\tdiv:document.createElement('div'),\r\n\t\tul:document.createElement('ul'),\r\n\t\ttbody:document.createElement('tbody'),\r\n\t\ttr:document.createElement('tr'),\r\n\t\ttable:document.createElement('table'),\r\n\t\tselect:document.createElement('select'),\r\n\t};\r\n\tself.parseElement = function(html, returnNode){\r\n\t\tvar result = [];\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\r\n        if(html.indexOf('<li') === 0) tempDOM = emptyDOM.ul;\r\n        if(html.indexOf('<tr') === 0) tempDOM = emptyDOM.tbody;\r\n        if(html.indexOf('<td') === 0 || html.indexOf('<th') === 0) tempDOM = emptyDOM.tr;\r\n        if(html.indexOf('<tbody') === 0) tempDOM = emptyDOM.table;\r\n        if(html.indexOf('<option') === 0) tempDOM = emptyDOM.select;\r\n\r\n\t\ttempDOM.textContent = '';\r\n\t\ttempDOM.insertAdjacentHTML('afterBegin', html);\r\n\r\n\t\tvar ref = tempDOM[returnNode ? 'childNodes' : 'children'];\r\n\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\tresult.push(ref.item(i));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tself.escapeText = function(text){\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\t\ttempDOM.textContent = text;\r\n\t\treturn tempDOM.innerHTML;\r\n\t}\r\n\r\n\tself.remove = function(elements){\r\n\t\tif(elements.remove !== void 0)\r\n\t\t\treturn elements.remove();\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\telements[i].remove();\r\n\t\t}\r\n\t}\r\n\r\n\tvar documentElement = null;\r\n\tsetTimeout(function(){\r\n\t\tsf.loader.domReady(function(){\r\n\t\t\tdocumentElement = document.body.parentElement;\r\n\t\t});\r\n\t}, 1);\r\n\r\n\tvar haveSymbol = /[~`!@#$%^&*()+={}|[\\]\\\\:\";'<>?,./ ]/;\r\n\tself.getSelector = function(element, childIndexes, untilElement){\r\n\t\tvar names = [];\r\n\t\tif(untilElement === void 0) untilElement = documentElement;\r\n\r\n\t\tvar previousSibling = childIndexes ? 'previousSibling' : 'previousElementSibling';\r\n\r\n\t\twhile(element.parentNode !== null){\r\n\t\t\tif(element.id && !haveSymbol.test(element.id)){\r\n\t\t\t\tnames.unshift('#'+element.id);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(element === untilElement){\r\n\t\t\t\t\tif(childIndexes === void 0)\r\n\t\t\t\t\t\tnames.unshift(element.tagName);\r\n\t\t\t\t\telse names.unshift(0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar e = element;\r\n\t\t\t\t\tvar i = childIndexes ? 0 : 1;\r\n\r\n\t\t\t\t\twhile(e[previousSibling]){\r\n\t\t\t\t\t\te = e[previousSibling];\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(childIndexes)\r\n\t\t\t\t\t\tnames.unshift(i);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tnames.unshift(\":nth-child(\"+i+\")\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t\tif(element === null)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndexes)\r\n\t\t\treturn names;\r\n\t\treturn names.join(\" > \");\r\n\t}\r\n\r\n\tself.childIndexes = function(array, context){\r\n\t\tvar element = context || documentElement;\r\n\t\tvar i = 1;\r\n\r\n\t\tif(array[0].constructor === String && element.id !== array[0].substr(1))\r\n\t\t\telement = element.querySelector(array[0]);\r\n\r\n\t\telse if(array.length === 1)\r\n\t\t\treturn element;\r\n\r\n\t\tfor (i = i; i < array.length; i++) {\r\n\t\t\telement = element.childNodes.item(array[i]);\r\n\r\n\t\t\tif(element === null)\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\tinternal.dom = {};\r\n\tinternal.dom.extends_Dom7 = {\r\n\t\tpush:function(el){\r\n\t\t\tthis[this.length] = el;\r\n\t\t\tthis.length++;\r\n\t\t},\r\n\t\tindexOf:function(el){\r\n\t\t\tvar keys = Object.keys(this);\r\n\t\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\t\tif(this[keys[i]] === el)\r\n\t\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t},\r\n\t\tsplice:function(i){\r\n\t\t\tfor (var n = this.length - 1; i < n; i++) {\r\n\t\t\t\tdelete this[i];\r\n\t\t\t\tthis[i] = this[i+1];\r\n\t\t\t}\r\n\t\t\tthis.length--;\r\n\t\t},\r\n\t};\r\n\r\n})();","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 0;\r\n\tself.DOMWasLoaded = false;\r\n\tself.DOMReady = false;\r\n\tself.turnedOff = true;\r\n\r\n\tvar whenDOMReady = [];\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.domReady = function(func){\r\n\t\tif(self.DOMReady) return func();\r\n\t\tif(whenDOMReady.indexOf(func) !== -1) return;\r\n\t\twhenDOMReady.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('link');\r\n\t        s.rel = 'stylesheet';\r\n\t        s.href = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tself.js = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('script');\r\n\t        s.type = \"text/javascript\";\r\n\t        s.async = true;\r\n\t        s.src = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(function(){\r\n\t\tif(self.totalContent === 0 && !self.turnedOff){\r\n\t\t\tself.loadedContent = self.totalContent = 1;\r\n\t\t\tconsole.warn(\"If you don't use content loader feature, please turn it off with `sf.loader.off()`\");\r\n\t\t}\r\n\t}, 10000);\r\n\r\n\r\n\tvar isQueued = false;\r\n\tvar lastState = '';\r\n\tdocument.addEventListener(\"load\", function domLoadEvent(event){\r\n\t\t// Add processing class to queued element\r\n\t\tif(isQueued === false && document.body){\r\n\t\t\tdocument.removeEventListener('load', domLoadEvent, true);\r\n\r\n\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\t\t\tif(isQueued.length === 0) isQueued = false;\r\n\r\n\t\t\tif(lastState === 'loading'){\r\n\t\t\t\tvar repeatedList = $('[sf-repeat-this]', document.body);\r\n\r\n\t\t\t\t// Find images\r\n\t\t\t\tvar temp = $('img:not(onload)[src]');\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tsf.loader.totalContent++;\r\n\t\t\t\t\ttemp[i].addEventListener('load', sf.loader.f, {once:true});\r\n\t\t\t\t\ttemp[i].addEventListener('error', sf.loader.f, {once:true});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, true);\r\n\r\n\tdocument.addEventListener('readystatechange', function domStateEvent(){\r\n\t\tif(document.readyState === 'interactive' || document.readyState === 'complete'){\r\n\t\t\tif(self.DOMReady === false){\r\n\t\t\t\tself.DOMReady = true;\r\n\t\t\t\tfor (var i = 0; i < whenDOMReady.length; i++) {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\twhenDOMReady[i]();\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued === false)\r\n\t\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tresourceWaitTimer = setInterval(waitResources, 100);\r\n\t\t\tdocument.removeEventListener('readystatechange', domStateEvent, true);\r\n\t\t}\r\n\t}, true);\r\n\r\n\tvar resourceWaitTimer = -1;\r\n\tfunction waitResources(){\r\n\t\tif(self.turnedOff === false && self.loadedContent < self.totalContent)\r\n\t\t\treturn;\r\n\r\n\t\tclearInterval(resourceWaitTimer);\r\n\r\n\t\tvar listener = sf.dom('script, link, img');\r\n\t\tfor (var i = 0; i < listener.length; i++) {\r\n\t\t\tlistener[i].removeEventListener('error', sf.loader.f);\r\n\t\t\tlistener[i].removeEventListener('load', sf.loader.f);\r\n\t\t}\r\n\r\n\t\tself.DOMWasLoaded = true;\r\n\r\n\t\t// Initialize all pending model\r\n\t\tvar keys = Object.keys(internal.modelPending);\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tvar ref = internal.modelPending[keys[i]];\r\n\r\n\t\t\tif(sf.model.root[keys[i]] === undefined)\r\n\t\t\t\tvar scope = sf.model.root[keys[i]] = {};\r\n\t\t\telse var scope = sf.model.root[keys[i]];\r\n\r\n\t\t\tfor (var a = 0; a < ref.length; a++) {\r\n\t\t\t\tref[a](scope, root_);\r\n\t\t\t}\r\n\r\n\t\t\tdelete internal.modelPending[keys[i]];\r\n\t\t}\r\n\r\n\t\tfor (var i = internal.controller.pending.length - 1; i >= 0; i--) {\r\n\t\t\tvar scope = sf.controller.pending[internal.controller.pending[i]];\r\n\t\t\tif(scope !== void 0){\r\n\t\t\t\tscope(root_(internal.controller.pending[i]), root_);\r\n\t\t\t\tinternal.controller.pending.splice(i, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\ttry{\r\n\t\t\t\twhenDOMLoaded[i]();\r\n\t\t\t} catch(e){\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twhenProgress.splice(0);\r\n\t\twhenDOMReady.splice(0);\r\n\t\twhenDOMLoaded.splice(0);\r\n\t\twhenDOMReady = whenDOMLoaded = null;\r\n\r\n\t\t// Last init\r\n\t\tsf.controller.init();\r\n\t\tsf.model.init(document.body, isQueued);\r\n\r\n\t\tisQueued = null;\r\n\t}\r\n}\r\nsf.prototype.constructor = sf.loader.onFinish;","sf.component = new function(){\r\n\tvar self = this;\r\n\tvar scope = internal.component = {};\r\n\tself.registered = {};\r\n\tself.available = {};\r\n\r\n\tvar bases = {};\r\n\tvar events = {};\r\n\r\n\tself.for = function(name, func, extend){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(self.registered[name] === void 0)\r\n\t\t\tself.registered[name] = [func, sf.controller.pending[name], 0, false, extend];\r\n\t\tself.registered[name][0] = func;\r\n\t\tdelete sf.controller.pending[name];\r\n\r\n\t\tdefineComponent(name);\r\n\t}\r\n\r\n\tself.event = function(name, func){\r\n\t\tevents[name] = func;\r\n\t}\r\n\r\n\tself.base = function(name, func){\r\n\t\tbases[name] = func;\r\n\t}\r\n\r\n\tself.html = function(name, outerHTML){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.html(name, outerHTML);\r\n\t\t\t});\r\n\r\n\t\tif(self.registered[name] === void 0)\r\n\t\t\tself.registered[name] = [false, false, 0, false];\r\n\r\n\t\tvar temp = $.parseElement(outerHTML);\r\n\t\tif(temp.length === 1){\r\n\t\t\tself.registered[name][3] = temp[0];\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tempDOM = document.createElement('div');\r\n\t\ttempDOM.tempDOM = true;\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\ttempDOM.appendChild(temp[i]);\r\n\t\t}\r\n\t\tself.registered[name][3] = tempDOM;\r\n\t}\r\n\r\n\tscope.triggerEvent = function(name, event, obj){\r\n\t\tif(events[name] === void 0 || events[name][event] === void 0)\r\n\t\t\treturn;\r\n\r\n\t\tevents[name][event](obj, event);\r\n\t}\r\n\r\n\tvar tempDOM = document.createElement('div');\r\n\tself.new = function(name, element, $item, isCreated, retriggered){\r\n\t\tif(isCreated === true){\r\n\t\t\tif(sf.loader.DOMWasLoaded === false)\r\n\t\t\t\treturn sf(function(){\r\n\t\t\t\t\tself.new(name, element, $item, isCreated, false);\r\n\t\t\t\t});\r\n\r\n\t\t\tif(element.childElementCount === 0){\r\n\t\t\t\tif(self.registered[name][3] === false)\r\n\t\t\t\t\treturn setTimeout(function(){\r\n\t\t\t\t\t\tself.new(name, element, $item, isCreated, true);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t}\r\n\r\n\t\t\tif(element.hasAttribute('sf-component-ignore') === true)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar avoid = /(^|:)(sf-|class|style)/;\r\n\t\t\tvar attr = element.attributes;\r\n\r\n\t\t\tif(attr.length !== 0 && $item === void 0)\r\n\t\t\t\t$item = {};\r\n\r\n\t\t\tfor (var i = 0; i < attr.length; i++) {\r\n\t\t\t\tif(avoid.test(attr[i].nodeName))\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t$item[attr[i].nodeName] = attr[i].value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar newElement = element === void 0;\r\n\t\tif(element === void 0){\r\n\t\t\tif(self.registered[name][3] === false){\r\n\t\t\t\tconsole.error(\"HTML content for '\"+name+\"' was not defined\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement = self.registered[name][3].cloneNode(true);\r\n\t\t}\r\n\r\n\t\tvar newID = name+'@'+(self.registered[name][2]++);\r\n\r\n\t\tif(self.available[name] === void 0)\r\n\t\t\tself.available[name] = [];\r\n\r\n\t\tself.available[name].push(newID);\r\n\r\n\t\tvar newObj = sf.model.root[newID] = {};\r\n\t\tself.registered[name][0](newObj, sf.model, $item, element);\r\n\r\n\t\tvar extend = self.registered[name][4];\r\n\t\tif(extend !== void 0){\r\n\t\t\tif(extend.constructor === Array){\r\n\t\t\t\tfor (var i = 0; i < extend.length; i++) {\r\n\t\t\t\t\tif(bases[extend[i]] === void 0)\r\n\t\t\t\t\t\treturn console.error(\"'\"+extend[i]+\"' base is not found\");\r\n\t\t\t\t\tbases[extend[i]](newObj, sf.model, $item, element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(bases[extend] === void 0)\r\n\t\t\t\t\treturn console.error(\"'\"+extend+\"' base is not found\");\r\n\t\t\t\tbases[extend](newObj, sf.model, $item, element);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(self.registered[name][1])\r\n\t\t\tself.registered[name][1](newObj, sf.model, $item, element);\r\n\r\n\t\tscope.triggerEvent(name, 'created', newObj);\r\n\r\n\t\tif(newElement !== true && isCreated !== true){\r\n\t\t\tcomponentInit(element, newID, name);\r\n\t\t\telement.model = sf.model.root[newID];\r\n\t\t\treturn newID;\r\n\t\t}\r\n\r\n\t\tif(element.childElementCount === 0){\r\n\t\t\tvar temp = self.registered[name][3];\r\n\r\n\t\t\tif(temp.tempDOM === true){\r\n\t\t\t\ttemp = temp.cloneNode(true).childNodes;\r\n\t\t\t\tfor (var i = 0, n = temp.length; i < n; i++) {\r\n\t\t\t\t\telement.appendChild(temp[0]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse element.appendChild(temp.cloneNode(true));\r\n\t\t}\r\n\r\n\t\tif(element.parentNode === null){\r\n\t\t\t// Wrap to temporary vDOM\r\n\t\t\ttempDOM.appendChild(element);\r\n\t\t\tcomponentInit(element, newID, name);\r\n\t\t\tsf.model.init(element);\r\n\t\t\telement = tempDOM.firstElementChild;\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t\telse if(isCreated === true){\r\n\t\t\tcomponentInit(element, newID, name);\r\n\t\t\tsf.model.init(element);\r\n\t\t}\r\n\r\n\t\telement.model = sf.model.root[newID];\r\n\t\telement.destroy = function(){\r\n\t\t\tif(this.parentElement === null)\r\n\t\t\t\tinternal.model.DOMNodeRemoved(this);\r\n\t\t\telse this.remove();\r\n\t\t}\r\n\t\treturn element;\r\n\t}\r\n\r\n\tfunction componentInit(element, newID, from){\r\n\t\telement.setAttribute('sf-controller', '');\r\n\t\telement.sf$component = newID;\r\n\t\telement.sf$componentFrom = from;\r\n\t}\r\n\r\n\tvar HTMLElement = window.HTMLElement;\r\n\tvar customElements = window.customElements;\r\n\r\n\tvar HTMLElement_wrap = (function(Class){\r\n\t\tfunction Wrapper(){\r\n\t\t\treturn Reflect_Construct(Class, arguments, Object.getPrototypeOf(this).constructor);\r\n\t\t}\r\n\t\tWrapper.prototype = Object.create(Class.prototype, {constructor:{value: Wrapper, enumerable: false, writable: true, configurable: true}}); \r\n\t\treturn Object.setPrototypeOf(Wrapper, Class);\r\n\t})(HTMLElement);\r\n\r\n\t// name = 'tag-name'\r\n\tfunction defineComponent(name){\r\n\t\tif(customElements.get(name))\r\n\t\t\treturn;\r\n\r\n\t\tname = name.replace(/[^\\w-]+/g, '');\r\n\t\tvar tagName = name;\r\n\t\tname = name.split('-');\r\n\t\tif(name.length === 1)\r\n\t\t\treturn console.error(\"Please use '-' when defining component tags\");\r\n\r\n\t\tname = capitalizeLetters(name);\r\n\t\tvar func = eval(\"function \"+name+\"($item){var he = HTMLElement_wrap.call(this);self.new(tagName, he, $item, true, false);return he}\"+name);\r\n\t\tfunc.prototype = Object.create(HTMLElement.prototype);\r\n\t\tfunc.prototype.constructor = func;\r\n\t\tfunc.__proto__ = HTMLElement;\r\n\r\n\t\tfunc.prototype.connectedCallback = function(){\r\n\t\t\tscope.triggerEvent(name, 'connected', this);\r\n\t\t};\r\n\r\n\t\ttry{\r\n\t\t  customElements.define(tagName, func);\r\n\t\t}catch(err){console.error(err)}\r\n\r\n\t\twindow['$'+name] = func;\r\n\t}\r\n};","// Data save and HTML content binding\r\nsf.model = function(scope){\r\n\t// If it's component tag\r\n\tif(sf.component.registered[scope] !== void 0)\r\n\t\treturn root_(scope);\r\n\r\n\tif(!sf.model.root[scope]){\r\n\t\tsf.model.root[scope] = {};\r\n\t\tinternal.controller.pending.push(scope);\r\n\t}\r\n\r\n\t// This usually being initialized after DOM Loaded\r\n\tvar pending = internal.modelPending[scope];\r\n\tif(pending){\r\n\t\tvar temp = sf.model.root[scope];\r\n\t\tfor (var i = 0; i < pending.length; i++) {\r\n\t\t\tpending[i](temp, sf.model);\r\n\t\t}\r\n\t\tpending = internal.modelPending[scope] = false;\r\n\t}\r\n\r\n\tfor (var i = internal.controller.pending.length - 1; i >= 0; i--) {\r\n\t\tvar temp = sf.controller.pending[internal.controller.pending[i]];\r\n\t\tif(temp !== void 0){\r\n\t\t\ttemp(root_(internal.controller.pending[i]), root_);\r\n\t\t\tinternal.controller.pending.splice(i, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tif(sf.controller.pending[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n};\r\n\r\n(function(){\r\n\tvar self = sf.model;\r\n\tvar scope = internal.model = {};\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\tinternal.modelPending = {};\r\n\r\n\tvar processingElement = null;\r\n\r\n\t// For debugging, normalize indentation\r\n\tfunction trimIndentation(text){\r\n\t\tvar indent = text.split(\"\\n\", 3);\r\n\t\tif(indent[0][0] !== ' ' || indent[0][0] !== \"\\t\")\r\n\t\t\tindent = indent[1];\r\n\t\telse indent = indent[0];\r\n\r\n\t\tif(indent === void 0) return text;\r\n\t\tindent = indent.length - indent.trim().length;\r\n\t\tif(indent === 0) return text;\r\n\t\treturn text.replace(RegExp('^([\\\\t ]{'+indent+'})', 'gm'), '');\r\n\t}\r\n\r\n\t// Secured evaluation\r\n\tvar bracketMatch = /([\\w.]*?[\\S\\s])\\(/g;\r\n\tvar chackValidFunctionCall = sf.regex.validFunctionCall;\r\n\tvar localEval = function(script, _model_, _modelScope, _content_){\r\n\t\t\"use strict\";\r\n\r\n\t\t// ==== Security check ====\r\n\t\tvar preventExecution = false;\r\n\r\n\t\t// Remove all inner quotes\r\n\t\tavoidQuotes(script, function(tempScript){\r\n\t\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\t\tvar check_ = null;\r\n\t\t\twhile((check_ = bracketMatch.exec(tempScript)) !== null){\r\n\t\t\t\tcheck_[1] = check_[1].trim();\r\n\r\n\t\t\t\tif(allowedFunctionEval[check_[1]] || check_[1].split('.')[0] === '_modelScope')\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tif(tempScript.indexOf('var '+check_[1]) !== -1 || tempScript.indexOf('let '+check_[1]) !== -1)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tbracketMatch.lastIndex = 0;\r\n\t\t\t\tpreventExecution = check_[1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}, true);\r\n\r\n\t\tif(preventExecution){\r\n\t\t\tconsole.groupCollapsed(\"%c<-- Expand the template error\", 'color: yellow');\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\tconsole.log(\"%c\"+trimIndentation(script).trim(), 'color: yellow');\r\n\t\t\tconsole.groupEnd();\r\n\r\n\t\t\tconsole.error(\"Trying to executing unrecognized function (\"+preventExecution+\")\");\r\n\t\t\treturn '#TemplateError';\r\n\t\t}\r\n\t\t// ==== Security check ended ====\r\n\t\r\n\t\tvar _result_ = '';\r\n\t\ttry{\r\n\t\t\tif(/@return /.test(script) === true){\r\n\t\t\t\tvar _evaled_ = eval('(function(){'+script.split('@return ').join('return ')+'})()');\r\n\r\n\t\t\t\tif(_evaled_ === void 0)\r\n\t\t\t\t\treturn _result_ + 'undefined';\r\n\r\n\t\t\t\tif(_evaled_ === null)\r\n\t\t\t\t\treturn _result_ + 'null';\r\n\r\n\t\t\t\t// Check if it's an HTMLElement\r\n\t\t\t\tif(_evaled_.onclick !== void 0)\r\n\t\t\t\t\treturn _evaled_;\r\n\r\n\t\t\t\treturn _result_ + _evaled_;\r\n\t\t\t}\r\n\t\t\telse var _evaled_ = eval(script);\r\n\t\t} catch(e){\r\n\t\t\tconsole.groupCollapsed(\"%c<-- Expand the template error\", 'color: yellow');\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\tconsole.log(\"%c\"+trimIndentation(script).trim(), 'color: yellow');\r\n\t\t\tconsole.groupEnd();\r\n\r\n\t\t\tconsole.error(e);\r\n\t\t\treturn '#TemplateError';\r\n\t\t}\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\t// Find an index for the element on the list\r\n\tself.index = function(element){\r\n\t\tif(element.hasAttribute('sf-bind-list') === false)\r\n\t\t\telement = sf.dom.parent(element, '[sf-bind-list]');\r\n\r\n\t\tvar i = -1;\r\n\t\tvar tagName = element.tagName;\r\n\t\tvar currentElement = element;\r\n\r\n\t\twhile(element !== null) {\r\n\t\t\tif(element.tagName === tagName)\r\n\t\t\t\ti++;\r\n\r\n\t\t\telement = element.previousElementSibling;\r\n\t\t}\r\n\r\n\t\tvar list = currentElement.getAttribute('sf-bind-list');\r\n\t\tif(!list) return i;\r\n\r\n\t\tvar ref = self.root[sf.controller.modelName(currentElement)][list];\r\n\t\tif(!ref.$virtual) return i;\r\n\r\n\t\treturn i + ref.$virtual.DOMCursor - 1;\r\n\t}\r\n\r\n\t// Declare model for the name with a function\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded){\r\n\t\t\tif(internal.modelPending[name] === undefined)\r\n\t\t\t\tinternal.modelPending[name] = [];\r\n\r\n\t\t\tif(internal.modelPending[name] === false)\r\n\t\t\t\treturn func(self(name), self);\r\n\r\n\t\t\t// Initialize when DOMLoaded\r\n\t\t\treturn internal.modelPending[name].push(func);\r\n\t\t}\r\n\t\t\r\n\t\tfunc(self(name), self);\r\n\t}\r\n\r\n\t// Get property of the model\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys;\r\n\t}\r\n\r\n\t// Escape the escaped quote\r\n\tfunction escapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*');\r\n\t}\r\n\r\n\tfunction unescapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\");\r\n\t}\r\n\r\n\tfunction elseIfHandle(else_, scopes){\r\n\t\tvar elseIf = else_.elseIf;\r\n\r\n\t\t// Else if\r\n\t\tfor (var i = 0; i < elseIf.length; i++) {\r\n\t\t\t// Check the condition\r\n\t\t\tscopes[0] = elseIf[i][0];\r\n\t\t\tif(!localEval.apply(self.root, scopes))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Get the value\r\n\t\t\tscopes[0] = elseIf[i][1];\r\n\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t}\r\n\r\n\t\t// Else\r\n\t\tif(else_.elseValue === null)\r\n\t\t\treturn '';\r\n\r\n\t\tscopes[0] = else_.elseValue;\r\n\t\treturn localEval.apply(self.root, scopes);\r\n\t}\r\n\r\n\t// ==== Template parser ====\r\n\tvar templateParser_regex = /{{%=([0-9]+)/gm;\r\n\tvar REF_DIRECT = 0, REF_IF = 1, REF_EXEC = 2;\r\n\tvar templateExec = function(parse, item, atIndex){\r\n\t\tvar parsed = {};\r\n\t\tvar temp = null;\r\n\r\n\t\t// Get or evaluate static or dynamic data\r\n\t\tfor (var i = 0; i < parse.length; i++) {\r\n\t\t\tif(atIndex !== void 0 && atIndex.indexOf(i) === -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar ref = parse[i];\r\n\t\t\tref.data[1] = item;\r\n\r\n\t\t\t// Direct evaluation type\r\n\t\t\tif(ref.type === REF_DIRECT){\r\n\t\t\t\ttemp = localEval.apply(self.root, ref.data);\r\n\t\t\t\tif(temp === void 0)\r\n\t\t\t\t\tconsole.error('`'+ref.data[0]+'` was not defined');\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(temp.constructor === Object)\r\n\t\t\t\t\t\ttemp = JSON.stringify(temp);\r\n\t\t\t\t\tif(temp.constructor !== String)\r\n\t\t\t\t\t\ttemp = String(temp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparsed[i] = {type:ref.type, data:temp};\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(ref.type === REF_EXEC){\r\n\t\t\t\tparsed[i] = {type:ref.type, data:localEval.apply(self.root, ref.data)};\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Conditional type\r\n\t\t\tif(ref.type === REF_IF){\r\n\t\t\t\tvar scopes = ref.data;\r\n\t\t\t\tparsed[i] = {type:ref.type, data:''};\r\n\t\t\t\tscopes[0] = ref.if[0];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tparsed[i].data = elseIfHandle(ref, scopes);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscopes[0] = ref.if[1];\r\n\t\t\t\tparsed[i].data = localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n\r\n\tvar templateParser = function(template, item, original){\r\n\t\tif(template.component !== void 0){\r\n\t\t\tvar html = new template.component(item);\r\n\t\t\thtml.setAttribute('sf-bind-list', template.list);\r\n\t\t\treturn html;\r\n\t\t}\r\n\r\n\t\tprocessingElement = template.html;\r\n\r\n\t\tvar html = original === true ? template.html : template.html.cloneNode(true);\r\n\t\tvar addresses = template.addresses;\r\n\t\tvar parsed = templateExec(template.parse, item);\r\n\r\n\t\t// Save model item reference to node\r\n\t\thtml.model = item;\r\n\r\n\t\tvar changesReference = [];\r\n\t\tvar pendingInsert = [];\r\n\r\n\t\t// Find element where the data belongs to\r\n\t\tfor (var i = 0; i < addresses.length; i++) {\r\n\t\t\tvar ref = addresses[i];\r\n\t\t\tvar current = $.childIndexes(ref.address, html);\r\n\r\n\t\t\t// Modify element attributes\r\n\t\t\tif(ref.nodeType === 1){\r\n\t\t\t\tvar refA = ref.attributes;\r\n\t\t\t\tfor(var a = 0; a < refA.length; a++){\r\n\t\t\t\t\tvar refB = refA[a];\r\n\r\n\t\t\t\t\tvar isValueInput = (refB.name === 'value' && (current.tagName === 'TEXTAREA' ||\r\n\t\t\t\t\t\t(current.tagName === 'INPUT' && /checkbox|radio|hidden/.test(current.type) === false)\r\n\t\t\t\t\t));\r\n\r\n\t\t\t\t\tchangesReference.push({\r\n\t\t\t\t\t\tattribute:isValueInput === true ? current : current.attributes[refB.name],\r\n\t\t\t\t\t\tref:refB\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(refB.direct !== void 0){\r\n\t\t\t\t\t\tif(refB.name === 'value' && isValueInput === true){\r\n\t\t\t\t\t\t\tcurrent.value = parsed[refB.direct].data;\r\n\t\t\t\t\t\t\tcurrent.removeAttribute('value');\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcurrent.setAttribute(refB.name, parsed[refB.direct].data);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Below is used for multiple data\r\n\t\t\t\t\tif(refB.name === 'value' && isValueInput === true){\r\n\t\t\t\t\t\tvar temp = current.value;\r\n\t\t\t\t\t\tcurrent.removeAttribute('value');\r\n\t\t\t\t\t\tcurrent.value = temp;\r\n\t\t\t\t\t\tcurrent.value = current.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tcurrent.setAttribute(refB.name, (refB.value || current.value).replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Replace text node\r\n\t\t\tif(ref.nodeType === 3){\r\n\t\t\t\tvar refA = current;\r\n\r\n\t\t\t\tchangesReference.push({\r\n\t\t\t\t\ttextContent:refA,\r\n\t\t\t\t\tref:ref\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(ref.direct !== void 0){\r\n\t\t\t\t\trefA.textContent = parsed[ref.direct].data;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Below is used for multiple/dynamic data\r\n\t\t\t\trefA.textContent = refA.textContent.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Replace dynamic node\r\n\t\t\tif(ref.nodeType === -1){\r\n\t\t\t\tvar cRef = {\r\n\t\t\t\t\tdynamicFlag:current,\r\n\t\t\t\t\tdirect:ref.parse_index,\r\n\t\t\t\t\tparentNode:current.parentNode,\r\n\t\t\t\t\tstartFlag:ref.startFlag && $.childIndexes(ref.startFlag, html)\r\n\t\t\t\t};\r\n\t\t\t\tchangesReference.push(cRef);\r\n\r\n\t\t\t\t// Pending element insert to take other element reference\r\n\t\t\t\tpendingInsert.push(cRef);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Save reference to element\r\n\t\thtml.sf$elementReferences = changesReference;\r\n\t\t// html.sf$modelParsed = parsed;\r\n\r\n\t\t// Run the pending element\r\n\t\tfor (var i = 0; i < pendingInsert.length; i++) {\r\n\t\t\tvar ref = pendingInsert[i];\r\n\t\t\tvar tDOM = parsed[ref.direct].data;\r\n\r\n\t\t\t// Check if it's an HTMLElement\r\n\t\t\tif(tDOM.onclick !== void 0){\r\n\t\t\t\tref.parentNode.insertBefore(tDOM, ref.dynamicFlag);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\ttDOM = $.parseElement(parsed[ref.direct].data, true);\r\n\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\tref.parentNode.insertBefore(tDOM[a], ref.dynamicFlag);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t}\r\n\r\n\tfunction syntheticCache(element, template, item){\r\n\t\tif(element.sf$cache === void 0)\r\n\t\t\telement.sf$cache = {};\r\n\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\tvar ref = modelRef_array[i];\r\n\t\t\tcache[ref[0]] = deepProperty(item, ref[1]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction syntheticTemplate(element, template, property, item){\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tif(property !== void 0){\r\n\t\t\tvar changes = template.modelReference[property];\r\n\t\t\tif(changes === void 0 || changes.length === 0){\r\n\t\t\t\tconsole.log(element, template, property, item);\r\n\t\t\t\tconsole.error(\"Failed to run syntheticTemplate because property '\"+property+\"' is not observed\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cache)\r\n\t\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\t\tif(ref[0] !== property) continue;\r\n\r\n\t\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t\t// Check if data was different\r\n\t\t\t\t\tif(cache[ref[0]] !== newData)\r\n\t\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar changes = [];\r\n\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\tif(cache === void 0){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t// Check if data was different\r\n\t\t\t\tif(cache[ref[0]] !== newData){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(changes.length === 0) return false;\r\n\t\t}\r\n\r\n\t\tvar parsed = templateExec(template.parse, item, changes);\r\n\t\tfunction checkRelatedChanges(parseIndex){\r\n\t\t\tvar found = false;\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(changes.indexOf(parseIndex[i]) !== -1){\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(found === false)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t// Prepare all required data\r\n\t\t\tvar changes_ = [];\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(parsed[parseIndex[i]] === void 0)\r\n\t\t\t\t\tchanges_.push(parseIndex[i]);\r\n\t\t\t}\r\n\r\n\t\t\tObject.assign(parsed, templateExec(template.parse, item, changes_));\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tvar changesReference = element.sf$elementReferences;\r\n\t\tvar haveChanges = false;\r\n\t\tfor (var i = 0; i < changesReference.length; i++) {\r\n\t\t\tvar cRef = changesReference[i];\r\n\r\n\t\t\tif(cRef.dynamicFlag !== void 0){ // Dynamic data\r\n\t\t\t\tif(parsed[cRef.direct] !== void 0){\r\n\t\t\t\t\tvar tDOM = $.parseElement(parsed[cRef.direct].data, true).reverse();\r\n\t\t\t\t\tvar currentDOM = $.prevAll(cRef.dynamicFlag, cRef.startFlag);\r\n\t\t\t\t\tvar notExist = false;\r\n\r\n\t\t\t\t\t// Replace if exist, skip if similar\r\n\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\t\t\tif(currentDOM[a] === void 0){\r\n\t\t\t\t\t\t\tnotExist = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(currentDOM[a].isEqualNode(tDOM[a]) === false)\r\n\t\t\t\t\t\t\tcRef.parentNode.replaceChild(tDOM[a], currentDOM[a]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Add if not exist\r\n\t\t\t\t\tif(notExist){\r\n\t\t\t\t\t\tfor (var a = tDOM.length - 1; a >= 0; a--)\r\n\t\t\t\t\t\t\tcRef.parentNode.insertBefore(tDOM[a], cRef.dynamicFlag);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove if over index\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tfor (var a = tDOM.length; a < currentDOM.length; a++) {\r\n\t\t\t\t\t\t\tcurrentDOM[a].remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(cRef.textContent !== void 0){ // Text only\r\n\t\t\t\tif(cRef.ref.parse_index !== void 0){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.textContent.textContent === temp) continue;\r\n\t\t\t\t\t\tcRef.textContent.textContent = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\tif(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.textContent.textContent === value) continue;\r\n\r\n\t\t\t\t\tvar ref_ = cRef.textContent;\r\n\t\t\t\t\t// Remove old element if exist\r\n\t\t\t\t\tif(ref_.sf$haveChilds === true){\r\n\t\t\t\t\t\twhile(ref_.previousSibling && ref_.previousSibling.sf$childRoot === ref_){\r\n\t\t\t\t\t\t\tref_.previousSibling.remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// if(item['each$'+])\r\n\t\t\t\t\tref_.textContent = value;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(cRef.attribute !== void 0){ // Attributes\r\n\t\t\t\tif(cRef.ref.parse_index !== void 0){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.attribute.value === temp) continue;\r\n\t\t\t\t\t\tcRef.attribute.value = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\tif(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.attribute.value == value) continue;\r\n\t\t\t\t\tcRef.attribute.value = value;\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn haveChanges;\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval, preParsedReference){\r\n\t\tvar _modelScope = self.root[scope];\r\n\t\tif(!runEval) runEval = '';\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope).join('|')+')\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\tvar preParsed = [];\r\n\t\t\tvar lastParsedIndex = preParsedReference.length;\r\n\t\t}\r\n\r\n\t\tvar prepared = html.replace(sf.regex.dataParser, function(actual, temp){\r\n\t\t\ttemp = avoidQuotes(temp, function(temp_){\r\n\t\t\t\t// Unescape HTML\r\n\t\t\t\ttemp_ = temp_.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t\t// Mask item variable\r\n\t\t\t\tif(mask)\r\n\t\t\t\t\ttemp_ = temp_.replace(itemMask, function(matched){\r\n\t\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// Mask model for variable\r\n\t\t\t\treturn temp_.replace(scopeMask, function(full, matched){\r\n\t\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t\t});\r\n\t\t\t}).split('_model_._modelScope.').join('_model_.').split('._modelScope.').join('.');\r\n\r\n\t\t\t// Evaluate\r\n\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\ttemp = temp.trim();\r\n\r\n\t\t\t\t// Simplicity similar\r\n\t\t\t\tvar exist = preParsed.indexOf(temp);\r\n\r\n\t\t\t\tif(exist === -1){\r\n\t\t\t\t\tpreParsed.push(temp);\r\n\t\t\t\t\tpreParsedReference.push({type:REF_DIRECT, data:[temp, _model_, _modelScope]});\r\n\t\t\t\t\treturn '{{%=' + (preParsed.length + lastParsedIndex - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn '{{%=' + (exist + lastParsedIndex);\r\n\t\t\t}\r\n\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(sf.regex.escapeHTML, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\tpreParsed = _modelScope = _model_ = mask = scope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t}\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\t// Dynamic data parser\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope, runEval){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(passVar === null)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\t// Use strict mode and prepare for new variables\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\t// Declare new variable\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(key === '_model_'){\r\n\t\t\t\t\t\t_model_ = passVar[key];\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove var because no variable are being passed\r\n\t\t\t\tif(firstTime === true)\r\n\t\t\t\t\tstrDeclare = strDeclare.replace('var ', '');\r\n\r\n\t\t\t\t// Escape function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('&#40;').split(')').join('&#41;');\r\n\r\n\t\t\t\t// Pass to static data parser for another HTML data\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Build script preparation\r\n\t\thtml = html.replace(/{\\[([\\s\\S]*?)\\]}/g, function(full, matched){\r\n\t\t\tif(/{{.*?}}/.test(matched) === false)\r\n\t\t\t\treturn \"_result_ += '\"+matched.split(\"'\").join(\"\\\\'\")+\"'\";\r\n\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope).join('|')+')\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.\\\\b', 'g');\r\n\r\n\t\tif(runEval === '#noEval')\r\n\t\t\tvar preParsedReference = [];\r\n\r\n\t\tvar prepared = html.replace(sf.regex.uniqueDataParser, function(actual, temp){\r\n\t\t\ttemp = avoidQuotes(temp, function(temp_){\r\n\t\t\t\t// Unescape HTML\r\n\t\t\t\ttemp_ = temp_.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t\t// Mask item variable\r\n\t\t\t\tif(mask)\r\n\t\t\t\t\ttemp_ = temp_.replace(itemMask, function(matched){\r\n\t\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// Mask model for variable\r\n\t\t\t\treturn temp_.replace(scopeMask, function(full, matched){\r\n\t\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t\t});\r\n\t\t\t}).split('_model_._modelScope.').join('_model_.');\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass_ = /(var|let)([\\w,\\s]+)(?=\\s(?==|in|of))/g;\r\n\t\t\tvar VarPass = [];\r\n\t\t\tvar s1 = null;\r\n\t\t\twhile((s1 = VarPass_.exec(temp)) !== null){\r\n\t\t\t\tVarPass.push(s1[2]);\r\n\t\t\t}\r\n\r\n\t\t\tif(_model_ === null && runEval === '#noEval')\r\n\t\t\t\tVarPass.push('_model_');\r\n\r\n\t\t\tif(VarPass.length !== 0){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/([\\n\\t\\r]|  )+/g, '').split(',').forEach(function(val){\r\n\t\t\t\t\t\tobtained.push(val);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':typeof '+VarPass[i]+'!==\"undefined\"?'+VarPass[i]+':void 0';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(VarPass.length === 0)\r\n\t\t\t\t\tVarPass = 'null';\r\n\t\t\t\telse VarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\t\t\telse temp = temp.split('&VarPass&').join('null');\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\r\n\t\t\t\t// {if, elseIf:([if, value], ...), elseValue}\r\n\t\t\t\tvar findElse = function(text){\r\n\t\t\t\t\ttext = text.join(':');\r\n\t\t\t\t\tvar else_ = null;\r\n\r\n\t\t\t\t\t// Split elseIf\r\n\t\t\t\t\ttext = text.split('@elseif ');\r\n\r\n\t\t\t\t\t// Get else value\r\n\t\t\t\t\tvar else_ = text[text.length - 1].split('@else');\r\n\t\t\t\t\tif(else_.length === 2){\r\n\t\t\t\t\t\ttext[text.length - 1] = else_[0];\r\n\t\t\t\t\t\telse_ = else_.pop();\r\n\t\t\t\t\t\telse_ = else_.substr(else_.indexOf(':') + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse else_ = null;\r\n\r\n\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t\tif:text.shift(),\r\n\t\t\t\t\t\telseIf:[],\r\n\t\t\t\t\t\telseValue:else_\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Separate condition script and value\r\n\t\t\t\t\tfor (var i = 0; i < text.length; i++) {\r\n\t\t\t\t\t\tvar val = text[i].split(':');\r\n\t\t\t\t\t\tobj.elseIf.push([val.shift(), val.join(':')]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tvar condition = check.shift();\r\n\t\t\t\t\tvar elseIf = findElse(check);\r\n\t\t\t\t\telseIf.type = REF_IF;\r\n\t\t\t\t\telseIf.data = [null, _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t\t// Trim Data\r\n\t\t\t\t\telseIf.if = [condition.trim(), elseIf.if.trim()];\r\n\t\t\t\t\tif(elseIf.elseValue !== null)\r\n\t\t\t\t\t\telseIf.elseValue = elseIf.elseValue.trim();\r\n\r\n\t\t\t\t\tfor (var i = 0; i < elseIf.elseIf.length; i++) {\r\n\t\t\t\t\t\telseIf.elseIf[i][0] = elseIf.elseIf[i][0].trim();\r\n\t\t\t\t\t\telseIf.elseIf[i][1] = elseIf.elseIf[i][1].trim();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Push data\r\n\t\t\t\t\tpreParsedReference.push(elseIf);\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scopes = [check[0], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\treturn elseIfHandle(findElse(check), scopes);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcheck.shift();\r\n\t\t\t\tscopes[0] = check.join(':');\r\n\r\n\t\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tvar scopes = [check[1], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tpreParsedReference.push({type:REF_EXEC, data:scopes});\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, scopes);\r\n\t\t\t\treturn temp;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\t_modelScope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t\treturn [prepared, preParsedReference, _content_];\r\n\t\t}\r\n\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\tvar bindArray = function(template, list, mask, modelName, propertyName, targetNode, parentNode, tempDOM){\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'swap', 'move', 'replace', 'softRefresh', 'hardRefresh'];\r\n\t\tvar refreshTimer = -1;\r\n\t\tvar parentChilds = parentNode.children;\r\n\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\r\n\t\t// Update callback\r\n\t\tvar modelRef = self.root[modelName];\r\n\t\tvar eventVar = 'on$'+propertyName;\r\n\t\tvar callback = modelRef[eventVar];\r\n\r\n\t\tvar processElement = function(index, options, other, count){\r\n\t\t\t// Find boundary for inserting to virtual DOM\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar vStartRange = list.$virtual.DOMCursor;\r\n\t\t\t\tvar vEndRange = vStartRange + list.$virtual.preparedLength;\r\n\t\t\t}\r\n\r\n\t\t\tif(options === 'clear'){\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar spacer = [parentNode.firstElementChild, parentNode.lastElementChild];\r\n\r\n\t\t\t\tparentNode.textContent = '';\r\n\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tparentNode.appendChild(spacer[0]);\r\n\t\t\t\t\tparentNode.appendChild(spacer[1]);\r\n\t\t\t\t\tlist.$virtual.dom.textContent = '';\r\n\t\t\t\t\tspacer[1].style.height = \r\n\t\t\t\t\tspacer[0].style.height = 0;\r\n\t\t\t\t\tlist.$virtual.reset(true);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid multiple refresh by set a timer\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar exist = list.$virtual.elements();\r\n\r\n\t\t\t\tclearTimeout(refreshTimer);\r\n\t\t\t\trefreshTimer = setTimeout(function(){\r\n\t\t\t\t\tif(list.$virtual) // Somewhat it's uninitialized\r\n\t\t\t\t\t\tlist.$virtual.reinitScroll();\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse exist = parentChilds;\r\n\r\n\t\t\t// Hard refresh - Append element\r\n\t\t\tif(options === 'hardRefresh'){\r\n\t\t\t\t// Clear siblings after the index\r\n\t\t\t\tfor (var i = index; i < exist.length; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar vCursor = list.$virtual.vCursor;\r\n\r\n\t\t\t\tfor (var i = index; i < list.length; i++) {\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\tif(vCursor.floor === null && i < vEndRange)\r\n\t\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\t\telse list.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse parentNode.appendChild(temp);\r\n\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual && list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(callback === void 0)\r\n\t\t\t\tcallback = modelRef[eventVar];\r\n\r\n\t\t\tif(options === 'swap' || options === 'move'){\r\n\t\t\t\tif(options === 'move'){\r\n\t\t\t\t\tvar overflow = list.length - index - count;\r\n\t\t\t\t\tif(overflow < 0)\r\n\t\t\t\t\t\tcount += overflow;\r\n\r\n\t\t\t\t\t// Move to virtual DOM\r\n\t\t\t\t\tvar vDOM = document.createElement('div');\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tvDOM.appendChild(exist[index + i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar nextSibling = exist[other] || null;\r\n\t\t\t\t\tvar theParent = nextSibling && nextSibling.parentNode;\r\n\r\n\t\t\t\t\tif(theParent === false){\r\n\t\t\t\t\t\tif(list.$virtual && list.length >= vEndRange)\r\n\t\t\t\t\t\t\ttheParent = list.$virtual.dom;\r\n\t\t\t\t\t\telse theParent = parentNode;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Move to defined index\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\ttheParent.insertBefore(vDOM.firstElementChild, nextSibling);\r\n\r\n\t\t\t\t\t\tif(callback !== void 0 && callback.update)\r\n\t\t\t\t\t\t\tcallback.update(exist[index + i], 'move');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(index > other){\r\n\t\t\t\t\tvar index_a = exist[other];\r\n\t\t\t\t\tother = exist[index];\r\n\t\t\t\t\tindex = index_a;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tindex = exist[index];\r\n\t\t\t\t\tother = exist[other];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar other_sibling = other.nextSibling;\r\n\t\t\t\tvar other_parent = other.parentNode;\r\n\t            index.parentNode.insertBefore(other, index.nextSibling);\r\n\t            other_parent.insertBefore(index, other_sibling);\r\n\r\n\t\t\t\tif(callback !== void 0 && callback.update){\r\n\t\t\t\t\tcallback.update(exist[other], 'swap');\r\n\t\t\t\t\tcallback.update(exist[index], 'swap');\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Clear unused element if current array < last array\r\n\t\t\tif(options === 'removeRange'){\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(options === 'remove'){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentEl = exist[index];\r\n\r\n\t\t\t\t\tif(callback !== void 0 && callback.remove){\r\n\t\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\t\tcurrentEl.remove();\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tstartRemove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse currentEl.remove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update\r\n\t\t\telse if(options === 'update'){\r\n\t\t\t\tif(index === void 0){\r\n\t\t\t\t\tindex = 0;\r\n\t\t\t\t\tother = list.length;\r\n\t\t\t\t}\r\n\t\t\t\telse if(other === void 0) other = index + 1;\r\n\t\t\t\telse if(other < 0) other = list.length + other;\r\n\t\t\t\telse other += index;\r\n\r\n\t\t\t\t// Trim length\r\n\t\t\t\tvar overflow = list.length - other;\r\n\t\t\t\tif(overflow < 0) other = other + overflow;\r\n\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\tvar oldChild = exist[i];\r\n\t\t\t\t\tif(oldChild === void 0 || list[i] === void 0)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\toldChild.parentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tparentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\tif(callback !== void 0 && callback.update)\r\n\t\t\t\t\t\tcallback.update(temp, 'replace');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar item = list[index];\r\n\t\t\tif(item === void 0) return;\r\n\r\n\t\t\tvar temp = templateParser(template, item);\r\n\t\t\tif(isKeyed === false)\r\n\t\t\t\tsyntheticCache(temp, template, item);\r\n\r\n\t\t\t// Create\r\n\t\t\tif(options === 'insertAfter'){\r\n\t\t\t\tif(exist.length === 0)\r\n\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\telse{\r\n\t\t\t\t\tvar referenceNode = exist[index - 1];\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode.nextSibling);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t\telse if(options === 'prepend'){\r\n\t\t\t\tvar referenceNode = exist[0];\r\n\t\t\t\tif(referenceNode !== void 0){\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode);\r\n\r\n\t\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t}\r\n\t\t\t\telse options = 'append';\r\n\t\t\t}\r\n\t\t\tif(options === 'append'){\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tif(index === 0) // Add before virtual scroller\r\n\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\telse if(index >= vEndRange){ // To virtual DOM\r\n\t\t\t\t\t\tif(list.$virtual.vCursor.floor === null)\r\n\t\t\t\t\t\t\tlist.$virtual.vCursor.floor = temp;\r\n\r\n\t\t\t\t\t\tlist.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse // To real DOM\r\n\t\t\t\t\t\texist[index-1].insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparentNode.appendChild(temp);\r\n\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar _double_zero = [0,0]; // For arguments\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = void 0;\r\n\t\t\t\t\tvar lastLength = this.length;\r\n\r\n\t\t\t\t\tif(name === 'move'){\r\n\t\t\t\t\t\tvar from = arguments[0];\r\n\t\t\t\t\t\tvar to = arguments[1];\r\n\t\t\t\t\t\tif(from === to) return;\r\n\t\t\t\t\t\tvar count = arguments[2] || 1;\r\n\t\t\t\t\t\tprocessElement(from, 'move', to, count);\r\n\r\n\t\t\t\t\t\tvar temp = Array.prototype.splice.apply(this, [from, count]);\r\n\t\t\t\t\t\ttemp.unshift(to, 0);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Reset virtual ceiling and floor\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(name === 'swap'){\r\n\t\t\t\t\t\tvar i = arguments[0];\r\n\t\t\t\t\t\tvar o = arguments[1];\r\n\t\t\t\t\t\tif(i === o) return;\r\n\t\t\t\t\t\tprocessElement(i, 'swap', o);\r\n\t\t\t\t\t\tvar temp = this[i];\r\n\t\t\t\t\t\tthis[i] = this[o];\r\n\t\t\t\t\t\tthis[o] = temp;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'replace'){\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.resetViewport();\r\n\r\n\t\t\t\t\t\t// Check if item has same reference\r\n\t\t\t\t\t\tif(arguments[0].length >= lastLength && lastLength !== 0){\r\n\t\t\t\t\t\t\tvar matchLeft = lastLength;\r\n\t\t\t\t\t\t\tvar ref = arguments[0];\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < lastLength; i++) {\r\n\t\t\t\t\t\t\t\tif(ref[i] === this[i]){\r\n\t\t\t\t\t\t\t\t\tmatchLeft--;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the end\r\n\t\t\t\t\t\t\tif(matchLeft === 0){\r\n\t\t\t\t\t\t\t\tif(ref.length === lastLength) return;\r\n\r\n\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(lastLength);\r\n\t\t\t\t\t\t\t\ttemp.unshift(lastLength, 0);\r\n\t\t\t\t\t\t\t\tthis.splice.apply(this, temp);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the middle\r\n\t\t\t\t\t\t\telse if(matchLeft !== lastLength){\r\n\t\t\t\t\t\t\t\tif(arguments[1] === true){\r\n\t\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(i);\r\n\t\t\t\t\t\t\t\t\ttemp.unshift(i, lastLength - i);\r\n\t\t\t\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t\t\t\tlist.refresh(i, lastLength);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Build from zero\r\n\t\t\t\t\t\tif(lastLength === 0){\r\n\t\t\t\t\t\t\tArray.prototype.push.apply(this, arguments[0]);\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Clear all items and merge the new one\r\n\t\t\t\t\t\tvar temp = [0, lastLength];\r\n\t\t\t\t\t\tArray.prototype.push.apply(temp, arguments[0]);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Rebuild all element\r\n\t\t\t\t\t\tif(arguments[1] !== true || isKeyed){\r\n\t\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reuse some element\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t// Clear unused element if current array < last array\r\n\t\t\t\t\t\t\tif(this.length < lastLength)\r\n\t\t\t\t\t\t\t\tprocessElement(this.length, 'removeRange', lastLength);\r\n\r\n\t\t\t\t\t\t\t// And start refreshing\r\n\t\t\t\t\t\t\tlist.refresh(0, this.length);\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual && list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reset virtual list\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reset();\r\n\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice' && arguments[0] === 0 && arguments[1] === void 0){\r\n\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\treturn Array.prototype.splice.apply(this, arguments);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(this.length, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'push'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(lastLength, 'append');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = 0; i < arguments.length; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(lastLength + i, 'append');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'shift'){\r\n\t\t\t\t\t\tprocessElement(0, 'remove');\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor > 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor--;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments[0] === 0 && arguments[1] === void 0)\r\n\t\t\t\t\t\t\treturn temp;\r\n\r\n\t\t\t\t\t\t// Removing data\r\n\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\tif(real < 0) real = lastLength + real;\r\n\r\n\t\t\t\t\t\tvar limit = arguments[1];\r\n\t\t\t\t\t\tif(!limit && limit !== 0) limit = this.length;\r\n\r\n\t\t\t\t\t\tfor (var i = limit - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tprocessElement(real + i, 'remove');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = real - limit;\r\n\r\n\t\t\t\t\t\tif(arguments.length >= 3){ // Inserting data\r\n\t\t\t\t\t\t\tlimit = arguments.length - 2;\r\n\r\n\t\t\t\t\t\t\t// Trim the index if more than length\r\n\t\t\t\t\t\t\tif(real >= this.length)\r\n\t\t\t\t\t\t\t\treal = this.length - 1;\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < limit; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(real + i, 'insertAfter');\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\t\tlist.$virtual.DOMCursor += limit;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(0, 'prepend');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = arguments.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\t\tprocessElement(i, 'prepend');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor !== 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor += arguments.length;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'softRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0], 'update', arguments[1]);\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'hardRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0] || 0, 'hardRefresh');\r\n\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = arguments[0] || 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(parentNode && parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\tdelete list.$virtual;\r\n\t\t\tlist.$virtual = {};\r\n\r\n\t\t\t// Transfer virtual DOM\r\n\t\t\tlist.$virtual.dom = tempDOM;\r\n\t\t\tif(callback !== void 0)\r\n\t\t\t\tlist.$virtual.callback = callback;\r\n\t\t\telse list.$virtual.callback_ = {ref:modelRef, var:eventVar};\r\n\r\n\t\t\tparentNode.replaceChild(template.html, parentChilds[1]);\r\n\t\t\tsf.internal.virtual_scroll.handle(list, targetNode, parentNode);\r\n\t\t\ttemplate.html.remove();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tvar scroller = internal.findScrollerElement(parentNode);\r\n\r\n\t\t\t\tif(scroller === null) return;\r\n\r\n\t\t\t\tvar computed = getComputedStyle(scroller);\r\n\t\t\t\tif(computed.backfaceVisibility === 'hidden' || computed.overflow.indexOf('hidden') !== -1)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tscroller.classList.add('sf-scroll-element');\r\n\t\t\t\tinternal.addScrollerStyle();\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\r\n\t\t// Todo: Enable auto item binding\r\n\t\tif(false && list.auto !== false){\r\n\t\t\t// for (var i = 0; i < list.length; i++) {\r\n\t\t\t// \tlist[i]\r\n\t\t\t// }\r\n\t\t}\r\n\r\n\t\thiddenProperty(list, '$replace', function(index, key, needle, func){\r\n\t\t\tvar elRef = list.getElement(index).sf$elementReferences;\r\n\t\t\tvar process = template.modelReference[key];\r\n\t\t\tif(process === void 0){\r\n\t\t\t\tconsole.error(\"Can't found binding for '\"+key+\"'\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < elRef.length; i++) {\r\n\t\t\t\tif(elRef[i].textContent === void 0 || elRef[i].ref.direct === void 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tif(process.indexOf(elRef[i].ref.direct) !== -1){\r\n\t\t\t\t\tvar ref = elRef[i].textContent;\r\n\t\t\t\t\tvar content = $.escapeText(list[index][key]).replace(needle, func);\r\n\r\n\t\t\t\t\t// Skip if nothing was changed\r\n\t\t\t\t\tif(list[index][key] === content) continue;\r\n\t\t\t\t\tref.textContent = ''; // Let this empty for later referencing\r\n\t\t\t\t\tref.sf$haveChilds = true;\r\n\t\t\t\t\tcontent = $.parseElement(content, true);\r\n\r\n\t\t\t\t\t// Remove old element if exist\r\n\t\t\t\t\twhile(ref.previousSibling && ref.previousSibling.sf$childRoot === ref){\r\n\t\t\t\t\t\tref.previousSibling.remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar parentNode_ = ref.parentNode;\r\n\t\t\t\t\tfor (var i = 0; i < content.length; i++) {\r\n\t\t\t\t\t\tcontent[i].sf$childRoot = ref;\r\n\t\t\t\t\t\tparentNode_.insertBefore(content[i], ref);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\thiddenProperty(list, 'refresh', function(index, length, property){\r\n\t\t\tif(index === void 0 || index.constructor === String){\r\n\t\t\t\tproperty = index;\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tlength = list.length;\r\n\t\t\t}\r\n\t\t\telse if(length === void 0) length = index + 1;\r\n\t\t\telse if(length.constructor === String){\r\n\t\t\t\tproperty = length;\r\n\t\t\t\tlength = index + 1;\r\n\t\t\t}\r\n\t\t\telse if(length < 0) length = list.length + length;\r\n\t\t\telse length += index;\r\n\r\n\t\t\t// Trim length\r\n\t\t\tvar overflow = list.length - length;\r\n\t\t\tif(overflow < 0) length = length + overflow;\r\n\r\n\t\t\tfor (var i = index; i < length; i++) {\r\n\t\t\t\tvar elem = list.getElement(i);\r\n\r\n\t\t\t\t// Create element if not exist\r\n\t\t\t\tif(elem === void 0){\r\n\t\t\t\t\tlist.hardRefresh(i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(isKeyed === true)\r\n\t\t\t\t\t\tlist.softRefresh(i);\r\n\t\t\t\t\telse if(syntheticTemplate(elem, template, property, list[i]) === false)\r\n\t\t\t\t\t\tcontinue; // Continue if no update\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== void 0 && callback.update)\r\n\t\t\t\t\tcallback.update(elem, 'replace');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar virtualChilds = null;\r\n\t\tif(list.$virtual)\r\n\t\t\tvirtualChilds = list.$virtual.dom.children;\r\n\t\thiddenProperty(list, 'getElement', function(index){\r\n\t\t\tif(virtualChilds !== null){\r\n\t\t\t\tvar ret = void 0;\r\n\t\t\t\tif(index < list.$virtual.DOMCursor)\r\n\t\t\t\t\treturn virtualChilds[index];\r\n\t\t\t\telse {\r\n\t\t\t\t\tindex -= list.$virtual.DOMCursor;\r\n\t\t\t\t\tvar childElement = parentNode.childElementCount - 2;\r\n\r\n\t\t\t\t\tif(index < childElement)\r\n\t\t\t\t\t\treturn parentChilds[index + 1];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn virtualChilds[index - childElement + list.$virtual.DOMCursor];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn void 0;\r\n\t\t\t}\r\n\r\n\t\t\treturn parentChilds[index];\r\n\t\t});\r\n\t}\r\n\r\n\tvar loopParser = function(name, template, script, targetNode, parentNode){\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\r\n\t\tvar items = root_(name)[method[1]];\r\n\t\tif(items === void 0)\r\n\t\t\titems = root_(name)[method[1]] = [];\r\n\r\n\t\ttemplate.setAttribute('sf-bind-list', method[1]);\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = template;\r\n\t\ttemplate = self.extractPreprocess(template, mask, name);\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\t\t\tvar tempDOM = document.createElement('div');\r\n\t\t\tvar modelRef = self.root[name];\r\n\r\n\t\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\t\tvar elem = templateParser(template, items[i]);\r\n\t\t\t\ttempDOM.appendChild(elem);\r\n\r\n\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\tsyntheticCache(elem, template, items[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// Enable element binding\r\n\t\t\tif(modelRef.sf$bindedKey === void 0)\r\n\t\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\t\tif(modelRef.sf$bindedKey[method[1]] === void 0)\r\n\t\t\t\tmodelRef.sf$bindedKey[method[1]] = null;\r\n\r\n\t\t\tObject.defineProperty(modelRef, method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tif(val.length === 0)\r\n\t\t\t\t\t\treturn items.splice(0);\r\n\t\t\t\t\treturn items.replace(val, true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tbindArray(template, items, mask, name, method[1], targetNode, parentNode, tempDOM);\r\n\r\n\t\t\t// Output to real DOM if not being used for virtual list\r\n\t\t\tif(items.$virtual === void 0){\r\n\t\t\t\tvar children = tempDOM.children;\r\n\t\t\t\tfor (var i = 0, n = children.length; i < n; i++) {\r\n\t\t\t\t\tparentNode.appendChild(children[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttempDOM.remove();\r\n\t\t\t\ttempDOM = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar callInputListener = function(model, property, value){\r\n\t\tvar callback = model['on$'+property];\r\n\t\tvar v2m = model['v2m$'+property];\r\n\t\tvar newValue1 = void 0; var newValue2 = void 0;\r\n\t\tif(callback !== void 0 || v2m !== void 0){\r\n\t\t\tvar old = model[property];\r\n\t\t\tif(old !== null && old !== void 0 && old.constructor === Array)\r\n\t\t\t\told = old.slice(0);\r\n\r\n\t\t\ttry{\r\n\t\t\t\tif(v2m !== void 0)\r\n\t\t\t\t\tnewValue1 = v2m(old, value);\r\n\r\n\t\t\t\tif(callback !== void 0)\r\n\t\t\t\t\tnewValue2 = callback(old, value);\r\n\t\t\t}catch(e){console.error(e)}\r\n\t\t}\r\n\t\treturn newValue2 !== void 0 ? newValue2 : newValue1;\r\n\t}\r\n\r\n\tvar inputBoundRunning = false;\r\n\tvar inputTextBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\r\n\t\tvar ref = inputBoundRunning = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar value = ref.typeData === Number ? Number(ref.value) : ref.value;\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== void 0)\r\n\t\t\tref.sfModel[ref.sfBounded] = newValue;\r\n\t\telse ref.sfModel[ref.sfBounded] = value;\r\n\t}\r\n\tvar inputFilesBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tvar ref = e.target;\r\n\t\tcallInputListener(ref.sfModel, ref.sfBounded, ref.files);\r\n\t\tref.sfModel[ref.sfBounded] = ref.files;\r\n\t}\r\n\r\n\tvar inputCheckBoxBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tvar ref = inputBoundRunning = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar value = ref.typeData === Number ? Number(ref.value) : ref.value;\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== void 0)\r\n\t\t\tvalue = newValue;\r\n\r\n\t\tvar model = ref.sfModel;\r\n\t\tvar constructor = model[ref.sfBounded].constructor;\r\n\r\n\t\tif(constructor === Array){\r\n\t\t\tvar i = model[ref.sfBounded].indexOf(value);\r\n\r\n\t\t\tif(i === -1 && ref.checked === true)\r\n\t\t\t\tmodel[ref.sfBounded].push(value);\r\n\t\t\telse if(i !== -1 && ref.checked === false)\r\n\t\t\t\tmodel[ref.sfBounded].splice(i, 1);\r\n\t\t}\r\n\t\telse if(constructor === Boolean || ref.typeData === Boolean)\r\n\t\t\tmodel[ref.sfBounded] = ref.checked;\r\n\t\telse model[ref.sfBounded] = value;\r\n\t}\r\n\r\n\tvar inputSelectBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tvar ref = inputBoundRunning = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar typeData = ref.typeData;\r\n\t\tif(ref.multiple === true){\r\n\t\t\tvar temp = ref.selectedOptions;\r\n\t\t\tvar value = [];\r\n\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\tvalue.push(typeData === Number ? Number(temp[i].value) : temp[i].value);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse value = typeData === Number ? Number(ref.selectedOptions[0].value) : ref.selectedOptions[0].value;\r\n\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== void 0)\r\n\t\t\tref.sfModel[ref.sfBounded] = newValue;\r\n\t\telse ref.sfModel[ref.sfBounded] = value;\r\n\t}\r\n\r\n\tvar assignElementData = {\r\n\t\tselect:function(model, property, element){\r\n\t\t\tvar list = element.options;\r\n\t\t\tvar typeData = element.typeData;\r\n\t\t\tvar arrayValue = model[property].constructor === Array ? model[property] : false;\r\n\t\t\tfor (var i = 0, n = list.length; i < n; i++) {\r\n\t\t\t\tif(arrayValue === false){\r\n\t\t\t\t\tif(typeData === String)\r\n\t\t\t\t\t\tlist[i].selected = list[i].value === model[property];\r\n\t\t\t\t\telse list[i].selected = list[i].value == model[property];\r\n\t\t\t\t}\r\n\t\t\t\telse list[i].selected = arrayValue.indexOf(typeData === Number ? Number(list[i].value) : list[i].value) !== -1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckbox:function(model, property, element){\r\n\t\t\tif(model[property].constructor === Array)\r\n\t\t\t\telement.checked = model[property].indexOf(element.typeData === Number ? Number(element.value) : element.value) !== -1;\r\n\t\t\telse if(model[property].constructor === Boolean)\r\n\t\t\t\telement.checked = Boolean(model[property]);\r\n\t\t\telse{\r\n\t\t\t\tif(element.typeData === String)\r\n\t\t\t\t\telement.checked = element.value === model[property];\r\n\t\t\t\telse element.checked = element.value == model[property];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar inputBoundRun = function(model, property, elements){\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\tif(inputBoundRunning === elements[i])\r\n\t\t\t\tcontinue; // Avoid multiple assigment\r\n\r\n\t\t\tvar ev = new Event('change');\r\n\t\t\tev.fromSFFramework = true;\r\n\r\n\t\t\tif(elements.type === 1) // text\r\n\t\t\t\telements[i].value = model[property];\r\n\t\t\telse if(elements.type === 2) // select options\r\n\t\t\t\tassignElementData.select(model, property, elements[i]);\r\n\t\t\telse if(elements.type === 3) // radio\r\n\t\t\t\telements[i].checked = model[property] == elements[i].value;\r\n\t\t\telse if(elements.type === 4) // checkbox\r\n\t\t\t\tassignElementData.checkbox(model, property, elements[i]);\r\n\r\n\t\t\telements[i].dispatchEvent(ev);\r\n\t\t}\r\n\t}\r\n\r\n\tvar triggerInputEvent = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\tif(e.target.viewInputted === true){\r\n\t\t\te.target.viewInputted = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\te.target.dispatchEvent(new Event('input'));\r\n\t}\r\n\r\n\tvar elementBoundChanges = function(model, property, element, oneWay){\r\n\t\t// Enable multiple element binding\r\n\t\tif(model.sf$bindedKey === void 0)\r\n\t\t\tinitBindingInformation(model);\r\n\r\n\t\tvar type = 0;\r\n\t\tvar typeData = null;\r\n\t\tif(model[property] !== null && model[property] !== void 0)\r\n\t\t\ttypeData = model[property].constructor;\r\n\r\n\t\tvar assignedType = (element.getAttribute('typedata') || '').toLowerCase();\r\n\t\tif(assignedType === 'number')\r\n\t\t\ttypeData = Number;\r\n\r\n\t\telement.typeData = typeData;\r\n\t\t$.on(element, 'change', triggerInputEvent);\r\n\r\n\t\t// Bound value change\r\n\t\tif(element.tagName === 'TEXTAREA'){\r\n\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\telement.value = model[property];\r\n\t\t\ttype = 1;\r\n\t\t}\r\n\r\n\t\telse if(element.selectedOptions !== void 0){\r\n\t\t\t$.on(element, 'input', inputSelectBound);\r\n\t\t\ttype = 2;\r\n\r\n\t\t\tassignElementData.select(model, property, element);\r\n\t\t}\r\n\r\n\t\telse{\r\n\t\t\tvar type = element.type.toLowerCase();\r\n\t\t\tif(type === 'radio'){\r\n\t\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\t\ttype = 3;\r\n\r\n\t\t\t\telement.checked = model[property] == element.value;\r\n\t\t\t}\r\n\t\t\telse if(type === 'checkbox'){\r\n\t\t\t\t$.on(element, 'input', inputCheckBoxBound);\r\n\t\t\t\ttype = 4;\r\n\r\n\t\t\t\tassignElementData.checkbox(model, property, element);\r\n\t\t\t}\r\n\r\n\t\t\telse if(type === 'file'){\r\n\t\t\t\t$.on(element, 'input', inputFilesBound);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telse{\r\n\t\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\t\telement.value = model[property];\r\n\t\t\t\ttype = 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(oneWay === true) return;\r\n\t\tmodelToViewBinding(model, property, inputBoundRun, element, type);\r\n\t}\r\n\r\n\tvar bindInput = function(targetNode){\r\n\t\tvar temp = $('input[sf-bound], textarea[sf-bound], select[sf-bound], input[sf-bind], textarea[sf-bind], select[sf-bind]', targetNode);\r\n\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar model = sf.controller.modelName(element);\r\n\t\t\tif(!model) return;\r\n\t\t\tvar modelScope = self.root[model];\r\n\r\n\t\t\tvar oneWay = false;\r\n\t\t\tvar propertyName = element.getAttribute('sf-bound');\r\n\t\t\tif(propertyName === null){\r\n\t\t\t\tpropertyName = element.getAttribute('sf-bind');\r\n\t\t\t\toneWay = true;\r\n\t\t\t}\r\n\t\t\tif(propertyName === \"\")\r\n\t\t\t\tpropertyName = element.getAttribute('name');\r\n\r\n\t\t\tif(propertyName === null){\r\n\t\t\t\tconsole.error(\"Property key to be bound wasn't be found\", element);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(modelScope[propertyName] === void 0){\r\n\t\t\t\tconsole.error('Can\\'t get property \"'+propertyName+'\" on model \"' + model + '\"');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement.sfBounded = propertyName;\r\n\t\t\telement.sfModel = modelScope;\r\n\t\t\tif(oneWay === false){\r\n\t\t\t\telement.setAttribute('sf-bounded', '');\r\n\t\t\t\telement.removeAttribute('sf-bound');\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\telement.setAttribute('sf-binded', '');\r\n\t\t\t\telement.removeAttribute('sf-bind');\r\n\t\t\t}\r\n\r\n\t\t\telementBoundChanges(modelScope, propertyName, element, oneWay);\r\n\t\t}\r\n\t}\r\n\r\n\tvar alreadyInitialized = false;\r\n\tself.init = function(targetNode, queued){\r\n\t\tif(alreadyInitialized && !targetNode) return;\r\n\t\talreadyInitialized = true;\r\n\t\tsetTimeout(function(){\r\n\t\t\talreadyInitialized = false;\r\n\t\t}, 50);\r\n\r\n\t\tif(!targetNode) targetNode = document.body;\r\n\r\n\t\t// Handle Router Start ==>\r\n\t\tif(internal.router.enabled === true){\r\n\t\t\t// Before model binding\r\n\t\t\tvar temp = $('[sf-controller]', targetNode);\r\n\t\t\tvar sfPage = [];\r\n\r\n\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\tvar modelName = temp[i].getAttribute('sf-controller') || temp[i].sf$component;\r\n\t\t\t\tvar model = self.root[modelName] || sf.model(modelName);\r\n\t\t\t\tif(model.$page === void 0){\r\n\t\t\t\t\tmodel.$page = window.$([]);\r\n\r\n\t\t\t\t\tif(model.$page.push === void 0)\r\n\t\t\t\t\t\tObject.assign(model.$page.__proto__, internal.dom.extends_Dom7);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmodel.$page.push(temp[i]);\r\n\r\n\t\t\t\tif(sf.controller.pending[modelName] !== void 0)\r\n\t\t\t\t\tsf.controller.run(modelName);\r\n\r\n\t\t\t\tif(model.init !== void 0)\r\n\t\t\t\t\tmodel.init(temp[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// When the model was binded with the view\r\n\t\t\tinternal.afterModelBinding = function(){\r\n\t\t\t\tfor (var i = 0; i < sfPage.length; i++) {\r\n\t\t\t\t\tinternal.routerLocalEvent('when', temp[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinternal.afterModelBinding = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// <== Handle Router End\r\n\r\n\t\tself.parsePreprocess(queued || self.queuePreprocess(targetNode), queued);\r\n\t\tbindInput(targetNode);\r\n\r\n\t\t// Find element for array binding\r\n\t\trepeatedListBinding($('[sf-repeat-this]', targetNode), targetNode, queued);\r\n\r\n\t\t// Used by router\r\n\t\tif(internal.afterModelBinding !== undefined)\r\n\t\t\tinternal.afterModelBinding();\r\n\t}\r\n\r\n\tfunction repeatedListBinding(temp, targetNode, queued, controller_){\r\n\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\tvar element = temp[a];\r\n\t\t\tvar parent = element.parentElement;\r\n\r\n\t\t\tif(queued !== void 0)\r\n\t\t\t\telement.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(parent.classList.contains('sf-virtual-list')){\r\n\t\t\t\tvar ceiling = document.createElement(element.tagName);\r\n\t\t\t\tceiling.classList.add('virtual-spacer');\r\n\t\t\t\tvar floor = ceiling.cloneNode(true);\r\n\r\n\t\t\t\tceiling.classList.add('ceiling');\r\n\t\t\t\tparent.insertBefore(ceiling, parent.firstElementChild); // prepend\r\n\r\n\t\t\t\tfloor.classList.add('floor');\r\n\t\t\t\tparent.appendChild(floor); // append\r\n\t\t\t}\r\n\r\n\t\t\tvar after = element.nextElementSibling;\r\n\t\t\tif(after === null || element === after)\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = element.previousElementSibling;\r\n\t\t\tif(before === null || element === before)\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = element.getAttribute('sf-repeat-this');\r\n\t\t\telement.removeAttribute('sf-repeat-this');\r\n\r\n\t\t\t// Check if the element was already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(element.outerHTML))\r\n\t\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\t\tif(controller_ !== void 0)\r\n\t\t\t\tvar controller = controller_;\r\n\t\t\telse{\r\n\t\t\t\tvar controller = sf.controller.modelName(element);\r\n\t\t\t\tif(controller === void 0) continue;\r\n\t\t\t}\r\n\r\n\t\t\tloopParser(controller, element, script, targetNode, parent);\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t}\r\n\r\n\t// Reset model properties\r\n\t// Don't call if the removed element is TEXT or #comment\r\n\tvar DOMNodeRemoved = scope.DOMNodeRemoved = function(element, isScan){\r\n\t\tif(isScan === void 0){\r\n\t\t\tvar temp = element.querySelectorAll('[sf-controller]');\r\n\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\tDOMNodeRemoved(temp[i], true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(element.hasAttribute('sf-controller') !== false){\r\n\t\t\tvar modelName = element.sf$component === void 0 ? element.getAttribute('sf-controller') : element.sf$component;\r\n\t\t\tvar model = sf.model.root[modelName];\r\n\r\n\t\t\tif(model.$page){\r\n\t\t\t\tvar i = model.$page.indexOf(element);\r\n\t\t\t\tif(i !== -1)\r\n\t\t\t\t\tmodel.$page.splice(i)\r\n\t\t\t}\r\n\r\n\t\t\tif(model.destroy)\r\n\t\t\t\tmodel.destroy(element);\r\n\r\n\t\t\tremoveModelBinding(modelName);\r\n\t\t\tif(element.sf$component !== void 0){\r\n\t\t\t\tvar modelFrom = element.sf$componentFrom;\r\n\t\t\t\tvar components = sf.component.available[modelFrom];\r\n\t\t\t\tcomponents.splice(components.indexOf(modelName), 1);\r\n\t\t\t\tinternal.component.triggerEvent(modelFrom, 'removed', self.root[modelName]);\r\n\t\t\t\tdelete self.root[modelName];\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tsf(function(){\r\n\t\tvar everyRemovedNodes = function(nodes){\r\n\t\t\tif(nodes.nodeType !== 1 || nodes.firstElementChild === null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(nodes.sf$elementReferences !== void 0) return;\r\n\t\t\tDOMNodeRemoved(nodes);\r\n\t\t}\r\n\r\n\t\tif(typeof MutationObserver === 'function' && MutationObserver.prototype.observe){\r\n\t\t\tvar everyRecords = function(record){\r\n\t\t\t\trecord.removedNodes.forEach(everyRemovedNodes);\r\n\t\t\t}\r\n\r\n\t\t\tvar observer = new MutationObserver(function(records){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\trecords.forEach(everyRecords);\r\n\t\t\t});\r\n\r\n\t\t\tobserver.observe(document.body, { childList: true, subtree: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.body.addEventListener('DOMNodeRemoved', function(e){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\teveryRemovedNodes(e.target);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tvar removeModelBinding = self.reset = function(modelName){\r\n\t\tvar ref = self.root[modelName];\r\n\t\tif(ref === void 0)\r\n\t\t\treturn;\r\n\r\n\t\tvar bindedKey = ref.sf$bindedKey;\r\n\t\tvar temp = null;\r\n\t\tfor(var key in bindedKey){\r\n\t\t\tdelete bindedKey[key];\r\n\r\n\t\t\tif(ref[key] === void 0 || ref[key] === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(ref[key].constructor === String ||\r\n\t\t\t\tref[key].constructor === Number ||\r\n\t\t\t\tref[key].constructor === Boolean\r\n\t\t\t){/* Ok */}\r\n\r\n\t\t\telse if(ref[key].constructor === Array){\r\n\t\t\t\tif(ref[key].$virtual){\r\n\t\t\t\t\tref[key].$virtual.destroy();\r\n\t\t\t\t\tdelete ref[key].$virtual;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset property without copying the array\r\n\t\t\t\ttemp = ref[key].splice('obtain');\r\n\t\t\t\tdelete ref[key];\r\n\t\t\t\tref[key] = temp;\r\n\t\t\t}\r\n\t\t\telse continue;\r\n\r\n\t\t\tif(Object.getOwnPropertyDescriptor(ref, key) === void 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Reconfigure / Remove property descriptor\r\n\t\t\tvar temp = ref[key];\r\n\t\t\tdelete ref[key];\r\n\t\t\tref[key] = temp;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction modelToViewBinding(model, propertyName, callback, elementBind, type){\r\n\t\t// Enable multiple element binding\r\n\t\tif(model.sf$bindedKey === void 0)\r\n\t\t\tinitBindingInformation(model);\r\n\r\n\t\tif(model.sf$bindedKey[propertyName] !== void 0){\r\n\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\tif(ref.indexOf(callback) === -1)\r\n\t\t\t\tref.push(callback);\r\n\r\n\t\t\tif(elementBind !== void 0){\r\n\t\t\t\tif(ref.input === void 0){\r\n\t\t\t\t\tref.input = [elementBind];\r\n\t\t\t\t\tref.input.type = type;\r\n\t\t\t\t}\r\n\t\t\t\telse ref.input.push(elementBind);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tmodel.sf$bindedKey[propertyName] = [callback];\r\n\r\n\t\tif(elementBind !== void 0){\r\n\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\tref.input = [elementBind];\r\n\t\t\tref.input.type = type;\r\n\t\t}\r\n\r\n\t\t// Proxy property\r\n\t\tif(Object.getOwnPropertyDescriptor(model, propertyName).set !== void 0)\r\n\t\t\treturn;\r\n\r\n\t\tvar objValue = model[propertyName]; // Object value\r\n\t\tObject.defineProperty(model, propertyName, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\t\t\tget:function(getAssigner){\r\n\t\t\t\treturn objValue;\r\n\t\t\t},\r\n\t\t\tset:function(val){\r\n\t\t\t\tif(objValue !== val){\r\n\t\t\t\t\tvar m2v = model['m2v$'+propertyName];\r\n\t\t\t\t\tvar out = inputBoundRunning === false ? model['out$'+propertyName] : void 0;\r\n\t\t\t\t\tvar callback = inputBoundRunning === false ? model['on$'+propertyName] : void 0;\r\n\r\n\t\t\t\t\tif(callback !== void 0 || m2v !== void 0 || out !== void 0){\r\n\t\t\t\t\t\tvar newValue1 = void 0; var newValue2 = void 0; var newValue3 = void 0;\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tif(m2v !== void 0)\r\n\t\t\t\t\t\t\t\tnewValue1 = m2v(objValue, val);\r\n\r\n\t\t\t\t\t\t\tif(out !== void 0)\r\n\t\t\t\t\t\t\t\tnewValue2 = out(objValue, val);\r\n\r\n\t\t\t\t\t\t\tif(callback !== void 0)\r\n\t\t\t\t\t\t\t\tnewValue3 = callback(objValue, val);\r\n\t\t\t\t\t\t}catch(e){console.error(e)}\r\n\r\n\t\t\t\t\t\tobjValue = (newValue3 !== void 0 ? newValue3 : \r\n\t\t\t\t\t\t\t(newValue2 !== void 0 ? newValue2 : \r\n\t\t\t\t\t\t\t(newValue1 !== void 0 ? newValue1 : val)\r\n\t\t\t\t\t\t));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse objValue = val;\r\n\r\n\t\t\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\t\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\t\t\t\tif(inputBoundRun === ref[i]){\r\n\t\t\t\t\t\t\tref[i](model, propertyName, ref.input);\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tref[i]();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinputBoundRunning = false;\r\n\t\t\t\treturn objValue;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvar dcBracket = /{{[^#][\\s\\S]*?}}/;\r\n\tself.bindElement = function(element){\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar data = self.extractPreprocess(element, null, modelName);\r\n\t\ttemplateParser(data, model, true);\r\n\t\tdelete data.addresses;\r\n\t\telement.parentNode.replaceChild(data.html, element);\r\n\r\n\t\telement = data.html;\r\n\r\n\t\tvar onChanges = function(){\r\n\t\t\tif(syntheticTemplate(element, data, void 0, model) === false)\r\n\t\t\t\t0; //No update\r\n\t\t};\r\n\r\n\t\tvar properties = data.modelRef_array;\r\n\t\tfor (var i = 0; i < properties.length; i++) {\r\n\t\t\tvar propertyName = properties[i][0];\r\n\r\n\t\t\tif(model[propertyName] === void 0)\r\n\t\t\t\tmodel[propertyName] = '';\r\n\r\n\t\t\tmodelToViewBinding(model, propertyName, onChanges);\r\n\t\t}\r\n\t}\r\n\r\n\tself.extractPreprocess = function(targetNode, mask, name){\r\n\t\t// Check if it's component\r\n\t\tvar tagName = targetNode.tagName.toLowerCase();\r\n\t\tif(sf.component.registered[tagName] !== void 0){\r\n\t\t\ttargetNode.parentNode.classList.add('sf-keyed-list');\r\n\t\t\ttargetNode.textContent = '';\r\n\t\t\ttargetNode.remove();\r\n\t\t\ttargetNode.setAttribute('sf-component-ignore', '');\r\n\t\t\treturn {\r\n\t\t\t\tcomponent:window['$'+capitalizeLetters(tagName.split('-'))],\r\n\t\t\t\tlist:targetNode.getAttribute('sf-bind-list')\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Remove repeated list from further process\r\n\t\tvar backup = targetNode.querySelectorAll('[sf-repeat-this]');\r\n\t\tfor (var i = 0; i < backup.length; i++) {\r\n\t\t\tvar current = backup[i];\r\n\t\t\tcurrent.insertAdjacentHTML('afterEnd', '<sfrepeat-this id=\"'+i+'\"></sfrepeat-this>');\r\n\t\t\tcurrent.remove();\r\n\t\t}\r\n\r\n\t\tvar copy = targetNode.outerHTML;\r\n\r\n\t\t// Mask the referenced item\r\n\t\tif(mask !== null)\r\n\t\t\tcopy = copy.split('#'+mask).join('_model_');\r\n\t\telse{ // Replace all masked item\r\n\t\t\tcopy.replace(/sf-repeat-this=\"(?:\\W+|)(\\w+)/g, function(full, match){\r\n\t\t\t\tcopy = copy.split('#'+match).join('_model_');\r\n\t\t\t\tcopy = copy.replace(RegExp(sf.regex.strictVar+\"(\"+match+\")\\\\b\", 'g'), '_model_');\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Extract data to be parsed\r\n\t\tcopy = uniqueDataParser(copy, null, mask, name, '#noEval');\r\n\t\tvar preParsed = copy[1];\r\n\t\tvar _content_ = copy[2];\r\n\t\tcopy = dataParser(copy[0], null, mask, name, '#noEval', preParsed);\r\n\r\n\t\tfunction findModelProperty(){\r\n\t\t\tif(mask === null){ // For model items\r\n\t\t\t\t// Get model keys and sort by text length, make sure the longer one is from first index to avoid wrong match\r\n\t\t\t\tvar extract = RegExp('(?:{{.*?\\\\b|_modelScope\\\\.)('+self.modelKeys(self.root[name]).sort(function(a, b){\r\n\t\t\t\t\treturn b.length - a.length\r\n\t\t\t\t}).join('|')+')(\\\\b.*?}}|)', 'g');\r\n\t\t\t}\r\n\t\t\telse var extract = sf.regex.arrayItemsObserve; // For array items\r\n\t\t\tvar found = {};\r\n\r\n\t\t\tfor (var i = 0; i < preParsed.length; i++) {\r\n\t\t\t\tvar current = preParsed[i];\r\n\r\n\t\t\t\t// Text or attribute\r\n\t\t\t\tif(current.type === 0){\r\n\t\t\t\t\tcurrent.data[0].split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(found[match] === void 0) found[match] = [i];\r\n\t\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Dynamic data\r\n\t\t\t\tif(current.type === 1){\r\n\t\t\t\t\tvar checkList = current.if.join(';');\r\n\r\n\t\t\t\t\tif(current.elseValue !== null)\r\n\t\t\t\t\t\tcheckList += ';' + current.elseValue;\r\n\r\n\t\t\t\t\tfor (var a = 0; a < current.elseIf.length; a++) {\r\n\t\t\t\t\t\tcheckList += current.elseIf[a].join(';');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(current.type === 2)\r\n\t\t\t\t\tvar checkList = current.data[0];\r\n\r\n\t\t\t\tcheckList = checkList.replace(/_result_ \\+= _content_\\.take\\(.*?, ([0-9]+)\\);/g, function(full, match){\r\n\t\t\t\t\treturn _content_[match];\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// console.log(99, checkList);\r\n\t\t\t\tcheckList.split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found[match] === void 0) found[match] = [i];\r\n\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn found;\r\n\t\t}\r\n\r\n\t\t// Rebuild element\r\n\t\tcopy = $.parseElement(copy)[0];\r\n\r\n\t\t// Restore element repeated list\r\n\t\tvar restore = copy.querySelectorAll('sfrepeat-this');\r\n\t\tfor (var i = 0; i < restore.length; i++) {\r\n\t\t\tvar current = restore[i];\r\n\t\t\tcurrent.parentNode.replaceChild(backup[current.id], current);\r\n\t\t}\r\n\r\n\t\t// Start addressing\r\n\t\tvar nodes = self.queuePreprocess(copy, true).reverse();\r\n\t\tvar addressed = [];\r\n\r\n\t\tfunction addressAttributes(currentNode){\r\n\t\t\tvar attrs = currentNode.attributes;\r\n\t\t\tvar keys = [];\r\n\t\t\tvar indexes = 0;\r\n\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\tvar found = attrs[a].value.split('{{%=');\r\n\t\t\t\tif(found.length !== 1){\r\n\t\t\t\t\tif(attrs[a].name[0] === ':'){\r\n\t\t\t\t\t\tvar key = {\r\n\t\t\t\t\t\t\tname:attrs[a].name.slice(1),\r\n\t\t\t\t\t\t\tvalue:attrs[a].value\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tcurrentNode.removeAttribute(attrs[a].name);\r\n\t\t\t\t\t\tcurrentNode.setAttribute(key.name, '');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse var key = {\r\n\t\t\t\t\t\tname:attrs[a].name,\r\n\t\t\t\t\t\tvalue:attrs[a].value\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tindexes = [];\r\n\t\t\t\t\tfound = key.value.replace(/{{%=([0-9]+)/g, function(full, match){\r\n\t\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found === '' && indexes.length === 1)\r\n\t\t\t\t\t\tkey.direct = indexes[0];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tkey.parse_index = indexes;\r\n\r\n\t\t\t\t\tkeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn keys;\r\n\t\t}\r\n\r\n\t\tvar currentElement = addressAttributes(copy);\r\n\t\tif(currentElement.length !== 0)\r\n\t\t\taddressed.push({\r\n\t\t\t\tnodeType:1,\r\n\t\t\t\taddress:[0],\r\n\t\t\t\tattributes:currentElement\r\n\t\t\t});\r\n\r\n\t\tfor (var i = 0; i < nodes.length; i++) {\r\n\t\t\tvar temp = {\r\n\t\t\t\tnodeType:nodes[i].nodeType\r\n\t\t\t};\r\n\r\n\t\t\tif(temp.nodeType === 1){ // Element\r\n\t\t\t\ttemp.attributes = addressAttributes(nodes[i]);\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\telse if(temp.nodeType === 3){ // Text node\r\n\t\t\t\tvar innerHTML = nodes[i].textContent;\r\n\t\t\t\tvar indexes = [];\r\n\r\n\t\t\t\tinnerHTML.replace(/{{%%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Check for dynamic mode\r\n\t\t\t\tif(indexes.length !== 0){\r\n\t\t\t\t\tinnerHTML = innerHTML.split(/{{%%=[0-9]+/gm);\r\n\t\t\t\t\tfor (var a = 0; a < innerHTML.length; a++) {\r\n\t\t\t\t\t\tinnerHTML[a] = trimIndentation(innerHTML[a]).trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodes[i].textContent = innerHTML.shift();\r\n\r\n\t\t\t\t\tvar parent = nodes[i].parentNode;\r\n\t\t\t\t\tvar nextSibling = nodes[i].nextSibling;\r\n\r\n\t\t\t\t\t// Dynamic boundary start\r\n\t\t\t\t\tvar addressStart = null;\r\n\t\t\t\t\tif(indexes.length !== 0 && nodes[i].textContent.length !== 0)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i], true);\r\n\t\t\t\t\telse if(nodes[i].previousSibling !== null)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i].previousSibling, true);\r\n\r\n\t\t\t\t\t// Find boundary ends\r\n\t\t\t\t\tvar commentFlag = [];\r\n\t\t\t\t\tfor(var a = 0; a < indexes.length; a++){\r\n\t\t\t\t\t\tvar flag = document.createComment('');\r\n\t\t\t\t\t\tparent.insertBefore(flag, nextSibling);\r\n\t\t\t\t\t\tcommentFlag.push({\r\n\t\t\t\t\t\t\tnodeType:-1,\r\n\t\t\t\t\t\t\tparse_index:indexes[a],\r\n\t\t\t\t\t\t\tstartFlag:addressStart,\r\n\t\t\t\t\t\t\taddress:$.getSelector(flag, true)\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(innerHTML[a]){\r\n\t\t\t\t\t\t\tvar textNode = document.createTextNode(innerHTML[a]);\r\n\t\t\t\t\t\t\tparent.insertBefore(textNode, nextSibling);\r\n\r\n\t\t\t\t\t\t\t// Get new start flag\r\n\t\t\t\t\t\t\tif(a + 1 < indexes.length)\r\n\t\t\t\t\t\t\t\taddressStart = $.getSelector(textNode, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Merge boundary address\r\n\t\t\t\t\tArray.prototype.push.apply(addressed, commentFlag);\r\n\t\t\t\t\tif(nodes[i].textContent === ''){\r\n\t\t\t\t\t\tnodes[i].remove();\r\n\t\t\t\t\t\tfor (var a = 0; a < commentFlag.length; a++) {\r\n\t\t\t\t\t\t\tvar ref = commentFlag[a].address;\r\n\t\t\t\t\t\t\tref[ref.length - 1]--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(nodes[i].textContent.search(/{{%=[0-9]+/) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if it's only model value\r\n\t\t\t\tindexes = [];\r\n\t\t\t\tinnerHTML = nodes[i].textContent.replace(/{{%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(innerHTML === '' && indexes.length === 1)\r\n\t\t\t\t\ttemp.direct = indexes[0];\r\n\t\t\t\telse{\r\n\t\t\t\t\ttemp.value = nodes[i].textContent;\r\n\t\t\t\t\ttemp.parse_index = indexes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\taddressed.push(temp);\r\n\t\t}\r\n\r\n\t\tvar modelReference = findModelProperty();\r\n\t\tvar keys = Object.keys(modelReference);\r\n\t\tvar asArray = [];\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tasArray.push([keys[i], keys[i].split('.')]);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\thtml:copy,\r\n\t\t\tparse:preParsed,\r\n\t\t\taddresses:addressed,\r\n\t\t\tmodelReference:modelReference,\r\n\t\t\tmodelRef_array:asArray\r\n\t\t};\r\n\t}\r\n\r\n\tvar enclosedHTMLParse = false;\r\n\tvar excludes = ['HTML','HEAD','STYLE','LINK','META','SCRIPT','OBJECT','IFRAME'];\r\n\tself.queuePreprocess = function(targetNode, extracting){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = childNodes.length - 1; i >= 0; i--) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\r\n\t\t\tif(extracting === void 0 && excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tif(enclosedHTMLParse === true) continue;\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\r\n\t\t\t\t// Skip element and it's childs that already bound to prevent vulnerability\r\n\t\t\t\tif(attrs['sf-bind-key'] || attrs['sf-repeat-this'] || attrs['sf-bind-list'] || currentNode.sf$elementReferences !== void 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tArray.prototype.push.apply(temp, self.queuePreprocess(currentNode, extracting));\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tif(currentNode.textContent.length === 0){\r\n\t\t\t\t\tcurrentNode.remove();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// The scan is from bottom to first index\r\n\t\t\t\tvar enclosing = currentNode.textContent.indexOf('{[');\r\n\t\t\t\tif(enclosing !== -1)\r\n\t\t\t\t\tenclosedHTMLParse = false;\r\n\t\t\t\telse if(enclosedHTMLParse === true)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Start enclosed if closing pattern was found\r\n\t\t\t\tvar enclosed = currentNode.textContent.indexOf(']}');\r\n\t\t\t\tif(enclosed !== -1 && (enclosing === -1 || enclosing > enclosed)){ // avoid {[ ... ]}\r\n\t\t\t\t\tenclosedHTMLParse = true; // when ]} ... \r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tif(extracting === void 0){\r\n\t\t\t\t\t\ttemp.push(currentNode.parentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn temp;\r\n\t}\r\n\r\n\tself.parsePreprocess = function(nodes, queued){\r\n\t\tfor (var a = 0; a < nodes.length; a++) {\r\n\t\t\t// Get reference for debugging\r\n\t\t\tvar current = processingElement = nodes[a];\r\n\r\n\t\t\tvar modelElement = sf.controller.modelElement(current);\r\n\t\t\tif(modelElement === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar model = modelElement.sf$component === void 0 ? modelElement.getAttribute('sf-controller') : modelElement.sf$component;\r\n\r\n\t\t\tif(queued !== void 0)\r\n\t\t\t\tcurrent.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(internal.modelPending[model] || self.root[model] === undefined)\r\n\t\t\t\tself(model);\r\n\r\n\t\t\tvar modelRef = self.root[model];\r\n\r\n\t\t\t// Double check if the child element already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(current.innerHTML)){\r\n\t\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\t\tconsole.log(processingElement.cloneNode(true));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(current.hasAttribute('sf-bind-ignore') === false)\r\n\t\t\t\tself.bindElement(current);\r\n\t\t\telse{\r\n\t\t\t\tvar temp = uniqueDataParser(current.innerHTML, modelRef, false, model);\r\n\t\t\t\tcurrent.innerHTML = dataParser(temp, modelRef, false, model);\r\n\t\t\t\tvar attrs = current.attributes;\r\n\t\t\t\tfor (var i = 0; i < attrs.length; i++) {\r\n\t\t\t\t\tif(attrs[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tvar attr = attrs[i];\r\n\t\t\t\t\t\tattr.value = dataParser(attr.value, modelRef, false, model);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initBindingInformation(modelRef){\r\n\t\tif(modelRef.sf$bindedKey !== void 0)\r\n\t\t\treturn;\r\n\r\n\t\t// Element binding data\r\n\t\tObject.defineProperty(modelRef, 'sf$bindedKey', {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable:false,\r\n\t\t\twritable:true,\r\n\t\t\tvalue:{}\r\n\t\t});\r\n\t}\r\n})();","sf.API = function(method, url, data, success, complete, accessToken, getXHR){\r\n\tif(typeof data !== 'object')\r\n\t\tdata = {};\r\n\r\n\tvar req = {\r\n\t\turl:url,\r\n\t\tdataType:'json',\r\n\t\tmethod:'POST',\r\n\t\tsuccess:function(obj){\r\n\t\t\tif(!sf.API.onSuccess(obj) && success)\r\n\t\t\t\tsuccess(obj, url);\r\n\r\n\t\t\tif(complete) complete(200);\r\n\t\t},\r\n\t\terror:function(data, status){\r\n\t\t\ttry{\r\n\t\t\t\tdata = JSON.parse(data.response);\r\n\t\t\t}catch(e){}\r\n\r\n\t\t\tsf.API.onError(status, data)\r\n\t\t\tif(complete) complete(status, data);\r\n\t\t},\r\n\t};\r\n\r\n\tif(data.constructor !== FormData)\r\n\t\treq.contentType = \"application/json\";\r\n\r\n\tdata._method = method.toUpperCase();\r\n\r\n\tif(accessToken){\r\n\t\treq.beforeSend = function(xhr){\r\n\t\t    xhr.setRequestHeader('X-Authorization', 'Bearer '+accessToken);\r\n\t\t    getXHR && getXHR(xhr);\r\n\t\t}\r\n\t}\r\n\telse if(getXHR !== void 0)\r\n\t\treq.beforeSend = getXHR;\r\n\t\r\n\treq.data = data;\r\n\treturn sf.ajax(req);\r\n}\r\n\r\nsf.API.onError = function(status, data){};\r\nsf.API.onSuccess = function(obj){};\r\n\r\nvar extendsAPI = {\r\n\tget:function(url, data, success, complete){\r\n\t\treturn sf.API('get', this.url+url, data, success, complete, this.accessToken);\r\n\t},\r\n\tpost:function(url, data, success, complete){\r\n\t\treturn sf.API('post', this.url+url, data, success, complete, this.accessToken);\r\n\t},\r\n\tdelete:function(url, data, success, complete){\r\n\t\treturn sf.API('delete', this.url+url, data, success, complete, this.accessToken);\r\n\t},\r\n\tput:function(url, data, success, complete){\r\n\t\treturn sf.API('put', this.url+url, data, success, complete, this.accessToken);\r\n\t},\r\n\tupload:function(url, formData, success, complete, progress){\r\n\t\tif(formData.constructor !== FormData)\r\n\t\t\treturn console.error(\"Parameter 2 must be a FormData\");\r\n\r\n\t\tvar getXHR = void 0;\r\n\t\tif(progress !== void 0){\r\n\t\t\tgetXHR = function(xhr){\r\n\t\t\t\txhr.upload.onprogress = function(ev){\r\n\t            \tif(ev.lengthComputable)\r\n\t            \t    progress(ev.loaded, ev.total);\r\n\t            }\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn sf.API('post', this.url+url, formData, success, complete, this.accessToken, getXHR);\r\n\t},\r\n};\r\n\r\nsf.API.instance = function(url){\r\n\tvar self = this;\r\n\tself.url = url;\r\n\tself.accessToken = false;\r\n\r\n\tObject.assign(this, extendsAPI);\r\n}","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tself.pending = {};\r\n\tself.active = {};\r\n\r\n\tinternal.controller = {\r\n\t\tpending:[]\r\n\t};\r\n\r\n\tself.for = function(name, func){\r\n\t\tif(sf.component.registered[name]){\r\n\t\t\tsf.component.registered[name][1] = func;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(self.active[name])\r\n\t\t\treturn func();\r\n\r\n\t\tself.pending[name] = func;\r\n\t}\r\n\r\n\tself.modelScope = function(element, func){\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = element.getAttribute('sf-bind-list');\r\n\t\tif(!bindedList){\r\n\t\t\tvar parentEl = $.parent(element, '[sf-bind-list]');\r\n\t\t\tif(parentEl !== null)\r\n\t\t\t\tbindedList = parentEl.getAttribute('sf-bind-list');\r\n\t\t}\r\n\t\telse var parentEl = element;\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(sf.model.root[model], -1);\r\n\t\t\telse return sf.model.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = $.prevAll(parentEl, '[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(sf.model.root[model][bindedList], bindedListIndex);\r\n\t\telse return sf.model.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.modelElement = function(element){\r\n\t\tif(element.nodeType === 1 && element.hasAttribute('sf-controller') === true)\r\n\t\t\treturn element;\r\n\r\n\t\treturn $.parent(element, '[sf-controller]');\r\n\t}\r\n\r\n\tself.modelName = function(element){\r\n\t\tvar name = self.modelElement(element);\r\n\t\tif(name === null){\r\n\t\t\tconsole.error(\"Can't find any controller for\", element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tname = name.sf$component === void 0? name.getAttribute('sf-controller') : name.sf$component;\r\n\r\n\t\t// Initialize it first\r\n\t\tif(name !== void 0 && !self.active[name])\r\n\t\t\tself.run(name);\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = e.target;\r\n\t\tvar script = element.getAttribute('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = $.parent(element, '[sf-click]');\r\n\t\t\tscript = element.getAttribute('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = $.parent(element, '[sf-controller]');\r\n\t\tmodel = model.sf$component === void 0 ? model.getAttribute('sf-controller') : model.sf$component;\r\n\t\tvar _modelScope = sf.model.root[model];\r\n\r\n\t\tif(_modelScope === void 0)\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(_modelScope).join('|');\r\n\t\tscript = avoidQuotes(script, function(script_){\r\n\t\t\treturn script_.replace(RegExp(sf.regex.strictVar+'('+modelKeys+')\\\\b', 'g'), function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script.shift();\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(err) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot call `'+method_+'`]\\n', element, err);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0){\r\n\t\t\t// Replace `this` to `element`\r\n\t\t\tscript = eval(('['+script+']').replace(/,this|\\[this/g, function(found){\r\n\t\t\t\treturn found[0] + 'element';\r\n\t\t\t}));\r\n\t\t}\r\n\t\telse script = [e];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element, script);\r\n\t\t\te.preventDefault();\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', element, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tself.run = function(name, func){\r\n\t\tif(sf.component.registered[name])\r\n\t\t\treturn console.error(\"'\"+name+\"' is registered as a component\");\r\n\r\n\t\tif(self.pending[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\r\n\t\t\tself.pending[name](sf.model.root[name], root_);\r\n\t\t\tself.active[name] = true;\r\n\t\t\tdelete self.pending[name];\r\n\r\n\t\t\tvar i = internal.controller.pending.indexOf(name);\r\n\t\t\tif(i !== -1)\r\n\t\t\t\tinternal.controller.pending.splice(i, 1);\r\n\t\t}\r\n\r\n\t\tif(sf.model.root[name] === void 0)\r\n\t\t\tsf.model.root[name] = {};\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], root_);\r\n\t}\r\n\r\n\tself.init = function(parent){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(parent);\r\n\t\t\t});\r\n\r\n\t\tvar temp = $('[sf-controller]', parent || document.body);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tself.run(temp[i].sf$component === void 0? temp[i].getAttribute('sf-controller') : temp[i].sf$component);\r\n\t\t}\r\n\t}\r\n\r\n\t// Create listener for sf-click\r\n\tdocument.addEventListener('DOMContentLoaded', function(){\r\n\t\t$.on(document.body, 'click', '[sf-click]', listenSFClick);\r\n\t\tself.init();\r\n\t}, {capture:true, once:true});\r\n}\r\n\r\nvar root_ = function(scope){\r\n\tif(sf.component.registered[scope]){\r\n\t\tvar available = [];\r\n\t\tvar component = sf.component.available[scope];\r\n\t\tif(component !== void 0){\r\n\t\t\tfor (var i = 0; i < component.length; i++) {\r\n\t\t\t\tavailable.push(sf.model.root[component[i]]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn available;\r\n\t}\r\n\r\n\tif(!sf.model.root[scope]){\r\n\t\tvar scope_ = sf.model.root[scope] = {};\r\n\r\n\t\tif(internal.modelPending[scope] !== void 0){\r\n\t\t\tvar ref = internal.modelPending[scope];\r\n\t\t\tfor (var a = 0; a < ref.length; a++) {\r\n\t\t\t\tref[a](scope_, root_);\r\n\t\t\t}\r\n\r\n\t\t\tdelete internal.modelPending[scope];\r\n\t\t}\r\n\t}\r\n\r\n\treturn sf.model.root[scope];\r\n}","/*\r\n  Special Thanks to Vladimir Kharlampidi\r\n  https://github.com/nolimits4web/\r\n*/\r\n\r\nvar globals = {};\r\nvar jsonpRequests = 0;\r\nfunction Request(requestOptions) {\r\n    var globalsNoCallbacks = Object.assign({}, globals);\r\n    ('beforeCreate beforeOpen beforeSend error complete success statusCode').split(' ').forEach(function (callbackName) {\r\n        delete globalsNoCallbacks[callbackName];\r\n    });\r\n    var defaults = Object.assign({\r\n        url: window.location.toString(),\r\n        method: 'GET',\r\n        data: false,\r\n        async: true,\r\n        cache: true,\r\n        user: '',\r\n        password: '',\r\n        headers: {},\r\n        xhrFields: {},\r\n        statusCode: {},\r\n        processData: true,\r\n        dataType: 'text',\r\n        contentType: 'application/x-www-form-urlencoded',\r\n        timeout: 0,\r\n    }, globalsNoCallbacks);\r\n    var options = Object.assign({}, defaults, requestOptions);\r\n    var proceedRequest;\r\n    // Function to run XHR callbacks and events\r\n    function fireCallback(callbackName) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        /*\r\n          Callbacks:\r\n          beforeCreate (options),\r\n          beforeOpen (xhr, options),\r\n          beforeSend (xhr, options),\r\n          error (xhr, status),\r\n          complete (xhr, stautus),\r\n          success (response, status, xhr),\r\n          statusCode ()\r\n        */\r\n        var globalCallbackValue;\r\n        var optionCallbackValue;\r\n        if (globals[callbackName]) {\r\n            globalCallbackValue = globals[callbackName].apply(globals, data);\r\n        }\r\n        if (options[callbackName]) {\r\n            optionCallbackValue = options[callbackName].apply(options, data);\r\n        }\r\n        if (typeof globalCallbackValue !== 'boolean')\r\n            globalCallbackValue = true;\r\n        if (typeof optionCallbackValue !== 'boolean')\r\n            optionCallbackValue = true;\r\n        return (globalCallbackValue && optionCallbackValue);\r\n    }\r\n    // Before create callback\r\n    proceedRequest = fireCallback('beforeCreate', options);\r\n    if (proceedRequest === false)\r\n        return void 0;\r\n    // For jQuery guys\r\n    if (options.type)\r\n        options.method = options.type;\r\n    // Parameters Prefix\r\n    var paramsPrefix = options.url.indexOf('?') >= 0 ? '&' : '?';\r\n    // UC method\r\n    var method = options.method.toUpperCase();\r\n    // Data to modify GET URL\r\n    if ((method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') && options.data) {\r\n        var stringData = void 0;\r\n        if (typeof options.data === 'string') {\r\n            // Should be key=value string\r\n            if (options.data.indexOf('?') >= 0)\r\n                stringData = options.data.split('?')[1];\r\n            else\r\n                stringData = options.data;\r\n        }\r\n        else {\r\n            // Should be key=value object\r\n            stringData = serializeQuery(options.data);\r\n        }\r\n        if (stringData.length) {\r\n            options.url += paramsPrefix + stringData;\r\n            if (paramsPrefix === '?')\r\n                paramsPrefix = '&';\r\n        }\r\n    }\r\n    // JSONP\r\n    if (options.dataType === 'json' && options.url.indexOf('callback=') >= 0) {\r\n        var callbackName_1 = \"jsonp_\" + (Date.now() + ((jsonpRequests += 1)));\r\n        var abortTimeout_1;\r\n        var callbackSplit = options.url.split('callback=');\r\n        var requestUrl = callbackSplit[0] + \"callback=\" + callbackName_1;\r\n        if (callbackSplit[1].indexOf('&') >= 0) {\r\n            var addVars = callbackSplit[1].split('&').filter(function (el) { return el.indexOf('=') > 0; }).join('&');\r\n            if (addVars.length > 0)\r\n                requestUrl += \"&\" + addVars;\r\n        }\r\n        // Create script\r\n        var script_1 = document.createElement('script');\r\n        script_1.type = 'text/javascript';\r\n        script_1.onerror = function onerror() {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('error', null, 'scripterror');\r\n            fireCallback('complete', null, 'scripterror');\r\n        };\r\n        script_1.src = requestUrl;\r\n        // Handler\r\n        window[callbackName_1] = function jsonpCallback(data) {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('success', data);\r\n            script_1.parentNode.removeChild(script_1);\r\n            script_1 = null;\r\n            delete window[callbackName_1];\r\n        };\r\n        document.querySelector('head').appendChild(script_1);\r\n        if (options.timeout > 0) {\r\n            abortTimeout_1 = setTimeout(function () {\r\n                script_1.parentNode.removeChild(script_1);\r\n                script_1 = null;\r\n                fireCallback('error', null, 'timeout');\r\n            }, options.timeout);\r\n        }\r\n        return void 0;\r\n    }\r\n    // Cache for GET/HEAD requests\r\n    if (method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') {\r\n        if (options.cache === false) {\r\n            options.url += paramsPrefix + \"_nocache\" + Date.now();\r\n        }\r\n    }\r\n    // Create XHR\r\n    var xhr = new XMLHttpRequest();\r\n    // Save Request URL\r\n    xhr.requestUrl = options.url;\r\n    xhr.requestParameters = options;\r\n    // Before open callback\r\n    proceedRequest = fireCallback('beforeOpen', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Open XHR\r\n    xhr.open(method, options.url, options.async, options.user, options.password);\r\n    // Create POST Data\r\n    var postData = null;\r\n    if ((method === 'POST' || method === 'PUT' || method === 'PATCH') && options.data) {\r\n        if (options.processData) {\r\n            var postDataInstances = [ArrayBuffer, Blob, Document, FormData];\r\n            // Post Data\r\n            if (postDataInstances.indexOf(options.data.constructor) >= 0) {\r\n                postData = options.data;\r\n            }\r\n            else {\r\n                // POST Headers\r\n                var boundary = \"---------------------------\" + Date.now().toString(16);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    xhr.setRequestHeader('Content-Type', \"multipart/form-data; boundary=\" + boundary);\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader('Content-Type', options.contentType);\r\n                }\r\n                postData = '';\r\n                var data = serializeQuery(options.data);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    data = data.split('&');\r\n                    var newData = [];\r\n                    for (var i = 0; i < data.length; i += 1) {\r\n                        newData.push(\"Content-Disposition: form-data; name=\\\"\" + data[i].split('=')[0] + \"\\\"\\r\\n\\r\\n\" + data[i].split('=')[1] + \"\\r\\n\");\r\n                    }\r\n                    postData = \"--\" + boundary + \"\\r\\n\" + newData.join(\"--\" + boundary + \"\\r\\n\") + \"--\" + boundary + \"--\\r\\n\";\r\n                }\r\n                else if (options.contentType === 'application/json') {\r\n                    postData = JSON.stringify(options.data);\r\n                }\r\n                else {\r\n                    postData = data;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            postData = options.data;\r\n            xhr.setRequestHeader('Content-Type', options.contentType);\r\n        }\r\n    }\r\n    // Additional headers\r\n    if (options.headers) {\r\n        Object.keys(options.headers).forEach(function (headerName) {\r\n            xhr.setRequestHeader(headerName, options.headers[headerName]);\r\n        });\r\n    }\r\n    // Check for crossDomain\r\n    if (typeof options.crossDomain === 'void 0') {\r\n        // eslint-disable-next-line\r\n        options.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(options.url) && RegExp.$2 !== window.location.host;\r\n    }\r\n    if (!options.crossDomain) {\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    }\r\n    if (options.xhrFields) {\r\n        Object.assign(xhr, options.xhrFields);\r\n    }\r\n    var xhrTimeout;\r\n    // Handle XHR\r\n    xhr.onload = function onload() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 0) {\r\n            var responseData = void 0;\r\n            if (options.dataType === 'json') {\r\n                var parseError = void 0;\r\n                try {\r\n                    responseData = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (err) {\r\n                    parseError = true;\r\n                }\r\n                if (!parseError) {\r\n                    fireCallback('success', responseData, xhr.status, xhr);\r\n                }\r\n                else {\r\n                    fireCallback('error', xhr, 'parseerror');\r\n                }\r\n            }\r\n            else {\r\n                responseData = xhr.responseType === 'text' || xhr.responseType === '' ? xhr.responseText : xhr.response;\r\n                fireCallback('success', responseData, xhr.status, xhr);\r\n            }\r\n        }\r\n        else {\r\n            fireCallback('error', xhr, xhr.status);\r\n        }\r\n        if (options.statusCode) {\r\n            if (globals.statusCode && globals.statusCode[xhr.status])\r\n                globals.statusCode[xhr.status](xhr);\r\n            if (options.statusCode[xhr.status])\r\n                options.statusCode[xhr.status](xhr);\r\n        }\r\n        fireCallback('complete', xhr, xhr.status);\r\n    };\r\n    xhr.onerror = function onerror() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        fireCallback('error', xhr, xhr.status);\r\n        fireCallback('complete', xhr, 'error');\r\n    };\r\n    // Timeout\r\n    if (options.timeout > 0) {\r\n        xhr.onabort = function onabort() {\r\n            if (xhrTimeout)\r\n                clearTimeout(xhrTimeout);\r\n        };\r\n        xhrTimeout = setTimeout(function () {\r\n            xhr.abort();\r\n            fireCallback('error', xhr, 'timeout');\r\n            fireCallback('complete', xhr, 'timeout');\r\n        }, options.timeout);\r\n    }\r\n    // Ajax start callback\r\n    proceedRequest = fireCallback('beforeSend', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Send XHR\r\n    xhr.send(postData);\r\n    // Return XHR object\r\n    return xhr;\r\n}\r\nfunction RequestShortcut(method) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    var _a = [], url = _a[0], data = _a[1], success = _a[2], error = _a[3], dataType = _a[4];\r\n    if (typeof args[1] === 'function') {\r\n        url = args[0], success = args[1], error = args[2], dataType = args[3];\r\n    }\r\n    else {\r\n        url = args[0], data = args[1], success = args[2], error = args[3], dataType = args[4];\r\n    }\r\n    [success, error].forEach(function (callback) {\r\n        if (typeof callback === 'string') {\r\n            dataType = callback;\r\n            if (callback === success)\r\n                success = void 0;\r\n            else\r\n                error = void 0;\r\n        }\r\n    });\r\n    dataType = dataType || (method === 'json' || method === 'postJSON' ? 'json' : void 0);\r\n    var requestOptions = {\r\n        url: url,\r\n        method: method === 'post' || method === 'postJSON' ? 'POST' : 'GET',\r\n        data: data,\r\n        success: success,\r\n        error: error,\r\n        dataType: dataType,\r\n    };\r\n    if (method === 'postJSON') {\r\n        Object.assign(requestOptions, {\r\n            contentType: 'application/json',\r\n            processData: false,\r\n            crossDomain: true,\r\n            data: typeof data === 'string' ? data : JSON.stringify(data),\r\n        });\r\n    }\r\n    return Request(requestOptions);\r\n}\r\nObject.assign(Request, {\r\n    get: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['get'].concat(args));\r\n    },\r\n    post: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['post'].concat(args));\r\n    },\r\n    json: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    getJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    postJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['postJSON'].concat(args));\r\n    },\r\n});\r\nRequest.setup = function setup(options) {\r\n    if (options.type && !options.method) {\r\n        Object.assign(options, { method: options.type });\r\n    }\r\n    Object.assign(globals, options);\r\n};\r\nfunction serializeQuery(params, prefix) {\r\n    var key = Object.keys(params);\r\n    for (var i = 0; i < key.length; i++) {\r\n      var value = params[key[i]];\r\n      if (params.constructor === Array)\r\n          key[i] += prefix + \"[]\";\r\n      else if (params.constructor === Object)\r\n          key[i] = (prefix ? prefix + \"[\" + key[i] + \"]\" : key[i]);\r\n\r\n      if (typeof value === 'object')\r\n          key[i] = serializeQuery(value, key[i]);\r\n      else\r\n          key[i] = key[i] + \"=\" + encodeURIComponent(value);\r\n    }\r\n    return key.join('&');\r\n}\r\n$.ajax = sf.ajax = Request;",";(function(){\r\nvar self = sf.url = function(){\r\n\t// Hashes\r\n\tvar hashes_ = '';\r\n\tfor(var keys in hashes)\r\n\t\thashes_ += '#'+keys+hashes[keys];\r\n\r\n\tvar data_ = '|'+self.data.join('|');\r\n\r\n\treturn self.paths + hashes_ + (data_.length !== 1 ? data_ : '');\r\n}\r\n\r\nvar hashes = self.hashes = {};\r\nself.data = {};\r\nself.paths = '/';\r\n\r\n// Push into latest history\r\nself.push = function(){\r\n\twindow.history.pushState((window.history.state || 0) + 1, '', self());\r\n}\r\n\r\n// Remove next history and change current history\r\nself.replace = function(){\r\n\twindow.history.replaceState(window.history.state, '', self());\r\n}\r\n\r\nself.parse = function(url){\r\n\tif(url !== void 0){\r\n\t\tvar data = {hashes:{}};\r\n\r\n\t\tdata.data = url.split('|');\r\n\t\tvar hashes_ = data.data.shift().split('#');\r\n\r\n\t\tfor (var i = 1; i < hashes_.length; i++) {\r\n\t\t\tvar temp = hashes_[i].split('/');\r\n\t\t\tdata.hashes[temp.shift()] = '/'+temp.join('/');\r\n\t\t}\r\n\r\n\t\t// Paths\r\n\t\tdata.paths = url.split('#')[0];\r\n\t\treturn data;\r\n\t}\r\n\r\n\tself.data = window.location.hash.split('|');\r\n\tvar hashes_ = self.data.shift().split('#');\r\n\r\n\tfor (var i = 1; i < hashes_.length; i++) {\r\n\t\tvar temp = hashes_[i].split('/');\r\n\t\thashes[temp.shift()] = '/'+temp.join('/');\r\n\t}\r\n\r\n\t// Paths\r\n\tself.paths = window.location.pathname;\r\n}\r\n\r\nself.parse();\r\n\r\n})();","return sf;\r\n\r\n// ===== Module End =====\r\n})));","sf.events = (function(){\r\n\tvar callbacks = {};\r\n\tvar callbacksWhen = {};\r\n\r\n\tfunction Events(name, run){\r\n\t\tif(name.constructor === Array){\r\n\t\t\tfor (var i = 0; i < name.length; i++)\r\n\t\t\t\tEvents(name[i], run);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(Events[name] === void 0){\r\n\t\t\tvar active = void 0;\r\n\r\n\t\t\tif(run !== undefined && run.constructor === Boolean)\r\n\t\t\t\tactive = run;\r\n\r\n\t\t\tif(active !== void 0){\r\n\t\t\t\tObject.defineProperty(Events, name, {\r\n\t\t\t\t\tenumerable:false,\r\n\t\t\t\t\tconfigurable:true,\r\n\t\t\t\t\tget:function(){return active},\r\n\t\t\t\t\tset:function(val){\r\n\t\t\t\t\t\tif(active === val)\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\tvar ref = callbacksWhen[name];\r\n\t\t\t\t\t\tif(ref !== void 0){\r\n\t\t\t\t\t\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\t\tref[i].apply(null, arguments);\r\n\t\t\t\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tdelete callbacksWhen[name];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reset to default\r\n\t\t\t\t\t\tObject.defineProperty(Events, name, {\r\n\t\t\t\t\t\t\tenumerable:false,\r\n\t\t\t\t\t\t\tconfigurable:true,\r\n\t\t\t\t\t\t\twritable:true,\r\n\t\t\t\t\t\t\tvalue:val\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tEvents[name] = function(){\r\n\t\t\t\t\tfor (var i = 0; i < callback.length; i++) {\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tcallback[i].apply(null, arguments);\r\n\t\t\t\t\t\t\tif(callback[i].once === true)\r\n\t\t\t\t\t\t\t\tcallback[i].splice(i--, 1);\r\n\t\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callbacks[name] === void 0)\r\n\t\t\t\t\tcallbacks[name] = [];\r\n\r\n\t\t\t\tvar callback = callbacks[name];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(run && run.constructor === Function){\r\n\t\t\trun(Events[name]);\r\n\t\t\trun = null;\r\n\t\t}\r\n\t}\r\n\r\n\tEvents.when = function(name, callback){\r\n\t\tif(Events[name] === true)\r\n\t\t\treturn callback();\r\n\r\n\t\tif(callbacksWhen[name] === void 0)\r\n\t\t\tcallbacksWhen[name] = [];\r\n\r\n\t\tcallbacksWhen[name].push(callback);\r\n\t}\r\n\r\n\tEvents.once = function(name, callback){\r\n\t\tcallback.once = true;\r\n\t\tcallbacks[name].push(callback);\r\n\t}\r\n\r\n\tEvents.on = function(name, callback){\r\n\t\tif(callbacks[name] === void 0)\r\n\t\t\tcallbacks[name] = [];\r\n\r\n\t\tif(callbacks[name].length >= 10)\r\n\t\t\tconsole.warn(\"Events have more than 10 callback, there may possible memory leak.\");\r\n\r\n\t\tcallbacks[name].push(callback);\r\n\t}\r\n\r\n\tEvents.off = function(name, callback){\r\n\t\tif(callbacks[name] === void 0)\r\n\t\t\treturn callbacks[name].length = 0;\r\n\r\n\t\tvar i = callbacks[name].indexOf(callback);\r\n\t\tif(i === -1) return;\r\n\t\tcallbacks[name].splice(i, 1);\r\n\t}\r\n\r\n\treturn Events;\r\n})();",";(function(){\r\n\r\nvar self = sf.lang = function(el){\r\n\tsf.lang.init(el);\r\n}\r\n\r\nself.list = {};\r\nself.default = 'en';\r\nself.serverURL = false;\r\nself.interpolate = {}\r\n\r\nself.add = function(lang, obj){\r\n\tif(self.list[lang] === void 0)\r\n\t\tself.list[lang] = {};\r\n\r\n\tdiveFill(self.list[lang], obj);\r\n}\r\n\r\nvar interpolate_ = /{(.*?)}/;\r\nfunction interpolate(text, obj){\r\n\treturn text.replace(interpolate_, function(full, match){\r\n\t\tif(obj[match] !== void 0)\r\n\t\t\treturn obj[match].constructor === Function ? obj[match]() : obj[match];\r\n\r\n\t\tif(self.interpolate[match] !== void 0)\r\n\t\t\treturn self.interpolate[match].constructor === Function ? self.interpolate[match]() : self.interpolate[match];\r\n\r\n\t\treturn full;\r\n\t});\r\n}\r\n\r\nvar waiting = false;\r\nvar pendingCallback = [];\r\nself.get = function(path, obj, callback){\r\n\tvar value = diveObject(self.list[self.default], path);\r\n\r\n\tif(obj !== void 0 && obj.constructor === Function){\r\n\t\tcallback = obj;\r\n\t\tobj = void 0;\r\n\t}\r\n\r\n\tif(value !== void 0){\r\n\t\tif(obj)\r\n\t\t\tvalue = interpolate(value, obj);\r\n\r\n\t\tif(!callback)\r\n\t\t\treturn value;\r\n\t\treturn callback(value);\r\n\t}\r\n\r\n\tif(pending === false)\r\n\t\tpending = {};\r\n\r\n\tdiveObject(pending, path, 1);\r\n\r\n\tif(callback){\r\n\t\tcallback.path = path;\r\n\t\tpendingCallback.push(callback);\r\n\t}\r\n\r\n\t// Request to server after 500ms\r\n\t// To avoid multiple request\r\n\tclearTimeout(waiting);\r\n\twaiting = setTimeout(function(){\r\n\t\tif(activeRequest !== false)\r\n\t\t\tactiveRequest.abort();\r\n\r\n\t\tactiveRequest = sf.ajax({\r\n\t\t\turl:self.serverURL,\r\n\t\t\tdata:{\r\n\t\t\t\tlang:self.default,\r\n\t\t\t\tpaths:JSON.stringify(pending)\r\n\t\t\t},\r\n\t\t\tdataType:'json',\r\n\t\t\tmethod:'POST',\r\n\t\t\tsuccess:function(obj){\r\n\t\t\t\tpending = false;\r\n\t\t\t\tself.add(self.default, obj);\r\n\r\n\t\t\t\tvar defaultLang = self.list[self.default];\r\n\t\t\t\tfor (var i = 0; i < pendingCallback.length; i++) {\r\n\t\t\t\t\tpendingCallback[i](diveObject(defaultLang, pendingCallback[i].path));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpendingCallback.length = 0;\r\n\t\t\t},\r\n\t\t\terror:self.onError,\r\n\t\t});\r\n\t}, 500);\r\n\r\n\treturn path;\r\n}\r\n\r\nfunction diveFill(obj1, obj2){\r\n\tvar keys = Object.keys(obj2);\r\n\tfor (var i = 0; i < keys.length; i++) {\r\n\t\tif(obj1[keys[i]] === void 0)\r\n\t\t\tobj1[keys[i]] = obj2[keys[i]];\r\n\t\telse\r\n\t\t\tdiveFill(obj1[keys[i]], obj2[keys[i]]);\r\n\t}\r\n}\r\n\r\nvar pending = false;\r\nvar pendingElement = [];\r\nvar activeRequest = false;\r\n\r\nself.onError = false;\r\n\r\nself.init = function(el){\r\n\tvar list = el.querySelectorAll('[sf-lang]');\r\n\r\n\tif(self.list[self.default] === void 0)\r\n\t\tself.list[self.default] = {};\r\n\r\n\trefreshLang(list);\r\n\r\n\tif(pending !== false && self.serverURL !== false){\r\n\t\tif(activeRequest !== false)\r\n\t\t\tactiveRequest.abort();\r\n\r\n\t\tactiveRequest = sf.ajax({\r\n\t\t\turl:self.serverURL,\r\n\t\t\tdata:{\r\n\t\t\t\tlang:self.default,\r\n\t\t\t\tpaths:JSON.stringify(pending)\r\n\t\t\t},\r\n\t\t\tdataType:'json',\r\n\t\t\tmethod:'POST',\r\n\t\t\tsuccess:function(obj){\r\n\t\t\t\tpending = false;\r\n\r\n\t\t\t\tself.add(self.default, obj);\r\n\t\t\t\trefreshLang(pendingElement, true);\r\n\t\t\t},\r\n\t\t\terror:self.onError,\r\n\t\t});\r\n\t}\r\n\r\n\tif(pending !== false && self.serverURL === false)\r\n\t\tconsole.warn(\"Some language was not found, and the serverURL was set to false\");\r\n}\r\n\r\nfunction diveObject(obj, path, setValue){\r\n\tvar parts = path.split('.');\r\n\tfor (var i = 0, n = parts.length-1; i < parts.length; i++) {\r\n\t\tvar key = parts[i];\r\n\r\n\t\tif(setValue === void 0){ // get only\r\n\t    \tif(obj[key] === void 0)\r\n\t    \t\treturn;\r\n\r\n\t    \tobj = obj[key];\r\n\t\t}\r\n\t\telse{ // set if undefined\r\n\t\t\tif(i === n){\r\n\t\t\t\tobj[key] = setValue;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse obj = obj[key] = {};\r\n\t\t}\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\nfunction refreshLang(list, noPending){\r\n\tvar defaultLang = self.list[self.default];\r\n\r\n\tfor (var i = list.length-1; i >= 0; i--) {\r\n\t\tif(list[i].sf_lang === self.default && noPending === true){\r\n\t\t\tlist.splice(i, 1);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tvar elem = list[i];\r\n\t\tvar target = elem.getAttribute('sf-lang');\r\n\t\tvar value = diveObject(defaultLang, target);\r\n\r\n\t\tif(value === void 0){\r\n\t\t    if(noPending !== true){\r\n\t\t\t\tif(pending === false)\r\n\t\t\t    \tpending = {};\r\n\r\n\t\t\t    diveObject(pending, target, 1);\r\n\t\t\t\tpendingElement.push(elem);\r\n\t\t    }\r\n\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif(noPending === true)\r\n\t\t\tlist.splice(i, 1);\r\n\r\n\t\tif(elem.tagName === 'INPUT')\r\n\t\t\telem.placeholder = value;\r\n\t\telse\r\n\t\t\telem.textContent = value;\r\n\t\telem.sf_lang = self.default;\r\n\t}\r\n}\r\n\r\n})();",";(function(){\r\nvar gEval = routerEval;\r\nrouterEval = void 0; // Avoid this function being invoked out of scope\r\n\r\nvar rejectResponse = /<html/;\r\n\r\n// Save reference\r\nvar aHashes = sf.url.hashes;\r\nvar slash = '/';\r\n\r\nvar routingError = false;\r\nvar routeDirection = 1;\r\nvar historyIndex = (window.history.state || 1);\r\n\r\nvar disableHistoryPush = false;\r\n\r\nwindow.addEventListener('popstate', function(ev){\r\n\t// Don't continue if the last routing was error\r\n\t// Because the router was trying to getting back\r\n\tif(routingError){\r\n\t\troutingError = false;\r\n\t\thistoryIndex -= routeDirection;\r\n\t\treturn;\r\n\t}\r\n\r\n\tdisableHistoryPush = true;\r\n\r\n\t// Reparse URL\r\n\tsf.url.parse();\r\n\tvar list = self.list;\r\n\r\n\tif(window.history.state >= historyIndex)\r\n\t\trouteDirection = 1;\r\n\telse\r\n\t\trouteDirection = -1;\r\n\r\n\thistoryIndex += routeDirection;\r\n\r\n\t// console.warn('historyIndex', historyIndex, window.history.state, routeDirection > 0 ? 'forward' : 'backward');\r\n\r\n\t// For root path\r\n\tlist[slash].goto(sf.url.paths);\r\n\r\n\t// For hash path\r\n\tvar keys = Object.keys(aHashes);\r\n\tfor (var i = 0; i < keys.length; i++) {\r\n\t\tvar temp = list[keys[i]];\r\n\t\tif(temp === void 0) continue;\r\n\r\n\t\ttemp.goto(aHashes[keys[i]]);\r\n\t}\r\n\r\n\tdisableHistoryPush = false;\r\n}, false);\r\n\r\n// Listen to every link click\r\nsf(function(){\r\n\t$.on(document.body, 'click', 'a[href]', function(ev){\r\n\t\tev.preventDefault();\r\n\r\n\t\tvar elem = ev.target;\r\n\t\tvar attr = elem.getAttribute('href');\r\n\r\n\t\tif(attr[0] === '@'){ // ignore\r\n\t\t\tvar target = elem.getAttribute('target');\r\n\t\t\tif(target)\r\n\t\t\t\twindow.open(attr.slice(1), target);\r\n\t\t\telse window.location = attr.slice(1);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Make sure it's from current origin\r\n\t\tvar path = elem.href.replace(window.location.origin, '');\r\n\t\tif(path.indexOf('//') !== -1)\r\n\t\t\treturn;\r\n\r\n\t\tself.goto(attr);\r\n\t});\r\n});\r\n\r\nvar cachedURL = {};\r\n\r\ninternal.router = {};\r\ninternal.router.parseRoutes = function(obj_, selectorList){\r\n\tvar routes = [];\r\n\tvar pattern = /\\/:([^/]+)/;\r\n\tvar sep = /\\-/;\r\n    var knownKeys = /path|url|templateURL|html|on|routes|beforeRoute|defaultData/;\r\n\r\n\tfunction addRoutes(obj, addition, selector, parent){\r\n\t\tif(selector !== '')\r\n\t\t\tselector += ' ';\r\n\r\n\t\tfor(var i = 0; i < obj.length; i++){\r\n            var ref = obj[i];\r\n\t\t\tvar current = addition+ref.path;\r\n\r\n\t\t\tif(ref.routes !== void 0){\r\n\t\t\t\taddRoutes(ref.routes, current, selector, parent);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tcurrent = current.split('//').join('/');\r\n\r\n\t\t\tvar keys = [];\r\n\t\t\tvar regex = current.replace(pattern, function(full, match){\r\n\t\t\t\tkeys.push(match);\r\n\t\t\t\treturn '/([^/]+)';\r\n\t\t\t});\r\n\t\t\tvar route = RegExp('^' + regex + '$');\r\n\r\n\t\t\tif(ref.url !== void 0)\r\n\t\t\t\troute.url = ref.url;\r\n\r\n\t\t\telse if(ref.templateURL !== void 0)\r\n\t\t\t\troute.templateURL = ref.templateURL;\r\n\r\n\t\t\telse if(ref.html !== void 0){\r\n\t\t\t\t// Create new element\r\n\t\t\t\tvar dom = route.html = document.createElement('sf-page-view');\r\n\r\n\t\t\t\tif(ref.html.constructor === String)\r\n\t\t\t\t\tdom.innerHTML = ref.html;\r\n\t\t\t\telse\r\n\t\t\t\t\tdom.appendChild(ref.html);\r\n\r\n\t\t\t\tdom.classList.add('page-prepare');\r\n\t\t\t\tdom.style.display = 'none';\r\n\t\t\t}\r\n\r\n\t\t\troute.keys = keys;\r\n\t\t\troute.beforeRoute = ref.beforeRoute;\r\n\t\t\troute.defaultData = ref.defaultData || {};\r\n\r\n\t\t\tif(selector !== ''){\r\n\t\t\t\troute.selector = selectorList.indexOf(selector);\r\n\r\n\t\t\t\tif(route.selector === -1){\r\n\t\t\t\t\troute.selector = selectorList.length;\r\n\t\t\t\t\tselectorList.push(selector.trim());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(parent !== void 0)\r\n\t\t\t\troute.parent = parent;\r\n\r\n\t\t\tif(ref.on !== void 0)\r\n\t\t\t\troute.on = ref.on;\r\n\r\n\t\t\tvar hasChild = [];\r\n\r\n            var keys = Object.keys(ref);\r\n            for(var a = 0; a < keys.length; a++){\r\n                if(knownKeys.test(keys[a]))\r\n                  continue;\r\n\r\n\t\t\t\thasChild.push(keys[a]);\r\n\t\t\t\taddRoutes(ref[keys[a]], current, keys[a], route);\r\n                break;\r\n            }\r\n\r\n            if(hasChild.length !== 0){\r\n            \troute.hasChild = hasChild;\r\n            \troute.forChild = RegExp(regex);\r\n            }\r\n\r\n\t\t\troutes.push(route);\r\n\t\t}\r\n\t}\r\n\r\n    addRoutes(obj_, '', '');\r\n\treturn routes;\r\n}\r\n\r\ninternal.router.findRoute = function(url){\r\n\tfor(var i=0; i<this.length; i++){\r\n\t\tvar found = url.match(this[i]);\r\n\t\tif(found !== null){\r\n\t\t\tvar keys = this[i].keys;\r\n\t\t\tif(keys !== void 0){\r\n\t\t\t\tvar data = this[i].data = {};\r\n\t\t\t\tfound.shift();\r\n\r\n\t\t\t\tfor (var a = 0; a < keys.length; a++) {\r\n\t\t\t\t\tdata[keys[a]] = found[a];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn this[i];\r\n\t\t}\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\nvar self = sf.views = function View(selector, name){\r\n\tif(name === void 0)\r\n\t\tname = slash;\r\n\r\n\tvar self = sf.views.list[name] = this;\r\n\tvar pendingAutoRoute = void 0;\r\n\r\n\t// Init current URL as current View Path\r\n\tif(name === slash)\r\n\t\tself.currentPath = sf.url.paths;\r\n\telse{\r\n\t\tself.currentPath = '';\r\n\t\tpendingAutoRoute = aHashes[name] || void 0;\r\n\t}\r\n\r\n\tvar initialized = false;\r\n\tvar selectorElement = {};\r\n\r\n\tself.lastPath = '/';\r\n\tself.currentDOM = null;\r\n\tself.lastDOM = null;\r\n\tself.relatedDOM = [];\r\n\tself.data = void 0;\r\n\r\n\tself.maxCache = 2;\r\n\r\n\tvar rootDOM = {};\r\n\tself.selector = function(selector_, isChild){\r\n\t\tinitialized = true;\r\n\r\n\t\tvar DOM = (isChild || (rootDOM.isConnected ? rootDOM : document)).querySelector(selector_ || selector);\r\n\r\n\t\tif(!DOM) return false;\r\n\r\n\t\tif(DOM.viewInitialized)\r\n\t\t\treturn false;\r\n\r\n\t\t// Create listener for link click\r\n\t\tif(DOM){\r\n\t\t\tif(selector_)\r\n\t\t\t\tselector = selector_;\r\n\r\n\t\t\t// Bring the content to an sf-page-view element\r\n\t\t\tif(DOM.childNodes.length !== 0){\r\n\t\t\t\tif(DOM.childNodes.length === 1 && DOM.firstChild.nodeName === '#text' && DOM.firstChild.textContent.trim() === ''){\r\n\t\t\t\t\tvar temp = null;\r\n\t\t\t\t\tDOM.firstChild.remove();\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tvar temp = document.createElement('sf-page-view');\r\n\t\t\t\t\tDOM.insertBefore(temp, DOM.firstChild);\r\n\r\n\t\t\t\t\tfor (var i = 1, n = DOM.childNodes.length; i < n; i++) {\r\n\t\t\t\t\t\ttemp.appendChild(DOM.childNodes[1]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.routePath = self.currentPath;\r\n\t\t\t\t\ttemp.routeCached = routes.findRoute(temp.routePath);\r\n\t\t\t\t\ttemp.classList.add('page-current');\r\n\t\t\t\t\tself.relatedDOM.push(temp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse var temp = null;\r\n\r\n\t\t\tDOM.viewInitialized = true;\r\n\r\n\t\t\tif(!isChild){\r\n\t\t\t\tself.currentDOM = temp;\r\n\t\t\t\trootDOM = DOM;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tselectorElement[selector_] = DOM;\r\n\t\t\t\treturn DOM;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n    var selectorList = [selector];\r\n\tvar routes = [];\r\n\troutes.findRoute = internal.router.findRoute;\r\n\r\n\tinternal.router.enabled = true;\r\n\r\n\tvar onEvent = {\r\n\t\t'routeStart':[],\r\n\t\t'routeFinish':[],\r\n\t\t'routeCached':[],\r\n\t\t'routeError':[]\r\n\t};\r\n\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event] === void 0)\r\n\t\t\treturn console.error(\"Event '\"+event+\"' was not exist\");\r\n\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\tself.addRoute = function(obj){\r\n\t\troutes.push(...internal.router.parseRoutes(obj, selectorList));\r\n\r\n\t\tif(!initialized){\r\n\t\t\tself.selector();\r\n\r\n\t\t\tif(name === slash && !rootDOM.childElementCount){\r\n\t\t\t\tvar target = self.currentPath;\r\n\t\t\t\tself.currentPath = '';\r\n\t\t\t\tself.goto(target);\r\n\t\t\t}\r\n\r\n\t\t\tif(pendingAutoRoute !== void 0){\r\n\t\t\t\tself.goto(pendingAutoRoute);\r\n\t\t\t\tpendingAutoRoute = void 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar RouterLoading = false; // xhr reference if the router still loading\r\n\r\n\tfunction routeError_(xhr, data){\r\n\t\tif(xhr.aborted) return;\r\n\t\troutingError = true;\r\n\r\n\t\tRouterLoading = false;\r\n\t\tfor (var i = 0; i < onEvent['routeError'].length; i++) {\r\n\t\t\tonEvent['routeError'][i](xhr.status, data);\r\n\t\t}\r\n\r\n\t\twindow.history.go(routeDirection * -1);\r\n\t}\r\n\r\n\tvar pageViewNodeName = 'SF-PAGE-VIEW';\r\n\tfunction toBeShowed(element, event, path, data){\r\n\t\tvar relatedPage = [element];\r\n\r\n\t\tvar parent = element.parentElement;\r\n\t\twhile(parent !== rootDOM && parent !== null){\r\n\t\t\tif(parent.nodeName === pageViewNodeName)\r\n\t\t\t\trelatedPage.unshift(parent);\r\n\r\n\t\t\tparent = parent.parentElement;\r\n\t\t}\r\n\r\n\t\tvar lastSibling = void 0;\r\n\t\tvar parentSimilarity = void 0;\r\n\r\n\t\tfor (var i = 0; i < self.relatedDOM.length; i++) {\r\n\t\t\tif(relatedPage.indexOf(self.relatedDOM[i]) === -1){\r\n\t\t\t\tif(lastSibling === void 0){\r\n\t\t\t\t\tlastSibling = self.relatedDOM[i];\r\n\t\t\t\t\tparentSimilarity = lastSibling.parentElement;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// self.relatedDOM[i].classList.add('page-hidden');\r\n\t\t\t\tself.relatedDOM[i].classList.remove('page-current');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar showedSibling = void 0;\r\n\t\tfor (var i = 0; i < relatedPage.length; i++) {\r\n\t\t\tif(showedSibling === void 0 && relatedPage[i].parentElement === parentSimilarity)\r\n\t\t\t\tshowedSibling = relatedPage[i];\r\n\r\n\t\t\trelatedPage[i].classList.add('page-current');\r\n\t\t\t// relatedPage[i].classList.remove('page-hidden');\r\n\t\t}\r\n\r\n\t\tself.showedSibling = showedSibling;\r\n\t\tself.lastSibling = lastSibling;\r\n\r\n\t\telement.classList.add('page-current');\r\n\t\t// element.classList.remove('page-hidden');\r\n\r\n\t\tself.relatedDOM = relatedPage;\r\n\t}\r\n\r\n\tself.goto = function(path, data, method, _callback){\r\n\t\tif(self.currentPath === path)\r\n\t\t\treturn;\r\n\r\n\t\t// Get template URL\r\n\t\tvar url = routes.findRoute(path);\r\n\t\tif(!url) return;\r\n\r\n\t\tif(url.beforeRoute !== void 0)\r\n\t\t\turl.beforeRoute(url.data);\r\n\r\n\t\tif(name === slash)\r\n\t\t\tsf.url.paths = path;\r\n\t\telse\r\n\t\t\taHashes[name] = path;\r\n\r\n\t\t// This won't trigger popstate event\r\n\t\tif(!disableHistoryPush && !_callback)\r\n\t\t\tsf.url.push();\r\n\r\n\t\t// Check if view was exist\r\n\t\tif(!rootDOM.isConnected){\r\n\t\t\tif(rootDOM.nodeType !== void 0)\r\n\t\t\t\trootDOM = {};\r\n\r\n\t\t\tif(!self.selector());\r\n\t\t\t\treturn console.error(name, \"can't route to\", path, \"because element with selector '\"+selector+\"' was not found\");\r\n\t\t}\r\n\r\n\t\t// Abort other router loading if exist\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\r\n\t\t// Return if the cache was exist\r\n\t\tif(tryCache(path)) return true;\r\n\r\n\t\tfor (var i = 0; i < onEvent['routeStart'].length; i++) {\r\n\t\t\tif(onEvent['routeStart'][i](self.currentPath, path)) return;\r\n\t\t}\r\n\r\n\t\tfunction insertLoadedElement(DOMReference, dom, parentElement, pendingShowed){\r\n\t\t\tif(parentElement)\r\n\t\t\t\tdom.parentPageElement = parentElement;\r\n\r\n\t\t\tdom.routerData = null;\r\n\t\t\tif(dom.firstChild.nodeName === '#comment' && dom.firstChild.textContent.indexOf(' SF-View-Data') === 0){\r\n\t\t\t\tdom.routerData = JSON.parse(dom.firstChild.textContent.slice(14));\r\n\t\t\t\tdom.firstChild.remove();\r\n\t\t\t}\r\n\r\n\t\t\t// Let page script running first\r\n\t\t\tDOMReference.insertAdjacentElement('beforeend', dom);\r\n\t\t\tself.data = url.data;\r\n\r\n\t\t\ttry{\r\n\t\t\t\tif(self.dynamicScript !== false){\r\n\t\t\t\t\tvar scripts = dom.getElementsByTagName('script');\r\n\t\t\t\t\tfor (var i = 0; i < scripts.length; i++) {\r\n\t\t\t\t\t    gEval(scripts[i].text);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Parse the DOM data binding\r\n\t\t\t\tsf.model.init(dom);\r\n\t\t\t}catch(e){\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t\tdom.remove();\r\n\t\t\t\treturn routeError_({status:0});\r\n\t\t\t}\r\n\r\n\t\t\tself.data = url.data;\r\n\r\n\t\t\tif(url.on !== void 0 && url.on.coming)\r\n\t\t\t\turl.on.coming(url.data);\r\n\r\n\t\t\tdom.removeAttribute('style');\r\n\t\t\ttoBeShowed(dom);\r\n\r\n\t\t\tvar tempDOM = self.currentDOM;\r\n\t\t\tself.currentDOM = dom;\r\n\r\n\t\t\t// Trigger loaded event\r\n\t\t\tvar event = onEvent['routeFinish'];\r\n\t\t\tfor (var i = 0; i < event.length; i++) {\r\n\t\t\t\tif(event[i](self.currentPath, path, url.data)) return;\r\n\t\t\t}\r\n\r\n\t\t\tif(pendingShowed !== void 0)\r\n\t\t\t\tself.relatedDOM.push(...pendingShowed);\r\n\r\n\t\t\tif(tempDOM !== null){\r\n\t\t\t\tself.lastPath = self.currentPath;\r\n\r\n\t\t\t\t// Old route\r\n\t\t\t\tif(tempDOM.routeCached.on !== void 0 && tempDOM.routeCached.on.leaving)\r\n\t\t\t\t\ttempDOM.routeCached.on.leaving();\r\n\r\n\t\t\t\tself.lastDOM = tempDOM;\r\n\t\t\t}\r\n\r\n\t\t\t// Save current URL\r\n\t\t\tself.currentPath = path;\r\n\t\t\tdom.routeCached = url;\r\n\t\t\tdom.routePath = path;\r\n\r\n\t\t\tdom.classList.remove('page-prepare');\r\n\t\t\troutingError = false;\r\n\r\n\t\t\t// Clear old cache\r\n\t\t\tvar parent = self.currentDOM.parentNode;\r\n\t\t\tfor (var i = parent.childElementCount - self.maxCache - 1; i >= 0; i--) {\r\n\t\t\t\tparent.firstElementChild.remove();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar afterDOMLoaded = function(dom){\r\n\t\t\tif(url.selector === void 0)\r\n\t\t\t\tvar DOMReference = rootDOM;\r\n\r\n\t\t\telse{ // Get element from selector\r\n\t\t\t\tvar DOMReference = selectorElement[selectorList[url.selector]];\r\n\t\t\t\tif(!DOMReference || !DOMReference.isConnected){\r\n\t\t\t\t\tif(url.parent === void 0){\r\n\t\t\t\t\t\tdom.remove();\r\n\t\t\t\t\t\treturn routeError_({status:0});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\t// Try to load parent router first\r\n\t\t\t\t\t\tvar newPath = path.match(url.parent.forChild)[0];\r\n\t\t\t\t\t\treturn self.goto(newPath, false, method, function(parentElement){\r\n\t\t\t\t\t\t\tinsertLoadedElement(selectorElement[selectorList[url.selector]], dom, parentElement);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(url.hasChild){\r\n\t\t\t\tvar pendingShowed = [];\r\n\t\t\t\tfor (var i = 0; i < url.hasChild.length; i++) {\r\n\t\t\t\t\tselectorElement[url.hasChild[i]] = self.selector(url.hasChild[i], dom);\r\n\t\t\t\t\tvar tempPageView = selectorElement[url.hasChild[i]].firstElementChild;\r\n\r\n\t\t\t\t\tif(tempPageView)\r\n\t\t\t\t\t\tpendingShowed.unshift(tempPageView);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(pendingShowed.length === 0)\r\n\t\t\t\t\tpendingShowed = void 0;\r\n\t\t\t}\r\n\t\t\telse var pendingShowed = void 0;\r\n\r\n\t\t\tinsertLoadedElement(DOMReference, dom, false, pendingShowed);\r\n\t\t\tif(_callback) _callback(dom);\r\n\t\t}\r\n\r\n\t\t//(url.url || path)\r\n\t\tif(url.templateURL !== void 0 && cachedURL[url.templateURL] !== void 0){\r\n\t\t\tafterDOMLoaded(cachedURL[url.templateURL].cloneNode(true));\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif(url.html){\r\n\t\t\tafterDOMLoaded(url.html.cloneNode(true));\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tRouterLoading = sf.ajax({\r\n\t\t\turl:window.location.origin + (url.templateURL || url.url || path),\r\n\t\t\tmethod:method || 'GET',\r\n\t\t    data:Object.assign(data || url.defaultData, {\r\n\t\t        _sf_view:url.selector === void 0 ? selector : selectorList[url.selector].split(' ').pop()\r\n\t\t    }),\r\n\t\t\tsuccess:function(html_content){\r\n\t\t\t\tif(rejectResponse.test(html_content)){\r\n\t\t\t\t\tconsole.error(\"Views request was received <html> while it was dissalowed. Please check http response from Network Tab.\");\r\n\t\t\t\t\treturn routeError_(1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create new element\r\n\t\t\t\tvar dom = document.createElement('sf-page-view');\r\n\t\t\t\tdom.innerHTML = html_content;\r\n\t\t\t\tdom.classList.add('page-prepare');\r\n\t\t\t\tdom.style.display = 'none';\r\n\r\n\t\t\t\tif(url.templateURL !== void 0)\r\n\t\t\t\t\tcachedURL[url.templateURL] = dom.cloneNode(true);\r\n\r\n\t\t\t\tafterDOMLoaded(dom);\r\n\t\t\t},\r\n\t\t\terror:routeError_\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Use to cache if exist\r\n\tfunction tryCache(path){\r\n\t\tvar cachedDOM = false;\r\n\r\n\t\tfunction findDOM(dom){\r\n\t\t\tif(dom === null)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tvar childs = dom.children;\r\n\t\t\tfor (var i = 0; i < childs.length; i++) {\r\n\t\t\t\tif(childs[i].routePath === path){\r\n\t\t\t\t\tcachedDOM = childs[i];\r\n\t\t\t\t\t// console.warn('cache found for', path, childs[i]);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif(findDOM(rootDOM) === false)\r\n\t\t\tfor (var i = 0; i < selectorList.length; i++) {\r\n\t\t\t\tif(findDOM(rootDOM.querySelector(selectorList[i])))\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\tif(cachedDOM === false)\r\n\t\t\treturn false;\r\n\r\n\t\tif(self.currentDOM.routeCached.on !== void 0 && self.currentDOM.routeCached.on.leaving)\r\n\t\t\tself.currentDOM.routeCached.on.leaving();\r\n\r\n\t\tself.currentDOM = cachedDOM;\r\n\r\n\t\tif(self.currentDOM.routeCached.on !== void 0 && self.currentDOM.routeCached.on.coming)\r\n\t\t\tself.currentDOM.routeCached.on.coming();\r\n\r\n\t\ttoBeShowed(cachedDOM);\r\n\r\n\t\tvar event = onEvent['routeCached'];\r\n\t\tfor (var i = 0; i < event.length; i++) {\r\n\t\t\tif(event[i](self.currentPath, self.lastPath)) return;\r\n\t\t}\r\n\r\n\t\t// Trigger reinit for the model\r\n\t\tvar reinitList = self.currentDOM.querySelectorAll('[sf-controller]');\r\n\t\tvar models = sf.model.root;\r\n\t\tfor (var i = 0; i < reinitList.length; i++) {\r\n\t\t\tvar modelName = reinitList[i].getAttribute('sf-controller') || reinitList[i].sf$component;\r\n\t\t\tif(models[modelName].reinit)\r\n\t\t\t\tmodels[modelName].reinit();\r\n\t\t}\r\n\r\n\t\tself.lastPath = self.currentPath;\r\n\t\tself.currentPath = self.currentDOM.routePath;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn self;\r\n}\r\n\r\nself.list = {};\r\nself.goto = function(url){\r\n\tvar parsed = sf.url.parse(url);\r\n\tsf.url.data = parsed.data;\r\n\r\n\tvar ref = self.list[slash];\r\n\tif(ref !== void 0 && ref.currentPath !== parsed.paths && !ref.goto(parsed.paths))\r\n\t\tconsole.error(\"Couldn't navigate to\", parsed.paths, \"because path not found\");\r\n\r\n\tvar hashes = parsed.hashes;\r\n\tfor (var i = 0, view = Object.keys(hashes); i < view.length; i++) {\r\n\t\tref = self.list[view[i]];\r\n\r\n\t\tif(ref !== void 0 && ref.currentPath !== hashes[view[i]])\r\n\t\t\tref.goto(hashes[view[i]]);\r\n\t}\r\n}\r\n\r\n})();","sf.internal.virtual_scroll = new function(){\r\n\tvar self = this;\r\n\tvar scrollingByScript = false;\r\n\r\n\t// before and after\r\n\tself.prepareCount = 4; // 4, 8, 12, 16, ...\r\n\r\n\tself.handle = function(list, targetNode, parentNode){\r\n\t\tvar dynamicList = false;\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvirtual.reset = function(reinitOnly){\r\n\t\t\tvirtual.DOMCursor = 0; // cursor of first element in DOM tree as a cursor\r\n\r\n\t\t\tvirtual.bounding.ceiling = -1;\r\n\t\t\tvirtual.bounding.floor = 0;\r\n\r\n\t\t\tvirtual.vCursor.ceiling = null; // for forward direction\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.firstElementChild; // for backward direction\r\n\r\n\t\t\tvirtual.bounding.initial = virtual.dCursor.ceiling.offsetTop;\r\n\t\t\trefreshScrollBounding(0, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.reinitCursor = function(){\r\n\t\t\tvirtual.vCursor.ceiling = virtual.dom.children[virtual.DOMCursor - 1] || null;\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.children[virtual.DOMCursor] || null;\r\n\t\t}\r\n\r\n\t\tvirtual.reinitScroll = function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.elements = function(){\r\n\t\t\treturn obtainElements(list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.dCursor = { // DOM Cursor\r\n\t\t\tceiling:parentNode.querySelector('.virtual-spacer.ceiling'),\r\n\t\t\tfloor:parentNode.querySelector('.virtual-spacer.floor')\r\n\t\t};\r\n\r\n\t\tvirtual.bounding = {};\r\n\t\tvirtual.vCursor = {};\r\n\r\n\t\tvirtual.reset();\r\n\t\tvirtual.targetNode = parentNode;\r\n\t\tvirtual.scrollHeight = virtual.dCursor.ceiling.nextElementSibling.offsetHeight;\r\n\r\n\t\tvar scroller = parentNode;\r\n\t\tvirtual.destroy = function(){\r\n\t\t\t$.off(scroller, 'scroll');\r\n\t\t\t$.off(parentNode, 'mousedown mouseup');\r\n\t\t\tvirtual.dom.innerHTML = '';\r\n\t\t\toffElementResize(parentNode);\r\n\r\n\t\t\tdelete list.$virtual;\r\n\t\t}\r\n\r\n\t\tvirtual.resetViewport = function(){\r\n\t\t\tvirtual.visibleLength = Math.floor(scroller.clientHeight / virtual.scrollHeight);\r\n\t\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\t\tif(virtual.preparedLength < 18)\r\n\t\t\t\tvirtual.preparedLength = 18;\r\n\t\t}\r\n\r\n\t\tvar pendingFunction = internal.afterModelBinding;\r\n\t\tinternal.afterModelBinding = undefined;\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tif(list.$virtual === undefined) return; // Somewhat it's uninitialized\r\n\r\n\t\t\tscroller = internal.findScrollerElement(parentNode);\r\n\t\t\tscroller.classList.add('sf-scroll-element');\r\n\t\t\tinternal.addScrollerStyle();\r\n\r\n\t\t\tvirtual.resetViewport();\r\n\r\n\t\t\tif(parentNode.classList.contains('sf-list-dynamic')){\r\n\t\t\t\tdynamicList = true;\r\n\t\t\t\tdynamicHeight(list, targetNode, parentNode, scroller);\r\n\t\t\t}\r\n\t\t\telse staticHeight(list, targetNode, parentNode, scroller);\r\n\r\n\t\t\tif(pendingFunction !== undefined){\r\n\t\t\t\tpendingFunction();\r\n\t\t\t\tpendingFunction = undefined;\r\n\t\t\t}\r\n\t\t}, 500);\r\n\t}\r\n\r\n\t// Recommended for a list that have different element height\r\n\tfunction dynamicHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\r\n\t\t\t// Reset virtual spacer height\r\n\t\t\tceilingHeight = 0;\r\n\t\t\tfloorHeight = 0;\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller);\r\n\t\t\tfillViewport();\r\n\t\t}\r\n\r\n\t\t// Insert some element until reach visible height\r\n\t\tfillViewport();\r\n\r\n\t\tvirtual.visibleLength = parentNode.childElementCount - 2;\r\n\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\tif(virtual.preparedLength < 18)\r\n\t\t\tvirtual.preparedLength = 18;\r\n\r\n\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\tvar temp = vCursor.floor;\r\n\t\t\tif(temp === null) break;\r\n\r\n\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t}\r\n\t\tvirtual.DOMCursor = 0;\r\n\r\n\t\tvar ceilingHeight = 0;\r\n\t\tvar floorHeight = 0;\r\n\t\tfunction previousCeiling(){\r\n\t\t\tvar temp = null;\r\n\t\t\tvar resetCeiling = false;\r\n\r\n\t\t\t// Add some element on the ceiling\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\ttemp = virtual.dom.lastElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.ceiling = temp.previousElementSibling;\r\n\t\t\t\tvirtual.DOMCursor--;\r\n\r\n\t\t\t\tceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tif(ceilingHeight > 0)\r\n\t\t\t\t\tceilingHeight -= getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(virtual.DOMCursor < self.prepareCount && !resetCeiling){\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\tresetCeiling = true;\r\n\t\t\t\t\ttemp = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(ceilingHeight < 0 || temp === null)\r\n\t\t\t\tceilingHeight = 0;\r\n\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\t// Remove some element on the floor\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = floor.previousElementSibling;\r\n\t\t\t\tfloorHeight += getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tvCursor.floor = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.floor === null)\r\n\t\t\t\tvCursor.ceiling = virtual.dom.lastElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tfunction fillViewport(){\r\n\t\t\t// Insert some element depend on prepared length\r\n\t\t\tvar length = virtual.preparedLength - (parentNode.childElementCount - 2);\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\ttemp = virtual.dom.firstElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction nextFloor(){\r\n\t\t\tvar temp = null;\r\n\t\t\tfillViewport();\r\n\r\n\t\t\tif(vCursor.floor !== null){\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\t// Add extra element based on prepare count\r\n\t\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\t\ttemp = vCursor.floor;\r\n\t\t\t\t\tif(temp === null) break;\r\n\r\n\t\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\t\tif(floorHeight > 0)\r\n\t\t\t\t\t\tfloorHeight -= getAbsoluteHeight(temp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(floorHeight < 0 || temp === null)\r\n\t\t\t\tfloorHeight = 0;\r\n\r\n\t\t\t// Remove some element on the ceiling\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\t\t\t\tceilingHeight += getAbsoluteHeight(temp);\r\n\t\t\t\tvirtual.DOMCursor++;\r\n\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\telse vCursor.ceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tvCursor.ceiling = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\t\trefreshScrollBounding(0, bounding, list, parentNode);\r\n\r\n\t\tif(virtual.callback_ !== void 0){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript) return;\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tif(scroller.scrollTop < bounding.ceiling){\r\n\t\t\t\t// console.log('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tpreviousCeiling();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\telse if(scroller.scrollTop > bounding.floor){\r\n\t\t\t\t// console.log('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tnextFloor();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\tif(virtual.callback !== void 0 && list.length !== 0){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null &&\r\n\t\t\t\t\tscroller.scrollTop + scroller.clientHeight === scroller.scrollHeight\r\n\t\t\t\t){\r\n\t\t\t\t\tvirtual.callback.hitFloor(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null && scroller.scrollTop === 0){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_ && callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t\tif(scroller.scrollTop === 0 && ceiling.offsetHeight > 10)\r\n\t\t\t\tvirtual.scrollTo(0);\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\t\tonElementResize(parentNode, function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t});\r\n\t}\r\n\r\n\t// Recommended for a list that have similar element height\r\n\tfunction staticHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\r\n\t\t// Insert visible element to dom tree\r\n\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\tif(virtual.dom.firstElementChild === null)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', virtual.dom.firstElementChild);\r\n\t\t}\r\n\r\n\t\tvirtual.refreshVirtualSpacer = refreshVirtualSpacer;\r\n\r\n\t\tfunction refreshVirtualSpacer(cursor){\r\n\t\t\tif(cursor >= self.prepareCount){\r\n\t\t\t\tceiling.style.height = (cursor - self.prepareCount) * virtual.scrollHeight + 'px';\r\n\t\t\t\tfloor.style.height = (list.length - virtual.preparedLength - cursor) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tceiling.style.height = cursor * virtual.scrollHeight + 'px'; //'0px';\r\n\t\t\t\tvar count = (list.length - virtual.preparedLength);\r\n\t\t\t\tfloor.style.height = (count || 0) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\r\n\t\trefreshVirtualSpacer(0);\r\n\t\trefreshScrollBounding(self.prepareCount, bounding, list, parentNode);\r\n\t\tbounding.ceiling = -1;\r\n\r\n\t\tvirtual.offsetTo = function(index){\r\n\t\t\treturn index * virtual.scrollHeight + ceiling.offsetTop;\r\n\t\t}\r\n\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tif(virtual.callback_ !== void 0){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tvar fromCeiling = true;\r\n\t\tvar scrollFocused = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript || scroller.scrollTop >= bounding.ceiling && scroller.scrollTop <= bounding.floor){\r\n\t\t\t\t// Fix chrome scroll anchoring bugs when scrolling at corner\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tif(scroller.scrollTop === 0 || scroller.scrollTop === scroller.scrollHeight - scroller.clientHeight){\r\n\t\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar cursor = Math.floor(scroller.scrollTop / virtual.scrollHeight);\r\n\t\t\tif(cursor + virtual.preparedLength > list.length)\r\n\t\t\t\tcursor = list.length - virtual.preparedLength;\r\n\r\n\t\t\tif(fromCeiling){\r\n\t\t\t\tif(cursor < self.prepareCount*2)\r\n\t\t\t\t\tcursor -= self.prepareCount;\r\n\r\n\t\t\t\t// Fix chrome scroll anchoring bugs\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t}\r\n\t\t\t\tfromCeiling = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cursor < self.prepareCount){\r\n\t\t\t\tcursor = 0;\r\n\t\t\t\tfromCeiling = true;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tvar changes = cursor - virtual.DOMCursor;\r\n\t\t\tif(cursor + changes >= list.length)\r\n\t\t\t\tchanges = cursor + changes - list.length;\r\n\r\n\t\t\tif(changes === 0){ // This should be fixed to improve performance and future bugs\r\n\t\t\t\t//console.warn(\"No changes (The scroll bounding is not correct)\");\r\n\t\t\t\tupdating = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.DOMCursor = cursor;\r\n\r\n\t\t\t// console.log(cursor, changes, bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\t\t\tmoveElementCursor(changes, list);\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\t\t\trefreshScrollBounding(cursor, bounding, list, parentNode);\r\n\t\t\t// console.log('a', bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\r\n\t\t\tif(virtual.callback !== void 0 && list.length !== 0){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null){\r\n\t\t\t\t\tvirtual.callback.hitFloor(cursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(cursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_ && callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\r\n\t\t// For preventing scroll jump if scrolling over than viewport\r\n\t\tif(scroller === parentNode && navigator.userAgent.indexOf('Chrom') !== -1){\r\n\t\t\t$.on(parentNode, 'mousedown', function(){\r\n\t\t\t\tscrollFocused = true;\r\n\t\t\t});\r\n\t\t\t$.on(parentNode, 'mouseup', function(){\r\n\t\t\t\tscrollFocused = false;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction refreshScrollBounding(cursor, bounding, list, parentNode){\r\n\t\tvar temp = Math.floor(self.prepareCount / 2); // half of element preparation\r\n\t\tif(cursor < self.prepareCount){\r\n\t\t\tbounding.ceiling = -1;\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount * 2 + 1];\r\n\r\n\t\t\tif(bounding.floor !== void 0)\r\n\t\t\t\tbounding.floor = bounding.floor.offsetTop;\r\n\t\t\telse bounding.floor = parentNode.lastElementChild.offsetTop + 1000;\r\n\r\n\t\t\tbounding.floor -= bounding.initial;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if(parentNode.children[temp + 1] !== void 0)\r\n\t\t\t\tbounding.ceiling = parentNode.children[temp + 1].offsetTop; // -2 element\r\n\r\n\t\tif(list.$virtual.preparedLength !== void 0 && cursor >= list.length - list.$virtual.preparedLength)\r\n\t\t\tbounding.floor = list.$virtual.dCursor.floor.offsetTop + list.$virtual.scrollHeight*2;\r\n\t\telse{\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount + 3].offsetTop; // +2 element\r\n\r\n\t\t\tif(parentNode.hasAttribute('scroll-reduce-floor')){\r\n\t\t\t\tbounding.floor -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t\tbounding.ceiling -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbounding.ceiling -= bounding.initial;\r\n\t\tbounding.floor -= bounding.initial;// scrollHeight - clientHeight\r\n\t}\r\n\r\n\tfunction moveElementCursor(changes, list){\r\n\t\tvar vDOM = list.$virtual.dom;\r\n\t\tvar vCursor = list.$virtual.vCursor;\r\n\t\tvar dCursor = list.$virtual.dCursor;\r\n\r\n\t\tif(changes > 0){ // forward\r\n\t\t\tvar ref = 0;\r\n\r\n\t\t\t// Select from virtual ceiling cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tref = vDOM.firstElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.ceiling.nextElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the ceiling to vDom\r\n\t\t\tfor (var i = changes; i > 0; i--) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.ceiling === null){\r\n\t\t\t\t\tvCursor.ceiling = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('afterBegin', vCursor.ceiling);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t\t\tvCursor.ceiling = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\t\t}\r\n\t\telse if(changes < 0){ // backward\r\n\t\t\tvar ref = 0;\r\n\t\t\tchanges = -changes;\r\n\r\n\t\t\t// Select from virtual floor cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tref = vDOM.lastElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.floor.previousElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the floor to vDom\r\n\t\t\tfor (var i = 0; i < changes; i++) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvCursor.floor = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('beforeEnd', vCursor.floor);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t\t\tvCursor.floor = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scrollTo(index, list, prepareCount, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar reduce = 0;\r\n\t\tvar index_ = index;\r\n\r\n\t\tif(index >= list.length - virtual.preparedLength){\r\n\t\t\treduce -= prepareCount;\r\n\t\t\tindex = list.length - virtual.preparedLength;\r\n\t\t}\r\n\r\n\t\tif(index - virtual.DOMCursor === 0 || index >= list.length) return;\r\n\r\n\t\tscrollingByScript = true;\r\n\r\n\t\t// Already on DOM tree\r\n\t\tif((virtual.DOMCursor === 0 && index < prepareCount + prepareCount/2) ||\r\n\t\t\t(virtual.DOMCursor + prepareCount/2 > index\r\n\t\t\t&& virtual.DOMCursor + prepareCount < index))\r\n\t\t\t\tscroller.scrollTop = list.getElement(index_).offsetTop;\r\n\r\n\t\t// Move cursor\r\n\t\telse {\r\n\t\t\tvar temp = null;\r\n\t\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\t\tvar floor = virtual.dCursor.floor;\r\n\t\t\tvar vCursor = virtual.vCursor;\r\n\r\n\t\t\t// DOM tree to virtual DOM\r\n\t\t\tvar length = parentNode.childElementCount - 2;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\r\n\t\t\t\t\tif(i === length-1)\r\n\t\t\t\t\t\tvCursor.floor = temp;\r\n\t\t\t\t}\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(index >= prepareCount){\r\n\t\t\t\tif(index < list.length - virtual.preparedLength)\r\n\t\t\t\t\tindex -= prepareCount;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treduce = prepareCount - index;\r\n\t\t\t\tvirtual.DOMCursor = index = 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\r\n\t\t\t// Virtual DOM to DOM tree\r\n\t\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\t\ttemp = virtual.dom.children[index];\r\n\t\t\t\tif(temp === void 0) break;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t\tvirtual.DOMCursor = index;\r\n\r\n\t\t\tvCursor.floor = virtual.dom.children[index] || null;\r\n\t\t\tvCursor.ceiling = vCursor.floor ? vCursor.floor.previousElementSibling : null;\r\n\r\n\t\t\tif(list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\tlist.$virtual.refreshVirtualSpacer(index);\r\n\r\n\t\t\trefreshScrollBounding(index, virtual.bounding, list, parentNode);\r\n\r\n\t\t\ttemp = parentNode.children[prepareCount - reduce + 1];\r\n\t\r\n\t\t\tif(temp !== void 0)\r\n\t\t\t\tscroller.scrollTop = temp.offsetTop - scroller.offsetTop;\r\n\t\t}\r\n\r\n\t\tscrollingByScript = false;\r\n\t}\r\n\r\n\tfunction removeUserScrollFocus(parentNode){\r\n\t\tparentNode.style.overflow = 'hidden';\r\n\t\tsetTimeout(function(){\r\n\t\t\tparentNode.style.overflow = '';\r\n\t\t}, 50);\r\n\t}\r\n\r\n\tfunction getAbsoluteHeight(el){\r\n\t  var styles = window.getComputedStyle(el);\r\n\t  var margin = parseInt(styles['marginTop']) + parseInt(styles['marginBottom']);\r\n\t  return el.offsetHeight + margin || 0;\r\n\t}\r\n\r\n\tfunction obtainElements(list, parentNode){\r\n\t\tvar exist = [];\r\n\t\tvar temp = void 0;\r\n\r\n\t\tvar length = list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[i];\r\n\t\t\tif(temp === void 0) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = parentNode.childElementCount - 2;\r\n\t\tfor (var i = 1; i <= length; i++) {\r\n\t\t\ttemp = parentNode.children[i];\r\n\t\t\tif(temp === void 0) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\t\t\r\n\t\t// Get elements length\r\n\t\tvar elementLength = list.$virtual.dom.childElementCount + length;\r\n\r\n\t\tlength = elementLength - length - list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[list.$virtual.DOMCursor + i];\r\n\t\t\tif(temp === void 0) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\treturn exist;\r\n\t}\r\n\r\n\tfunction refresh(force, list, prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer){\r\n\t\tvar cursor = list.$virtual.DOMCursor;\r\n\t\tvar additionalScroll = 0;\r\n\r\n\t\t// Find nearest cursor for current view position\r\n\t\tif(force){\r\n\t\t\tvar i = -1;\r\n\t\t\tvar length = list.$virtual.preparedLength;\r\n\r\n\t\t\tdo{\r\n\t\t\t\ti++;\r\n\t\t\t} while(i < length && parentNode.children[i].offsetTop < scroller.scrollTop);\r\n\r\n\t\t\tcursor = cursor + i;\r\n\t\t\tif(cursor > 0) cursor -= 1;\r\n\r\n\t\t\tadditionalScroll = scroller.scrollTop - parentNode.children[i].offsetTop;\r\n\t\t}\r\n\r\n\t\t// Force move cursor if element in the DOM tree was overloaded\r\n\t\tif(force || parentNode.childElementCount - 2 > list.$virtual.preparedLength){\r\n\t\t\tlist.$virtual.DOMCursor = list.length;\r\n\t\t\tvar moveTo = cursor;\r\n\t\t\tif(!force)\r\n\t\t\t\tmoveTo = cursor <= prepareCount ? cursor : (cursor + prepareCount);\r\n\r\n\t\t\tscrollTo(moveTo,\r\n\t\t\t\tlist,\r\n\t\t\t\tprepareCount,\r\n\t\t\t\tparentNode,\r\n\t\t\t\tscroller\r\n\t\t\t);\r\n\r\n\t\t\tscroller.scrollTop += additionalScroll;\r\n\t\t}\r\n\r\n\t\tif(refreshVirtualSpacer)\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\r\n\t\tif(checkCursorPosition)\r\n\t\t\tcheckCursorPosition();\r\n\r\n\t\trefreshScrollBounding(cursor, list.$virtual.bounding, list, parentNode);\r\n\t}\r\n\r\n\tvar _onElementResize = [];\r\n\tvar _onElementResize_timer = -1;\r\n\tfunction onElementResize(parentNode, callback){\r\n\t\tif(_onElementResize_timer === -1){\r\n\t\t\t_onElementResize_timer = setInterval(function(){\r\n\t\t\t\tvar temp = null;\r\n\t\t\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\t\t\ttemp = _onElementResize[i];\r\n\r\n\t\t\t\t\t// Check resize\r\n\t\t\t\t\tif(temp.element.scrollHeight === temp.height\r\n\t\t\t\t\t\t|| temp.element.scrollWidth === temp.width)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t// Check if it's removed from DOM\r\n\t\t\t\t\tif(temp.element.parentElement === null){\r\n\t\t\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.callback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(_onElementResize.length === 0){\r\n\t\t\t\t\tclearInterval(_onElementResize_timer);\r\n\t\t\t\t\t_onElementResize_timer = -1;\r\n\t\t\t\t}\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\r\n\t\t_onElementResize.push({\r\n\t\t\telement:parentNode,\r\n\t\t\tcallback:callback,\r\n\t\t\theight:parentNode.scrollHeight,\r\n\t\t\twidth:parentNode.scrollWidth\r\n\t\t});\r\n\t}\r\n\r\n\tfunction offElementResize(parentNode){\r\n\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\tif(_onElementResize[i].element === parentNode)\r\n\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Interval will be cleared when the array is empty\r\n\t}\r\n\r\n\tfunction initStyles(){\r\n\t}\r\n\r\n\tvar styleInitialized = false;\r\n\tinternal.addScrollerStyle = function(){\r\n\t\tif(!styleInitialized){\r\n\t\t\tvar style = document.getElementById('sf-styles');\r\n\r\n\t\t\tif(!style){\r\n\t\t\t\tstyle = document.createElement('style');\r\n\t\t\t\tstyle.id = 'sf-styles';\r\n\t\t\t\tdocument.head.appendChild(style);\r\n\t\t\t}\r\n\r\n\t\t\tstyle.sheet.insertRule(\r\n\t\t\t'.sf-virtual-list .virtual-spacer{'+\r\n\t\t\t    'visibility: hidden !important;'+\r\n\t\t\t    'position: relative !important;'+\r\n\t\t\t    'transform-origin: 0 0 !important;'+\r\n\t\t\t    'width: 0 !important;'+\r\n\t\t\t    'margin: 0 !important;'+\r\n\t\t\t    'padding: 0 !important;'+\r\n\t\t\t    'background: none !important;'+\r\n\t\t\t    'border: none !important;'+\r\n\t\t\t    'box-shadow: none !important;'+\r\n\t\t\t    'transition: none !important;'+\r\n\t\t\t '}', style.sheet.cssRules.length);\r\n\r\n\t\t\tstyle.sheet.insertRule(\r\n\t\t\t'.sf-scroll-element {'+\r\n\t\t\t \t'backface-visibility: hidden;'+\r\n\t\t\t '}', style.sheet.cssRules.length);\r\n\t\t\tstyleInitialized = true;\r\n\t\t}\r\n\t}\r\n\r\n\tvar isScroller = /auto|scroll|overlay|hidden/;\r\n\tinternal.findScrollerElement = function(el){\r\n\t\twhile(el !== null && isScroller.test(getComputedStyle(el).overflow) === false){\r\n\t\t\tel = el.parentElement;\r\n\t\t\tif(el === document.body)\r\n\t\t\t\treturn null;\r\n\t\t};\r\n\r\n\t\treturn el;\r\n\t}\r\n};"]}