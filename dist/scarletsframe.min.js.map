{"version":3,"sources":["sf-a_init.js","sf-controller.js","sf-loader.js","sf-model.js","sf-router.js"],"names":["sf","arguments","constructor","Function","loader","onFinish","apply","setTimeout","router","init","$","fn","extend","console","clear","error","animateCSS","animationName","callback","duration","self","this","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","undefined","style","css","addClass","one","removeClass","controller","active","for","name","func","model","root","elementModel","element","elem","fromElement","bindedList","attr","parents","bindedListIndex","prevAll","length","listenSFClick","e","target","script","eq","_modelScope","modelKeys","scopeMask","RegExp","replace","full","matched","split","method","method_","eval","shift","join","pop","run","DOMWasLoaded","on","each","attributes","value","loadedContent","totalContent","whenDOMLoaded","whenProgress","indexOf","push","onProgress","f","i","removeAttribute","list","splice","temp","document","getElementsByTagName","innerHTML","js","ajax","url","dataType","cache","success","everythingLoaded","setInterval","test","readyState","clearInterval","prototype","setAttribute","bindingEnabled","skipQuotes","bracketMatch","allowedFunction","localEval","script_","_model_","_content_","_result_","_evaled_","modelRef","keys","Object","clearElementData","current","dataParser","html","mask","scope","runEval","itemMask","actual","slice","charCodeAt","uniqueDataParser","take","passVar","currentIndex","strDeclare","firstTime","key","JSON","stringify","VarPass","match","obtained","forEach","inside","result","check","call","trim","args","a_a","bindArray","modelName","propertyName","oldArray","parse","editProperty","processElement","index","update","insertBefore","exist","find","item","create","outerHTML","insertAfter","currentRemoved","startRemove","remove","propertyProxy","subject","defineProperty","enumerable","configurable","Array","real","until","foundChanges","loopParser","content","returns","items","get","set","val","refreshBind","bindInput","whichVar","removeAttr","keyup","bindObject","targetNode","queuePreprocess","parsePreprocess","parent","after","next","before","data","append","addEventListener","models","removeBinding","modelNames","attrs","id","bindRef","ref","object","writable","isEmptyObject","created","dcBracket","which","Node","Date","now","attrName","callbackFunction","getOwnPropertyDescriptor","objValue","bindElement","brackets","bindable","exec","childNodes","body","excludes","toUpperCase","currentNode","nodeName","nodeType","a","nodeValue","parentNode","loading","enabled","currentPage","initialized","RouterLoading","currentRouterURL","lazy","beforeEvent","window","location","pathname","enable","status","DOMReference","onEvent","loaded","special","event","lazyViewPoint","href","origin","charAt","load","history","pushState","LazyRouter","routingBack","path","abort","loadURL","_scarlets","skipLazyView","assign","foundAction","afterEvent","title","found","oldURL","newURL","routingError","xhr","back"],"mappings":"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","file":"scarletsframe.min.js","sourcesContent":["if(typeof sf === 'undefined'){\r\n\tsf = function(){\r\n\t\tif(arguments[0].constructor === Function){\r\n\t\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nsetTimeout(function(){\r\n\tsf(sf.router.init);\r\n}, 10);\r\n\r\nif(typeof $ === 'undefined' || !$.fn || !$.fn.extend){\r\n\tsetTimeout(function(){\r\n\t\tconsole.clear();\r\n\t\tconsole.error(\"Please load jQuery before before ScarletsFrame\");\r\n\t}, 1000);\r\n}\r\n\r\n// Add animate.css feature on jQuery\r\n$.fn.extend({\r\n  animateCSS: function(animationName, callback, duration) {\r\n\tvar self = this;\r\n\tvar animationEnd = {\r\n\t\tanimation: 'animationend',\r\n\t\tOAnimation: 'oAnimationEnd',\r\n\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t};\r\n\r\n\tfor (var t in animationEnd)\r\n\t\tif (self[0].style[t] !== undefined){\r\n\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\tif(duration)\r\n\t\tself.css('-webkit-animation-duration', duration+'s').css('animation-duration', duration+'s');\r\n\r\n\tself.addClass('animated ' + animationName).one(animationEnd, function(){\r\n\t\tsetTimeout(function(){\r\n\t\t\t$(self).removeClass('animated ' + animationName);\r\n\t\t}, 1);\r\n\r\n\t\tif(duration)\r\n\t\t\t$(self).css('-webkit-animation-duration', '').css('animation-duration', '');\r\n\r\n\t\tif (typeof callback === 'function') callback();\r\n\t});\r\n\r\n\treturn self;\r\n  }\r\n});","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tvar controller = {};\r\n\tself.active = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.model.root[name])\r\n\t\t\tsf.model.root[name] = {};\r\n\r\n\t\tcontroller[name] = func;\r\n\t}\r\n\r\n\tself.elementModel = function(element, func = false){\r\n\t\tvar elem = $(element);\r\n\t\tvar model = sf.controller.fromElement(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = elem.attr('[sf-bind-list]');\r\n\t\tif(!bindedList)\r\n\t\t\tbindedList = elem.parents('[sf-bind-list]').attr('sf-bind-list');\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(self.root[model], -1);\r\n\t\t\telse return self.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = elem.parents('[sf-bind-list]').prevAll('[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(self.root[model][bindedList], bindedListIndex);\r\n\t\telse return self.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.fromElement = function(element){\r\n\t\tvar elem = $(element);\r\n\t\tvar model = elem.parents(\"[sf-model]\").attr('sf-model');\r\n\t\tif(!model)\r\n\t\t\tmodel = elem.parents('[sf-controller]').attr('sf-controller');\r\n\t\treturn model;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = $(e.target);\r\n\t\tvar script = element.attr('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = element.parents('[sf-click]').eq(0);\r\n\t\t\tscript = element.attr('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = element.parents('[sf-model]').attr('sf-model');\r\n\r\n\t\tif(!sf.model.root[model])\r\n\t\t\tmodel = element.parents('[sf-controller]').attr('sf-controller');\r\n\r\n\t\tif(!sf.model.root[model])\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar _modelScope = sf.model.root[model];\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(_modelScope);\r\n\t\tvar scopeMask = RegExp('(?<=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )('+modelKeys+')(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)\\\\b', 'g');\r\n\r\n\t\tscript = script.replace(scopeMask, function(full, matched){\r\n\t\t\treturn '_modelScope.'+matched;\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script[0];\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(e) {\r\n\t\t\tmethod = false;\r\n\t\t}\r\n\r\n\t\tif(!method){\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot find '+method_+']\\n', e.target);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript.shift();\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0)\r\n\t\t\tscript = eval('['+script+']');\r\n\t\tif(!script)\r\n\t\t\tscript = [];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element, script);\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', e.target, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tself.run = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.run(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(controller[name]){\r\n\t\t\tif(!self.active[name]){\r\n\t\t\t\tif(controller[name])\r\n\t\t\t\t\tcontroller[name](sf.model.root[name], sf.model.root);\r\n\r\n\t\t\t\t// Listen to sf-click\r\n\t\t\t\t$('[sf-controller=\"'+name+'\"]').on('click', '[sf-click]', listenSFClick);\r\n\r\n\t\t\t\tself.active[name] = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], sf.model.root);\r\n\r\n\t\t// Mark as loaded\r\n\t\tif(controller[name])\r\n\t\t\tdelete controller[name];\r\n\t}\r\n\r\n\tself.init = function(){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(name);\r\n\t\t\t});\r\n\r\n\t\t$('[sf-controller]').each(function(){\r\n\t\t\tself.run(this.attributes['sf-controller'].value);\r\n\t\t});\r\n\t}\r\n}","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 1;\r\n\tself.DOMWasLoaded = false;\r\n\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t\tif(element && element.removeAttribute) element.removeAttribute('onload');\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length!==0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tvar temp = '';\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\ttemp += '<link onload=\"sf.loader.f(this);\" rel=\"stylesheet\" href=\"'+list[i]+'\">';\r\n\t\t}\r\n\r\n\t\t$(function(){\r\n\t\t\tdocument.getElementsByTagName('body')[0].innerHTML += temp;\r\n\t\t});\r\n\t}\r\n\r\n\tself.js = function(list, target = 'body'){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length!==0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\t$.ajax({\r\n\t\t\t  url: list[i],\r\n\t\t\t  dataType: \"script\",\r\n\t\t\t  cache: true,\r\n\t\t\t  success: sf.loader.f\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tvar everythingLoaded = setInterval(function() {\r\n\tif (/loaded|complete/.test(document.readyState)) {\r\n\t\tclearInterval(everythingLoaded);\r\n\t\tself.DOMWasLoaded = true;\r\n\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\twhenDOMLoaded[i]();\r\n\t\t}\r\n\t\twhenProgress.splice(0);\r\n\t\twhenDOMLoaded.splice(0);\r\n\t}\r\n\t}, 100);\r\n};\r\nsf.prototype.constructor = sf.loader.onFinish;\r\n\r\n// Find images\r\n$(function(){\r\n\t$('img:not(onload)[src]').each(function(){\r\n\t\tsf.loader.totalContent++;\r\n\t\tthis.setAttribute('onload', \"sf.loader.f(this)\");\r\n\t});\r\n});","// Data save and HTML content binding\r\nsf.model = new function(){\r\n\tvar self = this;\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\r\n\t// ToDo: Need help to skip escaped quote\r\n\tvar skipQuotes = '(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)';\r\n\r\n\tvar bracketMatch = RegExp('([\\\\w.\\\\]]*?)\\\\(.*?\\\\)'+skipQuotes, 'g');\r\n\tvar allowedFunction = ['for', 'if', 'while', '_content_.take', 'console.log'];\r\n\tvar localEval = function(script_, _model_, _modelScope, _content_){\r\n\t\tvar script = script_;\r\n\t\tscript = script.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*'); // ToDo: Escape\r\n\r\n\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\tvar script = script_.replace(bracketMatch, function(full, matched){\r\n\t\t\tif(matched !== '' && allowedFunction.indexOf(matched) === -1)\r\n\t\t\t\treturn full.replace(/\\(.*?\\)/g, '.<Function Not Allowed>');\r\n\t\t\treturn full;\r\n\t\t});\r\n\t\t\r\n\t\tvar _result_ = '';\r\n\t\tscript = script.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\"); // ToDo: Unescape\r\n\t\tvar _evaled_ = eval(script);\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\tself.for = function(name, func){\r\n\t\tif(!self.root[name])\r\n\t\t\tself.root[name] = {};\r\n\r\n\t\tfunc(self.root[name], self.root);\r\n\t}\r\n\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys.join('|');\r\n\t}\r\n\r\n\tvar clearElementData = function(current){\r\n\t\tcurrent.innerHTML = '';\r\n\t\tfor (var i = 0; i < current.attributes.length; i++) {\r\n\t\t\tvar name = current.attributes[i].name;\r\n\t\t\tif(name !== 'sf-bind-list')\r\n\t\t\t\tcurrent.removeAttribute(name);\r\n\t\t}\r\n\t\tcurrent.setAttribute('style', 'display:none');\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval = ''){\r\n\t\tvar _modelScope = sf.model.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp('(?<=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )('+self.modelKeys(_modelScope)+')'+skipQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp('(?<=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )'+mask+'\\\\.'+skipQuotes+'\\\\b', 'g');\r\n\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\treturn html.replace(/{{([^@].*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = temp.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*'); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\r\n\t\t\ttemp = temp.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\"); // ToDo: Unescape\r\n\r\n\t\t\t// Evaluate\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(/[\\u00A0-\\u9999<>\\&]/gim, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\t}\r\n\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(!passVar)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Disable function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('').split(')').join('');\r\n\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\thtml = html.replace(/{\\[(.*?)\\]}/gs, function(full, matched){\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = sf.model.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp('(?<=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )('+self.modelKeys(_modelScope)+')'+skipQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp('(?<=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )'+mask+'\\\\.'+skipQuotes+'\\\\b', 'g');\r\n\r\n\t\treturn html.replace(/{{(@.*?)}}/gs, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = temp.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*'); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[1].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(matched){\r\n\t\t\t\treturn '_modelScope.'+matched[1].slice(1);\r\n\t\t\t});\r\n\t\t\ttemp = temp.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\"); // ToDo: Unescape\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass = temp.match(/(?<=var|let)\\W.*?[\\w, =\\n\\t]+.*?/g);\r\n\t\t\tif(VarPass){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/[\\n\\t\\r]+/g, '').split(',').forEach(function(inside){\r\n\t\t\t\t\t\tobtained.push(inside.split('=')[0]);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':(typeof '+VarPass[i]+'!=\"undefined\"?'+VarPass[i]+':undefined)';\r\n\t\t\t\t}\r\n\t\t\t\tVarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length != 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\t\t\t\r\n\t\t\t\t// If condition was meet\r\n\t\t\t\tif(localEval.apply(self.root, [check[0], _model_, _modelScope, _content_])){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\tresult = check.join(':');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Function arguments should like: function@arg1, arg2\r\n\t\t\t// And it will converted to: model.function(arg1, arg2)\r\n\t\t\tcheck = temp.split('@call');\r\n\t\t\tif(check.length != 1){\r\n\t\t\t\tcheck = check[1].trim();\r\n\t\t\t\tvar call = check.split('@');\r\n\t\t\t\tvar args = [];\r\n\r\n\t\t\t\tif(call.length !== 1){\r\n\t\t\t\t\targs = call[1];\r\n\r\n\t\t\t\t\targs = args.split(' ').join('').split(',');\r\n\t\t\t\t\tfor (var a_a = 0; a_a < args.length; a_a++) {\r\n\t\t\t\t\t\targs[a_a] = localEval.apply(self.root, [args[a_a], _model_, _modelScope, _content_]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcall = call[0];\r\n\t\t\t\tif(!sf.model.root[scope][call])\r\n\t\t\t\t\tthrow \"'\"+call+\"' was not available inside '\"+scope+\"' model\";\r\n\r\n\t\t\t\tvar values = sf.model.root[scope][call].apply(null, args);\r\n\t\t\t\tresult = values;\r\n\t\t\t}\r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length != 1){\r\n\t\t\t\tcheck = check[1].split('&lt;').join('<').split('&gt;').join('>').split('&amp;').join('&');\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, [check, _model_, _modelScope, _content_]);\r\n\t\t\t\tresult = temp;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t});\r\n\t}\r\n\r\n\tvar bindArray = function(html, list, mask, modelName, propertyName){\r\n\t\tvar oldArray = JSON.parse(JSON.stringify(list));\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'refreshBind'];\r\n\t\tvar processElement = function(index, update = false, insertBefore = false){\r\n\t\t\tvar exist = $(\"[sf-model='\"+modelName+\"']\");\r\n\t\t\tif(exist.length === 0)\r\n\t\t\t\texist = $(\"[sf-controller='\"+modelName+\"']\");\r\n\r\n\t\t\tif(exist.length === 0) return;\r\n\t\t\texist = exist.find(\"[sf-bind-list='\"+propertyName+\"']\");\r\n\r\n\t\t\tvar callback = false;\r\n\t\t\tif(self.root[modelName]['on$'+propertyName])\r\n\t\t\t\tcallback = self.root[modelName]['on$'+propertyName];\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(!update){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\tif(exist.length <= 1)\r\n\t\t\t\t\t\t\treturn clearElementData(exist[index]);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\texist[index].remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(callback.remove){\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tsetTimeout(startRemove, 800);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse startRemove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Create or update\r\n\t\t\tvar item = self.root[modelName][propertyName][index];\r\n\r\n\t\t\tvar temp = uniqueDataParser(html, item, mask, modelName);\r\n\t\t\ttemp = dataParser(temp, item, mask, modelName);\r\n\t\t\ttemp = $(temp);\r\n\r\n\t\t\t// Create\r\n\t\t\tif(!exist[index]){\r\n\t\t\t\tif(callback.create)\r\n\t\t\t\t\tcallback.create(temp[0]);\r\n\r\n\t\t\t\ttemp.insertAfter(exist[exist.length - 1]);\r\n\t\t\t}\r\n\r\n\t\t\telse{\r\n\t\t\t\t// Create\r\n\t\t\t\tif(insertBefore){\r\n\t\t\t\t\tif(callback.create)\r\n\t\t\t\t\t\tcallback.create(temp[0]);\r\n\r\n\t\t\t\t\ttemp.insertBefore(exist[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(callback.update)\r\n\t\t\t\t\t\tcallback.update(temp[0]);\r\n\r\n\t\t\t\t\texist[index].outerHTML = temp[0].outerHTML;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = undefined;\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(this.length);\r\n\r\n\t\t\t\t\telse if(name === 'push')\r\n\t\t\t\t\t\tprocessElement(this.length - 1, true);\r\n\r\n\t\t\t\t\telse if(name === 'shift')\r\n\t\t\t\t\t\tprocessElement(0);\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments.length >= 3){\r\n\t\t\t\t\t\t\targuments[0] = false;\r\n\t\t\t\t\t\t\tname = 'refreshBind';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\t\tif(real < 0) real = this.length + real + 1;\r\n\r\n\t\t\t\t\t\t\tvar until = arguments[1];\r\n\t\t\t\t\t\t\tif(!until) until = this.length - real;\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < until; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(real);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift')\r\n\t\t\t\t\t\tprocessElement(0, true, true);\r\n\r\n\t\t\t\t\tif(name === 'refreshBind'){\r\n\t\t\t\t\t\tif(arguments[0] || arguments[0] === 0)\r\n\t\t\t\t\t\t\tprocessElement(arguments[0], true);\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tvar foundChanges = false;\r\n\t\t\t\t\t\t\tfor (var i = 0; i < this.length; i++) {\r\n\t\t\t\t\t\t\t\tif(JSON.stringify(oldArray[i]) !== JSON.stringify(this[i])){\r\n\t\t\t\t\t\t\t\t\tfoundChanges = true;\r\n\t\t\t\t\t\t\t\t\tprocessElement(i, true);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(foundChanges)\r\n\t\t\t\t\t\t\t\toldArray = JSON.parse(JSON.stringify(this));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tvar loopParser = function(name, content, script){\r\n\t\tvar returns = '';\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\r\n\t\tif(!sf.model.root[name])\r\n\t\t\treturn console.error(\"Can't parse element because model for '\"+name+\"' was not found\", $(content)[0]);\r\n\r\n\t\tvar items = self.root[name][method[1]];\r\n\t\tcontent = $(content).attr('sf-bind-list', method[1])[0].outerHTML;\r\n\t\tcontent = content.replace(/  +|\\t+/g, '');\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tfor(var i in items){\r\n\t\t\t\tvar item = items[i];\r\n\r\n\t\t\t\ttemp = uniqueDataParser(content, item, mask, name);\r\n\t\t\t\ttemp = dataParser(temp, item, mask, name);\r\n\t\t\t\treturns += temp;\r\n\t\t\t}\r\n\t\t\tObject.defineProperty(self.root[name], method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tfor (var i = 0; i < val.length; i++) {\r\n\t\t\t\t\t\tif(items[i]){\r\n\t\t\t\t\t\t\titems[i] = val[i];\r\n\t\t\t\t\t\t\titems.refreshBind(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse items.push(val[i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(items.length > val.length)\r\n\t\t\t\t\t\titems.splice(items.length - val.length);\r\n\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tbindArray(content, items, mask, name, method[1]);\r\n\t\t}\r\n\t\treturn returns;\r\n\t}\r\n\r\n\tvar bindInput = function(){\r\n\t\t$('input[sf-bound]').each(function(){\r\n\t\t\tvar element = $(this);\r\n\t\t\tvar model = element.parents('[sf-controller]').attr('sf-controller');\r\n\t\t\tif(!model) return;\r\n\r\n\t\t\tvar whichVar = element.attr('sf-bound');\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(typeof self.root[model][whichVar] === undefined){\r\n\t\t\t\tconsole.error('Cannot get reference for self.root[\"' + model + '\"][\"' + whichVar+'\"]');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement.attr('sf-bounded', whichVar);\r\n\t\t\telement.removeAttr('sf-bound');\r\n\r\n\t\t\t// Bound key up\r\n\t\t\telement.keyup(function(e){\r\n\t\t\t\tself.root[model][whichVar] = element.val();\r\n\t\t\t});\r\n\r\n\t\t\t// Bind value\r\n\t\t\telement.attr('value', '{{'+whichVar+'}}');\r\n\t\t\tbindObject(element, self.root[model], whichVar, 'attr');\r\n\t\t});\r\n\t}\r\n\r\n\tself.init = function(targetNode = false){\r\n\t\tsf.model.queuePreprocess(targetNode);\r\n\t\tsf.model.parsePreprocess(targetNode);\r\n\r\n\t\t$('[sf-repeat-this]').each(function(){\r\n\t\t\tvar self = $(this);\r\n\t\t\tvar parent = self.parent();\r\n\r\n\t\t\tvar after = self.next();\r\n\t\t\tif(!after.length || self[0] === after[0])\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = self.before();\r\n\t\t\tif(!before.length || self[0] === before[0])\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = self.attr('sf-repeat-this');\r\n\t\t\tself.removeAttr('sf-repeat-this');\r\n\t\t\tvar controller = self.parents('[sf-controller]').attr('sf-controller');\r\n\r\n\t\t\tvar content = this.outerHTML;\r\n\r\n\t\t\tvar data = loopParser(controller, content, script);\r\n\t\t\tif(data){\r\n\t\t\t\tself.remove();\r\n\t\t\t\t\r\n\t\t\t\tdata = $(data);\r\n\t\t\t\tif(after)\r\n\t\t\t\t\tdata.insertBefore(after);\r\n\t\t\t\telse if(before)\r\n\t\t\t\t\tdata.insertAfter(before);\r\n\t\t\t\telse\r\n\t\t\t\t\tparent.append(data);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tself.attr('sf-bind-list', script.split(' in ')[1]);\r\n\t\t\t\tclearElementData(this);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tdocument.addEventListener('DOMNodeRemoved', function(e){\r\n\t\tif(!bindingEnabled) return;\r\n\r\n\t\tvar element = e.target;\r\n\t\tvar models = [];\r\n\t\t$(element).find('[sf-controller]').each(function(){\r\n\t\t\tmodels.push(this.attributes['sf-controller'].value);\r\n\t\t});\r\n\r\n\t\tif(element.attributes && element.attributes['sf-controller'])\r\n\t\t\tmodels.push(element.attributes['sf-controller'].value);\r\n\r\n\t\t$(element).find('[sf-bind-id], [sf-bind-list], [sf-bounded], [sf-repeat-this]').each(function(){\r\n\t\t\tremoveBinding(this, models);\r\n\t\t});\r\n\r\n\t\tremoveBinding(element);\r\n\t});\r\n\r\n\tvar removeBinding = function(element, modelNames = false){\r\n\t\tif(!element.attributes) return;\r\n\r\n\t\tvar attrs = element.attributes;\r\n\t\tif(attrs['sf-bind-id']){\r\n\t\t\tvar id = attrs['sf-bind-id'].value;\r\n\r\n\t\t\tif(!bindRef[id]) return;\r\n\t\t\tvar ref = bindRef[id];\r\n\r\n\t\t\tfor (var i = 0; i < ref.propertyName.length; i++) {\r\n\t\t\t\tvar value = ref.object[ref.propertyName[i]];\r\n\t\t\t\tObject.defineProperty(ref.object, ref.propertyName[i], {\r\n\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\tenumerable:true,\r\n\t\t\t\t\twritable:true,\r\n\t\t\t\t\tvalue:value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tdelete bindRef[id];\r\n\r\n\t\t\t// Remove callback left\r\n\t\t\tvar cache = bindRef.cache\r\n\t\t\tfor(var i in cache){\r\n\t\t\t\tif(cache[i].callback && cache[i].callback[id])\r\n\t\t\t\t\tdelete cache[i].callback[id];\r\n\t\t\t\tif($.isEmptyObject(cache[i].callback))\r\n\t\t\t\t\tdelete cache[i];\r\n\t\t\t}\r\n\r\n\t\t\tif(cache[id]){\r\n\t\t\t\tdelete cache[id].attrs;\r\n\t\t\t\tdelete cache[id].innerHTML;\r\n\t\t\t\tdelete cache[id].modelName;\r\n\t\t\t\tdelete cache[id].model;\r\n\t\t\t\tdelete cache[id].created;\r\n\t\t\t\tdelete cache[id].element;\r\n\t\t\t}\r\n\r\n\t\t\tbindRef.length--;\r\n\t\t\tif(bindRef.length === 0)\r\n\t\t\t\tbindRef.index = 0;\r\n\t\t}\r\n\r\n\t\tif(!modelNames) return;\r\n\r\n\t\tvar propertyName = false;\r\n\t\tif(attrs['sf-bind-list'])\r\n\t\t\tpropertyName = attrs['sf-bind-list'].value;\r\n\r\n\t\tif(attrs['sf-repeat-this'])\r\n\t\t\tpropertyName = attrs['sf-repeat-this'].value.split(' in ')[1];\r\n\r\n\t\tif(attrs['sf-bounded'])\r\n\t\t\tpropertyName = attrs['sf-bounded'].value;\r\n\r\n\t\tfor (var i = 0; i < modelNames.length; i++) {\r\n\t\t\tvar modelRef = self.root[modelNames[i]];\r\n\t\t\tif(!modelRef[propertyName]) continue;\r\n\r\n\t\t\tvar value = modelRef[propertyName].slice(0);\r\n\t\t\tObject.defineProperty(modelRef, propertyName, {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable:true,\r\n\t\t\t\twritable:true,\r\n\t\t\t\tvalue:value\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/*{\r\n\t\tid:{\r\n\t\t\tobject,\r\n\t\t\t[propertyName]\r\n\t\t}\r\n\t}*/\r\n\t// For resetting object property it the element was removed from DOM\r\n\tvar bindRef = {length:0, index:0, cache:{}};\r\n\tself.bindRef = bindRef;\r\n\tvar dcBracket = /{{.*?}}/;\r\n\tvar bindObject = function(element, object, propertyName, which){\r\n\t\tif(!(element instanceof Node))\r\n\t\t\telement = element[0];\r\n\r\n\t\t// First initialization\r\n\t\tvar id = bindRef.index;\r\n\t\t$(element).attr('sf-bind-id', id);\r\n\r\n\t\tbindRef.index++;\r\n\t\tbindRef.length++;\r\n\t\tbindRef.cache[id] = {};\r\n\t\tvar cache = bindRef.cache[id];\r\n\r\n\t\tcache.attrs = {};\r\n\t\tcache.innerHTML = '';\r\n\t\tcache.modelName = sf.controller.fromElement(element);\r\n\t\tcache.model = self.root[cache.modelName];\r\n\t\tcache.created = Date.now();\r\n\r\n\t\tif(which === 'attr' || !which){\r\n\t\t\tfor(var i in element.attributes){\r\n\t\t\t\t// Check if it has a bracket\r\n\t\t\t\tif(!dcBracket.test(element.attributes[i].value))\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tvar attrName = element.attributes[i].name;\r\n\t\t\t\tcache.attrs[attrName] = element.attributes[i].value;\r\n\r\n\t\t\t\tif(attrName === 'value')\r\n\t\t\t\t\telement.removeAttribute(attrName);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(which === 'html' || !which)\r\n\t\t\tcache.innerHTML = element.innerHTML;\r\n\r\n\t\t// Get current object reference\r\n\t\tif(!bindRef[id]) bindRef[id] = {object:object, propertyName:[]};\r\n\t\tbindRef[id].propertyName.push(propertyName);\r\n\r\n\t\tcache.element = $(element);\r\n\t\tvar callbackFunction = function(){\r\n\t\t\tif(which === 'attr' || !which){\r\n\t\t\t\tfor(var name in cache.attrs){\r\n\t\t\t\t\tif(cache.attrs[name].indexOf(propertyName) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tvar temp = dataParser(cache.attrs[name], cache.model, false, cache.modelName);\r\n\t\t\t\t\tif(name === 'value')\r\n\t\t\t\t\t\tcache.element.val(temp);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tcache.element.attr(name, temp);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(which === 'html' || !which){\r\n\t\t\t\tvar temp = uniqueDataParser(cache.innerHTML, cache.model, false, cache.modelName);\r\n\t\t\t\ttemp = dataParser(temp, cache.model, false, cache.modelName);\r\n\t\t\t\tcache.element.html(temp);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif(Object.getOwnPropertyDescriptor(cache.model, propertyName)['set']){\r\n\t\t\tfor(var i in bindRef){\r\n\t\t\t\tif(cache.model === bindRef[i].object && bindRef[i].propertyName.indexOf(propertyName) !== -1){\r\n\t\t\t\t\tbindRef.cache[i].callback[id] = callbackFunction;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tcache.callback = {};\r\n\t\tcache.callback[id] = callbackFunction;\r\n\r\n\t\tvar objValue = object[propertyName]; // Object value\r\n\t\tObject.defineProperty(object, propertyName, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\t\t\tget:function(){\r\n\t\t\t\treturn objValue;\r\n\t\t\t},\r\n\t\t\tset:function(val){\r\n\t\t\t\tobjValue = val;\r\n\r\n\t\t\t\tfor(var i in cache.callback){\r\n\t\t\t\t\tcache.callback[i]();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn objValue;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tself.bindElement = function(element, which = false){\r\n\t\tvar modelName = sf.controller.fromElement(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar scopeMask = RegExp('(?<=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )('+self.modelKeys(model)+')'+skipQuotes+'\\\\b', 'g');\r\n\r\n\t\tvar html = element.outerHTML;\r\n\t\tif(which === 'attr')\r\n\t\t\thtml = html.replace(element.innerHTML, '');\r\n\r\n\t\tvar brackets = html.match(/(?<={{).*?(?=}})/gs);\r\n\t\tfor (var i = 0; i < brackets.length; i++) {\r\n\t\t\twhile ((bindable = scopeMask.exec(brackets[i])) !== null) {\r\n\t\t\t\tbindObject(element, model, bindable[i], which);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.queuePreprocess = function(targetNode = false){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar excludes = ['html','head','style','link','meta','script','object','iframe'];\r\n\t\tfor (var i = 0; i < excludes.length; i++) {\r\n\t\t\texcludes[i] = excludes[i].toUpperCase();\r\n\t\t}\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = 0; i < childNodes.length; i++) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\t\t\tif(excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\t\t\t\tif(attrs['sf-bind-id'] || attrs['sf-repeat-this'] || attrs['sf-bind-list']) continue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tcurrentNode.setAttribute('sf-preprocess', 'attronly');\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tself.queuePreprocess(currentNode);\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tcurrentNode.parentNode.setAttribute('sf-preprocess', '');\r\n\r\n\t\t\t\t\t// Reset Siblings\r\n\t\t\t\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\t\t\t\ttemp[a].removeAttribute('sf-preprocess');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.parsePreprocess = function(targetNode = false){\r\n\t\t$(targetNode || document.body).find('[sf-preprocess]').each(function(){\r\n\t\t\tvar model = sf.controller.fromElement(this);\r\n\t\t\tthis.removeAttribute('sf-preprocess');\r\n\r\n\t\t\tif(!sf.model.root[model])\r\n\t\t\t\treturn console.error(\"Can't parse element because model for '\"+model+\"' was not found\", this);\r\n\r\n\t\t\tself.bindElement(this, $(this).attr('sf-bind'));\r\n\r\n\t\t\t// Avoid editing the outerHTML because it will remove the bind\r\n\t\t\tvar temp = uniqueDataParser(this.innerHTML, sf.model.root[model], false, model);\r\n\t\t\tthis.innerHTML = dataParser(temp, sf.model.root[model], false, model);\r\n\t\t\tfor (var i = 0; i < this.attributes.length; i++) {\r\n\t\t\t\tif(this.attributes[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\tthis.attributes[i].value = dataParser(this.attributes[i].value, sf.model.root[model], false, model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tbindInput();\r\n\t}\r\n}","sf.router = new function(){\r\n\tvar self = this;\r\n\tself.loading = false;\r\n\tself.enabled = false;\r\n\tself.currentPage = [];\r\n\tvar initialized = false;\r\n\tvar lazyRouting = false;\r\n\tvar RouterLoading = false;\r\n\tvar currentRouterURL = '';\r\n\r\n\t// Should be called if not using lazy page load\r\n\tself.init = function(){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init();\r\n\t\t\t});\r\n\r\n\t\t// Reinit lazy router\r\n\t\tself.lazy();\r\n\r\n\t\t// Run 'before' event for new page view\r\n\t\t$('[sf-page]').each(function(){\r\n\t\t\tvar name = this.attributes['sf-page'].value;\r\n\t\t\tbeforeEvent(name);\r\n\t\t});\r\n\r\n\t\tinitialized = true;\r\n\t\tcurrentRouterURL = window.location.pathname;\r\n\t}\r\n\r\n\tself.enable = function(status = true){\r\n\t\tself.enabled = status;\r\n\r\n\t\tif(status)\r\n\t\t\tself.lazy();\r\n\t\telse{\r\n\t\t\t$('a[href][onclick]').each(function(){\r\n\t\t\t\tvar current = $(this);\r\n\t\t\t\tif(current.attr('onclick') === 'return sf.router.load(this)')\r\n\t\t\t\t\tcurrent.removeAttr('onclick');\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tvar before = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.before = function(name, func, index = false){\r\n\t\tif(!before[name])\r\n\t\t\tbefore[name] = [];\r\n\r\n\t\tif(index === false){\r\n\t\t\tif(before[name].indexOf(func) === -1)\r\n\t\t\t\tbefore[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tbefore[name][index] = func;\r\n\t}\r\n\r\n\tvar after = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.after = function(name, func, index = false){\r\n\t\tif(!after[name])\r\n\t\t\tafter[name] = [];\r\n\r\n\t\tif(index === false){\r\n\t\t\tif(after[name].indexOf(func) === -1)\r\n\t\t\t\tafter[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tafter[name][index] = func;\r\n\t}\r\n\r\n\t// Running 'before' new page going to be displayed\r\n\tvar beforeEvent = function(name, DOMReference = false){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.push(name);\r\n\r\n\t\t// Init all controller\r\n\t\tsf.controller.init();\r\n\r\n\t\t// Init template to model binding\r\n\t\tsf.model.init(DOMReference);\r\n\r\n\t\tif(before[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\r\n\t\t\tfor (var i = 0; i < before[name].length; i++) {\r\n\t\t\t\tbefore[name][i](sf.model.root);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Running 'after' old page going to be removed\r\n\tvar afterEvent = function(){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.splice(self.currentPage.indexOf(name), 1);\r\n\r\n\t\tif(self.currentPage !== '' && after[self.currentPage]){\r\n\t\t\tif(!sf.model.root[self.currentPage])\r\n\t\t\t\tsf.model.root[self.currentPage] = {};\r\n\r\n\t\t\tfor (var i = 0; i < after[self.currentPage].length; i++) {\r\n\t\t\t\tafter[self.currentPage][i](sf.model.root);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar onEvent = {\r\n\t\t'loading':[],\r\n\t\t'loaded':[],\r\n\t\t'special':[],\r\n\t\t'error':[]\r\n\t};\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\tself.lazyViewPoint = {};\r\n\t/*\r\n\t\t{\r\n\t\t\toldURlPattern:{\r\n\t\t\t\tnewURLPattern:'.viewPoint'\r\n\t\t\t}\r\n\t\t}\r\n\t*/\r\n\tself.lazy = function(){\r\n\t\tif(!self.enabled) return;\r\n\r\n\t\t$('a[href]:not([onclick])').each(function(){\r\n\t\t\tvar url = this.href;\r\n\t\t\tif(url.indexOf('#') !== -1)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(url.indexOf(window.location.origin) !== 0 && url.charAt(0) !== '/')\r\n\t\t\t\treturn; //Not current domain origin\r\n\r\n\t\t\t$(this).attr('onclick', 'return sf.router.load(this)');\r\n\t\t});\r\n\t}\r\n\r\n\tself.load = function(elem){\r\n\t\tif(!history.pushState || $(elem).attr('sf-router') == 'ignore')\r\n\t\t\treturn true;\r\n\r\n\t\treturn !LazyRouter(elem.href.replace(window.location.origin, ''));\r\n\t}\r\n\r\n\tvar routingBack = false;\r\n\tvar LazyRouter = function(path){\r\n\t\tfor (var i = 0; i < onEvent['loading'].length; i++) {\r\n\t\t\tif(onEvent['loading'][i](path)) return;\r\n\t\t}\r\n\t\tvar oldPath = window.location.pathname;\r\n\t\tinitialized = false;\r\n\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\t\tRouterLoading = loadURL(window.location.origin + path, {\r\n            data:{\r\n                _scarlets:'.dynamic.'\r\n            },\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\tif(initialized) return;\r\n\t\t\t\tlazyRouting = true;\r\n\r\n\t\t\t\t// Run 'loaded' event\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tvar skipLazyView = false;\r\n\r\n\t\t\t\t// Find special data\r\n\t\t\t\tvar special = {};\r\n\t\t\t\t\r\n\t\t\t\t// This will not match string inside quotes to avoid security problem\r\n\t\t\t\tdata = data.replace(/<!-- SF-Special:(.*?)-->(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)/g, function(full, matched){\r\n\t\t\t\t\t// Unescape symbol\r\n\t\t\t\t\tvar temp = matched.split('--|&>').join('-->');\r\n\t\t\t\t\tspecial = Object.assign(special, JSON.parse(temp));\r\n\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(!$.isEmptyObject(special)){\r\n\t\t\t\t\tfor (var i = 0; i < onEvent['special'].length; i++) {\r\n\t\t\t\t\t\tif(onEvent['special'][i](special)) return;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Trigger loaded event\r\n\t\t\t\tfor (var i = 0; i < onEvent['loaded'].length; i++) {\r\n\t\t\t\t\tskipLazyView = onEvent['loaded'][i](currentRouterURL, path, data) || skipLazyView;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DOMReference = false;\r\n\t\t\t\tif(!skipLazyView){\r\n\t\t\t\t\tvar foundAction = function(ref){\r\n\t\t\t\t\t\tDOMReference = $(ref);\r\n\r\n\t\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\t\tafterEvent(DOMReference.find('[sf-page]'));\r\n\t\t\t\t\t\tDOMReference.html(data);\r\n\r\n\t\t\t\t\t\t// Redefine title if exist\r\n\t\t\t\t\t\tvar title = DOMReference.find('title').eq(0).html();\r\n\t\t\t\t\t\tif(title)\r\n\t\t\t\t\t\t\t$('head title').html(title);\r\n\r\n\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tvar found = false;\r\n\t\t\t\t\tfor(var oldURL in self.lazyViewPoint){\r\n\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\tfor(var newURL in self.lazyViewPoint[oldURL]){\r\n\t\t\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\t\t\tfoundAction(self.lazyViewPoint[oldURL][newURL]);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(found) break;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// When the view point was not found\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\t// Use fallback if exist\r\n\t\t\t\t\t\tif(sf.router.lazyViewPoint[\"@default\"])\r\n\t\t\t\t\t\t\tfoundAction(sf.router.lazyViewPoint[\"@default\"]);\r\n\r\n\t\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\t\t\t\tonEvent['error'][i]('sf.router.lazyViewPoint[\"'+oldURL+'\"][\"'+newURL+'\"] was not found');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// If the init function was called\r\n\t\t\t\t\tif(initialized) return;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reinit lazy router\r\n\t\t\t\tself.lazy();\r\n\r\n\t\t\t\t// Run 'before' event for new page view\r\n\t\t\t\tif(!DOMReference) DOMReference = $('body');\r\n\t\t\t\tDOMReference.find('[sf-controller], [sf-page]').each(function(){\r\n\t\t\t\t\tif(this.attributes['sf-controller'])\r\n\t\t\t\t\t\tsf.controller.run(this.attributes['sf-controller'].value);\r\n\r\n\t\t\t\t\tif(this.attributes['sf-page'])\r\n\t\t\t\t\t\tbeforeEvent(this.attributes['sf-page'].value, DOMReference[0]);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tlazyRouting = false;\r\n\r\n\t\t\t\tcurrentRouterURL = path;\r\n\t\t\t\troutingError = false;\r\n\t\t\t},\r\n\t\t\terror:function(xhr, data){\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\tonEvent['error'][i](xhr.status, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Back on error\r\n\t\t\t\troutingError = true;\r\n\t\t\t\twindow.history.back();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!routingBack)\r\n\t\t\twindow.history.pushState(null, \"\", path);\r\n\r\n\t\troutingBack = false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tvar routingError = false;\r\n\twindow.addEventListener('popstate', function(event) {\r\n\t\t// Don't continue if the last routing was error\r\n\t\tif(routingError){\r\n\t\t\troutingError = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\troutingBack = true;\r\n\t\tLazyRouter(window.location.pathname);\r\n\t}, false);\r\n};"]}