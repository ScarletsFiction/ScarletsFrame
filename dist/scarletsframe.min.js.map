{"version":3,"sources":["sf-a_init.js","sf-a_polyfill.js","sf-dom.js","sf-loader.js","sf-component.js","sf-model.js","sf-controller.js","sf-e-ajax.js","sf-z_end.js","sf-router.js","sf-virtual_scroll.js"],"names":["global","factory","exports","module","sf","window","this","document","internal","arguments","constructor","Function","loader","onFinish","apply","regex","getQuotes","validFunctionCall","strictVar","escapeHTML","uniqueDataParser","dataParser","allowedFunctionEval","avoidQuotes","str","func","temp","es","replace","full","push","length","i","isEmptyObject","obj","key","compareObject","obj1","obj2","hiddenProperty","property","value","Object","defineProperty","enumerable","configurable","deepProperty","path","assign","target","varArgs","TypeError","to","index","nextSource","nextKey","prototype","hasOwnProperty","call","writable","Element","remove","CharacterData","DocumentType","forEach","item","parentNode","removeChild","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","querySelectorAll","NodeList","callback","thisArg","location","origin","protocol","hostname","port","values","res","setPrototypeOf","proto","__proto__","Reflect","construct","Parent","args","Class","a","instance","bind","_setPrototypeOf","dom","selector","context","parseElement","String","$","self","findOne","querySelector","parent","element","closest","parentElement","prevAll","isNext","result","findNodes","nextSibling","previousSibling","nextAll","on","event","once","tempCallback","ev","addEventListener","capture","sf$eventListener","off","events","split","ref","removeEventListener","splice","animateCSS","animationName","duration","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","style","webkitAnimationDuration","animationDuration","list","classList","add","setTimeout","emptyDOM","div","createElement","ul","tbody","tr","table","select","html","returnNode","tempDOM","indexOf","textContent","insertAdjacentHTML","escapeText","text","innerHTML","elements","documentElement","domReady","body","haveSymbol","getSelector","childIndexes","untilElement","names","id","test","unshift","tagName","e","join","array","substr","childNodes","loadedContent","totalContent","DOMWasLoaded","DOMReady","turnedOff","whenDOMReady","whenDOMLoaded","whenProgress","onProgress","f","css","rel","href","head","appendChild","js","type","async","src","console","warn","isQueued","domLoadEvent","model","queuePreprocess","domStateEvent","readyState","error","resourceWaitTimer","setInterval","waitResources","clearInterval","listener","controller","init","router","component","scope","registered","available","bases","for","name","extend","pending","defineComponent","base","outerHTML","triggerEvent","componentInit","newID","from","setAttribute","sf$component","sf$componentFrom","new","isCreated","retriggered","capitalizeLetters","newElement","cloneNode","newObj","root","Array","n","firstElementChild","destroy","DOMNodeRemoved","HTMLElement","customElements","HTMLElement_wrap","Wrapper","getPrototypeOf","create","eval","define","err","toUpperCase","slice","root_","run","bindingEnabled","processingElement","trimIndentation","indent","trim","RegExp","bracketMatch","chackValidFunctionCall","localEval","script","_model_","_modelScope","_content_","tempScript","preventExecution","check_","exec","log","_result_","_evaled_","escapeEscapedQuote","unescapeEscapedQuote","elseIfHandle","else_","scopes","elseIf","elseValue","currentElement","previousElementSibling","getAttribute","modelName","$virtual","DOMCursor","modelKeys","modelRef","keys","templateParser_regex","REF_DIRECT","REF_IF","REF_EXEC","templateExec","parse","atIndex","parsed","data","if","templateParser","template","original","addresses","changesReference","pendingInsert","current","address","nodeType","refA","direct","match","cRef","dynamicFlag","parse_index","startFlag","attributes","refB","isValueInput","attribute","removeAttribute","sf$elementReferences","tDOM","insertBefore","syntheticCache","sf$cache","cache","modelRef_array","syntheticTemplate","changes","modelReference","newData","checkRelatedChanges","parseIndex","found","haveChanges","ref_","sf$haveChilds","sf$childRoot","reverse","currentDOM","notExist","isEqualNode","replaceChild","mask","runEval","preParsedReference","scopeMask","itemMask","preParsed","lastParsedIndex","prepared","actual","temp_","matched","exist","charCodeAt","take","passVar","currentIndex","strDeclare","firstTime","JSON","stringify","check","VarPass_","VarPass","s1","obtained","val","findElse","pop","shift","condition","bindArray","propertyName","targetNode","editProperty","refreshTimer","parentChilds","children","isKeyed","contains","eventVar","processElement","options","other","count","vEndRange","preparedLength","spacer","lastElementChild","height","reset","clearTimeout","reinitScroll","overflow","vDOM","theParent","update","index_a","other_sibling","other_parent","oldChild","referenceNode","vCursor","floor","insertAdjacentElement","currentRemoved","startRemove","refreshVirtualSpacer","propertyProxy","subject","lastLength","reinitCursor","o","resetViewport","matchLeft","refresh","real","limit","callback_","var","virtual_scroll","handle","needle","elRef","getElement","process","content","parentNode_","elem","hardRefresh","softRefresh","virtualChilds","childElement","childElementCount","loopParser","method","items","extractPreprocess","sf$bindedKey","initBindingInformation","get","set","callInputListener","v2m","newValue1","newValue2","old","inputBoundRunning","inputTextBound","fromSFFramework","viewInputted","typeData","Number","newValue","sfModel","sfBounded","inputFilesBound","files","inputCheckBoxBound","checked","Boolean","inputSelectBound","multiple","selectedOptions","assignElementData","arrayValue","selected","checkbox","inputBoundRun","Event","dispatchEvent","triggerInputEvent","elementBoundChanges","oneWay","toLowerCase","modelToViewBinding","bindInput","modelScope","alreadyInitialized","queued","parsePreprocess","ceiling","after","nextElementSibling","before","hasAttribute","removeModelBinding","modelFrom","components","everyRemovedNodes","nodes","MutationObserver","observe","everyRecords","record","removedNodes","records","childList","subtree","bindedKey","getOwnPropertyDescriptor","elementBind","input","objValue","getAssigner","m2v","out","newValue3","dcBracket","bindElement","onChanges","properties","copy","addressed","addressAttributes","currentNode","attrs","indexes","addressStart","commentFlag","flag","createComment","textNode","createTextNode","search","extract","sort","b","checkList","full_","match_","findModelProperty","asArray","enclosedHTMLParse","excludes","extracting","nodeName","enclosing","enclosed","nodeValue","modelElement","attr","active","bindedList","parentEl","bindedListIndex","listenSFClick","script_","method_","preventDefault","globals","jsonpRequests","Request","requestOptions","globalsNoCallbacks","callbackName","defaults","url","toString","user","password","headers","xhrFields","statusCode","processData","dataType","contentType","timeout","fireCallback","globalCallbackValue","optionCallbackValue","_i","paramsPrefix","stringData","serializeQuery","abortTimeout_1","callbackName_1","Date","now","callbackSplit","requestUrl","addVars","filter","el","script_1","onerror","xhr","XMLHttpRequest","requestParameters","open","xhrTimeout","postData","ArrayBuffer","Blob","Document","FormData","boundary","setRequestHeader","headerName","crossDomain","$2","host","onload","status","responseData","parseError","responseText","responseType","response","onabort","abort","send","RequestShortcut","_a","success","params","prefix","encodeURIComponent","concat","post","json","getJSON","postJSON","setup","ajax","loading","enabled","pauseRenderOnTransition","currentPage","initialized","currentRouterURL","popstateListener","routingError","routingBack","goto","pathname","beforeEvent","enable","load","onEvent","loaded","special","lazyViewPoint","history","pushState","RouterLoading","_scarlets","DOMReference","foundAction","last","afterEvent","title","oldURL","newURL","routerLoaded","aborted","back","styleInitialized","scrollingByScript","refreshScrollBounding","cursor","bounding","Math","prepareCount","offsetTop","initial","dCursor","scrollHeight","scrollTo","scroller","virtual","reduce","scrollTop","insertCount","removeUserScrollFocus","getAbsoluteHeight","styles","getComputedStyle","margin","parseInt","offsetHeight","force","checkCursorPosition","additionalScroll","moveTo","getElementById","sheet","insertRule","cssRules","initStyles","reinitOnly","elementLength","obtainElements","_onElementResize","offElementResize","visibleLength","clientHeight","ceilingHeight","floorHeight","fillViewport","updating","resetCeiling","previousCeiling","nextFloor","hitFloor","hitCeiling","_onElementResize_timer","scrollWidth","width","onElementResize","dynamicHeight","offsetTo","fromCeiling","scrollFocused","moveElementCursor","navigator","userAgent","staticHeight"],"mappings":"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","file":"scarletsframe.min.js","sourcesContent":["(function(global, factory){\r\n  if(typeof exports === 'object' && typeof module !== 'void 0') module.exports = factory(global);\r\n  else global.sf = factory(global);\r\n}(typeof window !== \"void 0\" ? window : this, (function(window){'use strict';\r\nif(typeof document === void 0)\r\n\tdocument = window.document;\r\n// ===== Module Init =====\r\nvar internal = {};\r\n\r\nvar sf = function(){\r\n\tif(arguments[0].constructor === Function){\r\n\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\t}\r\n};\r\n\r\nsf.internal = {};\r\nsf.regex = {\r\n\tgetQuotes:/(['\"])[\\s\\S]*?[^\\\\]\\1/g,\r\n\tvalidFunctionCall:/[a-zA-Z0-9 \\]\\$\\)]/,\r\n\tstrictVar:'(?=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )',\r\n\tescapeHTML:/(?!&#.*?;)[\\u00A0-\\u9999<>\\&]/gm,\r\n\r\n\tuniqueDataParser:/{{((@|#[\\w])[\\s\\S]*?)}}/g,\r\n\tdataParser:/{{([^@%][\\s\\S]*?)}}/g,\r\n};\r\n\r\nvar allowedFunctionEval = [':', 'for', 'if', 'while', '_content_.take', 'console.log'];\r\n\r\nfunction avoidQuotes(str, func){\r\n\tvar temp = [];\r\n\tvar es = '<%$@>';\r\n\tstr = str.replace(sf.regex.getQuotes, function(full){\r\n\t\ttemp.push(full);\r\n\t\treturn es+(temp.length-1)+es;\r\n\t});\r\n\tstr = func(str);\r\n\tfor (var i = 0; i < temp.length; i++) {\r\n\t\tstr = str.replace(es+i+es, temp[i]);\r\n\t}\r\n\treturn str;\r\n}\r\n\r\nfunction isEmptyObject(obj){\r\n\tfor(var key in obj){\r\n\t\treturn false;\r\n\t}\r\n\treturn true\r\n}\r\n\r\nfunction compareObject(obj1, obj2){\r\n\tif(!obj1 || !obj2)\r\n\t\treturn false;\r\n\r\n\tfor(var i in obj1){\r\n\t\tif(typeof obj1[i] !== 'object' && obj1[i] !== obj2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction hiddenProperty(obj, property, value){\r\n\tObject.defineProperty(obj, property, {\r\n\t\tenumerable: false,\r\n\t\tconfigurable: true,\r\n\t\tvalue: value\r\n\t});\r\n}\r\n\r\nfunction deepProperty(obj, path){\r\n  for(var i = 0; i < path.length; i++){\r\n    obj = obj[path[i]];\r\n    if(obj === void 0) return obj;\r\n  }\r\n  return obj;\r\n}","// ==== ES5 Polyfill ====\r\nif(typeof Object.assign != 'function'){\r\n  Object.defineProperty(Object, \"assign\", {\r\n    value: function assign(target, varArgs) {\r\n      'use strict';\r\n      if (target == null)\r\n        throw new TypeError('Cannot convert void 0 or null to object');\r\n      var to = Object(target);\r\n      for (var index = 1; index < arguments.length; index++) {\r\n        var nextSource = arguments[index];\r\n        if (nextSource != null) {\r\n          for (var nextKey in nextSource) {\r\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey))\r\n              to[nextKey] = nextSource[nextKey];\r\n          }\r\n        }\r\n      }\r\n      return to;\r\n    },\r\n    writable: true,\r\n    configurable: true\r\n  });\r\n}\r\n\r\nif(Element.prototype.remove === void 0 || CharacterData.prototype.remove === void 0 || DocumentType.prototype.remove === void 0){\r\n  (function (arr) {\r\n    arr.forEach(function (item) {\r\n      if (item.hasOwnProperty('remove')) {\r\n        return;\r\n      }\r\n      Object.defineProperty(item, 'remove', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n        value: function remove() {\r\n          if (this.parentNode !== null)\r\n            this.parentNode.removeChild(this);\r\n        }\r\n      });\r\n    });\r\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\r\n}\r\n\r\nif(!Element.prototype.matches){\r\n  Element.prototype.matches = (Element.prototype).matchesSelector ||\r\n    (Element.prototype).mozMatchesSelector || (Element.prototype).msMatchesSelector ||\r\n    (Element.prototype).oMatchesSelector || (Element.prototype).webkitMatchesSelector ||\r\n    function (s) {\r\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n      i = matches.length;\r\n      while (--i >= 0 && matches.item(i) !== this){}\r\n      return i > -1;\r\n    };\r\n}\r\n\r\nif(!NodeList.prototype.forEach){\r\n    NodeList.prototype.forEach = function (callback, thisArg) {\r\n        thisArg = thisArg || window;\r\n        for (var i = 0; i < this.length; i++) {\r\n            callback.call(thisArg, this[i], i, this);\r\n        }\r\n    };\r\n}\r\n\r\nif(!window.location.origin)\r\n  window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');\r\n\r\nif(!Object.values)\r\n  Object.values = function(obj){\r\n    var res = [];\r\n    for (var i in obj) {\r\n        if (obj.hasOwnProperty(i)) {\r\n            res.push(obj[i]);\r\n        }\r\n    }\r\n    return res;\r\n  }\r\n\r\nif(Object.setPrototypeOf === void 0)\r\n  Object.setPrototypeOf = function(obj, proto) {\r\n    obj.__proto__ = proto;\r\n    return obj; \r\n  }\r\n\r\nif(typeof Reflect === 'undefined'){\r\n  Reflect = {};\r\n  Reflect.construct = function(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; };\r\n}","sf.dom = function(selector, context){\r\n\tif(selector[0] === '<') return sf.dom.parseElement(selector);\r\n\tif(selector.constructor !== String) return selector;\r\n\r\n\tif(context) return context.querySelectorAll(selector);\r\n\treturn document.querySelectorAll(selector);\r\n}\r\n\r\nvar $ = sf.dom; // Shortcut\r\n\r\n;(function(){\r\n\tvar self = sf.dom;\r\n\r\n\tself.findOne = function(selector, context){\r\n\t\tif(context !== void 0) return context.querySelector(selector);\r\n\t\treturn document.querySelector(selector);\r\n\t}\r\n\r\n\tself.parent = function(element, selector){\r\n\t\tif(element.closest) return element.closest(selector);\r\n\r\n\t\tdo {\r\n\t\t\tif(element.matches(selector) === true)\r\n\t\t\t\treturn element;\r\n\r\n\t\t\telement = element.parentElement;\r\n\t\t} while (element !== null);\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tself.prevAll = function(element, selector, isNext){\r\n\t\tvar result = [];\r\n\t\tvar findNodes = selector === null || selector.constructor !== String ? true : false;\r\n\r\n\t\t// Skip current element\r\n\t\telement = isNext ? element.nextSibling : element.previousSibling;\r\n\t\twhile (element !== null) {\r\n\t\t\tif(findNodes === false && element.matches(selector) === true)\r\n\t\t\t\tresult.push(element);\r\n\t\t\telse{\r\n\t\t\t\tif(element === selector)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tresult.push(element);\r\n\t\t\t}\r\n\r\n\t\t\tif(isNext)\r\n\t\t\t\telement = element.nextSibling;\r\n\t\t\telse\r\n\t\t\t\telement = element.previousSibling;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.nextAll = function(element, selector){\r\n\t\treturn self.prevAll(element, selector, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen to an event\r\n\t * @param  Node \t\t\telement \tparent element\r\n\t * @param  string \t\t\tevent   \tevent name\r\n\t * @param  function|string  selector    callback function or selector\r\n\t * @param  function\t\t\tcallback    callback function\r\n\t * @param  boolean\t\t\tonce    \tcall once\r\n\t * @return null\r\n\t */\r\n\tself.on = function(element, event, selector, callback, once){\r\n\t\tif(typeof element === 'string'){\r\n\t\t\telement = document;\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = event;\r\n\t\t\tevent = element;\r\n\t\t}\r\n\r\n\t\tif(typeof selector === 'function'){\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = null;\r\n\t\t}\r\n\r\n\t\tif(selector){\r\n\t\t\tvar tempCallback = callback;\r\n\t\t\tcallback = function(ev){\r\n\t\t\t\tif(self.parent(ev.target, selector) !== null)\r\n\t\t\t\t\ttempCallback(ev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcallback.selector = selector;\r\n\t\tcallback.once = once;\r\n\t\telement.addEventListener(event, callback, {capture:true, once:once === true});\r\n\r\n\t\t// Save event listener\r\n\t\tif(element.sf$eventListener === void 0)\r\n\t\t\telement.sf$eventListener = {};\r\n\r\n\t\tif(element.sf$eventListener[event] === void 0)\r\n\t\t\telement.sf$eventListener[event] = [];\r\n\r\n\t\telement.sf$eventListener[event].push(callback);\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.once = function(element, event, selector, callback){\r\n\t\tself.on(element, event, selector, callback, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event listener\r\n\t * @param  Node \telement \tparent element\r\n\t * @param  string \tevent   \tevent name\r\n\t * @param  string  \tselector    selector\r\n\t * @return null\r\n\t */\r\n\tself.off = function(element, event, selector){\r\n\t\t// Remove all event\r\n\t\tif(event === void 0){\r\n\t\t\tif(element.sf$eventListener === void 0)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar events = element.sf$eventListener[event];\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar events = event.split(' ');\r\n\t\tif(events.length !== 1){\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove listener\r\n\t\tif(element.sf$eventListener === void 0)\r\n\t\t\treturn;\r\n\r\n\t\tvar ref = element.sf$eventListener;\r\n\t\tif(ref !== void 0 && ref[event] !== void 0){\r\n\t\t\tfor (var i = ref[event].length - 1; i >= 0; i--) {\r\n\t\t\t\tif(selector && ref[event][i].selector !== selector)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\telement.removeEventListener(event, ref[event].splice(i, 1), true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.animateCSS = function(element, animationName, callback, duration) {\r\n\t\tvar animationEnd = {\r\n\t\t\tanimation: 'animationend',\r\n\t\t\tOAnimation: 'oAnimationEnd',\r\n\t\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t\t};\r\n\r\n\t\tfor (var t in animationEnd){\r\n\t\t\tif(element.style[t] !== void 0){\r\n\t\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(duration){\r\n\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t}\r\n\r\n\t\tvar list = ('animated ' + animationName).split(' ');\r\n\t\telement.classList.add.apply(element.classList, list);\r\n\t\t$.once(element, animationEnd, function(){\r\n\t\t\telement.classList.remove.apply(element.classList, list);\r\n\t\t\t\r\n\t\t\tif(duration) setTimeout(function(){\r\n\t\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t\t}, 1);\r\n\r\n\t\t\tif(typeof callback === 'function') callback();\r\n\t\t});\r\n\t}\r\n\r\n\tvar emptyDOM = {\r\n\t\tdiv:document.createElement('div'),\r\n\t\tul:document.createElement('ul'),\r\n\t\ttbody:document.createElement('tbody'),\r\n\t\ttr:document.createElement('tr'),\r\n\t\ttable:document.createElement('table'),\r\n\t\tselect:document.createElement('select'),\r\n\t};\r\n\tself.parseElement = function(html, returnNode){\r\n\t\tvar result = [];\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\r\n        if(html.indexOf('<li') === 0) tempDOM = emptyDOM.ul;\r\n        if(html.indexOf('<tr') === 0) tempDOM = emptyDOM.tbody;\r\n        if(html.indexOf('<td') === 0 || html.indexOf('<th') === 0) tempDOM = emptyDOM.tr;\r\n        if(html.indexOf('<tbody') === 0) tempDOM = emptyDOM.table;\r\n        if(html.indexOf('<option') === 0) tempDOM = emptyDOM.select;\r\n\r\n\t\ttempDOM.textContent = '';\r\n\t\ttempDOM.insertAdjacentHTML('afterBegin', html);\r\n\r\n\t\tvar ref = tempDOM[returnNode ? 'childNodes' : 'children'];\r\n\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\tresult.push(ref.item(i));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tself.escapeText = function(text){\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\t\ttempDOM.textContent = text;\r\n\t\treturn tempDOM.innerHTML;\r\n\t}\r\n\r\n\tself.remove = function(elements){\r\n\t\tif(elements.remove !== void 0)\r\n\t\t\treturn elements.remove();\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\telements[i].remove();\r\n\t\t}\r\n\t}\r\n\r\n\tvar documentElement = null;\r\n\tsetTimeout(function(){\r\n\t\tsf.loader.domReady(function(){\r\n\t\t\tdocumentElement = document.body.parentElement;\r\n\t\t});\r\n\t}, 1);\r\n\r\n\tvar haveSymbol = /[~`!@#$%^&*()+={}|[\\]\\\\:\";'<>?,./ ]/;\r\n\tself.getSelector = function(element, childIndexes, untilElement){\r\n\t\tvar names = [];\r\n\t\tif(untilElement === void 0) untilElement = documentElement;\r\n\r\n\t\tvar previousSibling = childIndexes ? 'previousSibling' : 'previousElementSibling';\r\n\r\n\t\twhile(element.parentNode !== null){\r\n\t\t\tif(element.id && !haveSymbol.test(element.id)){\r\n\t\t\t\tnames.unshift('#'+element.id);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(element === untilElement){\r\n\t\t\t\t\tif(childIndexes === void 0)\r\n\t\t\t\t\t\tnames.unshift(element.tagName);\r\n\t\t\t\t\telse names.unshift(0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar e = element;\r\n\t\t\t\t\tvar i = childIndexes ? 0 : 1;\r\n\r\n\t\t\t\t\twhile(e[previousSibling]){\r\n\t\t\t\t\t\te = e[previousSibling];\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(childIndexes)\r\n\t\t\t\t\t\tnames.unshift(i);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tnames.unshift(\":nth-child(\"+i+\")\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t\tif(element === null)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndexes)\r\n\t\t\treturn names;\r\n\t\treturn names.join(\" > \");\r\n\t}\r\n\r\n\tself.childIndexes = function(array, context){\r\n\t\tvar element = context || documentElement;\r\n\t\tvar i = 1;\r\n\r\n\t\tif(array[0].constructor === String && element.id !== array[0].substr(1))\r\n\t\t\telement = element.querySelector(array[0]);\r\n\r\n\t\telse if(array.length === 1)\r\n\t\t\treturn element;\r\n\r\n\t\tfor (i = i; i < array.length; i++) {\r\n\t\t\telement = element.childNodes.item(array[i]);\r\n\r\n\t\t\tif(element === null)\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n})();","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 0;\r\n\tself.DOMWasLoaded = false;\r\n\tself.DOMReady = false;\r\n\tself.turnedOff = true;\r\n\r\n\tvar whenDOMReady = [];\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\tself.off = function(){\r\n\t\tself.turnedOff = true;\r\n\t}\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.domReady = function(func){\r\n\t\tif(self.DOMReady) return func();\r\n\t\tif(whenDOMReady.indexOf(func) !== -1) return;\r\n\t\twhenDOMReady.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('link');\r\n\t        s.rel = 'stylesheet';\r\n\t        s.href = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tself.js = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('script');\r\n\t        s.type = \"text/javascript\";\r\n\t        s.async = true;\r\n\t        s.src = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(function(){\r\n\t\tif(self.totalContent === 0 && !self.turnedOff){\r\n\t\t\tself.loadedContent = self.totalContent = 1;\r\n\t\t\tconsole.warn(\"If you don't use content loader feature, please turn it off with `sf.loader.off()`\");\r\n\t\t}\r\n\t}, 10000);\r\n\r\n\r\n\tvar isQueued = false;\r\n\tvar lastState = '';\r\n\tdocument.addEventListener(\"load\", function domLoadEvent(event){\r\n\t\t// Add processing class to queued element\r\n\t\tif(isQueued === false && document.body){\r\n\t\t\tdocument.removeEventListener('load', domLoadEvent, true);\r\n\r\n\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tfor (var i = 0; i < isQueued.length; i++) {\r\n\t\t\t\tisQueued[i].classList.add('sf-dom-queued');\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued.length === 0) isQueued = false;\r\n\r\n\t\t\tif(lastState === 'loading'){\r\n\t\t\t\tvar repeatedList = $('[sf-repeat-this]', document.body);\r\n\t\t\t\tfor (var i = 0; i < repeatedList.length; i++) {\r\n\t\t\t\t\trepeatedList[i].classList.add('sf-dom-queued');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Find images\r\n\t\t\t\tvar temp = $('img:not(onload)[src]');\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tsf.loader.totalContent++;\r\n\t\t\t\t\ttemp[i].addEventListener('load', sf.loader.f, {once:true});\r\n\t\t\t\t\ttemp[i].addEventListener('error', sf.loader.f, {once:true});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, true);\r\n\r\n\tdocument.addEventListener('readystatechange', function domStateEvent(){\r\n\t\tif(document.readyState === 'interactive' || document.readyState === 'complete'){\r\n\t\t\tif(self.DOMReady === false){\r\n\t\t\t\tself.DOMReady = true;\r\n\t\t\t\tfor (var i = 0; i < whenDOMReady.length; i++) {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\twhenDOMReady[i]();\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(isQueued === false)\r\n\t\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\r\n\t\t\tresourceWaitTimer = setInterval(waitResources, 100);\r\n\t\t\tdocument.removeEventListener('readystatechange', domStateEvent, true);\r\n\t\t}\r\n\t}, true);\r\n\r\n\tvar resourceWaitTimer = -1;\r\n\tfunction waitResources(){\r\n\t\tif(self.turnedOff === false && self.loadedContent < self.totalContent)\r\n\t\t\treturn;\r\n\r\n\t\tclearInterval(resourceWaitTimer);\r\n\r\n\t\tvar listener = sf.dom('script, link, img');\r\n\t\tfor (var i = 0; i < listener.length; i++) {\r\n\t\t\tlistener[i].removeEventListener('error', sf.loader.f);\r\n\t\t\tlistener[i].removeEventListener('load', sf.loader.f);\r\n\t\t}\r\n\r\n\t\tself.DOMWasLoaded = true;\r\n\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\ttry{\r\n\t\t\t\twhenDOMLoaded[i]();\r\n\t\t\t} catch(e){\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\twhenProgress.splice(0);\r\n\t\twhenDOMReady.splice(0);\r\n\t\twhenDOMLoaded.splice(0);\r\n\t\twhenDOMReady = whenDOMLoaded = null;\r\n\r\n\t\t// Last init\r\n\t\tsf.controller.init();\r\n\t\tsf.model.init(document.body, isQueued);\r\n\t\tsf.router.init();\r\n\r\n\t\tisQueued = null;\r\n\t}\r\n}\r\nsf.prototype.constructor = sf.loader.onFinish;","sf.component = new function(){\r\n\tvar self = this;\r\n\tvar scope = internal.component = {};\r\n\tself.registered = {};\r\n\tself.available = {};\r\n\r\n\tvar bases = {};\r\n\tvar events = {};\r\n\r\n\tself.for = function(name, func, extend){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(self.registered[name] === void 0)\r\n\t\t\tself.registered[name] = [func, sf.controller.pending[name], 0, false, extend];\r\n\t\tself.registered[name][0] = func;\r\n\t\tdelete sf.controller.pending[name];\r\n\r\n\t\tdefineComponent(name);\r\n\t}\r\n\r\n\tself.event = function(name, func){\r\n\t\tevents[name] = func;\r\n\t}\r\n\r\n\tself.base = function(name, func){\r\n\t\tbases[name] = func;\r\n\t}\r\n\r\n\tself.html = function(name, outerHTML){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.html(name, outerHTML);\r\n\t\t\t});\r\n\r\n\t\tif(self.registered[name] === void 0)\r\n\t\t\tself.registered[name] = [false, false, 0, false];\r\n\r\n\t\tvar temp = $.parseElement(outerHTML);\r\n\t\tif(temp.length === 1){\r\n\t\t\tself.registered[name][3] = temp[0];\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tempDOM = document.createElement('div');\r\n\t\ttempDOM.tempDOM = true;\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\ttempDOM.appendChild(temp[i]);\r\n\t\t}\r\n\t\tself.registered[name][3] = tempDOM;\r\n\t}\r\n\r\n\tscope.triggerEvent = function(name, event, obj){\r\n\t\tif(events[name] === void 0 || events[name][event] === void 0)\r\n\t\t\treturn;\r\n\r\n\t\tevents[name][event](obj, event);\r\n\t}\r\n\r\n\tvar tempDOM = document.createElement('div');\r\n\tself.new = function(name, element, isCreated, retriggered){\r\n\t\tif(isCreated === true){\r\n\t\t\tif(sf.loader.DOMWasLoaded === false)\r\n\t\t\t\treturn sf(function(){\r\n\t\t\t\t\tself.new(name, element, isCreated);\r\n\t\t\t\t});\r\n\t\t\tif(self.registered[name][3] === false)\r\n\t\t\t\treturn setTimeout(function(){\r\n\t\t\t\t\tself.new(name, element, isCreated, true);\r\n\t\t\t\t}, 0);\r\n\t\t}\r\n\r\n\t\tif(element === void 0)\r\n\t\t\treturn new window['$'+capitalizeLetters(name.split('-'))];\r\n\r\n\t\tvar newElement = element === void 0;\r\n\t\tif(element === void 0){\r\n\t\t\tif(self.registered[name][3] === false){\r\n\t\t\t\tconsole.error(\"HTML content for '\"+name+\"' was not defined\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement = self.registered[name][3].cloneNode(true);\r\n\t\t}\r\n\r\n\t\tvar newID = name+'@'+(self.registered[name][2]++);\r\n\r\n\t\tif(self.available[name] === void 0)\r\n\t\t\tself.available[name] = [];\r\n\r\n\t\tself.available[name].push(newID);\r\n\r\n\t\tvar newObj = sf.model.root[newID] = {};\r\n\t\tself.registered[name][0](newObj, sf.model);\r\n\r\n\t\tvar extend = self.registered[name][4];\r\n\t\tif(extend !== void 0){\r\n\t\t\tif(extend.constructor === Array){\r\n\t\t\t\tfor (var i = 0; i < extend.length; i++) {\r\n\t\t\t\t\tif(bases[extend[i]] === void 0)\r\n\t\t\t\t\t\treturn console.error(\"'\"+extend[i]+\"' base is not found\");\r\n\t\t\t\t\tbases[extend[i]](newObj, sf.model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(bases[extend] === void 0)\r\n\t\t\t\t\treturn console.error(\"'\"+extend+\"' base is not found\");\r\n\t\t\t\tbases[extend](newObj, sf.model);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(self.registered[name][1])\r\n\t\t\tself.registered[name][1](newObj, sf.model);\r\n\r\n\t\tscope.triggerEvent(name, 'created', newObj);\r\n\r\n\t\tif(newElement !== true && isCreated !== true){\r\n\t\t\tcomponentInit(element, newID, name);\r\n\t\t\telement.model = sf.model.root[newID];\r\n\t\t\treturn newID;\r\n\t\t}\r\n\r\n\t\tvar temp = self.registered[name][3];\r\n\t\tif(temp.tempDOM === true){\r\n\t\t\ttemp = temp.cloneNode(true).childNodes;\r\n\t\t\tfor (var i = 0, n = temp.length; i < n; i++) {\r\n\t\t\t\telement.appendChild(temp[0]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse element.appendChild(temp.cloneNode(true));\r\n\r\n\t\tif(element.parentNode === null){\r\n\t\t\t// Wrap to temporary vDOM\r\n\t\t\ttempDOM.appendChild(element);\r\n\t\t\tcomponentInit(element, newID, name);\r\n\t\t\tsf.model.init(element);\r\n\t\t\telement = tempDOM.firstElementChild;\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t\telse if(isCreated === true){\r\n\t\t\tcomponentInit(element, newID, name);\r\n\t\t\tsf.model.init(element);\r\n\t\t}\r\n\r\n\t\telement.model = sf.model.root[newID];\r\n\t\telement.destroy = function(){\r\n\t\t\tif(this.parentElement === null)\r\n\t\t\t\tinternal.model.DOMNodeRemoved(this);\r\n\t\t\telse this.remove();\r\n\t\t}\r\n\t\treturn element;\r\n\t}\r\n\r\n\tfunction componentInit(element, newID, from){\r\n\t\telement.setAttribute('sf-controller', '');\r\n\t\telement.sf$component = newID;\r\n\t\telement.sf$componentFrom = from;\r\n\t}\r\n\r\n\tvar HTMLElement = window.HTMLElement;\r\n\tvar customElements = window.customElements;\r\n\r\n\tvar HTMLElement_wrap = (function(Class){\r\n\t\tfunction Wrapper(){\r\n\t\t\treturn Reflect.construct(Class, arguments, Object.getPrototypeOf(this).constructor);\r\n\t\t}\r\n\t\tWrapper.prototype = Object.create(Class.prototype, {constructor:{value: Wrapper, enumerable: false, writable: true, configurable: true}}); \r\n\t\treturn Object.setPrototypeOf(Wrapper, Class);\r\n\t})(HTMLElement);\r\n\r\n\t// name = 'tag-name'\r\n\tfunction defineComponent(name){\r\n\t\tname = name.replace(/[^\\w-]+/g, '');\r\n\t\tvar tagName = name;\r\n\t\tname = name.split('-');\r\n\t\tif(name.length === 1)\r\n\t\t\treturn console.error(\"Please use '-' when defining component tags\");\r\n\r\n\t\tname = capitalizeLetters(name);\r\n\t\tvar func = eval(\"function \"+name+\"(){var he = HTMLElement_wrap.call(this);self.new(tagName, he, true);return he}\"+name);\r\n\t\tfunc.prototype = Object.create(HTMLElement.prototype);\r\n\t\tfunc.prototype.constructor = func;\r\n\t\tfunc.__proto__ = HTMLElement;\r\n\r\n\t\t// func.prototype.connectedCallback = function(){};\r\n\r\n\t\ttry{\r\n\t\t  customElements.define(tagName, func);\r\n\t\t}catch(err){console.error(e)}\r\n\r\n\t\twindow['$'+name] = func;\r\n\t}\r\n\r\n\tfunction capitalizeLetters(name){\r\n\t\tfor (var i = 0; i < name.length; i++) {\r\n\t\t\tname[i] = name[i][0].toUpperCase() + name[i].slice(1);\r\n\t\t}\r\n\t\treturn name.join('');\r\n\t}\r\n};","// Data save and HTML content binding\r\nsf.model = function(scope){\r\n\tif(sf.component.registered[scope] !== void 0)\r\n\t\treturn root_(scope);\r\n\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\tif(sf.controller.pending[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n};\r\n\r\n(function(){\r\n\tvar self = sf.model;\r\n\tvar scope = internal.model = {};\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\r\n\tvar processingElement = null;\r\n\r\n\t// For debugging, normalize indentation\r\n\tfunction trimIndentation(text){\r\n\t\tvar indent = text.split(\"\\n\", 3);\r\n\t\tif(indent[0][0] !== ' ' || indent[0][0] !== \"\\t\")\r\n\t\t\tindent = indent[1];\r\n\t\telse indent = indent[0];\r\n\r\n\t\tif(indent === void 0) return text;\r\n\t\tindent = indent.length - indent.trim().length;\r\n\t\tif(indent === 0) return text;\r\n\t\treturn text.replace(RegExp('^([\\\\t ]{'+indent+'})', 'gm'), '');\r\n\t}\r\n\r\n\t// Secured evaluation\r\n\tvar bracketMatch = RegExp('([\\\\w.]*?[\\\\S\\\\s])\\\\('+sf.regex.avoidQuotes, 'g');\r\n\tvar chackValidFunctionCall = sf.regex.validFunctionCall;\r\n\tvar localEval = function(script, _model_, _modelScope, _content_){\r\n\t\t\"use strict\";\r\n\r\n\t\t// ==== Security check ====\r\n\t\tvar tempScript = script;\r\n\r\n\t\t// Remove all inner quotes\r\n\t\ttempScript = tempScript.replace(sf.regex.getQuotes, '\"Quotes\"');\r\n\r\n\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\tvar preventExecution = false;\r\n\t\tvar check_ = null;\r\n\t\twhile((check_ = bracketMatch.exec(tempScript)) !== null){\r\n\t\t\tcheck_[1] = check_[1].trim();\r\n\r\n\t\t\tif(allowedFunctionEval.indexOf(check_[1]) === -1 &&\r\n\t\t\t\tcheck_[1].split('.')[0] !== '_modelScope' &&\r\n\t\t\t\tchackValidFunctionCall.test(check_[1][check_[1].length-1])\r\n\t\t\t){\r\n\t\t\t\tpreventExecution = check_[1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(preventExecution){\r\n\t\t\tconsole.error(\"Trying to executing unrecognized function (\"+preventExecution+\")\");\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\t\t// ==== Security check ended ====\r\n\t\r\n\t\tvar _result_ = '';\r\n\t\ttry{\r\n\t\t\tif(/@return /.test(script) === true){\r\n\t\t\t\tvar _evaled_ = eval('(function(){'+script.split('@return ').join('return ')+'})()');\r\n\t\t\t\treturn _result_ + _evaled_;\r\n\t\t\t}\r\n\t\t\telse var _evaled_ = eval(script);\r\n\t\t} catch(e){\r\n\t\t\tconsole.error(e);\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\t// Find an index for the element on the list\r\n\tself.index = function(element){\r\n\t\tvar i = -1;\r\n\t\tvar tagName = element.tagName;\r\n\t\tvar currentElement = element;\r\n\r\n\t\twhile(element !== null) {\r\n\t\t\tif(element.tagName === tagName)\r\n\t\t\t\ti++;\r\n\r\n\t\t\telement = element.previousElementSibling;\r\n\t\t}\r\n\r\n\t\tvar list = currentElement.getAttribute('sf-bind-list');\r\n\t\tif(!list) return i;\r\n\r\n\t\tvar ref = self.root[sf.controller.modelName(currentElement)][list];\r\n\t\tif(!ref.$virtual) return i;\r\n\r\n\t\treturn i + ref.$virtual.DOMCursor - 1;\r\n\t}\r\n\r\n\t// Declare model for the name with a function\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\t\t\r\n\t\tfunc(self(name), self);\r\n\t}\r\n\r\n\t// Get property of the model\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys;\r\n\t}\r\n\r\n\t// Escape the escaped quote\r\n\tfunction escapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*');\r\n\t}\r\n\r\n\tfunction unescapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\");\r\n\t}\r\n\r\n\tfunction elseIfHandle(else_, scopes){\r\n\t\tvar elseIf = else_.elseIf;\r\n\r\n\t\t// Else if\r\n\t\tfor (var i = 0; i < elseIf.length; i++) {\r\n\t\t\t// Check the condition\r\n\t\t\tscopes[0] = elseIf[i][0];\r\n\t\t\tif(!localEval.apply(self.root, scopes))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Get the value\r\n\t\t\tscopes[0] = elseIf[i][1];\r\n\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t}\r\n\r\n\t\t// Else\r\n\t\tif(else_.elseValue === null)\r\n\t\t\treturn '';\r\n\r\n\t\tscopes[0] = else_.elseValue;\r\n\t\treturn localEval.apply(self.root, scopes);\r\n\t}\r\n\r\n\t// ==== Template parser ====\r\n\tvar templateParser_regex = /{{%=([0-9]+)/gm;\r\n\tvar REF_DIRECT = 0, REF_IF = 1, REF_EXEC = 2;\r\n\tvar templateExec = function(parse, item, atIndex){\r\n\t\tvar parsed = {};\r\n\r\n\t\t// Get or evaluate static or dynamic data\r\n\t\tfor (var i = 0; i < parse.length; i++) {\r\n\t\t\tif(atIndex !== void 0 && atIndex.indexOf(i) === -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar ref = parse[i];\r\n\t\t\tref.data[1] = item;\r\n\r\n\t\t\t// Direct evaluation type\r\n\t\t\tif(ref.type === REF_DIRECT || ref.type === REF_EXEC)\r\n\t\t\t\tparsed[i] = {type:ref.type, data:localEval.apply(self.root, ref.data)};\r\n\r\n\t\t\t// Conditional type\r\n\t\t\telse if(ref.type === REF_IF){\r\n\t\t\t\tvar scopes = ref.data;\r\n\t\t\t\tparsed[i] = {type:ref.type, data:''};\r\n\t\t\t\tscopes[0] = ref.if[0];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tparsed[i].data = elseIfHandle(ref, scopes);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscopes[0] = ref.if[1];\r\n\t\t\t\tparsed[i].data = localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n\r\n\tvar templateParser = function(template, item, original){\r\n\t\tvar html = original === true ? template.html : template.html.cloneNode(true);\r\n\t\tvar addresses = template.addresses;\r\n\t\tvar parsed = templateExec(template.parse, item);\r\n\r\n\t\t// Save model item reference to node\r\n\t\thtml.model = item;\r\n\r\n\t\tvar changesReference = [];\r\n\t\tvar pendingInsert = [];\r\n\r\n\t\t// Find element where the data belongs to\r\n\t\tfor (var i = 0; i < addresses.length; i++) {\r\n\t\t\tvar ref = addresses[i];\r\n\t\t\tvar current = $.childIndexes(ref.address, html);\r\n\r\n\t\t\t// Modify element attributes\r\n\t\t\tif(ref.nodeType === 1){\r\n\t\t\t\tvar refA = ref.attributes;\r\n\t\t\t\tfor(var a = 0; a < refA.length; a++){\r\n\t\t\t\t\tvar refB = refA[a];\r\n\r\n\t\t\t\t\tvar isValueInput = (refB.name === 'value' && (current.tagName === 'TEXTAREA' ||\r\n\t\t\t\t\t\t(current.tagName === 'INPUT' && /checkbox|radio|hidden/.test(current.type) === false)\r\n\t\t\t\t\t));\r\n\r\n\t\t\t\t\tchangesReference.push({\r\n\t\t\t\t\t\tattribute:isValueInput === true ? current : current.attributes[refB.name],\r\n\t\t\t\t\t\tref:refB\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(refB.direct !== void 0){\r\n\t\t\t\t\t\tif(refB.name === 'value' && isValueInput === true){\r\n\t\t\t\t\t\t\tcurrent.value = parsed[refB.direct].data;\r\n\t\t\t\t\t\t\tcurrent.removeAttribute('value');\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcurrent.setAttribute(refB.name, parsed[refB.direct].data);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Below is used for multiple data\r\n\t\t\t\t\tif(refB.name === 'value' && isValueInput === true){\r\n\t\t\t\t\t\tvar temp = current.value;\r\n\t\t\t\t\t\tcurrent.removeAttribute('value');\r\n\t\t\t\t\t\tcurrent.value = temp;\r\n\t\t\t\t\t\trefB = current;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse refB = current.attributes[refB.name];\r\n\r\n\t\t\t\t\trefB.value = refB.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Replace text node\r\n\t\t\tif(ref.nodeType === 3){\r\n\t\t\t\tvar refA = current;\r\n\r\n\t\t\t\tchangesReference.push({\r\n\t\t\t\t\ttextContent:refA,\r\n\t\t\t\t\tref:ref\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(ref.direct !== void 0){\r\n\t\t\t\t\trefA.textContent = parsed[ref.direct].data;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Below is used for multiple/dynamic data\r\n\t\t\t\trefA.textContent = refA.textContent.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Replace dynamic node\r\n\t\t\tif(ref.nodeType === -1){\r\n\t\t\t\tvar cRef = {\r\n\t\t\t\t\tdynamicFlag:current,\r\n\t\t\t\t\tdirect:ref.parse_index,\r\n\t\t\t\t\tparentNode:current.parentNode,\r\n\t\t\t\t\tstartFlag:ref.startFlag && $.childIndexes(ref.startFlag, html)\r\n\t\t\t\t};\r\n\t\t\t\tchangesReference.push(cRef);\r\n\r\n\t\t\t\t// Pending element insert to take other element reference\r\n\t\t\t\tpendingInsert.push(cRef);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Save reference to element\r\n\t\thtml.sf$elementReferences = changesReference;\r\n\t\t// html.sf$modelParsed = parsed;\r\n\r\n\t\t// Run the pending element\r\n\t\tfor (var i = 0; i < pendingInsert.length; i++) {\r\n\t\t\tvar ref = pendingInsert[i];\r\n\t\t\tvar tDOM = $.parseElement(parsed[ref.direct].data, true);\r\n\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\tref.parentNode.insertBefore(tDOM[a], ref.dynamicFlag);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t}\r\n\r\n\tfunction syntheticCache(element, template, item){\r\n\t\tif(element.sf$cache === void 0)\r\n\t\t\telement.sf$cache = {};\r\n\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\tvar ref = modelRef_array[i];\r\n\t\t\tcache[ref[0]] = deepProperty(item, ref[1]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction syntheticTemplate(element, template, property, item){\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tif(property !== void 0){\r\n\t\t\tvar changes = template.modelReference[property];\r\n\t\t\tif(changes === void 0 || changes.length === 0){\r\n\t\t\t\tconsole.error(\"Failed to run syntheticTemplate because property '\"+property+\"' is not observed\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cache)\r\n\t\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\t\tif(ref[0] !== property) continue;\r\n\r\n\t\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t\t// Check if data was different\r\n\t\t\t\t\tif(cache[ref[0]] !== newData)\r\n\t\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar changes = [];\r\n\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\tif(cache === void 0){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t// Check if data was different\r\n\t\t\t\tif(cache[ref[0]] !== newData){\r\n\t\t\t\t\tArray.prototype.push.apply(changes, template.modelReference[ref[0]]);\r\n\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(changes.length === 0) return false;\r\n\t\t}\r\n\r\n\t\tvar parsed = templateExec(template.parse, item, changes);\r\n\t\tfunction checkRelatedChanges(parseIndex){\r\n\t\t\tvar found = false;\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(changes.indexOf(parseIndex[i]) !== -1){\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(found === false)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t// Prepare all required data\r\n\t\t\tchanges = [];\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(parsed[parseIndex[i]] === void 0){\r\n\t\t\t\t\tchanges.push(parseIndex[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tObject.assign(parsed, templateExec(template.parse, item, changes));\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tvar changesReference = element.sf$elementReferences;\r\n\t\tvar haveChanges = false;\r\n\t\tfor (var i = 0; i < changesReference.length; i++) {\r\n\t\t\tvar cRef = changesReference[i];\r\n\r\n\t\t\tif(cRef.dynamicFlag !== void 0){ // Dynamic data\r\n\t\t\t\tif(parsed[cRef.direct] !== void 0){\r\n\t\t\t\t\tvar tDOM = $.parseElement(parsed[cRef.direct].data, true).reverse();\r\n\t\t\t\t\tvar currentDOM = $.prevAll(cRef.dynamicFlag, cRef.startFlag);\r\n\t\t\t\t\tvar notExist = false;\r\n\r\n\t\t\t\t\t// Replace if exist, skip if similar\r\n\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\t\t\tif(currentDOM[a] === void 0){\r\n\t\t\t\t\t\t\tnotExist = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(currentDOM[a].isEqualNode(tDOM[a]) === false)\r\n\t\t\t\t\t\t\tcRef.parentNode.replaceChild(tDOM[a], currentDOM[a]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Add if not exist\r\n\t\t\t\t\tif(notExist){\r\n\t\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++)\r\n\t\t\t\t\t\t\tcRef.parentNode.insertBefore(tDOM[a], cRef.dynamicFlag);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove if over index\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tfor (var a = tDOM.length; a < currentDOM.length; a++) {\r\n\t\t\t\t\t\t\tcurrentDOM[a].remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(cRef.textContent !== void 0){ // Text only\r\n\t\t\t\tif(cRef.ref.parse_index !== void 0){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.textContent.textContent === temp) continue;\r\n\t\t\t\t\t\tcRef.textContent.textContent = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.textContent.textContent === value) continue;\r\n\r\n\t\t\t\t\tvar ref_ = cRef.textContent;\r\n\t\t\t\t\t// Remove old element if exist\r\n\t\t\t\t\tif(ref_.sf$haveChilds === true){\r\n\t\t\t\t\t\twhile(ref_.previousSibling && ref_.previousSibling.sf$childRoot === ref_){\r\n\t\t\t\t\t\t\tref_.previousSibling.remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tref_.textContent = value;\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(cRef.attribute !== void 0){ // Attributes\r\n\t\t\t\tif(cRef.ref.parse_index !== void 0){ // Multiple\r\n\t\t\t\t\tif(checkRelatedChanges(cRef.ref.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.ref.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.attribute.value === temp) continue;\r\n\t\t\t\t\t\tcRef.attribute.value = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.ref.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.ref.direct].data;\r\n\t\t\t\t\tif(cRef.attribute.value === value) continue;\r\n\t\t\t\t\tcRef.attribute.value = value;\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn haveChanges;\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval, preParsedReference){\r\n\t\tvar _modelScope = self.root[scope];\r\n\t\tif(!runEval) runEval = '';\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope).join('|')+')\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\tvar preParsed = [];\r\n\t\t\tvar lastParsedIndex = preParsedReference.length;\r\n\t\t}\r\n\r\n\t\tvar prepared = html.replace(sf.regex.dataParser, function(actual, temp){\r\n\t\t\ttemp = avoidQuotes(temp, function(temp_){\r\n\t\t\t\t// Unescape HTML\r\n\t\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t\t// Mask item variable\r\n\t\t\t\tif(mask)\r\n\t\t\t\t\ttemp_ = temp_.replace(itemMask, function(matched){\r\n\t\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// Mask model for variable\r\n\t\t\t\treturn temp_.replace(scopeMask, function(full, matched){\r\n\t\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t\t});\r\n\t\t\t}).split('_model_._modelScope.').join('_model_.');\r\n\r\n\t\t\t// Evaluate\r\n\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\ttemp = temp.trim();\r\n\r\n\t\t\t\t// Simplicity similar\r\n\t\t\t\tvar exist = preParsed.indexOf(temp);\r\n\r\n\t\t\t\tif(exist === -1){\r\n\t\t\t\t\tpreParsed.push(temp);\r\n\t\t\t\t\tpreParsedReference.push({type:REF_DIRECT, data:[temp, _model_, _modelScope]});\r\n\t\t\t\t\treturn '{{%=' + (preParsed.length + lastParsedIndex - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn '{{%=' + (exist + lastParsedIndex);\r\n\t\t\t}\r\n\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(sf.regex.escapeHTML, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\tpreParsed = _modelScope = _model_ = mask = scope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t}\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\t// Dynamic data parser\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope, runEval){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(passVar === null)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\t// Use strict mode and prepare for new variables\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\t// Declare new variable\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove var because no variable are being passed\r\n\t\t\t\tif(firstTime === true)\r\n\t\t\t\t\tstrDeclare = strDeclare.replace('var ', '');\r\n\r\n\t\t\t\t// Escape function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('&#40;').split(')').join('&#41;');\r\n\r\n\t\t\t\t// Pass to static data parser for another HTML data\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Build script preparation\r\n\t\thtml = html.replace(/{\\[([\\s\\S]*?)\\]}/g, function(full, matched){\r\n\t\t\tif(/{{.*?}}/.test(matched) === false)\r\n\t\t\t\treturn \"_result_ += '\"+matched.split(\"'\").join(\"\\\\'\")+\"'\";\r\n\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope).join('|')+')\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.\\\\b', 'g');\r\n\r\n\t\tif(runEval === '#noEval')\r\n\t\t\tvar preParsedReference = [];\r\n\r\n\t\tvar prepared = html.replace(sf.regex.uniqueDataParser, function(actual, temp){\r\n\t\t\ttemp = avoidQuotes(temp, function(temp_){\r\n\t\t\t\t// Unescape HTML\r\n\t\t\t\ttemp_ = temp_.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t\t// Mask item variable\r\n\t\t\t\tif(mask)\r\n\t\t\t\t\ttemp_ = temp_.replace(itemMask, function(matched){\r\n\t\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// Mask model for variable\r\n\t\t\t\treturn temp_.replace(scopeMask, function(full, matched){\r\n\t\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t\t});\r\n\t\t\t}).split('_model_._modelScope.').join('_model_.');\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass_ = /(var|let)([\\w,\\s]+)(?=\\s(?==|in|of))/g;\r\n\t\t\tvar VarPass = [];\r\n\t\t\tvar s1 = null;\r\n\t\t\twhile((s1 = VarPass_.exec(temp)) !== null){\r\n\t\t\t\tVarPass.push(s1[2]);\r\n\t\t\t}\r\n\r\n\t\t\tif(_model_ === null && runEval === '#noEval')\r\n\t\t\t\tVarPass.push('_model_');\r\n\r\n\t\t\tif(VarPass.length !== 0){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/([\\n\\t\\r]|  )+/g, '').split(',').forEach(function(val){\r\n\t\t\t\t\t\tobtained.push(val);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':(typeof '+VarPass[i]+'!==\"void 0\"?'+VarPass[i]+':void 0)';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(VarPass.length === 0)\r\n\t\t\t\t\tVarPass = 'null';\r\n\t\t\t\telse VarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\t\t\telse temp = temp.split('&VarPass&').join('null');\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\r\n\t\t\t\t// {if, elseIf:([if, value], ...), elseValue}\r\n\t\t\t\tvar findElse = function(text){\r\n\t\t\t\t\ttext = text.join(':');\r\n\t\t\t\t\tvar else_ = null;\r\n\r\n\t\t\t\t\t// Split elseIf\r\n\t\t\t\t\ttext = text.split('@elseif ');\r\n\r\n\t\t\t\t\t// Get else value\r\n\t\t\t\t\tvar else_ = text[text.length - 1].split('@else');\r\n\t\t\t\t\tif(else_.length === 2){\r\n\t\t\t\t\t\ttext[text.length - 1] = else_[0];\r\n\t\t\t\t\t\telse_ = else_.pop();\r\n\t\t\t\t\t\telse_ = else_.substr(else_.indexOf(':') + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse else_ = null;\r\n\r\n\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t\tif:text.shift(),\r\n\t\t\t\t\t\telseIf:[],\r\n\t\t\t\t\t\telseValue:else_\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Separate condition script and value\r\n\t\t\t\t\tfor (var i = 0; i < text.length; i++) {\r\n\t\t\t\t\t\tvar val = text[i].split(':');\r\n\t\t\t\t\t\tobj.elseIf.push([val.shift(), val.join(':')]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tvar condition = check.shift();\r\n\t\t\t\t\tvar elseIf = findElse(check);\r\n\t\t\t\t\telseIf.type = REF_IF;\r\n\t\t\t\t\telseIf.data = [null, _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t\t// Trim Data\r\n\t\t\t\t\telseIf.if = [condition.trim(), elseIf.if.trim()];\r\n\t\t\t\t\tif(elseIf.elseValue !== null)\r\n\t\t\t\t\t\telseIf.elseValue = elseIf.elseValue.trim();\r\n\r\n\t\t\t\t\tfor (var i = 0; i < elseIf.elseIf.length; i++) {\r\n\t\t\t\t\t\telseIf.elseIf[i][0] = elseIf.elseIf[i][0].trim();\r\n\t\t\t\t\t\telseIf.elseIf[i][1] = elseIf.elseIf[i][1].trim();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Push data\r\n\t\t\t\t\tpreParsedReference.push(elseIf);\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scopes = [check[0], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\treturn elseIfHandle(findElse(check), scopes);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcheck.shift();\r\n\t\t\t\tscopes[0] = check.join(':');\r\n\r\n\t\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tvar scopes = [check[1], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tpreParsedReference.push({type:REF_EXEC, data:scopes});\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, scopes);\r\n\t\t\t\treturn temp;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\t_modelScope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t\treturn [prepared, preParsedReference, _content_];\r\n\t\t}\r\n\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\tvar bindArray = function(template, list, mask, modelName, propertyName, targetNode, parentNode, tempDOM){\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'swap', 'move', 'replace', 'softRefresh', 'hardRefresh'];\r\n\t\tvar refreshTimer = -1;\r\n\t\tvar parentChilds = parentNode.children;\r\n\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\r\n\t\t// Update callback\r\n\t\tvar modelRef = self.root[modelName];\r\n\t\tvar eventVar = 'on$'+propertyName;\r\n\t\tvar callback = modelRef[eventVar];\r\n\r\n\t\tvar processElement = function(index, options, other, count){\r\n\t\t\t// Find boundary for inserting to virtual DOM\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar vStartRange = list.$virtual.DOMCursor;\r\n\t\t\t\tvar vEndRange = vStartRange + list.$virtual.preparedLength;\r\n\t\t\t}\r\n\r\n\t\t\tif(options === 'clear'){\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar spacer = [parentNode.firstElementChild, parentNode.lastElementChild];\r\n\r\n\t\t\t\tparentNode.textContent = '';\r\n\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tparentNode.appendChild(spacer[0]);\r\n\t\t\t\t\tparentNode.appendChild(spacer[1]);\r\n\t\t\t\t\tlist.$virtual.dom.textContent = '';\r\n\t\t\t\t\tspacer[1].style.height = \r\n\t\t\t\t\tspacer[0].style.height = 0;\r\n\t\t\t\t\tlist.$virtual.reset(true);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid multiple refresh by set a timer\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar exist = list.$virtual.elements();\r\n\r\n\t\t\t\tclearTimeout(refreshTimer);\r\n\t\t\t\trefreshTimer = setTimeout(function(){\r\n\t\t\t\t\tlist.$virtual.reinitScroll();\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse exist = parentChilds;\r\n\r\n\t\t\t// Hard refresh - Append element\r\n\t\t\tif(options === 'hardRefresh'){\r\n\t\t\t\t// Clear siblings after the index\r\n\t\t\t\tfor (var i = index; i < exist.length; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar vCursor = list.$virtual.vCursor;\r\n\r\n\t\t\t\tfor (var i = index; i < list.length; i++) {\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\tif(vCursor.floor === null && i < vEndRange)\r\n\t\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\t\telse list.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse parentNode.appendChild(temp);\r\n\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual && list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(callback === void 0)\r\n\t\t\t\tcallback = modelRef[eventVar];\r\n\r\n\t\t\tif(options === 'swap' || options === 'move'){\r\n\t\t\t\tif(options === 'move'){\r\n\t\t\t\t\tvar overflow = list.length - index - count;\r\n\t\t\t\t\tif(overflow < 0)\r\n\t\t\t\t\t\tcount += overflow;\r\n\r\n\t\t\t\t\t// Move to virtual DOM\r\n\t\t\t\t\tvar vDOM = document.createElement('div');\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tvDOM.appendChild(exist[index + i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar nextSibling = exist[other] || null;\r\n\t\t\t\t\tvar theParent = nextSibling && nextSibling.parentNode;\r\n\r\n\t\t\t\t\tif(theParent === false){\r\n\t\t\t\t\t\tif(list.$virtual && list.length >= vEndRange)\r\n\t\t\t\t\t\t\ttheParent = list.$virtual.dom;\r\n\t\t\t\t\t\telse theParent = parentNode;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Move to defined index\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\ttheParent.insertBefore(vDOM.firstElementChild, nextSibling);\r\n\r\n\t\t\t\t\t\tif(callback !== void 0 && callback.update)\r\n\t\t\t\t\t\t\tcallback.update(exist[index + i], 'move');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(index > other){\r\n\t\t\t\t\tvar index_a = exist[other];\r\n\t\t\t\t\tother = exist[index];\r\n\t\t\t\t\tindex = index_a;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tindex = exist[index];\r\n\t\t\t\t\tother = exist[other];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar other_sibling = other.nextSibling;\r\n\t\t\t\tvar other_parent = other.parentNode;\r\n\t            index.parentNode.insertBefore(other, index.nextSibling);\r\n\t            other_parent.insertBefore(index, other_sibling);\r\n\r\n\t\t\t\tif(callback !== void 0 && callback.update){\r\n\t\t\t\t\tcallback.update(exist[other], 'swap');\r\n\t\t\t\t\tcallback.update(exist[index], 'swap');\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Clear unused element if current array < last array\r\n\t\t\tif(options === 'removeRange'){\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\texist[i].remove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(options === 'remove'){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\texist[index].remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(callback !== void 0 && callback.remove){\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tstartRemove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse startRemove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update\r\n\t\t\telse if(options === 'update'){\r\n\t\t\t\tif(index === void 0){\r\n\t\t\t\t\tindex = 0;\r\n\t\t\t\t\tother = list.length;\r\n\t\t\t\t}\r\n\t\t\t\telse if(other === void 0) other = index + 1;\r\n\t\t\t\telse if(other < 0) other = list.length + other;\r\n\t\t\t\telse other += index;\r\n\r\n\t\t\t\t// Trim length\r\n\t\t\t\tvar overflow = list.length - other;\r\n\t\t\t\tif(overflow < 0) other = other + overflow;\r\n\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\tvar oldChild = exist[i];\r\n\t\t\t\t\tif(oldChild === void 0 || list[i] === void 0)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\toldChild.parentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tparentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\tif(callback !== void 0 && callback.update)\r\n\t\t\t\t\t\tcallback.update(temp, 'replace');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar item = list[index];\r\n\t\t\tif(item === void 0) return;\r\n\r\n\t\t\tvar temp = templateParser(template, item);\r\n\t\t\tif(isKeyed === false)\r\n\t\t\t\tsyntheticCache(temp, template, item);\r\n\r\n\t\t\t// Create\r\n\t\t\tif(options === 'insertAfter'){\r\n\t\t\t\tif(exist.length === 0)\r\n\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\telse{\r\n\t\t\t\t\tvar referenceNode = exist[index - 1];\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode.nextSibling);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t\telse if(options === 'prepend'){\r\n\t\t\t\tvar referenceNode = exist[0];\r\n\t\t\t\tif(referenceNode !== void 0){\r\n\t\t\t\t\treferenceNode.parentNode.insertBefore(temp, referenceNode);\r\n\r\n\t\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t}\r\n\t\t\t\telse options = 'append';\r\n\t\t\t}\r\n\t\t\tif(options === 'append'){\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tif(index === 0) // Add before virtual scroller\r\n\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\telse if(index >= vEndRange){ // To virtual DOM\r\n\t\t\t\t\t\tif(list.$virtual.vCursor.floor === null)\r\n\t\t\t\t\t\t\tlist.$virtual.vCursor.floor = temp;\r\n\r\n\t\t\t\t\t\tlist.$virtual.dom.appendChild(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse // To real DOM\r\n\t\t\t\t\t\texist[index-1].insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparentNode.appendChild(temp);\r\n\t\t\t\tif(callback !== void 0 && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar _double_zero = [0,0]; // For arguments\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = void 0;\r\n\t\t\t\t\tvar lastLength = this.length;\r\n\r\n\t\t\t\t\tif(name === 'move'){\r\n\t\t\t\t\t\tvar from = arguments[0];\r\n\t\t\t\t\t\tvar to = arguments[1];\r\n\t\t\t\t\t\tif(from === to) return;\r\n\t\t\t\t\t\tvar count = arguments[2] || 1;\r\n\t\t\t\t\t\tprocessElement(from, 'move', to, count);\r\n\r\n\t\t\t\t\t\tvar temp = Array.prototype.splice.apply(this, [from, count]);\r\n\t\t\t\t\t\ttemp.unshift(to, 0);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Reset virtual ceiling and floor\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(name === 'swap'){\r\n\t\t\t\t\t\tvar i = arguments[0];\r\n\t\t\t\t\t\tvar o = arguments[1];\r\n\t\t\t\t\t\tif(i === o) return;\r\n\t\t\t\t\t\tprocessElement(i, 'swap', o);\r\n\t\t\t\t\t\tvar temp = this[i];\r\n\t\t\t\t\t\tthis[i] = this[o];\r\n\t\t\t\t\t\tthis[o] = temp;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'replace'){\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.resetViewport();\r\n\r\n\t\t\t\t\t\t// Check if item has same reference\r\n\t\t\t\t\t\tif(arguments[0].length >= lastLength && lastLength !== 0){\r\n\t\t\t\t\t\t\tvar matchLeft = lastLength;\r\n\t\t\t\t\t\t\tvar ref = arguments[0];\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < lastLength; i++) {\r\n\t\t\t\t\t\t\t\tif(ref[i] === this[i]){\r\n\t\t\t\t\t\t\t\t\tmatchLeft--;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the end\r\n\t\t\t\t\t\t\tif(matchLeft === 0){\r\n\t\t\t\t\t\t\t\tif(ref.length === lastLength) return;\r\n\r\n\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(lastLength);\r\n\t\t\t\t\t\t\t\ttemp.unshift(lastLength, 0);\r\n\t\t\t\t\t\t\t\tthis.splice.apply(this, temp);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add new element at the middle\r\n\t\t\t\t\t\t\telse if(matchLeft !== lastLength){\r\n\t\t\t\t\t\t\t\tif(arguments[1] === true){\r\n\t\t\t\t\t\t\t\t\tvar temp = arguments[0].slice(i);\r\n\t\t\t\t\t\t\t\t\ttemp.unshift(i, lastLength - i);\r\n\t\t\t\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t\t\t\tlist.refresh(i, lastLength);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Build from zero\r\n\t\t\t\t\t\tif(lastLength === 0){\r\n\t\t\t\t\t\t\tArray.prototype.push.apply(this, arguments[0]);\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Clear all items and merge the new one\r\n\t\t\t\t\t\tvar temp = [0, lastLength];\r\n\t\t\t\t\t\tArray.prototype.push.apply(temp, arguments[0]);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, temp);\r\n\r\n\t\t\t\t\t\t// Rebuild all element\r\n\t\t\t\t\t\tif(arguments[1] !== true || isKeyed){\r\n\t\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reuse some element\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t// Clear unused element if current array < last array\r\n\t\t\t\t\t\t\tif(this.length < lastLength)\r\n\t\t\t\t\t\t\t\tprocessElement(this.length, 'removeRange', lastLength);\r\n\r\n\t\t\t\t\t\t\t// And start refreshing\r\n\t\t\t\t\t\t\tlist.refresh(0, this.length);\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual && list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\t\t\t\t\tlist.$virtual.refreshVirtualSpacer(list.$virtual.DOMCursor);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reset virtual list\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.reset();\r\n\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice' && arguments[0] === 0 && arguments[1] === void 0){\r\n\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\treturn Array.prototype.splice.apply(this, arguments);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(this.length, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'push'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(lastLength, 'append');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = 0; i < arguments.length; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(lastLength + i, 'append');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'shift'){\r\n\t\t\t\t\t\tprocessElement(0, 'remove');\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor > 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor--;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments[0] === 0 && arguments[1] === void 0)\r\n\t\t\t\t\t\t\treturn temp;\r\n\r\n\t\t\t\t\t\t// Removing data\r\n\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\tif(real < 0) real = lastLength + real;\r\n\r\n\t\t\t\t\t\tvar limit = arguments[1];\r\n\t\t\t\t\t\tif(!limit && limit !== 0) limit = this.length;\r\n\r\n\t\t\t\t\t\tfor (var i = limit - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tprocessElement(real + i, 'remove');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = real - limit;\r\n\r\n\t\t\t\t\t\tif(arguments.length >= 3){ // Inserting data\r\n\t\t\t\t\t\t\tlimit = arguments.length - 2;\r\n\r\n\t\t\t\t\t\t\t// Trim the index if more than length\r\n\t\t\t\t\t\t\tif(real >= this.length)\r\n\t\t\t\t\t\t\t\treal = this.length - 1;\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < limit; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(real + i, 'insertAfter');\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor >= real)\r\n\t\t\t\t\t\t\t\tlist.$virtual.DOMCursor += limit;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift'){\r\n\t\t\t\t\t\tif(arguments.length === 1)\r\n\t\t\t\t\t\t\tprocessElement(0, 'prepend');\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tfor (var i = arguments.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\t\tprocessElement(i, 'prepend');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor !== 0){\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor += arguments.length;\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'softRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0], 'update', arguments[1]);\r\n\r\n\t\t\t\t\t\tif(list.$virtual && list.$virtual.DOMCursor)\r\n\t\t\t\t\t\t\tlist.$virtual.reinitCursor();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'hardRefresh'){\r\n\t\t\t\t\t\tprocessElement(arguments[0] || 0, 'hardRefresh');\r\n\r\n\t\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\t\tlist.$virtual.DOMCursor = arguments[0] || 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(parentNode && parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\tdelete list.$virtual;\r\n\t\t\tlist.$virtual = {};\r\n\r\n\t\t\t// Transfer virtual DOM\r\n\t\t\tlist.$virtual.dom = tempDOM;\r\n\t\t\tif(callback !== void 0)\r\n\t\t\t\tlist.$virtual.callback = callback;\r\n\t\t\telse list.$virtual.callback_ = {ref:modelRef, var:eventVar};\r\n\r\n\t\t\tparentNode.replaceChild(template.html, parentChilds[1]);\r\n\t\t\tsf.internal.virtual_scroll.handle(list, targetNode, parentNode);\r\n\t\t\ttemplate.html.remove();\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\r\n\t\t// Todo: Enable auto item binding\r\n\t\tif(false && list.auto !== false){\r\n\t\t\t// for (var i = 0; i < list.length; i++) {\r\n\t\t\t// \tlist[i]\r\n\t\t\t// }\r\n\t\t}\r\n\r\n\t\thiddenProperty(list, '$replace', function(index, key, needle, func){\r\n\t\t\tvar elRef = list.getElement(index).sf$elementReferences;\r\n\t\t\tvar process = template.modelReference[key];\r\n\t\t\tif(process === void 0){\r\n\t\t\t\tconsole.error(\"Can't found binding for '\"+key+\"'\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < elRef.length; i++) {\r\n\t\t\t\tif(elRef[i].textContent === void 0 || elRef[i].ref.direct === void 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tif(process.indexOf(elRef[i].ref.direct) !== -1){\r\n\t\t\t\t\tvar ref = elRef[i].textContent;\r\n\t\t\t\t\tvar content = $.escapeText(list[index][key]).replace(needle, func);\r\n\r\n\t\t\t\t\t// Skip if nothing was changed\r\n\t\t\t\t\tif(list[index][key] === content) continue;\r\n\t\t\t\t\tref.textContent = ''; // Let this empty for later referencing\r\n\t\t\t\t\tref.sf$haveChilds = true;\r\n\t\t\t\t\tcontent = $.parseElement(content, true);\r\n\r\n\t\t\t\t\t// Remove old element if exist\r\n\t\t\t\t\twhile(ref.previousSibling && ref.previousSibling.sf$childRoot === ref){\r\n\t\t\t\t\t\tref.previousSibling.remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar parentNode_ = ref.parentNode;\r\n\t\t\t\t\tfor (var i = 0; i < content.length; i++) {\r\n\t\t\t\t\t\tcontent[i].sf$childRoot = ref;\r\n\t\t\t\t\t\tparentNode_.insertBefore(content[i], ref);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\thiddenProperty(list, 'refresh', function(index, length, property){\r\n\t\t\tif(index === void 0 || index.constructor === String){\r\n\t\t\t\tproperty = index;\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tlength = list.length;\r\n\t\t\t}\r\n\t\t\telse if(length === void 0) length = index + 1;\r\n\t\t\telse if(length.constructor === String){\r\n\t\t\t\tproperty = length;\r\n\t\t\t\tlength = index + 1;\r\n\t\t\t}\r\n\t\t\telse if(length < 0) length = list.length + length;\r\n\t\t\telse length += index;\r\n\r\n\t\t\t// Trim length\r\n\t\t\tvar overflow = list.length - length;\r\n\t\t\tif(overflow < 0) length = length + overflow;\r\n\r\n\t\t\tfor (var i = index; i < length; i++) {\r\n\t\t\t\tvar elem = list.getElement(i);\r\n\r\n\t\t\t\t// Create element if not exist\r\n\t\t\t\tif(elem === void 0){\r\n\t\t\t\t\tlist.hardRefresh(i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(isKeyed === true)\r\n\t\t\t\t\t\tlist.softRefresh(i);\r\n\t\t\t\t\telse if(syntheticTemplate(elem, template, property, list[i]) === false)\r\n\t\t\t\t\t\tcontinue; // Continue if no update\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(callback !== void 0 && callback.update)\r\n\t\t\t\t\tcallback.update(elem, 'replace');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar virtualChilds = null;\r\n\t\tif(list.$virtual)\r\n\t\t\tvirtualChilds = list.$virtual.dom.children;\r\n\t\thiddenProperty(list, 'getElement', function(index){\r\n\t\t\tif(virtualChilds !== null){\r\n\t\t\t\tvar ret = void 0;\r\n\t\t\t\tif(index < list.$virtual.DOMCursor)\r\n\t\t\t\t\treturn virtualChilds[index];\r\n\t\t\t\telse {\r\n\t\t\t\t\tindex -= list.$virtual.DOMCursor;\r\n\t\t\t\t\tvar childElement = parentNode.childElementCount - 2;\r\n\r\n\t\t\t\t\tif(index < childElement)\r\n\t\t\t\t\t\treturn parentChilds[index + 1];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn virtualChilds[index - childElement + list.$virtual.DOMCursor];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn void 0;\r\n\t\t\t}\r\n\r\n\t\t\treturn parentChilds[index];\r\n\t\t});\r\n\t}\r\n\r\n\tvar loopParser = function(name, template, script, targetNode, parentNode){\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\t\tvar isKeyed = parentNode.classList.contains('sf-keyed-list');\r\n\r\n\t\tvar items = root_(name)[method[1]];\r\n\t\tif(items === void 0)\r\n\t\t\titems = root_(name)[method[1]] = [];\r\n\r\n\t\ttemplate.setAttribute('sf-bind-list', method[1]);\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = template;\r\n\t\ttemplate = self.extractPreprocess(template, mask, name);\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tvar tempDOM = document.createElement('div');\r\n\t\t\tvar modelRef = self.root[name];\r\n\r\n\t\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\t\tvar elem = templateParser(template, items[i]);\r\n\t\t\t\ttempDOM.appendChild(elem);\r\n\r\n\t\t\t\tif(isKeyed === false)\r\n\t\t\t\t\tsyntheticCache(elem, template, items[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// Enable element binding\r\n\t\t\tif(modelRef.sf$bindedKey === void 0)\r\n\t\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\t\tif(modelRef.sf$bindedKey[method[1]] === void 0)\r\n\t\t\t\tmodelRef.sf$bindedKey[method[1]] = null;\r\n\r\n\t\t\tObject.defineProperty(modelRef, method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tif(val.length === 0)\r\n\t\t\t\t\t\treturn items.splice(0);\r\n\t\t\t\t\treturn items.replace(val, true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tbindArray(template, items, mask, name, method[1], targetNode, parentNode, tempDOM);\r\n\r\n\t\t\t// Output to real DOM if not being used for virtual list\r\n\t\t\tif(items.$virtual === void 0){\r\n\t\t\t\tvar children = tempDOM.children;\r\n\t\t\t\tfor (var i = 0, n = children.length; i < n; i++) {\r\n\t\t\t\t\tparentNode.appendChild(children[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttempDOM.remove();\r\n\t\t\t\ttempDOM = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar callInputListener = function(model, property, value){\r\n\t\tvar callback = model['on$'+property];\r\n\t\tvar v2m = model['v2m$'+property];\r\n\t\tvar newValue1 = void 0; var newValue2 = void 0;\r\n\t\tif(callback !== void 0 || v2m !== void 0){\r\n\t\t\tvar old = model[property];\r\n\t\t\tif(old !== null && old !== void 0 && old.constructor === Array)\r\n\t\t\t\told = old.slice(0);\r\n\r\n\t\t\ttry{\r\n\t\t\t\tif(v2m !== void 0)\r\n\t\t\t\t\tnewValue1 = v2m(old, value);\r\n\r\n\t\t\t\tif(callback !== void 0)\r\n\t\t\t\t\tnewValue2 = callback(old, value);\r\n\t\t\t}catch(e){console.error(e)}\r\n\t\t}\r\n\t\treturn newValue2 !== void 0 ? newValue2 : newValue1;\r\n\t}\r\n\r\n\tvar inputBoundRunning = false;\r\n\tvar inputTextBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\r\n\t\tinputBoundRunning = true;\r\n\t\tvar ref = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar value = ref.typeData === Number ? Number(ref.value) : ref.value;\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== void 0)\r\n\t\t\tref.sfModel[ref.sfBounded] = newValue;\r\n\t\telse ref.sfModel[ref.sfBounded] = value;\r\n\t}\r\n\tvar inputFilesBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tvar ref = e.target;\r\n\t\tcallInputListener(ref.sfModel, ref.sfBounded, ref.files);\r\n\t\tref.sfModel[ref.sfBounded] = ref.files;\r\n\t}\r\n\r\n\tvar inputCheckBoxBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tinputBoundRunning = true;\r\n\t\tvar ref = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar value = ref.typeData === Number ? Number(ref.value) : ref.value;\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== void 0)\r\n\t\t\tvalue = newValue;\r\n\r\n\t\tvar model = ref.sfModel;\r\n\t\tvar constructor = model[ref.sfBounded];\r\n\r\n\t\tif(constructor === Array){\r\n\t\t\tvar i = model[ref.sfBounded].indexOf(value);\r\n\r\n\t\t\tif(i === -1 && ref.checked === true)\r\n\t\t\t\tmodel[ref.sfBounded].push(value);\r\n\t\t\telse if(i !== -1 && ref.checked === false)\r\n\t\t\t\tmodel[ref.sfBounded].splice(i, 1);\r\n\t\t}\r\n\t\telse if(constructor === Boolean || ref.typeData === Boolean)\r\n\t\t\tmodel[ref.sfBounded] = ref.checked;\r\n\t\telse model[ref.sfBounded] = value;\r\n\t}\r\n\r\n\tvar inputSelectBound = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\t\r\n\t\tinputBoundRunning = true;\r\n\t\tvar ref = e.target;\r\n\t\tref.viewInputted = true;\r\n\t\tvar typeData = ref.typeData;\r\n\t\tif(ref.multiple === true){\r\n\t\t\tvar temp = ref.selectedOptions;\r\n\t\t\tvar value = [];\r\n\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\tvalue.push(typeData === Number ? Number(temp[i].value) : temp[i].value);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse value = typeData === Number ? Number(ref.selectedOptions[0].value) : ref.selectedOptions[0].value;\r\n\r\n\t\tvar newValue = callInputListener(ref.sfModel, ref.sfBounded, value);\r\n\t\tif(newValue !== void 0)\r\n\t\t\tref.sfModel[ref.sfBounded] = newValue;\r\n\t\telse ref.sfModel[ref.sfBounded] = value;\r\n\t}\r\n\r\n\tvar assignElementData = {\r\n\t\tselect:function(model, property, element){\r\n\t\t\tvar list = element.options;\r\n\t\t\tvar typeData = element.typeData;\r\n\t\t\tvar arrayValue = model[property].constructor === Array ? model[property] : false;\r\n\t\t\tfor (var i = 0, n = list.length; i < n; i++) {\r\n\t\t\t\tif(arrayValue === false){\r\n\t\t\t\t\tif(typeData === String)\r\n\t\t\t\t\t\tlist[i].selected = list[i].value === model[property];\r\n\t\t\t\t\telse list[i].selected = list[i].value == model[property];\r\n\t\t\t\t}\r\n\t\t\t\telse list[i].selected = arrayValue.indexOf(typeData === Number ? Number(list[i].value) : list[i].value) !== -1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckbox:function(model, property, element){\r\n\t\t\tif(model[property].constructor === Array)\r\n\t\t\t\telement.checked = model[property].indexOf(element.typeData === Number ? Number(element.value) : element.value) !== -1;\r\n\t\t\telse if(model[property].constructor === Boolean)\r\n\t\t\t\telement.checked = Boolean(model[property]);\r\n\t\t\telse{\r\n\t\t\t\tif(element.typeData === String)\r\n\t\t\t\t\telement.checked = element.value === model[property];\r\n\t\t\t\telse element.checked = element.value == model[property];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar inputBoundRun = function(model, property, elements){\r\n\t\tif(inputBoundRunning === true)\r\n\t\t\treturn; // Avoid multiple assigment\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\tvar ev = new Event('change');\r\n\t\t\tev.fromSFFramework = true;\r\n\r\n\t\t\tif(elements.type === 1) // text\r\n\t\t\t\telements[i].value = model[property];\r\n\t\t\telse if(elements.type === 2) // select options\r\n\t\t\t\tassignElementData.select(model, property, elements[i]);\r\n\t\t\telse if(elements.type === 3) // radio\r\n\t\t\t\telements[i].checked = model[property] == elements[i].value;\r\n\t\t\telse if(elements.type === 4) // checkbox\r\n\t\t\t\tassignElementData.checkbox(model, property, elements[i]);\r\n\r\n\t\t\telements[i].dispatchEvent(ev);\r\n\t\t}\r\n\t}\r\n\r\n\tvar triggerInputEvent = function(e){\r\n\t\tif(e.fromSFFramework === true) return;\r\n\t\tif(e.target.viewInputted === true){\r\n\t\t\te.target.viewInputted = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\te.target.dispatchEvent(new Event('input'));\r\n\t}\r\n\r\n\tvar elementBoundChanges = function(model, property, element, oneWay){\r\n\t\t// Enable multiple element binding\r\n\t\tif(model.sf$bindedKey === void 0)\r\n\t\t\tinitBindingInformation(model);\r\n\r\n\t\tvar type = 0;\r\n\t\tvar typeData = null;\r\n\t\tif(model[property] !== null && model[property] !== void 0)\r\n\t\t\ttypeData = model[property].constructor;\r\n\r\n\t\tvar assignedType = (element.getAttribute('typedata') || '').toLowerCase();\r\n\t\tif(assignedType === 'number')\r\n\t\t\ttypeData = Number;\r\n\r\n\t\telement.typeData = typeData;\r\n\t\t$.on(element, 'change', triggerInputEvent);\r\n\r\n\t\t// Bound value change\r\n\t\tif(element.tagName === 'TEXTAREA'){\r\n\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\telement.value = model[property];\r\n\t\t\ttype = 1;\r\n\t\t}\r\n\r\n\t\telse if(element.selectedOptions !== void 0){\r\n\t\t\t$.on(element, 'input', inputSelectBound);\r\n\t\t\ttype = 2;\r\n\r\n\t\t\tassignElementData.select(model, property, element);\r\n\t\t}\r\n\r\n\t\telse{\r\n\t\t\tvar type = element.type.toLowerCase();\r\n\t\t\tif(type === 'radio'){\r\n\t\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\t\ttype = 3;\r\n\r\n\t\t\t\telement.checked = model[property] == element.value;\r\n\t\t\t}\r\n\t\t\telse if(type === 'checkbox'){\r\n\t\t\t\t$.on(element, 'input', inputCheckBoxBound);\r\n\t\t\t\ttype = 4;\r\n\r\n\t\t\t\tassignElementData.checkbox(model, property, element);\r\n\t\t\t}\r\n\r\n\t\t\telse if(type === 'file'){\r\n\t\t\t\t$.on(element, 'input', inputFilesBound);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telse{\r\n\t\t\t\t$.on(element, 'input', inputTextBound);\r\n\t\t\t\telement.value = model[property];\r\n\t\t\t\ttype = 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(oneWay === true) return;\r\n\t\tmodelToViewBinding(model, property, inputBoundRun, element, type);\r\n\t}\r\n\r\n\tvar bindInput = function(targetNode){\r\n\t\tvar temp = $('input[sf-bound], textarea[sf-bound], select[sf-bound], input[sf-bind], textarea[sf-bind], select[sf-bind]', targetNode);\r\n\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar model = sf.controller.modelName(element);\r\n\t\t\tif(!model) return;\r\n\t\t\tvar modelScope = self.root[model];\r\n\r\n\t\t\tvar oneWay = false;\r\n\t\t\tvar propertyName = element.getAttribute('sf-bound');\r\n\t\t\tif(propertyName === null){\r\n\t\t\t\tpropertyName = element.getAttribute('sf-bind');\r\n\t\t\t\toneWay = true;\r\n\t\t\t}\r\n\t\t\tif(propertyName === \"\")\r\n\t\t\t\tpropertyName = element.getAttribute('name');\r\n\r\n\t\t\tif(propertyName === null){\r\n\t\t\t\tconsole.error(\"Property key to be bound wasn't be found\", element);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(modelScope[propertyName] === void 0){\r\n\t\t\t\tconsole.error('Can\\'t get property \"'+propertyName+'\" on model \"' + model + '\"');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement.sfBounded = propertyName;\r\n\t\t\telement.sfModel = modelScope;\r\n\t\t\tif(oneWay === false){\r\n\t\t\t\telement.setAttribute('sf-bounded', '');\r\n\t\t\t\telement.removeAttribute('sf-bound');\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\telement.setAttribute('sf-binded', '');\r\n\t\t\t\telement.removeAttribute('sf-bind');\r\n\t\t\t}\r\n\r\n\t\t\telementBoundChanges(modelScope, propertyName, element, oneWay);\r\n\t\t}\r\n\t}\r\n\r\n\tvar alreadyInitialized = false;\r\n\tself.init = function(targetNode, queued){\r\n\t\tif(alreadyInitialized && !targetNode) return;\r\n\t\talreadyInitialized = true;\r\n\t\tsetTimeout(function(){\r\n\t\t\talreadyInitialized = false;\r\n\t\t}, 50);\r\n\r\n\t\tif(!targetNode) targetNode = document.body;\r\n\r\n\t\tself.parsePreprocess(queued || self.queuePreprocess(targetNode), queued);\r\n\t\tbindInput(targetNode);\r\n\r\n\t\t// Find element for array binding\r\n\t\tvar temp = $('[sf-repeat-this]', targetNode);\r\n\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\tvar element = temp[a];\r\n\t\t\tvar parent = element.parentElement;\r\n\r\n\t\t\tif(queued !== void 0)\r\n\t\t\t\telement.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(parent.classList.contains('sf-virtual-list')){\r\n\t\t\t\tvar ceiling = document.createElement(element.tagName);\r\n\t\t\t\tceiling.classList.add('virtual-spacer');\r\n\t\t\t\tvar floor = ceiling.cloneNode(true);\r\n\r\n\t\t\t\tceiling.classList.add('ceiling');\r\n\t\t\t\tparent.insertBefore(ceiling, parent.firstElementChild); // prepend\r\n\r\n\t\t\t\tfloor.classList.add('floor');\r\n\t\t\t\tparent.appendChild(floor); // append\r\n\t\t\t}\r\n\r\n\t\t\tvar after = element.nextElementSibling;\r\n\t\t\tif(after === null || element === after)\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = element.previousElementSibling;\r\n\t\t\tif(before === null || element === before)\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = element.getAttribute('sf-repeat-this');\r\n\t\t\telement.removeAttribute('sf-repeat-this');\r\n\r\n\t\t\t// Check if the element was already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(element.outerHTML))\r\n\t\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\t\tvar controller = sf.controller.modelName(element);\r\n\t\t\tloopParser(controller, element, script, targetNode, parent);\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t}\r\n\r\n\t// Reset model properties\r\n\t// Don't call if the removed element is TEXT or #comment\r\n\tvar DOMNodeRemoved = scope.DOMNodeRemoved = function(element){\r\n\t\tif(element.hasAttribute('sf-controller') !== false){\r\n\t\t\tvar modelName = element.sf$component === void 0 ? element.getAttribute('sf-controller') : element.sf$component;\r\n\r\n\t\t\tremoveModelBinding(modelName);\r\n\t\t\tif(element.sf$component !== void 0){\r\n\t\t\t\tvar modelFrom = element.sf$componentFrom;\r\n\t\t\t\tvar components = sf.component.available[modelFrom];\r\n\t\t\t\tcomponents.splice(components.indexOf(modelName), 1);\r\n\t\t\t\tinternal.component.triggerEvent(modelFrom, 'removed', self.root[modelName]);\r\n\t\t\t\tdelete self.root[modelName];\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar temp = $('[sf-controller]', element);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tDOMNodeRemoved(temp[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tsf(function(){\r\n\t\tvar everyRemovedNodes = function(nodes){\r\n\t\t\tif(nodes.nodeType !== 1 || nodes.firstElementChild === null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(nodes.sf$elementReferences !== void 0) return;\r\n\t\t\tDOMNodeRemoved(nodes);\r\n\t\t}\r\n\r\n\t\tif(typeof MutationObserver === 'function' && MutationObserver.prototype.observe){\r\n\t\t\tvar everyRecords = function(record){\r\n\t\t\t\trecord.removedNodes.forEach(everyRemovedNodes);\r\n\t\t\t}\r\n\r\n\t\t\tvar observer = new MutationObserver(function(records){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\trecords.forEach(everyRecords);\r\n\t\t\t});\r\n\r\n\t\t\tobserver.observe(document.body, { childList: true, subtree: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.body.addEventListener('DOMNodeRemoved', function(e){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\teveryRemovedNodes(e.target);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tvar removeModelBinding = self.reset = function(modelName){\r\n\t\tvar ref = self.root[modelName];\r\n\t\tif(ref === void 0)\r\n\t\t\treturn;\r\n\r\n\t\tvar bindedKey = ref.sf$bindedKey;\r\n\t\tvar temp = null;\r\n\t\tfor(var key in bindedKey){\r\n\t\t\tdelete bindedKey[key];\r\n\r\n\t\t\tif(ref[key] === void 0 || ref[key] === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(ref[key].constructor === String ||\r\n\t\t\t\tref[key].constructor === Number ||\r\n\t\t\t\tref[key].constructor === Boolean\r\n\t\t\t){/* Ok */}\r\n\r\n\t\t\telse if(ref[key].constructor === Array){\r\n\t\t\t\tif(ref[key].$virtual){\r\n\t\t\t\t\tref[key].$virtual.destroy();\r\n\t\t\t\t\tdelete ref[key].$virtual;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset property without copying the array\r\n\t\t\t\ttemp = ref[key].splice('obtain');\r\n\t\t\t\tdelete ref[key];\r\n\t\t\t\tref[key] = temp;\r\n\t\t\t}\r\n\t\t\telse continue;\r\n\r\n\t\t\tif(Object.getOwnPropertyDescriptor(ref, key) === void 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Reconfigure / Remove property descriptor\r\n\t\t\tvar temp = ref[key];\r\n\t\t\tdelete ref[key];\r\n\t\t\tref[key] = temp;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction modelToViewBinding(model, propertyName, callback, elementBind, type){\r\n\t\t// Enable multiple element binding\r\n\t\tif(model.sf$bindedKey === void 0)\r\n\t\t\tinitBindingInformation(model);\r\n\r\n\t\tif(model.sf$bindedKey[propertyName] !== void 0){\r\n\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\tif(ref.indexOf(callback) === -1)\r\n\t\t\t\tref.push(callback);\r\n\r\n\t\t\tif(elementBind !== void 0){\r\n\t\t\t\tif(ref.input === void 0){\r\n\t\t\t\t\tref.input = [elementBind];\r\n\t\t\t\t\tref.input.type = type;\r\n\t\t\t\t}\r\n\t\t\t\telse ref.input.push(elementBind);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tmodel.sf$bindedKey[propertyName] = [callback];\r\n\r\n\t\tif(elementBind !== void 0){\r\n\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\tref.input = [elementBind];\r\n\t\t\tref.input.type = type;\r\n\t\t}\r\n\r\n\t\t// Proxy property\r\n\t\tif(Object.getOwnPropertyDescriptor(model, propertyName).set !== void 0)\r\n\t\t\treturn;\r\n\r\n\t\tvar objValue = model[propertyName]; // Object value\r\n\t\tObject.defineProperty(model, propertyName, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\t\t\tget:function(getAssigner){\r\n\t\t\t\treturn objValue;\r\n\t\t\t},\r\n\t\t\tset:function(val){\r\n\t\t\t\tif(objValue !== val){\r\n\t\t\t\t\tvar m2v = model['m2v$'+propertyName];\r\n\t\t\t\t\tvar out = inputBoundRunning === false ? model['out$'+propertyName] : void 0;\r\n\t\t\t\t\tvar callback = inputBoundRunning === false ? model['on$'+propertyName] : void 0;\r\n\r\n\t\t\t\t\tif(callback !== void 0 || m2v !== void 0 || out !== void 0){\r\n\t\t\t\t\t\tvar newValue1 = void 0; var newValue2 = void 0; var newValue3 = void 0;\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tif(m2v !== void 0)\r\n\t\t\t\t\t\t\t\tnewValue1 = m2v(objValue, val);\r\n\r\n\t\t\t\t\t\t\tif(out !== void 0)\r\n\t\t\t\t\t\t\t\tnewValue2 = out(objValue, val);\r\n\r\n\t\t\t\t\t\t\tif(callback !== void 0)\r\n\t\t\t\t\t\t\t\tnewValue3 = callback(objValue, val);\r\n\t\t\t\t\t\t}catch(e){console.error(e)}\r\n\r\n\t\t\t\t\t\tobjValue = (newValue3 !== void 0 ? newValue3 : \r\n\t\t\t\t\t\t\t(newValue2 !== void 0 ? newValue2 : \r\n\t\t\t\t\t\t\t(newValue1 !== void 0 ? newValue1 : val)\r\n\t\t\t\t\t\t));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse objValue = val;\r\n\r\n\t\t\t\t\tvar ref = model.sf$bindedKey[propertyName];\r\n\t\t\t\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\t\t\t\tif(inputBoundRun === ref[i]){\r\n\t\t\t\t\t\t\tif(inputBoundRunning !== true) // Avoid multiple assigment\r\n\t\t\t\t\t\t\t\tref[i](model, propertyName, ref.input);\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tref[i]();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinputBoundRunning = false;\r\n\t\t\t\treturn objValue;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvar dcBracket = /{{[^#][\\s\\S]*?}}/;\r\n\tself.bindElement = function(element){\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar data = self.extractPreprocess(element, null, modelName);\r\n\t\ttemplateParser(data, model, true);\r\n\t\tdelete data.addresses;\r\n\t\telement.parentNode.replaceChild(data.html, element);\r\n\t\telement = data.html;\r\n\r\n\t\tvar onChanges = function(){\r\n\t\t\tif(syntheticTemplate(element, data, void 0, model) === false)\r\n\t\t\t\t0; //No update\r\n\t\t};\r\n\r\n\t\tvar properties = data.modelRef_array;\r\n\t\tfor (var i = 0; i < properties.length; i++) {\r\n\t\t\tvar propertyName = properties[i][0];\r\n\r\n\t\t\tif(model[propertyName] === void 0)\r\n\t\t\t\tmodel[propertyName] = '';\r\n\r\n\t\t\tmodelToViewBinding(model, propertyName, onChanges);\r\n\t\t}\r\n\t}\r\n\r\n\tself.extractPreprocess = function(targetNode, mask, name){\r\n\t\tvar copy = targetNode.outerHTML;\r\n\r\n\t\t// Mask the referenced item\r\n\t\tif(mask !== null)\r\n\t\t\tcopy = copy.split('#'+mask).join('_model_');\r\n\r\n\t\t// Extract data to be parsed\r\n\t\tcopy = uniqueDataParser(copy, null, mask, name, '#noEval');\r\n\t\tvar preParsed = copy[1];\r\n\t\tvar _content_ = copy[2];\r\n\t\tcopy = dataParser(copy[0], null, mask, name, '#noEval', preParsed);\r\n\r\n\t\tfunction findModelProperty(){\r\n\t\t\tif(mask === null){\r\n\t\t\t\t// Get model keys and sort by text length, make sure the longer one is from first index to avoid wrong match\r\n\t\t\t\tvar extract = RegExp('('+self.modelKeys(self.root[name]).sort(function(a, b){\r\n\t\t\t\t\treturn b.length - a.length\r\n\t\t\t\t}).join('|')+')', 'g');\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tvar extract = RegExp('\\\\b(?:_model_|'+mask+')\\\\.([a-zA-Z0-9.[\\'\\\\]]+)(?:$|[^\\'\\\\]])', 'g');\r\n\t\t\tvar found = {};\r\n\r\n\t\t\tfor (var i = 0; i < preParsed.length; i++) {\r\n\t\t\t\tvar current = preParsed[i];\r\n\r\n\t\t\t\t// Text or attribute\r\n\t\t\t\tif(current.type === 0){\r\n\t\t\t\t\tcurrent.data[0].split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(found[match] === void 0) found[match] = [i];\r\n\t\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Dynamic data\r\n\t\t\t\tif(current.type === 1){\r\n\t\t\t\t\tvar checkList = current.if.join(';');\r\n\r\n\t\t\t\t\tif(current.elseValue !== null)\r\n\t\t\t\t\t\tcheckList += ';' + current.elseValue;\r\n\r\n\t\t\t\t\tfor (var a = 0; a < current.elseIf.length; a++) {\r\n\t\t\t\t\t\tcheckList += current.elseIf[a].join(';');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(current.type === 2)\r\n\t\t\t\t\tvar checkList = current.data[0];\r\n\r\n\t\t\t\tcheckList = checkList.replace(/_result_ \\+= _content_\\.take\\(.*?, ([0-9]+)\\);/g, function(full, match){\r\n\t\t\t\t\treturn _content_[match];\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcheckList.split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found[match] === void 0) found[match] = [i];\r\n\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn found;\r\n\t\t}\r\n\r\n\t\t// Build element and start addressing\r\n\t\tcopy = $.parseElement(copy)[0];\r\n\t\tvar nodes = self.queuePreprocess(copy, true).reverse();\r\n\t\tvar addressed = [];\r\n\r\n\t\tfunction addressAttributes(currentNode){\r\n\t\t\tvar attrs = currentNode.attributes;\r\n\t\t\tvar keys = [];\r\n\t\t\tvar indexes = 0;\r\n\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\tvar found = attrs[a].value.split('{{%=');\r\n\t\t\t\tif(found.length !== 1){\r\n\t\t\t\t\tif(attrs[a].name[0] === ':'){\r\n\t\t\t\t\t\tvar key = {\r\n\t\t\t\t\t\t\tname:attrs[a].name.split(':').join(''),\r\n\t\t\t\t\t\t\tvalue:attrs[a].value\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tcurrentNode.removeAttribute(attrs[a].name);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse var key = {\r\n\t\t\t\t\t\tname:attrs[a].name,\r\n\t\t\t\t\t\tvalue:attrs[a].value\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tindexes = [];\r\n\t\t\t\t\tfound = key.value.replace(/{{%=([0-9]+)/g, function(full, match){\r\n\t\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found === '' && indexes.length === 1)\r\n\t\t\t\t\t\tkey.direct = indexes[0];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tkey.parse_index = indexes;\r\n\r\n\t\t\t\t\tkeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn keys;\r\n\t\t}\r\n\r\n\t\tvar currentElement = addressAttributes(copy);\r\n\t\tif(currentElement.length !== 0)\r\n\t\t\taddressed.push({\r\n\t\t\t\tnodeType:1,\r\n\t\t\t\taddress:[0],\r\n\t\t\t\tattributes:currentElement\r\n\t\t\t});\r\n\r\n\t\tfor (var i = 0; i < nodes.length; i++) {\r\n\t\t\tvar temp = {\r\n\t\t\t\tnodeType:nodes[i].nodeType\r\n\t\t\t};\r\n\r\n\t\t\tif(temp.nodeType === 1){ // Element\r\n\t\t\t\ttemp.attributes = addressAttributes(nodes[i]);\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\telse if(temp.nodeType === 3){ // Text node\r\n\t\t\t\tvar innerHTML = nodes[i].textContent;\r\n\t\t\t\tvar indexes = [];\r\n\r\n\t\t\t\tinnerHTML.replace(/{{%%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Check for dynamic mode\r\n\t\t\t\tif(indexes.length !== 0){\r\n\t\t\t\t\tinnerHTML = innerHTML.split(/{{%%=[0-9]+/gm);\r\n\t\t\t\t\tfor (var a = 0; a < innerHTML.length; a++) {\r\n\t\t\t\t\t\tinnerHTML[a] = trimIndentation(innerHTML[a]).trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodes[i].textContent = innerHTML.shift();\r\n\r\n\t\t\t\t\tvar parent = nodes[i].parentNode;\r\n\t\t\t\t\tvar nextSibling = nodes[i].nextSibling;\r\n\r\n\t\t\t\t\t// Dynamic boundary start\r\n\t\t\t\t\tvar addressStart = null;\r\n\t\t\t\t\tif(indexes.length !== 0 && nodes[i].textContent.length !== 0)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i], true);\r\n\t\t\t\t\telse if(nodes[i].previousSibling !== null)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i].previousSibling, true);\r\n\r\n\t\t\t\t\t// Find boundary ends\r\n\t\t\t\t\tvar commentFlag = [];\r\n\t\t\t\t\tfor(var a = 0; a < indexes.length; a++){\r\n\t\t\t\t\t\tvar flag = document.createComment('');\r\n\t\t\t\t\t\tparent.insertBefore(flag, nextSibling);\r\n\t\t\t\t\t\tcommentFlag.push({\r\n\t\t\t\t\t\t\tnodeType:-1,\r\n\t\t\t\t\t\t\tparse_index:indexes[a],\r\n\t\t\t\t\t\t\tstartFlag:addressStart,\r\n\t\t\t\t\t\t\taddress:$.getSelector(flag, true)\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(innerHTML[a]){\r\n\t\t\t\t\t\t\tvar textNode = document.createTextNode(innerHTML[a]);\r\n\t\t\t\t\t\t\tparent.insertBefore(textNode, nextSibling);\r\n\r\n\t\t\t\t\t\t\t// Get new start flag\r\n\t\t\t\t\t\t\tif(a + 1 < indexes.length)\r\n\t\t\t\t\t\t\t\taddressStart = $.getSelector(textNode, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Merge boundary address\r\n\t\t\t\t\tArray.prototype.push.apply(addressed, commentFlag);\r\n\t\t\t\t\tif(nodes[i].textContent === ''){\r\n\t\t\t\t\t\tnodes[i].remove();\r\n\t\t\t\t\t\tfor (var a = 0; a < commentFlag.length; a++) {\r\n\t\t\t\t\t\t\tvar ref = commentFlag[a].address;\r\n\t\t\t\t\t\t\tref[ref.length - 1]--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(nodes[i].textContent.search(/{{%=[0-9]+/) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if it's only model value\r\n\t\t\t\tindexes = [];\r\n\t\t\t\tinnerHTML = nodes[i].textContent.replace(/{{%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(Number(match));\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(innerHTML === '' && indexes.length === 1)\r\n\t\t\t\t\ttemp.direct = indexes[0];\r\n\t\t\t\telse{\r\n\t\t\t\t\ttemp.value = nodes[i].textContent;\r\n\t\t\t\t\ttemp.parse_index = indexes;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\taddressed.push(temp);\r\n\t\t}\r\n\r\n\t\tvar modelReference = findModelProperty();\r\n\t\tvar keys = Object.keys(modelReference);\r\n\t\tvar asArray = [];\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tasArray.push([keys[i], keys[i].split('.')]);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\thtml:copy,\r\n\t\t\tparse:preParsed,\r\n\t\t\taddresses:addressed,\r\n\t\t\tmodelReference:modelReference,\r\n\t\t\tmodelRef_array:asArray\r\n\t\t};\r\n\t}\r\n\r\n\tvar enclosedHTMLParse = false;\r\n\tvar excludes = ['HTML','HEAD','STYLE','LINK','META','SCRIPT','OBJECT','IFRAME'];\r\n\tself.queuePreprocess = function(targetNode, extracting){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = childNodes.length - 1; i >= 0; i--) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\r\n\t\t\tif(extracting === void 0 && excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tif(enclosedHTMLParse === true) continue;\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\r\n\t\t\t\t// Skip element and it's childs that already bound to prevent vulnerability\r\n\t\t\t\tif(attrs['sf-bind-key'] || attrs['sf-repeat-this'] || attrs['sf-bind-list']) continue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tArray.prototype.push.apply(temp, self.queuePreprocess(currentNode, extracting));\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tif(currentNode.textContent.length === 0){\r\n\t\t\t\t\tcurrentNode.remove();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// The scan is from bottom to first index\r\n\t\t\t\tvar enclosing = currentNode.textContent.indexOf('{[');\r\n\t\t\t\tif(enclosing !== -1)\r\n\t\t\t\t\tenclosedHTMLParse = false;\r\n\t\t\t\telse if(enclosedHTMLParse === true)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t// Start enclosed if closing pattern was found\r\n\t\t\t\tvar enclosed = currentNode.textContent.indexOf(']}');\r\n\t\t\t\tif(enclosed !== -1 && (enclosing === -1 || enclosing > enclosed)){ // avoid {[ ... ]}\r\n\t\t\t\t\tenclosedHTMLParse = true; // when ]} ... \r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tif(extracting === void 0){\r\n\t\t\t\t\t\ttemp.push(currentNode.parentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn temp;\r\n\t}\r\n\r\n\tself.parsePreprocess = function(nodes, queued){\r\n\t\tfor (var a = 0; a < nodes.length; a++) {\r\n\t\t\t// Get reference for debugging\r\n\t\t\tvar current = processingElement = nodes[a];\r\n\r\n\t\t\tvar modelElement = sf.controller.modelElement(current);\r\n\t\t\tif(modelElement === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar model = modelElement.sf$component === void 0 ? modelElement.getAttribute('sf-controller') : modelElement.sf$component;\r\n\r\n\t\t\tif(queued !== void 0)\r\n\t\t\t\tcurrent.classList.remove('sf-dom-queued');\r\n\r\n\t\t\t// Check if it's component\r\n\t\t\tif(self.root[model] === void 0 && sf.component.registered[model])\r\n\t\t\t\tmodel = sf.component.new(model, modelElement);\r\n\r\n\t\t\tvar modelRef = self.root[model] || root_(model);\r\n\r\n\t\t\t// Double check if the child element already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(current.innerHTML)){\r\n\t\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\t\tconsole.log(processingElement.cloneNode(true));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(current.hasAttribute('sf-bind-ignore') === false)\r\n\t\t\t\tself.bindElement(current);\r\n\t\t\telse{\r\n\t\t\t\tvar temp = uniqueDataParser(current.innerHTML, modelRef, false, model);\r\n\t\t\t\tcurrent.innerHTML = dataParser(temp, modelRef, false, model);\r\n\t\t\t\tvar attrs = current.attributes;\r\n\t\t\t\tfor (var i = 0; i < attrs.length; i++) {\r\n\t\t\t\t\tif(attrs[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tvar attr = attrs[i];\r\n\t\t\t\t\t\tattr.value = dataParser(attr.value, modelRef, false, model);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initBindingInformation(modelRef){\r\n\t\tif(modelRef.sf$bindedKey !== void 0)\r\n\t\t\treturn;\r\n\r\n\t\t// Element binding data\r\n\t\tObject.defineProperty(modelRef, 'sf$bindedKey', {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable:false,\r\n\t\t\twritable:true,\r\n\t\t\tvalue:{}\r\n\t\t});\r\n\t}\r\n})();","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tself.pending = {};\r\n\tself.active = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tif(sf.component.registered[name]){\r\n\t\t\tsf.component.registered[name][1] = func;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tself.pending[name] = func;\r\n\t}\r\n\r\n\tself.modelScope = function(element, func){\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = element.getAttribute('sf-bind-list');\r\n\t\tif(!bindedList){\r\n\t\t\tvar parentEl = $.parent(element, '[sf-bind-list]');\r\n\t\t\tif(parentEl !== null)\r\n\t\t\t\tbindedList = parentEl.getAttribute('sf-bind-list');\r\n\t\t}\r\n\t\telse var parentEl = element;\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(sf.model.root[model], -1);\r\n\t\t\telse return sf.model.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = $.prevAll(parentEl, '[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(sf.model.root[model][bindedList], bindedListIndex);\r\n\t\telse return sf.model.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.modelElement = function(element){\r\n\t\tif(element.nodeType === 1 && element.hasAttribute('sf-controller') === true)\r\n\t\t\treturn element;\r\n\r\n\t\treturn $.parent(element, '[sf-controller]');\r\n\t}\r\n\r\n\tself.modelName = function(element){\r\n\t\tvar name = self.modelElement(element);\r\n\t\tif(name === null){\r\n\t\t\tconsole.error(\"Can't find any controller for\", element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tname = name.sf$component === void 0 ? name.getAttribute('sf-controller') : name.sf$component;\r\n\r\n\t\t// Initialize it first\r\n\t\tif(name !== void 0 && !self.active[name])\r\n\t\t\tself.run(name);\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = e.target;\r\n\t\tvar script = element.getAttribute('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = $.parent(element, '[sf-click]');\r\n\t\t\tscript = element.getAttribute('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = $.parent(element, '[sf-controller]');\r\n\t\tmodel = model.sf$component === void 0? model.getAttribute('sf-controller') : model;\r\n\r\n\t\tif(!sf.model.root[model])\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(sf.model.root[model]).join('|');\r\n\t\tscript = avoidQuotes(script, function(script_){\r\n\t\t\treturn script_.replace(RegExp(sf.regex.strictVar+'('+modelKeys+')\\\\b', 'g'), function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script[0];\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(e) {\r\n\t\t\tmethod = false;\r\n\t\t}\r\n\r\n\t\tif(!method){\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot call `'+method_+'`]\\n', element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript.shift();\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0){\r\n\t\t\t// Replace `this` to `element`\r\n\t\t\tscript = eval(('['+script+']').replace(/,this|\\[this/g, function(found){\r\n\t\t\t\treturn found[0] + 'element';\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif(!script)\r\n\t\t\tscript = [];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element, script);\r\n\t\t\te.preventDefault();\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', element, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tself.run = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.run(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(sf.component.registered[name])\r\n\t\t\treturn console.error(\"'\"+name+\"' is registered as a component\");\r\n\r\n\t\tif(self.pending[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\r\n\t\t\tself.pending[name](sf.model.root[name], root_);\r\n\t\t\tself.active[name] = true;\r\n\t\t\tdelete self.pending[name];\r\n\t\t}\r\n\r\n\t\tif(sf.model.root[name] === void 0)\r\n\t\t\tsf.model.root[name] = {};\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], root_);\r\n\t}\r\n\r\n\tself.init = function(parent){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(name);\r\n\t\t\t});\r\n\r\n\t\tvar temp = $('[sf-controller]', parent || document.body);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tself.run(temp[i].sf$component === void 0? temp[i].getAttribute('sf-controller') : temp[i].sf$component);\r\n\t\t}\r\n\t}\r\n\r\n\t// Create listener for sf-click\r\n\tdocument.addEventListener('DOMContentLoaded', function(){\r\n\t\t$.on(document.body, 'click', '[sf-click]', listenSFClick);\r\n\t}, {capture:true, once:true});\r\n}\r\n\r\nvar root_ = function(scope){\r\n\tif(sf.component.registered[scope]){\r\n\t\tvar available = [];\r\n\t\tvar component = sf.component.available[scope];\r\n\t\tif(component !== void 0){\r\n\t\t\tfor (var i = 0; i < component.length; i++) {\r\n\t\t\t\tavailable.push(sf.model.root[component[i]]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn available;\r\n\t}\r\n\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\treturn sf.model.root[scope];\r\n}","/*\r\n  Special Thanks to Vladimir Kharlampidi\r\n  https://github.com/nolimits4web/\r\n*/\r\n\r\nvar globals = {};\r\nvar jsonpRequests = 0;\r\nfunction Request(requestOptions) {\r\n    var globalsNoCallbacks = Object.assign({}, globals);\r\n    ('beforeCreate beforeOpen beforeSend error complete success statusCode').split(' ').forEach(function (callbackName) {\r\n        delete globalsNoCallbacks[callbackName];\r\n    });\r\n    var defaults = Object.assign({\r\n        url: window.location.toString(),\r\n        method: 'GET',\r\n        data: false,\r\n        async: true,\r\n        cache: true,\r\n        user: '',\r\n        password: '',\r\n        headers: {},\r\n        xhrFields: {},\r\n        statusCode: {},\r\n        processData: true,\r\n        dataType: 'text',\r\n        contentType: 'application/x-www-form-urlencoded',\r\n        timeout: 0,\r\n    }, globalsNoCallbacks);\r\n    var options = Object.assign({}, defaults, requestOptions);\r\n    var proceedRequest;\r\n    // Function to run XHR callbacks and events\r\n    function fireCallback(callbackName) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        /*\r\n          Callbacks:\r\n          beforeCreate (options),\r\n          beforeOpen (xhr, options),\r\n          beforeSend (xhr, options),\r\n          error (xhr, status),\r\n          complete (xhr, stautus),\r\n          success (response, status, xhr),\r\n          statusCode ()\r\n        */\r\n        var globalCallbackValue;\r\n        var optionCallbackValue;\r\n        if (globals[callbackName]) {\r\n            globalCallbackValue = globals[callbackName].apply(globals, data);\r\n        }\r\n        if (options[callbackName]) {\r\n            optionCallbackValue = options[callbackName].apply(options, data);\r\n        }\r\n        if (typeof globalCallbackValue !== 'boolean')\r\n            globalCallbackValue = true;\r\n        if (typeof optionCallbackValue !== 'boolean')\r\n            optionCallbackValue = true;\r\n        return (globalCallbackValue && optionCallbackValue);\r\n    }\r\n    // Before create callback\r\n    proceedRequest = fireCallback('beforeCreate', options);\r\n    if (proceedRequest === false)\r\n        return void 0;\r\n    // For jQuery guys\r\n    if (options.type)\r\n        options.method = options.type;\r\n    // Parameters Prefix\r\n    var paramsPrefix = options.url.indexOf('?') >= 0 ? '&' : '?';\r\n    // UC method\r\n    var method = options.method.toUpperCase();\r\n    // Data to modify GET URL\r\n    if ((method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') && options.data) {\r\n        var stringData = void 0;\r\n        if (typeof options.data === 'string') {\r\n            // Should be key=value string\r\n            if (options.data.indexOf('?') >= 0)\r\n                stringData = options.data.split('?')[1];\r\n            else\r\n                stringData = options.data;\r\n        }\r\n        else {\r\n            // Should be key=value object\r\n            stringData = serializeQuery(options.data);\r\n        }\r\n        if (stringData.length) {\r\n            options.url += paramsPrefix + stringData;\r\n            if (paramsPrefix === '?')\r\n                paramsPrefix = '&';\r\n        }\r\n    }\r\n    // JSONP\r\n    if (options.dataType === 'json' && options.url.indexOf('callback=') >= 0) {\r\n        var callbackName_1 = \"jsonp_\" + (Date.now() + ((jsonpRequests += 1)));\r\n        var abortTimeout_1;\r\n        var callbackSplit = options.url.split('callback=');\r\n        var requestUrl = callbackSplit[0] + \"callback=\" + callbackName_1;\r\n        if (callbackSplit[1].indexOf('&') >= 0) {\r\n            var addVars = callbackSplit[1].split('&').filter(function (el) { return el.indexOf('=') > 0; }).join('&');\r\n            if (addVars.length > 0)\r\n                requestUrl += \"&\" + addVars;\r\n        }\r\n        // Create script\r\n        var script_1 = document.createElement('script');\r\n        script_1.type = 'text/javascript';\r\n        script_1.onerror = function onerror() {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('error', null, 'scripterror');\r\n            fireCallback('complete', null, 'scripterror');\r\n        };\r\n        script_1.src = requestUrl;\r\n        // Handler\r\n        window[callbackName_1] = function jsonpCallback(data) {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('success', data);\r\n            script_1.parentNode.removeChild(script_1);\r\n            script_1 = null;\r\n            delete window[callbackName_1];\r\n        };\r\n        document.querySelector('head').appendChild(script_1);\r\n        if (options.timeout > 0) {\r\n            abortTimeout_1 = setTimeout(function () {\r\n                script_1.parentNode.removeChild(script_1);\r\n                script_1 = null;\r\n                fireCallback('error', null, 'timeout');\r\n            }, options.timeout);\r\n        }\r\n        return void 0;\r\n    }\r\n    // Cache for GET/HEAD requests\r\n    if (method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') {\r\n        if (options.cache === false) {\r\n            options.url += paramsPrefix + \"_nocache\" + Date.now();\r\n        }\r\n    }\r\n    // Create XHR\r\n    var xhr = new XMLHttpRequest();\r\n    // Save Request URL\r\n    xhr.requestUrl = options.url;\r\n    xhr.requestParameters = options;\r\n    // Before open callback\r\n    proceedRequest = fireCallback('beforeOpen', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Open XHR\r\n    xhr.open(method, options.url, options.async, options.user, options.password);\r\n    // Create POST Data\r\n    var postData = null;\r\n    if ((method === 'POST' || method === 'PUT' || method === 'PATCH') && options.data) {\r\n        if (options.processData) {\r\n            var postDataInstances = [ArrayBuffer, Blob, Document, FormData];\r\n            // Post Data\r\n            if (postDataInstances.indexOf(options.data.constructor) >= 0) {\r\n                postData = options.data;\r\n            }\r\n            else {\r\n                // POST Headers\r\n                var boundary = \"---------------------------\" + Date.now().toString(16);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    xhr.setRequestHeader('Content-Type', \"multipart/form-data; boundary=\" + boundary);\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader('Content-Type', options.contentType);\r\n                }\r\n                postData = '';\r\n                var data = serializeQuery(options.data);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    data = data.split('&');\r\n                    var newData = [];\r\n                    for (var i = 0; i < data.length; i += 1) {\r\n                        newData.push(\"Content-Disposition: form-data; name=\\\"\" + data[i].split('=')[0] + \"\\\"\\r\\n\\r\\n\" + data[i].split('=')[1] + \"\\r\\n\");\r\n                    }\r\n                    postData = \"--\" + boundary + \"\\r\\n\" + newData.join(\"--\" + boundary + \"\\r\\n\") + \"--\" + boundary + \"--\\r\\n\";\r\n                }\r\n                else if (options.contentType === 'application/json') {\r\n                    postData = JSON.stringify(options.data);\r\n                }\r\n                else {\r\n                    postData = data;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            postData = options.data;\r\n            xhr.setRequestHeader('Content-Type', options.contentType);\r\n        }\r\n    }\r\n    // Additional headers\r\n    if (options.headers) {\r\n        Object.keys(options.headers).forEach(function (headerName) {\r\n            xhr.setRequestHeader(headerName, options.headers[headerName]);\r\n        });\r\n    }\r\n    // Check for crossDomain\r\n    if (typeof options.crossDomain === 'void 0') {\r\n        // eslint-disable-next-line\r\n        options.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(options.url) && RegExp.$2 !== window.location.host;\r\n    }\r\n    if (!options.crossDomain) {\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    }\r\n    if (options.xhrFields) {\r\n        Object.assign(xhr, options.xhrFields);\r\n    }\r\n    var xhrTimeout;\r\n    // Handle XHR\r\n    xhr.onload = function onload() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 0) {\r\n            var responseData = void 0;\r\n            if (options.dataType === 'json') {\r\n                var parseError = void 0;\r\n                try {\r\n                    responseData = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (err) {\r\n                    parseError = true;\r\n                }\r\n                if (!parseError) {\r\n                    fireCallback('success', responseData, xhr.status, xhr);\r\n                }\r\n                else {\r\n                    fireCallback('error', xhr, 'parseerror');\r\n                }\r\n            }\r\n            else {\r\n                responseData = xhr.responseType === 'text' || xhr.responseType === '' ? xhr.responseText : xhr.response;\r\n                fireCallback('success', responseData, xhr.status, xhr);\r\n            }\r\n        }\r\n        else {\r\n            fireCallback('error', xhr, xhr.status);\r\n        }\r\n        if (options.statusCode) {\r\n            if (globals.statusCode && globals.statusCode[xhr.status])\r\n                globals.statusCode[xhr.status](xhr);\r\n            if (options.statusCode[xhr.status])\r\n                options.statusCode[xhr.status](xhr);\r\n        }\r\n        fireCallback('complete', xhr, xhr.status);\r\n    };\r\n    xhr.onerror = function onerror() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        fireCallback('error', xhr, xhr.status);\r\n        fireCallback('complete', xhr, 'error');\r\n    };\r\n    // Timeout\r\n    if (options.timeout > 0) {\r\n        xhr.onabort = function onabort() {\r\n            if (xhrTimeout)\r\n                clearTimeout(xhrTimeout);\r\n        };\r\n        xhrTimeout = setTimeout(function () {\r\n            xhr.abort();\r\n            fireCallback('error', xhr, 'timeout');\r\n            fireCallback('complete', xhr, 'timeout');\r\n        }, options.timeout);\r\n    }\r\n    // Ajax start callback\r\n    proceedRequest = fireCallback('beforeSend', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Send XHR\r\n    xhr.send(postData);\r\n    // Return XHR object\r\n    return xhr;\r\n}\r\nfunction RequestShortcut(method) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    var _a = [], url = _a[0], data = _a[1], success = _a[2], error = _a[3], dataType = _a[4];\r\n    if (typeof args[1] === 'function') {\r\n        url = args[0], success = args[1], error = args[2], dataType = args[3];\r\n    }\r\n    else {\r\n        url = args[0], data = args[1], success = args[2], error = args[3], dataType = args[4];\r\n    }\r\n    [success, error].forEach(function (callback) {\r\n        if (typeof callback === 'string') {\r\n            dataType = callback;\r\n            if (callback === success)\r\n                success = void 0;\r\n            else\r\n                error = void 0;\r\n        }\r\n    });\r\n    dataType = dataType || (method === 'json' || method === 'postJSON' ? 'json' : void 0);\r\n    var requestOptions = {\r\n        url: url,\r\n        method: method === 'post' || method === 'postJSON' ? 'POST' : 'GET',\r\n        data: data,\r\n        success: success,\r\n        error: error,\r\n        dataType: dataType,\r\n    };\r\n    if (method === 'postJSON') {\r\n        Object.assign(requestOptions, {\r\n            contentType: 'application/json',\r\n            processData: false,\r\n            crossDomain: true,\r\n            data: typeof data === 'string' ? data : JSON.stringify(data),\r\n        });\r\n    }\r\n    return Request(requestOptions);\r\n}\r\nObject.assign(Request, {\r\n    get: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['get'].concat(args));\r\n    },\r\n    post: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['post'].concat(args));\r\n    },\r\n    json: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    getJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    postJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['postJSON'].concat(args));\r\n    },\r\n});\r\nRequest.setup = function setup(options) {\r\n    if (options.type && !options.method) {\r\n        Object.assign(options, { method: options.type });\r\n    }\r\n    Object.assign(globals, options);\r\n};\r\nfunction serializeQuery(params, prefix) {\r\n    var key = Object.keys(params);\r\n    for (var i = 0; i < key.length; i++) {\r\n      var value = params[key[i]];\r\n      if (params.constructor === Array)\r\n          key[i] += prefix + \"[]\";\r\n      else if (params.constructor === Object)\r\n          key[i] = (prefix ? prefix + \"[\" + key[i] + \"]\" : key[i]);\r\n\r\n      if (typeof value === 'object')\r\n          key[i] = serializeQuery(value, key[i]);\r\n      else\r\n          key[i] = key[i] + \"=\" + encodeURIComponent(value);\r\n    }\r\n    return key.join('&');\r\n}\r\n$.ajax = sf.ajax = Request;","return sf;\r\n\r\n// ===== Module End =====\r\n})));","sf.router = new function(){\r\n\tvar self = this;\r\n\tself.loading = false;\r\n\tself.enabled = false;\r\n\tself.pauseRenderOnTransition = false;\r\n\tself.currentPage = [];\r\n\tvar initialized = false;\r\n\tvar lazyRouting = false;\r\n\tvar currentRouterURL = '';\r\n\r\n\t// Should be called if not using lazy page load\r\n\tself.init = function(targetNode){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init();\r\n\t\t\t});\r\n\r\n\t\t// Run 'before' event for new page view\r\n\t\tvar temp = $('[sf-controller], [sf-page]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tif(temp[i].hasAttribute('sf-controller') === true)\r\n\t\t\t\tsf.controller.run(temp[i].getAttribute('sf-controller'));\r\n\t\t\t\r\n\t\t\tif(temp[i].getAttribute('sf-page')){\r\n\t\t\t\tvar name = temp[i].getAttribute('sf-page');\r\n\t\t\t\tbeforeEvent(name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinitialized = true;\r\n\t\tcurrentRouterURL = window.location.pathname;\r\n\t}\r\n\r\n\tfunction popstateListener(event) {\r\n\t\t// Don't continue if the last routing was error\r\n\t\tif(routingError){\r\n\t\t\troutingError = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\troutingBack = true;\r\n\t\tself.goto(window.location.pathname);\r\n\t}\r\n\r\n\tself.enable = function(status){\r\n\t\tif(status === void 0) status = true;\r\n\t\tif(self.enabled === status) return;\r\n\t\tself.enabled = status;\r\n\r\n\t\tif(status === true){\r\n\t\t\t// Create listener for link click\r\n\t\t\t$.on(document.body, 'click', 'a[href]', self.load);\r\n\r\n\t\t\t// Create listener when navigate backward\r\n\t\t\twindow.addEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$.off(document.body, 'click', 'a[href]', self.load);\r\n\t\t\twindow.removeEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t}\r\n\r\n\tvar before = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.before = function(name, func, index){\r\n\t\tif(!before[name])\r\n\t\t\tbefore[name] = [];\r\n\r\n\t\tif(index === void 0){\r\n\t\t\tif(before[name].indexOf(func) === -1)\r\n\t\t\t\tbefore[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tbefore[name][index] = func;\r\n\t}\r\n\r\n\tvar after = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.after = function(name, func, index){\r\n\t\tif(!after[name])\r\n\t\t\tafter[name] = [];\r\n\r\n\t\tif(index === void 0){\r\n\t\t\tif(after[name].indexOf(func) === -1)\r\n\t\t\t\tafter[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tafter[name][index] = func;\r\n\t}\r\n\r\n\t// Running 'before' new page going to be displayed\r\n\tvar beforeEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.push(name);\r\n\r\n\t\tif(before[name]){\r\n\t\t\tfor (var i = 0; i < before[name].length; i++) {\r\n\t\t\t\tbefore[name][i](sf.model);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Running 'after' old page going to be removed\r\n\tvar afterEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.splice(self.currentPage.indexOf(name), 1);\r\n\r\n\t\tif(after[name]){\r\n\t\t\tfor (var i = 0; i < after[name].length; i++) {\r\n\t\t\t\tafter[name][i](sf.model);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar onEvent = {\r\n\t\t'loading':[],\r\n\t\t'loaded':[],\r\n\t\t'special':[],\r\n\t\t'error':[]\r\n\t};\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\tself.lazyViewPoint = {};\r\n\t/*\r\n\t\t{\r\n\t\t\toldURlPattern:{\r\n\t\t\t\tnewURLPattern:'.viewPoint'\r\n\t\t\t}\r\n\t\t}\r\n\t*/\r\n\r\n\tself.load = function(ev){\r\n\t\tif(self.enabled !== true) return;\r\n\r\n\t\tvar elem = ev.target;\r\n\t\tif(!elem.href) return;\r\n\r\n\t\tif(!history.pushState || elem.hasAttribute('sf-router-ignore'))\r\n\t\t\treturn;\r\n\r\n\t\t// Make sure it's from current origin\r\n\t\tvar path = elem.href.replace(window.location.origin, '');\r\n\t\tif(path.indexOf('//') !== -1)\r\n\t\t\treturn;\r\n\r\n\t\tev.preventDefault()\r\n\t\treturn !self.goto(path);\r\n\t}\r\n\r\n\tvar RouterLoading = false;\r\n\tvar routingBack = false;\r\n\tvar routingError = false;\r\n\tself.goto = function(path, data, method){\r\n\t\tif(!method) method = 'GET';\r\n        else method = method.toUpperCase();\r\n\r\n\t\tif(!data) data = {};\r\n\r\n\t\tfor (var i = 0; i < onEvent['loading'].length; i++) {\r\n\t\t\tif(onEvent['loading'][i](path)) return;\r\n\t\t}\r\n\t\tvar oldPath = window.location.pathname;\r\n\t\tinitialized = false;\r\n\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\t\tRouterLoading = $.ajax({\r\n\t\t\turl:window.location.origin + path,\r\n\t\t\tmethod:method,\r\n            data:Object.assign(data, {\r\n                _scarlets:'.dynamic.'\r\n            }),\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\tif(initialized) return;\r\n\t\t\t\tlazyRouting = true;\r\n\r\n\t\t\t\t// Run 'loaded' event\r\n\t\t\t\tRouterLoading = false;\r\n\r\n\t\t\t\t// Find special data\r\n\t\t\t\tvar regex = RegExp('<!-- SF-Special:(.*?)-->', 'gm');\r\n\t\t\t\tvar special = regex.exec(data);\r\n\t\t\t\tif(special && special.length !== 1){\r\n\t\t\t\t\tspecial = special[1].split('--|&>').join('-->');\r\n\t\t\t\t\tspecial = JSON.parse(special);\r\n\r\n\t\t\t\t\tif(!isEmptyObject(special)){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['special'].length; i++) {\r\n\t\t\t\t\t\t\tif(onEvent['special'][i](special)) return;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DOMReference = false;\r\n\t\t\t\tvar foundAction = function(ref){\r\n\t\t\t\t\tDOMReference = $.findOne(ref);\r\n\r\n\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\tvar last = $.findOne('[sf-page]', DOMReference);\r\n\t\t\t\t\tafterEvent(last ? last.getAttribute('sf-page') : '/');\r\n\r\n\t\t\t\t\t// Redefine title if exist\r\n\t\t\t\t\tif(special && special.title)\r\n\t\t\t\t\t\t$('head > title').innerHTML = special.title;\r\n\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tfor(var oldURL in self.lazyViewPoint){\r\n\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\tfor(var newURL in self.lazyViewPoint[oldURL]){\r\n\t\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\t\tfoundAction(self.lazyViewPoint[oldURL][newURL]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(found) break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When the view point was not found\r\n\t\t\t\tif(!found){\r\n\t\t\t\t\t// Use fallback if exist\r\n\t\t\t\t\tif(sf.router.lazyViewPoint[\"@default\"])\r\n\t\t\t\t\t\tfoundAction(sf.router.lazyViewPoint[\"@default\"]);\r\n\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\t\t\tonEvent['error'][i]('sf.router.lazyViewPoint[\"'+oldURL+'\"][\"'+newURL+'\"] was not found');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Run 'before' event for new page view\r\n\t\t\t\tif(!DOMReference) DOMReference = document.body;\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', 'none');\r\n\r\n\t\t\t\t// Let page script running first, then update the data binding\r\n\t\t\t\tDOMReference.innerHTML = data;\r\n\r\n\t\t\t\t// Parse the DOM data binding\r\n\t\t\t\tsf.model.init(DOMReference);\r\n\r\n\t\t\t\t// Init template to model binding\r\n\t\t\t\tvar temp = $('[sf-page]', DOMReference);\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tbeforeEvent(temp[i].getAttribute('sf-page'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', '');\r\n\r\n\t\t\t\trouterLoaded(currentRouterURL, path, DOMReference);\r\n\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tlazyRouting = false;\r\n\r\n\t\t\t\tcurrentRouterURL = path;\r\n\t\t\t\troutingError = false;\r\n\t\t\t},\r\n\t\t\terror:function(xhr, data){\r\n\t\t\t\troutingError = true;\r\n\t\t\t\tif(xhr.aborted) return;\r\n\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\tonEvent['error'][i](xhr.status, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Back on error\r\n\t\t\t\twindow.history.back();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!routingBack)\r\n\t\t\twindow.history.pushState(null, \"\", path);\r\n\r\n\t\troutingBack = false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Trigger loaded event\r\n\tfunction routerLoaded(currentRouterURL, path, data){\r\n\t\tfor (var i = 0; i < onEvent['loaded'].length; i++) {\r\n\t\t\tonEvent['loaded'][i](currentRouterURL, path, data);\r\n\t\t}\r\n\t}\r\n};","sf.internal.virtual_scroll = new function(){\r\n\tvar self = this;\r\n\tvar styleInitialized = false;\r\n\tvar scrollingByScript = false;\r\n\r\n\t// before and after\r\n\tself.prepareCount = 4; // 4, 8, 12, 16, ...\r\n\r\n\tself.handle = function(list, targetNode, parentNode){\r\n\t\tif(!styleInitialized){\r\n\t\t\tinitStyles();\r\n\t\t\tstyleInitialized = true;\r\n\t\t}\r\n\r\n\t\tvar dynamicList = false;\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvirtual.reset = function(reinitOnly){\r\n\t\t\tvirtual.DOMCursor = 0; // cursor of first element in DOM tree as a cursor\r\n\r\n\t\t\tvirtual.bounding.ceiling = -1;\r\n\t\t\tvirtual.bounding.floor = 0;\r\n\r\n\t\t\tvirtual.vCursor.ceiling = null; // for forward direction\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.firstElementChild; // for backward direction\r\n\r\n\t\t\tvirtual.bounding.initial = virtual.dCursor.ceiling.offsetTop;\r\n\t\t\trefreshScrollBounding(0, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.reinitCursor = function(){\r\n\t\t\tvirtual.vCursor.ceiling = virtual.dom.children[virtual.DOMCursor - 1] || null;\r\n\t\t\tvirtual.vCursor.floor = virtual.dom.children[virtual.DOMCursor] || null;\r\n\t\t}\r\n\r\n\t\tvirtual.reinitScroll = function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, virtual.bounding, list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.elements = function(){\r\n\t\t\treturn obtainElements(list, parentNode);\r\n\t\t}\r\n\r\n\t\tvirtual.dCursor = { // DOM Cursor\r\n\t\t\tceiling:parentNode.querySelector('.virtual-spacer.ceiling'),\r\n\t\t\tfloor:parentNode.querySelector('.virtual-spacer.floor')\r\n\t\t};\r\n\r\n\t\tvirtual.bounding = {};\r\n\t\tvirtual.vCursor = {};\r\n\r\n\t\tvirtual.reset();\r\n\t\tvirtual.targetNode = parentNode;\r\n\t\tvirtual.scrollHeight = virtual.dCursor.floor.offsetTop - virtual.bounding.initial;\r\n\r\n\t\tvar scroller = parentNode;\r\n\t\tvirtual.destroy = function(){\r\n\t\t\t$.off(scroller, 'scroll');\r\n\t\t\t$.off(parentNode, 'mousedown mouseup');\r\n\t\t\tvirtual.dom.innerHTML = '';\r\n\t\t\toffElementResize(parentNode);\r\n\r\n\t\t\tdelete list.$virtual;\r\n\t\t}\r\n\r\n\t\tvirtual.resetViewport = function(){\r\n\t\t\tvirtual.visibleLength = Math.floor(scroller.clientHeight / virtual.scrollHeight);\r\n\t\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\t\tif(virtual.preparedLength < 18)\r\n\t\t\t\tvirtual.preparedLength = 18;\r\n\t\t}\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tscroller = parentNode;\r\n\r\n\t\t\tvar length = parentNode.getAttribute('scroll-parent-index') || 0;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tscroller = scroller.parentElement;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.resetViewport();\r\n\r\n\t\t\tif(parentNode.classList.contains('sf-list-dynamic')){\r\n\t\t\t\tdynamicList = true;\r\n\t\t\t\tdynamicHeight(list, targetNode, parentNode, scroller);\r\n\t\t\t}\r\n\t\t\telse staticHeight(list, targetNode, parentNode, scroller);\r\n\t\t}, 500);\r\n\t}\r\n\r\n\t// Recommended for a list that have different element height\r\n\tfunction dynamicHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\r\n\t\t\t// Reset virtual spacer height\r\n\t\t\tceilingHeight = 0;\r\n\t\t\tfloorHeight = 0;\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller);\r\n\t\t\tfillViewport();\r\n\t\t}\r\n\r\n\t\t// Insert some element until reach visible height\r\n\t\tfillViewport();\r\n\r\n\t\tvirtual.visibleLength = parentNode.childElementCount - 2;\r\n\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\tvar temp = vCursor.floor;\r\n\t\t\tif(temp === null) break;\r\n\r\n\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t}\r\n\t\tvirtual.DOMCursor = 0;\r\n\r\n\t\tvar ceilingHeight = 0;\r\n\t\tvar floorHeight = 0;\r\n\t\tfunction previousCeiling(){\r\n\t\t\tvar temp = null;\r\n\t\t\tvar resetCeiling = false;\r\n\r\n\t\t\t// Add some element on the ceiling\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\ttemp = virtual.dom.lastElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.ceiling = temp.previousElementSibling;\r\n\t\t\t\tvirtual.DOMCursor--;\r\n\r\n\t\t\t\tceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tif(ceilingHeight > 0)\r\n\t\t\t\t\tceilingHeight -= getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(virtual.DOMCursor < self.prepareCount && !resetCeiling){\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\tresetCeiling = true;\r\n\t\t\t\t\ttemp = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(ceilingHeight < 0 || temp === null)\r\n\t\t\t\tceilingHeight = 0;\r\n\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\t// Remove some element on the floor\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = floor.previousElementSibling;\r\n\t\t\t\tfloorHeight += getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tvCursor.floor = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.floor === null)\r\n\t\t\t\tvCursor.ceiling = virtual.dom.lastElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tfunction fillViewport(){\r\n\t\t\t// Insert some element depend on prepared length\r\n\t\t\tvar length = virtual.preparedLength - (parentNode.childElementCount - 2);\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\ttemp = virtual.dom.firstElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction nextFloor(){\r\n\t\t\tvar temp = null;\r\n\t\t\tfillViewport();\r\n\r\n\t\t\tif(vCursor.floor !== null){\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\t// Add extra element based on prepare count\r\n\t\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\t\ttemp = vCursor.floor;\r\n\t\t\t\t\tif(temp === null) break;\r\n\r\n\t\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\t\tif(floorHeight > 0)\r\n\t\t\t\t\t\tfloorHeight -= getAbsoluteHeight(temp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(floorHeight < 0 || temp === null)\r\n\t\t\t\tfloorHeight = 0;\r\n\r\n\t\t\t// Remove some element on the ceiling\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\t\t\t\tceilingHeight += getAbsoluteHeight(temp);\r\n\t\t\t\tvirtual.DOMCursor++;\r\n\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\telse vCursor.ceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tvCursor.ceiling = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\t\trefreshScrollBounding(0, bounding, list, parentNode);\r\n\r\n\t\tif(virtual.callback_ !== void 0){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript) return;\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tif(scroller.scrollTop < bounding.ceiling){\r\n\t\t\t\t// console.log('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tpreviousCeiling();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\telse if(scroller.scrollTop > bounding.floor){\r\n\t\t\t\t// console.log('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tnextFloor();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\tif(virtual.callback !== void 0 && list.length !== 0){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null &&\r\n\t\t\t\t\tscroller.scrollTop + scroller.clientHeight === scroller.scrollHeight\r\n\t\t\t\t){\r\n\t\t\t\t\tvirtual.callback.hitFloor(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null && scroller.scrollTop === 0){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(virtual.DOMCursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_ && callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\t\tonElementResize(parentNode, function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t});\r\n\t}\r\n\r\n\t// Recommended for a list that have similar element height\r\n\tfunction staticHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\r\n\t\t// Insert visible element to dom tree\r\n\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\tif(virtual.dom.firstElementChild === null)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', virtual.dom.firstElementChild);\r\n\t\t}\r\n\r\n\t\tvirtual.refreshVirtualSpacer = refreshVirtualSpacer;\r\n\r\n\t\tfunction refreshVirtualSpacer(cursor){\r\n\t\t\tif(cursor >= self.prepareCount){\r\n\t\t\t\tceiling.style.height = (cursor - self.prepareCount) * virtual.scrollHeight + 'px';\r\n\t\t\t\tfloor.style.height = (list.length - virtual.preparedLength - cursor) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tceiling.style.height = cursor * virtual.scrollHeight + 'px'; //'0px';\r\n\t\t\t\tvar count = (list.length - virtual.preparedLength);\r\n\t\t\t\tfloor.style.height = (count || 0) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\r\n\t\trefreshVirtualSpacer(0);\r\n\t\trefreshScrollBounding(self.prepareCount, bounding, list, parentNode);\r\n\t\tbounding.ceiling = -1;\r\n\r\n\t\tvirtual.offsetTo = function(index){\r\n\t\t\treturn index * virtual.scrollHeight + ceiling.offsetTop;\r\n\t\t}\r\n\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tif(virtual.callback_ !== void 0){\r\n\t\t\tvar callback_ = virtual.callback_;\r\n\t\t\tdelete virtual.callback_;\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tvar fromCeiling = true;\r\n\t\tvar scrollFocused = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript || scroller.scrollTop >= bounding.ceiling && scroller.scrollTop <= bounding.floor){\r\n\t\t\t\t// Fix chrome scroll anchoring bugs when scrolling at corner\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tif(scroller.scrollTop === 0 || scroller.scrollTop === scroller.scrollHeight - scroller.clientHeight){\r\n\t\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar cursor = Math.floor(scroller.scrollTop / virtual.scrollHeight);\r\n\t\t\tif(cursor + virtual.preparedLength > list.length)\r\n\t\t\t\tcursor = list.length - virtual.preparedLength;\r\n\r\n\t\t\tif(fromCeiling){\r\n\t\t\t\tif(cursor < self.prepareCount*2)\r\n\t\t\t\t\tcursor -= self.prepareCount;\r\n\r\n\t\t\t\t// Fix chrome scroll anchoring bugs\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t}\r\n\t\t\t\tfromCeiling = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cursor < self.prepareCount){\r\n\t\t\t\tcursor = 0;\r\n\t\t\t\tfromCeiling = true;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tvar changes = cursor - virtual.DOMCursor;\r\n\t\t\tif(cursor + changes >= list.length)\r\n\t\t\t\tchanges = cursor + changes - list.length;\r\n\r\n\t\t\tif(changes === 0){ // This should be fixed to improve performance and future bugs\r\n\t\t\t\t//console.warn(\"No changes (The scroll bounding is not correct)\");\r\n\t\t\t\tupdating = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.DOMCursor = cursor;\r\n\r\n\t\t\t// console.log(cursor, changes, bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\t\t\tmoveElementCursor(changes, list);\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\t\t\trefreshScrollBounding(cursor, bounding, list, parentNode);\r\n\t\t\t// console.log('a', bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\r\n\t\t\tif(virtual.callback !== void 0 && list.length !== 0){\r\n\t\t\t\tif(virtual.callback.hitFloor && virtual.vCursor.floor === null){\r\n\t\t\t\t\tvirtual.callback.hitFloor(cursor);\r\n\t\t\t\t}\r\n\t\t\t\telse if(virtual.callback.hitCeiling && virtual.vCursor.ceiling === null){\r\n\t\t\t\t\tvirtual.callback.hitCeiling(cursor);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(callback_ && callback_.ref[callback_.var]){\r\n\t\t\t\tvirtual.callback = callback_.ref[callback_.var];\r\n\t\t\t\tcallback_ = null;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\r\n\t\t// For preventing scroll jump if scrolling over than viewport\r\n\t\tif(scroller === parentNode && navigator.userAgent.indexOf('Chrom') !== -1){\r\n\t\t\t$.on(parentNode, 'mousedown', function(){\r\n\t\t\t\tscrollFocused = true;\r\n\t\t\t});\r\n\t\t\t$.on(parentNode, 'mouseup', function(){\r\n\t\t\t\tscrollFocused = false;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction refreshScrollBounding(cursor, bounding, list, parentNode){\r\n\t\tvar temp = Math.floor(self.prepareCount / 2); // half of element preparation\r\n\t\tif(cursor < self.prepareCount){\r\n\t\t\tbounding.ceiling = -1;\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount * 2 + 1];\r\n\r\n\t\t\tif(bounding.floor !== void 0)\r\n\t\t\t\tbounding.floor = bounding.floor.offsetTop;\r\n\t\t\telse bounding.floor = parentNode.lastElementChild.offsetTop + 1000;\r\n\r\n\t\t\tbounding.floor -= bounding.initial;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if(parentNode.children[temp + 1] !== void 0)\r\n\t\t\t\tbounding.ceiling = parentNode.children[temp + 1].offsetTop; // -2 element\r\n\r\n\t\tif(list.$virtual.preparedLength !== void 0 && cursor >= list.length - list.$virtual.preparedLength)\r\n\t\t\tbounding.floor = list.$virtual.dCursor.floor.offsetTop + list.$virtual.scrollHeight*2;\r\n\t\telse{\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount + 3].offsetTop; // +2 element\r\n\r\n\t\t\tif(parentNode.hasAttribute('scroll-reduce-floor')){\r\n\t\t\t\tbounding.floor -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t\tbounding.ceiling -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbounding.ceiling -= bounding.initial;\r\n\t\tbounding.floor -= bounding.initial;// scrollHeight - clientHeight\r\n\t}\r\n\r\n\tfunction moveElementCursor(changes, list){\r\n\t\tvar vDOM = list.$virtual.dom;\r\n\t\tvar vCursor = list.$virtual.vCursor;\r\n\t\tvar dCursor = list.$virtual.dCursor;\r\n\r\n\t\tif(changes > 0){ // forward\r\n\t\t\tvar ref = 0;\r\n\r\n\t\t\t// Select from virtual ceiling cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tref = vDOM.firstElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.ceiling.nextElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the ceiling to vDom\r\n\t\t\tfor (var i = changes; i > 0; i--) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.ceiling === null){\r\n\t\t\t\t\tvCursor.ceiling = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('afterBegin', vCursor.ceiling);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t\t\tvCursor.ceiling = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\t\t}\r\n\t\telse if(changes < 0){ // backward\r\n\t\t\tvar ref = 0;\r\n\t\t\tchanges = -changes;\r\n\r\n\t\t\t// Select from virtual floor cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tref = vDOM.lastElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.floor.previousElementSibling;\r\n\t\t\t\tif(ref === null) break;\r\n\t\t\t\tdCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the floor to vDom\r\n\t\t\tfor (var i = 0; i < changes; i++) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvCursor.floor = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('beforeEnd', vCursor.floor);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t\t\tvCursor.floor = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scrollTo(index, list, prepareCount, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar reduce = 0;\r\n\r\n\t\tif(index >= list.length - virtual.preparedLength){\r\n\t\t\treduce -= prepareCount;\r\n\t\t\tindex = list.length - virtual.preparedLength;\r\n\t\t}\r\n\r\n\t\tif(index - virtual.DOMCursor === 0 || index >= list.length) return;\r\n\r\n\t\tscrollingByScript = true;\r\n\r\n\t\t// Already on DOM tree\r\n\t\tif((virtual.DOMCursor === 0 && index < prepareCount + prepareCount/2) ||\r\n\t\t\t(virtual.DOMCursor + prepareCount/2 > index\r\n\t\t\t&& virtual.DOMCursor + prepareCount < index))\r\n\t\t\tscroller.scrollTop = parentNode.children[index - virtual.DOMCursor + 1].offsetTop;\r\n\r\n\t\t// Move cursor\r\n\t\telse {\r\n\t\t\tvar temp = null;\r\n\t\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\t\tvar floor = virtual.dCursor.floor;\r\n\t\t\tvar vCursor = virtual.vCursor;\r\n\r\n\t\t\t// DOM tree to virtual DOM\r\n\t\t\tvar length = parentNode.childElementCount - 2;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\r\n\t\t\t\t\tif(i === length-1)\r\n\t\t\t\t\t\tvCursor.floor = temp;\r\n\t\t\t\t}\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(index >= prepareCount){\r\n\t\t\t\tif(index < list.length - virtual.preparedLength)\r\n\t\t\t\t\tindex -= prepareCount;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treduce = prepareCount - index;\r\n\t\t\t\tvirtual.DOMCursor = index = 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\r\n\t\t\t// Virtual DOM to DOM tree\r\n\t\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\t\ttemp = virtual.dom.children[index];\r\n\t\t\t\tif(temp === void 0) break;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t\tvirtual.DOMCursor = index;\r\n\r\n\t\t\tvCursor.floor = virtual.dom.children[index] || null;\r\n\t\t\tvCursor.ceiling = vCursor.floor ? vCursor.floor.previousElementSibling : null;\r\n\r\n\t\t\tif(list.$virtual.refreshVirtualSpacer)\r\n\t\t\t\tlist.$virtual.refreshVirtualSpacer(index);\r\n\r\n\t\t\trefreshScrollBounding(index, virtual.bounding, list, parentNode);\r\n\r\n\t\t\ttemp = parentNode.children[prepareCount - reduce + 1];\r\n\t\r\n\t\t\tif(temp !== void 0)\r\n\t\t\t\tscroller.scrollTop = temp.offsetTop - scroller.offsetTop;\r\n\t\t}\r\n\r\n\t\tscrollingByScript = false;\r\n\t}\r\n\r\n\tfunction removeUserScrollFocus(parentNode){\r\n\t\tparentNode.style.overflow = 'hidden';\r\n\t\tsetTimeout(function(){\r\n\t\t\tparentNode.style.overflow = '';\r\n\t\t}, 50);\r\n\t}\r\n\r\n\tfunction getAbsoluteHeight(el){\r\n\t  var styles = window.getComputedStyle(el);\r\n\t  var margin = parseInt(styles['marginTop']) + parseInt(styles['marginBottom']);\r\n\t  return el.offsetHeight + margin || 0;\r\n\t}\r\n\r\n\tfunction obtainElements(list, parentNode){\r\n\t\tvar exist = [];\r\n\t\tvar temp = void 0;\r\n\r\n\t\tvar length = list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[i];\r\n\t\t\tif(temp === void 0) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = parentNode.childElementCount - 2;\r\n\t\tfor (var i = 1; i <= length; i++) {\r\n\t\t\ttemp = parentNode.children[i];\r\n\t\t\tif(temp === void 0) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\t\t\r\n\t\t// Get elements length\r\n\t\tvar elementLength = list.$virtual.dom.childElementCount + length;\r\n\r\n\t\tlength = elementLength - length - list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[list.$virtual.DOMCursor + i];\r\n\t\t\tif(temp === void 0) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\treturn exist;\r\n\t}\r\n\r\n\tfunction refresh(force, list, prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer){\r\n\t\tvar cursor = list.$virtual.DOMCursor;\r\n\t\tvar additionalScroll = 0;\r\n\r\n\t\t// Find nearest cursor for current view position\r\n\t\tif(force){\r\n\t\t\tvar i = -1;\r\n\t\t\tvar length = list.$virtual.preparedLength;\r\n\r\n\t\t\tdo{\r\n\t\t\t\ti++;\r\n\t\t\t} while(i < length && parentNode.children[i].offsetTop < scroller.scrollTop);\r\n\r\n\t\t\tcursor = cursor + i;\r\n\t\t\tif(cursor > 0) cursor -= 1;\r\n\r\n\t\t\tadditionalScroll = scroller.scrollTop - parentNode.children[i].offsetTop;\r\n\t\t}\r\n\r\n\t\t// Force move cursor if element in the DOM tree was overloaded\r\n\t\tif(force || parentNode.childElementCount - 2 > list.$virtual.preparedLength){\r\n\t\t\tlist.$virtual.DOMCursor = list.length;\r\n\t\t\tvar moveTo = cursor;\r\n\t\t\tif(!force)\r\n\t\t\t\tmoveTo = cursor <= prepareCount ? cursor : (cursor + prepareCount);\r\n\r\n\t\t\tscrollTo(moveTo,\r\n\t\t\t\tlist,\r\n\t\t\t\tprepareCount,\r\n\t\t\t\tparentNode,\r\n\t\t\t\tscroller\r\n\t\t\t);\r\n\r\n\t\t\tscroller.scrollTop += additionalScroll;\r\n\t\t}\r\n\r\n\t\tif(refreshVirtualSpacer)\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\r\n\t\tif(checkCursorPosition)\r\n\t\t\tcheckCursorPosition();\r\n\r\n\t\trefreshScrollBounding(cursor, list.$virtual.bounding, list, parentNode);\r\n\t}\r\n\r\n\tvar _onElementResize = [];\r\n\tvar _onElementResize_timer = -1;\r\n\tfunction onElementResize(parentNode, callback){\r\n\t\tif(_onElementResize_timer === -1){\r\n\t\t\t_onElementResize_timer = setInterval(function(){\r\n\t\t\t\tvar temp = null;\r\n\t\t\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\t\t\ttemp = _onElementResize[i];\r\n\r\n\t\t\t\t\t// Check resize\r\n\t\t\t\t\tif(temp.element.scrollHeight === temp.height\r\n\t\t\t\t\t\t|| temp.element.scrollWidth === temp.width)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t// Check if it's removed from DOM\r\n\t\t\t\t\tif(temp.element.parentElement === null){\r\n\t\t\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.callback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(_onElementResize.length === 0){\r\n\t\t\t\t\tclearInterval(_onElementResize_timer);\r\n\t\t\t\t\t_onElementResize_timer = -1;\r\n\t\t\t\t}\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\r\n\t\t_onElementResize.push({\r\n\t\t\telement:parentNode,\r\n\t\t\tcallback:callback,\r\n\t\t\theight:parentNode.scrollHeight,\r\n\t\t\twidth:parentNode.scrollWidth\r\n\t\t});\r\n\t}\r\n\r\n\tfunction offElementResize(parentNode){\r\n\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\tif(_onElementResize[i].element === parentNode)\r\n\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Interval will be cleared when the array is empty\r\n\t}\r\n\r\n\tfunction initStyles(){\r\n\t\tvar style = document.getElementById('sf-styles');\r\n\r\n\t\tif(!style){\r\n\t\t\tstyle = document.createElement('style');\r\n\t\t\tstyle.id = 'sf-styles';\r\n        \tdocument.head.appendChild(style);\r\n\t\t}\r\n\r\n\t\tstyle.sheet.insertRule(\r\n\t\t'.sf-virtual-list .virtual-spacer{'+\r\n            'visibility: hidden;'+\r\n            'position: relative;'+\r\n            'height: 1px;'+\r\n            'transform-origin: 0 0;'+\r\n            'width: 1px;'+\r\n            'margin: 0;'+\r\n            'padding: 0;'+\r\n            'background: none;'+\r\n            'border: none;'+\r\n            'box-shadow: none;'+\r\n         '}', style.sheet.cssRules.length);\r\n\t}\r\n};"]}