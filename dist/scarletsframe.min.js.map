{"version":3,"sources":["sf-a_init.js","sf-a_polyfill.js","sf-controller.js","sf-dom.js","sf-e-ajax.js","sf-z_end.js","sf-loader.js","sf-model.js","sf-router.js","sf-virtual_scroll.js"],"names":["global","factory","exports","module","sf","window","this","undefined","document","arguments","constructor","Function","loader","onFinish","apply","isEmptyObject","obj","key","compareObject","obj1","obj2","i","hiddenProperty","property","value","Object","defineProperty","enumerable","configurable","deepProperty","path","length","internal","regex","getQuotes","avoidQuotes","strictVar","assign","target","varArgs","TypeError","to","index","nextSource","nextKey","prototype","hasOwnProperty","call","writable","Element","remove","CharacterData","DocumentType","forEach","item","parentNode","removeChild","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","querySelectorAll","NodeList","callback","thisArg","location","origin","protocol","hostname","port","controller","self","pending","active","for","name","func","modelScope","element","model","modelName","bindedList","getAttribute","parentEl","$","parent","root","bindedListIndex","prevAll","hasAttribute","run","listenSFClick","e","script","_modelScope","modelKeys","scopeMask","RegExp","replace","full","matched","split","method","method_","eval","shift","join","pop","found","preventDefault","console","error","root_","scope","DOMWasLoaded","init","temp","body","addEventListener","on","capture","once","dom","selector","context","parseElement","String","findOne","querySelector","closest","parentElement","isNext","result","findNodes","nextSibling","previousSibling","push","nextAll","event","tempCallback","ev","off","events","ref","getEventListeners","removeEventListener","splice","animateCSS","animationName","duration","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","style","webkitAnimationDuration","animationDuration","list","classList","add","setTimeout","emptyDOM","div","createElement","ul","tbody","tr","table","select","html","returnNode","tempDOM","indexOf","textContent","insertAdjacentHTML","elements","documentElement","domReady","getSelector","childIndexes","untilElement","names","id","unshift","tagName","array","childNodes","globals","jsonpRequests","Request","requestOptions","globalsNoCallbacks","callbackName","defaults","url","toString","data","async","cache","user","password","headers","xhrFields","statusCode","processData","dataType","contentType","timeout","options","fireCallback","globalCallbackValue","optionCallbackValue","_i","type","paramsPrefix","toUpperCase","stringData","serializeQuery","abortTimeout_1","callbackName_1","Date","now","callbackSplit","requestUrl","addVars","filter","el","script_1","onerror","clearTimeout","src","appendChild","xhr","XMLHttpRequest","requestParameters","open","xhrTimeout","postData","ArrayBuffer","Blob","Document","FormData","boundary","setRequestHeader","newData","JSON","stringify","keys","headerName","crossDomain","test","$2","host","onload","status","responseData","parseError","parse","responseText","err","responseType","response","onabort","abort","send","RequestShortcut","args","_a","success","params","prefix","Array","encodeURIComponent","get","concat","post","json","getJSON","postJSON","setup","ajax","loadedContent","totalContent","DOMReady","turnedOff","whenDOMReady","whenDOMLoaded","whenProgress","onProgress","f","css","rel","href","head","js","warn","isQueued","queuePreprocess","nodeType","repeatedList","onReadyState","readyState","clearInterval","onReadyState_timer","listener","router","setInterval","bindingEnabled","processingElement","trimIndentation","text","indent","trim","bracketMatch","chackValidFunctionCall","allowedFunction","localEval","_model_","_content_","tempScript","preventExecution","check_","exec","log","outerHTML","_result_","_evaled_","escapeEscapedQuote","unescapeEscapedQuote","elseIfHandle","else_","scopes","elseIf","elseValue","currentElement","previousElementSibling","$virtual","DOMCursor","modelRef","templateParser_regex","REF_DIRECT","REF_IF","REF_EXEC","templateExec","atIndex","parsed","if","templateParser","template","cloneNode","addresses","changesReference","pendingInsert","current","address","cRef","refA","direct","parse_id","match","dynamicFlag","parse_index","startFlag","attributes","a","refB","attribute","setAttribute","sf$elementReferences","tDOM","insertBefore","syntheticCache","sf$cache","modelRef_array","syntheticTemplate","changes","modelReference","checkRelated","parseIndex","haveChanges","currentDOM","notExist","isEqualNode","replaceChild","dataParser","mask","runEval","preParsedReference","variableList","itemMask","preParsed","lastParsedIndex","prepared","actual","slice","exist","charCodeAt","uniqueDataParser","take","passVar","currentIndex","strDeclare","firstTime","check","VarPass_","VarPass","s1","obtained","val","findElse","condition","bindArray","propertyName","targetNode","editProperty","refreshTimer","parentChilds","children","processElement","other","count","spacer","firstElementChild","lastElementChild","overflow","vDOM","update","insertAdjacentElement","refresh","oldChild","referenceNode","create","currentRemoved","startRemove","items","_single_zero","_double_zero","propertyProxy","subject","lastLength","o","matchLeft","real","limit","from","contains","virtual_scroll","handle","elem","getElement","virtualChilds","childElement","childElementCount","loopParser","extractPreprocess","sf$bindedKey","initBindingInformation","set","$replace","inputBoundFunction","bindInput","whichVar","removeAttribute","alreadyInitialized","DOMNodeRemoved","removeModelBinding","queued","parsePreprocess","ceiling","floor","styles","getComputedStyle","absHeight","parseFloat","Math","ceil","offsetHeight","after","nextElementSibling","before","everyRemovedNodes","nodes","nodeName","MutationObserver","observe","everyRecords","record","removedNodes","records","childList","subtree","bindedKey","Number","Boolean","destroy","getOwnPropertyDescriptor","dcBracket","bindObject","which","Node","attrs","attr","htmlClone","innerHTML","onChanges","objValue","bindElement","brackets","s2","copy","reverse","addressed","addressAttributes","currentNode","indexes","map","addressStart","commentFlag","flag","createComment","textNode","createTextNode","search","extract","checkList","full_","match_","findModelProperty","asArray","excludes","extracting","nodeValue","loading","enabled","pauseRenderOnTransition","currentPage","initialized","currentRouterURL","popstateListener","routingError","routingBack","goto","pathname","beforeEvent","enable","load","onEvent","loaded","special","lazyViewPoint","history","pushState","RouterLoading","_scarlets","DOMReference","foundAction","last","afterEvent","title","oldURL","newURL","routerLoaded","aborted","back","styleInitialized","scrollingByScript","refreshScrollBounding","cursor","bounding","prepareCount","offsetTop","preparedLength","dCursor","scrollHeight","scrollTo","scroller","refreshVirtualSpacer","virtual","reduce","scrollTop","vCursor","insertCount","removeUserScrollFocus","getAbsoluteHeight","margin","parseInt","force","checkCursorPosition","additionalScroll","moveTo","getElementById","sheet","insertRule","cssRules","initStyles","obtainElements","_onElementResize","offElementResize","resetViewport","visibleLength","clientHeight","fillViewport","ceilingHeight","floorHeight","updating","resetCeiling","height","previousCeiling","nextFloor","_onElementResize_timer","scrollWidth","width","onElementResize","dynamicHeight","offsetTo","fromCeiling","scrollFocused","moveElementCursor","navigator","userAgent","staticHeight"],"mappings":"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","file":"scarletsframe.min.js","sourcesContent":["(function(global, factory){\r\n  if(typeof exports === 'object' && typeof module !== 'undefined') module.exports = factory(global);\r\n  else global.sf = factory(global);\r\n}(typeof window !== \"undefined\" ? window : this, (function(window){'use strict';\r\nif(typeof document === undefined)\r\n\tdocument = window.document;\r\n// ===== Module Init =====\r\n\r\nvar sf = function(){\r\n\tif(arguments[0].constructor === Function){\r\n\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\t}\r\n};\r\n\r\nsf.internal = {};\r\nsf.regex = {\r\n\t// ToDo: Need help to skip escaped quote\r\n\tgetQuotes:/(['\"])[\\s\\S]*?[^\\\\]\\1/g,\r\n\tavoidQuotes:'(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)',\r\n\tstrictVar:'(?=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )'\r\n};\r\n\r\nfunction isEmptyObject(obj){\r\n\tfor(var key in obj){\r\n\t\treturn false;\r\n\t}\r\n\treturn true\r\n}\r\n\r\nfunction compareObject(obj1, obj2){\r\n\tif(!obj1 || !obj2)\r\n\t\treturn false;\r\n\r\n\tfor(var i in obj1){\r\n\t\tif(typeof obj1[i] !== 'object' && obj1[i] !== obj2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction hiddenProperty(obj, property, value){\r\n\tObject.defineProperty(obj, property, {\r\n\t\tenumerable: false,\r\n\t\tconfigurable: true,\r\n\t\tvalue: value\r\n\t});\r\n}\r\n\r\nfunction deepProperty(obj, path){\r\n  for(var i = 0; i < path.length; i++){\r\n    obj = obj[path[i]];\r\n    if(obj === undefined) return obj;\r\n  }\r\n  return obj;\r\n}","// ==== ES5 Polyfill ====\r\nif(typeof Object.assign != 'function'){\r\n  Object.defineProperty(Object, \"assign\", {\r\n    value: function assign(target, varArgs) {\r\n      'use strict';\r\n      if (target == null)\r\n        throw new TypeError('Cannot convert undefined or null to object');\r\n      var to = Object(target);\r\n      for (var index = 1; index < arguments.length; index++) {\r\n        var nextSource = arguments[index];\r\n        if (nextSource != null) {\r\n          for (var nextKey in nextSource) {\r\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey))\r\n              to[nextKey] = nextSource[nextKey];\r\n          }\r\n        }\r\n      }\r\n      return to;\r\n    },\r\n    writable: true,\r\n    configurable: true\r\n  });\r\n}\r\n\r\nif(Element.prototype.remove === undefined || CharacterData.prototype.remove === undefined || DocumentType.prototype.remove === undefined){\r\n  (function (arr) {\r\n    arr.forEach(function (item) {\r\n      if (item.hasOwnProperty('remove')) {\r\n        return;\r\n      }\r\n      Object.defineProperty(item, 'remove', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        writable: true,\r\n        value: function remove() {\r\n          if (this.parentNode !== null)\r\n            this.parentNode.removeChild(this);\r\n        }\r\n      });\r\n    });\r\n  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\r\n}\r\n\r\nif(!Element.prototype.matches){\r\n  Element.prototype.matches = (Element.prototype).matchesSelector ||\r\n    (Element.prototype).mozMatchesSelector || (Element.prototype).msMatchesSelector ||\r\n    (Element.prototype).oMatchesSelector || (Element.prototype).webkitMatchesSelector ||\r\n    function (s) {\r\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n      i = matches.length;\r\n      while (--i >= 0 && matches.item(i) !== this){}\r\n      return i > -1;\r\n    };\r\n}\r\n\r\nif(!NodeList.prototype.forEach){\r\n    NodeList.prototype.forEach = function (callback, thisArg) {\r\n        thisArg = thisArg || window;\r\n        for (var i = 0; i < this.length; i++) {\r\n            callback.call(thisArg, this[i], i, this);\r\n        }\r\n    };\r\n}\r\n\r\nif(!window.location.origin){\r\n  window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');\r\n}","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tself.pending = {};\r\n\tself.active = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tself.pending[name] = func;\r\n\t}\r\n\r\n\tself.modelScope = function(element, func){\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = element.getAttribute('sf-bind-list');\r\n\t\tif(!bindedList){\r\n\t\t\tvar parentEl = $.parent(element, '[sf-bind-list]');\r\n\t\t\tif(parentEl !== null)\r\n\t\t\t\tbindedList = parentEl.getAttribute('sf-bind-list');\r\n\t\t}\r\n\t\telse var parentEl = element;\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(sf.model.root[model], -1);\r\n\t\t\telse return sf.model.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = $.prevAll(parentEl, '[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(sf.model.root[model][bindedList], bindedListIndex);\r\n\t\telse return sf.model.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.modelName = function(element){\r\n\t\tvar name = undefined;\r\n\t\tif(element.hasAttribute('sf-controller'))\r\n\t\t\tname = element.getAttribute('sf-controller');\r\n\t\telse\r\n\t\t\tname = $.parent(element, '[sf-controller]').getAttribute('sf-controller');\r\n\r\n\t\t// Initialize it first\r\n\t\tif(name !== undefined && !self.active[name])\r\n\t\t\tself.run(name);\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = e.target;\r\n\t\tvar script = element.getAttribute('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = $.parent(element, '[sf-click]');\r\n\t\t\tscript = element.getAttribute('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = $.parent(element, '[sf-controller]').getAttribute('sf-controller');\r\n\r\n\t\tif(!sf.model.root[model])\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar _modelScope = sf.model.root[model];\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(_modelScope);\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+modelKeys+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tscript = script.replace(scopeMask, function(full, matched){\r\n\t\t\treturn '_modelScope.'+matched;\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script[0];\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(e) {\r\n\t\t\tmethod = false;\r\n\t\t}\r\n\r\n\t\tif(!method){\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot call `'+method_+'`]\\n', element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript.shift();\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0){\r\n\t\t\t// Replace `this` to `element`\r\n\t\t\tscript = eval(('['+script+']').replace(/,this|\\[this/g, function(found){\r\n\t\t\t\treturn found[0] + 'element';\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif(!script)\r\n\t\t\tscript = [];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element, script);\r\n\t\t\te.preventDefault();\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', element, '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tvar root_ = function(scope){\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.model.root[scope] = {};\r\n\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.controller.run(scope);\r\n\r\n\t\treturn sf.model.root[scope];\r\n\t}\r\n\r\n\tself.run = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.run(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(self.pending[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\r\n\t\t\tself.pending[name](sf.model.root[name], root_);\r\n\t\t\tself.active[name] = true;\r\n\t\t\tdelete self.pending[name];\r\n\t\t}\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], root_);\r\n\t}\r\n\r\n\tself.init = function(parent){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(name);\r\n\t\t\t});\r\n\r\n\t\tvar temp = $('[sf-controller]', parent || document.body);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tself.run(temp[i].getAttribute('sf-controller'));\r\n\t\t}\r\n\t}\r\n\r\n\t// Create listener for sf-click\r\n\tdocument.addEventListener('DOMContentLoaded', function(){\r\n\t\t$.on(document.body, 'click', '[sf-click]', listenSFClick);\r\n\t}, {capture:true, once:true});\r\n}","sf.dom = function(selector, context){\r\n\tif(selector[0] === '<') return sf.dom.parseElement(selector);\r\n\tif(selector.constructor !== String) return selector;\r\n\r\n\tif(context) return context.querySelectorAll(selector);\r\n\treturn document.querySelectorAll(selector);\r\n}\r\n\r\nvar $ = sf.dom; // Shortcut\r\n\r\n;(function(){\r\n\tvar self = sf.dom;\r\n\r\n\tself.findOne = function(selector, context){\r\n\t\tif(context !== undefined) return context.querySelector(selector);\r\n\t\treturn document.querySelector(selector);\r\n\t}\r\n\r\n\tself.parent = function(element, selector){\r\n\t\tif(element.closest) return element.closest(selector);\r\n\r\n\t\tdo {\r\n\t\t\tif(element.matches(selector) === true)\r\n\t\t\t\treturn element;\r\n\r\n\t\t\telement = element.parentElement;\r\n\t\t} while (element !== null);\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tself.prevAll = function(element, selector, isNext){\r\n\t\tvar result = [];\r\n\t\tvar findNodes = selector === null || selector.constructor !== String ? true : false;\r\n\r\n\t\t// Skip current element\r\n\t\telement = isNext ? element.nextSibling : element.previousSibling;\r\n\t\twhile (element !== null) {\r\n\t\t\tif(findNodes === false && element.matches(selector) === true)\r\n\t\t\t\tresult.push(element);\r\n\t\t\telse{\r\n\t\t\t\tif(element === selector)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tresult.push(element);\r\n\t\t\t}\r\n\r\n\t\t\tif(isNext)\r\n\t\t\t\telement = element.nextSibling;\r\n\t\t\telse\r\n\t\t\t\telement = element.previousSibling;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.nextAll = function(element, selector){\r\n\t\treturn self.prevAll(element, selector, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen to an event\r\n\t * @param  Node \t\t\telement \tparent element\r\n\t * @param  string \t\t\tevent   \tevent name\r\n\t * @param  function|string  selector    callback function or selector\r\n\t * @param  function\t\t\tcallback    callback function\r\n\t * @param  boolean\t\t\tonce    \tcall once\r\n\t * @return null\r\n\t */\r\n\tself.on = function(element, event, selector, callback, once){\r\n\t\tif(typeof element === 'string'){\r\n\t\t\telement = document;\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = event;\r\n\t\t\tevent = element;\r\n\t\t}\r\n\r\n\t\tif(typeof selector === 'function'){\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = null;\r\n\t\t}\r\n\r\n\t\tif(selector){\r\n\t\t\tvar tempCallback = callback;\r\n\t\t\tcallback = function(ev){\r\n\t\t\t\tif(self.parent(ev.target, selector) !== null)\r\n\t\t\t\t\ttempCallback(ev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcallback.selector = selector;\r\n\t\telement.addEventListener(event, callback, {capture:true, once:once === true});\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.once = function(element, event, selector, callback){\r\n\t\tself.on(element, event, selector, callback, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event listener\r\n\t * @param  Node \telement \tparent element\r\n\t * @param  string \tevent   \tevent name\r\n\t * @param  string  \tselector    selector\r\n\t * @return null\r\n\t */\r\n\tself.off = function(element, event, selector){\r\n\t\t// Remove all event\r\n\t\tif(event === undefined){\r\n\t\t\tvar events = getEventListeners(element);\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar events = event.split(' ');\r\n\t\tif(events.length !== 0){\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove listener\r\n\t\tvar ref = getEventListeners(element);\r\n\t\tif(ref !== undefined && ref[event] !== undefined){\r\n\t\t\tfor (var i = ref[event].length - 1; i >= 0; i--) {\r\n\t\t\t\tif(selector && ref[event][i].selector !== selector)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\telement.removeEventListener(event, ref[event].splice(i, 1), true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.animateCSS = function(element, animationName, callback, duration) {\r\n\t\tvar animationEnd = {\r\n\t\t\tanimation: 'animationend',\r\n\t\t\tOAnimation: 'oAnimationEnd',\r\n\t\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t\t};\r\n\r\n\t\tfor (var t in animationEnd){\r\n\t\t\tif(element.style[t] !== undefined){\r\n\t\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(duration){\r\n\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t}\r\n\r\n\t\tvar list = ('animated ' + animationName).split(' ');\r\n\t\telement.classList.add.apply(element.classList, list);\r\n\t\t$.once(element, animationEnd, function(){\r\n\t\t\telement.classList.remove.apply(element.classList, list);\r\n\t\t\t\r\n\t\t\tif(duration) setTimeout(function(){\r\n\t\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t\t}, 1);\r\n\r\n\t\t\tif(typeof callback === 'function') callback();\r\n\t\t});\r\n\t}\r\n\r\n\tvar emptyDOM = {\r\n\t\tdiv:document.createElement('div'),\r\n\t\tul:document.createElement('ul'),\r\n\t\ttbody:document.createElement('tbody'),\r\n\t\ttr:document.createElement('tr'),\r\n\t\ttable:document.createElement('table'),\r\n\t\tselect:document.createElement('select'),\r\n\t};\r\n\tself.parseElement = function(html, returnNode){\r\n\t\tvar result = [];\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\r\n        if(html.indexOf('<li') === 0) tempDOM = emptyDOM.ul;\r\n        if(html.indexOf('<tr') === 0) tempDOM = emptyDOM.tbody;\r\n        if(html.indexOf('<td') === 0 || html.indexOf('<th') === 0) tempDOM = emptyDOM.tr;\r\n        if(html.indexOf('<tbody') === 0) tempDOM = emptyDOM.table;\r\n        if(html.indexOf('<option') === 0) tempDOM = emptyDOM.select;\r\n\r\n\t\ttempDOM.textContent = '';\r\n\t\ttempDOM.insertAdjacentHTML('afterBegin', html);\r\n\r\n\t\tvar ref = tempDOM[returnNode ? 'childNodes' : 'children'];\r\n\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\tresult.push(ref.item(i));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tself.remove = function(elements){\r\n\t\tif(elements.remove !== undefined)\r\n\t\t\treturn elements.remove();\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\telements[i].remove();\r\n\t\t}\r\n\t}\r\n\r\n\tvar documentElement = null;\r\n\tsetTimeout(function(){\r\n\t\tsf.loader.domReady(function(){\r\n\t\t\tdocumentElement = document.body.parentElement;\r\n\t\t});\r\n\t}, 1);\r\n\r\n\tself.getSelector = function(element, childIndexes, untilElement){\r\n\t\tvar names = [];\r\n\t\tif(untilElement === undefined) untilElement = documentElement;\r\n\r\n\t\tvar previousSibling = childIndexes ? 'previousSibling' : 'previousElementSibling';\r\n\r\n\t\twhile(element.parentNode !== null){\r\n\t\t\tif(element.id){\r\n\t\t\t\tnames.unshift('#'+element.id);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(element === untilElement){\r\n\t\t\t\t\tif(childIndexes === undefined)\r\n\t\t\t\t\t\tnames.unshift(element.tagName);\r\n\t\t\t\t\telse names.unshift(0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar e = element;\r\n\t\t\t\t\tvar i = childIndexes ? 0 : 1;\r\n\r\n\t\t\t\t\twhile(e[previousSibling]){\r\n\t\t\t\t\t\te = e[previousSibling];\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(childIndexes)\r\n\t\t\t\t\t\tnames.unshift(i);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tnames.unshift(\":nth-child(\"+i+\")\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t\tif(element === null)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndexes)\r\n\t\t\treturn names;\r\n\t\treturn names.join(\" > \");\r\n\t}\r\n\r\n\tself.childIndexes = function(array, context){\r\n\t\tvar element = context || documentElement;\r\n\t\tvar i = 1;\r\n\r\n\t\tif(array[0].constructor === String)\r\n\t\t\telement = element.querySelector(array[0]);\r\n\r\n\t\telse if(array.length === 1)\r\n\t\t\treturn element;\r\n\r\n\t\tfor (i = i; i < array.length; i++) {\r\n\t\t\telement = element.childNodes.item(array[i]);\r\n\r\n\t\t\tif(element === null)\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n})();","/*\r\n  Special Thanks to Vladimir Kharlampidi\r\n  https://github.com/nolimits4web/\r\n*/\r\n\r\nvar globals = {};\r\nvar jsonpRequests = 0;\r\nfunction Request(requestOptions) {\r\n    var globalsNoCallbacks = Object.assign({}, globals);\r\n    ('beforeCreate beforeOpen beforeSend error complete success statusCode').split(' ').forEach(function (callbackName) {\r\n        delete globalsNoCallbacks[callbackName];\r\n    });\r\n    var defaults = Object.assign({\r\n        url: window.location.toString(),\r\n        method: 'GET',\r\n        data: false,\r\n        async: true,\r\n        cache: true,\r\n        user: '',\r\n        password: '',\r\n        headers: {},\r\n        xhrFields: {},\r\n        statusCode: {},\r\n        processData: true,\r\n        dataType: 'text',\r\n        contentType: 'application/x-www-form-urlencoded',\r\n        timeout: 0,\r\n    }, globalsNoCallbacks);\r\n    var options = Object.assign({}, defaults, requestOptions);\r\n    var proceedRequest;\r\n    // Function to run XHR callbacks and events\r\n    function fireCallback(callbackName) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        /*\r\n          Callbacks:\r\n          beforeCreate (options),\r\n          beforeOpen (xhr, options),\r\n          beforeSend (xhr, options),\r\n          error (xhr, status),\r\n          complete (xhr, stautus),\r\n          success (response, status, xhr),\r\n          statusCode ()\r\n        */\r\n        var globalCallbackValue;\r\n        var optionCallbackValue;\r\n        if (globals[callbackName]) {\r\n            globalCallbackValue = globals[callbackName].apply(globals, data);\r\n        }\r\n        if (options[callbackName]) {\r\n            optionCallbackValue = options[callbackName].apply(options, data);\r\n        }\r\n        if (typeof globalCallbackValue !== 'boolean')\r\n            globalCallbackValue = true;\r\n        if (typeof optionCallbackValue !== 'boolean')\r\n            optionCallbackValue = true;\r\n        return (globalCallbackValue && optionCallbackValue);\r\n    }\r\n    // Before create callback\r\n    proceedRequest = fireCallback('beforeCreate', options);\r\n    if (proceedRequest === false)\r\n        return undefined;\r\n    // For jQuery guys\r\n    if (options.type)\r\n        options.method = options.type;\r\n    // Parameters Prefix\r\n    var paramsPrefix = options.url.indexOf('?') >= 0 ? '&' : '?';\r\n    // UC method\r\n    var method = options.method.toUpperCase();\r\n    // Data to modify GET URL\r\n    if ((method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') && options.data) {\r\n        var stringData = void 0;\r\n        if (typeof options.data === 'string') {\r\n            // Should be key=value string\r\n            if (options.data.indexOf('?') >= 0)\r\n                stringData = options.data.split('?')[1];\r\n            else\r\n                stringData = options.data;\r\n        }\r\n        else {\r\n            // Should be key=value object\r\n            stringData = serializeQuery(options.data);\r\n        }\r\n        if (stringData.length) {\r\n            options.url += paramsPrefix + stringData;\r\n            if (paramsPrefix === '?')\r\n                paramsPrefix = '&';\r\n        }\r\n    }\r\n    // JSONP\r\n    if (options.dataType === 'json' && options.url.indexOf('callback=') >= 0) {\r\n        var callbackName_1 = \"jsonp_\" + (Date.now() + ((jsonpRequests += 1)));\r\n        var abortTimeout_1;\r\n        var callbackSplit = options.url.split('callback=');\r\n        var requestUrl = callbackSplit[0] + \"callback=\" + callbackName_1;\r\n        if (callbackSplit[1].indexOf('&') >= 0) {\r\n            var addVars = callbackSplit[1].split('&').filter(function (el) { return el.indexOf('=') > 0; }).join('&');\r\n            if (addVars.length > 0)\r\n                requestUrl += \"&\" + addVars;\r\n        }\r\n        // Create script\r\n        var script_1 = document.createElement('script');\r\n        script_1.type = 'text/javascript';\r\n        script_1.onerror = function onerror() {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('error', null, 'scripterror');\r\n            fireCallback('complete', null, 'scripterror');\r\n        };\r\n        script_1.src = requestUrl;\r\n        // Handler\r\n        window[callbackName_1] = function jsonpCallback(data) {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('success', data);\r\n            script_1.parentNode.removeChild(script_1);\r\n            script_1 = null;\r\n            delete window[callbackName_1];\r\n        };\r\n        document.querySelector('head').appendChild(script_1);\r\n        if (options.timeout > 0) {\r\n            abortTimeout_1 = setTimeout(function () {\r\n                script_1.parentNode.removeChild(script_1);\r\n                script_1 = null;\r\n                fireCallback('error', null, 'timeout');\r\n            }, options.timeout);\r\n        }\r\n        return undefined;\r\n    }\r\n    // Cache for GET/HEAD requests\r\n    if (method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') {\r\n        if (options.cache === false) {\r\n            options.url += paramsPrefix + \"_nocache\" + Date.now();\r\n        }\r\n    }\r\n    // Create XHR\r\n    var xhr = new XMLHttpRequest();\r\n    // Save Request URL\r\n    xhr.requestUrl = options.url;\r\n    xhr.requestParameters = options;\r\n    // Before open callback\r\n    proceedRequest = fireCallback('beforeOpen', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Open XHR\r\n    xhr.open(method, options.url, options.async, options.user, options.password);\r\n    // Create POST Data\r\n    var postData = null;\r\n    if ((method === 'POST' || method === 'PUT' || method === 'PATCH') && options.data) {\r\n        if (options.processData) {\r\n            var postDataInstances = [ArrayBuffer, Blob, Document, FormData];\r\n            // Post Data\r\n            if (postDataInstances.indexOf(options.data.constructor) >= 0) {\r\n                postData = options.data;\r\n            }\r\n            else {\r\n                // POST Headers\r\n                var boundary = \"---------------------------\" + Date.now().toString(16);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    xhr.setRequestHeader('Content-Type', \"multipart/form-data; boundary=\" + boundary);\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader('Content-Type', options.contentType);\r\n                }\r\n                postData = '';\r\n                var data = serializeQuery(options.data);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    data = data.split('&');\r\n                    var newData = [];\r\n                    for (var i = 0; i < data.length; i += 1) {\r\n                        newData.push(\"Content-Disposition: form-data; name=\\\"\" + data[i].split('=')[0] + \"\\\"\\r\\n\\r\\n\" + data[i].split('=')[1] + \"\\r\\n\");\r\n                    }\r\n                    postData = \"--\" + boundary + \"\\r\\n\" + newData.join(\"--\" + boundary + \"\\r\\n\") + \"--\" + boundary + \"--\\r\\n\";\r\n                }\r\n                else if (options.contentType === 'application/json') {\r\n                    postData = JSON.stringify(options.data);\r\n                }\r\n                else {\r\n                    postData = data;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            postData = options.data;\r\n            xhr.setRequestHeader('Content-Type', options.contentType);\r\n        }\r\n    }\r\n    // Additional headers\r\n    if (options.headers) {\r\n        Object.keys(options.headers).forEach(function (headerName) {\r\n            xhr.setRequestHeader(headerName, options.headers[headerName]);\r\n        });\r\n    }\r\n    // Check for crossDomain\r\n    if (typeof options.crossDomain === 'undefined') {\r\n        // eslint-disable-next-line\r\n        options.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(options.url) && RegExp.$2 !== window.location.host;\r\n    }\r\n    if (!options.crossDomain) {\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    }\r\n    if (options.xhrFields) {\r\n        Object.assign(xhr, options.xhrFields);\r\n    }\r\n    var xhrTimeout;\r\n    // Handle XHR\r\n    xhr.onload = function onload() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 0) {\r\n            var responseData = void 0;\r\n            if (options.dataType === 'json') {\r\n                var parseError = void 0;\r\n                try {\r\n                    responseData = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (err) {\r\n                    parseError = true;\r\n                }\r\n                if (!parseError) {\r\n                    fireCallback('success', responseData, xhr.status, xhr);\r\n                }\r\n                else {\r\n                    fireCallback('error', xhr, 'parseerror');\r\n                }\r\n            }\r\n            else {\r\n                responseData = xhr.responseType === 'text' || xhr.responseType === '' ? xhr.responseText : xhr.response;\r\n                fireCallback('success', responseData, xhr.status, xhr);\r\n            }\r\n        }\r\n        else {\r\n            fireCallback('error', xhr, xhr.status);\r\n        }\r\n        if (options.statusCode) {\r\n            if (globals.statusCode && globals.statusCode[xhr.status])\r\n                globals.statusCode[xhr.status](xhr);\r\n            if (options.statusCode[xhr.status])\r\n                options.statusCode[xhr.status](xhr);\r\n        }\r\n        fireCallback('complete', xhr, xhr.status);\r\n    };\r\n    xhr.onerror = function onerror() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        fireCallback('error', xhr, xhr.status);\r\n        fireCallback('complete', xhr, 'error');\r\n    };\r\n    // Timeout\r\n    if (options.timeout > 0) {\r\n        xhr.onabort = function onabort() {\r\n            if (xhrTimeout)\r\n                clearTimeout(xhrTimeout);\r\n        };\r\n        xhrTimeout = setTimeout(function () {\r\n            xhr.abort();\r\n            fireCallback('error', xhr, 'timeout');\r\n            fireCallback('complete', xhr, 'timeout');\r\n        }, options.timeout);\r\n    }\r\n    // Ajax start callback\r\n    proceedRequest = fireCallback('beforeSend', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Send XHR\r\n    xhr.send(postData);\r\n    // Return XHR object\r\n    return xhr;\r\n}\r\nfunction RequestShortcut(method) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    var _a = [], url = _a[0], data = _a[1], success = _a[2], error = _a[3], dataType = _a[4];\r\n    if (typeof args[1] === 'function') {\r\n        url = args[0], success = args[1], error = args[2], dataType = args[3];\r\n    }\r\n    else {\r\n        url = args[0], data = args[1], success = args[2], error = args[3], dataType = args[4];\r\n    }\r\n    [success, error].forEach(function (callback) {\r\n        if (typeof callback === 'string') {\r\n            dataType = callback;\r\n            if (callback === success)\r\n                success = undefined;\r\n            else\r\n                error = undefined;\r\n        }\r\n    });\r\n    dataType = dataType || (method === 'json' || method === 'postJSON' ? 'json' : undefined);\r\n    var requestOptions = {\r\n        url: url,\r\n        method: method === 'post' || method === 'postJSON' ? 'POST' : 'GET',\r\n        data: data,\r\n        success: success,\r\n        error: error,\r\n        dataType: dataType,\r\n    };\r\n    if (method === 'postJSON') {\r\n        Object.assign(requestOptions, {\r\n            contentType: 'application/json',\r\n            processData: false,\r\n            crossDomain: true,\r\n            data: typeof data === 'string' ? data : JSON.stringify(data),\r\n        });\r\n    }\r\n    return Request(requestOptions);\r\n}\r\nObject.assign(Request, {\r\n    get: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['get'].concat(args));\r\n    },\r\n    post: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['post'].concat(args));\r\n    },\r\n    json: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    getJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    postJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['postJSON'].concat(args));\r\n    },\r\n});\r\nRequest.setup = function setup(options) {\r\n    if (options.type && !options.method) {\r\n        Object.assign(options, { method: options.type });\r\n    }\r\n    Object.assign(globals, options);\r\n};\r\nfunction serializeQuery(params, prefix) {\r\n    var key = Object.keys(params);\r\n    for (var i = 0; i < key.length; i++) {\r\n      var value = params[key[i]];\r\n      if (params.constructor === Array)\r\n          key[i] += prefix + \"[]\";\r\n      else if (params.constructor === Object)\r\n          key[i] = (prefix ? prefix + \"[\" + key[i] + \"]\" : key[i]);\r\n\r\n      if (typeof value === 'object')\r\n          key[i] = serializeQuery(value, key[i]);\r\n      else\r\n          key[i] = key[i] + \"=\" + encodeURIComponent(value);\r\n    }\r\n    return key.join('&');\r\n}\r\n$.ajax = sf.ajax = Request;","return sf;\r\n\r\n// ===== Module End =====\r\n})));","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 0;\r\n\tself.DOMWasLoaded = false;\r\n\tself.DOMReady = false;\r\n\tself.turnedOff = true;\r\n\r\n\tvar whenDOMReady = [];\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\tself.off = function(){\r\n\t\tself.turnedOff = true;\r\n\t}\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.domReady = function(func){\r\n\t\tif(self.DOMReady) return func();\r\n\t\tif(whenDOMReady.indexOf(func) !== -1) return;\r\n\t\twhenDOMReady.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('link');\r\n\t        s.rel = 'stylesheet';\r\n\t        s.href = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tself.js = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.turnedOff = false;\r\n\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('script');\r\n\t        s.type = \"text/javascript\";\r\n\t        s.async = true;\r\n\t        s.src = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, {once:true});\r\n\t        s.addEventListener('error', sf.loader.f, {once:true});\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(function(){\r\n\t\tif(self.totalContent === 0 && !self.turnedOff){\r\n\t\t\tself.loadedContent = self.totalContent = 1;\r\n\t\t\tconsole.warn(\"If you don't use content loader feature, please turn it off with `sf.loader.off()`\");\r\n\t\t}\r\n\t}, 10000);\r\n\r\n\tvar isQueued = false;\r\n\tdocument.addEventListener(\"DOMContentLoaded\", function(event){\r\n\t\t// Add processing class to queued element\r\n\t\tif(isQueued === false && document.body){\r\n\t\t\tisQueued = sf.model.queuePreprocess(document.body);\r\n\t\t\tfor (var i = 0; i < isQueued.length; i++) {\r\n\t\t\t\tif(isQueued[i].nodeType === 1)\r\n\t\t\t\t\tisQueued[i].classList.add('sf-dom-queued');\r\n\t\t\t}\r\n\r\n\t\t\tvar repeatedList = $('[sf-repeat-this]', document.body);\r\n\t\t\tfor (var i = 0; i < repeatedList.length; i++) {\r\n\t\t\t\trepeatedList[i].classList.add('sf-dom-queued');\r\n\t\t\t}\r\n\r\n\t\t\t// Find images\r\n\t\t\tvar temp = $('img:not(onload)[src]');\r\n\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\tsf.loader.totalContent++;\r\n\t\t\t\ttemp[i].addEventListener('load', sf.loader.f, {once:true});\r\n\t\t\t\ttemp[i].addEventListener('error', sf.loader.f, {once:true});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction onReadyState(){\r\n\t\t\tif(isQueued === null){\r\n\t\t\t\tclearInterval(onReadyState_timer);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(self.turnedOff === false && self.loadedContent < self.totalContent)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(/loaded|complete/.test(document.readyState) === false)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tclearInterval(onReadyState_timer);\r\n\r\n\t\t\tif(self.DOMReady === false){\r\n\t\t\t\tself.DOMReady = true;\r\n\t\t\t\tfor (var i = 0; i < whenDOMReady.length; i++) {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\twhenDOMReady[i]();\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar listener = sf.dom('script, link, img');\r\n\t\t\tfor (var i = 0; i < listener.length; i++) {\r\n\t\t\t\tlistener[i].removeEventListener('error', sf.loader.f);\r\n\t\t\t\tlistener[i].removeEventListener('load', sf.loader.f);\r\n\t\t\t}\r\n\r\n\t\t\tself.DOMWasLoaded = true;\r\n\t\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\t\ttry{\r\n\t\t\t\t\twhenDOMLoaded[i]();\r\n\t\t\t\t} catch(e){\r\n\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhenProgress.splice(0);\r\n\t\t\twhenDOMReady.splice(0);\r\n\t\t\twhenDOMLoaded.splice(0);\r\n\t\t\twhenDOMReady = whenDOMLoaded = null;\r\n\r\n\t\t\t// Last init\r\n\t\t\tsf.controller.init();\r\n\t\t\tsf.model.init(document.body, isQueued);\r\n\t\t\tsf.router.init();\r\n\r\n\t\t\tisQueued = null;\r\n\t\t}\r\n\r\n\t\tvar onReadyState_timer = setInterval(onReadyState, 100);\r\n\t\tonReadyState();\r\n\t});\r\n}\r\nsf.prototype.constructor = sf.loader.onFinish;","// Data save and HTML content binding\r\nsf.model = function(scope){\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\tif(sf.controller.pending[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n};\r\n\r\n(function(){\r\n\tvar self = sf.model;\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\r\n\tvar processingElement = null;\r\n\r\n\t// For debugging, normalize indentation\r\n\tfunction trimIndentation(text){\r\n\t\tvar indent = text.split(\"\\n\", 3);\r\n\t\tif(indent[0][0] !== ' ' || indent[0][0] !== \"\\t\")\r\n\t\t\tindent = indent[1];\r\n\t\telse indent = indent[0];\r\n\r\n\t\tif(indent === undefined) return text;\r\n\t\tindent = indent.length - indent.trim().length;\r\n\t\tif(indent === 0) return text;\r\n\t\treturn text.replace(RegExp('^([\\\\t ]{'+indent+'})', 'gm'), '');\r\n\t}\r\n\r\n\t// Secured evaluation\r\n\tvar bracketMatch = RegExp('([\\\\w.]*?[\\\\S\\\\s])\\\\('+sf.regex.avoidQuotes, 'g');\r\n\tvar chackValidFunctionCall = /[a-zA-Z0-9 \\]\\$\\)]/;\r\n\tvar allowedFunction = [':', 'for', 'if', 'while', '_content_.take', 'console.log'];\r\n\tvar localEval = function(script, _model_, _modelScope, _content_){\r\n\t\t\"use strict\";\r\n\r\n\t\t// ==== Security check ====\r\n\t\tvar tempScript = script;\r\n\r\n\t\t// Remove quotes\r\n\t\ttempScript = tempScript.replace(sf.regex.getQuotes, '\"Quotes\"');\r\n\r\n\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\tvar preventExecution = false;\r\n\t\tvar check_ = null;\r\n\t\twhile((check_ = bracketMatch.exec(tempScript)) !== null){\r\n\t\t\tcheck_[1] = check_[1].trim();\r\n\r\n\t\t\tif(allowedFunction.indexOf(check_[1]) === -1 &&\r\n\t\t\t\tcheck_[1].split('.')[0] !== '_modelScope' &&\r\n\t\t\t\tchackValidFunctionCall.test(check_[1][check_[1].length-1])\r\n\t\t\t){\r\n\t\t\t\tpreventExecution = check_[1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(preventExecution){\r\n\t\t\tconsole.error(\"Trying to executing unrecognized function (\"+preventExecution+\")\");\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\t\t// ==== Security check ended ====\r\n\t\r\n\t\tvar _result_ = '';\r\n\t\ttry{\r\n\t\t\tif(/@return /.test(script) === true){\r\n\t\t\t\tvar _evaled_ = eval('(function(){'+script.split('@return ').join('return ')+'})()');\r\n\t\t\t\treturn _result_ + _evaled_;\r\n\t\t\t}\r\n\t\t\telse var _evaled_ = eval(script);\r\n\t\t} catch(e){\r\n\t\t\tconsole.error(e);\r\n\t\t\tconsole.log(trimIndentation(processingElement.outerHTML).trim());\r\n\t\t\t//console.log(tempScript);\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\t// Find an index for the element on the list\r\n\tself.index = function(element){\r\n\t\tvar i = -1;\r\n\t\tvar tagName = element.tagName;\r\n\t\tvar currentElement = element;\r\n\r\n\t\twhile(element !== null) {\r\n\t\t\tif(element.tagName === tagName)\r\n\t\t\t\ti++;\r\n\r\n\t\t\telement = element.previousElementSibling;\r\n\t\t}\r\n\r\n\t\tvar list = currentElement.getAttribute('sf-bind-list');\r\n\t\tif(!list) return i;\r\n\r\n\t\tvar ref = sf.model.root[sf.controller.modelName(currentElement)][list];\r\n\t\tif(!ref.$virtual) return i;\r\n\r\n\t\treturn i + ref.$virtual.DOMCursor - 1;\r\n\t}\r\n\r\n\t// Declare model for the name with a function\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\t\t\r\n\t\tfunc(self(name), self);\r\n\t}\r\n\r\n\t// Get property of the model\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys.join('|');\r\n\t}\r\n\r\n\t// Escape the escaped quote\r\n\tfunction escapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*');\r\n\t}\r\n\r\n\tfunction unescapeEscapedQuote(text){\r\n\t\treturn text.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\");\r\n\t}\r\n\r\n\tfunction elseIfHandle(else_, scopes){\r\n\t\tvar elseIf = else_.elseIf;\r\n\r\n\t\t// Else if\r\n\t\tfor (var i = 0; i < elseIf.length; i++) {\r\n\t\t\t// Check the condition\r\n\t\t\tscopes[0] = elseIf[i][0];\r\n\t\t\tif(!localEval.apply(self.root, scopes))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Get the value\r\n\t\t\tscopes[0] = elseIf[i][1];\r\n\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t}\r\n\r\n\t\t// Else\r\n\t\tif(else_.elseValue === null)\r\n\t\t\treturn '';\r\n\r\n\t\tscopes[0] = else_.elseValue;\r\n\t\treturn localEval.apply(self.root, scopes);\r\n\t}\r\n\r\n\t// ==== Template parser ====\r\n\tvar templateParser_regex = /{{%=([0-9]+)/gm;\r\n\tvar REF_DIRECT = 0, REF_IF = 1, REF_EXEC = 2;\r\n\tvar templateExec = function(parse, item, atIndex){\r\n\t\tvar parsed = {};\r\n\r\n\t\t// Get or evaluate static or dynamic data\r\n\t\tfor (var i = 0; i < parse.length; i++) {\r\n\t\t\tif(atIndex !== undefined && atIndex.indexOf(i) === -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar ref = parse[i];\r\n\t\t\tref.data[1] = item;\r\n\r\n\t\t\t// Direct evaluation type\r\n\t\t\tif(ref.type === REF_DIRECT || ref.type === REF_EXEC)\r\n\t\t\t\tparsed[i] = {type:ref.type, data:localEval.apply(self.root, ref.data)};\r\n\r\n\t\t\t// Conditional type\r\n\t\t\telse if(ref.type === REF_IF){\r\n\t\t\t\tvar scopes = ref.data;\r\n\t\t\t\tparsed[i] = {type:ref.type, data:''};\r\n\t\t\t\tscopes[0] = ref.if[0];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tparsed[i].data = elseIfHandle(ref, scopes);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscopes[0] = ref.if[1];\r\n\t\t\t\tparsed[i].data = localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n\r\n\tvar templateParser = function(template, item){\r\n\t\tvar html = template.html.cloneNode(true);\r\n\t\tvar addresses = template.addresses;\r\n\t\tvar parsed = templateExec(template.parse, item);\r\n\r\n\t\t// Save model item reference to node\r\n\t\thtml.model = item;\r\n\r\n\t\tvar changesReference = [];\r\n\t\tvar pendingInsert = [];\r\n\r\n\t\t// Find element where the data belongs to\r\n\t\tfor (var i = 0; i < addresses.length; i++) {\r\n\t\t\tvar ref = addresses[i];\r\n\t\t\tvar current = $.childIndexes(ref.address, html);\r\n\r\n\t\t\t// Modify element attributes\r\n\t\t\tif(ref.nodeType === 1){\r\n\t\t\t\tvar refA = ref.attributes;\r\n\t\t\t\tfor(var a = 0; a < refA.length; a++){\r\n\t\t\t\t\tvar refB = refA[a];\r\n\t\t\t\t\tvar cRef = {attribute:current.attributes[refB.name]};\r\n\t\t\t\t\tchangesReference.push(cRef);\r\n\r\n\t\t\t\t\tif(refB.direct !== false){\r\n\t\t\t\t\t\tcRef.direct = refB.direct;\r\n\t\t\t\t\t\tcurrent.setAttribute(refB.name, parsed[refB.direct].data);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Below is used for multiple data\r\n\t\t\t\t\trefB = current.attributes[refB.name];\r\n\t\t\t\t\tcRef.attribute.value = refB.value;\r\n\t\t\t\t\tcRef.parse_id = [];\r\n\r\n\t\t\t\t\trefB.value = refB.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\tcRef.parse_id.push(match);\r\n\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Replace text node\r\n\t\t\tif(ref.nodeType === 3){\r\n\t\t\t\tvar refA = current;\r\n\t\t\t\tvar cRef = {textContent:refA};\r\n\t\t\t\tchangesReference.push(cRef);\r\n\r\n\t\t\t\tif(ref.direct !== false){\r\n\t\t\t\t\tcRef.direct = ref.direct;\r\n\t\t\t\t\trefA.textContent = parsed[ref.direct].data;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Below is used for multiple/dynamic data\r\n\t\t\t\tvar haveDynamicData = false;\r\n\t\t\t\tvar parentNode = current.parentElement;\r\n\t\t\t\tcRef.value = refA.textContent;\r\n\t\t\t\tcRef.parse_id = [];\r\n\r\n\t\t\t\trefA.textContent = refA.textContent.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\tcRef.parse_id.push(match);\r\n\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Replace dynamic node\r\n\t\t\tif(ref.nodeType === -1){\r\n\t\t\t\tvar cRef = {\r\n\t\t\t\t\tdynamicFlag:current,\r\n\t\t\t\t\tparse_index:ref.parse_index,\r\n\t\t\t\t\tparentNode:current.parentNode,\r\n\t\t\t\t\tstartFlag:ref.startFlag && $.childIndexes(ref.startFlag, html)\r\n\t\t\t\t};\r\n\t\t\t\tchangesReference.push(cRef);\r\n\r\n\t\t\t\t// Pending element insert to take other element reference\r\n\t\t\t\tpendingInsert.push(cRef);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Save reference to element\r\n\t\thtml.sf$elementReferences = changesReference;\r\n\t\t// html.sf$modelParsed = parsed;\r\n\r\n\t\t// Run the pending element\r\n\t\tfor (var i = 0; i < pendingInsert.length; i++) {\r\n\t\t\tvar ref = pendingInsert[i];\r\n\t\t\tvar tDOM = $.parseElement(parsed[ref.parse_index].data, true);\r\n\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\tref.parentNode.insertBefore(tDOM[a], ref.dynamicFlag);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t}\r\n\r\n\tfunction syntheticCache(element, template, item){\r\n\t\tif(element.sf$cache === undefined)\r\n\t\t\telement.sf$cache = {};\r\n\r\n\t\tvar cache = element.sf$cache;\r\n\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\tvar ref = modelRef_array[i];\r\n\t\t\tcache[ref[0]] = deepProperty(item, ref[1]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction syntheticTemplate(element, template, property, item){\r\n\t\tif(property !== undefined){\r\n\t\t\tvar changes = template.modelReference[property];\r\n\t\t\tif(changes === undefined || changes.length === 0){\r\n\t\t\t\tconsole.error(\"Failed to run syntheticTemplate because property '\"+property+\"' is not observed\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar changes = [];\r\n\t\t\tvar cache = element.sf$cache;\r\n\t\t\tvar modelRef_array = template.modelRef_array;\r\n\r\n\t\t\tfor (var i = 0; i < modelRef_array.length; i++) {\r\n\t\t\t\tvar ref = modelRef_array[i];\r\n\t\t\t\tvar newData = deepProperty(item, ref[1]);\r\n\r\n\t\t\t\t// Check if data was different\r\n\t\t\t\tif(cache[ref[0]] !== newData){\r\n\t\t\t\t\tchanges = changes.concat(template.modelReference[ref[0]]);\r\n\t\t\t\t\tcache[ref[0]] = newData;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(changes.length === 0) return false;\r\n\t\t}\r\n\r\n\t\tvar parsed = templateExec(template.parse, item, changes);\r\n\t\tfunction checkRelated(parseIndex){\r\n\t\t\tvar found = false;\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(changes.indexOf(parseIndex[i]) !== -1){\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(found === false) return false;\r\n\r\n\t\t\t// Prepare all required data\r\n\t\t\tchanges = [];\r\n\t\t\tfor (var i = 0; i < parseIndex.length; i++) {\r\n\t\t\t\tif(parsed[parseIndex[i]] === undefined){\r\n\t\t\t\t\tchanges.push(parseIndex[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tObject.assign(parsed, templateExec(template.parse, item, changes));\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tvar changesReference = element.sf$elementReferences;\r\n\t\tvar haveChanges = false;\r\n\t\tfor (var i = 0; i < changesReference.length; i++) {\r\n\t\t\tvar cRef = changesReference[i];\r\n\r\n\t\t\tif(cRef.dynamicFlag !== undefined){ // Dynamic data\r\n\t\t\t\t// Will only have single parse_index\r\n\t\t\t\tif(parsed[cRef.parse_index] !== undefined){\r\n\t\t\t\t\tvar tDOM = $.parseElement(parsed[cRef.parse_index].data, true);\r\n\t\t\t\t\tvar currentDOM = $.prevAll(cRef.dynamicFlag, cRef.startFlag);\r\n\t\t\t\t\tvar notExist = false;\r\n\r\n\t\t\t\t\t// Replace if exist, skip if similar\r\n\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++) {\r\n\t\t\t\t\t\tif(currentDOM[a] === undefined){\r\n\t\t\t\t\t\t\tnotExist = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(currentDOM[a].isEqualNode(tDOM[a]) === false)\r\n\t\t\t\t\t\t\tcRef.parentNode.replaceChild(tDOM[a], currentDOM[a]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Add if not exist\r\n\t\t\t\t\tif(notExist){\r\n\t\t\t\t\t\tfor (var a = 0; a < tDOM.length; a++)\r\n\t\t\t\t\t\t\tcRef.parentNode.insertBefore(tDOM[a], cRef.dynamicFlag);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove if over index\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tfor (var a = tDOM.length; a < currentDOM.length; a++) {\r\n\t\t\t\t\t\t\tcurrentDOM[a].remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif(cRef.textContent !== undefined){ // Text only\r\n\t\t\t\tif(cRef.parse_index !== undefined){ // Multiple\r\n\t\t\t\t\tif(checkRelated(cRef.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.textContent.textContent.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.textContent.textContent === temp) continue;\r\n\t\t\t\t\t\tcRef.textContent.textContent = temp;\r\n\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.direct].data;\r\n\t\t\t\t\tif(cRef.textContent.textContent === value) continue;\r\n\t\t\t\t\tcRef.textContent.textContent = value;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(cRef.attribute !== undefined){ // Attributes\r\n\t\t\t\tif(cRef.parse_index !== undefined){ // Multiple\r\n\t\t\t\t\tif(checkRelated(cRef.parse_index) === true){\r\n\t\t\t\t\t\tvar temp = cRef.attribute.value.replace(templateParser_regex, function(full, match){\r\n\t\t\t\t\t\t\treturn parsed[match].data;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(cRef.attribute.value === temp) continue;\r\n\t\t\t\t\t\tcRef.attribute.value = temp;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Direct value\r\n\t\t\t\telse if(parsed[cRef.direct]){\r\n\t\t\t\t\tvar value = parsed[cRef.direct].data;\r\n\t\t\t\t\tif(cRef.attribute.value === value) continue;\r\n\t\t\t\t\tcRef.attribute.value = value;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\thaveChanges = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn haveChanges;\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval, preParsedReference){\r\n\t\tvar _modelScope = self.root[scope];\r\n\t\tif(!runEval) runEval = '';\r\n\t\t\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(_modelScope);\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(_modelScope[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\tvar preParsed = [];\r\n\t\t\tvar lastParsedIndex = preParsedReference.length;\r\n\t\t}\r\n\r\n\t\tvar prepared = html.replace(/{{([^@%][\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = escapeEscapedQuote(temp); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\r\n\t\t\ttemp = unescapeEscapedQuote(temp); // ToDo: Unescape\r\n\r\n\t\t\t// Unescape HTML\r\n\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\t// Evaluate\r\n\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\ttemp = temp.trim();\r\n\r\n\t\t\t\t// Simplicity similar\r\n\t\t\t\tvar exist = preParsed.indexOf(temp);\r\n\r\n\t\t\t\tif(exist === -1){\r\n\t\t\t\t\tpreParsed.push(temp);\r\n\t\t\t\t\tpreParsedReference.push({type:REF_DIRECT, data:[temp, _model_, _modelScope]});\r\n\t\t\t\t\treturn '{{%=' + (preParsed.length + lastParsedIndex - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn '{{%=' + (exist + lastParsedIndex);\r\n\t\t\t}\r\n\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(/(?!&#.*?;)[\\u00A0-\\u9999<>\\&]/gm, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\tpreParsed = variableList = _modelScope = _model_ = mask = scope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t}\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\t// Dynamic data parser\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope, runEval){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(passVar === null)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\t// Use strict mode and prepare for new variables\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\t// Declare new variable\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove var because no variable are being passed\r\n\t\t\t\tif(firstTime === true)\r\n\t\t\t\t\tstrDeclare = strDeclare.replace('var ', '');\r\n\r\n\t\t\t\t// Escape function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('&#40;').split(')').join('&#41;');\r\n\r\n\t\t\t\t// Pass to static data parser for another HTML data\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Build script preparation\r\n\t\thtml = html.replace(/{\\[([\\s\\S]*?)\\]}/g, function(full, matched){\r\n\t\t\tif(/{{.*?}}/.test(matched) === false)\r\n\t\t\t\treturn \"_result_ += '\"+matched.split(\"'\").join(\"\\\\'\")+\"'\";\r\n\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope)+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(runEval === '#noEval')\r\n\t\t\tvar preParsedReference = [];\r\n\r\n\t\tvar prepared = html.replace(/{{(@[\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = escapeEscapedQuote(temp); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\t\t\ttemp = unescapeEscapedQuote(temp); // ToDo: Unescape\r\n\r\n\t\t\t// Unescape HTML\r\n\t\t\ttemp = temp.split('&amp;').join('&').split('&lt;').join('<').split('&gt;').join('>');\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass_ = /(var|let)([\\w,\\s]+)(?=\\s(?==|in|of))/g;\r\n\t\t\tvar VarPass = [];\r\n\t\t\tvar s1 = null;\r\n\t\t\twhile((s1 = VarPass_.exec(temp)) !== null){\r\n\t\t\t\tVarPass.push(s1[2]);\r\n\t\t\t}\r\n\r\n\t\t\tif(_model_ === null && runEval === '#noEval')\r\n\t\t\t\tVarPass.push('_model_');\r\n\r\n\t\t\tif(VarPass.length !== 0){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/([\\n\\t\\r]|  )+/g, '').split(',').forEach(function(val){\r\n\t\t\t\t\t\tobtained.push(val);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':(typeof '+VarPass[i]+'!==\"undefined\"?'+VarPass[i]+':undefined)';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(VarPass.length === 0)\r\n\t\t\t\t\tVarPass = 'null';\r\n\t\t\t\telse VarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\t\t\telse temp = temp.split('&VarPass&').join('null');\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\r\n\t\t\t\t// {if, elseIf:([if, value], ...), elseValue}\r\n\t\t\t\tvar findElse = function(text){\r\n\t\t\t\t\ttext = text.join(':');\r\n\t\t\t\t\tvar else_ = null;\r\n\r\n\t\t\t\t\t// Get else value\r\n\t\t\t\t\tvar text = text.split('@else' + (text.indexOf(':') !== -1 ? ':' : ' :'));\r\n\t\t\t\t\tif(text.length === 2)\r\n\t\t\t\t\t\telse_ = text.pop();\r\n\t\t\t\t\telse text = text[0];\r\n\r\n\t\t\t\t\t// Split elseIf\r\n\t\t\t\t\ttext = text.split('@elseif ');\r\n\r\n\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t\tif:text.shift(),\r\n\t\t\t\t\t\telseIf:[],\r\n\t\t\t\t\t\telseValue:else_\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Separate condition script and value\r\n\t\t\t\t\tfor (var i = 0; i < text.length; i++) {\r\n\t\t\t\t\t\tvar val = text[i].split(':');\r\n\t\t\t\t\t\tobj.elseIf.push([val.shift(), val.join(':')]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tvar condition = check.shift();\r\n\t\t\t\t\tvar elseIf = findElse(check);\r\n\t\t\t\t\telseIf.type = REF_IF;\r\n\t\t\t\t\telseIf.data = [null, _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t\t// Trim Data\r\n\t\t\t\t\telseIf.if = [condition.trim(), elseIf.if.trim()];\r\n\t\t\t\t\tif(elseIf.elseValue !== null)\r\n\t\t\t\t\t\telseIf.elseValue = elseIf.elseValue.trim();\r\n\r\n\t\t\t\t\tfor (var i = 0; i < elseIf.elseIf.length; i++) {\r\n\t\t\t\t\t\telseIf.elseIf[i][0] = elseIf.elseIf[i][0].trim();\r\n\t\t\t\t\t\telseIf.elseIf[i][1] = elseIf.elseIf[i][1].trim();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Push data\r\n\t\t\t\t\tpreParsedReference.push(elseIf);\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scopes = [check[0], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(!localEval.apply(self.root, scopes)){\r\n\t\t\t\t\tcheck.shift();\r\n\t\t\t\t\treturn elseIfHandle(findElse(check), scopes);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcheck.shift();\r\n\t\t\t\tscopes[0] = check.join(':');\r\n\r\n\t\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length !== 1){\r\n\t\t\t\tvar scopes = [check[1], _model_, _modelScope, _content_];\r\n\r\n\t\t\t\tif(runEval === '#noEval'){\r\n\t\t\t\t\tpreParsedReference.push({type:REF_EXEC, data:scopes});\r\n\t\t\t\t\treturn '{{%%=' + (preParsedReference.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, scopes);\r\n\t\t\t\treturn temp;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\r\n\t\tif(runEval === '#noEval'){\r\n\t\t\t// Clear memory before return\r\n\t\t\t_modelScope = runEval = scopeMask = itemMask = html = null;\r\n\t\t\tsetTimeout(function(){prepared = null}, 1);\r\n\t\t\treturn [prepared, preParsedReference, _content_];\r\n\t\t}\r\n\r\n\t\treturn prepared;\r\n\t}\r\n\r\n\tvar bindArray = function(template, list, mask, modelName, propertyName, targetNode, parentNode, tempDOM){\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'swap', 'move', '$replace', 'softRefresh', 'hardRefresh'];\r\n\t\tvar refreshTimer = -1;\r\n\t\tvar parentChilds = parentNode.children;\r\n\r\n\t\t// Update callback\r\n\t\tvar callback = self.root[modelName]['on$'+propertyName];\r\n\r\n\t\tvar processElement = function(index, options, other, count){\r\n\t\t\tif(options === 'clear'){\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar spacer = [parentNode.firstElementChild, parentNode.lastElementChild];\r\n\r\n\t\t\t\tparentNode.textContent = '';\r\n\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tparentNode.appendChild(spacer[0]);\r\n\t\t\t\t\tparentNode.appendChild(spacer[1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Hard refresh\r\n\t\t\tif(options === 'hardRefresh'){\r\n\t\t\t\tvar item = list;\r\n\t\t\t\tfor (var i = index; i < item.length; i++) {\r\n\t\t\t\t\tvar temp = templateParser(template, item[i]);\r\n\t\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\t\tparentNode.insertBefore(temp, parentNode.lastElementChild);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tparentNode.appendChild(temp);\r\n\r\n\t\t\t\t\tsyntheticCache(temp, template, items[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(options === 'swap' || options === 'move'){\r\n\t\t\t\tvar ref = parentChilds;\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t\tother++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(options === 'move'){\r\n\t\t\t\t\tvar overflow = list.length - index - count;\r\n\t\t\t\t\tif(overflow < 0)\r\n\t\t\t\t\t\tcount += overflow;\r\n\r\n\t\t\t\t\t// Move to virtual DOM\r\n\t\t\t\t\tvar vDOM = document.createElement('div');\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tvDOM.appendChild(ref[index]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar nextSibling = ref[other] || null;\r\n\r\n\t\t\t\t\t// Move to defined index\r\n\t\t\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\t\t\tparentNode.insertBefore(vDOM.firstElementChild, nextSibling);\r\n\r\n\t\t\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\t\t\tcallback.update(\r\n\t\t\t\t\t\t\t\t(nextSibling !== null && nextSibling.previousElementSibling)\r\n\t\t\t\t\t\t\t\t|| parentNode.lastElementChild, 'move');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(index >= other){\r\n\t\t\t\t\tvar temp = index;\r\n\t\t\t\t\tindex = other;\r\n\t\t\t\t\tother = temp;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tref[index].insertAdjacentElement('afterEnd', ref[other]);\r\n\t\t\t\tref[other].insertAdjacentElement('afterEnd', ref[index]);\r\n\r\n\t\t\t\tif(callback !== undefined && callback.update){\r\n\t\t\t\t\tcallback.update(ref[other], 'swap');\r\n\t\t\t\t\tcallback.update(ref[index], 'swap');\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar exist = list.$virtual.elements();\r\n\r\n\t\t\t\tclearTimeout(refreshTimer);\r\n\t\t\t\trefreshTimer = setTimeout(function(){\r\n\t\t\t\t\tlist.$virtual.refresh(true);\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse exist = parentChilds;\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(options === 'remove'){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\texist[index].remove();\r\n\t\t\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(callback !== undefined && callback.remove){\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tsetTimeout(startRemove, 800);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse startRemove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update\r\n\t\t\telse if(options === 'update'){\r\n\t\t\t\tif(index === undefined){\r\n\t\t\t\t\tindex = 0;\r\n\t\t\t\t\tother = list.length;\r\n\t\t\t\t}\r\n\t\t\t\telse if(other === undefined) other = index + 1;\r\n\t\t\t\telse if(other < 0) other = list.length + other;\r\n\t\t\t\telse other += index;\r\n\r\n\t\t\t\t// Trim length\r\n\t\t\t\tvar overflow = list.length - other;\r\n\t\t\t\tif(overflow < 0) other = other + overflow;\r\n\r\n\t\t\t\tfor (var i = index; i < other; i++) {\r\n\t\t\t\t\tvar oldChild = exist[i];\r\n\t\t\t\t\tif(oldChild === undefined || list[i] === undefined)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tvar temp = templateParser(template, list[i]);\r\n\t\t\t\t\tsyntheticCache(temp, template, list[i]);\r\n\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\toldChild.parentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tparentNode.replaceChild(temp, oldChild);\r\n\t\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\t\tcallback.update(temp, 'replace');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar item = list[index];\r\n\t\t\tif(item === undefined) return;\r\n\r\n\t\t\tvar temp = templateParser(template, item);\r\n\t\t\tsyntheticCache(temp, template, item);\r\n\r\n\t\t\tvar referenceNode = exist[index];\r\n\r\n\t\t\t// Create\r\n\t\t\tif(options === 'insertAfter'){\r\n\t\t\t\tvar index = index !== 0 ? index - 1 : (exist.length - 1);\r\n\t\t\t\tvar referenceNode = exist[index];\r\n\r\n\t\t\t\tif(!referenceNode){\r\n\t\t\t\t\tif(!list.$virtual || list.length === 0){\r\n\t\t\t\t\t\tparentNode.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\t\tcallback.create(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treferenceNode.insertAdjacentElement('afterEnd', temp);\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\r\n\t\t\t\t// Refresh virtual scroll\r\n\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t}\r\n\t\t\telse if(options === 'append'){\r\n\t\t\t\tif(list.$virtual && list.length !== 0){\r\n\t\t\t\t\texist[index-1].insertAdjacentElement('afterEnd', temp);\r\n\t\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\t\tcallback.create(temp);\r\n\r\n\t\t\t\t\t// Refresh virtual scroll\r\n\t\t\t\t\tlist.$virtual.refresh();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparentNode.appendChild(temp);\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\t\t\t}\r\n\t\t\telse if(options === 'insertBefore'){\r\n\t\t\t\texist[0].insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t\tif(callback !== undefined && callback.create)\r\n\t\t\t\t\tcallback.create(temp);\r\n\r\n\t\t\t\t// Refresh virtual scroll\r\n\t\t\t\tif(list.$virtual) list.$virtual.refresh();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar _single_zero = [0]; // For arguments\r\n\t\tvar _double_zero = [0,0]; // For arguments\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = undefined;\r\n\t\t\t\t\tvar lastLength = this.length;\r\n\r\n\t\t\t\t\tif(name === 'move'){\r\n\t\t\t\t\t\tvar from = arguments[0];\r\n\t\t\t\t\t\tvar to = arguments[1];\r\n\t\t\t\t\t\tif(from === to) return;\r\n\t\t\t\t\t\tvar count = arguments[2] || 1;\r\n\t\t\t\t\t\tprocessElement(from, 'move', to, count);\r\n\r\n\t\t\t\t\t\tvar temp = Array.prototype.splice.apply(this, [from, count]);\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, [to, 0].concat(temp));\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(name === 'swap'){\r\n\t\t\t\t\t\tvar i = arguments[0];\r\n\t\t\t\t\t\tvar o = arguments[1];\r\n\t\t\t\t\t\tif(i === o) return;\r\n\t\t\t\t\t\tprocessElement(i, 'swap', o);\r\n\t\t\t\t\t\tvar temp = this[i];\r\n\t\t\t\t\t\tthis[i] = this[o];\r\n\t\t\t\t\t\tthis[o] = temp;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === '$replace'){\r\n\t\t\t\t\t\t// Check if appending\r\n\t\t\t\t\t\tif(arguments[0].length >= lastLength && lastLength !== 0){\r\n\t\t\t\t\t\t\tvar matchLeft = lastLength;\r\n\t\t\t\t\t\t\tvar ref = arguments[0];\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < lastLength; i++) {\r\n\t\t\t\t\t\t\t\tif(ref[i] === this[i]){\r\n\t\t\t\t\t\t\t\t\tmatchLeft--;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(matchLeft === 0){\r\n\t\t\t\t\t\t\t\tif(ref.length === lastLength) return;\r\n\r\n\t\t\t\t\t\t\t\tArray.prototype.splice.apply(this, [lastLength, 0].concat(arguments[0].slice(lastLength)));\r\n\t\t\t\t\t\t\t\tprocessElement(lastLength, 'hardRefresh');\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(lastLength !== 0){\r\n\t\t\t\t\t\t\tArray.prototype.splice.apply(this, _single_zero);\r\n\t\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, _double_zero.concat(arguments[0]));\r\n\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice' && arguments[0] === 0 && arguments[1] === undefined){\r\n\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\treturn Array.prototype.splice.apply(this, arguments);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(this.length, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'push')\r\n\t\t\t\t\t\tprocessElement(lastLength, 'append');\r\n\r\n\t\t\t\t\telse if(name === 'shift')\r\n\t\t\t\t\t\tprocessElement(0, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments[0] === 0 && arguments[1] === undefined)\r\n\t\t\t\t\t\t\treturn temp;\r\n\r\n\t\t\t\t\t\t// Removing data\r\n\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\tif(real < 0) real = lastLength + real;\r\n\r\n\t\t\t\t\t\tvar limit = arguments[1];\r\n\t\t\t\t\t\tif(!limit && limit !== 0) limit = this.length;\r\n\r\n\t\t\t\t\t\tfor (var i = limit - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tprocessElement(real + i, 'remove');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(arguments.length >= 3){ // Inserting data\r\n\t\t\t\t\t\t\tlimit = arguments.length - 2;\r\n\t\t\t\t\t\t\tfor (var i = 0; i < limit; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(real + i, 'insertAfter');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift')\r\n\t\t\t\t\t\tprocessElement(0, 'insertBefore');\r\n\r\n\t\t\t\t\telse if(name === 'softRefresh')\r\n\t\t\t\t\t\tprocessElement(arguments[0], 'update', arguments[1]);\r\n\r\n\t\t\t\t\telse if(name === 'hardRefresh')\r\n\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(parentNode && parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\tdelete list.$virtual;\r\n\t\t\tlist.$virtual = {};\r\n\r\n\t\t\t// Transfer virtual DOM\r\n\t\t\tlist.$virtual.dom = tempDOM;\r\n\r\n\t\t\tparentNode.replaceChild(template.html, parentChilds[1]);\r\n\t\t\tsf.internal.virtual_scroll.handle(list, targetNode, parentNode);\r\n\t\t\ttemplate.html.remove();\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\r\n\t\t// Todo: Enable auto item binding\r\n\t\tif(false && list.auto !== false){\r\n\t\t\t// for (var i = 0; i < list.length; i++) {\r\n\t\t\t// \tlist[i]\r\n\t\t\t// }\r\n\t\t}\r\n\r\n\t\thiddenProperty(list, 'refresh', function(index, length, property){\r\n\t\t\tif(index === undefined || index.constructor === String){\r\n\t\t\t\tproperty = index;\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tlength = list.length;\r\n\t\t\t}\r\n\t\t\telse if(length === undefined) length = index + 1;\r\n\t\t\telse if(length.constructor === String){\r\n\t\t\t\tproperty = length;\r\n\t\t\t\tlength = 1;\r\n\t\t\t}\r\n\t\t\telse if(length < 0) length = list.length + length;\r\n\t\t\telse length += index;\r\n\r\n\t\t\t// Trim length\r\n\t\t\tvar overflow = list.length - length;\r\n\t\t\tif(overflow < 0) length = length + overflow;\r\n\r\n\t\t\tfor (var i = index; i < length; i++) {\r\n\t\t\t\tvar elem = list.getElement(i);\r\n\r\n\t\t\t\tif(syntheticTemplate(elem, template, property, list[i]) === false)\r\n\t\t\t\t\tcontinue; // Continue if no update\r\n\r\n\t\t\t\tif(callback !== undefined && callback.update)\r\n\t\t\t\t\tcallback.update(elem, 'replace');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar virtualChilds = list.$virtual ? list.$virtual.dom.children : null;\r\n\t\thiddenProperty(list, 'getElement', function(index){\r\n\t\t\tif(virtualChilds !== null){\r\n\t\t\t\tif(index < list.$virtual.DOMCursor)\r\n\t\t\t\t\treturn virtualChilds[index];\r\n\r\n\t\t\t\tindex -= list.$virtual.DOMCursor;\r\n\t\t\t\tvar childElement = parentNode.childElementCount - 2;\r\n\t\t\t\tif(index <= childElement)\r\n\t\t\t\t\treturn parentChilds[index + 1];\r\n\r\n\t\t\t\treturn virtualChilds[index - childElement + list.$virtual.DOMCursor];\r\n\t\t\t}\r\n\r\n\t\t\treturn parentChilds[index];\r\n\t\t});\r\n\t}\r\n\r\n\tvar loopParser = function(name, template, script, targetNode, parentNode){\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\r\n\t\tif(!self.root[name])\r\n\t\t\treturn console.error(\"Can't parse element because model for '\"+name+\"' was not found\", template);\r\n\r\n\t\tvar items = self.root[name][method[1]];\r\n\t\tif(items === undefined){\r\n\t\t\tconsole.error(\"Can't bind array to `\"+method[1]+\"` because undefined property in model `\"+name+\"`\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttemplate.setAttribute('sf-bind-list', method[1]);\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = template;\r\n\t\ttemplate = self.extractPreprocess(template, mask, name);\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tvar tempDOM = document.createElement('div');\r\n\t\t\tvar modelRef = self.root[name];\r\n\t\t\t\r\n\t\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\t\tvar elem = templateParser(template, items[i]);\r\n\t\t\t\ttempDOM.appendChild(elem);\r\n\t\t\t\tsyntheticCache(elem, template, items[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// Enable element binding\r\n\t\t\tif(modelRef.sf$bindedKey === undefined)\r\n\t\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\t\tif(modelRef.sf$bindedKey[method[1]] === undefined)\r\n\t\t\t\tmodelRef.sf$bindedKey[method[1]] = null;\r\n\r\n\t\t\tObject.defineProperty(modelRef, method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tif(val.length === 0)\r\n\t\t\t\t\t\treturn items.splice(0);\r\n\t\t\t\t\treturn items.$replace(val);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tbindArray(template, items, mask, name, method[1], targetNode, parentNode, tempDOM);\r\n\r\n\t\t\t// Output to real DOM if not being used for virtual list\r\n\t\t\tif(items.$virtual === undefined){\r\n\t\t\t\tvar children = tempDOM.children;\r\n\t\t\t\tfor (var i = 0; i < children.length; i++) {\r\n\t\t\t\t\tparentNode.appendChild(children[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttempDOM.remove();\r\n\t\t\t\ttempDOM = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar inputBoundFunction = function(e){\r\n\t\tself.root[e.target['sf-model']][e.target['sf-bounded']] = e.target.value;\r\n\t};\r\n\r\n\tvar bindInput = function(targetNode){\r\n\t\tvar temp = $('input[sf-bound]', targetNode);\r\n\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar model = sf.controller.modelName(element);\r\n\t\t\tif(!model) return;\r\n\r\n\t\t\tvar whichVar = element.getAttribute('sf-bound');\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(typeof self.root[model][whichVar] === undefined){\r\n\t\t\t\tconsole.error('Cannot get reference for self.root[\"' + model + '\"][\"' + whichVar+'\"]');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement['sf-bounded'] = whichVar;\r\n\t\t\telement['sf-model'] = model;\r\n\t\t\telement.setAttribute('sf-bounded', '');\r\n\t\t\telement.removeAttribute('sf-bound');\r\n\r\n\t\t\t// Bound value change\r\n\t\t\tif(element.tagName === 'INPUT' || element.tagName === 'TEXTAREA')\r\n\t\t\t\t$.on(element, 'keyup', inputBoundFunction);\r\n\r\n\t\t\telse\r\n\t\t\t\t$.on(element, 'change', inputBoundFunction);\r\n\t\t}\r\n\t}\r\n\r\n\tvar alreadyInitialized = false;\r\n\tself.init = function(targetNode, queued){\r\n\t\tif(alreadyInitialized && !targetNode) return;\r\n\t\talreadyInitialized = true;\r\n\t\tsetTimeout(function(){\r\n\t\t\talreadyInitialized = false;\r\n\t\t}, 50);\r\n\r\n\t\tif(!targetNode) targetNode = document.body;\r\n\t\tself.parsePreprocess(queued || self.queuePreprocess(targetNode), queued);\r\n\t\tbindInput(targetNode);\r\n\r\n\t\tvar temp = $('[sf-repeat-this]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar parent = element.parentElement;\r\n\r\n\t\t\tif(queued !== undefined)\r\n\t\t\t\telement.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(element.parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\t\tvar ceiling = document.createElement(element.tagName);\r\n\t\t\t\tceiling.classList.add('virtual-spacer');\r\n\t\t\t\tvar floor = ceiling.cloneNode(true);\r\n\r\n\t\t\t\tceiling.classList.add('ceiling');\r\n\t\t\t\t//ceiling.style.transform = 'scaleY(0)';\r\n\t\t\t\telement.parentNode.insertAdjacentElement('afterBegin', ceiling); // prepend\r\n\r\n\t\t\t\tfloor.classList.add('floor');\r\n\t\t\t\t//floor.style.transform = 'scaleY(0)';\r\n\t\t\t\telement.parentNode.insertAdjacentElement('beforeEnd', floor); // append\r\n\r\n\t\t\t\t// His total scrollHeight\r\n\t\t\t\tvar styles = window.getComputedStyle(element);\r\n\t\t\t\tvar absHeight = parseFloat(styles['marginTop']) + parseFloat(styles['marginBottom']);\r\n\t\t\t\tstyles = null;\r\n\r\n\t\t\t\t// Element height + margin\r\n\t\t\t\tabsHeight = Math.ceil(element.offsetHeight + absHeight);\r\n\t\t\t}\r\n\r\n\t\t\tvar after = element.nextElementSibling;\r\n\t\t\tif(after === null || element === after)\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = element.previousElementSibling;\r\n\t\t\tif(before === null || element === before)\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = element.getAttribute('sf-repeat-this');\r\n\t\t\telement.removeAttribute('sf-repeat-this');\r\n\t\t\tvar controller = sf.controller.modelName(element);\r\n\r\n\t\t\t// Check if the element was already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(element.outerHTML))\r\n\t\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\t\tloopParser(controller, element, script, targetNode, element.parentNode);\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t}\r\n\r\n\t// Reset model properties\r\n\t// Don't call if the removed element is TEXT or #comment\r\n\tfunction DOMNodeRemoved(element){\r\n\t\tvar temp = $('[sf-controller]', element);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tremoveModelBinding(temp[i].getAttribute('sf-controller'));\r\n\t\t}\r\n\r\n\t\tif(element.hasAttribute('sf-controller') === false)\r\n\t\t\treturn;\r\n\r\n\t\tremoveModelBinding(element.getAttribute('sf-controller'));\r\n\t}\r\n\r\n\tsf(function(){\r\n\t\tvar everyRemovedNodes = function(nodes){\r\n\t\t\tvar tagName = nodes.nodeName;\r\n\t\t\tif(tagName === 'TEXT' || tagName === '#text' || tagName === '#comment') return;\r\n\r\n\t\t\tDOMNodeRemoved(nodes);\r\n\t\t}\r\n\r\n\t\tif(typeof MutationObserver === 'function' && MutationObserver.prototype.observe){\r\n\t\t\tvar everyRecords = function(record){\r\n\t\t\t\trecord.removedNodes.forEach(everyRemovedNodes);\r\n\t\t\t}\r\n\r\n\t\t\tvar observer = new MutationObserver(function(records){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\trecords.forEach(everyRecords);\r\n\t\t\t});\r\n\r\n\t\t\tobserver.observe(document.body, { childList: true, subtree: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.body.addEventListener('DOMNodeRemoved', function(e){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\teveryRemovedNodes(e.target);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tvar removeModelBinding = function(modelName){\r\n\t\tvar ref = self.root[modelName];\r\n\t\tif(ref === undefined)\r\n\t\t\treturn;\r\n\r\n\t\tvar bindedKey = ref.sf$bindedKey;\r\n\t\tvar temp = null;\r\n\t\tfor(var key in bindedKey){\r\n\t\t\tdelete bindedKey[key];\r\n\r\n\t\t\tif(ref[key] === undefined || ref[key] === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(ref[key].constructor === String ||\r\n\t\t\t\tref[key].constructor === Number ||\r\n\t\t\t\tref[key].constructor === Boolean\r\n\t\t\t){/* Ok */}\r\n\r\n\t\t\telse if(ref[key].constructor === Array){\r\n\t\t\t\tif(ref[key].$virtual){\r\n\t\t\t\t\tref[key].$virtual.destroy();\r\n\t\t\t\t\tdelete ref[key].$virtual;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset property without copying the array\r\n\t\t\t\ttemp = ref[key].splice('obtain');\r\n\t\t\t\tdelete ref[key];\r\n\t\t\t\tref[key] = temp;\r\n\t\t\t}\r\n\t\t\telse continue;\r\n\r\n\t\t\tif(Object.getOwnPropertyDescriptor(ref, key) === undefined)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Reconfigure / Remove property descriptor\r\n\t\t\tvar temp = ref[key];\r\n\t\t\tdelete ref[key];\r\n\t\t\tref[key] = temp;\r\n\t\t}\r\n\t}\r\n\r\n\tvar dcBracket = /{{[\\s\\S]*?}}/;\r\n\tvar bindObject = function(element, modelRef, propertyName, which){\r\n\t\tif(!(element instanceof Node))\r\n\t\t\telement = element[0];\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = element;\r\n\r\n\t\t// First initialization\r\n\t\telement.setAttribute('sf-bind-key', propertyName);\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\r\n\t\t// Cache attribute content\r\n\t\tif(which === 'attr' || !which){\r\n\t\t\tvar attrs = {};\r\n\r\n\t\t\tfor (var i = 0; i < element.attributes.length; i++) {\r\n\t\t\t\tvar attr = element.attributes[i].name;\r\n\r\n\t\t\t\t// Check if it has a bracket\r\n\t\t\t\tif(dcBracket.test(element.getAttribute(attr)) === false)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tattrs[attr] = element.getAttribute(attr);\r\n\t\t\t\telement.removeAttribute(attr);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Cache html content\r\n\t\tif(which === 'html' || !which)\r\n\t\t\tvar htmlClone = element.cloneNode(true).innerHTML;\r\n\r\n\t\tvar onChanges = function(){\r\n\t\t\tif(which === 'attr' || !which){\r\n\t\t\t\tfor(var name in attrs){\r\n\t\t\t\t\tif(attrs[name].indexOf(propertyName) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tvar temp = dataParser(attrs[name], modelRef, false, modelName);\r\n\t\t\t\t\tif(name === 'value')\r\n\t\t\t\t\t\telement.value = temp;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\telement.setAttribute(name, temp);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(which === 'html' || !which){\r\n\t\t\t\tvar temp = uniqueDataParser(htmlClone, modelRef, false, modelName);\r\n\t\t\t\ttemp = dataParser(temp, modelRef, false, modelName);\r\n\t\t\t\telement.textContent = '';\r\n\t\t\t\telement.insertAdjacentHTML('afterBegin', temp);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif(modelRef[propertyName] === undefined)\r\n\t\t\tthrow \"Property '\"+propertyName+\"' was not found on '\"+modelName+\"' model\";\r\n\r\n\t\t// Enable multiple element binding\r\n\t\tif(modelRef.sf$bindedKey === undefined)\r\n\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\tif(modelRef.sf$bindedKey[propertyName] !== undefined){\r\n\t\t\tmodelRef.sf$bindedKey[propertyName].push(onChanges);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar objValue = modelRef[propertyName]; // Object value\r\n\t\tObject.defineProperty(modelRef, propertyName, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\t\t\tget:function(){\r\n\t\t\t\treturn objValue;\r\n\t\t\t},\r\n\t\t\tset:function(val){\r\n\t\t\t\tobjValue = val;\r\n\r\n\t\t\t\tvar ref = modelRef.sf$bindedKey[propertyName];\r\n\t\t\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\t\t\tref[i]();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn objValue;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tmodelRef.sf$bindedKey[propertyName] = [onChanges];\r\n\t}\r\n\r\n\tself.bindElement = function(element, which){\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar html = element.outerHTML;\r\n\r\n\t\t// Check if the child element was already bound to prevent vulnerability\r\n\t\tif(/sf-bind-key|sf-bind-list/.test(html)){\r\n\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(which === 'attr')\r\n\t\t\thtml = html.replace(element.innerHTML, '');\r\n\r\n\t\tvar brackets = /{{([\\s\\S]*?)}}/g;\r\n\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(model);\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(model[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\t\tvar s1, s2 = null;\r\n\t\twhile((s1 = brackets.exec(html)) !== null){\r\n\t\t\twhile ((s2 = scopeMask.exec(s1[1])) !== null) {\r\n\t\t\t\tbindObject(element, model, s2[1], which);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.extractPreprocess = function(targetNode, mask, name){\r\n\t\tvar copy = targetNode.outerHTML;\r\n\r\n\t\t// Mask the referenced item\r\n\t\tcopy = copy.split('#'+mask).join('_model_');\r\n\r\n\t\t// Extract data to be parsed\r\n\t\tcopy = uniqueDataParser(copy, null, mask, name, '#noEval');\r\n\t\tvar preParsed = copy[1];\r\n\t\tvar _content_ = copy[2];\r\n\t\tcopy = dataParser(copy[0], null, mask, name, '#noEval', preParsed);\r\n\r\n\t\tfunction findModelProperty(){\r\n\t\t\tvar extract = RegExp('\\\\b(?:_model_|'+mask+')\\\\.([a-zA-Z0-9.[\\'\\\\]]+)(?:$|[^\\'\\\\]])', 'g');\r\n\t\t\tvar found = {};\r\n\r\n\t\t\tfor (var i = 0; i < preParsed.length; i++) {\r\n\t\t\t\tvar current = preParsed[i];\r\n\r\n\t\t\t\t// Text or attribute\r\n\t\t\t\tif(current.type === 0){\r\n\t\t\t\t\tcurrent.data[0].split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(found[match] === undefined) found[match] = [i];\r\n\t\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Dynamic data\r\n\t\t\t\tif(current.type === 1){\r\n\t\t\t\t\tvar checkList = current.if.join(';');\r\n\r\n\t\t\t\t\tif(current.elseValue !== null)\r\n\t\t\t\t\t\tcheckList += ';' + current.elseValue;\r\n\r\n\t\t\t\t\tfor (var a = 0; a < current.elseIf.length; a++) {\r\n\t\t\t\t\t\tcheckList += current.elseIf[a].join(';');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(current.type === 2)\r\n\t\t\t\t\tvar checkList = current.data[0];\r\n\r\n\t\t\t\tcheckList = checkList.replace(/_result_ \\+= _content_\\.take\\(.*?, ([0-9]+)\\);/g, function(full, match){\r\n\t\t\t\t\treturn _content_[match];\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcheckList.split('\"').join(\"'\").replace(extract, function(full, match){\r\n\t\t\t\t\tmatch = match.replace(/\\['(.*?)'\\]/g, function(full_, match_){\r\n\t\t\t\t\t\treturn '.'+match_;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(found[match] === undefined) found[match] = [i];\r\n\t\t\t\t\telse if(found[match].indexOf(i) === -1)\r\n\t\t\t\t\t\tfound[match].push(i);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn found;\r\n\t\t}\r\n\r\n\t\t// Build element and start addressing\r\n\t\tcopy = $.parseElement(copy)[0];\r\n\t\tvar nodes = self.queuePreprocess(copy, true).reverse();\r\n\t\tvar addressed = [];\r\n\r\n\t\tfunction addressAttributes(currentNode){\r\n\t\t\tvar attrs = currentNode.attributes;\r\n\t\t\tvar keys = [];\r\n\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\tvar found = attrs[a].value.split('{{%=');\r\n\t\t\t\tif(found.length !== 1){\r\n\r\n\t\t\t\t\tvar key = {\r\n\t\t\t\t\t\tdirect: false,\r\n\t\t\t\t\t\tname:attrs[a].name\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif(found[0] === '' && found.length === 2)\r\n\t\t\t\t\t\tkey.direct = Number(found[1]) || false;\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tkey.parse_index = [];\r\n\t\t\t\t\t\tkey.parse_index.replace(/{{%=([0-9]+)/g, function(full, match){\r\n\t\t\t\t\t\t\tkey.parse_index.push(Number(match));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tkeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn keys;\r\n\t\t}\r\n\r\n\t\tvar currentElement = addressAttributes(copy);\r\n\t\tif(currentElement.length !== 0)\r\n\t\t\taddressed.push({\r\n\t\t\t\tnodeType:1,\r\n\t\t\t\taddress:[0],\r\n\t\t\t\tattributes:currentElement\r\n\t\t\t});\r\n\r\n\t\tfor (var i = 0; i < nodes.length; i++) {\r\n\t\t\tvar temp = {\r\n\t\t\t\tnodeType:nodes[i].nodeType\r\n\t\t\t};\r\n\r\n\t\t\tif(temp.nodeType === 1){ // Element\r\n\t\t\t\ttemp.attributes = addressAttributes(nodes[i]);\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\telse if(temp.nodeType === 3){ // Text node\r\n\t\t\t\tvar innerHTML = nodes[i].textContent;\r\n\t\t\t\ttemp.direct = false;\r\n\t\t\t\tvar indexes = [];\r\n\r\n\t\t\t\tinnerHTML.replace(/{{%%=([0-9]+)/gm, function(full, match){\r\n\t\t\t\t\tindexes.push(match);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Check for dynamic mode\r\n\t\t\t\tif(indexes.length !== 0){\r\n\t\t\t\t\tindexes = indexes.map(Number);\r\n\r\n\t\t\t\t\tinnerHTML = innerHTML.split(/{{%%=[0-9]+/gm);\r\n\t\t\t\t\tfor (var a = 0; a < innerHTML.length; a++) {\r\n\t\t\t\t\t\tinnerHTML[a] = trimIndentation(innerHTML[a]).trim();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodes[i].textContent = innerHTML.shift();\r\n\r\n\t\t\t\t\tvar parent = nodes[i].parentNode;\r\n\t\t\t\t\tvar nextSibling = nodes[i].nextSibling;\r\n\r\n\t\t\t\t\t// Dynamic boundary start\r\n\t\t\t\t\tvar addressStart = null;\r\n\t\t\t\t\tif(indexes.length !== 0 && nodes[i].textContent.length !== 0)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i], true);\r\n\t\t\t\t\telse if(nodes[i].previousSibling !== null)\r\n\t\t\t\t\t\taddressStart = $.getSelector(nodes[i].previousSibling, true);\r\n\r\n\t\t\t\t\t// Find boundary ends\r\n\t\t\t\t\tvar commentFlag = [];\r\n\t\t\t\t\tfor(var a = 0; a < indexes.length; a++){\r\n\t\t\t\t\t\tvar flag = document.createComment('');\r\n\t\t\t\t\t\tparent.insertBefore(flag, nextSibling);\r\n\t\t\t\t\t\tcommentFlag.push({\r\n\t\t\t\t\t\t\tnodeType:-1,\r\n\t\t\t\t\t\t\tparse_index:indexes[a],\r\n\t\t\t\t\t\t\tstartFlag:addressStart,\r\n\t\t\t\t\t\t\taddress:$.getSelector(flag, true)\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(innerHTML[a]){\r\n\t\t\t\t\t\t\tvar textNode = document.createTextNode(innerHTML[a]);\r\n\t\t\t\t\t\t\tparent.insertBefore(textNode, nextSibling);\r\n\r\n\t\t\t\t\t\t\t// Get new start flag\r\n\t\t\t\t\t\t\tif(a + 1 < indexes.length)\r\n\t\t\t\t\t\t\t\taddressStart = $.getSelector(textNode, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Merge boundary address\r\n\t\t\t\t\taddressed = addressed.concat(commentFlag);\r\n\t\t\t\t\tif(nodes[i].textContent === ''){\r\n\t\t\t\t\t\tnodes[i].remove();\r\n\t\t\t\t\t\tfor (var a = 0; a < commentFlag.length; a++) {\r\n\t\t\t\t\t\t\tvar ref = commentFlag[a].address;\r\n\t\t\t\t\t\t\tref[ref.length - 1]--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(nodes[i].textContent.search(/{{%=[0-9]+/) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if it's only model value\r\n\t\t\t\tinnerHTML = nodes[i].textContent.split('{{%=');\r\n\r\n\t\t\t\tif(innerHTML[0] === '' && innerHTML.length === 2)\r\n\t\t\t\t\ttemp.direct = Number(innerHTML[1]) || false;\r\n\t\t\t\ttemp.address = $.getSelector(nodes[i], true);\r\n\t\t\t}\r\n\r\n\t\t\taddressed.push(temp);\r\n\t\t}\r\n\r\n\t\tvar modelReference = findModelProperty();\r\n\t\tvar keys = Object.keys(modelReference);\r\n\t\tvar asArray = [];\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tasArray.push([keys[i], keys[i].split('.')]);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\thtml:copy,\r\n\t\t\tparse:preParsed,\r\n\t\t\taddresses:addressed,\r\n\t\t\tmodelReference:modelReference,\r\n\t\t\tmodelRef_array:asArray\r\n\t\t}\r\n\t}\r\n\r\n\tvar excludes = ['HTML','HEAD','STYLE','LINK','META','SCRIPT','OBJECT','IFRAME'];\r\n\tself.queuePreprocess = function(targetNode, extracting){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = childNodes.length - 1; i >= 0; i--) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\r\n\t\t\tif(extracting === undefined && excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\r\n\t\t\t\t// Skip element and it's childs that already bound to prevent vulnerability\r\n\t\t\t\tif(attrs['sf-bind-key'] || attrs['sf-repeat-this'] || attrs['sf-bind-list']) continue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tif(extracting === undefined)\r\n\t\t\t\t\t\t\tcurrentNode.setAttribute('sf-preprocess', 'attronly');\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = temp.concat(self.queuePreprocess(currentNode, extracting));\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tcurrentNode.textContent = currentNode.textContent;\r\n\r\n\t\t\t\tif(currentNode.textContent.length === 0){\r\n\t\t\t\t\tcurrentNode.remove();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tif(extracting === undefined){\r\n\t\t\t\t\t\tcurrentNode.parentNode.setAttribute('sf-preprocess', '');\r\n\r\n\t\t\t\t\t\t// Reset Siblings\r\n\t\t\t\t\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\t\t\t\t\ttemp[a].removeAttribute('sf-preprocess');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttemp.push(currentNode.parentNode);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn temp;\r\n\t}\r\n\r\n\tself.parsePreprocess = function(nodes, queued){\r\n\t\tfor (var a = 0; a < nodes.length; a++) {\r\n\t\t\t// Get reference for debugging\r\n\t\t\tvar current = processingElement = nodes[a];\r\n\r\n\t\t\tvar model = sf.controller.modelName(current);\r\n\t\t\tcurrent.removeAttribute('sf-preprocess');\r\n\r\n\t\t\tif(queued !== undefined)\r\n\t\t\t\tcurrent.classList.remove('sf-dom-queued');\r\n\r\n\t\t\tif(!self.root[model])\r\n\t\t\t\treturn console.error(\"Can't parse element because model for '\"+model+\"' was not found\", current);\r\n\r\n\t\t\tvar modelRef = self.root[model];\r\n\r\n\t\t\t// Double check if the child element already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(current.innerHTML)){\r\n\t\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\t\tconsole.log(processingElement.cloneNode(true));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(current.hasAttribute('sf-bind'))\r\n\t\t\t\tself.bindElement(current, current.getAttribute('sf-bind'));\r\n\r\n\t\t\t// Avoid editing the outerHTML because it will remove the bind\r\n\t\t\tvar temp = uniqueDataParser(current.innerHTML, self.root[model], false, model);\r\n\t\t\tcurrent.innerHTML = dataParser(temp, self.root[model], false, model);\r\n\r\n\t\t\tvar attrs = nodes[a].attributes;\r\n\t\t\tfor (var i = 0; i < attrs.length; i++) {\r\n\t\t\t\tif(attrs[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\tvar attr = attrs[i];\r\n\t\t\t\t\tattr.value = dataParser(attr.value, self.root[model], false, model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initBindingInformation(modelRef){\r\n\t\tif(modelRef.sf$bindedKey !== undefined)\r\n\t\t\treturn;\r\n\r\n\t\t// Element binding data\r\n\t\tObject.defineProperty(modelRef, 'sf$bindedKey', {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable:false,\r\n\t\t\twritable:true,\r\n\t\t\tvalue:{}\r\n\t\t});\r\n\t}\r\n})();","sf.router = new function(){\r\n\tvar self = this;\r\n\tself.loading = false;\r\n\tself.enabled = false;\r\n\tself.pauseRenderOnTransition = false;\r\n\tself.currentPage = [];\r\n\tvar initialized = false;\r\n\tvar lazyRouting = false;\r\n\tvar currentRouterURL = '';\r\n\r\n\t// Should be called if not using lazy page load\r\n\tself.init = function(targetNode){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init();\r\n\t\t\t});\r\n\r\n\t\t// Run 'before' event for new page view\r\n\t\tvar temp = $('[sf-controller], [sf-page]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tif(temp[i].getAttribute('sf-controller'))\r\n\t\t\t\tsf.controller.run(temp[i].getAttribute('sf-controller'));\r\n\t\t\t\r\n\t\t\tif(temp[i].getAttribute('sf-page')){\r\n\t\t\t\tvar name = temp[i].getAttribute('sf-page');\r\n\t\t\t\tbeforeEvent(name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinitialized = true;\r\n\t\tcurrentRouterURL = window.location.pathname;\r\n\t}\r\n\r\n\tfunction popstateListener(event) {\r\n\t\t// Don't continue if the last routing was error\r\n\t\tif(routingError){\r\n\t\t\troutingError = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\troutingBack = true;\r\n\t\tself.goto(window.location.pathname);\r\n\t}\r\n\r\n\tself.enable = function(status){\r\n\t\tif(status === undefined) status = true;\r\n\t\tif(self.enabled === status) return;\r\n\t\tself.enabled = status;\r\n\r\n\t\tif(status === true){\r\n\t\t\t// Create listener for link click\r\n\t\t\t$.on(document.body, 'click', 'a[href]', self.load);\r\n\r\n\t\t\t// Create listener when navigate backward\r\n\t\t\twindow.addEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$.off(document.body, 'click', 'a[href]', self.load);\r\n\t\t\twindow.removeEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t}\r\n\r\n\tvar before = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.before = function(name, func, index){\r\n\t\tif(!before[name])\r\n\t\t\tbefore[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(before[name].indexOf(func) === -1)\r\n\t\t\t\tbefore[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tbefore[name][index] = func;\r\n\t}\r\n\r\n\tvar after = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.after = function(name, func, index){\r\n\t\tif(!after[name])\r\n\t\t\tafter[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(after[name].indexOf(func) === -1)\r\n\t\t\t\tafter[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tafter[name][index] = func;\r\n\t}\r\n\r\n\tvar root_ = function(scope){\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.model.root[scope] = {};\r\n\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.controller.run(scope);\r\n\t\t\r\n\t\treturn sf.model.root[scope];\r\n\t}\r\n\r\n\t// Running 'before' new page going to be displayed\r\n\tvar beforeEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.push(name);\r\n\r\n\t\tif(before[name]){\r\n\t\t\tfor (var i = 0; i < before[name].length; i++) {\r\n\t\t\t\tbefore[name][i](root_);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Running 'after' old page going to be removed\r\n\tvar afterEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.splice(self.currentPage.indexOf(name), 1);\r\n\r\n\t\tif(after[name]){\r\n\t\t\tfor (var i = 0; i < after[name].length; i++) {\r\n\t\t\t\tafter[name][i](root_);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar onEvent = {\r\n\t\t'loading':[],\r\n\t\t'loaded':[],\r\n\t\t'special':[],\r\n\t\t'error':[]\r\n\t};\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\tself.lazyViewPoint = {};\r\n\t/*\r\n\t\t{\r\n\t\t\toldURlPattern:{\r\n\t\t\t\tnewURLPattern:'.viewPoint'\r\n\t\t\t}\r\n\t\t}\r\n\t*/\r\n\r\n\tself.load = function(ev){\r\n\t\tif(self.enabled !== true) return;\r\n\r\n\t\tvar elem = ev.target;\r\n\t\tif(!elem.href) return;\r\n\r\n\t\tif(!history.pushState || elem.hasAttribute('sf-router-ignore'))\r\n\t\t\treturn;\r\n\r\n\t\t// Make sure it's from current origin\r\n\t\tvar path = elem.href.replace(window.location.origin, '');\r\n\t\tif(path.indexOf('//') !== -1)\r\n\t\t\treturn;\r\n\r\n\t\tev.preventDefault()\r\n\t\treturn !self.goto(path);\r\n\t}\r\n\r\n\tvar RouterLoading = false;\r\n\tvar routingBack = false;\r\n\tvar routingError = false;\r\n\tself.goto = function(path, data, method){\r\n\t\tif(!method) method = 'GET';\r\n        else method = method.toUpperCase();\r\n\r\n\t\tif(!data) data = {};\r\n\r\n\t\tfor (var i = 0; i < onEvent['loading'].length; i++) {\r\n\t\t\tif(onEvent['loading'][i](path)) return;\r\n\t\t}\r\n\t\tvar oldPath = window.location.pathname;\r\n\t\tinitialized = false;\r\n\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\t\tRouterLoading = $.ajax({\r\n\t\t\turl:window.location.origin + path,\r\n\t\t\tmethod:method,\r\n            data:Object.assign(data, {\r\n                _scarlets:'.dynamic.'\r\n            }),\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\tif(initialized) return;\r\n\t\t\t\tlazyRouting = true;\r\n\r\n\t\t\t\t// Run 'loaded' event\r\n\t\t\t\tRouterLoading = false;\r\n\r\n\t\t\t\t// Find special data\r\n\t\t\t\tvar regex = RegExp('<!-- SF-Special:(.*?)-->'+sf.regex.avoidQuotes, 'gm');\r\n\t\t\t\tvar special = regex.exec(data);\r\n\t\t\t\tif(special && special.length !== 1){\r\n\t\t\t\t\tspecial = special[1].split('--|&>').join('-->');\r\n\t\t\t\t\tspecial = JSON.parse(special);\r\n\r\n\t\t\t\t\tif(!isEmptyObject(special)){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['special'].length; i++) {\r\n\t\t\t\t\t\t\tif(onEvent['special'][i](special)) return;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DOMReference = false;\r\n\t\t\t\tvar foundAction = function(ref){\r\n\t\t\t\t\tDOMReference = $.findOne(ref);\r\n\r\n\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\tvar last = $.findOne('[sf-page]', DOMReference);\r\n\t\t\t\t\tafterEvent(last ? last.getAttribute('sf-page') : '/');\r\n\r\n\t\t\t\t\t// Redefine title if exist\r\n\t\t\t\t\tif(special && special.title)\r\n\t\t\t\t\t\t$('head > title').innerHTML = special.title;\r\n\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tfor(var oldURL in self.lazyViewPoint){\r\n\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\tfor(var newURL in self.lazyViewPoint[oldURL]){\r\n\t\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\t\tfoundAction(self.lazyViewPoint[oldURL][newURL]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(found) break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When the view point was not found\r\n\t\t\t\tif(!found){\r\n\t\t\t\t\t// Use fallback if exist\r\n\t\t\t\t\tif(sf.router.lazyViewPoint[\"@default\"])\r\n\t\t\t\t\t\tfoundAction(sf.router.lazyViewPoint[\"@default\"]);\r\n\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\t\t\tonEvent['error'][i]('sf.router.lazyViewPoint[\"'+oldURL+'\"][\"'+newURL+'\"] was not found');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Run 'before' event for new page view\r\n\t\t\t\tif(!DOMReference) DOMReference = document.body;\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', 'none');\r\n\r\n\t\t\t\t// Let page script running first, then update the data binding\r\n\t\t\t\tDOMReference.innerHTML = data;\r\n\r\n\t\t\t\t// Parse the DOM data binding\r\n\t\t\t\tsf.model.init(DOMReference);\r\n\r\n\t\t\t\t// Init template to model binding\r\n\t\t\t\tvar temp = $('[sf-page]', DOMReference);\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tbeforeEvent(temp[i].getAttribute('sf-page'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', '');\r\n\r\n\t\t\t\trouterLoaded(currentRouterURL, path, DOMReference);\r\n\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tlazyRouting = false;\r\n\r\n\t\t\t\tcurrentRouterURL = path;\r\n\t\t\t\troutingError = false;\r\n\t\t\t},\r\n\t\t\terror:function(xhr, data){\r\n\t\t\t\troutingError = true;\r\n\t\t\t\tif(xhr.aborted) return;\r\n\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\tonEvent['error'][i](xhr.status, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Back on error\r\n\t\t\t\twindow.history.back();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!routingBack)\r\n\t\t\twindow.history.pushState(null, \"\", path);\r\n\r\n\t\troutingBack = false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Trigger loaded event\r\n\tfunction routerLoaded(currentRouterURL, path, data){\r\n\t\tfor (var i = 0; i < onEvent['loaded'].length; i++) {\r\n\t\t\tonEvent['loaded'][i](currentRouterURL, path, data);\r\n\t\t}\r\n\t}\r\n};","sf.internal.virtual_scroll = new function(){\r\n\tvar self = this;\r\n\tvar styleInitialized = false;\r\n\tvar scrollingByScript = false;\r\n\r\n\t// before and after\r\n\tself.prepareCount = 4; // 4, 8, 12, 16, ...\r\n\r\n\tself.handle = function(list, targetNode, parentNode){\r\n\t\tif(!styleInitialized){\r\n\t\t\tinitStyles();\r\n\t\t\tstyleInitialized = true;\r\n\t\t}\r\n\r\n\t\tlist.$virtual.elements = function(){\r\n\t\t\treturn obtainElements(list, parentNode);\r\n\t\t}\r\n\r\n\t\tlist.$virtual.dCursor = { // DOM Cursor\r\n\t\t\tceiling:parentNode.querySelector('.virtual-spacer.ceiling'),\r\n\t\t\tfloor:parentNode.querySelector('.virtual-spacer.floor')\r\n\t\t};\r\n\r\n\t\tlist.$virtual.bounding = {\r\n\t\t\tceiling:-1,\r\n\t\t\tfloor:0\r\n\t\t}\r\n\r\n\t\tlist.$virtual.vCursor = { // Virtual Cursor\r\n\t\t\tceiling:null, // for forward direction\r\n\t\t\tfloor:null // for backward direction\r\n\t\t}\r\n\r\n\t\tlist.$virtual.targetNode = parentNode;\r\n\t\tlist.$virtual.DOMCursor = 0; // cursor of first element in DOM tree as a cursor\r\n\r\n\t\tlist.$virtual.scrollHeight = \r\n\t\t\tlist.$virtual.dCursor.floor.offsetTop - \r\n\t\t\tlist.$virtual.dCursor.ceiling.offsetTop;\r\n\r\n\t\tvar scroller = null;\r\n\t\tlist.$virtual.destroy = function(){\r\n\t\t\t$.off(scroller, 'scroll');\r\n\t\t\t$.off(parentNode, 'mousedown mouseup');\r\n\t\t\tlist.$virtual.dom.innerHTML = '';\r\n\t\t\toffElementResize(parentNode);\r\n\t\t\tdelete list.$virtual;\r\n\t\t}\r\n\r\n\t\tlist.$virtual.resetViewport = function(){\r\n\t\t\tlist.$virtual.visibleLength = Math.floor(scroller.clientHeight / list.$virtual.scrollHeight);\r\n\t\t\tlist.$virtual.preparedLength = list.$virtual.visibleLength + self.prepareCount * 2;\r\n\t\t}\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tscroller = parentNode;\r\n\r\n\t\t\tvar length = parentNode.getAttribute('scroll-parent-index') || 0;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tscroller = scroller.parentElement;\r\n\t\t\t}\r\n\r\n\t\t\tlist.$virtual.resetViewport();\r\n\r\n\t\t\tif(parentNode.classList.contains('sf-list-dynamic'))\r\n\t\t\t\tdynamicHeight(list, targetNode, parentNode, scroller);\r\n\t\t\telse\r\n\t\t\t\tstaticHeight(list, targetNode, parentNode, scroller);\r\n\t\t}, 500);\r\n\t}\r\n\r\n\t// Recommended for a list that have different element height\r\n\tfunction dynamicHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\t// Insert some element until reach visible height\r\n\t\tfillViewport();\r\n\r\n\t\tvirtual.visibleLength = parentNode.childElementCount - 2;\r\n\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\tvar temp = vCursor.floor;\r\n\t\t\tif(temp === null) break;\r\n\r\n\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t}\r\n\t\tvirtual.DOMCursor = 0;\r\n\r\n\t\tvar ceilingHeight = 0;\r\n\t\tvar floorHeight = 0;\r\n\t\tfunction previousCeiling(){\r\n\t\t\tvar temp = null;\r\n\t\t\tvar resetCeiling = false;\r\n\r\n\t\t\t// Add some element on the ceiling\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\ttemp = virtual.dom.lastElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.ceiling = temp.previousElementSibling;\r\n\t\t\t\tvirtual.DOMCursor--;\r\n\r\n\t\t\t\tceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tif(ceilingHeight > 0)\r\n\t\t\t\t\tceilingHeight -= getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(virtual.DOMCursor < self.prepareCount && !resetCeiling){\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\tresetCeiling = true;\r\n\t\t\t\t\ttemp = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(ceilingHeight < 0 || temp === null)\r\n\t\t\t\tceilingHeight = 0;\r\n\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\t// Remove some element on the floor\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = floor.previousElementSibling;\r\n\t\t\t\tfloorHeight += getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tvCursor.floor = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.floor === null)\r\n\t\t\t\tvCursor.ceiling = virtual.dom.lastElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tfunction fillViewport(){\r\n\t\t\t// Insert some element depend on prepared length\r\n\t\t\tvar length = virtual.preparedLength - (parentNode.childElementCount - 2);\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\ttemp = virtual.dom.firstElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction nextFloor(){\r\n\t\t\tvar temp = null;\r\n\t\t\tfillViewport();\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t// Add extra element based on prepare count\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\ttemp = vCursor.floor;\r\n\t\t\t\tif(temp === null) break;\r\n\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tif(floorHeight > 0)\r\n\t\t\t\t\tfloorHeight -= getAbsoluteHeight(temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(floorHeight < 0 || temp === null)\r\n\t\t\t\tfloorHeight = 0;\r\n\r\n\t\t\t// Remove some element on the ceiling\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\t\t\t\tceilingHeight += getAbsoluteHeight(temp);\r\n\t\t\t\tvirtual.DOMCursor++;\r\n\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\telse vCursor.ceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tvCursor.ceiling = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\t\trefreshScrollBounding(0, bounding, list, parentNode);\r\n\r\n\t\tvar updating = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript) return;\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tif(scroller.scrollTop < bounding.ceiling){\r\n\t\t\t\t// console.log('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tpreviousCeiling();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\telse if(scroller.scrollTop > bounding.floor){\r\n\t\t\t\t// console.log('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tnextFloor();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\t\tonElementResize(parentNode, function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t});\r\n\t}\r\n\r\n\t// Recommended for a list that have similar element height\r\n\tfunction staticHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\r\n\t\t// Insert visible element to dom tree\r\n\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\tif(virtual.dom.firstElementChild === null)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', virtual.dom.firstElementChild);\r\n\t\t}\r\n\r\n\t\tfunction refreshVirtualSpacer(cursor){\r\n\t\t\tif(cursor >= self.prepareCount){\r\n\t\t\t\tceiling.style.height = (cursor - self.prepareCount) * virtual.scrollHeight + 'px';\r\n\t\t\t\tfloor.style.height = (list.length - virtual.preparedLength - cursor) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tceiling.style.height = cursor * virtual.scrollHeight + 'px'; //'0px';\r\n\t\t\t\tvar count = (list.length - virtual.preparedLength);\r\n\t\t\t\tfloor.style.height = (count || 0) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\r\n\t\trefreshVirtualSpacer(0);\r\n\t\trefreshScrollBounding(self.prepareCount, bounding, list, parentNode);\r\n\t\tbounding.ceiling = -1;\r\n\r\n\t\tvirtual.offsetTo = function(index){\r\n\t\t\treturn index * virtual.scrollHeight + ceiling.offsetTop;\r\n\t\t}\r\n\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tvar fromCeiling = true;\r\n\t\tvar scrollFocused = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript || scroller.scrollTop >= bounding.ceiling && scroller.scrollTop <= bounding.floor){\r\n\t\t\t\t// Fix chrome scroll anchoring bugs when scrolling at corner\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tif(scroller.scrollTop === 0 || scroller.scrollTop === scroller.scrollHeight - scroller.clientHeight){\r\n\t\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar cursor = Math.floor(scroller.scrollTop / virtual.scrollHeight);\r\n\t\t\tif(cursor + virtual.preparedLength > list.length)\r\n\t\t\t\tcursor = list.length - virtual.preparedLength;\r\n\r\n\t\t\tif(fromCeiling){\r\n\t\t\t\tif(cursor < self.prepareCount*2)\r\n\t\t\t\t\tcursor -= self.prepareCount;\r\n\r\n\t\t\t\t// Fix chrome scroll anchoring bugs\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t}\r\n\t\t\t\tfromCeiling = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cursor < self.prepareCount){\r\n\t\t\t\tcursor = 0;\r\n\t\t\t\tfromCeiling = true;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tvar changes = cursor - virtual.DOMCursor;\r\n\t\t\tif(cursor + changes >= list.length)\r\n\t\t\t\tchanges = cursor + changes - list.length;\r\n\r\n\t\t\tif(changes === 0){ // This should be fixed to improve performance and future bugs\r\n\t\t\t\t//console.warn(\"No changes (The scroll bounding is not correct)\");\r\n\t\t\t\tupdating = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.DOMCursor = cursor;\r\n\r\n\t\t\t//console.log(cursor, changes);\r\n\r\n\t\t\t//console.log(cursor, changes, bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\t\t\tmoveElementCursor(changes, list);\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\t\t\trefreshScrollBounding(cursor, bounding, list, parentNode);\r\n\t\t\t//console.log('a', bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\r\n\t\t// For preventing scroll jump if scrolling over than viewport\r\n\t\tif(scroller === parentNode && navigator.userAgent.indexOf('Chrom') !== -1){\r\n\t\t\t$.on(parentNode, 'mousedown', function(){\r\n\t\t\t\tscrollFocused = true;\r\n\t\t\t});\r\n\t\t\t$.on(parentNode, 'mouseup', function(){\r\n\t\t\t\tscrollFocused = false;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction refreshScrollBounding(cursor, bounding, list, parentNode){\r\n\t\tvar temp = Math.floor(self.prepareCount / 2); // half of element preparation\r\n\t\tif(cursor < self.prepareCount){\r\n\t\t\tbounding.ceiling = -1;\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount * 2 + 1];\r\n\r\n\t\t\tif(bounding.floor !== undefined)\r\n\t\t\t\tbounding.floor = bounding.floor.offsetTop;\r\n\t\t\telse bounding.floor = parentNode.lastElementChild.offsetTop + 1000;\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if(parentNode.children[temp + 1] !== undefined)\r\n\t\t\t\tbounding.ceiling = parentNode.children[temp + 1].offsetTop; // -2 element\r\n\r\n\t\tif(list.$virtual.preparedLength !== undefined && cursor >= list.length - list.$virtual.preparedLength)\r\n\t\t\tbounding.floor = list.$virtual.dCursor.floor.offsetTop + list.$virtual.scrollHeight*2;\r\n\t\telse{\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount + 3].offsetTop; // +2 element\r\n\r\n\t\t\tif(parentNode.hasAttribute('scroll-reduce-floor')){\r\n\t\t\t\tbounding.floor -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t\tbounding.ceiling -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction moveElementCursor(changes, list){\r\n\t\tvar vDOM = list.$virtual.dom;\r\n\t\tvar vCursor = list.$virtual.vCursor;\r\n\t\tvar dCursor = list.$virtual.dCursor;\r\n\r\n\t\tif(changes > 0){ // forward\r\n\t\t\tvar ref = 0;\r\n\r\n\t\t\t// Select from virtual ceiling cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tref = vDOM.firstElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.ceiling.nextElementSibling;\r\n\t\t\t\tdCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the ceiling to vDom\r\n\t\t\tfor (var i = changes; i > 0; i--) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.ceiling === null){\r\n\t\t\t\t\tvCursor.ceiling = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('afterBegin', vCursor.ceiling);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t\t\tvCursor.ceiling = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\t\t}\r\n\t\telse if(changes < 0){ // backward\r\n\t\t\tvar ref = 0;\r\n\t\t\tchanges = -changes;\r\n\r\n\t\t\t// Select from virtual floor cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tref = vDOM.lastElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.floor.previousElementSibling;\r\n\t\t\t\tdCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the floor to vDom\r\n\t\t\tfor (var i = 0; i < changes; i++) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvCursor.floor = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('beforeEnd', vCursor.floor);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t\t\tvCursor.floor = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scrollTo(index, list, prepareCount, parentNode, scroller, refreshVirtualSpacer){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar reduce = 0;\r\n\r\n\t\tif(index >= list.length - virtual.preparedLength){\r\n\t\t\treduce -= prepareCount;\r\n\t\t\tindex = list.length - virtual.preparedLength;\r\n\t\t}\r\n\r\n\t\tif(index - virtual.DOMCursor === 0 || index >= list.length) return;\r\n\r\n\t\tscrollingByScript = true;\r\n\r\n\t\t// Already on DOM tree\r\n\t\tif((virtual.DOMCursor === 0 && index < prepareCount + prepareCount/2) ||\r\n\t\t\t(virtual.DOMCursor + prepareCount/2 > index\r\n\t\t\t&& virtual.DOMCursor + prepareCount < index))\r\n\t\t\tscroller.scrollTop = parentNode.children[index - virtual.DOMCursor + 1].offsetTop;\r\n\r\n\t\t// Move cursor\r\n\t\telse {\r\n\t\t\tvar temp = null;\r\n\t\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\t\tvar floor = virtual.dCursor.floor;\r\n\t\t\tvar vCursor = virtual.vCursor;\r\n\r\n\t\t\t// DOM tree to virtual DOM\r\n\t\t\tvar length = parentNode.childElementCount - 2;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\r\n\t\t\t\t\tif(i === length-1)\r\n\t\t\t\t\t\tvCursor.floor = temp;\r\n\t\t\t\t}\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(index >= prepareCount){\r\n\t\t\t\tif(index < list.length - virtual.preparedLength)\r\n\t\t\t\t\tindex -= prepareCount;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treduce = prepareCount - index;\r\n\t\t\t\tvirtual.DOMCursor = index = 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\r\n\t\t\t// Virtual DOM to DOM tree\r\n\t\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\t\ttemp = virtual.dom.children[index];\r\n\t\t\t\tif(temp === undefined) break;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t\tvirtual.DOMCursor = index;\r\n\r\n\t\t\tvCursor.floor = virtual.dom.children[index] || null;\r\n\t\t\tvCursor.ceiling = vCursor.floor ? vCursor.floor.previousElementSibling : null;\r\n\r\n\t\t\tif(refreshVirtualSpacer)\r\n\t\t\t\trefreshVirtualSpacer(index);\r\n\r\n\t\t\trefreshScrollBounding(index, virtual.bounding, list, parentNode);\r\n\r\n\t\t\ttemp = parentNode.children[prepareCount - reduce + 1];\r\n\t\r\n\t\t\tif(temp !== undefined)\r\n\t\t\t\tscroller.scrollTop = temp.offsetTop - scroller.offsetTop;\r\n\t\t}\r\n\r\n\t\tscrollingByScript = false;\r\n\t}\r\n\r\n\tfunction removeUserScrollFocus(parentNode){\r\n\t\tparentNode.style.overflow = 'hidden';\r\n\t\tsetTimeout(function(){\r\n\t\t\tparentNode.style.overflow = '';\r\n\t\t}, 50);\r\n\t}\r\n\r\n\tfunction getAbsoluteHeight(el){\r\n\t  var styles = window.getComputedStyle(el);\r\n\t  var margin = parseInt(styles['marginTop']) + parseInt(styles['marginBottom']);\r\n\t  return el.offsetHeight + margin || 0;\r\n\t}\r\n\r\n\tfunction obtainElements(list, parentNode){\r\n\t\tvar exist = [];\r\n\t\tvar temp = undefined;\r\n\r\n\t\tvar length = list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = parentNode.childElementCount - 2;\r\n\t\tfor (var i = 1; i <= length; i++) {\r\n\t\t\ttemp = parentNode.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = list.length - length - list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[list.$virtual.DOMCursor + i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\treturn exist;\r\n\t}\r\n\r\n\tfunction refresh(force, list, prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer){\r\n\t\tvar cursor = list.$virtual.DOMCursor;\r\n\t\tvar additionalScroll = 0;\r\n\r\n\t\t// Find nearest cursor for current view position\r\n\t\tif(force){\r\n\t\t\tvar i = -1;\r\n\t\t\tvar length = list.$virtual.preparedLength;\r\n\r\n\t\t\tdo{\r\n\t\t\t\ti++;\r\n\t\t\t} while(i < length && parentNode.children[i].offsetTop < scroller.scrollTop);\r\n\r\n\t\t\tcursor = cursor + i;\r\n\t\t\tif(cursor > 0) cursor -= 1;\r\n\r\n\t\t\tadditionalScroll = scroller.scrollTop - parentNode.children[i].offsetTop;\r\n\t\t}\r\n\r\n\t\t// Force move cursor if element in the DOM tree was overloaded\r\n\t\tif(force || parentNode.childElementCount - 2 > list.$virtual.preparedLength){\r\n\t\t\tlist.$virtual.DOMCursor = list.length;\r\n\t\t\tvar moveTo = cursor;\r\n\t\t\tif(!force)\r\n\t\t\t\tmoveTo = cursor <= prepareCount ? cursor : (cursor + prepareCount);\r\n\r\n\t\t\tscrollTo(moveTo,\r\n\t\t\t\tlist,\r\n\t\t\t\tprepareCount,\r\n\t\t\t\tparentNode,\r\n\t\t\t\tscroller,\r\n\t\t\t\trefreshVirtualSpacer\r\n\t\t\t);\r\n\r\n\t\t\tscroller.scrollTop += additionalScroll;\r\n\t\t}\r\n\r\n\t\tif(refreshVirtualSpacer)\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\r\n\t\tif(checkCursorPosition)\r\n\t\t\tcheckCursorPosition();\r\n\r\n\t\trefreshScrollBounding(cursor, list.$virtual.bounding, list, parentNode);\r\n\t}\r\n\r\n\tvar _onElementResize = [];\r\n\tvar _onElementResize_timer = -1;\r\n\tfunction onElementResize(parentNode, callback){\r\n\t\tif(_onElementResize_timer === -1){\r\n\t\t\t_onElementResize_timer = setInterval(function(){\r\n\t\t\t\tvar temp = null;\r\n\t\t\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\t\t\ttemp = _onElementResize[i];\r\n\r\n\t\t\t\t\t// Check resize\r\n\t\t\t\t\tif(temp.element.scrollHeight === temp.height\r\n\t\t\t\t\t\t|| temp.element.scrollWidth === temp.width)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t// Check if it's removed from DOM\r\n\t\t\t\t\tif(temp.element.parentElement === null){\r\n\t\t\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.callback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(_onElementResize.length === 0){\r\n\t\t\t\t\tclearInterval(_onElementResize_timer);\r\n\t\t\t\t\t_onElementResize_timer = -1;\r\n\t\t\t\t}\r\n\t\t\t}, 200);\r\n\t\t}\r\n\r\n\t\t_onElementResize.push({\r\n\t\t\telement:parentNode,\r\n\t\t\tcallback:callback,\r\n\t\t\theight:parentNode.scrollHeight,\r\n\t\t\twidth:parentNode.scrollWidth\r\n\t\t});\r\n\t}\r\n\r\n\tfunction offElementResize(parentNode){\r\n\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\tif(_onElementResize[i].element === parentNode)\r\n\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Interval will be cleared when the array is empty\r\n\t}\r\n\r\n\tfunction initStyles(){\r\n\t\tvar style = document.getElementById('sf-styles');\r\n\r\n\t\tif(!style){\r\n\t\t\tstyle = document.createElement('style');\r\n\t\t\tstyle.id = 'sf-styles';\r\n        \tdocument.head.appendChild(style);\r\n\t\t}\r\n\r\n\t\tstyle.sheet.insertRule(\r\n\t\t'.sf-virtual-list .virtual-spacer{'+\r\n            'visibility: hidden;'+\r\n            'position: relative;'+\r\n            'height: 1px;'+\r\n            'transform-origin: 0 0;'+\r\n            'width: 1px;'+\r\n            'margin: 0;'+\r\n            'padding: 0;'+\r\n            'background: none;'+\r\n            'border: none;'+\r\n            'box-shadow: none;'+\r\n         '}', style.sheet.cssRules.length);\r\n\t}\r\n};"]}