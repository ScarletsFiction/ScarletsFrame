{"version":3,"sources":["sf-a_init.js","sf-controller.js","sf-dom.js","sf-e-ajax.js","sf-z_end.js","sf-loader.js","sf-model.js","sf-router.js","sf-virtual_scroll.js"],"names":["global","factory","exports","module","sf","window","this","undefined","document","arguments","constructor","Function","loader","onFinish","apply","isEmptyObject","obj","key","internal","regex","getQuotes","avoidQuotes","strictVar","controller","self","pending","active","for","name","func","modelScope","element","model","modelName","bindedList","getAttribute","parentEl","$","parent","root","bindedListIndex","prevAll","length","hasAttribute","run","listenSFClick","e","target","script","_modelScope","modelKeys","scopeMask","RegExp","replace","full","matched","split","method","method_","eval","shift","join","pop","found","console","error","root_","scope","DOMWasLoaded","init","temp","body","i","addEventListener","on","capture","once","dom","selector","context","parseElement","String","querySelectorAll","findOne","querySelector","closest","matches","msMatchesSelector","parentElement","isNext","result","push","nextElementSibling","previousElementSibling","nextAll","event","callback","tempCallback","ev","off","events","ref","getEventListeners","removeEventListener","splice","animateCSS","animationName","duration","animationEnd","animation","OAnimation","MozAnimation","WebkitAnimation","t","style","webkitAnimationDuration","animationDuration","list","classList","add","remove","setTimeout","emptyDOM","div","createElement","ul","tbody","tr","table","select","html","tempDOM","indexOf","textContent","insertAdjacentHTML","children","firstElementChild","item","elements","documentElement","domReady","getSelector","childIndexes","untilElement","names","id","unshift","tagName","array","globals","jsonpRequests","Request","requestOptions","globalsNoCallbacks","Object","assign","forEach","callbackName","defaults","url","location","toString","data","async","cache","user","password","headers","xhrFields","statusCode","processData","dataType","contentType","timeout","options","fireCallback","globalCallbackValue","optionCallbackValue","_i","type","paramsPrefix","toUpperCase","stringData","serializeQuery","abortTimeout_1","callbackName_1","Date","now","callbackSplit","requestUrl","addVars","filter","el","script_1","onerror","clearTimeout","src","parentNode","removeChild","appendChild","xhr","XMLHttpRequest","requestParameters","open","xhrTimeout","postData","ArrayBuffer","Blob","Document","FormData","boundary","setRequestHeader","newData","JSON","stringify","keys","headerName","crossDomain","test","$2","host","onload","status","responseData","parseError","parse","responseText","err","responseType","response","onabort","abort","send","RequestShortcut","args","_a","success","params","prefix","value","Array","encodeURIComponent","get","concat","post","json","getJSON","postJSON","setup","ajax","loadedContent","totalContent","DOMReady","turnedOff","whenDOMReady","whenDOMLoaded","whenProgress","onProgress","f","removeAttribute","css","getElementsByTagName","js","s","head","warn","everythingLoaded","setInterval","readyState","clearInterval","router","prototype","setAttribute","bindingEnabled","processingElement","trimIndentation","text","indent","trim","bracketMatch","chackValidFunctionCall","allowedFunction","localEval","_model_","_content_","tempScript","preventExecution","check_","exec","log","innerHTML","_result_","_evaled_","index","currentElement","$virtual","DOMCursor","modelRef","dataParser","mask","runEval","variableList","itemMask","actual","slice","charCodeAt","uniqueDataParser","take","passVar","currentIndex","strDeclare","firstTime","check","scopes","VarPass_","VarPass","s1","obtained","val","bindArray","propertyName","targetNode","htmlParsedData","editProperty","refreshTimer","processElement","other","spacer","lastElementChild","insertAdjacentElement","exist","refresh","referenceNode","create","replaceChild","update","currentRemoved","startRemove","all","propertyProxy","subject","defineProperty","enumerable","configurable","lastLength","o","matchLeft","takeIndex","real","limit","contains","virtual_scroll","handle","childElement","childElementCount","compareObject","obj1","obj2","loopParser","template","returns","items","outerHTML","sf$bindedKey","initBindingInformation","set","$replace","inputBoundFunction","bindInput","whichVar","alreadyInitialized","DOMNodeRemoved","removeModelBinding","parsePreprocess","queuePreprocess","ceiling","floor","cloneNode","styles","getComputedStyle","absHeight","parseFloat","Math","ceil","offsetHeight","after","before","everyRemovedNodes","nodes","nodeName","MutationObserver","observe","everyRecords","record","removedNodes","records","childList","subtree","bindedKey","Number","Boolean","destroy","getOwnPropertyDescriptor","dcBracket","bindObject","which","Node","attrs","attributes","attr","htmlClone","onChanges","objValue","bindElement","brackets","s2","excludes","writable","childNodes","currentNode","nodeType","a","nodeValue","loading","enabled","pauseRenderOnTransition","currentPage","initialized","currentRouterURL","popstateListener","routingError","routingBack","goto","pathname","beforeEvent","enable","load","onEvent","loaded","special","lazyViewPoint","elem","href","history","pushState","path","origin","preventDefault","RouterLoading","_scarlets","DOMReference","foundAction","last","afterEvent","title","oldURL","newURL","routerLoaded","aborted","back","styleInitialized","scrollingByScript","refreshScrollBounding","cursor","bounding","prepareCount","offsetTop","preparedLength","dCursor","scrollHeight","scrollTo","scroller","refreshVirtualSpacer","virtual","reduce","scrollTop","vCursor","insertCount","removeUserScrollFocus","overflow","getAbsoluteHeight","margin","parseInt","force","checkCursorPosition","additionalScroll","moveTo","getElementById","sheet","insertRule","initStyles","obtainElements","_onElementResize","offElementResize","resetViewport","visibleLength","clientHeight","fillViewport","ceilingHeight","floorHeight","updating","resetCeiling","height","previousCeiling","nextFloor","_onElementResize_timer","scrollWidth","width","onElementResize","dynamicHeight","count","offsetTo","fromCeiling","scrollFocused","changes","vDOM","moveElementCursor","navigator","userAgent","staticHeight"],"mappings":"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","file":"scarletsframe.min.js","sourcesContent":["(function(global, factory){\r\n  if(typeof exports === 'object' && typeof module !== 'undefined') module.exports = factory(global);\r\n  else global.sf = factory(global);\r\n}(typeof window !== \"undefined\" ? window : this, (function(window){'use strict';\r\nif(typeof document === undefined)\r\n\tdocument = window.document;\r\n// ===== Module Init =====\r\n\r\nvar sf = function(){\r\n\tif(arguments[0].constructor === Function){\r\n\t\treturn sf.loader.onFinish.apply(null, arguments);\r\n\t}\r\n};\r\n\r\nsf.internal = {};\r\nsf.regex = {\r\n\t// ToDo: Need help to skip escaped quote\r\n\tgetQuotes:/((?<![\\\\])['\"])((?:.(?!(?<![\\\\])\\1))*.?)\\1/gm,\r\n\tavoidQuotes:'(?=(?:[^\"\\']*(?:\\'|\")[^\"\\']*(?:\\'|\"))*[^\"\\']*$)',\r\n\tstrictVar:'(?=\\\\b[^.]|^|\\\\n| +|\\\\t|\\\\W )'\r\n};\r\n\r\nfunction isEmptyObject(obj){\r\n\tfor(var key in obj){\r\n\t\treturn false;\r\n\t}\r\n\treturn true\r\n}","// DOM Controller on loaded app\r\nsf.controller = new function(){\r\n\tvar self = this;\r\n\tself.pending = {};\r\n\tself.active = {};\r\n\r\n\tself.for = function(name, func){\r\n\t\tself.pending[name] = func;\r\n\t}\r\n\r\n\tself.modelScope = function(element, func){\r\n\t\tvar model = sf.controller.modelName(element);\r\n\r\n\t\tif(!model)\r\n\t\t\tthrow 'model or controller was not found';\r\n\r\n\t\tvar bindedList = element.getAttribute('sf-bind-list');\r\n\t\tif(!bindedList){\r\n\t\t\tvar parentEl = $.parent(element, '[sf-bind-list]');\r\n\t\t\tif(parentEl !== null)\r\n\t\t\t\tbindedList = parentEl.getAttribute('sf-bind-list');\r\n\t\t}\r\n\t\telse var parentEl = element;\r\n\r\n\t\tif(!bindedList){\r\n\t\t\tif(func) return func(sf.model.root[model], -1);\r\n\t\t\telse return sf.model.root[model];\r\n\t\t}\r\n\r\n\t\t// Find index\r\n\t\tvar bindedListIndex = 0;\r\n\t\tif(bindedList)\r\n\t\t\tbindedListIndex = $.prevAll(parentEl, '[sf-bind-list]').length;\r\n\r\n\t\tif(func) return func(sf.model.root[model][bindedList], bindedListIndex);\r\n\t\telse return sf.model.root[model][bindedList][bindedListIndex];\r\n\t}\r\n\r\n\tself.modelName = function(element){\r\n\t\tvar name = undefined;\r\n\t\tif(element.hasAttribute('sf-controller'))\r\n\t\t\tname = element.getAttribute('sf-controller');\r\n\t\telse\r\n\t\t\tname = $.parent(element, '[sf-controller]').getAttribute('sf-controller');\r\n\r\n\t\t// Initialize it first\r\n\t\tif(name !== undefined && !self.active[name])\r\n\t\t\tself.run(name);\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tvar listenSFClick = function(e){\r\n\t\tvar element = e.target;\r\n\t\tvar script = element.getAttribute('sf-click');\r\n\r\n\t\tif(!script){\r\n\t\t\telement = $.parent(element, '[sf-click]');\r\n\t\t\tscript = element.getAttribute('sf-click');\r\n\t\t}\r\n\r\n\t\tvar model = $.parent(element, '[sf-controller]').getAttribute('sf-controller');\r\n\r\n\t\tif(!sf.model.root[model])\r\n\t\t\tthrow \"Couldn't find model for \"+model+\" that was called from sf-click\";\r\n\r\n\t\tvar _modelScope = sf.model.root[model];\r\n\r\n\t\tvar modelKeys = sf.model.modelKeys(_modelScope);\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+modelKeys+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tscript = script.replace(scopeMask, function(full, matched){\r\n\t\t\treturn '_modelScope.'+matched;\r\n\t\t});\r\n\r\n\t\tscript = script.split('(');\r\n\r\n\t\tvar method = script[0];\r\n\t\tvar method_ = method;\r\n\r\n\t\t// Get method reference\r\n\t\ttry{\r\n\t\t\tmethod = eval(method);\r\n\t\t} catch(e) {\r\n\t\t\tmethod = false;\r\n\t\t}\r\n\r\n\t\tif(!method){\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + ' [Cannot find '+method_+']\\n', element[0]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Take the argument list\r\n\t\tscript.shift();\r\n\t\tscript = script.join('(');\r\n\t\tscript = script.split(')');\r\n\t\tscript.pop();\r\n\t\tscript = script.join('(');\r\n\r\n\t\t// Turn argument as array\r\n\t\tif(script.length !== 0){\r\n\t\t\t// Replace `this` to `element`\r\n\t\t\tscript = eval(('['+script+']').replace(/,this|\\[this/g, function(found){\r\n\t\t\t\treturn found[0] + 'element';\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif(!script)\r\n\t\t\tscript = [];\r\n\r\n\t\ttry{\r\n\t\t\tmethod.apply(element, script);\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(\"Error on sf-click for model: \" + model + '\\n', element[0], '\\n', e);\r\n\t\t}\r\n\t}\r\n\r\n\tvar root_ = function(scope){\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.model.root[scope] = {};\r\n\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.controller.run(scope);\r\n\r\n\t\treturn sf.model.root[scope];\r\n\t}\r\n\r\n\tself.run = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.run(name, func);\r\n\t\t\t});\r\n\r\n\t\tif(self.pending[name]){\r\n\t\t\tif(!sf.model.root[name])\r\n\t\t\t\tsf.model.root[name] = {};\r\n\r\n\t\t\tself.pending[name](sf.model.root[name], root_);\r\n\t\t\tself.active[name] = true;\r\n\t\t\tdelete self.pending[name];\r\n\t\t}\r\n\r\n\t\tif(func)\r\n\t\t\tfunc(sf.model.root[name], root_);\r\n\t}\r\n\r\n\tself.init = function(parent){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init(name);\r\n\t\t\t});\r\n\r\n\t\tvar temp = $('[sf-controller]', parent || document.body);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tself.run(temp[i].getAttribute('sf-controller'));\r\n\t\t}\r\n\t}\r\n\r\n\t// Create listener for sf-click\r\n\tdocument.addEventListener('DOMContentLoaded', function(){\r\n\t\t$.on(document.body, 'click', '[sf-click]', listenSFClick);\r\n\t}, {capture:true, once:true});\r\n}","sf.dom = function(selector, context){\r\n\tif(selector[0] === '<') return sf.dom.parseElement(selector);\r\n\tif(selector.constructor !== String) return selector;\r\n\r\n\tif(context) return context.querySelectorAll(selector);\r\n\treturn document.querySelectorAll(selector);\r\n}\r\n\r\nvar $ = sf.dom; // Shortcut\r\n\r\n;(function(){\r\n\tvar self = sf.dom;\r\n\r\n\tself.findOne = function(selector, context){\r\n\t\tif(context !== undefined) return context.querySelector(selector);\r\n\t\treturn document.querySelector(selector);\r\n\t}\r\n\r\n\tself.parent = function(element, selector){\r\n\t\tif(element.closest) return element.closest(selector);\r\n\t\tvar matches = 'matches';\r\n\r\n\t\tif(!element.matches)\r\n\t\t\tmatches = element.msMatchesSelector ? 'msMatchesSelector' : 'webkitMatchesSelector';\r\n\r\n\t\tdo {\r\n\t\t\tif(element[matches](selector) === true)\r\n\t\t\t\treturn element;\r\n\r\n\t\t\telement = element.parentElement;\r\n\t\t} while (element !== null);\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tself.prevAll = function(element, selector, isNext){\r\n\t\tvar matches = 'matches';\r\n\t\tvar result = [];\r\n\r\n\t\tif(!element.matches)\r\n\t\t\tmatches = element.msMatchesSelector ? 'msMatchesSelector' : 'webkitMatchesSelector';\r\n\r\n\t\tdo {\r\n\t\t\tif(element[matches](selector) === true)\r\n\t\t\t\tresult.push(element);\r\n\r\n\t\t\tif(isNext)\r\n\t\t\t\telement = element.nextElementSibling;\r\n\t\t\telse\r\n\t\t\t\telement = element.previousElementSibling;\r\n\t\t} while (element !== null);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.nextAll = function(element, selector){\r\n\t\treturn self.prevAll(element, selector, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen to an event\r\n\t * @param  Node \t\t\telement \tparent element\r\n\t * @param  string \t\t\tevent   \tevent name\r\n\t * @param  function|string  selector    callback function or selector\r\n\t * @param  function\t\t\tcallback    callback function\r\n\t * @param  boolean\t\t\tonce    \tcall once\r\n\t * @return null\r\n\t */\r\n\tself.on = function(element, event, selector, callback, once){\r\n\t\tif(typeof element === 'string'){\r\n\t\t\telement = document;\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = event;\r\n\t\t\tevent = element;\r\n\t\t}\r\n\r\n\t\tif(typeof selector === 'function'){\r\n\t\t\tcallback = selector;\r\n\t\t\tselector = null;\r\n\t\t}\r\n\r\n\t\tif(selector){\r\n\t\t\tvar tempCallback = callback;\r\n\t\t\tcallback = function(ev){\r\n\t\t\t\tif(self.parent(ev.target, selector) !== null)\r\n\t\t\t\t\ttempCallback(ev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcallback.selector = selector;\r\n\t\telement.addEventListener(event, callback, {capture:true, once:once === true});\r\n\t}\r\n\r\n\t// Shorcut\r\n\tself.once = function(element, event, selector, callback){\r\n\t\tself.on(element, event, selector, callback, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event listener\r\n\t * @param  Node \telement \tparent element\r\n\t * @param  string \tevent   \tevent name\r\n\t * @param  string  \tselector    selector\r\n\t * @return null\r\n\t */\r\n\tself.off = function(element, event, selector){\r\n\t\t// Remove all event\r\n\t\tif(event === undefined){\r\n\t\t\tvar events = getEventListeners(element);\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar events = event.split(' ');\r\n\t\tif(events.length !== 0){\r\n\t\t\tfor (var i = 0; i < events.length; i++) {\r\n\t\t\t\tself.off(element, events[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove listener\r\n\t\tvar ref = getEventListeners(element);\r\n\t\tif(ref !== undefined && ref[event] !== undefined){\r\n\t\t\tfor (var i = ref[event].length - 1; i >= 0; i--) {\r\n\t\t\t\tif(selector && ref[event][i].selector !== selector)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\telement.removeEventListener(event, ref[event].splice(i, 1), true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tself.animateCSS = function(element, animationName, callback, duration) {\r\n\t\tvar animationEnd = {\r\n\t\t\tanimation: 'animationend',\r\n\t\t\tOAnimation: 'oAnimationEnd',\r\n\t\t\tMozAnimation: 'mozAnimationEnd',\r\n\t\t\tWebkitAnimation: 'webkitAnimationEnd',\r\n\t\t};\r\n\r\n\t\tfor (var t in animationEnd){\r\n\t\t\tif(element.style[t] !== undefined){\r\n\t\t\t\tanimationEnd = animationEnd[t];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(duration){\r\n\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t}\r\n\r\n\t\tvar list = ('animated ' + animationName).split(' ');\r\n\t\telement.classList.add.apply(element.classList, list);\r\n\t\t$.once(element, animationEnd, function(){\r\n\t\t\telement.classList.remove.apply(element.classList, list);\r\n\t\t\t\r\n\t\t\tif(duration) setTimeout(function(){\r\n\t\t\t\telement.style.webkitAnimationDuration = duration+'s';\r\n\t\t\t\telement.style.animationDuration = duration+'s';\r\n\t\t\t}, 1);\r\n\r\n\t\t\tif(typeof callback === 'function') callback();\r\n\t\t});\r\n\t}\r\n\r\n\tvar emptyDOM = {\r\n\t\tdiv:document.createElement('div'),\r\n\t\tul:document.createElement('ul'),\r\n\t\ttbody:document.createElement('tbody'),\r\n\t\ttr:document.createElement('tr'),\r\n\t\ttable:document.createElement('table'),\r\n\t\tselect:document.createElement('select'),\r\n\t};\r\n\tself.parseElement = function(html){\r\n\t\tvar result = null;\r\n\t\tvar tempDOM = emptyDOM.div;\r\n\r\n        if(html.indexOf('<li') === 0) tempDOM = emptyDOM.ul;\r\n        if(html.indexOf('<tr') === 0) tempDOM = emptyDOM.tbody;\r\n        if(html.indexOf('<td') === 0 || html.indexOf('<th') === 0) tempDOM = emptyDOM.tr;\r\n        if(html.indexOf('<tbody') === 0) tempDOM = emptyDOM.table;\r\n        if(html.indexOf('<option') === 0) tempDOM = emptyDOM.select;\r\n\r\n\t\ttempDOM.textContent = '';\r\n\t\ttempDOM.insertAdjacentHTML('afterBegin', html);\r\n\r\n\t\tvar length = tempDOM.children.length;\r\n\t\tif(length === 1)\r\n\t\t\tresult = tempDOM.firstElementChild;\r\n\r\n\t\telse if(length !== 0){\r\n\t\t\tresult = [];\r\n\t\t\tvar ref = tempDOM.children;\r\n\t\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\t\tresult.push(ref.item(i));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tself.remove = function(elements){\r\n\t\tif(elements.remove !== undefined)\r\n\t\t\treturn elements.remove();\r\n\r\n\t\tfor (var i = 0; i < elements.length; i++) {\r\n\t\t\telements[i].remove();\r\n\t\t}\r\n\t}\r\n\r\n\tvar documentElement = null;\r\n\tsetTimeout(function(){\r\n\t\tsf.loader.domReady(function(){\r\n\t\t\tdocumentElement = document.body.parentElement;\r\n\t\t});\r\n\t}, 1);\r\n\r\n\tself.getSelector = function(element, childIndexes = false, untilElement = false){\r\n\t\tvar names = [];\r\n\t\tif(untilElement === false) untilElement = documentElement;\r\n\r\n\t\twhile(element.parentElement !== null){\r\n\t\t\tif(element.id){\r\n\t\t\t\tnames.unshift('#'+element.id);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(element === untilElement){\r\n\t\t\t\t\tif(childIndexes === false)\r\n\t\t\t\t\t\tnames.unshift(element.tagName);\r\n\t\t\t\t\telse names.unshift(0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar e = element;\r\n\t\t\t\t\tvar i = childIndexes ? 0 : 1;\r\n\r\n\t\t\t\t\twhile(e.previousElementSibling){\r\n\t\t\t\t\t\te = e.previousElementSibling;\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(childIndexes)\r\n\t\t\t\t\t\tnames.unshift(i);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tnames.unshift(\":nth-child(\"+i+\")\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\telement = element.parentElement;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(childIndexes)\r\n\t\t\treturn names;\r\n\t\treturn names.join(\" > \");\r\n\t}\r\n\r\n\tself.childIndexes = function(array, context){\r\n\t\tvar element = context || documentElement;\r\n\t\tvar i = 0;\r\n\r\n\t\tif(array[0].constructor === String){\r\n\t\t\telement = element.querySelector(array[0]);\r\n\t\t\ti = 1;\r\n\t\t}\r\n\r\n\t\tfor (i = i; i < array.length; i++) {\r\n\t\t\telement = element.children.item(array[i]);\r\n\r\n\t\t\tif(element === null)\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n})();","/*\r\n  Special Thanks to Vladimir Kharlampidi\r\n  https://github.com/nolimits4web/\r\n*/\r\n\r\nvar globals = {};\r\nvar jsonpRequests = 0;\r\nfunction Request(requestOptions) {\r\n    var globalsNoCallbacks = Object.assign({}, globals);\r\n    ('beforeCreate beforeOpen beforeSend error complete success statusCode').split(' ').forEach(function (callbackName) {\r\n        delete globalsNoCallbacks[callbackName];\r\n    });\r\n    var defaults = Object.assign({\r\n        url: window.location.toString(),\r\n        method: 'GET',\r\n        data: false,\r\n        async: true,\r\n        cache: true,\r\n        user: '',\r\n        password: '',\r\n        headers: {},\r\n        xhrFields: {},\r\n        statusCode: {},\r\n        processData: true,\r\n        dataType: 'text',\r\n        contentType: 'application/x-www-form-urlencoded',\r\n        timeout: 0,\r\n    }, globalsNoCallbacks);\r\n    var options = Object.assign({}, defaults, requestOptions);\r\n    var proceedRequest;\r\n    // Function to run XHR callbacks and events\r\n    function fireCallback(callbackName) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        /*\r\n          Callbacks:\r\n          beforeCreate (options),\r\n          beforeOpen (xhr, options),\r\n          beforeSend (xhr, options),\r\n          error (xhr, status),\r\n          complete (xhr, stautus),\r\n          success (response, status, xhr),\r\n          statusCode ()\r\n        */\r\n        var globalCallbackValue;\r\n        var optionCallbackValue;\r\n        if (globals[callbackName]) {\r\n            globalCallbackValue = globals[callbackName].apply(globals, data);\r\n        }\r\n        if (options[callbackName]) {\r\n            optionCallbackValue = options[callbackName].apply(options, data);\r\n        }\r\n        if (typeof globalCallbackValue !== 'boolean')\r\n            globalCallbackValue = true;\r\n        if (typeof optionCallbackValue !== 'boolean')\r\n            optionCallbackValue = true;\r\n        return (globalCallbackValue && optionCallbackValue);\r\n    }\r\n    // Before create callback\r\n    proceedRequest = fireCallback('beforeCreate', options);\r\n    if (proceedRequest === false)\r\n        return undefined;\r\n    // For jQuery guys\r\n    if (options.type)\r\n        options.method = options.type;\r\n    // Parameters Prefix\r\n    var paramsPrefix = options.url.indexOf('?') >= 0 ? '&' : '?';\r\n    // UC method\r\n    var method = options.method.toUpperCase();\r\n    // Data to modify GET URL\r\n    if ((method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') && options.data) {\r\n        var stringData = void 0;\r\n        if (typeof options.data === 'string') {\r\n            // Should be key=value string\r\n            if (options.data.indexOf('?') >= 0)\r\n                stringData = options.data.split('?')[1];\r\n            else\r\n                stringData = options.data;\r\n        }\r\n        else {\r\n            // Should be key=value object\r\n            stringData = serializeQuery(options.data);\r\n        }\r\n        if (stringData.length) {\r\n            options.url += paramsPrefix + stringData;\r\n            if (paramsPrefix === '?')\r\n                paramsPrefix = '&';\r\n        }\r\n    }\r\n    // JSONP\r\n    if (options.dataType === 'json' && options.url.indexOf('callback=') >= 0) {\r\n        var callbackName_1 = \"jsonp_\" + (Date.now() + ((jsonpRequests += 1)));\r\n        var abortTimeout_1;\r\n        var callbackSplit = options.url.split('callback=');\r\n        var requestUrl = callbackSplit[0] + \"callback=\" + callbackName_1;\r\n        if (callbackSplit[1].indexOf('&') >= 0) {\r\n            var addVars = callbackSplit[1].split('&').filter(function (el) { return el.indexOf('=') > 0; }).join('&');\r\n            if (addVars.length > 0)\r\n                requestUrl += \"&\" + addVars;\r\n        }\r\n        // Create script\r\n        var script_1 = document.createElement('script');\r\n        script_1.type = 'text/javascript';\r\n        script_1.onerror = function onerror() {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('error', null, 'scripterror');\r\n            fireCallback('complete', null, 'scripterror');\r\n        };\r\n        script_1.src = requestUrl;\r\n        // Handler\r\n        window[callbackName_1] = function jsonpCallback(data) {\r\n            clearTimeout(abortTimeout_1);\r\n            fireCallback('success', data);\r\n            script_1.parentNode.removeChild(script_1);\r\n            script_1 = null;\r\n            delete window[callbackName_1];\r\n        };\r\n        document.querySelector('head').appendChild(script_1);\r\n        if (options.timeout > 0) {\r\n            abortTimeout_1 = setTimeout(function () {\r\n                script_1.parentNode.removeChild(script_1);\r\n                script_1 = null;\r\n                fireCallback('error', null, 'timeout');\r\n            }, options.timeout);\r\n        }\r\n        return undefined;\r\n    }\r\n    // Cache for GET/HEAD requests\r\n    if (method === 'GET' || method === 'HEAD' || method === 'OPTIONS' || method === 'DELETE') {\r\n        if (options.cache === false) {\r\n            options.url += paramsPrefix + \"_nocache\" + Date.now();\r\n        }\r\n    }\r\n    // Create XHR\r\n    var xhr = new XMLHttpRequest();\r\n    // Save Request URL\r\n    xhr.requestUrl = options.url;\r\n    xhr.requestParameters = options;\r\n    // Before open callback\r\n    proceedRequest = fireCallback('beforeOpen', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Open XHR\r\n    xhr.open(method, options.url, options.async, options.user, options.password);\r\n    // Create POST Data\r\n    var postData = null;\r\n    if ((method === 'POST' || method === 'PUT' || method === 'PATCH') && options.data) {\r\n        if (options.processData) {\r\n            var postDataInstances = [ArrayBuffer, Blob, Document, FormData];\r\n            // Post Data\r\n            if (postDataInstances.indexOf(options.data.constructor) >= 0) {\r\n                postData = options.data;\r\n            }\r\n            else {\r\n                // POST Headers\r\n                var boundary = \"---------------------------\" + Date.now().toString(16);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    xhr.setRequestHeader('Content-Type', \"multipart/form-data; boundary=\" + boundary);\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader('Content-Type', options.contentType);\r\n                }\r\n                postData = '';\r\n                var data = serializeQuery(options.data);\r\n                if (options.contentType === 'multipart/form-data') {\r\n                    data = data.split('&');\r\n                    var newData = [];\r\n                    for (var i = 0; i < data.length; i += 1) {\r\n                        newData.push(\"Content-Disposition: form-data; name=\\\"\" + data[i].split('=')[0] + \"\\\"\\r\\n\\r\\n\" + data[i].split('=')[1] + \"\\r\\n\");\r\n                    }\r\n                    postData = \"--\" + boundary + \"\\r\\n\" + newData.join(\"--\" + boundary + \"\\r\\n\") + \"--\" + boundary + \"--\\r\\n\";\r\n                }\r\n                else if (options.contentType === 'application/json') {\r\n                    postData = JSON.stringify(options.data);\r\n                }\r\n                else {\r\n                    postData = data;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            postData = options.data;\r\n            xhr.setRequestHeader('Content-Type', options.contentType);\r\n        }\r\n    }\r\n    // Additional headers\r\n    if (options.headers) {\r\n        Object.keys(options.headers).forEach(function (headerName) {\r\n            xhr.setRequestHeader(headerName, options.headers[headerName]);\r\n        });\r\n    }\r\n    // Check for crossDomain\r\n    if (typeof options.crossDomain === 'undefined') {\r\n        // eslint-disable-next-line\r\n        options.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(options.url) && RegExp.$2 !== window.location.host;\r\n    }\r\n    if (!options.crossDomain) {\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    }\r\n    if (options.xhrFields) {\r\n        Object.assign(xhr, options.xhrFields);\r\n    }\r\n    var xhrTimeout;\r\n    // Handle XHR\r\n    xhr.onload = function onload() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 0) {\r\n            var responseData = void 0;\r\n            if (options.dataType === 'json') {\r\n                var parseError = void 0;\r\n                try {\r\n                    responseData = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (err) {\r\n                    parseError = true;\r\n                }\r\n                if (!parseError) {\r\n                    fireCallback('success', responseData, xhr.status, xhr);\r\n                }\r\n                else {\r\n                    fireCallback('error', xhr, 'parseerror');\r\n                }\r\n            }\r\n            else {\r\n                responseData = xhr.responseType === 'text' || xhr.responseType === '' ? xhr.responseText : xhr.response;\r\n                fireCallback('success', responseData, xhr.status, xhr);\r\n            }\r\n        }\r\n        else {\r\n            fireCallback('error', xhr, xhr.status);\r\n        }\r\n        if (options.statusCode) {\r\n            if (globals.statusCode && globals.statusCode[xhr.status])\r\n                globals.statusCode[xhr.status](xhr);\r\n            if (options.statusCode[xhr.status])\r\n                options.statusCode[xhr.status](xhr);\r\n        }\r\n        fireCallback('complete', xhr, xhr.status);\r\n    };\r\n    xhr.onerror = function onerror() {\r\n        if (xhrTimeout)\r\n            clearTimeout(xhrTimeout);\r\n        fireCallback('error', xhr, xhr.status);\r\n        fireCallback('complete', xhr, 'error');\r\n    };\r\n    // Timeout\r\n    if (options.timeout > 0) {\r\n        xhr.onabort = function onabort() {\r\n            if (xhrTimeout)\r\n                clearTimeout(xhrTimeout);\r\n        };\r\n        xhrTimeout = setTimeout(function () {\r\n            xhr.abort();\r\n            fireCallback('error', xhr, 'timeout');\r\n            fireCallback('complete', xhr, 'timeout');\r\n        }, options.timeout);\r\n    }\r\n    // Ajax start callback\r\n    proceedRequest = fireCallback('beforeSend', xhr, options);\r\n    if (proceedRequest === false)\r\n        return xhr;\r\n    // Send XHR\r\n    xhr.send(postData);\r\n    // Return XHR object\r\n    return xhr;\r\n}\r\nfunction RequestShortcut(method) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    var _a = [], url = _a[0], data = _a[1], success = _a[2], error = _a[3], dataType = _a[4];\r\n    if (typeof args[1] === 'function') {\r\n        url = args[0], success = args[1], error = args[2], dataType = args[3];\r\n    }\r\n    else {\r\n        url = args[0], data = args[1], success = args[2], error = args[3], dataType = args[4];\r\n    }\r\n    [success, error].forEach(function (callback) {\r\n        if (typeof callback === 'string') {\r\n            dataType = callback;\r\n            if (callback === success)\r\n                success = undefined;\r\n            else\r\n                error = undefined;\r\n        }\r\n    });\r\n    dataType = dataType || (method === 'json' || method === 'postJSON' ? 'json' : undefined);\r\n    var requestOptions = {\r\n        url: url,\r\n        method: method === 'post' || method === 'postJSON' ? 'POST' : 'GET',\r\n        data: data,\r\n        success: success,\r\n        error: error,\r\n        dataType: dataType,\r\n    };\r\n    if (method === 'postJSON') {\r\n        Object.assign(requestOptions, {\r\n            contentType: 'application/json',\r\n            processData: false,\r\n            crossDomain: true,\r\n            data: typeof data === 'string' ? data : JSON.stringify(data),\r\n        });\r\n    }\r\n    return Request(requestOptions);\r\n}\r\nObject.assign(Request, {\r\n    get: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['get'].concat(args));\r\n    },\r\n    post: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['post'].concat(args));\r\n    },\r\n    json: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    getJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['json'].concat(args));\r\n    },\r\n    postJSON: function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return RequestShortcut.apply(void 0, ['postJSON'].concat(args));\r\n    },\r\n});\r\nRequest.setup = function setup(options) {\r\n    if (options.type && !options.method) {\r\n        Object.assign(options, { method: options.type });\r\n    }\r\n    Object.assign(globals, options);\r\n};\r\nfunction serializeQuery(params, prefix) {\r\n    var key = Object.keys(params);\r\n    for (var i = 0; i < key.length; i++) {\r\n      var value = params[key[i]];\r\n      if (params.constructor === Array)\r\n          key[i] += prefix + \"[]\";\r\n      else if (params.constructor === Object)\r\n          key[i] = (prefix ? prefix + \"[\" + key[i] + \"]\" : key[i]);\r\n\r\n      if (typeof value === 'object')\r\n          key[i] = serializeQuery(value, key[i]);\r\n      else\r\n          key[i] = key[i] + \"=\" + encodeURIComponent(value);\r\n    }\r\n    return key.join('&');\r\n}\r\n$.ajax = sf.ajax = Request;","return sf;\r\n\r\n// ===== Module End =====\r\n})));","sf.loader = new function(){\r\n\tvar self = this;\r\n\tself.loadedContent = 0;\r\n\tself.totalContent = 0;\r\n\tself.DOMWasLoaded = false;\r\n\tself.DOMReady = false;\r\n\tself.turnedOff = false;\r\n\r\n\tvar whenDOMReady = [];\r\n\tvar whenDOMLoaded = [];\r\n\tvar whenProgress = [];\r\n\r\n\tself.off = function(){\r\n\t\tself.turnedOff = true;\r\n\t}\r\n\r\n\t// Make event listener\r\n\tself.onFinish = function(func){\r\n\t\tif(self.DOMWasLoaded) return func();\r\n\t\tif(whenDOMLoaded.indexOf(func) !== -1) return;\r\n\t\twhenDOMLoaded.push(func);\r\n\t}\r\n\tself.domReady = function(func){\r\n\t\tif(self.DOMReady) return func();\r\n\t\tif(whenDOMReady.indexOf(func) !== -1) return;\r\n\t\twhenDOMReady.push(func);\r\n\t}\r\n\tself.onProgress = function(func){\r\n\t\tif(self.DOMWasLoaded) return func(self.loadedContent, self.totalContent);\r\n\t\tif(whenProgress.indexOf(func) !== -1) return;\r\n\t\twhenProgress.push(func);\r\n\t}\r\n\r\n\tself.f = function(element){\r\n\t\tself.loadedContent++;\r\n\t\tfor (var i = 0; i < whenProgress.length; i++) {\r\n\t\t\twhenProgress[i](self.loadedContent, self.totalContent);\r\n\t\t}\r\n\t\tif(element && element.removeAttribute) element.removeAttribute('onload');\r\n\t}\r\n\r\n\tself.css = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('link[href*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tvar temp = '';\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\ttemp += '<link onload=\"sf.loader.f(this);\" rel=\"stylesheet\" href=\"'+list[i]+'\">';\r\n\t\t}\r\n\r\n\t\tself.domReady(function(){\r\n\t\t\tdocument.getElementsByTagName('body')[0].insertAdjacentHTML('beforeend', temp);\r\n\t\t});\r\n\t}\r\n\r\n\tself.js = function(list){\r\n\t\tif(self.DOMWasLoaded){\r\n\t\t\t// check if some list was loaded\r\n\t\t\tfor (var i = list.length - 1; i >= 0; i--) {\r\n\t\t\t\tif($('script[src*=\"'+list[i]+'\"]').length !== 0)\r\n\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tif(list.length === 0) return;\r\n\t\t}\r\n\t\tself.totalContent = self.totalContent + list.length;\r\n\t\tfor(var i = 0; i < list.length; i++){\r\n\t\t\tvar s = document.createElement('script');\r\n\t        s.type = \"text/javascript\";\r\n\t        s.async = true;\r\n\t        s.src = list[i];\r\n\t        s.addEventListener('load', sf.loader.f, false);\r\n\t        document.head.appendChild(s);\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(function(){\r\n\t\tif(self.totalContent === 0 && !self.turnedOff){\r\n\t\t\tself.loadedContent = self.totalContent = 1;\r\n\t\t\tconsole.warn(\"If you don't use content loader feature, please turn it off with `sf.loader.off()`\");\r\n\t\t}\r\n\t}, 10000);\r\n\tvar everythingLoaded = setInterval(function() {\r\n\tif (/loaded|complete/.test(document.readyState)) {\r\n\t\tif(self.DOMReady === false){\r\n\t\t\tself.DOMReady = true;\r\n\t\t\tfor (var i = 0; i < whenDOMReady.length; i++) {\r\n\t\t\t\ttry{\r\n\t\t\t\t\twhenDOMReady[i]();\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(self.loadedContent < self.totalContent || self.loadedContent === 0){\r\n\t\t\tif(!self.turnedOff)\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tclearInterval(everythingLoaded);\r\n\t\tself.DOMWasLoaded = true;\r\n\t\tfor (var i = 0; i < whenDOMLoaded.length; i++) {\r\n\t\t\ttry{\r\n\t\t\t\twhenDOMLoaded[i]();\r\n\t\t\t} catch(e){\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\twhenProgress.splice(0);\r\n\t\twhenDOMReady.splice(0);\r\n\t\twhenDOMLoaded.splice(0);\r\n\t\twhenProgress = whenDOMReady = whenDOMLoaded = null;\r\n\r\n\t\t// Last init\r\n\t\tsf.controller.init();\r\n\t\tsf.model.init();\r\n\t\tsf.router.init();\r\n\t}\r\n\t}, 100);\r\n};\r\nsf.prototype.constructor = sf.loader.onFinish;\r\n\r\n// Find images\r\nsf.loader.domReady(function(){\r\n\tvar temp = $('img:not(onload)[src]');\r\n\tfor (var i = 0; i < temp.length; i++) {\r\n\t\tsf.loader.totalContent++;\r\n\t\ttemp[i].setAttribute('onload', \"sf.loader.f(this)\");\r\n\t}\r\n}, 0);","// Data save and HTML content binding\r\nsf.model = function(scope){\r\n\tif(!sf.model.root[scope])\r\n\t\tsf.model.root[scope] = {};\r\n\r\n\tif(sf.controller.pending[scope])\r\n\t\tsf.controller.run(scope);\r\n\r\n\treturn sf.model.root[scope];\r\n};\r\n\r\n(function(){\r\n\tvar self = sf.model;\r\n\tvar bindingEnabled = false;\r\n\tself.root = {};\r\n\r\n\tvar processingElement = null;\r\n\r\n\tfunction trimIndentation(text){\r\n\t\tvar indent = text.split(\"\\n\", 3);\r\n\t\tif(indent[0][0] !== ' ' || indent[0][0] !== \"\\t\")\r\n\t\t\tindent = indent[1];\r\n\t\telse indent = indent[0];\r\n\r\n\t\tindent = indent.length - indent.trim().length;\r\n\t\tif(indent === 0) return text;\r\n\t\treturn text.replace(RegExp('^([\\\\t ]{'+indent+'})', 'gm'), '');\r\n\t}\r\n\r\n\tvar bracketMatch = RegExp('([\\\\w.]*?[\\\\S\\\\s])\\\\('+sf.regex.avoidQuotes, 'g');\r\n\tvar chackValidFunctionCall = /[a-zA-Z0-9 \\]\\$\\)]/;\r\n\tvar allowedFunction = [':', 'for', 'if', 'while', '_content_.take', 'console.log'];\r\n\tvar localEval = function(script, _model_, _modelScope, _content_){\r\n\t\t\"use strict\";\r\n\r\n\t\t// ==== Security check ====\r\n\t\tvar tempScript = script;\r\n\r\n\t\t// Remove quotes\r\n\t\ttempScript = tempScript.replace(sf.regex.getQuotes, '\"Quotes\"');\r\n\r\n\t\t// Prevent vulnerability by remove bracket to avoid a function call\r\n\t\tvar preventExecution = false;\r\n\t\tvar check_ = null;\r\n\t\twhile((check_ = bracketMatch.exec(tempScript)) !== null){\r\n\t\t\tcheck_[1] = check_[1].trim();\r\n\r\n\t\t\tif(allowedFunction.indexOf(check_[1]) === -1 &&\r\n\t\t\t\tcheck_[1].split('.')[0] !== '_modelScope' &&\r\n\t\t\t\tchackValidFunctionCall.test(check_[1][check_[1].length-1])\r\n\t\t\t){\r\n\t\t\t\tpreventExecution = check_[1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(preventExecution){\r\n\t\t\tconsole.error(\"Trying to executing unrecognized function (\"+preventExecution+\")\");\r\n\t\t\tconsole.log(trimIndentation(processingElement.innerHTML));\r\n\t\t\t//console.log(tempScript.replace(/_result_ \\+=.*?;/g, '{[ DOM ]}'));\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\t\t// ==== Security check ended ====\r\n\t\r\n\t\tvar _result_ = '';\r\n\t\ttry{\r\n\t\t\tif(/@return /.test(script) === true){\r\n\t\t\t\tvar _evaled_ = eval('(function(){'+script.split('@return ').join('return ')+'})()');\r\n\t\t\t\treturn _result_ + _evaled_;\r\n\t\t\t}\r\n\t\t\telse var _evaled_ = eval(script);\r\n\t\t} catch(e){\r\n\t\t\tconsole.error(e);\r\n\t\t\tconsole.log(trimIndentation(processingElement.innerHTML));\r\n\t\t\t//console.log(tempScript.replace(/_result_ \\+=.*?;/g, '{[ DOM ]}'));\r\n\t\t\treturn '#DOMError';\r\n\t\t}\r\n\r\n\t\tif(_result_ !== '') return _result_;\r\n\t\treturn _evaled_;\r\n\t}\r\n\r\n\tself.index = function(element){\r\n\t\tvar i = -1;\r\n\t\tvar tagName = element.tagName;\r\n\t\tvar currentElement = element;\r\n\r\n\t\twhile(element !== null) {\r\n\t\t\tif(element.tagName === tagName)\r\n\t\t\t\ti++;\r\n\r\n\t\t\telement = element.previousElementSibling;\r\n\t\t}\r\n\r\n\t\tvar list = currentElement.getAttribute('sf-bind-list');\r\n\t\tif(!list) return i;\r\n\r\n\t\tvar ref = sf.model.root[sf.controller.modelName(currentElement)][list];\r\n\t\tif(!ref.$virtual) return i;\r\n\r\n\t\treturn i + ref.$virtual.DOMCursor - 1;\r\n\t}\r\n\r\n\tself.for = function(name, func){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.for(name, func);\r\n\t\t\t});\r\n\t\t\r\n\t\tfunc(self(name), self);\r\n\t}\r\n\r\n\tself.modelKeys = function(modelRef){\r\n\t\tvar keys = Object.keys(modelRef);\r\n\t\tfor (var i = keys.length - 1; i >= 0; i--) {\r\n\t\t\tif(keys[i].indexOf('$') !== -1)\r\n\t\t\t\tkeys.splice(i, 1);\r\n\t\t}\r\n\t\treturn keys.join('|');\r\n\t}\r\n\r\n\t// For contributor of this library\r\n\t// Please be careful when you're passing the eval argument\r\n\tvar dataParser = function(html, _model_, mask, scope, runEval){\r\n\t\tvar _modelScope = self.root[scope];\r\n\t\tif(!runEval) runEval = '';\r\n\t\t\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(_modelScope);\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(_modelScope[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tbindingEnabled = true;\r\n\r\n\t\treturn html.replace(/{{([^@][\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = temp.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*'); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\r\n\t\t\ttemp = temp.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\"); // ToDo: Unescape\r\n\r\n\t\t\t// Evaluate\r\n\t\t\ttemp = '' + localEval.apply(self.root, [runEval + temp, _model_, _modelScope]);\r\n\r\n\t\t\treturn temp.replace(/(?!&#.*?;)[\\u00A0-\\u9999<>\\&]/gm, function(i) {\r\n\t\t        return '&#'+i.charCodeAt(0)+';';\r\n\t\t    });\r\n\t\t});\r\n\t}\r\n\r\n\tvar uniqueDataParser = function(html, _model_, mask, scope){\r\n\t\t// Get prepared html content\r\n\t\tvar _content_ = {\r\n\t\t\tlength:0,\r\n\t\t\ttake:function(passVar, currentIndex){\r\n\t\t\t\tif(!passVar)\r\n\t\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope);\r\n\r\n\t\t\t\tvar strDeclare = '\"use strict\";var ';\r\n\t\t\t\tvar firstTime = true;\r\n\r\n\t\t\t\tfor(var key in passVar){\r\n\t\t\t\t\tif(typeof passVar[key] === 'string')\r\n\t\t\t\t\t\tpassVar[key] = '\"'+passVar[key].split('\"').join('\\\\\"')+'\"';\r\n\t\t\t\t\telse if(typeof passVar[key] === 'object')\r\n\t\t\t\t\t\tpassVar[key] = JSON.stringify(passVar[key]);\r\n\r\n\t\t\t\t\tif(!firstTime)\r\n\t\t\t\t\t\tstrDeclare += ',';\r\n\r\n\t\t\t\t\tstrDeclare += key + ' = ' + passVar[key];\r\n\t\t\t\t\tfirstTime = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove var because no variable are being passed\r\n\t\t\t\tif(firstTime === true)\r\n\t\t\t\t\tstrDeclare = strDeclare.replace('var ', '');\r\n\r\n\t\t\t\t// Escape function call for addional security eval protection\r\n\t\t\t\tstrDeclare = strDeclare.split('(').join('&#40;').split(')').join('&#41;');\r\n\r\n\t\t\t\treturn dataParser(this[currentIndex], _model_, mask, scope, strDeclare + ';');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\thtml = html.replace(/{\\[([\\s\\S]*?)\\]}/g, function(full, matched){\r\n\t\t\tif(/{{.*?}}/.test(matched) === false)\r\n\t\t\t\treturn \"_result_ += '\"+matched.split(\"'\").join(\"\\\\'\")+\"'\";\r\n\r\n\t\t\t_content_[_content_.length] = matched;\r\n\t\t\t_content_.length++;\r\n\t\t\treturn '_result_ += _content_.take(&VarPass&, '+(_content_.length - 1)+');';\r\n\t\t});\r\n\r\n\t\tvar _modelScope = self.root[scope];\r\n\r\n\t\t// Don't match text inside quote, or object keys\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+self.modelKeys(_modelScope)+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\tif(mask)\r\n\t\t\tvar itemMask = RegExp(sf.regex.strictVar+mask+'\\\\.'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\r\n\t\treturn html.replace(/{{(@[\\s\\S]*?)}}/g, function(actual, temp){\r\n\t\t\t// ToDo: The regex should be optimized to avoid match in a quote (but not escaped quote)\r\n\t\t\ttemp = temp.split('\\\\\"').join('\\\\$%*').split(\"\\\\'\").join('\\\\%$*'); // ToDo: Escape\r\n\r\n\t\t\t// Mask item variable\r\n\t\t\tif(mask)\r\n\t\t\t\ttemp = temp.replace(itemMask, function(matched){\r\n\t\t\t\t\treturn '_model_.'+matched[0].slice(1);\r\n\t\t\t\t});\r\n\r\n\t\t\t// Mask model for variable\r\n\t\t\ttemp = temp.replace(scopeMask, function(full, matched){\r\n\t\t\t\treturn '_modelScope.'+matched;\r\n\t\t\t});\r\n\t\t\ttemp = temp.split('\\\\$%*').join('\\\\\"').split('\\\\%$*').join(\"\\\\'\"); // ToDo: Unescape\r\n\r\n\t\t\tvar result = '';\r\n\t\t\tvar check = false;\r\n\r\n\t\t\tcheck = temp.split('@if ');\r\n\t\t\tif(check.length != 1){\r\n\t\t\t\tcheck = check[1].split(':');\r\n\t\t\t\tvar scopes = [check[0], _model_, _modelScope, _content_];\r\n\t\t\t\r\n\t\t\t\t// If condition was not meet\r\n\t\t\t\tif(localEval.apply(self.root, scopes) == false)\r\n\t\t\t\t\treturn '';\r\n\r\n\t\t\t\tcheck.shift();\r\n\t\t\t\tscopes.splice(0, 1, check.join(':').split('&VarPass&').join('{}'));\r\n\t\t\t\treturn localEval.apply(self.root, scopes);\r\n\t\t\t}\r\n\r\n\t\t\t// Get defined variables\r\n\t\t\tvar VarPass_ = /(var|let)([\\w,\\s]+)(?=\\s(?==|in|of))/g;\r\n\t\t\tvar VarPass = [];\r\n\t\t\tvar s1 = null;\r\n\t\t\twhile((s1 = VarPass_.exec(temp)) !== null){\r\n\t\t\t\tVarPass.push(s1[2]);\r\n\t\t\t}\r\n\t\t\tif(VarPass.length){\r\n\t\t\t\tvar obtained = [];\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i].replace(/([\\n\\t\\r]|  )+/g, '').split(',').forEach(function(val){\r\n\t\t\t\t\t\tobtained.push(val);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tVarPass = obtained;\r\n\t\t\t\tfor (var i = 0; i < VarPass.length; i++) {\r\n\t\t\t\t\tVarPass[i] += ':(typeof '+VarPass[i]+'!==\"undefined\"?'+VarPass[i]+':undefined)';\r\n\t\t\t\t}\r\n\t\t\t\tVarPass = '{'+VarPass.join(',')+'}';\r\n\t\t\t\ttemp = temp.split('&VarPass&').join(VarPass);\r\n\t\t\t}\r\n\t\t\ttemp = temp.split('&VarPass&').join('{}'); \r\n\r\n\t\t\t// Warning! Avoid unencoded user inputted content\r\n\t\t\t// And always check/remove closing ']}' in user content\r\n\t\t\t// Any function call will be removed for addional security\r\n\t\t\tcheck = temp.split('@exec');\r\n\t\t\tif(check.length != 1){\r\n\t\t\t\tcheck = check[1].split('&lt;').join('<').split('&gt;').join('>').split('&amp;').join('&');\r\n\r\n\t\t\t\ttemp = localEval.apply(self.root, [check, _model_, _modelScope, _content_]);\r\n\t\t\t\treturn temp;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\t}\r\n\r\n\tvar bindArray = function(html, list, mask, modelName, propertyName, targetNode, parentNode, htmlParsedData){\r\n\t\tvar editProperty = ['pop', 'push', 'splice', 'shift', 'unshift', 'swap', '$replace', 'softRefresh', 'hardRefresh'];\r\n\t\tvar refreshTimer = -1;\r\n\t\tvar processElement = function(index, options, other){\r\n\t\t\tif(options === 'clear'){\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tvar spacer = [parentNode.firstElementChild, parentNode.lastElementChild];\r\n\r\n\t\t\t\tparentNode.textContent = '';\r\n\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tparentNode.appendChild(spacer[0]);\r\n\t\t\t\t\tparentNode.appendChild(spacer[1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(options === 'swap'){\r\n\t\t\t\tvar ref = parentNode.children;\r\n\t\t\t\tref[index].insertAdjacentElement('afterEnd', ref[other]);\r\n\t\t\t\tref[other].insertAdjacentElement('afterEnd', ref[index]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(list.$virtual){\r\n\t\t\t\tvar exist = list.$virtual.elements();\r\n\r\n\t\t\t\tclearTimeout(refreshTimer);\r\n\t\t\t\trefreshTimer = setTimeout(function(){\r\n\t\t\t\t\tlist.$virtual.refresh(true);\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse exist = parentNode.children;\r\n\r\n\t\t\tvar callback = false;\r\n\t\t\tif(self.root[modelName]['on$'+propertyName])\r\n\t\t\t\tcallback = self.root[modelName]['on$'+propertyName];\r\n\r\n\t\t\t// Hard refresh\r\n\t\t\tif(options === 'hardRefresh'){\r\n\t\t\t\tvar item = self.root[modelName][propertyName];\r\n\t\t\t\tvar all = '';\r\n\t\t\t\tfor (var i = index; i < item.length; i++) {\r\n\t\t\t\t\tvar temp = uniqueDataParser(html, item[i], mask, modelName);\r\n\t\t\t\t\tall += dataParser(temp, item[i], mask, modelName);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(list.$virtual)\r\n\t\t\t\t\tparentNode.lastElementChild.insertAdjacentHTML('beforeBegin', all);\r\n\t\t\t\telse parentNode.insertAdjacentHTML('beforeEnd', all);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Remove\r\n\t\t\tif(options === 'remove'){\r\n\t\t\t\tif(exist[index]){\r\n\t\t\t\t\tvar currentRemoved = false;\r\n\t\t\t\t\tvar startRemove = function(){\r\n\t\t\t\t\t\tif(currentRemoved) return;\r\n\t\t\t\t\t\tcurrentRemoved = true;\r\n\r\n\t\t\t\t\t\texist[index].remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(callback.remove){\r\n\t\t\t\t\t\t// Auto remove if return false\r\n\t\t\t\t\t\tif(!callback.remove(exist[index], startRemove))\r\n\t\t\t\t\t\t\tsetTimeout(startRemove, 800);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Auto remove if no callback\r\n\t\t\t\t\telse startRemove();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Create or update\r\n\t\t\tvar item = self.root[modelName][propertyName][index];\r\n\r\n\t\t\tvar temp = uniqueDataParser(html, item, mask, modelName);\r\n\t\t\ttemp = dataParser(temp, item, mask, modelName);\r\n\t\t\ttemp = $.parseElement(temp);\r\n\r\n\t\t\tvar referenceNode = exist[index];\r\n\t\t\t// Create\r\n\t\t\tif(options === 'insertAfter'){\r\n\t\t\t\tvar index = index !== 0 ? index - 1 : (exist.length - 1);\r\n\t\t\t\tvar referenceNode = exist[index];\r\n\r\n\t\t\t\tif(!referenceNode){\r\n\t\t\t\t\tif(!list.$virtual || list.length === 0){\r\n\t\t\t\t\t\tparentNode.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\t\t\tif(callback.create) callback.create(temp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treferenceNode.insertAdjacentElement('afterEnd', temp);\r\n\t\t\t\tif(callback.create) callback.create(temp);\r\n\t\t\t}\r\n\t\t\telse if(options === 'append'){\r\n\t\t\t\tif(list.$virtual && list.length !== 0){\r\n\t\t\t\t\texist[index-1].insertAdjacentElement('afterEnd', temp);\r\n\t\t\t\t\tif(callback.create) callback.create(temp);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparentNode.appendChild(temp);\r\n\t\t\t\tif(callback.create) callback.create(temp);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t// Create\r\n\t\t\t\tif(options === 'insertBefore'){\r\n\t\t\t\t\texist[0].insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t\t\tif(callback.create) callback.create(temp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\t\texist[index].parentNode.replaceChild(temp, exist[index]);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tparentNode.replaceChild(temp, exist[index]);\r\n\t\t\t\t\tif(callback.update) callback.update(temp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar propertyProxy = function(subject, name){\r\n\t\t\tObject.defineProperty(subject, name, {\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tvalue: function(){\r\n\t\t\t\t\tvar temp = undefined;\r\n\t\t\t\t\tvar lastLength = this.length;\r\n\r\n\t\t\t\t\tif(name === 'swap'){\r\n\t\t\t\t\t\tvar i = arguments[0];\r\n\t\t\t\t\t\tvar o = arguments[1];\r\n\t\t\t\t\t\tprocessElement(i, 'swap', o);\r\n\t\t\t\t\t\tvar temp = this[i];\r\n\t\t\t\t\t\tthis[i] = this[o];\r\n\t\t\t\t\t\tthis[o] = temp;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === '$replace'){\r\n\t\t\t\t\t\t// Check if appending\r\n\t\t\t\t\t\tif(arguments[0].length >= lastLength && lastLength !== 0){\r\n\t\t\t\t\t\t\tvar matchLeft = lastLength;\r\n\t\t\t\t\t\t\tvar ref = arguments[0];\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < lastLength; i++) {\r\n\t\t\t\t\t\t\t\tif(ref[i] === this[i]){\r\n\t\t\t\t\t\t\t\t\tmatchLeft--;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(matchLeft === 0){\r\n\t\t\t\t\t\t\t\tif(ref.length === lastLength) return;\r\n\r\n\t\t\t\t\t\t\t\tvar takeIndex = lastLength-1;\r\n\t\t\t\t\t\t\t\tArray.prototype.splice.apply(this, [takeIndex, 0].concat(arguments[0].slice(takeIndex)));\r\n\t\t\t\t\t\t\t\tprocessElement(lastLength, 'hardRefresh');\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(lastLength !== 0){\r\n\t\t\t\t\t\t\tArray.prototype.splice.apply(this, [0]);\r\n\t\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tArray.prototype.splice.apply(this, [0,0].concat(arguments[0]));\r\n\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'splice' && arguments[0] === 0 && arguments[1] === undefined){\r\n\t\t\t\t\t\tprocessElement(0, 'clear');\r\n\t\t\t\t\t\treturn Array.prototype.splice.apply(this, arguments);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(Array.prototype[name])\r\n\t\t\t\t\t\ttemp = Array.prototype[name].apply(this, arguments);\r\n\r\n\t\t\t\t\tif(name === 'pop')\r\n\t\t\t\t\t\tprocessElement(this.length, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'push')\r\n\t\t\t\t\t\tprocessElement(lastLength, 'append');\r\n\r\n\t\t\t\t\telse if(name === 'shift')\r\n\t\t\t\t\t\tprocessElement(0, 'remove');\r\n\r\n\t\t\t\t\telse if(name === 'splice'){\r\n\t\t\t\t\t\tif(arguments[0] === 0 && arguments[1] === undefined)\r\n\t\t\t\t\t\t\treturn temp;\r\n\r\n\t\t\t\t\t\t// Removing data\r\n\t\t\t\t\t\tvar real = arguments[0];\r\n\t\t\t\t\t\tif(real < 0) real = lastLength + real;\r\n\r\n\t\t\t\t\t\tvar limit = arguments[1];\r\n\t\t\t\t\t\tif(!limit && limit !== 0) limit = this.length;\r\n\r\n\t\t\t\t\t\tfor (var i = limit - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tprocessElement(real + i, 'remove');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(arguments.length >= 3){ // Inserting data\r\n\t\t\t\t\t\t\tlimit = arguments.length - 2;\r\n\t\t\t\t\t\t\tfor (var i = 0; i < limit; i++) {\r\n\t\t\t\t\t\t\t\tprocessElement(real + i, 'insertAfter');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(name === 'unshift')\r\n\t\t\t\t\t\tprocessElement(0, 'insertBefore');\r\n\r\n\t\t\t\t\telse if(name === 'softRefresh')\r\n\t\t\t\t\t\tprocessElement(arguments[0], 'update');\r\n\r\n\t\t\t\t\telse if(name === 'hardRefresh')\r\n\t\t\t\t\t\tprocessElement(0, 'hardRefresh');\r\n\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(parentNode && parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\tdelete list.$virtual;\r\n\t\t\tlist.$virtual = {};\r\n\r\n\t\t\t// Parse in virtual DOM\r\n\t\t\tlist.$virtual.dom = document.createElement('div');\r\n\t\t\tlist.$virtual.dom.innerHTML = htmlParsedData;\r\n\r\n\t\t\tsf.internal.virtual_scroll.handle(list, targetNode, parentNode);\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < editProperty.length; i++) {\r\n\t\t\tpropertyProxy(list, editProperty[i]);\r\n\t\t}\r\n\r\n\t\tObject.defineProperty(list, 'getElement', {\r\n\t\t\tenumerable: false,\r\n\t\t\tconfigurable: true,\r\n\t\t\tvalue: function(index){\r\n\t\t\t\tif(list.$virtual){\r\n\t\t\t\t\tif(index < list.$virtual.DOMCursor)\r\n\t\t\t\t\t\treturn list.$virtual.dom.children[index];\r\n\r\n\t\t\t\t\tindex -= list.$virtual.DOMCursor;\r\n\t\t\t\t\tvar childElement = parentNode.childElementCount - 2;\r\n\t\t\t\t\tif(index <= childElement)\r\n\t\t\t\t\t\treturn parentNode.children[index + 1];\r\n\r\n\t\t\t\t\treturn list.$virtual.dom.children[index - childElement + list.$virtual.DOMCursor];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn parentNode.children[index];\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction compareObject(obj1, obj2){\r\n\t\tif(!obj1 || !obj2)\r\n\t\t\treturn false;\r\n\r\n\t\tfor(var i in obj1){\r\n\t\t\tif(typeof obj1[i] !== 'object' && obj1[i] !== obj2[i])\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tvar loopParser = function(name, template, script, targetNode, parentNode){\r\n\t\tvar returns = '';\r\n\t\tvar method = script.split(' in ');\r\n\t\tvar mask = method[0];\r\n\r\n\t\tif(!self.root[name])\r\n\t\t\treturn console.error(\"Can't parse element because model for '\"+name+\"' was not found\", template);\r\n\r\n\t\tvar items = self.root[name][method[1]];\r\n\r\n\t\ttemplate.setAttribute('sf-bind-list', method[1]);\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = template;\r\n\t\ttemplate = template.outerHTML.replace(/  +|\\t+/g, '');\r\n\r\n\t\tif(method.length === 2){\r\n\t\t\tvar temp = '';\r\n\t\t\tfor(var i in items){\r\n\t\t\t\tvar item = items[i];\r\n\r\n\t\t\t\ttemp = uniqueDataParser(template, item, mask, name);\r\n\t\t\t\ttemp = dataParser(temp, item, mask, name);\r\n\t\t\t\treturns += temp;\r\n\t\t\t}\r\n\r\n\t\t\tvar modelRef = self.root[name];\r\n\r\n\t\t\t// Enable element binding\r\n\t\t\tif(modelRef.sf$bindedKey === undefined)\r\n\t\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\t\tif(modelRef.sf$bindedKey[method[1]] === undefined)\r\n\t\t\t\tmodelRef.sf$bindedKey[method[1]] = null;\r\n\r\n\t\t\tObject.defineProperty(modelRef, method[1], {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tget:function(){\r\n\t\t\t\t\treturn items;\r\n\t\t\t\t},\r\n\t\t\t\tset:function(val){\r\n\t\t\t\t\tif(val.length === 0)\r\n\t\t\t\t\t\treturn items.splice(0);\r\n\t\t\t\t\treturn items.$replace(val);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tbindArray(template, items, mask, name, method[1], targetNode, parentNode, returns);\r\n\t\t}\r\n\t\treturn returns;\r\n\t}\r\n\r\n\tvar inputBoundFunction = function(e){\r\n\t\tself.root[e.target['sf-model']][e.target['sf-bounded']] = e.target.value;\r\n\t};\r\n\r\n\tvar bindInput = function(targetNode){\r\n\t\tvar temp = $('input[sf-bound]', targetNode);\r\n\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar model = sf.controller.modelName(element);\r\n\t\t\tif(!model) return;\r\n\r\n\t\t\tvar whichVar = element.getAttribute('sf-bound');\r\n\r\n\t\t\t// Get reference\r\n\t\t\tif(typeof self.root[model][whichVar] === undefined){\r\n\t\t\t\tconsole.error('Cannot get reference for self.root[\"' + model + '\"][\"' + whichVar+'\"]');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement['sf-bounded'] = whichVar;\r\n\t\t\telement['sf-model'] = model;\r\n\t\t\telement.setAttribute('sf-bounded', '');\r\n\t\t\telement.removeAttribute('sf-bound');\r\n\r\n\t\t\t// Bound value change\r\n\t\t\tif(element.tagName === 'INPUT' || element.tagName === 'TEXTAREA')\r\n\t\t\t\t$.on(element, 'keyup', inputBoundFunction);\r\n\r\n\t\t\telse\r\n\t\t\t\t$.on(element, 'change', inputBoundFunction);\r\n\t\t}\r\n\t}\r\n\r\n\tvar alreadyInitialized = false;\r\n\tself.init = function(targetNode){\r\n\t\tif(alreadyInitialized && !targetNode) return;\r\n\t\talreadyInitialized = true;\r\n\t\tsetTimeout(function(){\r\n\t\t\talreadyInitialized = false;\r\n\t\t}, 50);\r\n\r\n\t\tif(!targetNode) targetNode = document.body;\r\n\r\n\t\tself.parsePreprocess(self.queuePreprocess(targetNode));\r\n\t\tbindInput(targetNode);\r\n\r\n\t\tvar temp = $('[sf-repeat-this]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tvar element = temp[i];\r\n\t\t\tvar parent = element.parentElement;\r\n\r\n\t\t\tif(element.parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\t\tvar ceiling = document.createElement(element.tagName);\r\n\t\t\t\tceiling.classList.add('virtual-spacer');\r\n\t\t\t\tvar floor = ceiling.cloneNode(true);\r\n\r\n\t\t\t\tceiling.classList.add('ceiling');\r\n\t\t\t\t//ceiling.style.transform = 'scaleY(0)';\r\n\t\t\t\telement.parentNode.insertAdjacentElement('afterBegin', ceiling); // prepend\r\n\r\n\t\t\t\tfloor.classList.add('floor');\r\n\t\t\t\t//floor.style.transform = 'scaleY(0)';\r\n\t\t\t\telement.parentNode.insertAdjacentElement('beforeEnd', floor); // append\r\n\r\n\t\t\t\t// His total scrollHeight\r\n\t\t\t\tvar styles = window.getComputedStyle(element);\r\n\t\t\t\tvar absHeight = parseFloat(styles['marginTop']) + parseFloat(styles['marginBottom']);\r\n\t\t\t\tstyles = null;\r\n\r\n\t\t\t\t// Element height + margin\r\n\t\t\t\tabsHeight = Math.ceil(element.offsetHeight + absHeight);\r\n\t\t\t}\r\n\r\n\t\t\tvar after = element.nextElementSibling;\r\n\t\t\tif(after === null || element === after)\r\n\t\t\t\tafter = false;\r\n\r\n\t\t\tvar before = element.previousElementSibling;\r\n\t\t\tif(before === null || element === before)\r\n\t\t\t\tbefore = false;\r\n\r\n\t\t\tvar script = element.getAttribute('sf-repeat-this');\r\n\t\t\telement.removeAttribute('sf-repeat-this');\r\n\t\t\tvar controller = sf.controller.modelName(element);\r\n\r\n\t\t\t// Check if the element was already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(element.outerHTML))\r\n\t\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\t\tif(element.parentNode.classList.contains('sf-virtual-list')){\r\n\t\t\t\tif(!loopParser(controller, element, script, targetNode, element.parentNode))\r\n\t\t\t\t\telement.setAttribute('sf-bind-list', script.split(' in ')[1]);\r\n\t\t\t\telement.remove();\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tvar data = loopParser(controller, element, script, targetNode, element.parentNode);\r\n\t\t\tif(data){\r\n\t\t\t\tdata = $.parseElement(data);\r\n\t\t\t\tif(after)\r\n\t\t\t\t\tafter.insertAdjacentElement('beforeBegin', data); // before\r\n\t\t\t\telse if(before)\r\n\t\t\t\t\tbefore.insertAdjacentElement('afterEnd', data); // after\r\n\t\t\t\telse\r\n\t\t\t\t\tparent.insertAdjacentElement('beforeEnd', data); // append\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\telement.setAttribute('sf-bind-list', script.split(' in ')[1]);\r\n\r\n\t\t\telement.remove();\r\n\t\t}\r\n\t}\r\n\r\n\t// Reset model properties\r\n\t// Don't call if the removed element is TEXT or #comment\r\n\tfunction DOMNodeRemoved(element){\r\n\t\tvar temp = $('[sf-controller]', element);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tremoveModelBinding(temp[i].getAttribute('sf-controller'));\r\n\t\t}\r\n\r\n\t\tif(element.hasAttribute('sf-controller') === false)\r\n\t\t\treturn;\r\n\r\n\t\tremoveModelBinding(element.getAttribute('sf-controller'));\r\n\t}\r\n\r\n\tsf(function(){\r\n\t\tvar everyRemovedNodes = function(nodes){\r\n\t\t\tvar tagName = nodes.nodeName;\r\n\t\t\tif(tagName === 'TEXT' || tagName === '#text' || tagName === '#comment') return;\r\n\r\n\t\t\tDOMNodeRemoved(nodes);\r\n\t\t}\r\n\r\n\t\tif(typeof MutationObserver === 'function' && MutationObserver.prototype.observe){\r\n\t\t\tvar everyRecords = function(record){\r\n\t\t\t\trecord.removedNodes.forEach(everyRemovedNodes);\r\n\t\t\t}\r\n\r\n\t\t\tvar observer = new MutationObserver(function(records){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\trecords.forEach(everyRecords);\r\n\t\t\t});\r\n\r\n\t\t\tobserver.observe(document.body, { childList: true, subtree: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.body.addEventListener('DOMNodeRemoved', function(e){\r\n\t\t\t\tif(!bindingEnabled) return;\r\n\t\t\t\teveryRemovedNodes(e.target);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tvar removeModelBinding = function(modelName){\r\n\t\tvar ref = self.root[modelName];\r\n\t\tif(ref === undefined)\r\n\t\t\treturn;\r\n\r\n\t\tvar bindedKey = ref.sf$bindedKey;\r\n\t\tvar temp = null;\r\n\t\tfor(var key in bindedKey){\r\n\t\t\tdelete bindedKey[key];\r\n\r\n\t\t\tif(ref[key] === undefined || ref[key] === null)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(ref[key].constructor === String ||\r\n\t\t\t\tref[key].constructor === Number ||\r\n\t\t\t\tref[key].constructor === Boolean\r\n\t\t\t){/* Ok */}\r\n\r\n\t\t\telse if(ref[key].constructor === Array){\r\n\t\t\t\tif(ref[key].$virtual){\r\n\t\t\t\t\tref[key].$virtual.destroy();\r\n\t\t\t\t\tdelete ref[key].$virtual;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset property without copying the array\r\n\t\t\t\ttemp = ref[key].splice('obtain');\r\n\t\t\t\tdelete ref[key];\r\n\t\t\t\tref[key] = temp;\r\n\t\t\t}\r\n\t\t\telse continue;\r\n\r\n\t\t\tif(Object.getOwnPropertyDescriptor(ref, key) === undefined)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t// Reconfigure / Remove property descriptor\r\n\t\t\tvar temp = ref[key];\r\n\t\t\tdelete ref[key];\r\n\t\t\tref[key] = temp;\r\n\t\t}\r\n\t}\r\n\r\n\tvar dcBracket = /{{[\\s\\S]*?}}/;\r\n\tvar bindObject = function(element, modelRef, propertyName, which){\r\n\t\tif(!(element instanceof Node))\r\n\t\t\telement = element[0];\r\n\r\n\t\t// Get reference for debugging\r\n\t\tprocessingElement = element;\r\n\r\n\t\t// First initialization\r\n\t\telement.setAttribute('sf-bind-key', propertyName);\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\r\n\t\t// Cache attribute content\r\n\t\tif(which === 'attr' || !which){\r\n\t\t\tvar attrs = {};\r\n\r\n\t\t\tfor (var i = 0; i < element.attributes.length; i++) {\r\n\t\t\t\tvar attr = element.attributes[i].name;\r\n\r\n\t\t\t\t// Check if it has a bracket\r\n\t\t\t\tif(dcBracket.test(element.getAttribute(attr)) === false)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tattrs[attr] = element.getAttribute(attr);\r\n\t\t\t\telement.removeAttribute(attr);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Cache html content\r\n\t\tif(which === 'html' || !which)\r\n\t\t\tvar htmlClone = element.cloneNode(true).innerHTML;\r\n\r\n\t\tvar onChanges = function(){\r\n\t\t\tif(which === 'attr' || !which){\r\n\t\t\t\tfor(var name in attrs){\r\n\t\t\t\t\tif(attrs[name].indexOf(propertyName) === -1)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tvar temp = dataParser(attrs[name], modelRef, false, modelName);\r\n\t\t\t\t\tif(name === 'value')\r\n\t\t\t\t\t\telement.value = temp;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\telement.setAttribute(name, temp);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(which === 'html' || !which){\r\n\t\t\t\tvar temp = uniqueDataParser(htmlClone, modelRef, false, modelName);\r\n\t\t\t\ttemp = dataParser(temp, modelRef, false, modelName);\r\n\t\t\t\telement.textContent = '';\r\n\t\t\t\telement.insertAdjacentHTML('afterBegin', temp);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif(modelRef[propertyName] === undefined)\r\n\t\t\tthrow \"Property '\"+propertyName+\"' was not found on '\"+modelName+\"' model\";\r\n\r\n\t\t// Enable multiple element binding\r\n\t\tif(modelRef.sf$bindedKey === undefined)\r\n\t\t\tinitBindingInformation(modelRef);\r\n\r\n\t\tif(modelRef.sf$bindedKey[propertyName] !== undefined){\r\n\t\t\tmodelRef.sf$bindedKey[propertyName].push(onChanges);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar objValue = modelRef[propertyName]; // Object value\r\n\t\tObject.defineProperty(modelRef, propertyName, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\t\t\tget:function(){\r\n\t\t\t\treturn objValue;\r\n\t\t\t},\r\n\t\t\tset:function(val){\r\n\t\t\t\tobjValue = val;\r\n\r\n\t\t\t\tvar ref = modelRef.sf$bindedKey[propertyName];\r\n\t\t\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\t\t\tref[i]();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn objValue;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tmodelRef.sf$bindedKey[propertyName] = [onChanges];\r\n\t}\r\n\r\n\tself.bindElement = function(element, which){\r\n\t\tvar modelName = sf.controller.modelName(element);\r\n\t\tvar model = self.root[modelName];\r\n\t\tif(!model) return console.error(\"Model for \"+modelName+\" was not found while binding:\", element);\r\n\r\n\t\tvar html = element.outerHTML;\r\n\r\n\t\t// Check if the child element was already bound to prevent vulnerability\r\n\t\tif(/sf-bind-key|sf-bind-list/.test(html))\r\n\t\t\tthrow \"Can't parse element that already bound\";\r\n\r\n\t\tif(which === 'attr')\r\n\t\t\thtml = html.replace(element.innerHTML, '');\r\n\r\n\t\tvar brackets = /{{([\\s\\S]*?)}}/g;\r\n\r\n\t\t// Unmatch any function\r\n\t\tvar variableList = self.modelKeys(model);\r\n\t\tfor(var i = variableList.length - 1; i >= 0; i--){\r\n\t\t\tif(model[variableList[i]] instanceof Function)\r\n\t\t\t\tvariableList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\tvar scopeMask = RegExp(sf.regex.strictVar+'('+variableList+')'+sf.regex.avoidQuotes+'\\\\b', 'g');\r\n\t\tvar s1, s2 = null;\r\n\t\twhile((s1 = brackets.exec(html)) !== null){\r\n\t\t\twhile ((s2 = scopeMask.exec(s1[1])) !== null) {\r\n\t\t\t\tbindObject(element, model, s2[1], which);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar excludes = ['HTML','HEAD','STYLE','LINK','META','SCRIPT','OBJECT','IFRAME'];\r\n\tself.queuePreprocess = function(targetNode){\r\n\t\tvar childNodes = (targetNode || document.body).childNodes;\r\n\r\n\t\tvar temp = [];\r\n\t\tfor (var i = 0; i < childNodes.length; i++) {\r\n\t\t\tvar currentNode = childNodes[i];\r\n\t\t\tif(excludes.indexOf(currentNode.nodeName) !== -1)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(currentNode.nodeType === 1){ // Tag\r\n\t\t\t\tvar attrs = currentNode.attributes;\r\n\r\n\t\t\t\t// Skip element and it's childs that already bound to prevent vulnerability\r\n\t\t\t\tif(attrs['sf-bind-key'] || attrs['sf-repeat-this'] || attrs['sf-bind-list']) continue;\r\n\r\n\t\t\t\tfor (var a = 0; a < attrs.length; a++) {\r\n\t\t\t\t\tif(attrs[a].value.indexOf('{{') !== -1){\r\n\t\t\t\t\t\tcurrentNode.setAttribute('sf-preprocess', 'attronly');\r\n\t\t\t\t\t\ttemp.push(currentNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttemp = temp.concat(self.queuePreprocess(currentNode));\r\n\t\t\t}\r\n\r\n\t\t\telse if(currentNode.nodeType === 3){ // Text\r\n\t\t\t\tif(currentNode.nodeValue.indexOf('{{') !== -1){\r\n\t\t\t\t\tcurrentNode.parentNode.setAttribute('sf-preprocess', '');\r\n\r\n\t\t\t\t\t// Reset Siblings\r\n\t\t\t\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\t\t\t\ttemp[a].removeAttribute('sf-preprocess');\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttemp.push(currentNode.parentNode);\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn temp;\r\n\t}\r\n\r\n\tself.parsePreprocess = function(nodes){\r\n\t\tfor (var a = 0; a < nodes.length; a++) {\r\n\t\t\tvar model = sf.controller.modelName(nodes[a]);\r\n\t\t\tnodes[a].removeAttribute('sf-preprocess');\r\n\r\n\t\t\tif(!self.root[model])\r\n\t\t\t\treturn console.error(\"Can't parse element because model for '\"+model+\"' was not found\", nodes[a]);\r\n\r\n\t\t\tvar modelRef = self.root[model];\r\n\r\n\t\t\t// Get reference for debugging\r\n\t\t\tprocessingElement = nodes[a];\r\n\r\n\t\t\t// Double check if the child element already bound to prevent vulnerability\r\n\t\t\tif(/sf-bind-key|sf-bind-list/.test(nodes[a].innerHTML)){\r\n\t\t\t\tconsole.error(\"Can't parse element that already bound\");\r\n\t\t\t\tconsole.log(processingElement.cloneNode(true));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(nodes[a].hasAttribute('sf-bind'))\r\n\t\t\t\tself.bindElement(nodes[a], nodes[a].getAttribute('sf-bind'));\r\n\r\n\t\t\t// Avoid editing the outerHTML because it will remove the bind\r\n\t\t\tvar temp = uniqueDataParser(nodes[a].innerHTML, self.root[model], false, model);\r\n\t\t\tnodes[a].innerHTML = dataParser(temp, self.root[model], false, model);\r\n\r\n\t\t\tvar attrs = nodes[a].attributes;\r\n\t\t\tfor (var i = 0; i < attrs.length; i++) {\r\n\t\t\t\tif(attrs[i].value.indexOf('{{') !== -1){\r\n\t\t\t\t\tvar attr = attrs[i];\r\n\t\t\t\t\tattr.value = dataParser(attr.value, self.root[model], false, model);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction initBindingInformation(modelRef){\r\n\t\tif(modelRef.sf$bindedKey !== undefined)\r\n\t\t\treturn;\r\n\r\n\t\t// Element binding data\r\n\t\tObject.defineProperty(modelRef, 'sf$bindedKey', {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable:false,\r\n\t\t\twritable:true,\r\n\t\t\tvalue:{}\r\n\t\t});\r\n\t}\r\n})();","sf.router = new function(){\r\n\tvar self = this;\r\n\tself.loading = false;\r\n\tself.enabled = false;\r\n\tself.pauseRenderOnTransition = false;\r\n\tself.currentPage = [];\r\n\tvar initialized = false;\r\n\tvar lazyRouting = false;\r\n\tvar currentRouterURL = '';\r\n\r\n\t// Should be called if not using lazy page load\r\n\tself.init = function(targetNode){\r\n\t\tif(!sf.loader.DOMWasLoaded)\r\n\t\t\treturn sf(function(){\r\n\t\t\t\tself.init();\r\n\t\t\t});\r\n\r\n\t\t// Run 'before' event for new page view\r\n\t\tvar temp = $('[sf-controller], [sf-page]', targetNode);\r\n\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\tif(temp[i].getAttribute('sf-controller'))\r\n\t\t\t\tsf.controller.run(temp[i].getAttribute('sf-controller'));\r\n\t\t\t\r\n\t\t\tif(temp[i].getAttribute('sf-page')){\r\n\t\t\t\tvar name = temp[i].getAttribute('sf-page');\r\n\t\t\t\tbeforeEvent(name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinitialized = true;\r\n\t\tcurrentRouterURL = window.location.pathname;\r\n\t}\r\n\r\n\tfunction popstateListener(event) {\r\n\t\t// Don't continue if the last routing was error\r\n\t\tif(routingError){\r\n\t\t\troutingError = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\troutingBack = true;\r\n\t\tself.goto(window.location.pathname);\r\n\t}\r\n\r\n\tself.enable = function(status){\r\n\t\tif(status === undefined) status = true;\r\n\t\tif(self.enabled === status) return;\r\n\t\tself.enabled = status;\r\n\r\n\t\tif(status === true){\r\n\t\t\t// Create listener for link click\r\n\t\t\t$.on(document.body, 'click', 'a[href]', self.load);\r\n\r\n\t\t\t// Create listener when navigate backward\r\n\t\t\twindow.addEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$.off(document.body, 'click', 'a[href]', self.load);\r\n\t\t\twindow.removeEventListener('popstate', popstateListener, false);\r\n\t\t}\r\n\t}\r\n\r\n\tvar before = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.before = function(name, func, index){\r\n\t\tif(!before[name])\r\n\t\t\tbefore[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(before[name].indexOf(func) === -1)\r\n\t\t\t\tbefore[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tbefore[name][index] = func;\r\n\t}\r\n\r\n\tvar after = {};\r\n\t// Set index with number if you want to replace old function\r\n\tself.after = function(name, func, index){\r\n\t\tif(!after[name])\r\n\t\t\tafter[name] = [];\r\n\r\n\t\tif(index === undefined){\r\n\t\t\tif(after[name].indexOf(func) === -1)\r\n\t\t\t\tafter[name].push(func);\r\n\t\t}\r\n\t\telse\r\n\t\t\tafter[name][index] = func;\r\n\t}\r\n\r\n\tvar root_ = function(scope){\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.model.root[scope] = {};\r\n\r\n\t\tif(!sf.model.root[scope])\r\n\t\t\tsf.controller.run(scope);\r\n\t\t\r\n\t\treturn sf.model.root[scope];\r\n\t}\r\n\r\n\t// Running 'before' new page going to be displayed\r\n\tvar beforeEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.push(name);\r\n\r\n\t\tif(before[name]){\r\n\t\t\tfor (var i = 0; i < before[name].length; i++) {\r\n\t\t\t\tbefore[name][i](root_);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Running 'after' old page going to be removed\r\n\tvar afterEvent = function(name){\r\n\t\tif(self.currentPage.indexOf(name) === -1)\r\n\t\t\tself.currentPage.splice(self.currentPage.indexOf(name), 1);\r\n\r\n\t\tif(after[name]){\r\n\t\t\tfor (var i = 0; i < after[name].length; i++) {\r\n\t\t\t\tafter[name][i](root_);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar onEvent = {\r\n\t\t'loading':[],\r\n\t\t'loaded':[],\r\n\t\t'special':[],\r\n\t\t'error':[]\r\n\t};\r\n\tself.on = function(event, func){\r\n\t\tif(onEvent[event].indexOf(func) === -1)\r\n\t\t\tonEvent[event].push(func);\r\n\t}\r\n\r\n\tself.lazyViewPoint = {};\r\n\t/*\r\n\t\t{\r\n\t\t\toldURlPattern:{\r\n\t\t\t\tnewURLPattern:'.viewPoint'\r\n\t\t\t}\r\n\t\t}\r\n\t*/\r\n\r\n\tself.load = function(ev){\r\n\t\tif(self.enabled !== true) return;\r\n\r\n\t\tvar elem = ev.target;\r\n\t\tif(!elem.href) return;\r\n\r\n\t\tif(!history.pushState || elem.hasAttribute('sf-router-ignore'))\r\n\t\t\treturn;\r\n\r\n\t\t// Make sure it's from current origin\r\n\t\tvar path = elem.href.replace(window.location.origin, '');\r\n\t\tif(path.indexOf('//') !== -1)\r\n\t\t\treturn;\r\n\r\n\t\tev.preventDefault()\r\n\t\treturn !self.goto(path);\r\n\t}\r\n\r\n\tvar RouterLoading = false;\r\n\tvar routingBack = false;\r\n\tvar routingError = false;\r\n\tself.goto = function(path, data, method){\r\n\t\tif(!method) method = 'GET';\r\n        else method = method.toUpperCase();\r\n\r\n\t\tif(!data) data = {};\r\n\r\n\t\tfor (var i = 0; i < onEvent['loading'].length; i++) {\r\n\t\t\tif(onEvent['loading'][i](path)) return;\r\n\t\t}\r\n\t\tvar oldPath = window.location.pathname;\r\n\t\tinitialized = false;\r\n\r\n\t\tif(RouterLoading) RouterLoading.abort();\r\n\t\tRouterLoading = $.ajax({\r\n\t\t\turl:window.location.origin + path,\r\n\t\t\tmethod:method,\r\n            data:Object.assign(data, {\r\n                _scarlets:'.dynamic.'\r\n            }),\r\n\t\t\tsuccess:function(data){\r\n\t\t\t\tif(initialized) return;\r\n\t\t\t\tlazyRouting = true;\r\n\r\n\t\t\t\t// Run 'loaded' event\r\n\t\t\t\tRouterLoading = false;\r\n\r\n\t\t\t\t// Find special data\r\n\t\t\t\tvar regex = RegExp('<!-- SF-Special:(.*?)-->'+sf.regex.avoidQuotes, 'gm');\r\n\t\t\t\tvar special = regex.exec(data);\r\n\t\t\t\tif(special && special.length !== 1){\r\n\t\t\t\t\tspecial = special[1].split('--|&>').join('-->');\r\n\t\t\t\t\tspecial = JSON.parse(special);\r\n\r\n\t\t\t\t\tif(!isEmptyObject(special)){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['special'].length; i++) {\r\n\t\t\t\t\t\t\tif(onEvent['special'][i](special)) return;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DOMReference = false;\r\n\t\t\t\tvar foundAction = function(ref){\r\n\t\t\t\t\tDOMReference = $.findOne(ref);\r\n\r\n\t\t\t\t\t// Run 'after' event for old page view\r\n\t\t\t\t\tvar last = $.findOne('[sf-page]', DOMReference);\r\n\t\t\t\t\tafterEvent(last ? last.getAttribute('sf-page') : '/');\r\n\r\n\t\t\t\t\t// Redefine title if exist\r\n\t\t\t\t\tif(special && special.title)\r\n\t\t\t\t\t\t$('head > title').innerHTML = special.title;\r\n\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tfor(var oldURL in self.lazyViewPoint){\r\n\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\tfor(var newURL in self.lazyViewPoint[oldURL]){\r\n\t\t\t\t\t\t\tif(currentRouterURL.indexOf(oldURL) !== -1){\r\n\t\t\t\t\t\t\t\tfoundAction(self.lazyViewPoint[oldURL][newURL]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(found) break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When the view point was not found\r\n\t\t\t\tif(!found){\r\n\t\t\t\t\t// Use fallback if exist\r\n\t\t\t\t\tif(sf.router.lazyViewPoint[\"@default\"])\r\n\t\t\t\t\t\tfoundAction(sf.router.lazyViewPoint[\"@default\"]);\r\n\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\t\t\tonEvent['error'][i]('sf.router.lazyViewPoint[\"'+oldURL+'\"][\"'+newURL+'\"] was not found');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Run 'before' event for new page view\r\n\t\t\t\tif(!DOMReference) DOMReference = document.body;\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', 'none');\r\n\r\n\t\t\t\t// Let page script running first, then update the data binding\r\n\t\t\t\tDOMReference.innerHTML = data;\r\n\r\n\t\t\t\t// Parse the DOM data binding\r\n\t\t\t\tsf.model.init(DOMReference);\r\n\r\n\t\t\t\t// Init template to model binding\r\n\t\t\t\tvar temp = $('[sf-page]', DOMReference);\r\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\r\n\t\t\t\t\tbeforeEvent(temp[i].getAttribute('sf-page'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(self.pauseRenderOnTransition)\r\n\t\t\t\t\tself.pauseRenderOnTransition.css('display', '');\r\n\r\n\t\t\t\trouterLoaded(currentRouterURL, path, DOMReference);\r\n\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tlazyRouting = false;\r\n\r\n\t\t\t\tcurrentRouterURL = path;\r\n\t\t\t\troutingError = false;\r\n\t\t\t},\r\n\t\t\terror:function(xhr, data){\r\n\t\t\t\troutingError = true;\r\n\t\t\t\tif(xhr.aborted) return;\r\n\r\n\t\t\t\tRouterLoading = false;\r\n\t\t\t\tfor (var i = 0; i < onEvent['error'].length; i++) {\r\n\t\t\t\t\tonEvent['error'][i](xhr.status, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Back on error\r\n\t\t\t\twindow.history.back();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(!routingBack)\r\n\t\t\twindow.history.pushState(null, \"\", path);\r\n\r\n\t\troutingBack = false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Trigger loaded event\r\n\tfunction routerLoaded(currentRouterURL, path, data){\r\n\t\tfor (var i = 0; i < onEvent['loaded'].length; i++) {\r\n\t\t\tonEvent['loaded'][i](currentRouterURL, path, data);\r\n\t\t}\r\n\t}\r\n};","sf.internal.virtual_scroll = new function(){\r\n\tvar self = this;\r\n\tvar styleInitialized = false;\r\n\tvar scrollingByScript = false;\r\n\r\n\t// before and after\r\n\tself.prepareCount = 4; // 4, 8, 12, 16, ...\r\n\r\n\tself.handle = function(list, targetNode, parentNode){\r\n\t\tif(!styleInitialized){\r\n\t\t\tinitStyles();\r\n\t\t\tstyleInitialized = true;\r\n\t\t}\r\n\r\n\t\tlist.$virtual.elements = function(){\r\n\t\t\treturn obtainElements(list, parentNode);\r\n\t\t}\r\n\r\n\t\tlist.$virtual.dCursor = { // DOM Cursor\r\n\t\t\tceiling:parentNode.querySelector('.virtual-spacer.ceiling'),\r\n\t\t\tfloor:parentNode.querySelector('.virtual-spacer.floor')\r\n\t\t};\r\n\r\n\t\tlist.$virtual.bounding = {\r\n\t\t\tceiling:-1,\r\n\t\t\tfloor:0\r\n\t\t}\r\n\r\n\t\tlist.$virtual.vCursor = { // Virtual Cursor\r\n\t\t\tceiling:null, // for forward direction\r\n\t\t\tfloor:null // for backward direction\r\n\t\t}\r\n\r\n\t\tlist.$virtual.targetNode = parentNode;\r\n\t\tlist.$virtual.DOMCursor = 0; // cursor of first element in DOM tree as a cursor\r\n\r\n\t\tlist.$virtual.scrollHeight = \r\n\t\t\tlist.$virtual.dCursor.floor.offsetTop - \r\n\t\t\tlist.$virtual.dCursor.ceiling.offsetTop;\r\n\r\n\t\tvar scroller = null;\r\n\t\tlist.$virtual.destroy = function(){\r\n\t\t\t$.off(scroller, 'scroll');\r\n\t\t\t$.off(parentNode, 'mousedown mouseup');\r\n\t\t\tlist.$virtual.dom.innerHTML = '';\r\n\t\t\toffElementResize(parentNode);\r\n\t\t\tdelete list.$virtual;\r\n\t\t}\r\n\r\n\t\tlist.$virtual.resetViewport = function(){\r\n\t\t\tlist.$virtual.visibleLength = Math.floor(scroller.clientHeight / list.$virtual.scrollHeight);\r\n\t\t\tlist.$virtual.preparedLength = list.$virtual.visibleLength + self.prepareCount * 2;\r\n\t\t}\r\n\r\n\t\tsetTimeout(function(){\r\n\t\t\tscroller = parentNode;\r\n\r\n\t\t\tvar length = parentNode.getAttribute('scroll-parent-index') || 0;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tscroller = scroller.parentElement;\r\n\t\t\t}\r\n\r\n\t\t\tlist.$virtual.resetViewport();\r\n\r\n\t\t\tif(parentNode.classList.contains('sf-list-dynamic'))\r\n\t\t\t\tdynamicHeight(list, targetNode, parentNode, scroller);\r\n\t\t\telse\r\n\t\t\t\tstaticHeight(list, targetNode, parentNode, scroller);\r\n\t\t}, 500);\r\n\t}\r\n\r\n\t// Recommended for a list that have different element height\r\n\tfunction dynamicHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller);\r\n\t\t}\r\n\r\n\t\t// Insert some element until reach visible height\r\n\t\tfillViewport();\r\n\r\n\t\tvirtual.visibleLength = parentNode.childElementCount - 2;\r\n\t\tvirtual.preparedLength = virtual.visibleLength + self.prepareCount * 2;\r\n\r\n\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\tvar temp = vCursor.floor;\r\n\t\t\tif(temp === null) break;\r\n\r\n\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t}\r\n\t\tvirtual.DOMCursor = 0;\r\n\r\n\t\tvar ceilingHeight = 0;\r\n\t\tvar floorHeight = 0;\r\n\t\tfunction previousCeiling(){\r\n\t\t\tvar temp = null;\r\n\t\t\tvar resetCeiling = false;\r\n\r\n\t\t\t// Add some element on the ceiling\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\ttemp = virtual.dom.lastElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.ceiling = temp.previousElementSibling;\r\n\t\t\t\tvirtual.DOMCursor--;\r\n\r\n\t\t\t\tceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tif(ceilingHeight > 0)\r\n\t\t\t\t\tceilingHeight -= getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(virtual.DOMCursor < self.prepareCount && !resetCeiling){\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\tresetCeiling = true;\r\n\t\t\t\t\ttemp = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(ceilingHeight < 0 || temp === null)\r\n\t\t\t\tceilingHeight = 0;\r\n\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\t// Remove some element on the floor\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = floor.previousElementSibling;\r\n\t\t\t\tfloorHeight += getAbsoluteHeight(temp);\r\n\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tvCursor.floor = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.floor === null)\r\n\t\t\t\tvCursor.ceiling = virtual.dom.lastElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tfunction fillViewport(){\r\n\t\t\t// Insert some element depend on prepared length\r\n\t\t\tvar length = virtual.preparedLength - (parentNode.childElementCount - 2);\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\ttemp = virtual.dom.firstElementChild;\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(temp === null) break;\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction nextFloor(){\r\n\t\t\tvar temp = null;\r\n\t\t\tfillViewport();\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\r\n\t\t\t// Add extra element based on prepare count\r\n\t\t\tfor (var i = 0; i < self.prepareCount; i++) {\r\n\t\t\t\ttemp = vCursor.floor;\r\n\t\t\t\tif(temp === null) break;\r\n\r\n\t\t\t\tvCursor.floor = temp.nextElementSibling;\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\r\n\t\t\t\tif(floorHeight > 0)\r\n\t\t\t\t\tfloorHeight -= getAbsoluteHeight(temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(floorHeight < 0 || temp === null)\r\n\t\t\t\tfloorHeight = 0;\r\n\r\n\t\t\t// Remove some element on the ceiling\r\n\t\t\tvar length = parentNode.childElementCount - 2 - list.$virtual.preparedLength;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\t\t\t\tceilingHeight += getAbsoluteHeight(temp);\r\n\t\t\t\tvirtual.DOMCursor++;\r\n\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('afterBegin', temp);\r\n\t\t\t\telse vCursor.ceiling.insertAdjacentElement('afterEnd', temp);\r\n\r\n\t\t\t\tvCursor.ceiling = temp;\r\n\t\t\t}\r\n\r\n\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\t\telse \r\n\t\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\r\n\t\t\tceiling.style.height = ceilingHeight+'px';\r\n\t\t\tfloor.style.height = floorHeight+'px';\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\t\trefreshScrollBounding(0, bounding, list, parentNode);\r\n\r\n\t\tvar updating = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript) return;\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tif(scroller.scrollTop < bounding.ceiling){\r\n\t\t\t\t// console.log('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tpreviousCeiling();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('back', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\telse if(scroller.scrollTop > bounding.floor){\r\n\t\t\t\t// console.log('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t\tnextFloor();\r\n\t\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t\t\t// console.warn('front', bounding, scroller.scrollTop, virtual.DOMCursor);\r\n\t\t\t}\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\t\tonElementResize(parentNode, function(){\r\n\t\t\trefreshScrollBounding(virtual.DOMCursor, bounding, list, parentNode);\r\n\t\t});\r\n\t}\r\n\r\n\t// Recommended for a list that have similar element height\r\n\tfunction staticHeight(list, targetNode, parentNode, scroller){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\tvar floor = virtual.dCursor.floor;\r\n\r\n\t\t// Insert visible element to dom tree\r\n\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\tif(virtual.dom.firstElementChild === null)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tfloor.insertAdjacentElement('beforeBegin', virtual.dom.firstElementChild);\r\n\t\t}\r\n\r\n\t\tfunction refreshVirtualSpacer(cursor){\r\n\t\t\tif(cursor >= self.prepareCount){\r\n\t\t\t\tceiling.style.height = (cursor - self.prepareCount) * virtual.scrollHeight + 'px';\r\n\t\t\t\tfloor.style.height = (list.length - virtual.preparedLength - cursor) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tceiling.style.height = cursor * virtual.scrollHeight + 'px'; //'0px';\r\n\t\t\t\tvar count = (list.length - virtual.preparedLength);\r\n\t\t\t\tfloor.style.height = (count || 0) * virtual.scrollHeight + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar bounding = virtual.bounding;\r\n\r\n\t\trefreshVirtualSpacer(0);\r\n\t\trefreshScrollBounding(self.prepareCount, bounding, list, parentNode);\r\n\t\tbounding.ceiling = -1;\r\n\r\n\t\tvirtual.offsetTo = function(index){\r\n\t\t\treturn index * virtual.scrollHeight + ceiling.offsetTop;\r\n\t\t}\r\n\r\n\t\tvar vCursor = virtual.vCursor;\r\n\t\tvCursor.floor = virtual.dom.firstElementChild;\r\n\t\tvirtual.scrollTo = function(index){\r\n\t\t\tscrollTo(index, list, self.prepareCount, parentNode, scroller, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tvirtual.refresh = function(force){\r\n\t\t\trefresh(force, list, self.prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer);\r\n\t\t}\r\n\r\n\t\tvar updating = false;\r\n\t\tvar fromCeiling = true;\r\n\t\tvar scrollFocused = false;\r\n\t\tfunction checkCursorPosition(){\r\n\t\t\tif(updating || scrollingByScript || scroller.scrollTop >= bounding.ceiling && scroller.scrollTop <= bounding.floor){\r\n\t\t\t\t// Fix chrome scroll anchoring bugs when scrolling at corner\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tif(scroller.scrollTop === 0 || scroller.scrollTop === scroller.scrollHeight - scroller.clientHeight){\r\n\t\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar cursor = Math.floor(scroller.scrollTop / virtual.scrollHeight);\r\n\t\t\tif(cursor + virtual.preparedLength > list.length)\r\n\t\t\t\tcursor = list.length - virtual.preparedLength;\r\n\r\n\t\t\tif(fromCeiling){\r\n\t\t\t\tif(cursor < self.prepareCount*2)\r\n\t\t\t\t\tcursor -= self.prepareCount;\r\n\r\n\t\t\t\t// Fix chrome scroll anchoring bugs\r\n\t\t\t\tif(scrollFocused){\r\n\t\t\t\t\tremoveUserScrollFocus(scroller);\r\n\t\t\t\t\tscrollFocused = false;\r\n\t\t\t\t}\r\n\t\t\t\tfromCeiling = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(cursor < self.prepareCount){\r\n\t\t\t\tcursor = 0;\r\n\t\t\t\tfromCeiling = true;\r\n\t\t\t}\r\n\r\n\t\t\tupdating = true;\r\n\r\n\t\t\tvar changes = cursor - virtual.DOMCursor;\r\n\t\t\tif(cursor + changes >= list.length)\r\n\t\t\t\tchanges = cursor + changes - list.length;\r\n\r\n\t\t\tif(changes === 0){ // This should be fixed to improve performance and future bugs\r\n\t\t\t\t//console.warn(\"No changes (The scroll bounding is not correct)\");\r\n\t\t\t\tupdating = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvirtual.DOMCursor = cursor;\r\n\r\n\t\t\t//console.log(cursor, changes);\r\n\r\n\t\t\t//console.log(cursor, changes, bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\t\t\tmoveElementCursor(changes, list);\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\t\t\trefreshScrollBounding(cursor, bounding, list, parentNode);\r\n\t\t\t//console.log('a', bounding.ceiling, bounding.floor, scroller.scrollTop);\r\n\r\n\t\t\tupdating = false;\r\n\t\t}\r\n\r\n\t\t$.on(scroller, 'scroll', checkCursorPosition);\r\n\r\n\t\t// For preventing scroll jump if scrolling over than viewport\r\n\t\tif(scroller === parentNode && navigator.userAgent.indexOf('Chrom') !== -1){\r\n\t\t\t$.on(parentNode, 'mousedown', function(){\r\n\t\t\t\tscrollFocused = true;\r\n\t\t\t});\r\n\t\t\t$.on(parentNode, 'mouseup', function(){\r\n\t\t\t\tscrollFocused = false;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction refreshScrollBounding(cursor, bounding, list, parentNode){\r\n\t\tvar temp = Math.floor(self.prepareCount / 2); // half of element preparation\r\n\t\tif(cursor < self.prepareCount){\r\n\t\t\tbounding.ceiling = -1;\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount * 2 + 1];\r\n\r\n\t\t\tif(bounding.floor !== undefined)\r\n\t\t\t\tbounding.floor = bounding.floor.offsetTop;\r\n\t\t\telse bounding.floor = parentNode.lastElementChild.offsetTop + 1000;\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if(parentNode.children[temp + 1] !== undefined)\r\n\t\t\t\tbounding.ceiling = parentNode.children[temp + 1].offsetTop; // -2 element\r\n\r\n\t\tif(list.$virtual.preparedLength !== undefined && cursor >= list.length - list.$virtual.preparedLength)\r\n\t\t\tbounding.floor = list.$virtual.dCursor.floor.offsetTop + list.$virtual.scrollHeight*2;\r\n\t\telse{\r\n\t\t\tbounding.floor = parentNode.children[self.prepareCount + 3].offsetTop; // +2 element\r\n\r\n\t\t\tif(parentNode.hasAttribute('scroll-reduce-floor')){\r\n\t\t\t\tbounding.floor -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t\tbounding.ceiling -= parentNode.getAttribute('scroll-reduce-floor');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction moveElementCursor(changes, list){\r\n\t\tvar vDOM = list.$virtual.dom;\r\n\t\tvar vCursor = list.$virtual.vCursor;\r\n\t\tvar dCursor = list.$virtual.dCursor;\r\n\r\n\t\tif(changes > 0){ // forward\r\n\t\t\tvar ref = 0;\r\n\r\n\t\t\t// Select from virtual ceiling cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.ceiling === null)\r\n\t\t\t\t\tref = vDOM.firstElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.ceiling.nextElementSibling;\r\n\t\t\t\tdCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the ceiling to vDom\r\n\t\t\tfor (var i = changes; i > 0; i--) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.ceiling === null){\r\n\t\t\t\t\tvCursor.ceiling = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('afterBegin', vCursor.ceiling);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.ceiling.nextElementSibling;\r\n\t\t\t\t\tvCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t\t\tvCursor.ceiling = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.floor = vCursor.ceiling.nextElementSibling;\r\n\t\t}\r\n\t\telse if(changes < 0){ // backward\r\n\t\t\tvar ref = 0;\r\n\t\t\tchanges = -changes;\r\n\r\n\t\t\t// Select from virtual floor cursor to Dom tree\r\n\t\t\tfor (var i = 0; i < changes; i++) { // vDom -> Dom tree\r\n\t\t\t\tif(vCursor.floor === null)\r\n\t\t\t\t\tref = vDOM.lastElementChild;\r\n\r\n\t\t\t\telse ref = vCursor.floor.previousElementSibling;\r\n\t\t\t\tdCursor.ceiling.insertAdjacentElement('afterEnd', ref);\r\n\t\t\t}\r\n\r\n\t\t\t// Move element on the floor to vDom\r\n\t\t\tfor (var i = 0; i < changes; i++) { // Dom tree -> vDom\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvCursor.floor = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvDOM.insertAdjacentElement('beforeEnd', vCursor.floor);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse{\r\n\t\t\t\t\tref = dCursor.floor.previousElementSibling;\r\n\t\t\t\t\tvCursor.floor.insertAdjacentElement('beforeBegin', ref);\r\n\t\t\t\t\tvCursor.floor = ref;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvCursor.ceiling = vCursor.floor.previousElementSibling;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scrollTo(index, list, prepareCount, parentNode, scroller, refreshVirtualSpacer){\r\n\t\tvar virtual = list.$virtual;\r\n\t\tvar reduce = 0;\r\n\r\n\t\tif(index >= list.length - virtual.preparedLength){\r\n\t\t\treduce -= prepareCount;\r\n\t\t\tindex = list.length - virtual.preparedLength;\r\n\t\t}\r\n\r\n\t\tif(index - virtual.DOMCursor === 0 || index >= list.length) return;\r\n\r\n\t\tscrollingByScript = true;\r\n\r\n\t\t// Already on DOM tree\r\n\t\tif((virtual.DOMCursor === 0 && index < prepareCount + prepareCount/2) ||\r\n\t\t\t(virtual.DOMCursor + prepareCount/2 > index\r\n\t\t\t&& virtual.DOMCursor + prepareCount < index))\r\n\t\t\tscroller.scrollTop = parentNode.children[index - virtual.DOMCursor + 1].offsetTop;\r\n\r\n\t\t// Move cursor\r\n\t\telse {\r\n\t\t\tvar temp = null;\r\n\t\t\tvar ceiling = virtual.dCursor.ceiling;\r\n\t\t\tvar floor = virtual.dCursor.floor;\r\n\t\t\tvar vCursor = virtual.vCursor;\r\n\r\n\t\t\t// DOM tree to virtual DOM\r\n\t\t\tvar length = parentNode.childElementCount - 2;\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\ttemp = ceiling.nextElementSibling;\r\n\r\n\t\t\t\tif(vCursor.floor === null){\r\n\t\t\t\t\tvirtual.dom.insertAdjacentElement('beforeEnd', temp);\r\n\r\n\t\t\t\t\tif(i === length-1)\r\n\t\t\t\t\t\tvCursor.floor = temp;\r\n\t\t\t\t}\r\n\t\t\t\telse vCursor.floor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\r\n\t\t\tif(index >= prepareCount){\r\n\t\t\t\tif(index < list.length - virtual.preparedLength)\r\n\t\t\t\t\tindex -= prepareCount;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treduce = prepareCount - index;\r\n\t\t\t\tvirtual.DOMCursor = index = 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar insertCount = virtual.preparedLength <= list.length ? virtual.preparedLength : list.length;\r\n\r\n\t\t\t// Virtual DOM to DOM tree\r\n\t\t\tfor (var i = 0; i < insertCount; i++) {\r\n\t\t\t\ttemp = virtual.dom.children[index];\r\n\t\t\t\tif(temp === undefined) break;\r\n\r\n\t\t\t\tfloor.insertAdjacentElement('beforeBegin', temp);\r\n\t\t\t}\r\n\t\t\tvirtual.DOMCursor = index;\r\n\r\n\t\t\tvCursor.floor = virtual.dom.children[index] || null;\r\n\t\t\tvCursor.ceiling = vCursor.floor ? vCursor.floor.previousElementSibling : null;\r\n\r\n\t\t\tif(refreshVirtualSpacer)\r\n\t\t\t\trefreshVirtualSpacer(index);\r\n\r\n\t\t\trefreshScrollBounding(index, virtual.bounding, list, parentNode);\r\n\r\n\t\t\ttemp = parentNode.children[prepareCount - reduce + 1];\r\n\t\r\n\t\t\tif(temp !== undefined)\r\n\t\t\t\tscroller.scrollTop = temp.offsetTop - scroller.offsetTop;\r\n\t\t}\r\n\r\n\t\tscrollingByScript = false;\r\n\t}\r\n\r\n\tfunction removeUserScrollFocus(parentNode){\r\n\t\tparentNode.style.overflow = 'hidden';\r\n\t\tsetTimeout(function(){\r\n\t\t\tparentNode.style.overflow = '';\r\n\t\t}, 50);\r\n\t}\r\n\r\n\tfunction getAbsoluteHeight(el){\r\n\t  var styles = window.getComputedStyle(el);\r\n\t  var margin = parseInt(styles['marginTop']) + parseInt(styles['marginBottom']);\r\n\t  return el.offsetHeight + margin || 0;\r\n\t}\r\n\r\n\tfunction obtainElements(list, parentNode){\r\n\t\tvar exist = [];\r\n\t\tvar temp = undefined;\r\n\r\n\t\tvar length = list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = parentNode.childElementCount - 2;\r\n\t\tfor (var i = 1; i <= length; i++) {\r\n\t\t\ttemp = parentNode.children[i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\tlength = list.length - length - list.$virtual.DOMCursor;\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\ttemp = list.$virtual.dom.children[list.$virtual.DOMCursor + i];\r\n\t\t\tif(temp === undefined) break;\r\n\t\t\texist.push(temp);\r\n\t\t}\r\n\r\n\t\treturn exist;\r\n\t}\r\n\r\n\tfunction refresh(force, list, prepareCount, parentNode, scroller, checkCursorPosition, refreshVirtualSpacer){\r\n\t\tvar cursor = list.$virtual.DOMCursor;\r\n\t\tvar additionalScroll = 0;\r\n\r\n\t\t// Find nearest cursor for current view position\r\n\t\tif(force){\r\n\t\t\tvar i = -1;\r\n\t\t\tvar length = list.$virtual.preparedLength;\r\n\r\n\t\t\tdo{\r\n\t\t\t\ti++;\r\n\t\t\t} while(i < length && parentNode.children[i].offsetTop < scroller.scrollTop);\r\n\r\n\t\t\tcursor = cursor + i;\r\n\t\t\tif(cursor > 0) cursor -= 1;\r\n\r\n\t\t\tadditionalScroll = scroller.scrollTop - parentNode.children[i].offsetTop;\r\n\t\t}\r\n\r\n\t\t// Force move cursor if element in the DOM tree was overloaded\r\n\t\tif(force || parentNode.childElementCount - 2 > list.$virtual.preparedLength){\r\n\t\t\tlist.$virtual.DOMCursor = list.length;\r\n\t\t\tvar moveTo = cursor;\r\n\t\t\tif(!force)\r\n\t\t\t\tmoveTo = cursor <= prepareCount ? cursor : (cursor + prepareCount);\r\n\r\n\t\t\tscrollTo(moveTo,\r\n\t\t\t\tlist,\r\n\t\t\t\tprepareCount,\r\n\t\t\t\tparentNode,\r\n\t\t\t\tscroller,\r\n\t\t\t\trefreshVirtualSpacer\r\n\t\t\t);\r\n\r\n\t\t\tscroller.scrollTop += additionalScroll;\r\n\t\t}\r\n\r\n\t\tif(refreshVirtualSpacer)\r\n\t\t\trefreshVirtualSpacer(cursor);\r\n\r\n\t\tif(checkCursorPosition)\r\n\t\t\tcheckCursorPosition();\r\n\r\n\t\trefreshScrollBounding(cursor, list.$virtual.bounding, list, parentNode);\r\n\t}\r\n\r\n\tvar _onElementResize = [];\r\n\tvar _onElementResize_timer = -1;\r\n\tfunction onElementResize(parentNode, callback){\r\n\t\tif(_onElementResize_timer === -1){\r\n\t\t\t_onElementResize_timer = setInterval(function(){\r\n\t\t\t\tvar temp = null;\r\n\t\t\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\t\t\ttemp = _onElementResize[i];\r\n\r\n\t\t\t\t\t// Check resize\r\n\t\t\t\t\tif(temp.element.scrollHeight === temp.height\r\n\t\t\t\t\t\t|| temp.element.scrollWidth === temp.width)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t// Check if it's removed from DOM\r\n\t\t\t\t\tif(temp.element.parentElement === null){\r\n\t\t\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemp.callback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(_onElementResize.length === 0){\r\n\t\t\t\t\tclearInterval(_onElementResize_timer);\r\n\t\t\t\t\t_onElementResize_timer = -1;\r\n\t\t\t\t}\r\n\t\t\t}, 200);\r\n\t\t}\r\n\r\n\t\t_onElementResize.push({\r\n\t\t\telement:parentNode,\r\n\t\t\tcallback:callback,\r\n\t\t\theight:parentNode.scrollHeight,\r\n\t\t\twidth:parentNode.scrollWidth\r\n\t\t});\r\n\t}\r\n\r\n\tfunction offElementResize(parentNode){\r\n\t\tfor (var i = _onElementResize.length - 1; i >= 0; i--) {\r\n\t\t\tif(_onElementResize[i].element === parentNode)\r\n\t\t\t\t_onElementResize.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t// Interval will be cleared when the array is empty\r\n\t}\r\n\r\n\tfunction initStyles(){\r\n\t\tvar style = document.getElementById('sf-styles');\r\n\r\n\t\tif(!style){\r\n\t\t\tstyle = document.createElement('style');\r\n\t\t\tstyle.id = 'sf-styles';\r\n        \tdocument.head.appendChild(style);\r\n\t\t}\r\n\r\n\t\tstyle.sheet.insertRule(\r\n\t\t'.sf-virtual-list .virtual-spacer{'+\r\n            'visibility: hidden;'+\r\n            'position: relative;'+\r\n            'height: 1px;'+\r\n            'transform-origin: 0 0;'+\r\n            'width: 1px;'+\r\n            'margin: 0;'+\r\n            'padding: 0;'+\r\n            'background: none;'+\r\n            'border: none;'+\r\n            'box-shadow: none;'+\r\n         '}');\r\n\t}\r\n};"]}